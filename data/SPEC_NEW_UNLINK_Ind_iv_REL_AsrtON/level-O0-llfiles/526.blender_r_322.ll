; ModuleID = 'blender/source/blender/render/intern/source/convertblender.c'
source_filename = "blender/source/blender/render/intern/source/convertblender.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.RenderSlot = type { [64 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.FluidsimSettings = type { %struct.FluidsimModifierData*, i32, i32, i16, i16, i16, i16, float, i16, i16, float, i16, i16, [3 x float], float, float, i32, i32, i32, i32, float, i32, float, float, float, %struct.Mesh*, %struct.Mesh*, [1024 x i8], [3 x float], [3 x float], %struct.Ipo*, i16, i8, i8, float, i32, float, float, i32, i32, float, float, float, %struct.FluidVertexVelocity*, i32, float, float, float, float, float, float, float, i32, float }
%struct.FluidsimModifierData = type { %struct.ModifierData, %struct.FluidsimSettings*, %struct.PointCache* }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.PointCache = type opaque
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoop = type { i32, i32 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.FluidVertexVelocity = type { [3 x float] }
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.LampRen = type { %struct.LampRen*, %struct.LampRen*, float, float, float, [3 x float], i16, i32, float, float, float, float, float, float, float, float, float, i32, float, float, [3 x float], float, float, float, float, float, float, i16, float, float, %struct.CurveMapping*, i16, i16, float, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, [1 x i16], [1 x i16], float, float, float, float, %struct.SunSky*, %struct.ShadBuf*, float*, [3 x [3 x float]], float, [3 x float], float, [4 x [4 x float]], [3 x [3 x float]], [8 x [3 x float]], float, %struct.LampShadowSample*, [1 x %struct.RayObject*], [18 x %struct.MTex*], i32, i32 }
%struct.SunSky = type { i16, i16, i16, float, float, float, [3 x float], float, float, float, float, [5 x float], [5 x float], [5 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.ShadBuf = type { i16, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float*, float*, float, float, float, float, float, [3 x i32], i32, i32, %struct.ListBase, [1 x %struct.ISBData*] }
%struct.ISBData = type { i16*, %struct.ISBShadfacA**, %struct.MemArena*, i32, i32, i32, i32 }
%struct.ISBShadfacA = type { %struct.ISBShadfacA*, i32, i32, float }
%struct.MemArena = type opaque
%struct.LampShadowSample = type { [16 x %struct.LampShadowSubSample] }
%struct.LampShadowSubSample = type { i32, [4 x float] }
%struct.RayObject = type opaque
%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.RenderEngine = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.DupliObject = type { %struct.DupliObject*, %struct.DupliObject*, %struct.Object*, [4 x [4 x float]], [3 x float], [2 x float], i16, i8, i8, [8 x i32], %struct.ParticleSystem* }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.EffectorWeights = type opaque
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.PTCacheEdit = type opaque
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.KDTree = type opaque
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.DupliApplyData = type { i32, %struct.DupliExtraData* }
%struct.DupliExtraData = type { [4 x [4 x float]], i32 }
%struct.SceneRenderLayer = type { %struct.SceneRenderLayer*, %struct.SceneRenderLayer*, [64 x i8], %struct.Material*, %struct.Group*, i32, i32, i32, i32, i32, i32, i32, float, %struct.FreestyleConfig }
%struct.FreestyleConfig = type { %struct.ListBase, i32, i32, i32, float, float, float, %struct.ListBase }
%struct.VolumeOb = type { %struct.VolumeOb*, %struct.VolumeOb*, %struct.Material*, %struct.ObjectRen* }
%struct.MatInside = type { %struct.MatInside*, %struct.MatInside*, %struct.Material*, %struct.ObjectInstanceRen* }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.ParticleSystemModifierData = type { %struct.ModifierData, %struct.ParticleSystem*, %struct.DerivedMesh*, i32, i32, i32, i16, i16 }
%struct.Lamp = type { %struct.ID, %struct.AnimData*, i16, i16, i32, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.CurveMapping*, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i8, i8, i16, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, [2 x i8], %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [4 x i8], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.ParticleBillboardData = type { %struct.Object*, [3 x float], [3 x float], [2 x float], [2 x float], float, float, float, [3 x i32], i32, i32, i32, i32, i16, i16, i16, i16 }
%struct.ParticleSimulationData = type { %struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.ParticleSystemModifierData*, %struct.ListBase*, float }
%struct.ParticleStrandData = type { %struct.MCol*, float*, float*, float*, float, float, float, float, i32, i32, i32, i32, i32, i32 }
%struct.RNG = type opaque
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.DispList = type { %struct.DispList*, %struct.DispList*, i16, i16, i32, i32, i16, i16, float*, float*, i32*, i32, i32, i32* }
%struct.Nurb = type { %struct.Nurb*, %struct.Nurb*, i16, i16, i16, i16, i32, i32, [2 x i16], i16, i16, i16, i16, i16, i16, float*, float*, %struct.BPoint*, %struct.BezTriple*, i16, i16, i32 }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.edgesort = type { i32, i32, i32, i32, i32 }
%struct.SRenderMeshToTangent = type { %struct.ObjectRen* }
%struct.SMikkTSpaceContext = type { %struct.SMikkTSpaceInterface*, i8* }
%struct.SMikkTSpaceInterface = type { i32 (%struct.SMikkTSpaceContext*)*, i32 (%struct.SMikkTSpaceContext*, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)*, void (%struct.SMikkTSpaceContext*, float*, float*, float, float, i32, i32, i32)* }
%struct.ASvert = type { i32, %struct.ListBase }
%struct.ASface = type { %struct.ASface*, %struct.ASface*, [4 x %struct.VlakRen*], [4 x %struct.VertRen*] }

@G = external dso_local global %struct.Global, align 8
@MEM_printmemlist_stats = external dso_local global void ()*, align 8
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str = private unnamed_addr constant [21 x i8] c"Preparing Scene data\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"render db arena\00", align 1
@slurph_opt = external dso_local global i32, align 4
@.str.2 = private unnamed_addr constant [23 x i8] c"Creating Shadowbuffers\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"Calculating previous frame vectors\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Calculating next frame vectors\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"speed table: missing object %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [79 x i8] c"Warning: object %s has different amount of vertices or strands on other frame\0A\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"bake db arena\00", align 1
@set_dupli_tex_mat.lastob = internal global %struct.Object* null, align 8, !dbg !0
@set_dupli_tex_mat.needtexmat = internal global i32 0, align 4, !dbg !4166
@init_render_object.lasttime = internal global double 0.000000e+00, align 8, !dbg !4168
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.8 = private unnamed_addr constant [12 x i8] c"groupobject\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"lampren\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"sunskyren\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.11 = private unnamed_addr constant [19 x i8] c"lamp shadow sample\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"initshadbuf\00", align 1
@CD_MASK_BAREMESH = external dso_local constant i64, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"particle_uvs\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"particle_mcols\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"particle orcos\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"StrandBound\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"particle orco\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"set_object_orco gh\00", align 1
@PSYS_FRAND_SEED_OFFSET = external dso_local global [1024 x i32], align 16
@PSYS_FRAND_SEED_MULTIPLIER = external dso_local global [1024 x i32], align 16
@PSYS_FRAND_BASE = external dso_local global [1024 x float], align 16
@static_particle_wire.v1 = internal global %struct.VertRen* null, align 8, !dbg !4174
@static_particle_strand.v1 = internal global %struct.VertRen* null, align 8, !dbg !4181
@static_particle_strand.v2 = internal global %struct.VertRen* null, align 8, !dbg !4204
@static_particle_strand.anor = internal global [3 x float] zeroinitializer, align 4, !dbg !4206
@static_particle_strand.avec = internal global [3 x float] zeroinitializer, align 4, !dbg !4208
@static_particle_strand.second = internal global i32 0, align 4, !dbg !4210
@.str.19 = private unnamed_addr constant [23 x i8] c"init_render_surf matar\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@__func__.init_render_mesh = private unnamed_addr constant [17 x i8] c"init_render_mesh\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"edgesort\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"temp accum for stress\00", align 1
@__const.displace.scale = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@.str.22 = private unnamed_addr constant [17 x i8] c"all smooth verts\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"asface\00", align 1
@defmaterial = external dso_local global %struct.Material, align 8
@.str.24 = private unnamed_addr constant [14 x i8] c"volume object\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"sorthalos\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"camera inside material\00", align 1
@speedvector_project.pixelphix = internal global float 0.000000e+00, align 4, !dbg !4212
@speedvector_project.pixelphiy = internal global float 0.000000e+00, align 4, !dbg !4217
@speedvector_project.zmulx = internal global float 0.000000e+00, align 4, !dbg !4219
@speedvector_project.zmuly = internal global float 0.000000e+00, align 4, !dbg !4221
@speedvector_project.pano = internal global i32 0, align 4, !dbg !4223
@.str.27 = private unnamed_addr constant [23 x i8] c"vector render db arena\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"ObInstanceVector\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"vector array\00", align 1
@.str.30 = private unnamed_addr constant [14 x i8] c"StrandSurfWin\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @area_lamp_vectors(%struct.LampRen* %lar) #0 !dbg !4229 {
entry:
  %lar.addr = alloca %struct.LampRen*, align 8
  %xsize = alloca float, align 4
  %ysize = alloca float, align 4
  %multifac = alloca float, align 4
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata float* %xsize, metadata !4234, metadata !DIExpression()), !dbg !4235
  %0 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4236
  %area_size = getelementptr inbounds %struct.LampRen, %struct.LampRen* %0, i32 0, i32 52, !dbg !4237
  %1 = load float, float* %area_size, align 8, !dbg !4237
  %mul = fmul float 5.000000e-01, %1, !dbg !4238
  store float %mul, float* %xsize, align 4, !dbg !4235
  call void @llvm.dbg.declare(metadata float* %ysize, metadata !4239, metadata !DIExpression()), !dbg !4240
  %2 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4241
  %area_sizey = getelementptr inbounds %struct.LampRen, %struct.LampRen* %2, i32 0, i32 53, !dbg !4242
  %3 = load float, float* %area_sizey, align 4, !dbg !4242
  %mul1 = fmul float 5.000000e-01, %3, !dbg !4243
  store float %mul1, float* %ysize, align 4, !dbg !4240
  call void @llvm.dbg.declare(metadata float* %multifac, metadata !4244, metadata !DIExpression()), !dbg !4245
  %4 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4246
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %4, i32 0, i32 49, !dbg !4247
  %5 = load i16, i16* %ray_totsamp, align 8, !dbg !4247
  %conv = sitofp i16 %5 to float, !dbg !4248
  %call = call float @sqrtf(float %conv) #5, !dbg !4249
  %div = fdiv float 1.000000e+00, %call, !dbg !4250
  store float %div, float* %multifac, align 4, !dbg !4251
  %6 = load float, float* %multifac, align 4, !dbg !4252
  %7 = load float, float* %xsize, align 4, !dbg !4253
  %mul2 = fmul float %7, %6, !dbg !4253
  store float %mul2, float* %xsize, align 4, !dbg !4253
  %8 = load float, float* %multifac, align 4, !dbg !4254
  %9 = load float, float* %ysize, align 4, !dbg !4255
  %mul3 = fmul float %9, %8, !dbg !4255
  store float %mul3, float* %ysize, align 4, !dbg !4255
  %10 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4256
  %co = getelementptr inbounds %struct.LampRen, %struct.LampRen* %10, i32 0, i32 5, !dbg !4257
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4256
  %11 = load float, float* %arrayidx, align 4, !dbg !4256
  %12 = load float, float* %xsize, align 4, !dbg !4258
  %13 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4259
  %mat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %13, i32 0, i32 64, !dbg !4260
  %arrayidx4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat, i64 0, i64 0, !dbg !4259
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx4, i64 0, i64 0, !dbg !4259
  %14 = load float, float* %arrayidx5, align 8, !dbg !4259
  %mul6 = fmul float %12, %14, !dbg !4261
  %sub = fsub float %11, %mul6, !dbg !4262
  %15 = load float, float* %ysize, align 4, !dbg !4263
  %16 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4264
  %mat7 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %16, i32 0, i32 64, !dbg !4265
  %arrayidx8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat7, i64 0, i64 1, !dbg !4264
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !4264
  %17 = load float, float* %arrayidx9, align 4, !dbg !4264
  %mul10 = fmul float %15, %17, !dbg !4266
  %sub11 = fsub float %sub, %mul10, !dbg !4267
  %18 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4268
  %area = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 65, !dbg !4269
  %arrayidx12 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area, i64 0, i64 0, !dbg !4268
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !4268
  store float %sub11, float* %arrayidx13, align 4, !dbg !4270
  %19 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4271
  %co14 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %19, i32 0, i32 5, !dbg !4272
  %arrayidx15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 1, !dbg !4271
  %20 = load float, float* %arrayidx15, align 4, !dbg !4271
  %21 = load float, float* %xsize, align 4, !dbg !4273
  %22 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4274
  %mat16 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %22, i32 0, i32 64, !dbg !4275
  %arrayidx17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat16, i64 0, i64 0, !dbg !4274
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx17, i64 0, i64 1, !dbg !4274
  %23 = load float, float* %arrayidx18, align 4, !dbg !4274
  %mul19 = fmul float %21, %23, !dbg !4276
  %sub20 = fsub float %20, %mul19, !dbg !4277
  %24 = load float, float* %ysize, align 4, !dbg !4278
  %25 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4279
  %mat21 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %25, i32 0, i32 64, !dbg !4280
  %arrayidx22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat21, i64 0, i64 1, !dbg !4279
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 1, !dbg !4279
  %26 = load float, float* %arrayidx23, align 4, !dbg !4279
  %mul24 = fmul float %24, %26, !dbg !4281
  %sub25 = fsub float %sub20, %mul24, !dbg !4282
  %27 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4283
  %area26 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %27, i32 0, i32 65, !dbg !4284
  %arrayidx27 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area26, i64 0, i64 0, !dbg !4283
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 1, !dbg !4283
  store float %sub25, float* %arrayidx28, align 4, !dbg !4285
  %28 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4286
  %co29 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %28, i32 0, i32 5, !dbg !4287
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co29, i64 0, i64 2, !dbg !4286
  %29 = load float, float* %arrayidx30, align 4, !dbg !4286
  %30 = load float, float* %xsize, align 4, !dbg !4288
  %31 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4289
  %mat31 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 64, !dbg !4290
  %arrayidx32 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat31, i64 0, i64 0, !dbg !4289
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 2, !dbg !4289
  %32 = load float, float* %arrayidx33, align 8, !dbg !4289
  %mul34 = fmul float %30, %32, !dbg !4291
  %sub35 = fsub float %29, %mul34, !dbg !4292
  %33 = load float, float* %ysize, align 4, !dbg !4293
  %34 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4294
  %mat36 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %34, i32 0, i32 64, !dbg !4295
  %arrayidx37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat36, i64 0, i64 1, !dbg !4294
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 2, !dbg !4294
  %35 = load float, float* %arrayidx38, align 4, !dbg !4294
  %mul39 = fmul float %33, %35, !dbg !4296
  %sub40 = fsub float %sub35, %mul39, !dbg !4297
  %36 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4298
  %area41 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %36, i32 0, i32 65, !dbg !4299
  %arrayidx42 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area41, i64 0, i64 0, !dbg !4298
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 2, !dbg !4298
  store float %sub40, float* %arrayidx43, align 4, !dbg !4300
  %37 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4301
  %co44 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 5, !dbg !4302
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !4301
  %38 = load float, float* %arrayidx45, align 4, !dbg !4301
  %39 = load float, float* %xsize, align 4, !dbg !4303
  %40 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4304
  %mat46 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %40, i32 0, i32 64, !dbg !4305
  %arrayidx47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat46, i64 0, i64 0, !dbg !4304
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx47, i64 0, i64 0, !dbg !4304
  %41 = load float, float* %arrayidx48, align 8, !dbg !4304
  %mul49 = fmul float %39, %41, !dbg !4306
  %sub50 = fsub float %38, %mul49, !dbg !4307
  %42 = load float, float* %ysize, align 4, !dbg !4308
  %43 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4309
  %mat51 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %43, i32 0, i32 64, !dbg !4310
  %arrayidx52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat51, i64 0, i64 1, !dbg !4309
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !4309
  %44 = load float, float* %arrayidx53, align 4, !dbg !4309
  %mul54 = fmul float %42, %44, !dbg !4311
  %add = fadd float %sub50, %mul54, !dbg !4312
  %45 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4313
  %area55 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %45, i32 0, i32 65, !dbg !4314
  %arrayidx56 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area55, i64 0, i64 1, !dbg !4313
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx56, i64 0, i64 0, !dbg !4313
  store float %add, float* %arrayidx57, align 4, !dbg !4315
  %46 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4316
  %co58 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %46, i32 0, i32 5, !dbg !4317
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %co58, i64 0, i64 1, !dbg !4316
  %47 = load float, float* %arrayidx59, align 4, !dbg !4316
  %48 = load float, float* %xsize, align 4, !dbg !4318
  %49 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4319
  %mat60 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %49, i32 0, i32 64, !dbg !4320
  %arrayidx61 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat60, i64 0, i64 0, !dbg !4319
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx61, i64 0, i64 1, !dbg !4319
  %50 = load float, float* %arrayidx62, align 4, !dbg !4319
  %mul63 = fmul float %48, %50, !dbg !4321
  %sub64 = fsub float %47, %mul63, !dbg !4322
  %51 = load float, float* %ysize, align 4, !dbg !4323
  %52 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4324
  %mat65 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %52, i32 0, i32 64, !dbg !4325
  %arrayidx66 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat65, i64 0, i64 1, !dbg !4324
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx66, i64 0, i64 1, !dbg !4324
  %53 = load float, float* %arrayidx67, align 4, !dbg !4324
  %mul68 = fmul float %51, %53, !dbg !4326
  %add69 = fadd float %sub64, %mul68, !dbg !4327
  %54 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4328
  %area70 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %54, i32 0, i32 65, !dbg !4329
  %arrayidx71 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area70, i64 0, i64 1, !dbg !4328
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx71, i64 0, i64 1, !dbg !4328
  store float %add69, float* %arrayidx72, align 4, !dbg !4330
  %55 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4331
  %co73 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %55, i32 0, i32 5, !dbg !4332
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 2, !dbg !4331
  %56 = load float, float* %arrayidx74, align 4, !dbg !4331
  %57 = load float, float* %xsize, align 4, !dbg !4333
  %58 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4334
  %mat75 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %58, i32 0, i32 64, !dbg !4335
  %arrayidx76 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat75, i64 0, i64 0, !dbg !4334
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx76, i64 0, i64 2, !dbg !4334
  %59 = load float, float* %arrayidx77, align 8, !dbg !4334
  %mul78 = fmul float %57, %59, !dbg !4336
  %sub79 = fsub float %56, %mul78, !dbg !4337
  %60 = load float, float* %ysize, align 4, !dbg !4338
  %61 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4339
  %mat80 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %61, i32 0, i32 64, !dbg !4340
  %arrayidx81 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat80, i64 0, i64 1, !dbg !4339
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx81, i64 0, i64 2, !dbg !4339
  %62 = load float, float* %arrayidx82, align 4, !dbg !4339
  %mul83 = fmul float %60, %62, !dbg !4341
  %add84 = fadd float %sub79, %mul83, !dbg !4342
  %63 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4343
  %area85 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %63, i32 0, i32 65, !dbg !4344
  %arrayidx86 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area85, i64 0, i64 1, !dbg !4343
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx86, i64 0, i64 2, !dbg !4343
  store float %add84, float* %arrayidx87, align 4, !dbg !4345
  %64 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4346
  %co88 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %64, i32 0, i32 5, !dbg !4347
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %co88, i64 0, i64 0, !dbg !4346
  %65 = load float, float* %arrayidx89, align 4, !dbg !4346
  %66 = load float, float* %xsize, align 4, !dbg !4348
  %67 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4349
  %mat90 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %67, i32 0, i32 64, !dbg !4350
  %arrayidx91 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat90, i64 0, i64 0, !dbg !4349
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx91, i64 0, i64 0, !dbg !4349
  %68 = load float, float* %arrayidx92, align 8, !dbg !4349
  %mul93 = fmul float %66, %68, !dbg !4351
  %add94 = fadd float %65, %mul93, !dbg !4352
  %69 = load float, float* %ysize, align 4, !dbg !4353
  %70 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4354
  %mat95 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %70, i32 0, i32 64, !dbg !4355
  %arrayidx96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat95, i64 0, i64 1, !dbg !4354
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx96, i64 0, i64 0, !dbg !4354
  %71 = load float, float* %arrayidx97, align 4, !dbg !4354
  %mul98 = fmul float %69, %71, !dbg !4356
  %add99 = fadd float %add94, %mul98, !dbg !4357
  %72 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4358
  %area100 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %72, i32 0, i32 65, !dbg !4359
  %arrayidx101 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area100, i64 0, i64 2, !dbg !4358
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !4358
  store float %add99, float* %arrayidx102, align 4, !dbg !4360
  %73 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4361
  %co103 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %73, i32 0, i32 5, !dbg !4362
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %co103, i64 0, i64 1, !dbg !4361
  %74 = load float, float* %arrayidx104, align 4, !dbg !4361
  %75 = load float, float* %xsize, align 4, !dbg !4363
  %76 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4364
  %mat105 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %76, i32 0, i32 64, !dbg !4365
  %arrayidx106 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat105, i64 0, i64 0, !dbg !4364
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 1, !dbg !4364
  %77 = load float, float* %arrayidx107, align 4, !dbg !4364
  %mul108 = fmul float %75, %77, !dbg !4366
  %add109 = fadd float %74, %mul108, !dbg !4367
  %78 = load float, float* %ysize, align 4, !dbg !4368
  %79 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4369
  %mat110 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %79, i32 0, i32 64, !dbg !4370
  %arrayidx111 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat110, i64 0, i64 1, !dbg !4369
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx111, i64 0, i64 1, !dbg !4369
  %80 = load float, float* %arrayidx112, align 4, !dbg !4369
  %mul113 = fmul float %78, %80, !dbg !4371
  %add114 = fadd float %add109, %mul113, !dbg !4372
  %81 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4373
  %area115 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %81, i32 0, i32 65, !dbg !4374
  %arrayidx116 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area115, i64 0, i64 2, !dbg !4373
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx116, i64 0, i64 1, !dbg !4373
  store float %add114, float* %arrayidx117, align 4, !dbg !4375
  %82 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4376
  %co118 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %82, i32 0, i32 5, !dbg !4377
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 2, !dbg !4376
  %83 = load float, float* %arrayidx119, align 4, !dbg !4376
  %84 = load float, float* %xsize, align 4, !dbg !4378
  %85 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4379
  %mat120 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %85, i32 0, i32 64, !dbg !4380
  %arrayidx121 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat120, i64 0, i64 0, !dbg !4379
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx121, i64 0, i64 2, !dbg !4379
  %86 = load float, float* %arrayidx122, align 8, !dbg !4379
  %mul123 = fmul float %84, %86, !dbg !4381
  %add124 = fadd float %83, %mul123, !dbg !4382
  %87 = load float, float* %ysize, align 4, !dbg !4383
  %88 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4384
  %mat125 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %88, i32 0, i32 64, !dbg !4385
  %arrayidx126 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat125, i64 0, i64 1, !dbg !4384
  %arrayidx127 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx126, i64 0, i64 2, !dbg !4384
  %89 = load float, float* %arrayidx127, align 4, !dbg !4384
  %mul128 = fmul float %87, %89, !dbg !4386
  %add129 = fadd float %add124, %mul128, !dbg !4387
  %90 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4388
  %area130 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %90, i32 0, i32 65, !dbg !4389
  %arrayidx131 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area130, i64 0, i64 2, !dbg !4388
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx131, i64 0, i64 2, !dbg !4388
  store float %add129, float* %arrayidx132, align 4, !dbg !4390
  %91 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4391
  %co133 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %91, i32 0, i32 5, !dbg !4392
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %co133, i64 0, i64 0, !dbg !4391
  %92 = load float, float* %arrayidx134, align 4, !dbg !4391
  %93 = load float, float* %xsize, align 4, !dbg !4393
  %94 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4394
  %mat135 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %94, i32 0, i32 64, !dbg !4395
  %arrayidx136 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat135, i64 0, i64 0, !dbg !4394
  %arrayidx137 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx136, i64 0, i64 0, !dbg !4394
  %95 = load float, float* %arrayidx137, align 8, !dbg !4394
  %mul138 = fmul float %93, %95, !dbg !4396
  %add139 = fadd float %92, %mul138, !dbg !4397
  %96 = load float, float* %ysize, align 4, !dbg !4398
  %97 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4399
  %mat140 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %97, i32 0, i32 64, !dbg !4400
  %arrayidx141 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat140, i64 0, i64 1, !dbg !4399
  %arrayidx142 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx141, i64 0, i64 0, !dbg !4399
  %98 = load float, float* %arrayidx142, align 4, !dbg !4399
  %mul143 = fmul float %96, %98, !dbg !4401
  %sub144 = fsub float %add139, %mul143, !dbg !4402
  %99 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4403
  %area145 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %99, i32 0, i32 65, !dbg !4404
  %arrayidx146 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area145, i64 0, i64 3, !dbg !4403
  %arrayidx147 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx146, i64 0, i64 0, !dbg !4403
  store float %sub144, float* %arrayidx147, align 4, !dbg !4405
  %100 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4406
  %co148 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %100, i32 0, i32 5, !dbg !4407
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %co148, i64 0, i64 1, !dbg !4406
  %101 = load float, float* %arrayidx149, align 4, !dbg !4406
  %102 = load float, float* %xsize, align 4, !dbg !4408
  %103 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4409
  %mat150 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %103, i32 0, i32 64, !dbg !4410
  %arrayidx151 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat150, i64 0, i64 0, !dbg !4409
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx151, i64 0, i64 1, !dbg !4409
  %104 = load float, float* %arrayidx152, align 4, !dbg !4409
  %mul153 = fmul float %102, %104, !dbg !4411
  %add154 = fadd float %101, %mul153, !dbg !4412
  %105 = load float, float* %ysize, align 4, !dbg !4413
  %106 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4414
  %mat155 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %106, i32 0, i32 64, !dbg !4415
  %arrayidx156 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat155, i64 0, i64 1, !dbg !4414
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx156, i64 0, i64 1, !dbg !4414
  %107 = load float, float* %arrayidx157, align 4, !dbg !4414
  %mul158 = fmul float %105, %107, !dbg !4416
  %sub159 = fsub float %add154, %mul158, !dbg !4417
  %108 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4418
  %area160 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %108, i32 0, i32 65, !dbg !4419
  %arrayidx161 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area160, i64 0, i64 3, !dbg !4418
  %arrayidx162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 1, !dbg !4418
  store float %sub159, float* %arrayidx162, align 4, !dbg !4420
  %109 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4421
  %co163 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %109, i32 0, i32 5, !dbg !4422
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %co163, i64 0, i64 2, !dbg !4421
  %110 = load float, float* %arrayidx164, align 4, !dbg !4421
  %111 = load float, float* %xsize, align 4, !dbg !4423
  %112 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4424
  %mat165 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %112, i32 0, i32 64, !dbg !4425
  %arrayidx166 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat165, i64 0, i64 0, !dbg !4424
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx166, i64 0, i64 2, !dbg !4424
  %113 = load float, float* %arrayidx167, align 8, !dbg !4424
  %mul168 = fmul float %111, %113, !dbg !4426
  %add169 = fadd float %110, %mul168, !dbg !4427
  %114 = load float, float* %ysize, align 4, !dbg !4428
  %115 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4429
  %mat170 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %115, i32 0, i32 64, !dbg !4430
  %arrayidx171 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat170, i64 0, i64 1, !dbg !4429
  %arrayidx172 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx171, i64 0, i64 2, !dbg !4429
  %116 = load float, float* %arrayidx172, align 4, !dbg !4429
  %mul173 = fmul float %114, %116, !dbg !4431
  %sub174 = fsub float %add169, %mul173, !dbg !4432
  %117 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4433
  %area175 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %117, i32 0, i32 65, !dbg !4434
  %arrayidx176 = getelementptr inbounds [8 x [3 x float]], [8 x [3 x float]]* %area175, i64 0, i64 3, !dbg !4433
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx176, i64 0, i64 2, !dbg !4433
  store float %sub174, float* %arrayidx177, align 4, !dbg !4435
  %118 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4436
  %dist = getelementptr inbounds %struct.LampRen, %struct.LampRen* %118, i32 0, i32 4, !dbg !4437
  %119 = load float, float* %dist, align 8, !dbg !4437
  %120 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4438
  %dist178 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %120, i32 0, i32 4, !dbg !4439
  %121 = load float, float* %dist178, align 8, !dbg !4439
  %mul179 = fmul float %119, %121, !dbg !4440
  %122 = load float, float* %xsize, align 4, !dbg !4441
  %mul180 = fmul float 4.000000e+00, %122, !dbg !4442
  %123 = load float, float* %ysize, align 4, !dbg !4443
  %mul181 = fmul float %mul180, %123, !dbg !4444
  %div182 = fdiv float %mul179, %mul181, !dbg !4445
  %124 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !4446
  %areasize = getelementptr inbounds %struct.LampRen, %struct.LampRen* %124, i32 0, i32 66, !dbg !4447
  store float %div182, float* %areasize, align 4, !dbg !4448
  ret void, !dbg !4449
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_render_world(%struct.Render* %re) #0 !dbg !4450 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %wrld_prev = alloca [2 x i8*], align 16
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4453, metadata !DIExpression()), !dbg !4454
  call void @llvm.dbg.declare(metadata [2 x i8*]* %wrld_prev, metadata !4455, metadata !DIExpression()), !dbg !4457
  %arrayinit.begin = getelementptr inbounds [2 x i8*], [2 x i8*]* %wrld_prev, i64 0, i64 0, !dbg !4458
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4459
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 46, !dbg !4460
  %aotables = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 68, !dbg !4461
  %1 = load float*, float** %aotables, align 8, !dbg !4461
  %2 = bitcast float* %1 to i8*, !dbg !4459
  store i8* %2, i8** %arrayinit.begin, align 8, !dbg !4458
  %arrayinit.element = getelementptr inbounds i8*, i8** %arrayinit.begin, i64 1, !dbg !4458
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4462
  %wrld1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 46, !dbg !4463
  %aosphere = getelementptr inbounds %struct.World, %struct.World* %wrld1, i32 0, i32 67, !dbg !4464
  %4 = load float*, float** %aosphere, align 8, !dbg !4464
  %5 = bitcast float* %4 to i8*, !dbg !4462
  store i8* %5, i8** %arrayinit.element, align 8, !dbg !4458
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4465, metadata !DIExpression()), !dbg !4466
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4467
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 44, !dbg !4469
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4469
  %tobool = icmp ne %struct.Scene* %7, null, !dbg !4467
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4470

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4471
  %scene2 = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 44, !dbg !4472
  %9 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !4472
  %world = getelementptr inbounds %struct.Scene, %struct.Scene* %9, i32 0, i32 3, !dbg !4473
  %10 = load %struct.World*, %struct.World** %world, align 8, !dbg !4473
  %tobool3 = icmp ne %struct.World* %10, null, !dbg !4471
  br i1 %tobool3, label %if.then, label %if.else, !dbg !4474

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4475
  %wrld4 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 46, !dbg !4477
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4478
  %scene5 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 44, !dbg !4479
  %13 = load %struct.Scene*, %struct.Scene** %scene5, align 8, !dbg !4479
  %world6 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 3, !dbg !4480
  %14 = load %struct.World*, %struct.World** %world6, align 8, !dbg !4480
  %15 = bitcast %struct.World* %wrld4 to i8*, !dbg !4481
  %16 = bitcast %struct.World* %14 to i8*, !dbg !4481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 528, i1 false), !dbg !4481
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4482
  %grvec = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 30, !dbg !4483
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %grvec, i64 0, i64 0, !dbg !4482
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4484
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 32, !dbg !4485
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 2, !dbg !4484
  %arraydecay7 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !4484
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay7), !dbg !4486
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4487
  %grvec8 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 30, !dbg !4488
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %grvec8, i64 0, i64 0, !dbg !4487
  %call = call float @normalize_v3(float* %arraydecay9), !dbg !4489
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4490
  %imat = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 31, !dbg !4491
  %arraydecay10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !4490
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4492
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 33, !dbg !4493
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !4492
  call void @copy_m3_m4([3 x float]* %arraydecay10, [4 x float]* %arraydecay11), !dbg !4494
  store i32 0, i32* %a, align 4, !dbg !4495
  br label %for.cond, !dbg !4497

for.cond:                                         ; preds = %for.inc, %if.then
  %22 = load i32, i32* %a, align 4, !dbg !4498
  %cmp = icmp slt i32 %22, 18, !dbg !4500
  br i1 %cmp, label %for.body, label %for.end, !dbg !4501

for.body:                                         ; preds = %for.cond
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4502
  %wrld12 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 46, !dbg !4504
  %mtex = getelementptr inbounds %struct.World, %struct.World* %wrld12, i32 0, i32 70, !dbg !4505
  %24 = load i32, i32* %a, align 4, !dbg !4506
  %idxprom = sext i32 %24 to i64, !dbg !4502
  %arrayidx13 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !4502
  %25 = load %struct.MTex*, %struct.MTex** %arrayidx13, align 8, !dbg !4502
  %tobool14 = icmp ne %struct.MTex* %25, null, !dbg !4502
  br i1 %tobool14, label %land.lhs.true15, label %if.end, !dbg !4507

land.lhs.true15:                                  ; preds = %for.body
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4508
  %wrld16 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 46, !dbg !4509
  %mtex17 = getelementptr inbounds %struct.World, %struct.World* %wrld16, i32 0, i32 70, !dbg !4510
  %27 = load i32, i32* %a, align 4, !dbg !4511
  %idxprom18 = sext i32 %27 to i64, !dbg !4508
  %arrayidx19 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex17, i64 0, i64 %idxprom18, !dbg !4508
  %28 = load %struct.MTex*, %struct.MTex** %arrayidx19, align 8, !dbg !4508
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %28, i32 0, i32 5, !dbg !4512
  %29 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !4512
  %tobool20 = icmp ne %struct.Tex* %29, null, !dbg !4508
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !4513

if.then21:                                        ; preds = %land.lhs.true15
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4514
  %wrld22 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 46, !dbg !4515
  %skytype = getelementptr inbounds %struct.World, %struct.World* %wrld22, i32 0, i32 22, !dbg !4516
  %31 = load i16, i16* %skytype, align 8, !dbg !4517
  %conv = sext i16 %31 to i32, !dbg !4517
  %or = or i32 %conv, 8, !dbg !4517
  %conv23 = trunc i32 %or to i16, !dbg !4517
  store i16 %conv23, i16* %skytype, align 8, !dbg !4517
  br label %if.end, !dbg !4514

if.end:                                           ; preds = %if.then21, %land.lhs.true15, %for.body
  br label %for.inc, !dbg !4512

for.inc:                                          ; preds = %if.end
  %32 = load i32, i32* %a, align 4, !dbg !4518
  %inc = add nsw i32 %32, 1, !dbg !4518
  store i32 %inc, i32* %a, align 4, !dbg !4518
  br label %for.cond, !dbg !4519, !llvm.loop !4520

for.end:                                          ; preds = %for.cond
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4522
  %osa = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 5, !dbg !4524
  %34 = load i16, i16* %osa, align 2, !dbg !4524
  %tobool24 = icmp ne i16 %34, 0, !dbg !4522
  br i1 %tobool24, label %if.then25, label %if.end38, !dbg !4525

if.then25:                                        ; preds = %for.end
  br label %while.cond, !dbg !4526

while.cond:                                       ; preds = %while.body, %if.then25
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4527
  %wrld26 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 46, !dbg !4528
  %aosamp = getelementptr inbounds %struct.World, %struct.World* %wrld26, i32 0, i32 51, !dbg !4529
  %36 = load i16, i16* %aosamp, align 2, !dbg !4529
  %conv27 = sext i16 %36 to i32, !dbg !4527
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4530
  %wrld28 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 46, !dbg !4531
  %aosamp29 = getelementptr inbounds %struct.World, %struct.World* %wrld28, i32 0, i32 51, !dbg !4532
  %38 = load i16, i16* %aosamp29, align 2, !dbg !4532
  %conv30 = sext i16 %38 to i32, !dbg !4530
  %mul = mul nsw i32 %conv27, %conv30, !dbg !4533
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4534
  %osa31 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 5, !dbg !4535
  %40 = load i16, i16* %osa31, align 2, !dbg !4535
  %conv32 = sext i16 %40 to i32, !dbg !4534
  %cmp33 = icmp slt i32 %mul, %conv32, !dbg !4536
  br i1 %cmp33, label %while.body, label %while.end, !dbg !4526

while.body:                                       ; preds = %while.cond
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4537
  %wrld35 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 46, !dbg !4538
  %aosamp36 = getelementptr inbounds %struct.World, %struct.World* %wrld35, i32 0, i32 51, !dbg !4539
  %42 = load i16, i16* %aosamp36, align 2, !dbg !4540
  %inc37 = add i16 %42, 1, !dbg !4540
  store i16 %inc37, i16* %aosamp36, align 2, !dbg !4540
  br label %while.cond, !dbg !4526, !llvm.loop !4541

while.end:                                        ; preds = %while.cond
  br label %if.end38, !dbg !4526

if.end38:                                         ; preds = %while.end, %for.end
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4542
  %r = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 45, !dbg !4544
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !4545
  %44 = load i32, i32* %mode, align 8, !dbg !4545
  %and = and i32 %44, 65536, !dbg !4546
  %tobool39 = icmp ne i32 %and, 0, !dbg !4546
  br i1 %tobool39, label %if.end51, label %land.lhs.true40, !dbg !4547

land.lhs.true40:                                  ; preds = %if.end38
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4548
  %wrld41 = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 46, !dbg !4549
  %ao_gather_method = getelementptr inbounds %struct.World, %struct.World* %wrld41, i32 0, i32 64, !dbg !4550
  %46 = load i16, i16* %ao_gather_method, align 2, !dbg !4550
  %conv42 = sext i16 %46 to i32, !dbg !4548
  %cmp43 = icmp eq i32 %conv42, 0, !dbg !4551
  br i1 %cmp43, label %if.then45, label %if.end51, !dbg !4552

if.then45:                                        ; preds = %land.lhs.true40
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4553
  %wrld46 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 46, !dbg !4554
  %mode47 = getelementptr inbounds %struct.World, %struct.World* %wrld46, i32 0, i32 23, !dbg !4555
  %48 = load i16, i16* %mode47, align 2, !dbg !4556
  %conv48 = sext i16 %48 to i32, !dbg !4556
  %and49 = and i32 %conv48, -209, !dbg !4556
  %conv50 = trunc i32 %and49 to i16, !dbg !4556
  store i16 %conv50, i16* %mode47, align 2, !dbg !4556
  br label %if.end51, !dbg !4553

if.end51:                                         ; preds = %if.then45, %land.lhs.true40, %if.end38
  br label %if.end59, !dbg !4557

if.else:                                          ; preds = %land.lhs.true, %entry
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4558
  %wrld52 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 46, !dbg !4560
  %50 = bitcast %struct.World* %wrld52 to i8*, !dbg !4561
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 528, i1 false), !dbg !4561
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4562
  %wrld53 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 46, !dbg !4563
  %exp = getelementptr inbounds %struct.World, %struct.World* %wrld53, i32 0, i32 16, !dbg !4564
  store float 0.000000e+00, float* %exp, align 8, !dbg !4565
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4566
  %wrld54 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 46, !dbg !4567
  %range = getelementptr inbounds %struct.World, %struct.World* %wrld54, i32 0, i32 17, !dbg !4568
  store float 1.000000e+00, float* %range, align 4, !dbg !4569
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4570
  %clipsta = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 36, !dbg !4571
  %54 = load float, float* %clipsta, align 8, !dbg !4571
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4572
  %wrld55 = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 46, !dbg !4573
  %miststa = getelementptr inbounds %struct.World, %struct.World* %wrld55, i32 0, i32 31, !dbg !4574
  store float %54, float* %miststa, align 4, !dbg !4575
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4576
  %clipend = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 37, !dbg !4577
  %57 = load float, float* %clipend, align 4, !dbg !4577
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4578
  %clipsta56 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 36, !dbg !4579
  %59 = load float, float* %clipsta56, align 8, !dbg !4579
  %sub = fsub float %57, %59, !dbg !4580
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4581
  %wrld57 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 46, !dbg !4582
  %mistdist = getelementptr inbounds %struct.World, %struct.World* %wrld57, i32 0, i32 32, !dbg !4583
  store float %sub, float* %mistdist, align 8, !dbg !4584
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4585
  %wrld58 = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 46, !dbg !4586
  %misi = getelementptr inbounds %struct.World, %struct.World* %wrld58, i32 0, i32 30, !dbg !4587
  store float 1.000000e+00, float* %misi, align 8, !dbg !4588
  br label %if.end59

if.end59:                                         ; preds = %if.else, %if.end51
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4589
  %wrld60 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 46, !dbg !4590
  %exp61 = getelementptr inbounds %struct.World, %struct.World* %wrld60, i32 0, i32 16, !dbg !4591
  %63 = load float, float* %exp61, align 8, !dbg !4591
  %mul62 = fmul float 2.000000e+00, %63, !dbg !4592
  %add = fadd float %mul62, 5.000000e-01, !dbg !4593
  %call63 = call float @powf(float %add, float -1.000000e+01) #5, !dbg !4594
  %add64 = fadd float 1.000000e+00, %call63, !dbg !4595
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4596
  %wrld65 = getelementptr inbounds %struct.Render, %struct.Render* %64, i32 0, i32 46, !dbg !4597
  %linfac = getelementptr inbounds %struct.World, %struct.World* %wrld65, i32 0, i32 18, !dbg !4598
  store float %add64, float* %linfac, align 8, !dbg !4599
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4600
  %wrld66 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 46, !dbg !4601
  %linfac67 = getelementptr inbounds %struct.World, %struct.World* %wrld66, i32 0, i32 18, !dbg !4602
  %66 = load float, float* %linfac67, align 8, !dbg !4602
  %sub68 = fsub float %66, 1.000000e+00, !dbg !4603
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4604
  %wrld69 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 46, !dbg !4605
  %linfac70 = getelementptr inbounds %struct.World, %struct.World* %wrld69, i32 0, i32 18, !dbg !4606
  %68 = load float, float* %linfac70, align 8, !dbg !4606
  %div = fdiv float %sub68, %68, !dbg !4607
  %call71 = call float @logf(float %div) #5, !dbg !4608
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4609
  %wrld72 = getelementptr inbounds %struct.Render, %struct.Render* %69, i32 0, i32 46, !dbg !4610
  %range73 = getelementptr inbounds %struct.World, %struct.World* %wrld72, i32 0, i32 17, !dbg !4611
  %70 = load float, float* %range73, align 4, !dbg !4611
  %div74 = fdiv float %call71, %70, !dbg !4612
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4613
  %wrld75 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 46, !dbg !4614
  %logfac = getelementptr inbounds %struct.World, %struct.World* %wrld75, i32 0, i32 19, !dbg !4615
  store float %div74, float* %logfac, align 4, !dbg !4616
  %arrayidx76 = getelementptr inbounds [2 x i8*], [2 x i8*]* %wrld_prev, i64 0, i64 0, !dbg !4617
  %72 = load i8*, i8** %arrayidx76, align 16, !dbg !4617
  %73 = bitcast i8* %72 to float*, !dbg !4617
  %74 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4618
  %wrld77 = getelementptr inbounds %struct.Render, %struct.Render* %74, i32 0, i32 46, !dbg !4619
  %aotables78 = getelementptr inbounds %struct.World, %struct.World* %wrld77, i32 0, i32 68, !dbg !4620
  store float* %73, float** %aotables78, align 8, !dbg !4621
  %arrayidx79 = getelementptr inbounds [2 x i8*], [2 x i8*]* %wrld_prev, i64 0, i64 1, !dbg !4622
  %75 = load i8*, i8** %arrayidx79, align 8, !dbg !4622
  %76 = bitcast i8* %75 to float*, !dbg !4622
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4623
  %wrld80 = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 46, !dbg !4624
  %aosphere81 = getelementptr inbounds %struct.World, %struct.World* %wrld80, i32 0, i32 67, !dbg !4625
  store float* %76, float** %aosphere81, align 8, !dbg !4626
  ret void, !dbg !4627
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !4628 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4632, metadata !DIExpression()), !dbg !4633
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !4634, metadata !DIExpression()), !dbg !4635
  %0 = load float*, float** %a.addr, align 8, !dbg !4636
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !4636
  %1 = load float, float* %arrayidx, align 4, !dbg !4636
  %2 = load float*, float** %r.addr, align 8, !dbg !4637
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !4637
  store float %1, float* %arrayidx1, align 4, !dbg !4638
  %3 = load float*, float** %a.addr, align 8, !dbg !4639
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !4639
  %4 = load float, float* %arrayidx2, align 4, !dbg !4639
  %5 = load float*, float** %r.addr, align 8, !dbg !4640
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !4640
  store float %4, float* %arrayidx3, align 4, !dbg !4641
  %6 = load float*, float** %a.addr, align 8, !dbg !4642
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !4642
  %7 = load float, float* %arrayidx4, align 4, !dbg !4642
  %8 = load float*, float** %r.addr, align 8, !dbg !4643
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !4643
  store float %7, float* %arrayidx5, align 4, !dbg !4644
  ret void, !dbg !4645
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !4646 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  %0 = load float*, float** %n.addr, align 8, !dbg !4651
  %1 = load float*, float** %n.addr, align 8, !dbg !4652
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !4653
  ret float %call, !dbg !4654
}

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #2

; Function Attrs: nounwind
declare dso_local float @logf(float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_Database_Free(%struct.Render* %re) #0 !dbg !4655 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar = alloca %struct.LampRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4656, metadata !DIExpression()), !dbg !4657
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !4658, metadata !DIExpression()), !dbg !4659
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4660
  %i = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 98, !dbg !4662
  %convertdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 11, !dbg !4663
  %1 = load i16, i16* %convertdone, align 4, !dbg !4663
  %tobool = icmp ne i16 %1, 0, !dbg !4660
  br i1 %tobool, label %if.end, label %if.then, !dbg !4664

if.then:                                          ; preds = %entry
  br label %if.end97, !dbg !4665

if.end:                                           ; preds = %entry
  %2 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4666
  %and = and i32 %2, 1, !dbg !4668
  %tobool1 = icmp ne i32 %and, 0, !dbg !4668
  br i1 %tobool1, label %land.lhs.true, label %if.end8, !dbg !4669

land.lhs.true:                                    ; preds = %if.end
  %3 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !4670
  %conv = zext i8 %3 to i32, !dbg !4671
  %tobool2 = icmp ne i32 %conv, 0, !dbg !4671
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !4672

if.then3:                                         ; preds = %land.lhs.true
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4673
  %r = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 45, !dbg !4676
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !4677
  %5 = load i32, i32* %scemode, align 4, !dbg !4677
  %and4 = and i32 %5, 524296, !dbg !4678
  %cmp = icmp eq i32 %and4, 0, !dbg !4679
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !4680

if.then6:                                         ; preds = %if.then3
  call void @BKE_image_print_memlist(), !dbg !4681
  %6 = load void ()*, void ()** @MEM_printmemlist_stats, align 8, !dbg !4683
  call void %6(), !dbg !4683
  br label %if.end7, !dbg !4684

if.end7:                                          ; preds = %if.then6, %if.then3
  br label %if.end8, !dbg !4685

if.end8:                                          ; preds = %if.end7, %land.lhs.true, %if.end
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4686
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 67, !dbg !4688
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren, i32 0, i32 0, !dbg !4689
  %8 = load i8*, i8** %first, align 8, !dbg !4689
  %9 = bitcast i8* %8 to %struct.LampRen*, !dbg !4686
  store %struct.LampRen* %9, %struct.LampRen** %lar, align 8, !dbg !4690
  br label %for.cond, !dbg !4691

for.cond:                                         ; preds = %for.inc, %if.end8
  %10 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4692
  %tobool9 = icmp ne %struct.LampRen* %10, null, !dbg !4694
  br i1 %tobool9, label %for.body, label %for.end, !dbg !4694

for.body:                                         ; preds = %for.cond
  %11 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4695
  call void @freeshadowbuf(%struct.LampRen* %11), !dbg !4697
  %12 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4698
  %jitter = getelementptr inbounds %struct.LampRen, %struct.LampRen* %12, i32 0, i32 58, !dbg !4700
  %13 = load float*, float** %jitter, align 8, !dbg !4700
  %tobool10 = icmp ne float* %13, null, !dbg !4698
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !4701

if.then11:                                        ; preds = %for.body
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4702
  %15 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4703
  %jitter12 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %15, i32 0, i32 58, !dbg !4704
  %16 = load float*, float** %jitter12, align 8, !dbg !4704
  %17 = bitcast float* %16 to i8*, !dbg !4703
  call void %14(i8* %17), !dbg !4702
  br label %if.end13, !dbg !4702

if.end13:                                         ; preds = %if.then11, %for.body
  %18 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4705
  %shadsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %18, i32 0, i32 67, !dbg !4707
  %19 = load %struct.LampShadowSample*, %struct.LampShadowSample** %shadsamp, align 8, !dbg !4707
  %tobool14 = icmp ne %struct.LampShadowSample* %19, null, !dbg !4705
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4708

if.then15:                                        ; preds = %if.end13
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4709
  %21 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4710
  %shadsamp16 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %21, i32 0, i32 67, !dbg !4711
  %22 = load %struct.LampShadowSample*, %struct.LampShadowSample** %shadsamp16, align 8, !dbg !4711
  %23 = bitcast %struct.LampShadowSample* %22 to i8*, !dbg !4710
  call void %20(i8* %23), !dbg !4709
  br label %if.end17, !dbg !4709

if.end17:                                         ; preds = %if.then15, %if.end13
  %24 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4712
  %sunsky = getelementptr inbounds %struct.LampRen, %struct.LampRen* %24, i32 0, i32 56, !dbg !4714
  %25 = load %struct.SunSky*, %struct.SunSky** %sunsky, align 8, !dbg !4714
  %tobool18 = icmp ne %struct.SunSky* %25, null, !dbg !4712
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4715

if.then19:                                        ; preds = %if.end17
  %26 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4716
  %27 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4717
  %sunsky20 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %27, i32 0, i32 56, !dbg !4718
  %28 = load %struct.SunSky*, %struct.SunSky** %sunsky20, align 8, !dbg !4718
  %29 = bitcast %struct.SunSky* %28 to i8*, !dbg !4717
  call void %26(i8* %29), !dbg !4716
  br label %if.end21, !dbg !4716

if.end21:                                         ; preds = %if.then19, %if.end17
  %30 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4719
  %curfalloff = getelementptr inbounds %struct.LampRen, %struct.LampRen* %30, i32 0, i32 30, !dbg !4720
  %31 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff, align 8, !dbg !4720
  call void @curvemapping_free(%struct.CurveMapping* %31), !dbg !4721
  br label %for.inc, !dbg !4722

for.inc:                                          ; preds = %if.end21
  %32 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !4723
  %next = getelementptr inbounds %struct.LampRen, %struct.LampRen* %32, i32 0, i32 0, !dbg !4724
  %33 = load %struct.LampRen*, %struct.LampRen** %next, align 8, !dbg !4724
  store %struct.LampRen* %33, %struct.LampRen** %lar, align 8, !dbg !4725
  br label %for.cond, !dbg !4726, !llvm.loop !4727

for.end:                                          ; preds = %for.cond
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4729
  call void @free_volume_precache(%struct.Render* %34), !dbg !4730
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4731
  %lampren22 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 67, !dbg !4732
  call void @BLI_freelistN(%struct.ListBase* %lampren22), !dbg !4733
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4734
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 66, !dbg !4735
  call void @BLI_freelistN(%struct.ListBase* %lights), !dbg !4736
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4737
  call void @free_renderdata_tables(%struct.Render* %37), !dbg !4738
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4739
  call void @free_mesh_orco_hash(%struct.Render* %38), !dbg !4740
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4741
  %main = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 43, !dbg !4743
  %40 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !4743
  %tobool23 = icmp ne %struct.Main* %40, null, !dbg !4741
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !4744

if.then24:                                        ; preds = %for.end
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4745
  %main25 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 43, !dbg !4747
  %42 = load %struct.Main*, %struct.Main** %main25, align 8, !dbg !4747
  call void @end_render_materials(%struct.Main* %42), !dbg !4748
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4749
  call void @end_render_textures(%struct.Render* %43), !dbg !4750
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4751
  call void @free_pointdensities(%struct.Render* %44), !dbg !4752
  br label %if.end26, !dbg !4753

if.end26:                                         ; preds = %if.then24, %for.end
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4754
  call void @free_camera_inside_volumes(%struct.Render* %45), !dbg !4755
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4756
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 46, !dbg !4758
  %aosphere = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 67, !dbg !4759
  %47 = load float*, float** %aosphere, align 8, !dbg !4759
  %tobool27 = icmp ne float* %47, null, !dbg !4756
  br i1 %tobool27, label %if.then28, label %if.end42, !dbg !4760

if.then28:                                        ; preds = %if.end26
  %48 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4761
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4763
  %wrld29 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 46, !dbg !4764
  %aosphere30 = getelementptr inbounds %struct.World, %struct.World* %wrld29, i32 0, i32 67, !dbg !4765
  %50 = load float*, float** %aosphere30, align 8, !dbg !4765
  %51 = bitcast float* %50 to i8*, !dbg !4763
  call void %48(i8* %51), !dbg !4761
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4766
  %wrld31 = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 46, !dbg !4767
  %aosphere32 = getelementptr inbounds %struct.World, %struct.World* %wrld31, i32 0, i32 67, !dbg !4768
  store float* null, float** %aosphere32, align 8, !dbg !4769
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4770
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 44, !dbg !4772
  %54 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4772
  %tobool33 = icmp ne %struct.Scene* %54, null, !dbg !4770
  br i1 %tobool33, label %land.lhs.true34, label %if.end41, !dbg !4773

land.lhs.true34:                                  ; preds = %if.then28
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4774
  %scene35 = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 44, !dbg !4775
  %56 = load %struct.Scene*, %struct.Scene** %scene35, align 8, !dbg !4775
  %world = getelementptr inbounds %struct.Scene, %struct.Scene* %56, i32 0, i32 3, !dbg !4776
  %57 = load %struct.World*, %struct.World** %world, align 8, !dbg !4776
  %tobool36 = icmp ne %struct.World* %57, null, !dbg !4774
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !4777

if.then37:                                        ; preds = %land.lhs.true34
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4778
  %scene38 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 44, !dbg !4779
  %59 = load %struct.Scene*, %struct.Scene** %scene38, align 8, !dbg !4779
  %world39 = getelementptr inbounds %struct.Scene, %struct.Scene* %59, i32 0, i32 3, !dbg !4780
  %60 = load %struct.World*, %struct.World** %world39, align 8, !dbg !4780
  %aosphere40 = getelementptr inbounds %struct.World, %struct.World* %60, i32 0, i32 67, !dbg !4781
  store float* null, float** %aosphere40, align 8, !dbg !4782
  br label %if.end41, !dbg !4778

if.end41:                                         ; preds = %if.then37, %land.lhs.true34, %if.then28
  br label %if.end42, !dbg !4783

if.end42:                                         ; preds = %if.end41, %if.end26
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4784
  %wrld43 = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 46, !dbg !4786
  %aotables = getelementptr inbounds %struct.World, %struct.World* %wrld43, i32 0, i32 68, !dbg !4787
  %62 = load float*, float** %aotables, align 8, !dbg !4787
  %tobool44 = icmp ne float* %62, null, !dbg !4784
  br i1 %tobool44, label %if.then45, label %if.end61, !dbg !4788

if.then45:                                        ; preds = %if.end42
  %63 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4789
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4791
  %wrld46 = getelementptr inbounds %struct.Render, %struct.Render* %64, i32 0, i32 46, !dbg !4792
  %aotables47 = getelementptr inbounds %struct.World, %struct.World* %wrld46, i32 0, i32 68, !dbg !4793
  %65 = load float*, float** %aotables47, align 8, !dbg !4793
  %66 = bitcast float* %65 to i8*, !dbg !4791
  call void %63(i8* %66), !dbg !4789
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4794
  %wrld48 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 46, !dbg !4795
  %aotables49 = getelementptr inbounds %struct.World, %struct.World* %wrld48, i32 0, i32 68, !dbg !4796
  store float* null, float** %aotables49, align 8, !dbg !4797
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4798
  %scene50 = getelementptr inbounds %struct.Render, %struct.Render* %68, i32 0, i32 44, !dbg !4800
  %69 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !4800
  %tobool51 = icmp ne %struct.Scene* %69, null, !dbg !4798
  br i1 %tobool51, label %land.lhs.true52, label %if.end60, !dbg !4801

land.lhs.true52:                                  ; preds = %if.then45
  %70 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4802
  %scene53 = getelementptr inbounds %struct.Render, %struct.Render* %70, i32 0, i32 44, !dbg !4803
  %71 = load %struct.Scene*, %struct.Scene** %scene53, align 8, !dbg !4803
  %world54 = getelementptr inbounds %struct.Scene, %struct.Scene* %71, i32 0, i32 3, !dbg !4804
  %72 = load %struct.World*, %struct.World** %world54, align 8, !dbg !4804
  %tobool55 = icmp ne %struct.World* %72, null, !dbg !4802
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !4805

if.then56:                                        ; preds = %land.lhs.true52
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4806
  %scene57 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 44, !dbg !4807
  %74 = load %struct.Scene*, %struct.Scene** %scene57, align 8, !dbg !4807
  %world58 = getelementptr inbounds %struct.Scene, %struct.Scene* %74, i32 0, i32 3, !dbg !4808
  %75 = load %struct.World*, %struct.World** %world58, align 8, !dbg !4808
  %aotables59 = getelementptr inbounds %struct.World, %struct.World* %75, i32 0, i32 68, !dbg !4809
  store float* null, float** %aotables59, align 8, !dbg !4810
  br label %if.end60, !dbg !4806

if.end60:                                         ; preds = %if.then56, %land.lhs.true52, %if.then45
  br label %if.end61, !dbg !4811

if.end61:                                         ; preds = %if.end60, %if.end42
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4812
  %r62 = getelementptr inbounds %struct.Render, %struct.Render* %76, i32 0, i32 45, !dbg !4814
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r62, i32 0, i32 47, !dbg !4815
  %77 = load i32, i32* %mode, align 8, !dbg !4815
  %and63 = and i32 %77, 65536, !dbg !4816
  %tobool64 = icmp ne i32 %and63, 0, !dbg !4816
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !4817

if.then65:                                        ; preds = %if.end61
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4818
  call void @free_render_qmcsampler(%struct.Render* %78), !dbg !4819
  br label %if.end66, !dbg !4819

if.end66:                                         ; preds = %if.then65, %if.end61
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4820
  %r67 = getelementptr inbounds %struct.Render, %struct.Render* %79, i32 0, i32 45, !dbg !4822
  %mode68 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r67, i32 0, i32 47, !dbg !4823
  %80 = load i32, i32* %mode68, align 8, !dbg !4823
  %and69 = and i32 %80, 65536, !dbg !4824
  %tobool70 = icmp ne i32 %and69, 0, !dbg !4824
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !4825

if.then71:                                        ; preds = %if.end66
  %81 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4826
  call void @freeraytree(%struct.Render* %81), !dbg !4827
  br label %if.end72, !dbg !4827

if.end72:                                         ; preds = %if.then71, %if.end66
  %82 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4828
  call void @free_sss(%struct.Render* %82), !dbg !4829
  %83 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4830
  call void @free_occ(%struct.Render* %83), !dbg !4831
  %84 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4832
  call void @free_strand_surface(%struct.Render* %84), !dbg !4833
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4834
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %85, i32 0, i32 62, !dbg !4835
  store i32 0, i32* %tothalo, align 8, !dbg !4836
  %86 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4837
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %86, i32 0, i32 64, !dbg !4838
  store i32 0, i32* %totlamp, align 8, !dbg !4839
  %87 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4840
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %87, i32 0, i32 63, !dbg !4841
  store i32 0, i32* %totstrand, align 4, !dbg !4842
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4843
  %totvert = getelementptr inbounds %struct.Render, %struct.Render* %88, i32 0, i32 61, !dbg !4844
  store i32 0, i32* %totvert, align 4, !dbg !4845
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4846
  %totvlak = getelementptr inbounds %struct.Render, %struct.Render* %89, i32 0, i32 60, !dbg !4847
  store i32 0, i32* %totvlak, align 8, !dbg !4848
  %90 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4849
  %i73 = getelementptr inbounds %struct.Render, %struct.Render* %90, i32 0, i32 98, !dbg !4850
  %convertdone74 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i73, i32 0, i32 11, !dbg !4851
  store i16 0, i16* %convertdone74, align 4, !dbg !4852
  %91 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4853
  %bakebuf = getelementptr inbounds %struct.Render, %struct.Render* %91, i32 0, i32 72, !dbg !4854
  store %struct.Image* null, %struct.Image** %bakebuf, align 8, !dbg !4855
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4856
  %scene75 = getelementptr inbounds %struct.Render, %struct.Render* %92, i32 0, i32 44, !dbg !4858
  %93 = load %struct.Scene*, %struct.Scene** %scene75, align 8, !dbg !4858
  %tobool76 = icmp ne %struct.Scene* %93, null, !dbg !4856
  br i1 %tobool76, label %if.then77, label %if.end92, !dbg !4859

if.then77:                                        ; preds = %if.end72
  %94 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4860
  %scene78 = getelementptr inbounds %struct.Render, %struct.Render* %94, i32 0, i32 44, !dbg !4862
  %95 = load %struct.Scene*, %struct.Scene** %scene78, align 8, !dbg !4862
  %r79 = getelementptr inbounds %struct.Scene, %struct.Scene* %95, i32 0, i32 22, !dbg !4863
  %scemode80 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r79, i32 0, i32 46, !dbg !4864
  %96 = load i32, i32* %scemode80, align 4, !dbg !4864
  %and81 = and i32 %96, 256, !dbg !4865
  %tobool82 = icmp ne i32 %and81, 0, !dbg !4865
  br i1 %tobool82, label %if.then83, label %if.end91, !dbg !4866

if.then83:                                        ; preds = %if.then77
  %97 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4867
  %r84 = getelementptr inbounds %struct.Render, %struct.Render* %97, i32 0, i32 45, !dbg !4869
  %scemode85 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r84, i32 0, i32 46, !dbg !4870
  %98 = load i32, i32* %scemode85, align 4, !dbg !4870
  %and86 = and i32 %98, 524296, !dbg !4871
  %cmp87 = icmp eq i32 %and86, 0, !dbg !4872
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !4873

if.then89:                                        ; preds = %if.then83
  call void @BKE_image_free_all_textures(), !dbg !4874
  br label %if.end90, !dbg !4874

if.end90:                                         ; preds = %if.then89, %if.then83
  br label %if.end91, !dbg !4875

if.end91:                                         ; preds = %if.end90, %if.then77
  br label %if.end92, !dbg !4876

if.end92:                                         ; preds = %if.end91, %if.end72
  %99 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4877
  %memArena = getelementptr inbounds %struct.Render, %struct.Render* %99, i32 0, i32 81, !dbg !4879
  %100 = load %struct.MemArena*, %struct.MemArena** %memArena, align 8, !dbg !4879
  %tobool93 = icmp ne %struct.MemArena* %100, null, !dbg !4877
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !4880

if.then94:                                        ; preds = %if.end92
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4881
  %memArena95 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 81, !dbg !4883
  %102 = load %struct.MemArena*, %struct.MemArena** %memArena95, align 8, !dbg !4883
  call void @BLI_memarena_free(%struct.MemArena* %102), !dbg !4884
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4885
  %memArena96 = getelementptr inbounds %struct.Render, %struct.Render* %103, i32 0, i32 81, !dbg !4886
  store %struct.MemArena* null, %struct.MemArena** %memArena96, align 8, !dbg !4887
  br label %if.end97, !dbg !4888

if.end97:                                         ; preds = %if.then, %if.then94, %if.end92
  ret void, !dbg !4889
}

declare dso_local void @BKE_image_print_memlist() #4

declare dso_local void @freeshadowbuf(%struct.LampRen*) #4

declare dso_local void @curvemapping_free(%struct.CurveMapping*) #4

declare dso_local void @free_volume_precache(%struct.Render*) #4

declare dso_local void @BLI_freelistN(%struct.ListBase*) #4

declare dso_local void @free_renderdata_tables(%struct.Render*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @free_mesh_orco_hash(%struct.Render* %re) #0 !dbg !4890 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4891, metadata !DIExpression()), !dbg !4892
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4893
  %orco_hash = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 73, !dbg !4895
  %1 = load %struct.GHash*, %struct.GHash** %orco_hash, align 8, !dbg !4895
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !4893
  br i1 %tobool, label %if.then, label %if.end, !dbg !4896

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4897
  %orco_hash1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 73, !dbg !4899
  %3 = load %struct.GHash*, %struct.GHash** %orco_hash1, align 8, !dbg !4899
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4900
  call void @BLI_ghash_free(%struct.GHash* %3, void (i8*)* null, void (i8*)* %4), !dbg !4901
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4902
  %orco_hash2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 73, !dbg !4903
  store %struct.GHash* null, %struct.GHash** %orco_hash2, align 8, !dbg !4904
  br label %if.end, !dbg !4905

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4906
}

declare dso_local void @end_render_materials(%struct.Main*) #4

declare dso_local void @end_render_textures(%struct.Render*) #4

declare dso_local void @free_pointdensities(%struct.Render*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @free_camera_inside_volumes(%struct.Render* %re) #0 !dbg !4907 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4908, metadata !DIExpression()), !dbg !4909
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4910
  %render_volumes_inside = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 79, !dbg !4911
  call void @BLI_freelistN(%struct.ListBase* %render_volumes_inside), !dbg !4912
  ret void, !dbg !4913
}

declare dso_local void @free_render_qmcsampler(%struct.Render*) #4

declare dso_local void @freeraytree(%struct.Render*) #4

declare dso_local void @free_sss(%struct.Render*) #4

declare dso_local void @free_occ(%struct.Render*) #4

declare dso_local void @free_strand_surface(%struct.Render*) #4

declare dso_local void @BKE_image_free_all_textures() #4

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_Database_FromScene(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %scene, i32 %lay, i32 %use_camera_view) #0 !dbg !4914 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %use_camera_view.addr = alloca i32, align 4
  %sce = alloca %struct.Scene*, align 8
  %camera = alloca %struct.Object*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %amb = alloca [3 x float], align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4919, metadata !DIExpression()), !dbg !4920
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !4921, metadata !DIExpression()), !dbg !4922
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !4925, metadata !DIExpression()), !dbg !4926
  store i32 %use_camera_view, i32* %use_camera_view.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_camera_view.addr, metadata !4927, metadata !DIExpression()), !dbg !4928
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce, metadata !4929, metadata !DIExpression()), !dbg !4930
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !4931, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata [3 x float]* %amb, metadata !4935, metadata !DIExpression()), !dbg !4936
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !4937
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4938
  %main = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 43, !dbg !4939
  store %struct.Main* %0, %struct.Main** %main, align 8, !dbg !4940
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4941
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4942
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 44, !dbg !4943
  store %struct.Scene* %2, %struct.Scene** %scene1, align 8, !dbg !4944
  %4 = load i32, i32* %lay.addr, align 4, !dbg !4945
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4946
  %lay2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 48, !dbg !4947
  store i32 %4, i32* %lay2, align 8, !dbg !4948
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4949
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !4951
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !4952
  %7 = load i32, i32* %scemode, align 4, !dbg !4952
  %and = and i32 %7, 524288, !dbg !4953
  %tobool = icmp ne i32 %and, 0, !dbg !4953
  br i1 %tobool, label %if.then, label %if.end, !dbg !4954

if.then:                                          ; preds = %entry
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4955
  %call = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %8), !dbg !4956
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4957
  %scene_color_manage = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 8, !dbg !4958
  store i8 %call, i8* %scene_color_manage, align 8, !dbg !4959
  br label %if.end, !dbg !4957

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4960
  %call3 = call %struct.Object* @RE_GetCamera(%struct.Render* %10), !dbg !4961
  store %struct.Object* %call3, %struct.Object** %camera, align 8, !dbg !4962
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4963
  %i = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 98, !dbg !4964
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 16, !dbg !4965
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8** %infostr, align 8, !dbg !4966
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4967
  %r4 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !4968
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r4, i32 0, i32 5, !dbg !4969
  %13 = load i32, i32* %cfra, align 8, !dbg !4969
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4970
  %i5 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 98, !dbg !4971
  %cfra6 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i5, i32 0, i32 0, !dbg !4972
  store i32 %13, i32* %cfra6, align 8, !dbg !4973
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4974
  %i7 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 98, !dbg !4975
  %scene_name = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i7, i32 0, i32 18, !dbg !4976
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %scene_name, i64 0, i64 0, !dbg !4974
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4977
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %16, i32 0, i32 0, !dbg !4978
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !4979
  %arraydecay8 = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !4977
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay8, i64 2, !dbg !4980
  %call9 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %add.ptr, i64 64), !dbg !4981
  %call10 = call %struct.MemArena* @BLI_memarena_new(i64 16376, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)), !dbg !4982
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4983
  %memArena = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 81, !dbg !4984
  store %struct.MemArena* %call10, %struct.MemArena** %memArena, align 8, !dbg !4985
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4986
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 62, !dbg !4987
  store i32 0, i32* %tothalo, align 8, !dbg !4988
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4989
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 64, !dbg !4990
  store i32 0, i32* %totlamp, align 8, !dbg !4991
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4992
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 63, !dbg !4993
  store i32 0, i32* %totstrand, align 4, !dbg !4994
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4995
  %totvert = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 61, !dbg !4996
  store i32 0, i32* %totvert, align 4, !dbg !4997
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4998
  %totvlak = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 60, !dbg !4999
  store i32 0, i32* %totvlak, align 8, !dbg !5000
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5001
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 66, !dbg !5002
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights, i32 0, i32 1, !dbg !5003
  store i8* null, i8** %last, align 8, !dbg !5004
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5005
  %lights11 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 66, !dbg !5006
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights11, i32 0, i32 0, !dbg !5007
  store i8* null, i8** %first, align 8, !dbg !5008
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5009
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 67, !dbg !5010
  %last12 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren, i32 0, i32 1, !dbg !5011
  store i8* null, i8** %last12, align 8, !dbg !5012
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5013
  %lampren13 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 67, !dbg !5014
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren13, i32 0, i32 0, !dbg !5015
  store i8* null, i8** %first14, align 8, !dbg !5016
  store i32 0, i32* @slurph_opt, align 4, !dbg !5017
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5018
  %i15 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 98, !dbg !5019
  %partsdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i15, i32 0, i32 10, !dbg !5020
  store i16 0, i16* %partsdone, align 2, !dbg !5021
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5022
  %lay16 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 48, !dbg !5024
  %29 = load i32, i32* %lay16, align 8, !dbg !5024
  %and17 = and i32 %29, -16777216, !dbg !5025
  %tobool18 = icmp ne i32 %and17, 0, !dbg !5025
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !5026

if.then19:                                        ; preds = %if.end
  %30 = load i32, i32* %lay.addr, align 4, !dbg !5027
  %and20 = and i32 %30, -16777216, !dbg !5027
  store i32 %and20, i32* %lay.addr, align 4, !dbg !5027
  br label %if.end21, !dbg !5028

if.end21:                                         ; preds = %if.then19, %if.end
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5029
  %r22 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 45, !dbg !5031
  %scemode23 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r22, i32 0, i32 46, !dbg !5032
  %32 = load i32, i32* %scemode23, align 4, !dbg !5032
  %and24 = and i32 %32, 540680, !dbg !5033
  %cmp = icmp eq i32 %and24, 0, !dbg !5034
  br i1 %cmp, label %if.then25, label %if.end30, !dbg !5035

if.then25:                                        ; preds = %if.end21
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5036
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 101, !dbg !5038
  %34 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !5038
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5039
  %main26 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 43, !dbg !5040
  %36 = load %struct.Main*, %struct.Main** %main26, align 8, !dbg !5040
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5041
  %scene27 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 44, !dbg !5042
  %38 = load %struct.Scene*, %struct.Scene** %scene27, align 8, !dbg !5042
  %39 = load i32, i32* %lay.addr, align 4, !dbg !5043
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %34, %struct.Main* %36, %struct.Scene* %38, i32 %39), !dbg !5044
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5045
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5046
  %scene28 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 44, !dbg !5047
  %42 = load %struct.Scene*, %struct.Scene** %scene28, align 8, !dbg !5047
  %r29 = getelementptr inbounds %struct.Scene, %struct.Scene* %42, i32 0, i32 22, !dbg !5048
  call void @render_update_anim_renderdata(%struct.Render* %40, %struct.RenderData* %r29), !dbg !5049
  br label %if.end30, !dbg !5050

if.end30:                                         ; preds = %if.then25, %if.end21
  %43 = load i32, i32* %use_camera_view.addr, align 4, !dbg !5051
  %tobool31 = icmp ne i32 %43, 0, !dbg !5051
  br i1 %tobool31, label %land.lhs.true, label %if.end41, !dbg !5053

land.lhs.true:                                    ; preds = %if.end30
  %44 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !5054
  %tobool32 = icmp ne %struct.Object* %44, null, !dbg !5054
  br i1 %tobool32, label %if.then33, label %if.end41, !dbg !5055

if.then33:                                        ; preds = %land.lhs.true
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5056
  %46 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !5058
  call void @RE_SetCamera(%struct.Render* %45, %struct.Object* %46), !dbg !5059
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5060
  %47 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !5061
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 47, !dbg !5062
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5061
  call void @normalize_m4_m4([4 x float]* %arraydecay34, [4 x float]* %arraydecay35), !dbg !5063
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5064
  %call37 = call zeroext i8 @invert_m4([4 x float]* %arraydecay36), !dbg !5065
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5066
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5067
  call void @RE_SetView(%struct.Render* %48, [4 x float]* %arraydecay38), !dbg !5068
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5069
  %main39 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 43, !dbg !5070
  %50 = load %struct.Main*, %struct.Main** %main39, align 8, !dbg !5070
  %51 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !5071
  %id40 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 0, !dbg !5072
  call void @DAG_id_tag_update_ex(%struct.Main* %50, %struct.ID* %id40, i16 signext 1), !dbg !5073
  br label %if.end41, !dbg !5074

if.end41:                                         ; preds = %if.then33, %land.lhs.true, %if.end30
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5075
  %viewmat_orig = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 34, !dbg !5076
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat_orig, i64 0, i64 0, !dbg !5075
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5077
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 32, !dbg !5078
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5077
  call void @copy_m4_m4([4 x float]* %arraydecay42, [4 x float]* %arraydecay43), !dbg !5079
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5080
  call void @init_render_world(%struct.Render* %54), !dbg !5081
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5082
  %r44 = getelementptr inbounds %struct.Render, %struct.Render* %55, i32 0, i32 45, !dbg !5084
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r44, i32 0, i32 47, !dbg !5085
  %56 = load i32, i32* %mode, align 8, !dbg !5085
  %and45 = and i32 %56, 65536, !dbg !5086
  %tobool46 = icmp ne i32 %and45, 0, !dbg !5086
  br i1 %tobool46, label %if.then47, label %if.end60, !dbg !5087

if.then47:                                        ; preds = %if.end41
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5088
  call void @init_render_qmcsampler(%struct.Render* %57), !dbg !5090
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5091
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 46, !dbg !5093
  %mode48 = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 23, !dbg !5094
  %59 = load i16, i16* %mode48, align 2, !dbg !5094
  %conv = sext i16 %59 to i32, !dbg !5091
  %and49 = and i32 %conv, 208, !dbg !5095
  %tobool50 = icmp ne i32 %and49, 0, !dbg !5095
  br i1 %tobool50, label %if.then51, label %if.end59, !dbg !5096

if.then51:                                        ; preds = %if.then47
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5097
  %wrld52 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 46, !dbg !5099
  %ao_samp_method = getelementptr inbounds %struct.World, %struct.World* %wrld52, i32 0, i32 63, !dbg !5100
  %61 = load i16, i16* %ao_samp_method, align 8, !dbg !5100
  %conv53 = sext i16 %61 to i32, !dbg !5097
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !5101
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !5102

if.then56:                                        ; preds = %if.then51
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5103
  %wrld57 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 46, !dbg !5104
  call void @init_ao_sphere(%struct.World* %wrld57), !dbg !5105
  br label %if.end58, !dbg !5105

if.end58:                                         ; preds = %if.then56, %if.then51
  br label %if.end59, !dbg !5106

if.end59:                                         ; preds = %if.end58, %if.then47
  br label %if.end60, !dbg !5107

if.end60:                                         ; preds = %if.end59, %if.end41
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5108
  call void @init_render_textures(%struct.Render* %63), !dbg !5109
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %amb, i64 0, i64 0, !dbg !5110
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5111
  %wrld62 = getelementptr inbounds %struct.Render, %struct.Render* %64, i32 0, i32 46, !dbg !5112
  %ambr = getelementptr inbounds %struct.World, %struct.World* %wrld62, i32 0, i32 12, !dbg !5113
  call void @copy_v3_v3(float* %arraydecay61, float* %ambr), !dbg !5114
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5115
  %main63 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 43, !dbg !5116
  %66 = load %struct.Main*, %struct.Main** %main63, align 8, !dbg !5116
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5117
  %r64 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 45, !dbg !5118
  %mode65 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r64, i32 0, i32 47, !dbg !5119
  %68 = load i32, i32* %mode65, align 8, !dbg !5119
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %amb, i64 0, i64 0, !dbg !5120
  call void @init_render_materials(%struct.Main* %66, i32 %68, float* %arraydecay66), !dbg !5121
  call void @set_node_shader_lamp_loop(void (%struct.ShadeInput*, %struct.ShadeResult*)* @shade_material_loop), !dbg !5122
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5123
  %70 = load i32, i32* %lay.addr, align 4, !dbg !5124
  call void @database_init_objects(%struct.Render* %69, i32 %70, i32 0, i32 0, %struct.Object* null, i32 0), !dbg !5125
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5126
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 96, !dbg !5128
  %72 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !5128
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5129
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 97, !dbg !5130
  %74 = load i8*, i8** %tbh, align 8, !dbg !5130
  %call67 = call i32 %72(i8* %74), !dbg !5126
  %tobool68 = icmp ne i32 %call67, 0, !dbg !5126
  br i1 %tobool68, label %if.end87, label %if.then69, !dbg !5131

if.then69:                                        ; preds = %if.end60
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5132
  call void @set_material_lightgroups(%struct.Render* %75), !dbg !5134
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5135
  %scene70 = getelementptr inbounds %struct.Render, %struct.Render* %76, i32 0, i32 44, !dbg !5137
  %77 = load %struct.Scene*, %struct.Scene** %scene70, align 8, !dbg !5137
  store %struct.Scene* %77, %struct.Scene** %sce, align 8, !dbg !5138
  br label %for.cond, !dbg !5139

for.cond:                                         ; preds = %for.inc, %if.then69
  %78 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !5140
  %tobool71 = icmp ne %struct.Scene* %78, null, !dbg !5142
  br i1 %tobool71, label %for.body, label %for.end, !dbg !5142

for.body:                                         ; preds = %for.cond
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5143
  %80 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !5144
  call void @set_renderlayer_lightgroups(%struct.Render* %79, %struct.Scene* %80), !dbg !5145
  br label %for.inc, !dbg !5145

for.inc:                                          ; preds = %for.body
  %81 = load %struct.Scene*, %struct.Scene** %sce, align 8, !dbg !5146
  %set = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 4, !dbg !5147
  %82 = load %struct.Scene*, %struct.Scene** %set, align 8, !dbg !5147
  store %struct.Scene* %82, %struct.Scene** %sce, align 8, !dbg !5148
  br label %for.cond, !dbg !5149, !llvm.loop !5150

for.end:                                          ; preds = %for.cond
  %83 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5152
  %totvert72 = getelementptr inbounds %struct.Render, %struct.Render* %83, i32 0, i32 61, !dbg !5153
  %84 = load i32, i32* %totvert72, align 4, !dbg !5153
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5154
  %i73 = getelementptr inbounds %struct.Render, %struct.Render* %85, i32 0, i32 98, !dbg !5155
  %totvert74 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i73, i32 0, i32 2, !dbg !5156
  store i32 %84, i32* %totvert74, align 8, !dbg !5157
  %86 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5158
  %totvlak75 = getelementptr inbounds %struct.Render, %struct.Render* %86, i32 0, i32 60, !dbg !5159
  %87 = load i32, i32* %totvlak75, align 8, !dbg !5159
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5160
  %i76 = getelementptr inbounds %struct.Render, %struct.Render* %88, i32 0, i32 98, !dbg !5161
  %totface = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i76, i32 0, i32 1, !dbg !5162
  store i32 %87, i32* %totface, align 4, !dbg !5163
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5164
  %totstrand77 = getelementptr inbounds %struct.Render, %struct.Render* %89, i32 0, i32 63, !dbg !5165
  %90 = load i32, i32* %totstrand77, align 4, !dbg !5165
  %91 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5166
  %i78 = getelementptr inbounds %struct.Render, %struct.Render* %91, i32 0, i32 98, !dbg !5167
  %totstrand79 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i78, i32 0, i32 3, !dbg !5168
  store i32 %90, i32* %totstrand79, align 4, !dbg !5169
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5170
  %tothalo80 = getelementptr inbounds %struct.Render, %struct.Render* %92, i32 0, i32 62, !dbg !5171
  %93 = load i32, i32* %tothalo80, align 8, !dbg !5171
  %94 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5172
  %i81 = getelementptr inbounds %struct.Render, %struct.Render* %94, i32 0, i32 98, !dbg !5173
  %tothalo82 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i81, i32 0, i32 4, !dbg !5174
  store i32 %93, i32* %tothalo82, align 8, !dbg !5175
  %95 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5176
  %totlamp83 = getelementptr inbounds %struct.Render, %struct.Render* %95, i32 0, i32 64, !dbg !5177
  %96 = load i32, i32* %totlamp83, align 8, !dbg !5177
  %97 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5178
  %i84 = getelementptr inbounds %struct.Render, %struct.Render* %97, i32 0, i32 98, !dbg !5179
  %totlamp85 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i84, i32 0, i32 5, !dbg !5180
  store i32 %96, i32* %totlamp85, align 4, !dbg !5181
  %98 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5182
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %98, i32 0, i32 90, !dbg !5183
  %99 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !5183
  %100 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5184
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %100, i32 0, i32 91, !dbg !5185
  %101 = load i8*, i8** %sdh, align 8, !dbg !5185
  %102 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5186
  %i86 = getelementptr inbounds %struct.Render, %struct.Render* %102, i32 0, i32 98, !dbg !5187
  call void %99(i8* %101, %struct.RenderStats* %i86), !dbg !5182
  br label %if.end87, !dbg !5188

if.end87:                                         ; preds = %for.end, %if.end60
  store i32 1, i32* @slurph_opt, align 4, !dbg !5189
  ret void, !dbg !5190
}

declare dso_local zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene*) #4

declare dso_local %struct.Object* @RE_GetCamera(%struct.Render*) #4

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #4

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #4

declare dso_local void @BKE_scene_update_for_newframe(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32) #4

declare dso_local void @render_update_anim_renderdata(%struct.Render*, %struct.RenderData*) #4

declare dso_local void @RE_SetCamera(%struct.Render*, %struct.Object*) #4

declare dso_local void @normalize_m4_m4([4 x float]*, [4 x float]*) #4

declare dso_local zeroext i8 @invert_m4([4 x float]*) #4

declare dso_local void @RE_SetView(%struct.Render*, [4 x float]*) #4

declare dso_local void @DAG_id_tag_update_ex(%struct.Main*, %struct.ID*, i16 signext) #4

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #4

declare dso_local void @init_render_qmcsampler(%struct.Render*) #4

declare dso_local void @init_ao_sphere(%struct.World*) #4

declare dso_local void @init_render_textures(%struct.Render*) #4

declare dso_local void @init_render_materials(%struct.Main*, i32, float*) #4

declare dso_local void @set_node_shader_lamp_loop(void (%struct.ShadeInput*, %struct.ShadeResult*)*) #4

declare dso_local void @shade_material_loop(%struct.ShadeInput*, %struct.ShadeResult*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @database_init_objects(%struct.Render* %re, i32 %renderlay, i32 %nolamps, i32 %onlyselected, %struct.Object* %actob, i32 %timeoffset) #0 !dbg !5191 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %renderlay.addr = alloca i32, align 4
  %nolamps.addr = alloca i32, align 4
  %onlyselected.addr = alloca i32, align 4
  %actob.addr = alloca %struct.Object*, align 8
  %timeoffset.addr = alloca i32, align 4
  %base = alloca %struct.Base*, align 8
  %ob = alloca %struct.Object*, align 8
  %group = alloca %struct.Group*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %sce_iter = alloca %struct.Scene*, align 8
  %lay = alloca i32, align 4
  %vectorlay = alloca i32, align 4
  %mat = alloca [4 x [4 x float]], align 16
  %dob = alloca %struct.DupliObject*, align 8
  %duplilist = alloca %struct.ListBase*, align 8
  %duplilist_apply_data = alloca %struct.DupliApplyData*, align 8
  %i = alloca i32, align 4
  %dob_extra = alloca %struct.DupliExtraData*, align 8
  %obd = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %psysindex = alloca i32, align 4
  %mat100 = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5194, metadata !DIExpression()), !dbg !5195
  store i32 %renderlay, i32* %renderlay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %renderlay.addr, metadata !5196, metadata !DIExpression()), !dbg !5197
  store i32 %nolamps, i32* %nolamps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nolamps.addr, metadata !5198, metadata !DIExpression()), !dbg !5199
  store i32 %onlyselected, i32* %onlyselected.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onlyselected.addr, metadata !5200, metadata !DIExpression()), !dbg !5201
  store %struct.Object* %actob, %struct.Object** %actob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %actob.addr, metadata !5202, metadata !DIExpression()), !dbg !5203
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !5204, metadata !DIExpression()), !dbg !5205
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !5206, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !5212, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !5216, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce_iter, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !5220, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata i32* %vectorlay, metadata !5222, metadata !DIExpression()), !dbg !5223
  call void @set_dupli_tex_mat(%struct.Render* null, %struct.ObjectInstanceRen* null, %struct.DupliObject* null, [4 x float]* null), !dbg !5224
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5225
  %main = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 43, !dbg !5227
  %1 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !5227
  %object = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 13, !dbg !5228
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !5229
  %2 = load i8*, i8** %first, align 8, !dbg !5229
  %3 = bitcast i8* %2 to %struct.Object*, !dbg !5225
  store %struct.Object* %3, %struct.Object** %ob, align 8, !dbg !5230
  br label %for.cond, !dbg !5231

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5232
  %tobool = icmp ne %struct.Object* %4, null, !dbg !5234
  br i1 %tobool, label %for.body, label %for.end, !dbg !5234

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !5235, metadata !DIExpression()), !dbg !5237
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5238
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5239
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 32, !dbg !5240
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !5239
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5241
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !5242
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5241
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1, [4 x float]* %arraydecay2), !dbg !5243
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5244
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 51, !dbg !5245
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !5244
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5246
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay3, [4 x float]* %arraydecay4), !dbg !5247
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5248
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 50, !dbg !5249
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5248
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5250
  %imat_ren6 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 51, !dbg !5251
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren6, i64 0, i64 0, !dbg !5250
  call void @copy_m4_m4([4 x float]* %arraydecay5, [4 x float]* %arraydecay7), !dbg !5252
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5253
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 53, !dbg !5254
  %11 = load i16, i16* %flag, align 4, !dbg !5255
  %conv = sext i16 %11 to i32, !dbg !5255
  %and = and i32 %conv, -1025, !dbg !5255
  %conv8 = trunc i32 %and to i16, !dbg !5255
  store i16 %conv8, i16* %flag, align 4, !dbg !5255
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5256
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 55, !dbg !5257
  %13 = load i16, i16* %transflag, align 8, !dbg !5258
  %conv9 = sext i16 %13 to i32, !dbg !5258
  %and10 = and i32 %conv9, -4097, !dbg !5258
  %conv11 = trunc i32 %and10 to i16, !dbg !5258
  store i16 %conv11, i16* %transflag, align 8, !dbg !5258
  br label %for.inc, !dbg !5259

for.inc:                                          ; preds = %for.body
  %14 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5260
  %id = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 0, !dbg !5261
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 0, !dbg !5262
  %15 = load i8*, i8** %next, align 8, !dbg !5262
  %16 = bitcast i8* %15 to %struct.Object*, !dbg !5260
  store %struct.Object* %16, %struct.Object** %ob, align 8, !dbg !5263
  br label %for.cond, !dbg !5264, !llvm.loop !5265

for.end:                                          ; preds = %for.cond
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5267
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 44, !dbg !5267
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5267
  store %struct.Scene* %18, %struct.Scene** %sce_iter, align 8, !dbg !5267
  %call12 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* null), !dbg !5267
  store %struct.Base* %call12, %struct.Base** %base, align 8, !dbg !5267
  br label %for.cond13, !dbg !5267

for.cond13:                                       ; preds = %for.inc251, %for.end
  %19 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5269
  %tobool14 = icmp ne %struct.Base* %19, null, !dbg !5271
  br i1 %tobool14, label %for.body15, label %for.end253, !dbg !5271

for.body15:                                       ; preds = %for.cond13
  %20 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5272
  %object16 = getelementptr inbounds %struct.Base, %struct.Base* %20, i32 0, i32 7, !dbg !5274
  %21 = load %struct.Object*, %struct.Object** %object16, align 8, !dbg !5274
  store %struct.Object* %21, %struct.Object** %ob, align 8, !dbg !5275
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5276
  %scene17 = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 44, !dbg !5277
  %23 = load %struct.Scene*, %struct.Scene** %scene17, align 8, !dbg !5277
  %call18 = call i32 @get_vector_renderlayers(%struct.Scene* %23), !dbg !5278
  store i32 %call18, i32* %vectorlay, align 4, !dbg !5279
  %24 = load i32, i32* %timeoffset.addr, align 4, !dbg !5280
  %tobool19 = icmp ne i32 %24, 0, !dbg !5281
  br i1 %tobool19, label %cond.true, label %cond.false, !dbg !5281

cond.true:                                        ; preds = %for.body15
  %25 = load i32, i32* %renderlay.addr, align 4, !dbg !5282
  %26 = load i32, i32* %vectorlay, align 4, !dbg !5283
  %and20 = and i32 %25, %26, !dbg !5284
  br label %cond.end, !dbg !5281

cond.false:                                       ; preds = %for.body15
  %27 = load i32, i32* %renderlay.addr, align 4, !dbg !5285
  br label %cond.end, !dbg !5281

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and20, %cond.true ], [ %27, %cond.false ], !dbg !5281
  store i32 %cond, i32* %lay, align 4, !dbg !5286
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5287
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5289
  %call21 = call zeroext i8 @is_object_restricted(%struct.Render* %28, %struct.Object* %29), !dbg !5290
  %tobool22 = icmp ne i8 %call21, 0, !dbg !5290
  br i1 %tobool22, label %if.then, label %if.end, !dbg !5291

if.then:                                          ; preds = %cond.end
  br label %for.inc251, !dbg !5292

if.end:                                           ; preds = %cond.end
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5293
  %flag23 = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 53, !dbg !5295
  %31 = load i16, i16* %flag23, align 4, !dbg !5295
  %conv24 = sext i16 %31 to i32, !dbg !5293
  %and25 = and i32 %conv24, 1024, !dbg !5296
  %tobool26 = icmp ne i32 %and25, 0, !dbg !5296
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !5297

if.then27:                                        ; preds = %if.end
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5298
  %transflag28 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 55, !dbg !5301
  %33 = load i16, i16* %transflag28, align 8, !dbg !5301
  %conv29 = sext i16 %33 to i32, !dbg !5298
  %and30 = and i32 %conv29, 4096, !dbg !5302
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5302
  br i1 %tobool31, label %if.then32, label %if.end41, !dbg !5303

if.then32:                                        ; preds = %if.then27
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5304
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5307
  %36 = load i32, i32* %nolamps.addr, align 4, !dbg !5308
  %37 = load i32, i32* %onlyselected.addr, align 4, !dbg !5309
  %38 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !5310
  %call33 = call i32 @allow_render_object(%struct.Render* %34, %struct.Object* %35, i32 %36, i32 %37, %struct.Object* %38), !dbg !5311
  %tobool34 = icmp ne i32 %call33, 0, !dbg !5311
  br i1 %tobool34, label %if.then35, label %if.end40, !dbg !5312

if.then35:                                        ; preds = %if.then32
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5313
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5315
  %41 = load i32, i32* %timeoffset.addr, align 4, !dbg !5316
  call void @init_render_object(%struct.Render* %39, %struct.Object* %40, %struct.Object* null, %struct.DupliObject* null, [4 x float]* null, i32 %41), !dbg !5317
  %42 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5318
  %transflag36 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 55, !dbg !5319
  %43 = load i16, i16* %transflag36, align 8, !dbg !5320
  %conv37 = sext i16 %43 to i32, !dbg !5320
  %and38 = and i32 %conv37, -4097, !dbg !5320
  %conv39 = trunc i32 %and38 to i16, !dbg !5320
  store i16 %conv39, i16* %transflag36, align 8, !dbg !5320
  br label %if.end40, !dbg !5321

if.end40:                                         ; preds = %if.then35, %if.then32
  br label %if.end41, !dbg !5322

if.end41:                                         ; preds = %if.end40, %if.then27
  br label %if.end244, !dbg !5323

if.else:                                          ; preds = %if.end
  %44 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5324
  %lay42 = getelementptr inbounds %struct.Base, %struct.Base* %44, i32 0, i32 2, !dbg !5326
  %45 = load i32, i32* %lay42, align 8, !dbg !5326
  %46 = load i32, i32* %lay, align 4, !dbg !5327
  %and43 = and i32 %45, %46, !dbg !5328
  %tobool44 = icmp ne i32 %and43, 0, !dbg !5328
  br i1 %tobool44, label %if.then51, label %lor.lhs.false, !dbg !5329

lor.lhs.false:                                    ; preds = %if.else
  %47 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5330
  %type = getelementptr inbounds %struct.Object, %struct.Object* %47, i32 0, i32 3, !dbg !5331
  %48 = load i16, i16* %type, align 8, !dbg !5331
  %conv45 = sext i16 %48 to i32, !dbg !5330
  %cmp = icmp eq i32 %conv45, 10, !dbg !5332
  br i1 %cmp, label %land.lhs.true, label %if.end243, !dbg !5333

land.lhs.true:                                    ; preds = %lor.lhs.false
  %49 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5334
  %lay47 = getelementptr inbounds %struct.Base, %struct.Base* %49, i32 0, i32 2, !dbg !5335
  %50 = load i32, i32* %lay47, align 8, !dbg !5335
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5336
  %lay48 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 48, !dbg !5337
  %52 = load i32, i32* %lay48, align 8, !dbg !5337
  %and49 = and i32 %50, %52, !dbg !5338
  %tobool50 = icmp ne i32 %and49, 0, !dbg !5338
  br i1 %tobool50, label %if.then51, label %if.end243, !dbg !5339

if.then51:                                        ; preds = %land.lhs.true, %if.else
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5340
  %transflag52 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 55, !dbg !5343
  %54 = load i16, i16* %transflag52, align 8, !dbg !5343
  %conv53 = sext i16 %54 to i32, !dbg !5340
  %and54 = and i32 %conv53, 2840, !dbg !5344
  %tobool55 = icmp ne i32 %and54, 0, !dbg !5344
  br i1 %tobool55, label %land.lhs.true56, label %if.else237, !dbg !5345

land.lhs.true56:                                  ; preds = %if.then51
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5346
  %type57 = getelementptr inbounds %struct.Object, %struct.Object* %55, i32 0, i32 3, !dbg !5347
  %56 = load i16, i16* %type57, align 8, !dbg !5347
  %conv58 = sext i16 %56 to i32, !dbg !5346
  %cmp59 = icmp ne i32 %conv58, 5, !dbg !5348
  br i1 %cmp59, label %if.then61, label %if.else237, !dbg !5349

if.then61:                                        ; preds = %land.lhs.true56
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob, metadata !5350, metadata !DIExpression()), !dbg !5352
  call void @llvm.dbg.declare(metadata %struct.ListBase** %duplilist, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.DupliApplyData** %duplilist_apply_data, metadata !5355, metadata !DIExpression()), !dbg !5368
  store %struct.DupliApplyData* null, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5369, metadata !DIExpression()), !dbg !5370
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5371
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5372
  %59 = load i32, i32* %timeoffset.addr, align 4, !dbg !5373
  call void @dupli_render_particle_set(%struct.Render* %57, %struct.Object* %58, i32 %59, i32 0, i32 1), !dbg !5374
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5375
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 101, !dbg !5376
  %61 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !5376
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5377
  %scene62 = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 44, !dbg !5378
  %63 = load %struct.Scene*, %struct.Scene** %scene62, align 8, !dbg !5378
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5379
  %call63 = call %struct.ListBase* @object_duplilist(%struct.EvaluationContext* %61, %struct.Scene* %63, %struct.Object* %64), !dbg !5380
  store %struct.ListBase* %call63, %struct.ListBase** %duplilist, align 8, !dbg !5381
  %65 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5382
  %66 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !5383
  %call64 = call %struct.DupliApplyData* @duplilist_apply(%struct.Object* %65, %struct.ListBase* %66), !dbg !5384
  store %struct.DupliApplyData* %call64, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5385
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5386
  %68 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5387
  %69 = load i32, i32* %timeoffset.addr, align 4, !dbg !5388
  call void @dupli_render_particle_set(%struct.Render* %67, %struct.Object* %68, i32 %69, i32 0, i32 0), !dbg !5389
  %70 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !5390
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %70, i32 0, i32 0, !dbg !5392
  %71 = load i8*, i8** %first65, align 8, !dbg !5392
  %72 = bitcast i8* %71 to %struct.DupliObject*, !dbg !5390
  store %struct.DupliObject* %72, %struct.DupliObject** %dob, align 8, !dbg !5393
  store i32 0, i32* %i, align 4, !dbg !5394
  br label %for.cond66, !dbg !5395

for.cond66:                                       ; preds = %for.inc226, %if.then61
  %73 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5396
  %tobool67 = icmp ne %struct.DupliObject* %73, null, !dbg !5398
  br i1 %tobool67, label %for.body68, label %for.end229, !dbg !5398

for.body68:                                       ; preds = %for.cond66
  call void @llvm.dbg.declare(metadata %struct.DupliExtraData** %dob_extra, metadata !5399, metadata !DIExpression()), !dbg !5401
  %74 = load %struct.DupliApplyData*, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5402
  %extra = getelementptr inbounds %struct.DupliApplyData, %struct.DupliApplyData* %74, i32 0, i32 1, !dbg !5403
  %75 = load %struct.DupliExtraData*, %struct.DupliExtraData** %extra, align 8, !dbg !5403
  %76 = load i32, i32* %i, align 4, !dbg !5404
  %idxprom = sext i32 %76 to i64, !dbg !5402
  %arrayidx = getelementptr inbounds %struct.DupliExtraData, %struct.DupliExtraData* %75, i64 %idxprom, !dbg !5402
  store %struct.DupliExtraData* %arrayidx, %struct.DupliExtraData** %dob_extra, align 8, !dbg !5401
  call void @llvm.dbg.declare(metadata %struct.Object** %obd, metadata !5405, metadata !DIExpression()), !dbg !5406
  %77 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5407
  %ob69 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %77, i32 0, i32 2, !dbg !5408
  %78 = load %struct.Object*, %struct.Object** %ob69, align 8, !dbg !5408
  store %struct.Object* %78, %struct.Object** %obd, align 8, !dbg !5406
  %79 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5409
  %obmat70 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 47, !dbg !5410
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat70, i64 0, i64 0, !dbg !5409
  %80 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5411
  %mat72 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %80, i32 0, i32 3, !dbg !5412
  %arraydecay73 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat72, i64 0, i64 0, !dbg !5411
  call void @copy_m4_m4([4 x float]* %arraydecay71, [4 x float]* %arraydecay73), !dbg !5413
  %81 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5414
  %transflag74 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 55, !dbg !5416
  %82 = load i16, i16* %transflag74, align 8, !dbg !5416
  %conv75 = sext i16 %82 to i32, !dbg !5414
  %and76 = and i32 %conv75, 4096, !dbg !5417
  %tobool77 = icmp ne i32 %and76, 0, !dbg !5417
  br i1 %tobool77, label %if.end82, label %land.lhs.true78, !dbg !5418

land.lhs.true78:                                  ; preds = %for.body68
  %83 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5419
  %no_draw = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %83, i32 0, i32 7, !dbg !5420
  %84 = load i8, i8* %no_draw, align 2, !dbg !5420
  %conv79 = zext i8 %84 to i32, !dbg !5419
  %tobool80 = icmp ne i32 %conv79, 0, !dbg !5419
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !5421

if.then81:                                        ; preds = %land.lhs.true78
  br label %for.inc226, !dbg !5422

if.end82:                                         ; preds = %land.lhs.true78, %for.body68
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5423
  %86 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5425
  %call83 = call zeroext i8 @is_object_hidden(%struct.Render* %85, %struct.Object* %86), !dbg !5426
  %tobool84 = icmp ne i8 %call83, 0, !dbg !5426
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !5427

if.then85:                                        ; preds = %if.end82
  br label %for.inc226, !dbg !5428

if.end86:                                         ; preds = %if.end82
  %87 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5429
  %type87 = getelementptr inbounds %struct.Object, %struct.Object* %87, i32 0, i32 3, !dbg !5431
  %88 = load i16, i16* %type87, align 8, !dbg !5431
  %conv88 = sext i16 %88 to i32, !dbg !5429
  %cmp89 = icmp eq i32 %conv88, 5, !dbg !5432
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !5433

if.then91:                                        ; preds = %if.end86
  br label %for.inc226, !dbg !5434

if.end92:                                         ; preds = %if.end86
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5435
  %90 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5437
  %91 = load i32, i32* %nolamps.addr, align 4, !dbg !5438
  %92 = load i32, i32* %onlyselected.addr, align 4, !dbg !5439
  %93 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !5440
  %call93 = call i32 @allow_render_object(%struct.Render* %89, %struct.Object* %90, i32 %91, i32 %92, %struct.Object* %93), !dbg !5441
  %tobool94 = icmp ne i32 %call93, 0, !dbg !5441
  br i1 %tobool94, label %if.end96, label %if.then95, !dbg !5442

if.then95:                                        ; preds = %if.end92
  br label %for.inc226, !dbg !5443

if.end96:                                         ; preds = %if.end92
  %94 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5444
  %95 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5446
  %96 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5447
  %call97 = call i32 @allow_render_dupli_instance(%struct.Render* %94, %struct.DupliObject* %95, %struct.Object* %96), !dbg !5448
  %tobool98 = icmp ne i32 %call97, 0, !dbg !5448
  br i1 %tobool98, label %if.then99, label %if.else218, !dbg !5449

if.then99:                                        ; preds = %if.end96
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !5450, metadata !DIExpression()), !dbg !5454
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !5455, metadata !DIExpression()), !dbg !5456
  store %struct.ObjectRen* null, %struct.ObjectRen** %obr, align 8, !dbg !5456
  call void @llvm.dbg.declare(metadata i32* %psysindex, metadata !5457, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat100, metadata !5459, metadata !DIExpression()), !dbg !5460
  store %struct.ObjectInstanceRen* null, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5461
  %97 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5462
  %type101 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %97, i32 0, i32 6, !dbg !5464
  %98 = load i16, i16* %type101, align 4, !dbg !5464
  %conv102 = sext i16 %98 to i32, !dbg !5462
  %cmp103 = icmp ne i32 %conv102, 256, !dbg !5465
  br i1 %cmp103, label %if.then108, label %lor.lhs.false105, !dbg !5466

lor.lhs.false105:                                 ; preds = %if.then99
  %99 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5467
  %100 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5468
  %call106 = call %struct.ObjectRen* @find_dupligroup_dupli(%struct.Render* %99, %struct.Object* %100, i32 0), !dbg !5469
  store %struct.ObjectRen* %call106, %struct.ObjectRen** %obr, align 8, !dbg !5470
  %tobool107 = icmp ne %struct.ObjectRen* %call106, null, !dbg !5470
  br i1 %tobool107, label %if.then108, label %if.end141, !dbg !5471

if.then108:                                       ; preds = %lor.lhs.false105, %if.then99
  %arraydecay109 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat100, i64 0, i64 0, !dbg !5472
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5474
  %viewmat110 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 32, !dbg !5475
  %arraydecay111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat110, i64 0, i64 0, !dbg !5474
  %102 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5476
  %mat112 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %102, i32 0, i32 3, !dbg !5477
  %arraydecay113 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat112, i64 0, i64 0, !dbg !5476
  call void @mul_m4_m4m4([4 x float]* %arraydecay109, [4 x float]* %arraydecay111, [4 x float]* %arraydecay113), !dbg !5478
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5479
  %104 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5480
  %105 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5481
  %106 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5482
  %persistent_id = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %106, i32 0, i32 9, !dbg !5483
  %arrayidx114 = getelementptr inbounds [8 x i32], [8 x i32]* %persistent_id, i64 0, i64 0, !dbg !5482
  %107 = load i32, i32* %arrayidx114, align 8, !dbg !5482
  %arraydecay115 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat100, i64 0, i64 0, !dbg !5484
  %108 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5485
  %lay116 = getelementptr inbounds %struct.Object, %struct.Object* %108, i32 0, i32 52, !dbg !5486
  %109 = load i32, i32* %lay116, align 8, !dbg !5486
  %call117 = call %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render* %103, %struct.ObjectRen* null, %struct.Object* %104, %struct.Object* %105, i32 %107, i32 0, [4 x float]* %arraydecay115, i32 %109), !dbg !5487
  store %struct.ObjectInstanceRen* %call117, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5488
  %110 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5489
  %111 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5490
  %112 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5491
  %113 = load %struct.DupliExtraData*, %struct.DupliExtraData** %dob_extra, align 8, !dbg !5492
  %obmat118 = getelementptr inbounds %struct.DupliExtraData, %struct.DupliExtraData* %113, i32 0, i32 0, !dbg !5493
  %arraydecay119 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat118, i64 0, i64 0, !dbg !5492
  call void @set_dupli_tex_mat(%struct.Render* %110, %struct.ObjectInstanceRen* %111, %struct.DupliObject* %112, [4 x float]* %arraydecay119), !dbg !5494
  %114 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5495
  %type120 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %114, i32 0, i32 6, !dbg !5497
  %115 = load i16, i16* %type120, align 4, !dbg !5497
  %conv121 = sext i16 %115 to i32, !dbg !5495
  %cmp122 = icmp ne i32 %conv121, 256, !dbg !5498
  br i1 %cmp122, label %if.then124, label %if.else133, !dbg !5499

if.then124:                                       ; preds = %if.then108
  %116 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5500
  %dupliorco = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %116, i32 0, i32 12, !dbg !5502
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %dupliorco, i64 0, i64 0, !dbg !5500
  %117 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5503
  %orco = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %117, i32 0, i32 4, !dbg !5504
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !5503
  call void @copy_v3_v3(float* %arraydecay125, float* %arraydecay126), !dbg !5505
  %118 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5506
  %uv = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %118, i32 0, i32 5, !dbg !5507
  %arrayidx127 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !5506
  %119 = load float, float* %arrayidx127, align 4, !dbg !5506
  %120 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5508
  %dupliuv = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %120, i32 0, i32 13, !dbg !5509
  %arrayidx128 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv, i64 0, i64 0, !dbg !5508
  store float %119, float* %arrayidx128, align 8, !dbg !5510
  %121 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5511
  %uv129 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %121, i32 0, i32 5, !dbg !5512
  %arrayidx130 = getelementptr inbounds [2 x float], [2 x float]* %uv129, i64 0, i64 1, !dbg !5511
  %122 = load float, float* %arrayidx130, align 4, !dbg !5511
  %123 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5513
  %dupliuv131 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %123, i32 0, i32 13, !dbg !5514
  %arrayidx132 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv131, i64 0, i64 1, !dbg !5513
  store float %122, float* %arrayidx132, align 4, !dbg !5515
  br label %if.end140, !dbg !5516

if.else133:                                       ; preds = %if.then108
  %124 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5517
  %125 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5519
  %126 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5520
  %127 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5521
  call void @assign_dupligroup_dupli(%struct.Render* %124, %struct.ObjectInstanceRen* %125, %struct.ObjectRen* %126, %struct.DupliObject* %127), !dbg !5522
  %128 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5523
  %transflag134 = getelementptr inbounds %struct.Object, %struct.Object* %128, i32 0, i32 55, !dbg !5525
  %129 = load i16, i16* %transflag134, align 8, !dbg !5525
  %conv135 = sext i16 %129 to i32, !dbg !5523
  %and136 = and i32 %conv135, 4096, !dbg !5526
  %tobool137 = icmp ne i32 %and136, 0, !dbg !5526
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !5527

if.then138:                                       ; preds = %if.else133
  %130 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5528
  %131 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5529
  %132 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5530
  call void @find_dupli_instances(%struct.Render* %130, %struct.ObjectRen* %131, %struct.DupliObject* %132), !dbg !5531
  br label %if.end139, !dbg !5531

if.end139:                                        ; preds = %if.then138, %if.else133
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then124
  br label %if.end141, !dbg !5532

if.end141:                                        ; preds = %if.end140, %lor.lhs.false105
  store i32 1, i32* %psysindex, align 4, !dbg !5533
  %133 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5534
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 109, !dbg !5536
  %first142 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !5537
  %134 = load i8*, i8** %first142, align 8, !dbg !5537
  %135 = bitcast i8* %134 to %struct.ParticleSystem*, !dbg !5534
  store %struct.ParticleSystem* %135, %struct.ParticleSystem** %psys, align 8, !dbg !5538
  br label %for.cond143, !dbg !5539

for.cond143:                                      ; preds = %for.inc196, %if.end141
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5540
  %tobool144 = icmp ne %struct.ParticleSystem* %136, null, !dbg !5542
  br i1 %tobool144, label %for.body145, label %for.end198, !dbg !5542

for.body145:                                      ; preds = %for.cond143
  %137 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5543
  %type146 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %137, i32 0, i32 6, !dbg !5546
  %138 = load i16, i16* %type146, align 4, !dbg !5546
  %conv147 = sext i16 %138 to i32, !dbg !5543
  %cmp148 = icmp ne i32 %conv147, 256, !dbg !5547
  br i1 %cmp148, label %if.then153, label %lor.lhs.false150, !dbg !5548

lor.lhs.false150:                                 ; preds = %for.body145
  %139 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5549
  %140 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5550
  %141 = load i32, i32* %psysindex, align 4, !dbg !5551
  %call151 = call %struct.ObjectRen* @find_dupligroup_dupli(%struct.Render* %139, %struct.Object* %140, i32 %141), !dbg !5552
  store %struct.ObjectRen* %call151, %struct.ObjectRen** %obr, align 8, !dbg !5553
  %tobool152 = icmp ne %struct.ObjectRen* %call151, null, !dbg !5553
  br i1 %tobool152, label %if.then153, label %if.end195, !dbg !5554

if.then153:                                       ; preds = %lor.lhs.false150, %for.body145
  %142 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5555
  %cmp154 = icmp eq %struct.ObjectInstanceRen* %142, null, !dbg !5558
  br i1 %cmp154, label %if.then156, label %if.end162, !dbg !5559

if.then156:                                       ; preds = %if.then153
  %arraydecay157 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat100, i64 0, i64 0, !dbg !5560
  %143 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5561
  %viewmat158 = getelementptr inbounds %struct.Render, %struct.Render* %143, i32 0, i32 32, !dbg !5562
  %arraydecay159 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat158, i64 0, i64 0, !dbg !5561
  %144 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5563
  %mat160 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %144, i32 0, i32 3, !dbg !5564
  %arraydecay161 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat160, i64 0, i64 0, !dbg !5563
  call void @mul_m4_m4m4([4 x float]* %arraydecay157, [4 x float]* %arraydecay159, [4 x float]* %arraydecay161), !dbg !5565
  br label %if.end162, !dbg !5565

if.end162:                                        ; preds = %if.then156, %if.then153
  %145 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5566
  %146 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5567
  %147 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5568
  %148 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5569
  %persistent_id163 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %148, i32 0, i32 9, !dbg !5570
  %arrayidx164 = getelementptr inbounds [8 x i32], [8 x i32]* %persistent_id163, i64 0, i64 0, !dbg !5569
  %149 = load i32, i32* %arrayidx164, align 8, !dbg !5569
  %150 = load i32, i32* %psysindex, align 4, !dbg !5571
  %inc = add nsw i32 %150, 1, !dbg !5571
  store i32 %inc, i32* %psysindex, align 4, !dbg !5571
  %arraydecay165 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat100, i64 0, i64 0, !dbg !5572
  %151 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5573
  %lay166 = getelementptr inbounds %struct.Object, %struct.Object* %151, i32 0, i32 52, !dbg !5574
  %152 = load i32, i32* %lay166, align 8, !dbg !5574
  %call167 = call %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render* %145, %struct.ObjectRen* null, %struct.Object* %146, %struct.Object* %147, i32 %149, i32 %150, [4 x float]* %arraydecay165, i32 %152), !dbg !5575
  store %struct.ObjectInstanceRen* %call167, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5576
  %153 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5577
  %154 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5578
  %155 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5579
  %156 = load %struct.DupliExtraData*, %struct.DupliExtraData** %dob_extra, align 8, !dbg !5580
  %obmat168 = getelementptr inbounds %struct.DupliExtraData, %struct.DupliExtraData* %156, i32 0, i32 0, !dbg !5581
  %arraydecay169 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat168, i64 0, i64 0, !dbg !5580
  call void @set_dupli_tex_mat(%struct.Render* %153, %struct.ObjectInstanceRen* %154, %struct.DupliObject* %155, [4 x float]* %arraydecay169), !dbg !5582
  %157 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5583
  %type170 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %157, i32 0, i32 6, !dbg !5585
  %158 = load i16, i16* %type170, align 4, !dbg !5585
  %conv171 = sext i16 %158 to i32, !dbg !5583
  %cmp172 = icmp ne i32 %conv171, 256, !dbg !5586
  br i1 %cmp172, label %if.then174, label %if.else187, !dbg !5587

if.then174:                                       ; preds = %if.end162
  %159 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5588
  %dupliorco175 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %159, i32 0, i32 12, !dbg !5590
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %dupliorco175, i64 0, i64 0, !dbg !5588
  %160 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5591
  %orco177 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %160, i32 0, i32 4, !dbg !5592
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %orco177, i64 0, i64 0, !dbg !5591
  call void @copy_v3_v3(float* %arraydecay176, float* %arraydecay178), !dbg !5593
  %161 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5594
  %uv179 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %161, i32 0, i32 5, !dbg !5595
  %arrayidx180 = getelementptr inbounds [2 x float], [2 x float]* %uv179, i64 0, i64 0, !dbg !5594
  %162 = load float, float* %arrayidx180, align 4, !dbg !5594
  %163 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5596
  %dupliuv181 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %163, i32 0, i32 13, !dbg !5597
  %arrayidx182 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv181, i64 0, i64 0, !dbg !5596
  store float %162, float* %arrayidx182, align 8, !dbg !5598
  %164 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5599
  %uv183 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %164, i32 0, i32 5, !dbg !5600
  %arrayidx184 = getelementptr inbounds [2 x float], [2 x float]* %uv183, i64 0, i64 1, !dbg !5599
  %165 = load float, float* %arrayidx184, align 4, !dbg !5599
  %166 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5601
  %dupliuv185 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %166, i32 0, i32 13, !dbg !5602
  %arrayidx186 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv185, i64 0, i64 1, !dbg !5601
  store float %165, float* %arrayidx186, align 4, !dbg !5603
  br label %if.end194, !dbg !5604

if.else187:                                       ; preds = %if.end162
  %167 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5605
  %168 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5607
  %169 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5608
  %170 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5609
  call void @assign_dupligroup_dupli(%struct.Render* %167, %struct.ObjectInstanceRen* %168, %struct.ObjectRen* %169, %struct.DupliObject* %170), !dbg !5610
  %171 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5611
  %transflag188 = getelementptr inbounds %struct.Object, %struct.Object* %171, i32 0, i32 55, !dbg !5613
  %172 = load i16, i16* %transflag188, align 8, !dbg !5613
  %conv189 = sext i16 %172 to i32, !dbg !5611
  %and190 = and i32 %conv189, 4096, !dbg !5614
  %tobool191 = icmp ne i32 %and190, 0, !dbg !5614
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !5615

if.then192:                                       ; preds = %if.else187
  %173 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5616
  %174 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5617
  %175 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5618
  call void @find_dupli_instances(%struct.Render* %173, %struct.ObjectRen* %174, %struct.DupliObject* %175), !dbg !5619
  br label %if.end193, !dbg !5619

if.end193:                                        ; preds = %if.then192, %if.else187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then174
  br label %if.end195, !dbg !5620

if.end195:                                        ; preds = %if.end194, %lor.lhs.false150
  br label %for.inc196, !dbg !5621

for.inc196:                                       ; preds = %if.end195
  %176 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !5622
  %next197 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %176, i32 0, i32 0, !dbg !5623
  %177 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next197, align 8, !dbg !5623
  store %struct.ParticleSystem* %177, %struct.ParticleSystem** %psys, align 8, !dbg !5624
  br label %for.cond143, !dbg !5625, !llvm.loop !5626

for.end198:                                       ; preds = %for.cond143
  %178 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5628
  %cmp199 = icmp eq %struct.ObjectInstanceRen* %178, null, !dbg !5630
  br i1 %cmp199, label %if.then201, label %if.end204, !dbg !5631

if.then201:                                       ; preds = %for.end198
  %179 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5632
  %180 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5633
  %181 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5634
  %182 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5635
  %183 = load %struct.DupliExtraData*, %struct.DupliExtraData** %dob_extra, align 8, !dbg !5636
  %obmat202 = getelementptr inbounds %struct.DupliExtraData, %struct.DupliExtraData* %183, i32 0, i32 0, !dbg !5637
  %arraydecay203 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat202, i64 0, i64 0, !dbg !5636
  %184 = load i32, i32* %timeoffset.addr, align 4, !dbg !5638
  call void @init_render_object(%struct.Render* %179, %struct.Object* %180, %struct.Object* %181, %struct.DupliObject* %182, [4 x float]* %arraydecay203, i32 %184), !dbg !5639
  br label %if.end204, !dbg !5639

if.end204:                                        ; preds = %if.then201, %for.end198
  %185 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5640
  %type205 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %185, i32 0, i32 6, !dbg !5642
  %186 = load i16, i16* %type205, align 4, !dbg !5642
  %conv206 = sext i16 %186 to i32, !dbg !5640
  %cmp207 = icmp ne i32 %conv206, 256, !dbg !5643
  br i1 %cmp207, label %if.then209, label %if.end217, !dbg !5644

if.then209:                                       ; preds = %if.end204
  %187 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5645
  %flag210 = getelementptr inbounds %struct.Object, %struct.Object* %187, i32 0, i32 53, !dbg !5647
  %188 = load i16, i16* %flag210, align 4, !dbg !5648
  %conv211 = sext i16 %188 to i32, !dbg !5648
  %or = or i32 %conv211, 1024, !dbg !5648
  %conv212 = trunc i32 %or to i16, !dbg !5648
  store i16 %conv212, i16* %flag210, align 4, !dbg !5648
  %189 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5649
  %transflag213 = getelementptr inbounds %struct.Object, %struct.Object* %189, i32 0, i32 55, !dbg !5650
  %190 = load i16, i16* %transflag213, align 8, !dbg !5651
  %conv214 = sext i16 %190 to i32, !dbg !5651
  %or215 = or i32 %conv214, 4096, !dbg !5651
  %conv216 = trunc i32 %or215 to i16, !dbg !5651
  store i16 %conv216, i16* %transflag213, align 8, !dbg !5651
  br label %if.end217, !dbg !5652

if.end217:                                        ; preds = %if.then209, %if.end204
  br label %if.end221, !dbg !5653

if.else218:                                       ; preds = %if.end96
  %191 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5654
  %192 = load %struct.Object*, %struct.Object** %obd, align 8, !dbg !5655
  %193 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5656
  %194 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5657
  %195 = load %struct.DupliExtraData*, %struct.DupliExtraData** %dob_extra, align 8, !dbg !5658
  %obmat219 = getelementptr inbounds %struct.DupliExtraData, %struct.DupliExtraData* %195, i32 0, i32 0, !dbg !5659
  %arraydecay220 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat219, i64 0, i64 0, !dbg !5658
  %196 = load i32, i32* %timeoffset.addr, align 4, !dbg !5660
  call void @init_render_object(%struct.Render* %191, %struct.Object* %192, %struct.Object* %193, %struct.DupliObject* %194, [4 x float]* %arraydecay220, i32 %196), !dbg !5661
  br label %if.end221

if.end221:                                        ; preds = %if.else218, %if.end217
  %197 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5662
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %197, i32 0, i32 96, !dbg !5664
  %198 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !5664
  %199 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5665
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %199, i32 0, i32 97, !dbg !5666
  %200 = load i8*, i8** %tbh, align 8, !dbg !5666
  %call222 = call i32 %198(i8* %200), !dbg !5662
  %tobool223 = icmp ne i32 %call222, 0, !dbg !5662
  br i1 %tobool223, label %if.then224, label %if.end225, !dbg !5667

if.then224:                                       ; preds = %if.end221
  br label %for.end229, !dbg !5668

if.end225:                                        ; preds = %if.end221
  br label %for.inc226, !dbg !5669

for.inc226:                                       ; preds = %if.end225, %if.then95, %if.then91, %if.then85, %if.then81
  %201 = load %struct.DupliObject*, %struct.DupliObject** %dob, align 8, !dbg !5670
  %next227 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %201, i32 0, i32 0, !dbg !5671
  %202 = load %struct.DupliObject*, %struct.DupliObject** %next227, align 8, !dbg !5671
  store %struct.DupliObject* %202, %struct.DupliObject** %dob, align 8, !dbg !5672
  %203 = load i32, i32* %i, align 4, !dbg !5673
  %inc228 = add nsw i32 %203, 1, !dbg !5673
  store i32 %inc228, i32* %i, align 4, !dbg !5673
  br label %for.cond66, !dbg !5674, !llvm.loop !5675

for.end229:                                       ; preds = %if.then224, %for.cond66
  %204 = load %struct.DupliApplyData*, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5677
  %tobool230 = icmp ne %struct.DupliApplyData* %204, null, !dbg !5677
  br i1 %tobool230, label %if.then231, label %if.end232, !dbg !5679

if.then231:                                       ; preds = %for.end229
  %205 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !5680
  %206 = load %struct.DupliApplyData*, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5682
  call void @duplilist_restore(%struct.ListBase* %205, %struct.DupliApplyData* %206), !dbg !5683
  %207 = load %struct.DupliApplyData*, %struct.DupliApplyData** %duplilist_apply_data, align 8, !dbg !5684
  call void @duplilist_free_apply_data(%struct.DupliApplyData* %207), !dbg !5685
  br label %if.end232, !dbg !5686

if.end232:                                        ; preds = %if.then231, %for.end229
  %208 = load %struct.ListBase*, %struct.ListBase** %duplilist, align 8, !dbg !5687
  call void @free_object_duplilist(%struct.ListBase* %208), !dbg !5688
  %209 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5689
  %210 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5691
  %211 = load i32, i32* %nolamps.addr, align 4, !dbg !5692
  %212 = load i32, i32* %onlyselected.addr, align 4, !dbg !5693
  %213 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !5694
  %call233 = call i32 @allow_render_object(%struct.Render* %209, %struct.Object* %210, i32 %211, i32 %212, %struct.Object* %213), !dbg !5695
  %tobool234 = icmp ne i32 %call233, 0, !dbg !5695
  br i1 %tobool234, label %if.then235, label %if.end236, !dbg !5696

if.then235:                                       ; preds = %if.end232
  %214 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5697
  %215 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5698
  %216 = load i32, i32* %timeoffset.addr, align 4, !dbg !5699
  call void @init_render_object(%struct.Render* %214, %struct.Object* %215, %struct.Object* null, %struct.DupliObject* null, [4 x float]* null, i32 %216), !dbg !5700
  br label %if.end236, !dbg !5700

if.end236:                                        ; preds = %if.then235, %if.end232
  br label %if.end242, !dbg !5701

if.else237:                                       ; preds = %land.lhs.true56, %if.then51
  %217 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5702
  %218 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5704
  %219 = load i32, i32* %nolamps.addr, align 4, !dbg !5705
  %220 = load i32, i32* %onlyselected.addr, align 4, !dbg !5706
  %221 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !5707
  %call238 = call i32 @allow_render_object(%struct.Render* %217, %struct.Object* %218, i32 %219, i32 %220, %struct.Object* %221), !dbg !5708
  %tobool239 = icmp ne i32 %call238, 0, !dbg !5708
  br i1 %tobool239, label %if.then240, label %if.end241, !dbg !5709

if.then240:                                       ; preds = %if.else237
  %222 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5710
  %223 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5711
  %224 = load i32, i32* %timeoffset.addr, align 4, !dbg !5712
  call void @init_render_object(%struct.Render* %222, %struct.Object* %223, %struct.Object* null, %struct.DupliObject* null, [4 x float]* null, i32 %224), !dbg !5713
  br label %if.end241, !dbg !5713

if.end241:                                        ; preds = %if.then240, %if.else237
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.end236
  br label %if.end243, !dbg !5714

if.end243:                                        ; preds = %if.end242, %land.lhs.true, %lor.lhs.false
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.end41
  %225 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5715
  %test_break245 = getelementptr inbounds %struct.Render, %struct.Render* %225, i32 0, i32 96, !dbg !5717
  %226 = load i32 (i8*)*, i32 (i8*)** %test_break245, align 8, !dbg !5717
  %227 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5718
  %tbh246 = getelementptr inbounds %struct.Render, %struct.Render* %227, i32 0, i32 97, !dbg !5719
  %228 = load i8*, i8** %tbh246, align 8, !dbg !5719
  %call247 = call i32 %226(i8* %228), !dbg !5715
  %tobool248 = icmp ne i32 %call247, 0, !dbg !5715
  br i1 %tobool248, label %if.then249, label %if.end250, !dbg !5720

if.then249:                                       ; preds = %if.end244
  br label %for.end253, !dbg !5721

if.end250:                                        ; preds = %if.end244
  br label %for.inc251, !dbg !5722

for.inc251:                                       ; preds = %if.end250, %if.then
  %229 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !5269
  %call252 = call %struct.Base* @_setlooper_base_step(%struct.Scene** %sce_iter, %struct.Base* %229), !dbg !5269
  store %struct.Base* %call252, %struct.Base** %base, align 8, !dbg !5269
  br label %for.cond13, !dbg !5723, !llvm.loop !5724

for.end253:                                       ; preds = %if.then249, %for.cond13
  %230 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5726
  %main254 = getelementptr inbounds %struct.Render, %struct.Render* %230, i32 0, i32 43, !dbg !5728
  %231 = load %struct.Main*, %struct.Main** %main254, align 8, !dbg !5728
  %group255 = getelementptr inbounds %struct.Main, %struct.Main* %231, i32 0, i32 32, !dbg !5729
  %first256 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group255, i32 0, i32 0, !dbg !5730
  %232 = load i8*, i8** %first256, align 8, !dbg !5730
  %233 = bitcast i8* %232 to %struct.Group*, !dbg !5726
  store %struct.Group* %233, %struct.Group** %group, align 8, !dbg !5731
  br label %for.cond257, !dbg !5732

for.cond257:                                      ; preds = %for.inc260, %for.end253
  %234 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5733
  %tobool258 = icmp ne %struct.Group* %234, null, !dbg !5735
  br i1 %tobool258, label %for.body259, label %for.end263, !dbg !5735

for.body259:                                      ; preds = %for.cond257
  %235 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5736
  %236 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5737
  %237 = load i32, i32* %nolamps.addr, align 4, !dbg !5738
  %238 = load i32, i32* %onlyselected.addr, align 4, !dbg !5739
  %239 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !5740
  %240 = load i32, i32* %timeoffset.addr, align 4, !dbg !5741
  call void @add_group_render_dupli_obs(%struct.Render* %235, %struct.Group* %236, i32 %237, i32 %238, %struct.Object* %239, i32 %240, i32 0), !dbg !5742
  br label %for.inc260, !dbg !5742

for.inc260:                                       ; preds = %for.body259
  %241 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5743
  %id261 = getelementptr inbounds %struct.Group, %struct.Group* %241, i32 0, i32 0, !dbg !5744
  %next262 = getelementptr inbounds %struct.ID, %struct.ID* %id261, i32 0, i32 0, !dbg !5745
  %242 = load i8*, i8** %next262, align 8, !dbg !5745
  %243 = bitcast i8* %242 to %struct.Group*, !dbg !5743
  store %struct.Group* %243, %struct.Group** %group, align 8, !dbg !5746
  br label %for.cond257, !dbg !5747, !llvm.loop !5748

for.end263:                                       ; preds = %for.cond257
  %244 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5750
  %test_break264 = getelementptr inbounds %struct.Render, %struct.Render* %244, i32 0, i32 96, !dbg !5752
  %245 = load i32 (i8*)*, i32 (i8*)** %test_break264, align 8, !dbg !5752
  %246 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5753
  %tbh265 = getelementptr inbounds %struct.Render, %struct.Render* %246, i32 0, i32 97, !dbg !5754
  %247 = load i8*, i8** %tbh265, align 8, !dbg !5754
  %call266 = call i32 %245(i8* %247), !dbg !5750
  %tobool267 = icmp ne i32 %call266, 0, !dbg !5750
  br i1 %tobool267, label %if.end269, label %if.then268, !dbg !5755

if.then268:                                       ; preds = %for.end263
  %248 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5756
  call void @RE_makeRenderInstances(%struct.Render* %248), !dbg !5757
  br label %if.end269, !dbg !5757

if.end269:                                        ; preds = %if.then268, %for.end263
  ret void, !dbg !5758
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_material_lightgroups(%struct.Render* %re) #0 !dbg !5759 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %group = alloca %struct.Group*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !5762, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !5764, metadata !DIExpression()), !dbg !5765
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5766
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 44, !dbg !5768
  %1 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5768
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %1, i32 0, i32 22, !dbg !5769
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !5770
  %2 = load i32, i32* %scemode, align 4, !dbg !5770
  %and = and i32 %2, 524296, !dbg !5771
  %tobool = icmp ne i32 %and, 0, !dbg !5771
  br i1 %tobool, label %if.then, label %if.end, !dbg !5772

if.then:                                          ; preds = %entry
  br label %for.end25, !dbg !5773

if.end:                                           ; preds = %entry
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5774
  %main = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 43, !dbg !5776
  %4 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !5776
  %group1 = getelementptr inbounds %struct.Main, %struct.Main* %4, i32 0, i32 32, !dbg !5777
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group1, i32 0, i32 0, !dbg !5778
  %5 = load i8*, i8** %first, align 8, !dbg !5778
  %6 = bitcast i8* %5 to %struct.Group*, !dbg !5774
  store %struct.Group* %6, %struct.Group** %group, align 8, !dbg !5779
  br label %for.cond, !dbg !5780

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5781
  %tobool2 = icmp ne %struct.Group* %7, null, !dbg !5783
  br i1 %tobool2, label %for.body, label %for.end, !dbg !5783

for.body:                                         ; preds = %for.cond
  %8 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5784
  %id = getelementptr inbounds %struct.Group, %struct.Group* %8, i32 0, i32 0, !dbg !5785
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !5786
  %9 = load i16, i16* %flag, align 2, !dbg !5787
  %conv = sext i16 %9 to i32, !dbg !5787
  %or = or i32 %conv, 1024, !dbg !5787
  %conv3 = trunc i32 %or to i16, !dbg !5787
  store i16 %conv3, i16* %flag, align 2, !dbg !5787
  br label %for.inc, !dbg !5784

for.inc:                                          ; preds = %for.body
  %10 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !5788
  %id4 = getelementptr inbounds %struct.Group, %struct.Group* %10, i32 0, i32 0, !dbg !5789
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id4, i32 0, i32 0, !dbg !5790
  %11 = load i8*, i8** %next, align 8, !dbg !5790
  %12 = bitcast i8* %11 to %struct.Group*, !dbg !5788
  store %struct.Group* %12, %struct.Group** %group, align 8, !dbg !5791
  br label %for.cond, !dbg !5792, !llvm.loop !5793

for.end:                                          ; preds = %for.cond
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5795
  %main5 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 43, !dbg !5797
  %14 = load %struct.Main*, %struct.Main** %main5, align 8, !dbg !5797
  %mat = getelementptr inbounds %struct.Main, %struct.Main* %14, i32 0, i32 17, !dbg !5798
  %first6 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mat, i32 0, i32 0, !dbg !5799
  %15 = load i8*, i8** %first6, align 8, !dbg !5799
  %16 = bitcast i8* %15 to %struct.Material*, !dbg !5795
  store %struct.Material* %16, %struct.Material** %ma, align 8, !dbg !5800
  br label %for.cond7, !dbg !5801

for.cond7:                                        ; preds = %for.inc22, %for.end
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5802
  %tobool8 = icmp ne %struct.Material* %17, null, !dbg !5804
  br i1 %tobool8, label %for.body9, label %for.end25, !dbg !5804

for.body9:                                        ; preds = %for.cond7
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5805
  %group10 = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 105, !dbg !5808
  %19 = load %struct.Group*, %struct.Group** %group10, align 8, !dbg !5808
  %tobool11 = icmp ne %struct.Group* %19, null, !dbg !5805
  br i1 %tobool11, label %land.lhs.true, label %if.end21, !dbg !5809

land.lhs.true:                                    ; preds = %for.body9
  %20 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5810
  %group12 = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 105, !dbg !5811
  %21 = load %struct.Group*, %struct.Group** %group12, align 8, !dbg !5811
  %id13 = getelementptr inbounds %struct.Group, %struct.Group* %21, i32 0, i32 0, !dbg !5812
  %flag14 = getelementptr inbounds %struct.ID, %struct.ID* %id13, i32 0, i32 5, !dbg !5813
  %22 = load i16, i16* %flag14, align 2, !dbg !5813
  %conv15 = sext i16 %22 to i32, !dbg !5810
  %and16 = and i32 %conv15, 1024, !dbg !5814
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5814
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !5815

if.then18:                                        ; preds = %land.lhs.true
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5816
  %24 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5817
  %group19 = getelementptr inbounds %struct.Material, %struct.Material* %24, i32 0, i32 105, !dbg !5818
  %25 = load %struct.Group*, %struct.Group** %group19, align 8, !dbg !5818
  %26 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5819
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 51, !dbg !5820
  %27 = load i32, i32* %mode, align 4, !dbg !5820
  %and20 = and i32 %27, 268435456, !dbg !5821
  call void @add_lightgroup(%struct.Render* %23, %struct.Group* %25, i32 %and20), !dbg !5822
  br label %if.end21, !dbg !5822

if.end21:                                         ; preds = %if.then18, %land.lhs.true, %for.body9
  br label %for.inc22, !dbg !5823

for.inc22:                                        ; preds = %if.end21
  %28 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !5824
  %id23 = getelementptr inbounds %struct.Material, %struct.Material* %28, i32 0, i32 0, !dbg !5825
  %next24 = getelementptr inbounds %struct.ID, %struct.ID* %id23, i32 0, i32 0, !dbg !5826
  %29 = load i8*, i8** %next24, align 8, !dbg !5826
  %30 = bitcast i8* %29 to %struct.Material*, !dbg !5824
  store %struct.Material* %30, %struct.Material** %ma, align 8, !dbg !5827
  br label %for.cond7, !dbg !5828, !llvm.loop !5829

for.end25:                                        ; preds = %if.then, %for.cond7
  ret void, !dbg !5831
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_renderlayer_lightgroups(%struct.Render* %re, %struct.Scene* %sce) #0 !dbg !5832 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5835, metadata !DIExpression()), !dbg !5836
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !5837, metadata !DIExpression()), !dbg !5838
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !5839, metadata !DIExpression()), !dbg !5869
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !5870
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !5872
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !5873
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !5874
  %1 = load i8*, i8** %first, align 8, !dbg !5874
  %2 = bitcast i8* %1 to %struct.SceneRenderLayer*, !dbg !5870
  store %struct.SceneRenderLayer* %2, %struct.SceneRenderLayer** %srl, align 8, !dbg !5875
  br label %for.cond, !dbg !5876

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !5877
  %tobool = icmp ne %struct.SceneRenderLayer* %3, null, !dbg !5879
  br i1 %tobool, label %for.body, label %for.end, !dbg !5879

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !5880
  %light_override = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %4, i32 0, i32 4, !dbg !5883
  %5 = load %struct.Group*, %struct.Group** %light_override, align 8, !dbg !5883
  %tobool1 = icmp ne %struct.Group* %5, null, !dbg !5880
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5884

if.then:                                          ; preds = %for.body
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5885
  %7 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !5886
  %light_override2 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %7, i32 0, i32 4, !dbg !5887
  %8 = load %struct.Group*, %struct.Group** %light_override2, align 8, !dbg !5887
  call void @add_lightgroup(%struct.Render* %6, %struct.Group* %8, i32 0), !dbg !5888
  br label %if.end, !dbg !5888

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5889

for.inc:                                          ; preds = %if.end
  %9 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !5890
  %next = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %9, i32 0, i32 0, !dbg !5891
  %10 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next, align 8, !dbg !5891
  store %struct.SceneRenderLayer* %10, %struct.SceneRenderLayer** %srl, align 8, !dbg !5892
  br label %for.cond, !dbg !5893, !llvm.loop !5894

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5896
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_Database_Preprocess(%struct.Render* %re) #0 !dbg !5897 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tothalo = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5898, metadata !DIExpression()), !dbg !5899
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5900
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 96, !dbg !5902
  %1 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !5902
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5903
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 97, !dbg !5904
  %3 = load i8*, i8** %tbh, align 8, !dbg !5904
  %call = call i32 %1(i8* %3), !dbg !5900
  %tobool = icmp ne i32 %call, 0, !dbg !5900
  br i1 %tobool, label %if.end84, label %if.then, !dbg !5905

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %tothalo, metadata !5906, metadata !DIExpression()), !dbg !5908
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5909
  %tothalo1 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 62, !dbg !5910
  %5 = load i32, i32* %tothalo1, align 8, !dbg !5910
  store i32 %5, i32* %tothalo, align 4, !dbg !5911
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5912
  %7 = load i32, i32* %tothalo, align 4, !dbg !5913
  call void @sort_halos(%struct.Render* %6, i32 %7), !dbg !5914
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5915
  call void @init_camera_inside_volumes(%struct.Render* %8), !dbg !5916
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5917
  %i = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 98, !dbg !5918
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 16, !dbg !5919
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8** %infostr, align 8, !dbg !5920
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5921
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 90, !dbg !5922
  %11 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !5922
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5923
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 91, !dbg !5924
  %13 = load i8*, i8** %sdh, align 8, !dbg !5924
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5925
  %i2 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 98, !dbg !5926
  call void %11(i8* %13, %struct.RenderStats* %i2), !dbg !5921
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5927
  call void @threaded_makeshadowbufs(%struct.Render* %15), !dbg !5928
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5929
  %test_break3 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 96, !dbg !5932
  %17 = load i32 (i8*)*, i32 (i8*)** %test_break3, align 8, !dbg !5932
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5933
  %tbh4 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 97, !dbg !5934
  %19 = load i8*, i8** %tbh4, align 8, !dbg !5934
  %call5 = call i32 %17(i8* %19), !dbg !5929
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5929
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !5935

if.then7:                                         ; preds = %if.then
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5936
  %r = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 45, !dbg !5939
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !5940
  %21 = load i32, i32* %mode, align 8, !dbg !5940
  %and = and i32 %21, 65536, !dbg !5941
  %tobool8 = icmp ne i32 %and, 0, !dbg !5941
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !5942

if.then9:                                         ; preds = %if.then7
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5943
  call void @makeraytree(%struct.Render* %22), !dbg !5945
  br label %if.end, !dbg !5946

if.end:                                           ; preds = %if.then9, %if.then7
  br label %if.end10, !dbg !5947

if.end10:                                         ; preds = %if.end, %if.then
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5948
  %test_break11 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 96, !dbg !5950
  %24 = load i32 (i8*)*, i32 (i8*)** %test_break11, align 8, !dbg !5950
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5951
  %tbh12 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 97, !dbg !5952
  %26 = load i8*, i8** %tbh12, align 8, !dbg !5952
  %call13 = call i32 %24(i8* %26), !dbg !5948
  %tobool14 = icmp ne i32 %call13, 0, !dbg !5948
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5953

if.then15:                                        ; preds = %if.end10
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5954
  call void @make_envmaps(%struct.Render* %27), !dbg !5955
  br label %if.end16, !dbg !5955

if.end16:                                         ; preds = %if.then15, %if.end10
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5956
  %test_break17 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 96, !dbg !5958
  %29 = load i32 (i8*)*, i32 (i8*)** %test_break17, align 8, !dbg !5958
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5959
  %tbh18 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 97, !dbg !5960
  %31 = load i8*, i8** %tbh18, align 8, !dbg !5960
  %call19 = call i32 %29(i8* %31), !dbg !5956
  %tobool20 = icmp ne i32 %call19, 0, !dbg !5956
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !5961

if.then21:                                        ; preds = %if.end16
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5962
  call void @make_pointdensities(%struct.Render* %32), !dbg !5963
  br label %if.end22, !dbg !5963

if.end22:                                         ; preds = %if.then21, %if.end16
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5964
  %test_break23 = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 96, !dbg !5966
  %34 = load i32 (i8*)*, i32 (i8*)** %test_break23, align 8, !dbg !5966
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5967
  %tbh24 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 97, !dbg !5968
  %36 = load i8*, i8** %tbh24, align 8, !dbg !5968
  %call25 = call i32 %34(i8* %36), !dbg !5964
  %tobool26 = icmp ne i32 %call25, 0, !dbg !5964
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !5969

if.then27:                                        ; preds = %if.end22
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5970
  call void @make_voxeldata(%struct.Render* %37), !dbg !5971
  br label %if.end28, !dbg !5971

if.end28:                                         ; preds = %if.then27, %if.end22
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5972
  %test_break29 = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 96, !dbg !5974
  %39 = load i32 (i8*)*, i32 (i8*)** %test_break29, align 8, !dbg !5974
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5975
  %tbh30 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 97, !dbg !5976
  %41 = load i8*, i8** %tbh30, align 8, !dbg !5976
  %call31 = call i32 %39(i8* %41), !dbg !5972
  %tobool32 = icmp ne i32 %call31, 0, !dbg !5972
  br i1 %tobool32, label %if.end38, label %if.then33, !dbg !5977

if.then33:                                        ; preds = %if.end28
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5978
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5979
  %r34 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 45, !dbg !5980
  %mode35 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r34, i32 0, i32 47, !dbg !5981
  %44 = load i32, i32* %mode35, align 8, !dbg !5981
  %and36 = and i32 %44, 1024, !dbg !5982
  %cmp = icmp ne i32 %and36, 0, !dbg !5983
  %conv = zext i1 %cmp to i32, !dbg !5983
  %conv37 = trunc i32 %conv to i8, !dbg !5984
  call void @project_renderdata(%struct.Render* %42, void (float*, [4 x float]*, float*)* @projectverto, i8 zeroext %conv37, float 0.000000e+00, i8 zeroext 1), !dbg !5985
  br label %if.end38, !dbg !5985

if.end38:                                         ; preds = %if.then33, %if.end28
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5986
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 46, !dbg !5988
  %mode39 = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 23, !dbg !5989
  %46 = load i16, i16* %mode39, align 2, !dbg !5989
  %conv40 = sext i16 %46 to i32, !dbg !5986
  %and41 = and i32 %conv40, 208, !dbg !5990
  %tobool42 = icmp ne i32 %and41, 0, !dbg !5990
  br i1 %tobool42, label %land.lhs.true, label %if.end60, !dbg !5991

land.lhs.true:                                    ; preds = %if.end38
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5992
  %test_break43 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 96, !dbg !5993
  %48 = load i32 (i8*)*, i32 (i8*)** %test_break43, align 8, !dbg !5993
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5994
  %tbh44 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 97, !dbg !5995
  %50 = load i8*, i8** %tbh44, align 8, !dbg !5995
  %call45 = call i32 %48(i8* %50), !dbg !5992
  %tobool46 = icmp ne i32 %call45, 0, !dbg !5992
  br i1 %tobool46, label %if.end60, label %if.then47, !dbg !5996

if.then47:                                        ; preds = %land.lhs.true
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5997
  %wrld48 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 46, !dbg !5999
  %ao_gather_method = getelementptr inbounds %struct.World, %struct.World* %wrld48, i32 0, i32 64, !dbg !6000
  %52 = load i16, i16* %ao_gather_method, align 2, !dbg !6000
  %conv49 = sext i16 %52 to i32, !dbg !5997
  %cmp50 = icmp eq i32 %conv49, 1, !dbg !6001
  br i1 %cmp50, label %if.then52, label %if.end59, !dbg !6002

if.then52:                                        ; preds = %if.then47
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6003
  %r53 = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 45, !dbg !6005
  %mode54 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r53, i32 0, i32 47, !dbg !6006
  %54 = load i32, i32* %mode54, align 8, !dbg !6006
  %and55 = and i32 %54, 2, !dbg !6007
  %tobool56 = icmp ne i32 %and55, 0, !dbg !6007
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !6008

if.then57:                                        ; preds = %if.then52
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6009
  call void @make_occ_tree(%struct.Render* %55), !dbg !6010
  br label %if.end58, !dbg !6010

if.end58:                                         ; preds = %if.then57, %if.then52
  br label %if.end59, !dbg !6011

if.end59:                                         ; preds = %if.end58, %if.then47
  br label %if.end60, !dbg !6012

if.end60:                                         ; preds = %if.end59, %land.lhs.true, %if.end38
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6013
  %r61 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 45, !dbg !6015
  %mode62 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r61, i32 0, i32 47, !dbg !6016
  %57 = load i32, i32* %mode62, align 8, !dbg !6016
  %and63 = and i32 %57, 2097152, !dbg !6017
  %tobool64 = icmp ne i32 %and63, 0, !dbg !6017
  br i1 %tobool64, label %land.lhs.true65, label %if.end71, !dbg !6018

land.lhs.true65:                                  ; preds = %if.end60
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6019
  %test_break66 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 96, !dbg !6020
  %59 = load i32 (i8*)*, i32 (i8*)** %test_break66, align 8, !dbg !6020
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6021
  %tbh67 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 97, !dbg !6022
  %61 = load i8*, i8** %tbh67, align 8, !dbg !6022
  %call68 = call i32 %59(i8* %61), !dbg !6019
  %tobool69 = icmp ne i32 %call68, 0, !dbg !6019
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !6023

if.then70:                                        ; preds = %land.lhs.true65
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6024
  call void @make_sss_tree(%struct.Render* %62), !dbg !6025
  br label %if.end71, !dbg !6025

if.end71:                                         ; preds = %if.then70, %land.lhs.true65, %if.end60
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6026
  %test_break72 = getelementptr inbounds %struct.Render, %struct.Render* %63, i32 0, i32 96, !dbg !6028
  %64 = load i32 (i8*)*, i32 (i8*)** %test_break72, align 8, !dbg !6028
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6029
  %tbh73 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 97, !dbg !6030
  %66 = load i8*, i8** %tbh73, align 8, !dbg !6030
  %call74 = call i32 %64(i8* %66), !dbg !6026
  %tobool75 = icmp ne i32 %call74, 0, !dbg !6026
  br i1 %tobool75, label %if.end83, label %if.then76, !dbg !6031

if.then76:                                        ; preds = %if.end71
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6032
  %r77 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 45, !dbg !6034
  %mode78 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r77, i32 0, i32 47, !dbg !6035
  %68 = load i32, i32* %mode78, align 8, !dbg !6035
  %and79 = and i32 %68, 65536, !dbg !6036
  %tobool80 = icmp ne i32 %and79, 0, !dbg !6036
  br i1 %tobool80, label %if.then81, label %if.end82, !dbg !6037

if.then81:                                        ; preds = %if.then76
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6038
  call void @volume_precache(%struct.Render* %69), !dbg !6039
  br label %if.end82, !dbg !6039

if.end82:                                         ; preds = %if.then81, %if.then76
  br label %if.end83, !dbg !6040

if.end83:                                         ; preds = %if.end82, %if.end71
  br label %if.end84, !dbg !6041

if.end84:                                         ; preds = %if.end83, %entry
  %70 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6042
  %i85 = getelementptr inbounds %struct.Render, %struct.Render* %70, i32 0, i32 98, !dbg !6043
  %convertdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i85, i32 0, i32 11, !dbg !6044
  store i16 1, i16* %convertdone, align 4, !dbg !6045
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6046
  %test_break86 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 96, !dbg !6048
  %72 = load i32 (i8*)*, i32 (i8*)** %test_break86, align 8, !dbg !6048
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6049
  %tbh87 = getelementptr inbounds %struct.Render, %struct.Render* %73, i32 0, i32 97, !dbg !6050
  %74 = load i8*, i8** %tbh87, align 8, !dbg !6050
  %call88 = call i32 %72(i8* %74), !dbg !6046
  %tobool89 = icmp ne i32 %call88, 0, !dbg !6046
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !6051

if.then90:                                        ; preds = %if.end84
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6052
  call void @RE_Database_Free(%struct.Render* %75), !dbg !6053
  br label %if.end91, !dbg !6053

if.end91:                                         ; preds = %if.then90, %if.end84
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6054
  %i92 = getelementptr inbounds %struct.Render, %struct.Render* %76, i32 0, i32 98, !dbg !6055
  %infostr93 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i92, i32 0, i32 16, !dbg !6056
  store i8* null, i8** %infostr93, align 8, !dbg !6057
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6058
  %stats_draw94 = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 90, !dbg !6059
  %78 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw94, align 8, !dbg !6059
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6060
  %sdh95 = getelementptr inbounds %struct.Render, %struct.Render* %79, i32 0, i32 91, !dbg !6061
  %80 = load i8*, i8** %sdh95, align 8, !dbg !6061
  %81 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6062
  %i96 = getelementptr inbounds %struct.Render, %struct.Render* %81, i32 0, i32 98, !dbg !6063
  call void %78(i8* %80, %struct.RenderStats* %i96), !dbg !6058
  ret void, !dbg !6064
}

; Function Attrs: noinline nounwind uwtable
define internal void @sort_halos(%struct.Render* %re, i32 %totsort) #0 !dbg !6065 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %totsort.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %har = alloca %struct.HaloRen*, align 8
  %haso = alloca %struct.HaloRen**, align 8
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store i32 %totsort, i32* %totsort.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totsort.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !6072, metadata !DIExpression()), !dbg !6073
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !6074, metadata !DIExpression()), !dbg !6076
  store %struct.HaloRen* null, %struct.HaloRen** %har, align 8, !dbg !6076
  call void @llvm.dbg.declare(metadata %struct.HaloRen*** %haso, metadata !6077, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6080, metadata !DIExpression()), !dbg !6081
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6082
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 62, !dbg !6084
  %1 = load i32, i32* %tothalo, align 8, !dbg !6084
  %cmp = icmp eq i32 %1, 0, !dbg !6085
  br i1 %cmp, label %if.then, label %if.end, !dbg !6086

if.then:                                          ; preds = %entry
  br label %return, !dbg !6087

if.end:                                           ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6088
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6089
  %tothalo1 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 62, !dbg !6090
  %4 = load i32, i32* %tothalo1, align 8, !dbg !6090
  %conv = sext i32 %4 to i64, !dbg !6089
  %mul = mul i64 8, %conv, !dbg !6091
  %call = call i8* %2(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)), !dbg !6088
  %5 = bitcast i8* %call to %struct.HaloRen**, !dbg !6088
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6092
  %sortedhalos = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 65, !dbg !6093
  store %struct.HaloRen** %5, %struct.HaloRen*** %sortedhalos, align 8, !dbg !6094
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6095
  %sortedhalos2 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 65, !dbg !6096
  %8 = load %struct.HaloRen**, %struct.HaloRen*** %sortedhalos2, align 8, !dbg !6096
  store %struct.HaloRen** %8, %struct.HaloRen*** %haso, align 8, !dbg !6097
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6098
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 68, !dbg !6100
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objecttable, i32 0, i32 0, !dbg !6101
  %10 = load i8*, i8** %first, align 8, !dbg !6101
  %11 = bitcast i8* %10 to %struct.ObjectRen*, !dbg !6098
  store %struct.ObjectRen* %11, %struct.ObjectRen** %obr, align 8, !dbg !6102
  br label %for.cond, !dbg !6103

for.cond:                                         ; preds = %for.inc13, %if.end
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6104
  %tobool = icmp ne %struct.ObjectRen* %12, null, !dbg !6106
  br i1 %tobool, label %for.body, label %for.end14, !dbg !6106

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !6107
  br label %for.cond3, !dbg !6110

for.cond3:                                        ; preds = %for.inc, %for.body
  %13 = load i32, i32* %a, align 4, !dbg !6111
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6113
  %tothalo4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 13, !dbg !6114
  %15 = load i32, i32* %tothalo4, align 4, !dbg !6114
  %cmp5 = icmp slt i32 %13, %15, !dbg !6115
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !6116

for.body7:                                        ; preds = %for.cond3
  %16 = load i32, i32* %a, align 4, !dbg !6117
  %and = and i32 %16, 255, !dbg !6120
  %cmp8 = icmp eq i32 %and, 0, !dbg !6121
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !6122

if.then10:                                        ; preds = %for.body7
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6123
  %bloha = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %17, i32 0, i32 21, !dbg !6124
  %18 = load %struct.HaloRen**, %struct.HaloRen*** %bloha, align 8, !dbg !6124
  %19 = load i32, i32* %a, align 4, !dbg !6125
  %shr = ashr i32 %19, 8, !dbg !6126
  %idxprom = sext i32 %shr to i64, !dbg !6123
  %arrayidx = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %18, i64 %idxprom, !dbg !6123
  %20 = load %struct.HaloRen*, %struct.HaloRen** %arrayidx, align 8, !dbg !6123
  store %struct.HaloRen* %20, %struct.HaloRen** %har, align 8, !dbg !6127
  br label %if.end11, !dbg !6128

if.else:                                          ; preds = %for.body7
  %21 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6129
  %incdec.ptr = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %21, i32 1, !dbg !6129
  store %struct.HaloRen* %incdec.ptr, %struct.HaloRen** %har, align 8, !dbg !6129
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  %22 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !6130
  %23 = load %struct.HaloRen**, %struct.HaloRen*** %haso, align 8, !dbg !6131
  %incdec.ptr12 = getelementptr inbounds %struct.HaloRen*, %struct.HaloRen** %23, i32 1, !dbg !6131
  store %struct.HaloRen** %incdec.ptr12, %struct.HaloRen*** %haso, align 8, !dbg !6131
  store %struct.HaloRen* %22, %struct.HaloRen** %23, align 8, !dbg !6132
  br label %for.inc, !dbg !6133

for.inc:                                          ; preds = %if.end11
  %24 = load i32, i32* %a, align 4, !dbg !6134
  %inc = add nsw i32 %24, 1, !dbg !6134
  store i32 %inc, i32* %a, align 4, !dbg !6134
  br label %for.cond3, !dbg !6135, !llvm.loop !6136

for.end:                                          ; preds = %for.cond3
  br label %for.inc13, !dbg !6138

for.inc13:                                        ; preds = %for.end
  %25 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6139
  %next = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %25, i32 0, i32 0, !dbg !6140
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %next, align 8, !dbg !6140
  store %struct.ObjectRen* %26, %struct.ObjectRen** %obr, align 8, !dbg !6141
  br label %for.cond, !dbg !6142, !llvm.loop !6143

for.end14:                                        ; preds = %for.cond
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6145
  %sortedhalos15 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 65, !dbg !6146
  %28 = load %struct.HaloRen**, %struct.HaloRen*** %sortedhalos15, align 8, !dbg !6146
  %29 = bitcast %struct.HaloRen** %28 to i8*, !dbg !6145
  %30 = load i32, i32* %totsort.addr, align 4, !dbg !6147
  %conv16 = sext i32 %30 to i64, !dbg !6147
  call void @qsort(i8* %29, i64 %conv16, i64 8, i32 (i8*, i8*)* @verghalo), !dbg !6148
  br label %return, !dbg !6149

return:                                           ; preds = %for.end14, %if.then
  ret void, !dbg !6149
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_camera_inside_volumes(%struct.Render* %re) #0 !dbg !6150 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %vo = alloca %struct.VolumeOb*, align 8
  %co = alloca [3 x float], align 4
  %mi = alloca %struct.MatInside*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6151, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata %struct.VolumeOb** %vo, metadata !6155, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !6166, metadata !DIExpression()), !dbg !6167
  %arrayinit.begin = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6168
  store float 0.000000e+00, float* %arrayinit.begin, align 4, !dbg !6168
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !6168
  store float 0.000000e+00, float* %arrayinit.element, align 4, !dbg !6168
  %arrayinit.element1 = getelementptr inbounds float, float* %arrayinit.element, i64 1, !dbg !6168
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6169
  %clipsta = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 36, !dbg !6170
  %1 = load float, float* %clipsta, align 8, !dbg !6170
  %fneg = fneg float %1, !dbg !6171
  store float %fneg, float* %arrayinit.element1, align 4, !dbg !6168
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6172
  %volumes = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 80, !dbg !6174
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %volumes, i32 0, i32 0, !dbg !6175
  %3 = load i8*, i8** %first, align 8, !dbg !6175
  %4 = bitcast i8* %3 to %struct.VolumeOb*, !dbg !6172
  store %struct.VolumeOb* %4, %struct.VolumeOb** %vo, align 8, !dbg !6176
  br label %for.cond, !dbg !6177

for.cond:                                         ; preds = %for.inc13, %entry
  %5 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !6178
  %tobool = icmp ne %struct.VolumeOb* %5, null, !dbg !6180
  br i1 %tobool, label %for.body, label %for.end15, !dbg !6180

for.body:                                         ; preds = %for.cond
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6181
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 70, !dbg !6184
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !6185
  %7 = load i8*, i8** %first2, align 8, !dbg !6185
  %8 = bitcast i8* %7 to %struct.ObjectInstanceRen*, !dbg !6181
  store %struct.ObjectInstanceRen* %8, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6186
  br label %for.cond3, !dbg !6187

for.cond3:                                        ; preds = %for.inc, %for.body
  %9 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6188
  %tobool4 = icmp ne %struct.ObjectInstanceRen* %9, null, !dbg !6190
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !6190

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6191
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %10, i32 0, i32 2, !dbg !6194
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6194
  %12 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !6195
  %obr6 = getelementptr inbounds %struct.VolumeOb, %struct.VolumeOb* %12, i32 0, i32 3, !dbg !6196
  %13 = load %struct.ObjectRen*, %struct.ObjectRen** %obr6, align 8, !dbg !6196
  %cmp = icmp eq %struct.ObjectRen* %11, %13, !dbg !6197
  br i1 %cmp, label %if.then, label %if.end12, !dbg !6198

if.then:                                          ; preds = %for.body5
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6199
  %15 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6202
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6203
  %call = call i32 @point_inside_volume_objectinstance(%struct.Render* %14, %struct.ObjectInstanceRen* %15, float* %arraydecay), !dbg !6204
  %tobool7 = icmp ne i32 %call, 0, !dbg !6204
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6205

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MatInside** %mi, metadata !6206, metadata !DIExpression()), !dbg !6217
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6218
  %call9 = call i8* %16(i64 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0)), !dbg !6218
  %17 = bitcast i8* %call9 to %struct.MatInside*, !dbg !6218
  store %struct.MatInside* %17, %struct.MatInside** %mi, align 8, !dbg !6219
  %18 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !6220
  %ma = getelementptr inbounds %struct.VolumeOb, %struct.VolumeOb* %18, i32 0, i32 2, !dbg !6221
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !6221
  %20 = load %struct.MatInside*, %struct.MatInside** %mi, align 8, !dbg !6222
  %ma10 = getelementptr inbounds %struct.MatInside, %struct.MatInside* %20, i32 0, i32 2, !dbg !6223
  store %struct.Material* %19, %struct.Material** %ma10, align 8, !dbg !6224
  %21 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6225
  %22 = load %struct.MatInside*, %struct.MatInside** %mi, align 8, !dbg !6226
  %obi11 = getelementptr inbounds %struct.MatInside, %struct.MatInside* %22, i32 0, i32 3, !dbg !6227
  store %struct.ObjectInstanceRen* %21, %struct.ObjectInstanceRen** %obi11, align 8, !dbg !6228
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6229
  %render_volumes_inside = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 79, !dbg !6230
  %24 = load %struct.MatInside*, %struct.MatInside** %mi, align 8, !dbg !6231
  %25 = bitcast %struct.MatInside* %24 to i8*, !dbg !6231
  call void @BLI_addtail(%struct.ListBase* %render_volumes_inside, i8* %25), !dbg !6232
  br label %if.end, !dbg !6233

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end12, !dbg !6234

if.end12:                                         ; preds = %if.end, %for.body5
  br label %for.inc, !dbg !6235

for.inc:                                          ; preds = %if.end12
  %26 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6236
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %26, i32 0, i32 0, !dbg !6237
  %27 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !6237
  store %struct.ObjectInstanceRen* %27, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6238
  br label %for.cond3, !dbg !6239, !llvm.loop !6240

for.end:                                          ; preds = %for.cond3
  br label %for.inc13, !dbg !6242

for.inc13:                                        ; preds = %for.end
  %28 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !6243
  %next14 = getelementptr inbounds %struct.VolumeOb, %struct.VolumeOb* %28, i32 0, i32 0, !dbg !6244
  %29 = load %struct.VolumeOb*, %struct.VolumeOb** %next14, align 8, !dbg !6244
  store %struct.VolumeOb* %29, %struct.VolumeOb** %vo, align 8, !dbg !6245
  br label %for.cond, !dbg !6246, !llvm.loop !6247

for.end15:                                        ; preds = %for.cond
  ret void, !dbg !6249
}

declare dso_local void @threaded_makeshadowbufs(%struct.Render*) #4

declare dso_local void @makeraytree(%struct.Render*) #4

declare dso_local void @make_envmaps(%struct.Render*) #4

declare dso_local void @make_pointdensities(%struct.Render*) #4

declare dso_local void @make_voxeldata(%struct.Render*) #4

declare dso_local void @project_renderdata(%struct.Render*, void (float*, [4 x float]*, float*)*, i8 zeroext, float, i8 zeroext) #4

declare dso_local void @projectverto(float*, [4 x float]*, float*) #4

declare dso_local void @make_occ_tree(%struct.Render*) #4

declare dso_local void @make_sss_tree(%struct.Render*) #4

declare dso_local void @volume_precache(%struct.Render*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_DataBase_ApplyWindow(%struct.Render* %re) #0 !dbg !6250 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6253
  call void @project_renderdata(%struct.Render* %0, void (float*, [4 x float]*, float*)* @projectverto, i8 zeroext 0, float 0.000000e+00, i8 zeroext 0), !dbg !6254
  ret void, !dbg !6255
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_DataBase_IncrementalView(%struct.Render* %re, [4 x float]* %viewmat, i32 %restore) #0 !dbg !6256 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %viewmat.addr = alloca [4 x float]*, align 8
  %restore.addr = alloca i32, align 4
  %oldviewinv = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store [4 x float]* %viewmat, [4 x float]** %viewmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %viewmat.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  store i32 %restore, i32* %restore.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %restore.addr, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %oldviewinv, metadata !6265, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !6267, metadata !DIExpression()), !dbg !6268
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %oldviewinv, i64 0, i64 0, !dbg !6269
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6270
  %viewmat_orig = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 34, !dbg !6271
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat_orig, i64 0, i64 0, !dbg !6270
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1), !dbg !6272
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6273
  %1 = load [4 x float]*, [4 x float]** %viewmat.addr, align 8, !dbg !6274
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %oldviewinv, i64 0, i64 0, !dbg !6275
  call void @mul_m4_m4m4([4 x float]* %arraydecay2, [4 x float]* %1, [4 x float]* %arraydecay3), !dbg !6276
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6277
  %viewmat4 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 32, !dbg !6278
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat4, i64 0, i64 0, !dbg !6277
  %3 = load [4 x float]*, [4 x float]** %viewmat.addr, align 8, !dbg !6279
  call void @copy_m4_m4([4 x float]* %arraydecay5, [4 x float]* %3), !dbg !6280
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6281
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 33, !dbg !6282
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !6281
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6283
  %viewmat7 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 32, !dbg !6284
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat7, i64 0, i64 0, !dbg !6283
  %call9 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay8), !dbg !6285
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6286
  call void @init_camera_inside_volumes(%struct.Render* %6), !dbg !6287
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6288
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !6289
  %8 = load i32, i32* %restore.addr, align 4, !dbg !6290
  %tobool = icmp ne i32 %8, 0, !dbg !6291
  %lnot = xor i1 %tobool, true, !dbg !6291
  %lnot.ext = zext i1 %lnot to i32, !dbg !6291
  call void @env_rotate_scene(%struct.Render* %7, [4 x float]* %arraydecay10, i32 %lnot.ext), !dbg !6292
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6293
  %r = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 45, !dbg !6295
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !6296
  %10 = load i32, i32* %mode, align 8, !dbg !6296
  %and = and i32 %10, 2097152, !dbg !6297
  %tobool11 = icmp ne i32 %and, 0, !dbg !6297
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !6298

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6299
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 96, !dbg !6300
  %12 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !6300
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6301
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 97, !dbg !6302
  %14 = load i8*, i8** %tbh, align 8, !dbg !6302
  %call12 = call i32 %12(i8* %14), !dbg !6299
  %tobool13 = icmp ne i32 %call12, 0, !dbg !6299
  br i1 %tobool13, label %if.end, label %if.then, !dbg !6303

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6304
  call void @make_sss_tree(%struct.Render* %15), !dbg !6305
  br label %if.end, !dbg !6305

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6306
}

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #4

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #4

declare dso_local void @env_rotate_scene(%struct.Render*, [4 x float]*, i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_DataBase_GetView(%struct.Render* %re, [4 x float]* %mat) #0 !dbg !6307 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  %0 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !6314
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6315
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 32, !dbg !6316
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !6315
  call void @copy_m4_m4([4 x float]* %0, [4 x float]* %arraydecay), !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_Database_FromScene_Vectors(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %sce, i32 %lay) #0 !dbg !6319 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %sce.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %oldobi = alloca %struct.ObjectInstanceRen*, align 8
  %mesh = alloca %struct.StrandSurface*, align 8
  %table = alloca %struct.ListBase*, align 8
  %oldtable = alloca %struct.ListBase, align 8
  %newtable = alloca %struct.ListBase, align 8
  %strandsurface = alloca %struct.ListBase, align 8
  %step = alloca i32, align 4
  %vectorlay = alloca i32, align 4
  %ok = alloca i32, align 4
  %fluidmd = alloca %struct.FluidsimModifierData*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6322, metadata !DIExpression()), !dbg !6323
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !6324, metadata !DIExpression()), !dbg !6325
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6330, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %oldobi, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh, metadata !6334, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.declare(metadata %struct.ListBase** %table, metadata !6338, metadata !DIExpression()), !dbg !6339
  call void @llvm.dbg.declare(metadata %struct.ListBase* %oldtable, metadata !6340, metadata !DIExpression()), !dbg !6341
  %0 = bitcast %struct.ListBase* %oldtable to i8*, !dbg !6341
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !6341
  call void @llvm.dbg.declare(metadata %struct.ListBase* %newtable, metadata !6342, metadata !DIExpression()), !dbg !6343
  %1 = bitcast %struct.ListBase* %newtable to i8*, !dbg !6343
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 16, i1 false), !dbg !6343
  call void @llvm.dbg.declare(metadata %struct.ListBase* %strandsurface, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %step, metadata !6346, metadata !DIExpression()), !dbg !6347
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6348
  %i = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 98, !dbg !6349
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 16, !dbg !6350
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8** %infostr, align 8, !dbg !6351
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6352
  %r = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 45, !dbg !6353
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !6354
  %4 = load i32, i32* %mode, align 8, !dbg !6355
  %or = or i32 %4, 1048576, !dbg !6355
  store i32 %or, i32* %mode, align 8, !dbg !6355
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6356
  call void @speedvector_project(%struct.Render* %5, float* null, float* null, float* null), !dbg !6357
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6358
  %7 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6359
  %8 = load i32, i32* %lay.addr, align 4, !dbg !6360
  call void @database_fromscene_vectors(%struct.Render* %6, %struct.Scene* %7, i32 %8, i32 -1), !dbg !6361
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6362
  call void @copy_dbase_object_vectors(%struct.Render* %9, %struct.ListBase* %oldtable), !dbg !6363
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6364
  %strandsurface1 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 57, !dbg !6365
  %11 = bitcast %struct.ListBase* %strandsurface to i8*, !dbg !6365
  %12 = bitcast %struct.ListBase* %strandsurface1 to i8*, !dbg !6365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false), !dbg !6365
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6366
  %strandsurface2 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 57, !dbg !6367
  %14 = bitcast %struct.ListBase* %strandsurface2 to i8*, !dbg !6368
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false), !dbg !6368
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6369
  %i3 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 98, !dbg !6370
  %convertdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i3, i32 0, i32 11, !dbg !6371
  store i16 1, i16* %convertdone, align 4, !dbg !6372
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6373
  call void @RE_Database_Free(%struct.Render* %16), !dbg !6374
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6375
  %strandsurface4 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 57, !dbg !6376
  %18 = bitcast %struct.ListBase* %strandsurface4 to i8*, !dbg !6377
  %19 = bitcast %struct.ListBase* %strandsurface to i8*, !dbg !6377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !6377
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6378
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 96, !dbg !6380
  %21 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !6380
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6381
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 97, !dbg !6382
  %23 = load i8*, i8** %tbh, align 8, !dbg !6382
  %call = call i32 %21(i8* %23), !dbg !6378
  %tobool = icmp ne i32 %call, 0, !dbg !6378
  br i1 %tobool, label %if.end, label %if.then, !dbg !6383

if.then:                                          ; preds = %entry
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6384
  %i5 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 98, !dbg !6386
  %infostr6 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i5, i32 0, i32 16, !dbg !6387
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i8** %infostr6, align 8, !dbg !6388
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6389
  %26 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6390
  %27 = load i32, i32* %lay.addr, align 4, !dbg !6391
  call void @database_fromscene_vectors(%struct.Render* %25, %struct.Scene* %26, i32 %27, i32 1), !dbg !6392
  br label %if.end, !dbg !6393

if.end:                                           ; preds = %if.then, %entry
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6394
  call void @copy_dbase_object_vectors(%struct.Render* %28, %struct.ListBase* %newtable), !dbg !6395
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6396
  %strandsurface7 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 57, !dbg !6397
  %30 = bitcast %struct.ListBase* %strandsurface to i8*, !dbg !6397
  %31 = bitcast %struct.ListBase* %strandsurface7 to i8*, !dbg !6397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 16, i1 false), !dbg !6397
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6398
  %strandsurface8 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 57, !dbg !6399
  %33 = bitcast %struct.ListBase* %strandsurface8 to i8*, !dbg !6400
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false), !dbg !6400
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6401
  %i9 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 98, !dbg !6402
  %convertdone10 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i9, i32 0, i32 11, !dbg !6403
  store i16 1, i16* %convertdone10, align 4, !dbg !6404
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6405
  call void @RE_Database_Free(%struct.Render* %35), !dbg !6406
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6407
  %strandsurface11 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 57, !dbg !6408
  %37 = bitcast %struct.ListBase* %strandsurface11 to i8*, !dbg !6409
  %38 = bitcast %struct.ListBase* %strandsurface to i8*, !dbg !6409
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 16, i1 false), !dbg !6409
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6410
  %test_break12 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 96, !dbg !6412
  %40 = load i32 (i8*)*, i32 (i8*)** %test_break12, align 8, !dbg !6412
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6413
  %tbh13 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 97, !dbg !6414
  %42 = load i8*, i8** %tbh13, align 8, !dbg !6414
  %call14 = call i32 %40(i8* %42), !dbg !6410
  %tobool15 = icmp ne i32 %call14, 0, !dbg !6410
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !6415

if.then16:                                        ; preds = %if.end
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6416
  %44 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6418
  %45 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !6419
  %46 = load i32, i32* %lay.addr, align 4, !dbg !6420
  call void @RE_Database_FromScene(%struct.Render* %43, %struct.Main* %44, %struct.Scene* %45, i32 %46, i32 1), !dbg !6421
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6422
  call void @RE_Database_Preprocess(%struct.Render* %47), !dbg !6423
  br label %if.end17, !dbg !6424

if.end17:                                         ; preds = %if.then16, %if.end
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6425
  %test_break18 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 96, !dbg !6427
  %49 = load i32 (i8*)*, i32 (i8*)** %test_break18, align 8, !dbg !6427
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6428
  %tbh19 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 97, !dbg !6429
  %51 = load i8*, i8** %tbh19, align 8, !dbg !6429
  %call20 = call i32 %49(i8* %51), !dbg !6425
  %tobool21 = icmp ne i32 %call20, 0, !dbg !6425
  br i1 %tobool21, label %if.end111, label %if.then22, !dbg !6430

if.then22:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i32* %vectorlay, metadata !6431, metadata !DIExpression()), !dbg !6433
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6434
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %52, i32 0, i32 44, !dbg !6435
  %53 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6435
  %call23 = call i32 @get_vector_renderlayers(%struct.Scene* %53), !dbg !6436
  store i32 %call23, i32* %vectorlay, align 4, !dbg !6433
  store i32 0, i32* %step, align 4, !dbg !6437
  br label %for.cond, !dbg !6439

for.cond:                                         ; preds = %for.inc109, %if.then22
  %54 = load i32, i32* %step, align 4, !dbg !6440
  %cmp = icmp slt i32 %54, 2, !dbg !6442
  br i1 %cmp, label %for.body, label %for.end110, !dbg !6443

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %step, align 4, !dbg !6444
  %tobool24 = icmp ne i32 %55, 0, !dbg !6444
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !6447

if.then25:                                        ; preds = %for.body
  store %struct.ListBase* %newtable, %struct.ListBase** %table, align 8, !dbg !6448
  br label %if.end26, !dbg !6449

if.else:                                          ; preds = %for.body
  store %struct.ListBase* %oldtable, %struct.ListBase** %table, align 8, !dbg !6450
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  %56 = load %struct.ListBase*, %struct.ListBase** %table, align 8, !dbg !6451
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %56, i32 0, i32 0, !dbg !6452
  %57 = load i8*, i8** %first, align 8, !dbg !6452
  %58 = bitcast i8* %57 to %struct.ObjectInstanceRen*, !dbg !6451
  store %struct.ObjectInstanceRen* %58, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6453
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6454
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %59, i32 0, i32 70, !dbg !6456
  %first27 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !6457
  %60 = load i8*, i8** %first27, align 8, !dbg !6457
  %61 = bitcast i8* %60 to %struct.ObjectInstanceRen*, !dbg !6454
  store %struct.ObjectInstanceRen* %61, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6458
  br label %for.cond28, !dbg !6459

for.cond28:                                       ; preds = %for.inc106, %if.end26
  %62 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6460
  %tobool29 = icmp ne %struct.ObjectInstanceRen* %62, null, !dbg !6460
  br i1 %tobool29, label %land.rhs, label %land.end, !dbg !6462

land.rhs:                                         ; preds = %for.cond28
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6463
  %tobool30 = icmp ne %struct.ObjectInstanceRen* %63, null, !dbg !6462
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond28
  %64 = phi i1 [ false, %for.cond28 ], [ %tobool30, %land.rhs ], !dbg !6464
  br i1 %64, label %for.body31, label %for.end108, !dbg !6465

for.body31:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !6466, metadata !DIExpression()), !dbg !6468
  store i32 1, i32* %ok, align 4, !dbg !6468
  call void @llvm.dbg.declare(metadata %struct.FluidsimModifierData** %fluidmd, metadata !6469, metadata !DIExpression()), !dbg !6470
  %65 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6471
  %lay32 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %65, i32 0, i32 7, !dbg !6473
  %66 = load i32, i32* %lay32, align 8, !dbg !6473
  %67 = load i32, i32* %vectorlay, align 4, !dbg !6474
  %and = and i32 %66, %67, !dbg !6475
  %tobool33 = icmp ne i32 %and, 0, !dbg !6475
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !6476

if.then34:                                        ; preds = %for.body31
  br label %for.inc106, !dbg !6477

if.end35:                                         ; preds = %for.body31
  %68 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6478
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %68, i32 0, i32 2, !dbg !6479
  %69 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6479
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %69, i32 0, i32 10, !dbg !6480
  %70 = load i32, i32* %totvert, align 8, !dbg !6480
  %71 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6481
  %totvector = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %71, i32 0, i32 17, !dbg !6482
  store i32 %70, i32* %totvector, align 8, !dbg !6483
  %72 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6484
  %ob = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %72, i32 0, i32 3, !dbg !6486
  %73 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6486
  %74 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6487
  %ob36 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %74, i32 0, i32 3, !dbg !6488
  %75 = load %struct.Object*, %struct.Object** %ob36, align 8, !dbg !6488
  %cmp37 = icmp ne %struct.Object* %73, %75, !dbg !6489
  br i1 %cmp37, label %if.then46, label %lor.lhs.false, !dbg !6490

lor.lhs.false:                                    ; preds = %if.end35
  %76 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6491
  %par = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %76, i32 0, i32 4, !dbg !6492
  %77 = load %struct.Object*, %struct.Object** %par, align 8, !dbg !6492
  %78 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6493
  %par38 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %78, i32 0, i32 4, !dbg !6494
  %79 = load %struct.Object*, %struct.Object** %par38, align 8, !dbg !6494
  %cmp39 = icmp ne %struct.Object* %77, %79, !dbg !6495
  br i1 %cmp39, label %if.then46, label %lor.lhs.false40, !dbg !6496

lor.lhs.false40:                                  ; preds = %lor.lhs.false
  %80 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6497
  %index = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %80, i32 0, i32 5, !dbg !6498
  %81 = load i32, i32* %index, align 8, !dbg !6498
  %82 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6499
  %index41 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %82, i32 0, i32 5, !dbg !6500
  %83 = load i32, i32* %index41, align 8, !dbg !6500
  %cmp42 = icmp ne i32 %81, %83, !dbg !6501
  br i1 %cmp42, label %if.then46, label %lor.lhs.false43, !dbg !6502

lor.lhs.false43:                                  ; preds = %lor.lhs.false40
  %84 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6503
  %psysindex = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %84, i32 0, i32 6, !dbg !6504
  %85 = load i32, i32* %psysindex, align 4, !dbg !6504
  %86 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6505
  %psysindex44 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %86, i32 0, i32 6, !dbg !6506
  %87 = load i32, i32* %psysindex44, align 4, !dbg !6506
  %cmp45 = icmp ne i32 %85, %87, !dbg !6507
  br i1 %cmp45, label %if.then46, label %if.end72, !dbg !6508

if.then46:                                        ; preds = %lor.lhs.false43, %lor.lhs.false40, %lor.lhs.false, %if.end35
  store i32 0, i32* %ok, align 4, !dbg !6509
  %88 = load %struct.ListBase*, %struct.ListBase** %table, align 8, !dbg !6511
  %first47 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %88, i32 0, i32 0, !dbg !6513
  %89 = load i8*, i8** %first47, align 8, !dbg !6513
  %90 = bitcast i8* %89 to %struct.ObjectInstanceRen*, !dbg !6511
  store %struct.ObjectInstanceRen* %90, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6514
  br label %for.cond48, !dbg !6515

for.cond48:                                       ; preds = %for.inc, %if.then46
  %91 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6516
  %tobool49 = icmp ne %struct.ObjectInstanceRen* %91, null, !dbg !6518
  br i1 %tobool49, label %for.body50, label %for.end, !dbg !6518

for.body50:                                       ; preds = %for.cond48
  %92 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6519
  %ob51 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %92, i32 0, i32 3, !dbg !6521
  %93 = load %struct.Object*, %struct.Object** %ob51, align 8, !dbg !6521
  %94 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6522
  %ob52 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %94, i32 0, i32 3, !dbg !6523
  %95 = load %struct.Object*, %struct.Object** %ob52, align 8, !dbg !6523
  %cmp53 = icmp eq %struct.Object* %93, %95, !dbg !6524
  br i1 %cmp53, label %land.lhs.true, label %if.end66, !dbg !6525

land.lhs.true:                                    ; preds = %for.body50
  %96 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6526
  %par54 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %96, i32 0, i32 4, !dbg !6527
  %97 = load %struct.Object*, %struct.Object** %par54, align 8, !dbg !6527
  %98 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6528
  %par55 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %98, i32 0, i32 4, !dbg !6529
  %99 = load %struct.Object*, %struct.Object** %par55, align 8, !dbg !6529
  %cmp56 = icmp eq %struct.Object* %97, %99, !dbg !6530
  br i1 %cmp56, label %land.lhs.true57, label %if.end66, !dbg !6531

land.lhs.true57:                                  ; preds = %land.lhs.true
  %100 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6532
  %index58 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %100, i32 0, i32 5, !dbg !6533
  %101 = load i32, i32* %index58, align 8, !dbg !6533
  %102 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6534
  %index59 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %102, i32 0, i32 5, !dbg !6535
  %103 = load i32, i32* %index59, align 8, !dbg !6535
  %cmp60 = icmp eq i32 %101, %103, !dbg !6536
  br i1 %cmp60, label %land.lhs.true61, label %if.end66, !dbg !6537

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %104 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6538
  %psysindex62 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %104, i32 0, i32 6, !dbg !6539
  %105 = load i32, i32* %psysindex62, align 4, !dbg !6539
  %106 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6540
  %psysindex63 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %106, i32 0, i32 6, !dbg !6541
  %107 = load i32, i32* %psysindex63, align 4, !dbg !6541
  %cmp64 = icmp eq i32 %105, %107, !dbg !6542
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !6543

if.then65:                                        ; preds = %land.lhs.true61
  br label %for.end, !dbg !6544

if.end66:                                         ; preds = %land.lhs.true61, %land.lhs.true57, %land.lhs.true, %for.body50
  br label %for.inc, !dbg !6541

for.inc:                                          ; preds = %if.end66
  %108 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6545
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %108, i32 0, i32 0, !dbg !6546
  %109 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !6546
  store %struct.ObjectInstanceRen* %109, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6547
  br label %for.cond48, !dbg !6548, !llvm.loop !6549

for.end:                                          ; preds = %if.then65, %for.cond48
  %110 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6551
  %cmp67 = icmp eq %struct.ObjectInstanceRen* %110, null, !dbg !6553
  br i1 %cmp67, label %if.then68, label %if.else70, !dbg !6554

if.then68:                                        ; preds = %for.end
  %111 = load %struct.ListBase*, %struct.ListBase** %table, align 8, !dbg !6555
  %first69 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %111, i32 0, i32 0, !dbg !6556
  %112 = load i8*, i8** %first69, align 8, !dbg !6556
  %113 = bitcast i8* %112 to %struct.ObjectInstanceRen*, !dbg !6555
  store %struct.ObjectInstanceRen* %113, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6557
  br label %if.end71, !dbg !6558

if.else70:                                        ; preds = %for.end
  store i32 1, i32* %ok, align 4, !dbg !6559
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then68
  br label %if.end72, !dbg !6560

if.end72:                                         ; preds = %if.end71, %lor.lhs.false43
  %114 = load i32, i32* %ok, align 4, !dbg !6561
  %cmp73 = icmp eq i32 %114, 0, !dbg !6563
  br i1 %cmp73, label %if.then74, label %if.end77, !dbg !6564

if.then74:                                        ; preds = %if.end72
  %115 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6565
  %ob75 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %115, i32 0, i32 3, !dbg !6567
  %116 = load %struct.Object*, %struct.Object** %ob75, align 8, !dbg !6567
  %id = getelementptr inbounds %struct.Object, %struct.Object* %116, i32 0, i32 0, !dbg !6568
  %name = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !6569
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !6565
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !6570
  %call76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* %add.ptr), !dbg !6571
  br label %for.inc106, !dbg !6572

if.end77:                                         ; preds = %if.end72
  %117 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6573
  %ob78 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %117, i32 0, i32 3, !dbg !6574
  %118 = load %struct.Object*, %struct.Object** %ob78, align 8, !dbg !6574
  %call79 = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %118, i32 26), !dbg !6575
  %119 = bitcast %struct.ModifierData* %call79 to %struct.FluidsimModifierData*, !dbg !6576
  store %struct.FluidsimModifierData* %119, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !6577
  %120 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !6578
  %tobool80 = icmp ne %struct.FluidsimModifierData* %120, null, !dbg !6578
  br i1 %tobool80, label %land.lhs.true81, label %if.else89, !dbg !6580

land.lhs.true81:                                  ; preds = %if.end77
  %121 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !6581
  %fss = getelementptr inbounds %struct.FluidsimModifierData, %struct.FluidsimModifierData* %121, i32 0, i32 1, !dbg !6582
  %122 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss, align 8, !dbg !6582
  %tobool82 = icmp ne %struct.FluidsimSettings* %122, null, !dbg !6581
  br i1 %tobool82, label %land.lhs.true83, label %if.else89, !dbg !6583

land.lhs.true83:                                  ; preds = %land.lhs.true81
  %123 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !6584
  %fss84 = getelementptr inbounds %struct.FluidsimModifierData, %struct.FluidsimModifierData* %123, i32 0, i32 1, !dbg !6585
  %124 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss84, align 8, !dbg !6585
  %type = getelementptr inbounds %struct.FluidsimSettings, %struct.FluidsimSettings* %124, i32 0, i32 3, !dbg !6586
  %125 = load i16, i16* %type, align 8, !dbg !6586
  %conv = sext i16 %125 to i32, !dbg !6584
  %and85 = and i32 %conv, 2, !dbg !6587
  %tobool86 = icmp ne i32 %and85, 0, !dbg !6587
  br i1 %tobool86, label %if.then87, label %if.else89, !dbg !6588

if.then87:                                        ; preds = %land.lhs.true83
  %126 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6589
  %127 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6591
  %128 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6592
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %128, i32 0, i32 16, !dbg !6593
  %129 = load float*, float** %vectors, align 8, !dbg !6593
  %130 = load i32, i32* %step, align 4, !dbg !6594
  %call88 = call i32 @load_fluidsimspeedvectors(%struct.Render* %126, %struct.ObjectInstanceRen* %127, float* %129, i32 %130), !dbg !6595
  br label %if.end104, !dbg !6596

if.else89:                                        ; preds = %land.lhs.true83, %land.lhs.true81, %if.end77
  %131 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6597
  %totvector90 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %131, i32 0, i32 17, !dbg !6600
  %132 = load i32, i32* %totvector90, align 8, !dbg !6600
  %133 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6601
  %totvector91 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %133, i32 0, i32 17, !dbg !6602
  %134 = load i32, i32* %totvector91, align 8, !dbg !6602
  %cmp92 = icmp eq i32 %132, %134, !dbg !6603
  br i1 %cmp92, label %if.then94, label %if.else96, !dbg !6604

if.then94:                                        ; preds = %if.else89
  %135 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6605
  %136 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6606
  %137 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6607
  %vectors95 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %137, i32 0, i32 16, !dbg !6608
  %138 = load float*, float** %vectors95, align 8, !dbg !6608
  %139 = load i32, i32* %step, align 4, !dbg !6609
  call void @calculate_speedvectors(%struct.Render* %135, %struct.ObjectInstanceRen* %136, float* %138, i32 %139), !dbg !6610
  br label %if.end103, !dbg !6610

if.else96:                                        ; preds = %if.else89
  %140 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6611
  %ob97 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %140, i32 0, i32 3, !dbg !6612
  %141 = load %struct.Object*, %struct.Object** %ob97, align 8, !dbg !6612
  %id98 = getelementptr inbounds %struct.Object, %struct.Object* %141, i32 0, i32 0, !dbg !6613
  %name99 = getelementptr inbounds %struct.ID, %struct.ID* %id98, i32 0, i32 4, !dbg !6614
  %arraydecay100 = getelementptr inbounds [66 x i8], [66 x i8]* %name99, i64 0, i64 0, !dbg !6611
  %add.ptr101 = getelementptr inbounds i8, i8* %arraydecay100, i64 2, !dbg !6615
  %call102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.6, i64 0, i64 0), i8* %add.ptr101), !dbg !6616
  br label %if.end103

if.end103:                                        ; preds = %if.else96, %if.then94
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then87
  %142 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6617
  %next105 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %142, i32 0, i32 0, !dbg !6618
  %143 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next105, align 8, !dbg !6618
  store %struct.ObjectInstanceRen* %143, %struct.ObjectInstanceRen** %oldobi, align 8, !dbg !6619
  br label %for.inc106, !dbg !6620

for.inc106:                                       ; preds = %if.end104, %if.then74, %if.then34
  %144 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6621
  %next107 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %144, i32 0, i32 0, !dbg !6622
  %145 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next107, align 8, !dbg !6622
  store %struct.ObjectInstanceRen* %145, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6623
  br label %for.cond28, !dbg !6624, !llvm.loop !6625

for.end108:                                       ; preds = %land.end
  br label %for.inc109, !dbg !6627

for.inc109:                                       ; preds = %for.end108
  %146 = load i32, i32* %step, align 4, !dbg !6628
  %inc = add nsw i32 %146, 1, !dbg !6628
  store i32 %inc, i32* %step, align 4, !dbg !6628
  br label %for.cond, !dbg !6629, !llvm.loop !6630

for.end110:                                       ; preds = %for.cond
  br label %if.end111, !dbg !6632

if.end111:                                        ; preds = %for.end110, %if.end17
  call void @free_dbase_object_vectors(%struct.ListBase* %oldtable), !dbg !6633
  call void @free_dbase_object_vectors(%struct.ListBase* %newtable), !dbg !6634
  %147 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6635
  %strandsurface112 = getelementptr inbounds %struct.Render, %struct.Render* %147, i32 0, i32 57, !dbg !6637
  %first113 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strandsurface112, i32 0, i32 0, !dbg !6638
  %148 = load i8*, i8** %first113, align 8, !dbg !6638
  %149 = bitcast i8* %148 to %struct.StrandSurface*, !dbg !6635
  store %struct.StrandSurface* %149, %struct.StrandSurface** %mesh, align 8, !dbg !6639
  br label %for.cond114, !dbg !6640

for.cond114:                                      ; preds = %for.inc127, %if.end111
  %150 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6641
  %tobool115 = icmp ne %struct.StrandSurface* %150, null, !dbg !6643
  br i1 %tobool115, label %for.body116, label %for.end129, !dbg !6643

for.body116:                                      ; preds = %for.cond114
  %151 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6644
  %prevco = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %151, i32 0, i32 8, !dbg !6647
  %152 = load [3 x float]*, [3 x float]** %prevco, align 8, !dbg !6647
  %tobool117 = icmp ne [3 x float]* %152, null, !dbg !6644
  br i1 %tobool117, label %if.then118, label %if.end121, !dbg !6648

if.then118:                                       ; preds = %for.body116
  %153 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6649
  %154 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6651
  %prevco119 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %154, i32 0, i32 8, !dbg !6652
  %155 = load [3 x float]*, [3 x float]** %prevco119, align 8, !dbg !6652
  %156 = bitcast [3 x float]* %155 to i8*, !dbg !6651
  call void %153(i8* %156), !dbg !6649
  %157 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6653
  %prevco120 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %157, i32 0, i32 8, !dbg !6654
  store [3 x float]* null, [3 x float]** %prevco120, align 8, !dbg !6655
  br label %if.end121, !dbg !6656

if.end121:                                        ; preds = %if.then118, %for.body116
  %158 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6657
  %nextco = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %158, i32 0, i32 9, !dbg !6659
  %159 = load [3 x float]*, [3 x float]** %nextco, align 8, !dbg !6659
  %tobool122 = icmp ne [3 x float]* %159, null, !dbg !6657
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !6660

if.then123:                                       ; preds = %if.end121
  %160 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6661
  %161 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6663
  %nextco124 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %161, i32 0, i32 9, !dbg !6664
  %162 = load [3 x float]*, [3 x float]** %nextco124, align 8, !dbg !6664
  %163 = bitcast [3 x float]* %162 to i8*, !dbg !6663
  call void %160(i8* %163), !dbg !6661
  %164 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6665
  %nextco125 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %164, i32 0, i32 9, !dbg !6666
  store [3 x float]* null, [3 x float]** %nextco125, align 8, !dbg !6667
  br label %if.end126, !dbg !6668

if.end126:                                        ; preds = %if.then123, %if.end121
  br label %for.inc127, !dbg !6669

for.inc127:                                       ; preds = %if.end126
  %165 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !6670
  %next128 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %165, i32 0, i32 0, !dbg !6671
  %166 = load %struct.StrandSurface*, %struct.StrandSurface** %next128, align 8, !dbg !6671
  store %struct.StrandSurface* %166, %struct.StrandSurface** %mesh, align 8, !dbg !6672
  br label %for.cond114, !dbg !6673, !llvm.loop !6674

for.end129:                                       ; preds = %for.cond114
  %167 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6676
  %i130 = getelementptr inbounds %struct.Render, %struct.Render* %167, i32 0, i32 98, !dbg !6677
  %infostr131 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i130, i32 0, i32 16, !dbg !6678
  store i8* null, i8** %infostr131, align 8, !dbg !6679
  %168 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6680
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %168, i32 0, i32 90, !dbg !6681
  %169 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !6681
  %170 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6682
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %170, i32 0, i32 91, !dbg !6683
  %171 = load i8*, i8** %sdh, align 8, !dbg !6683
  %172 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6684
  %i132 = getelementptr inbounds %struct.Render, %struct.Render* %172, i32 0, i32 98, !dbg !6685
  call void %169(i8* %171, %struct.RenderStats* %i132), !dbg !6680
  ret void, !dbg !6686
}

; Function Attrs: noinline nounwind uwtable
define internal void @speedvector_project(%struct.Render* %re, float* %zco, float* %co, float* %ho) #0 !dbg !4214 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %zco.addr = alloca float*, align 8
  %co.addr = alloca float*, align 8
  %ho.addr = alloca float*, align 8
  %div = alloca float, align 4
  %psize = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %ang = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store float* %zco, float** %zco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %zco.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata float* %div, metadata !6695, metadata !DIExpression()), !dbg !6696
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6697
  %tobool = icmp ne %struct.Render* %0, null, !dbg !6697
  br i1 %tobool, label %if.then, label %if.end23, !dbg !6699

if.then:                                          ; preds = %entry
  %1 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6700
  %r = getelementptr inbounds %struct.Render, %struct.Render* %1, i32 0, i32 45, !dbg !6702
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !6703
  %2 = load i32, i32* %mode, align 8, !dbg !6703
  %and = and i32 %2, 1024, !dbg !6704
  store i32 %and, i32* @speedvector_project.pano, align 4, !dbg !6705
  %3 = load i32, i32* @speedvector_project.pano, align 4, !dbg !6706
  %tobool1 = icmp ne i32 %3, 0, !dbg !6706
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !6708

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata float* %psize, metadata !6709, metadata !DIExpression()), !dbg !6711
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6712
  %viewplane = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 16, !dbg !6713
  %call = call float @BLI_rctf_size_x(%struct.rctf* %viewplane), !dbg !6714
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6715
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 13, !dbg !6716
  %6 = load i32, i32* %winx, align 4, !dbg !6716
  %conv = sitofp i32 %6 to float, !dbg !6717
  %div3 = fdiv float %call, %conv, !dbg !6718
  store float %div3, float* %psize, align 4, !dbg !6719
  %7 = load float, float* %psize, align 4, !dbg !6720
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6721
  %clipsta = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 36, !dbg !6722
  %9 = load float, float* %clipsta, align 8, !dbg !6722
  %div4 = fdiv float %7, %9, !dbg !6723
  %conv5 = fpext float %div4 to double, !dbg !6720
  %call6 = call double @atan(double %conv5) #5, !dbg !6724
  %conv7 = fptrunc double %call6 to float, !dbg !6724
  store float %conv7, float* @speedvector_project.pixelphix, align 4, !dbg !6725
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6726
  %viewplane8 = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 16, !dbg !6727
  %call9 = call float @BLI_rctf_size_y(%struct.rctf* %viewplane8), !dbg !6728
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6729
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 14, !dbg !6730
  %12 = load i32, i32* %winy, align 8, !dbg !6730
  %conv10 = sitofp i32 %12 to float, !dbg !6731
  %div11 = fdiv float %call9, %conv10, !dbg !6732
  store float %div11, float* %psize, align 4, !dbg !6733
  %13 = load float, float* %psize, align 4, !dbg !6734
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6735
  %clipsta12 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 36, !dbg !6736
  %15 = load float, float* %clipsta12, align 8, !dbg !6736
  %div13 = fdiv float %13, %15, !dbg !6737
  %conv14 = fpext float %div13 to double, !dbg !6734
  %call15 = call double @atan(double %conv14) #5, !dbg !6738
  %conv16 = fptrunc double %call15 to float, !dbg !6738
  store float %conv16, float* @speedvector_project.pixelphiy, align 4, !dbg !6739
  br label %if.end, !dbg !6740

if.end:                                           ; preds = %if.then2, %if.then
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6741
  %winx17 = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 13, !dbg !6742
  %17 = load i32, i32* %winx17, align 4, !dbg !6742
  %div18 = sdiv i32 %17, 2, !dbg !6743
  %conv19 = sitofp i32 %div18 to float, !dbg !6741
  store float %conv19, float* @speedvector_project.zmulx, align 4, !dbg !6744
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6745
  %winy20 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 14, !dbg !6746
  %19 = load i32, i32* %winy20, align 8, !dbg !6746
  %div21 = sdiv i32 %19, 2, !dbg !6747
  %conv22 = sitofp i32 %div21 to float, !dbg !6745
  store float %conv22, float* @speedvector_project.zmuly, align 4, !dbg !6748
  br label %if.end68, !dbg !6749

if.end23:                                         ; preds = %entry
  %20 = load float*, float** %ho.addr, align 8, !dbg !6750
  %arrayidx = getelementptr inbounds float, float* %20, i64 3, !dbg !6750
  %21 = load float, float* %arrayidx, align 4, !dbg !6750
  %cmp = fcmp olt float %21, 0x3FB99999A0000000, !dbg !6752
  br i1 %cmp, label %if.then25, label %if.else, !dbg !6753

if.then25:                                        ; preds = %if.end23
  store float 1.000000e+01, float* %div, align 4, !dbg !6754
  br label %if.end28, !dbg !6755

if.else:                                          ; preds = %if.end23
  %22 = load float*, float** %ho.addr, align 8, !dbg !6756
  %arrayidx26 = getelementptr inbounds float, float* %22, i64 3, !dbg !6756
  %23 = load float, float* %arrayidx26, align 4, !dbg !6756
  %div27 = fdiv float 1.000000e+00, %23, !dbg !6757
  store float %div27, float* %div, align 4, !dbg !6758
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  %24 = load i32, i32* @speedvector_project.pano, align 4, !dbg !6759
  %tobool29 = icmp ne i32 %24, 0, !dbg !6759
  br i1 %tobool29, label %if.then30, label %if.else57, !dbg !6761

if.then30:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.declare(metadata float* %ang, metadata !6765, metadata !DIExpression()), !dbg !6766
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6767
  %25 = load float*, float** %co.addr, align 8, !dbg !6768
  call void @copy_v3_v3(float* %arraydecay, float* %25), !dbg !6769
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6770
  %26 = load float, float* %arrayidx31, align 4, !dbg !6770
  %fneg = fneg float %26, !dbg !6771
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6772
  %27 = load float, float* %arrayidx32, align 4, !dbg !6772
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6773
  %28 = load float, float* %arrayidx33, align 4, !dbg !6773
  %mul = fmul float %27, %28, !dbg !6774
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6775
  %29 = load float, float* %arrayidx34, align 4, !dbg !6775
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 2, !dbg !6776
  %30 = load float, float* %arrayidx35, align 4, !dbg !6776
  %mul36 = fmul float %29, %30, !dbg !6777
  %add = fadd float %mul, %mul36, !dbg !6778
  %call37 = call float @sqrtf(float %add) #5, !dbg !6779
  %div38 = fdiv float %fneg, %call37, !dbg !6780
  %call39 = call float @saacos(float %div38), !dbg !6781
  store float %call39, float* %ang, align 4, !dbg !6782
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6783
  %31 = load float, float* %arrayidx40, align 4, !dbg !6783
  %cmp41 = fcmp olt float %31, 0.000000e+00, !dbg !6785
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !6786

if.then43:                                        ; preds = %if.then30
  %32 = load float, float* %ang, align 4, !dbg !6787
  %fneg44 = fneg float %32, !dbg !6788
  store float %fneg44, float* %ang, align 4, !dbg !6789
  br label %if.end45, !dbg !6790

if.end45:                                         ; preds = %if.then43, %if.then30
  %33 = load float, float* %ang, align 4, !dbg !6791
  %34 = load float, float* @speedvector_project.pixelphix, align 4, !dbg !6792
  %div46 = fdiv float %33, %34, !dbg !6793
  %35 = load float, float* @speedvector_project.zmulx, align 4, !dbg !6794
  %add47 = fadd float %div46, %35, !dbg !6795
  %36 = load float*, float** %zco.addr, align 8, !dbg !6796
  %arrayidx48 = getelementptr inbounds float, float* %36, i64 0, !dbg !6796
  store float %add47, float* %arrayidx48, align 4, !dbg !6797
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 1, !dbg !6798
  %37 = load float, float* %arrayidx49, align 4, !dbg !6798
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6799
  %call51 = call float @len_v3(float* %arraydecay50), !dbg !6800
  %div52 = fdiv float %37, %call51, !dbg !6801
  %call53 = call float @saacos(float %div52), !dbg !6802
  %sub = fsub float 0x3FF921FB60000000, %call53, !dbg !6803
  store float %sub, float* %ang, align 4, !dbg !6804
  %38 = load float, float* %ang, align 4, !dbg !6805
  %39 = load float, float* @speedvector_project.pixelphiy, align 4, !dbg !6806
  %div54 = fdiv float %38, %39, !dbg !6807
  %40 = load float, float* @speedvector_project.zmuly, align 4, !dbg !6808
  %add55 = fadd float %div54, %40, !dbg !6809
  %41 = load float*, float** %zco.addr, align 8, !dbg !6810
  %arrayidx56 = getelementptr inbounds float, float* %41, i64 1, !dbg !6810
  store float %add55, float* %arrayidx56, align 4, !dbg !6811
  br label %if.end68, !dbg !6812

if.else57:                                        ; preds = %if.end28
  %42 = load float, float* @speedvector_project.zmulx, align 4, !dbg !6813
  %43 = load float*, float** %ho.addr, align 8, !dbg !6815
  %arrayidx58 = getelementptr inbounds float, float* %43, i64 0, !dbg !6815
  %44 = load float, float* %arrayidx58, align 4, !dbg !6815
  %45 = load float, float* %div, align 4, !dbg !6816
  %mul59 = fmul float %44, %45, !dbg !6817
  %add60 = fadd float 1.000000e+00, %mul59, !dbg !6818
  %mul61 = fmul float %42, %add60, !dbg !6819
  %46 = load float*, float** %zco.addr, align 8, !dbg !6820
  %arrayidx62 = getelementptr inbounds float, float* %46, i64 0, !dbg !6820
  store float %mul61, float* %arrayidx62, align 4, !dbg !6821
  %47 = load float, float* @speedvector_project.zmuly, align 4, !dbg !6822
  %48 = load float*, float** %ho.addr, align 8, !dbg !6823
  %arrayidx63 = getelementptr inbounds float, float* %48, i64 1, !dbg !6823
  %49 = load float, float* %arrayidx63, align 4, !dbg !6823
  %50 = load float, float* %div, align 4, !dbg !6824
  %mul64 = fmul float %49, %50, !dbg !6825
  %add65 = fadd float 1.000000e+00, %mul64, !dbg !6826
  %mul66 = fmul float %47, %add65, !dbg !6827
  %51 = load float*, float** %zco.addr, align 8, !dbg !6828
  %arrayidx67 = getelementptr inbounds float, float* %51, i64 1, !dbg !6828
  store float %mul66, float* %arrayidx67, align 4, !dbg !6829
  br label %if.end68

if.end68:                                         ; preds = %if.end, %if.else57, %if.end45
  ret void, !dbg !6830
}

; Function Attrs: noinline nounwind uwtable
define internal void @database_fromscene_vectors(%struct.Render* %re, %struct.Scene* %scene, i32 %lay, i32 %timeoffset) #0 !dbg !6831 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %timeoffset.addr = alloca i32, align 4
  %camera = alloca %struct.Object*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6834, metadata !DIExpression()), !dbg !6835
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !6840, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !6842, metadata !DIExpression()), !dbg !6843
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6844
  %call = call %struct.Object* @RE_GetCamera(%struct.Render* %0), !dbg !6845
  store %struct.Object* %call, %struct.Object** %camera, align 8, !dbg !6843
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !6846, metadata !DIExpression()), !dbg !6847
  %1 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6848
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6849
  %scene1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 44, !dbg !6850
  store %struct.Scene* %1, %struct.Scene** %scene1, align 8, !dbg !6851
  %3 = load i32, i32* %lay.addr, align 4, !dbg !6852
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6853
  %lay2 = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 48, !dbg !6854
  store i32 %3, i32* %lay2, align 8, !dbg !6855
  %call3 = call %struct.MemArena* @BLI_memarena_new(i64 16376, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0)), !dbg !6856
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6857
  %memArena = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 81, !dbg !6858
  store %struct.MemArena* %call3, %struct.MemArena** %memArena, align 8, !dbg !6859
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6860
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 62, !dbg !6861
  store i32 0, i32* %tothalo, align 8, !dbg !6862
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6863
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 64, !dbg !6864
  store i32 0, i32* %totlamp, align 8, !dbg !6865
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6866
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 63, !dbg !6867
  store i32 0, i32* %totstrand, align 4, !dbg !6868
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6869
  %totvert = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 61, !dbg !6870
  store i32 0, i32* %totvert, align 4, !dbg !6871
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6872
  %totvlak = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 60, !dbg !6873
  store i32 0, i32* %totvlak, align 8, !dbg !6874
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6875
  %i = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 98, !dbg !6876
  %tothalo4 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 4, !dbg !6877
  store i32 0, i32* %tothalo4, align 8, !dbg !6878
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6879
  %i5 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 98, !dbg !6880
  %totlamp6 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i5, i32 0, i32 5, !dbg !6881
  store i32 0, i32* %totlamp6, align 4, !dbg !6882
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6883
  %i7 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 98, !dbg !6884
  %totstrand8 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i7, i32 0, i32 3, !dbg !6885
  store i32 0, i32* %totstrand8, align 4, !dbg !6886
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6887
  %i9 = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 98, !dbg !6888
  %totvert10 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i9, i32 0, i32 2, !dbg !6889
  store i32 0, i32* %totvert10, align 8, !dbg !6890
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6891
  %i11 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 98, !dbg !6892
  %totface = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i11, i32 0, i32 1, !dbg !6893
  store i32 0, i32* %totface, align 4, !dbg !6894
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6895
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 66, !dbg !6896
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights, i32 0, i32 1, !dbg !6897
  store i8* null, i8** %last, align 8, !dbg !6898
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6899
  %lights12 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 66, !dbg !6900
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights12, i32 0, i32 0, !dbg !6901
  store i8* null, i8** %first, align 8, !dbg !6902
  store i32 0, i32* @slurph_opt, align 4, !dbg !6903
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6904
  %lay13 = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 48, !dbg !6906
  %19 = load i32, i32* %lay13, align 8, !dbg !6906
  %and = and i32 %19, -16777216, !dbg !6907
  %tobool = icmp ne i32 %and, 0, !dbg !6907
  br i1 %tobool, label %if.then, label %if.end, !dbg !6908

if.then:                                          ; preds = %entry
  %20 = load i32, i32* %lay.addr, align 4, !dbg !6909
  %and14 = and i32 %20, -16777216, !dbg !6909
  store i32 %and14, i32* %lay.addr, align 4, !dbg !6909
  br label %if.end, !dbg !6910

if.end:                                           ; preds = %if.then, %entry
  %21 = load i32, i32* %timeoffset.addr, align 4, !dbg !6911
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6912
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %22, i32 0, i32 22, !dbg !6913
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !6914
  %23 = load i32, i32* %cfra, align 8, !dbg !6915
  %add = add nsw i32 %23, %21, !dbg !6915
  store i32 %add, i32* %cfra, align 8, !dbg !6915
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6916
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 101, !dbg !6917
  %25 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !6917
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6918
  %main = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 43, !dbg !6919
  %27 = load %struct.Main*, %struct.Main** %main, align 8, !dbg !6919
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6920
  %scene15 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 44, !dbg !6921
  %29 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !6921
  %30 = load i32, i32* %lay.addr, align 4, !dbg !6922
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %25, %struct.Main* %27, %struct.Scene* %29, i32 %30), !dbg !6923
  %31 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !6924
  %tobool16 = icmp ne %struct.Object* %31, null, !dbg !6924
  br i1 %tobool16, label %if.then17, label %if.end22, !dbg !6926

if.then17:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !6927
  %32 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !6929
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 47, !dbg !6930
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !6929
  call void @normalize_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay18), !dbg !6931
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !6932
  %call20 = call zeroext i8 @invert_m4([4 x float]* %arraydecay19), !dbg !6933
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6934
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !6935
  call void @RE_SetView(%struct.Render* %33, [4 x float]* %arraydecay21), !dbg !6936
  br label %if.end22, !dbg !6937

if.end22:                                         ; preds = %if.then17, %if.end
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6938
  %35 = load i32, i32* %lay.addr, align 4, !dbg !6939
  %36 = load i32, i32* %timeoffset.addr, align 4, !dbg !6940
  call void @database_init_objects(%struct.Render* %34, i32 %35, i32 0, i32 0, %struct.Object* null, i32 %36), !dbg !6941
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6942
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 96, !dbg !6944
  %38 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !6944
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6945
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 97, !dbg !6946
  %40 = load i8*, i8** %tbh, align 8, !dbg !6946
  %call23 = call i32 %38(i8* %40), !dbg !6942
  %tobool24 = icmp ne i32 %call23, 0, !dbg !6942
  br i1 %tobool24, label %if.end29, label %if.then25, !dbg !6947

if.then25:                                        ; preds = %if.end22
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6948
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6949
  %r26 = getelementptr inbounds %struct.Render, %struct.Render* %42, i32 0, i32 45, !dbg !6950
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r26, i32 0, i32 47, !dbg !6951
  %43 = load i32, i32* %mode, align 8, !dbg !6951
  %and27 = and i32 %43, 1024, !dbg !6952
  %cmp = icmp ne i32 %and27, 0, !dbg !6953
  %conv = zext i1 %cmp to i32, !dbg !6953
  %conv28 = trunc i32 %conv to i8, !dbg !6954
  call void @project_renderdata(%struct.Render* %41, void (float*, [4 x float]*, float*)* @projectverto, i8 zeroext %conv28, float 0.000000e+00, i8 zeroext 1), !dbg !6955
  br label %if.end29, !dbg !6955

if.end29:                                         ; preds = %if.then25, %if.end22
  %44 = load i32, i32* %timeoffset.addr, align 4, !dbg !6956
  %45 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6957
  %r30 = getelementptr inbounds %struct.Scene, %struct.Scene* %45, i32 0, i32 22, !dbg !6958
  %cfra31 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r30, i32 0, i32 5, !dbg !6959
  %46 = load i32, i32* %cfra31, align 8, !dbg !6960
  %sub = sub nsw i32 %46, %44, !dbg !6960
  store i32 %sub, i32* %cfra31, align 8, !dbg !6960
  ret void, !dbg !6961
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_dbase_object_vectors(%struct.Render* %re, %struct.ListBase* %lb) #0 !dbg !6962 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lb.addr = alloca %struct.ListBase*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obilb = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %vec = alloca float*, align 8
  %ho = alloca [4 x float], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %a = alloca i32, align 4
  %totvector = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6965, metadata !DIExpression()), !dbg !6966
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !6967, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6969, metadata !DIExpression()), !dbg !6970
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obilb, metadata !6971, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !6973, metadata !DIExpression()), !dbg !6974
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !6975, metadata !DIExpression()), !dbg !6976
  store %struct.VertRen* null, %struct.VertRen** %ver, align 8, !dbg !6976
  call void @llvm.dbg.declare(metadata float** %vec, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata [4 x float]* %ho, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !6981, metadata !DIExpression()), !dbg !6982
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6983, metadata !DIExpression()), !dbg !6984
  call void @llvm.dbg.declare(metadata i32* %totvector, metadata !6985, metadata !DIExpression()), !dbg !6986
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6987
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 70, !dbg !6989
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !6990
  %1 = load i8*, i8** %first, align 8, !dbg !6990
  %2 = bitcast i8* %1 to %struct.ObjectInstanceRen*, !dbg !6987
  store %struct.ObjectInstanceRen* %2, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6991
  br label %for.cond, !dbg !6992

for.cond:                                         ; preds = %for.inc31, %entry
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6993
  %tobool = icmp ne %struct.ObjectInstanceRen* %3, null, !dbg !6995
  br i1 %tobool, label %for.body, label %for.end32, !dbg !6995

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6996
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !6998
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !6998
  store %struct.ObjectRen* %5, %struct.ObjectRen** %obr, align 8, !dbg !6999
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7000
  %call = call i8* %6(i64 288, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0)), !dbg !7000
  %7 = bitcast i8* %call to %struct.ObjectInstanceRen*, !dbg !7000
  store %struct.ObjectInstanceRen* %7, %struct.ObjectInstanceRen** %obilb, align 8, !dbg !7001
  %8 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obilb, align 8, !dbg !7002
  %9 = bitcast %struct.ObjectInstanceRen* %8 to i8*, !dbg !7003
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7004
  %11 = bitcast %struct.ObjectInstanceRen* %10 to i8*, !dbg !7003
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %11, i64 288, i1 false), !dbg !7003
  %12 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7005
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obilb, align 8, !dbg !7006
  %14 = bitcast %struct.ObjectInstanceRen* %13 to i8*, !dbg !7006
  call void @BLI_addtail(%struct.ListBase* %12, i8* %14), !dbg !7007
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7008
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 10, !dbg !7009
  %16 = load i32, i32* %totvert, align 8, !dbg !7009
  store i32 %16, i32* %totvector, align 4, !dbg !7010
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obilb, align 8, !dbg !7011
  %totvector2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 17, !dbg !7012
  store i32 %16, i32* %totvector2, align 8, !dbg !7013
  %18 = load i32, i32* %totvector, align 4, !dbg !7014
  %cmp = icmp sgt i32 %18, 0, !dbg !7016
  br i1 %cmp, label %if.then, label %if.end30, !dbg !7017

if.then:                                          ; preds = %for.body
  %19 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7018
  %20 = load i32, i32* %totvector, align 4, !dbg !7020
  %conv = sext i32 %20 to i64, !dbg !7020
  %mul = mul i64 8, %conv, !dbg !7021
  %call3 = call i8* %19(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0)), !dbg !7018
  %21 = bitcast i8* %call3 to float*, !dbg !7018
  %22 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obilb, align 8, !dbg !7022
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %22, i32 0, i32 16, !dbg !7023
  store float* %21, float** %vectors, align 8, !dbg !7024
  store float* %21, float** %vec, align 8, !dbg !7025
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7026
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %23, i32 0, i32 11, !dbg !7028
  %24 = load i16, i16* %flag, align 8, !dbg !7028
  %conv4 = sext i16 %24 to i32, !dbg !7026
  %and = and i32 %conv4, 3, !dbg !7029
  %tobool5 = icmp ne i32 %and, 0, !dbg !7029
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !7030

if.then6:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7031
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7032
  %winmat7 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 35, !dbg !7033
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat7, i64 0, i64 0, !dbg !7032
  %26 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7034
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %26, i32 0, i32 8, !dbg !7035
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7034
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay8, [4 x float]* %arraydecay9), !dbg !7036
  br label %if.end, !dbg !7036

if.else:                                          ; preds = %if.then
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7037
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7038
  %winmat11 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 35, !dbg !7039
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat11, i64 0, i64 0, !dbg !7038
  call void @copy_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !7040
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  store i32 0, i32* %a, align 4, !dbg !7041
  br label %for.cond13, !dbg !7043

for.cond13:                                       ; preds = %for.inc, %if.end
  %28 = load i32, i32* %a, align 4, !dbg !7044
  %29 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7046
  %totvert14 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %29, i32 0, i32 10, !dbg !7047
  %30 = load i32, i32* %totvert14, align 8, !dbg !7047
  %cmp15 = icmp slt i32 %28, %30, !dbg !7048
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !7049

for.body17:                                       ; preds = %for.cond13
  %31 = load i32, i32* %a, align 4, !dbg !7050
  %and18 = and i32 %31, 255, !dbg !7053
  %cmp19 = icmp eq i32 %and18, 0, !dbg !7054
  br i1 %cmp19, label %if.then21, label %if.else22, !dbg !7055

if.then21:                                        ; preds = %for.body17
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7056
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 18, !dbg !7057
  %33 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !7057
  %34 = load i32, i32* %a, align 4, !dbg !7058
  %shr = ashr i32 %34, 8, !dbg !7059
  %idxprom = sext i32 %shr to i64, !dbg !7056
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %33, i64 %idxprom, !dbg !7056
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 0, !dbg !7060
  %35 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !7060
  store %struct.VertRen* %35, %struct.VertRen** %ver, align 8, !dbg !7061
  br label %if.end23, !dbg !7062

if.else22:                                        ; preds = %for.body17
  %36 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7063
  %incdec.ptr = getelementptr inbounds %struct.VertRen, %struct.VertRen* %36, i32 1, !dbg !7063
  store %struct.VertRen* %incdec.ptr, %struct.VertRen** %ver, align 8, !dbg !7063
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then21
  %37 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7064
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 0, !dbg !7065
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7064
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7066
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !7067
  call void @projectvert(float* %arraydecay24, [4 x float]* %arraydecay25, float* %arraydecay26), !dbg !7068
  %38 = load float*, float** %vec, align 8, !dbg !7069
  %39 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7070
  %co27 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %39, i32 0, i32 0, !dbg !7071
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !7070
  %arraydecay29 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !7072
  call void @speedvector_project(%struct.Render* null, float* %38, float* %arraydecay28, float* %arraydecay29), !dbg !7073
  br label %for.inc, !dbg !7074

for.inc:                                          ; preds = %if.end23
  %40 = load i32, i32* %a, align 4, !dbg !7075
  %inc = add nsw i32 %40, 1, !dbg !7075
  store i32 %inc, i32* %a, align 4, !dbg !7075
  %41 = load float*, float** %vec, align 8, !dbg !7076
  %add.ptr = getelementptr inbounds float, float* %41, i64 2, !dbg !7076
  store float* %add.ptr, float** %vec, align 8, !dbg !7076
  br label %for.cond13, !dbg !7077, !llvm.loop !7078

for.end:                                          ; preds = %for.cond13
  br label %if.end30, !dbg !7080

if.end30:                                         ; preds = %for.end, %for.body
  br label %for.inc31, !dbg !7081

for.inc31:                                        ; preds = %if.end30
  %42 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7082
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %42, i32 0, i32 0, !dbg !7083
  %43 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !7083
  store %struct.ObjectInstanceRen* %43, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7084
  br label %for.cond, !dbg !7085, !llvm.loop !7086

for.end32:                                        ; preds = %for.cond
  ret void, !dbg !7088
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_vector_renderlayers(%struct.Scene* %sce) #0 !dbg !7089 {
entry:
  %sce.addr = alloca %struct.Scene*, align 8
  %srl = alloca %struct.SceneRenderLayer*, align 8
  %lay = alloca i32, align 4
  store %struct.Scene* %sce, %struct.Scene** %sce.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %sce.addr, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata %struct.SceneRenderLayer** %srl, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata i32* %lay, metadata !7096, metadata !DIExpression()), !dbg !7097
  store i32 0, i32* %lay, align 4, !dbg !7097
  %0 = load %struct.Scene*, %struct.Scene** %sce.addr, align 8, !dbg !7098
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !7100
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !7101
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %layers, i32 0, i32 0, !dbg !7102
  %1 = load i8*, i8** %first, align 8, !dbg !7102
  %2 = bitcast i8* %1 to %struct.SceneRenderLayer*, !dbg !7098
  store %struct.SceneRenderLayer* %2, %struct.SceneRenderLayer** %srl, align 8, !dbg !7103
  br label %for.cond, !dbg !7104

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7105
  %tobool = icmp ne %struct.SceneRenderLayer* %3, null, !dbg !7107
  br i1 %tobool, label %for.body, label %for.end, !dbg !7107

for.body:                                         ; preds = %for.cond
  %4 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7108
  %passflag = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %4, i32 0, i32 9, !dbg !7110
  %5 = load i32, i32* %passflag, align 8, !dbg !7110
  %and = and i32 %5, 512, !dbg !7111
  %tobool1 = icmp ne i32 %and, 0, !dbg !7111
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7112

if.then:                                          ; preds = %for.body
  %6 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7113
  %lay2 = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %6, i32 0, i32 5, !dbg !7114
  %7 = load i32, i32* %lay2, align 8, !dbg !7114
  %8 = load i32, i32* %lay, align 4, !dbg !7115
  %or = or i32 %8, %7, !dbg !7115
  store i32 %or, i32* %lay, align 4, !dbg !7115
  br label %if.end, !dbg !7116

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7117

for.inc:                                          ; preds = %if.end
  %9 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %srl, align 8, !dbg !7118
  %next = getelementptr inbounds %struct.SceneRenderLayer, %struct.SceneRenderLayer* %9, i32 0, i32 0, !dbg !7119
  %10 = load %struct.SceneRenderLayer*, %struct.SceneRenderLayer** %next, align 8, !dbg !7119
  store %struct.SceneRenderLayer* %10, %struct.SceneRenderLayer** %srl, align 8, !dbg !7120
  br label %for.cond, !dbg !7121, !llvm.loop !7122

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %lay, align 4, !dbg !7124
  ret i32 %11, !dbg !7125
}

declare dso_local i32 @printf(i8*, ...) #4

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @load_fluidsimspeedvectors(%struct.Render* %re, %struct.ObjectInstanceRen* %obi, float* %vectors, i32 %step) #0 !dbg !7126 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vectors.addr = alloca float*, align 8
  %step.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %fsob = alloca %struct.Object*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %speed = alloca float*, align 8
  %div = alloca float, align 4
  %zco = alloca [2 x float], align 4
  %avgvel = alloca [4 x float], align 16
  %zmulx = alloca float, align 4
  %zmuly = alloca float, align 4
  %len = alloca float, align 4
  %winsq = alloca float, align 4
  %winroot = alloca float, align 4
  %a = alloca i32, align 4
  %j = alloca i32, align 4
  %hoco = alloca [4 x float], align 16
  %ho = alloca [4 x float], align 16
  %fsvec = alloca [4 x float], align 16
  %camco = alloca [4 x float], align 16
  %mat = alloca [4 x [4 x float]], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %fluidmd = alloca %struct.FluidsimModifierData*, align 8
  %fss = alloca %struct.FluidsimSettings*, align 8
  %velarray = alloca %struct.FluidVertexVelocity*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7129, metadata !DIExpression()), !dbg !7130
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7131, metadata !DIExpression()), !dbg !7132
  store float* %vectors, float** %vectors.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vectors.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !7137, metadata !DIExpression()), !dbg !7138
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7139
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 2, !dbg !7140
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !7140
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr, align 8, !dbg !7138
  call void @llvm.dbg.declare(metadata %struct.Object** %fsob, metadata !7141, metadata !DIExpression()), !dbg !7142
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7143
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 2, !dbg !7144
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7144
  store %struct.Object* %3, %struct.Object** %fsob, align 8, !dbg !7142
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !7145, metadata !DIExpression()), !dbg !7146
  store %struct.VertRen* null, %struct.VertRen** %ver, align 8, !dbg !7146
  call void @llvm.dbg.declare(metadata float** %speed, metadata !7147, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata float* %div, metadata !7149, metadata !DIExpression()), !dbg !7150
  call void @llvm.dbg.declare(metadata [2 x float]* %zco, metadata !7151, metadata !DIExpression()), !dbg !7152
  call void @llvm.dbg.declare(metadata [4 x float]* %avgvel, metadata !7153, metadata !DIExpression()), !dbg !7154
  %4 = bitcast [4 x float]* %avgvel to i8*, !dbg !7154
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 16, i1 false), !dbg !7154
  call void @llvm.dbg.declare(metadata float* %zmulx, metadata !7155, metadata !DIExpression()), !dbg !7156
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7157
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 13, !dbg !7158
  %6 = load i32, i32* %winx, align 4, !dbg !7158
  %div2 = sdiv i32 %6, 2, !dbg !7159
  %conv = sitofp i32 %div2 to float, !dbg !7157
  store float %conv, float* %zmulx, align 4, !dbg !7156
  call void @llvm.dbg.declare(metadata float* %zmuly, metadata !7160, metadata !DIExpression()), !dbg !7161
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7162
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 14, !dbg !7163
  %8 = load i32, i32* %winy, align 8, !dbg !7163
  %div3 = sdiv i32 %8, 2, !dbg !7164
  %conv4 = sitofp i32 %div3 to float, !dbg !7162
  store float %conv4, float* %zmuly, align 4, !dbg !7161
  call void @llvm.dbg.declare(metadata float* %len, metadata !7165, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.declare(metadata float* %winsq, metadata !7167, metadata !DIExpression()), !dbg !7168
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7169
  %winx5 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 13, !dbg !7170
  %10 = load i32, i32* %winx5, align 4, !dbg !7170
  %conv6 = sitofp i32 %10 to float, !dbg !7171
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7172
  %winy7 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 14, !dbg !7173
  %12 = load i32, i32* %winy7, align 8, !dbg !7173
  %conv8 = sitofp i32 %12 to float, !dbg !7174
  %mul = fmul float %conv6, %conv8, !dbg !7175
  store float %mul, float* %winsq, align 4, !dbg !7168
  call void @llvm.dbg.declare(metadata float* %winroot, metadata !7176, metadata !DIExpression()), !dbg !7177
  %13 = load float, float* %winsq, align 4, !dbg !7178
  %call = call float @sqrtf(float %13) #5, !dbg !7179
  store float %call, float* %winroot, align 4, !dbg !7177
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7182, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.declare(metadata [4 x float]* %hoco, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata [4 x float]* %ho, metadata !7186, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata [4 x float]* %fsvec, metadata !7188, metadata !DIExpression()), !dbg !7189
  call void @llvm.dbg.declare(metadata [4 x float]* %camco, metadata !7190, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !7192, metadata !DIExpression()), !dbg !7193
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !7194, metadata !DIExpression()), !dbg !7195
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !7196, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.declare(metadata %struct.FluidsimModifierData** %fluidmd, metadata !7198, metadata !DIExpression()), !dbg !7199
  %14 = load %struct.Object*, %struct.Object** %fsob, align 8, !dbg !7200
  %call9 = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %14, i32 26), !dbg !7201
  %15 = bitcast %struct.ModifierData* %call9 to %struct.FluidsimModifierData*, !dbg !7202
  store %struct.FluidsimModifierData* %15, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !7199
  call void @llvm.dbg.declare(metadata %struct.FluidsimSettings** %fss, metadata !7203, metadata !DIExpression()), !dbg !7206
  call void @llvm.dbg.declare(metadata %struct.FluidVertexVelocity** %velarray, metadata !7207, metadata !DIExpression()), !dbg !7210
  store %struct.FluidVertexVelocity* null, %struct.FluidVertexVelocity** %velarray, align 8, !dbg !7210
  %16 = load i32, i32* %step.addr, align 4, !dbg !7211
  %tobool = icmp ne i32 %16, 0, !dbg !7211
  br i1 %tobool, label %if.then, label %if.end, !dbg !7213

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7214
  br label %return, !dbg !7214

if.end:                                           ; preds = %entry
  %17 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !7215
  %tobool10 = icmp ne %struct.FluidsimModifierData* %17, null, !dbg !7215
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !7217

if.then11:                                        ; preds = %if.end
  %18 = load %struct.FluidsimModifierData*, %struct.FluidsimModifierData** %fluidmd, align 8, !dbg !7218
  %fss12 = getelementptr inbounds %struct.FluidsimModifierData, %struct.FluidsimModifierData* %18, i32 0, i32 1, !dbg !7219
  %19 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss12, align 8, !dbg !7219
  store %struct.FluidsimSettings* %19, %struct.FluidsimSettings** %fss, align 8, !dbg !7220
  br label %if.end13, !dbg !7221

if.else:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7222
  br label %return, !dbg !7222

if.end13:                                         ; preds = %if.then11
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7223
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7224
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 32, !dbg !7225
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !7224
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay14), !dbg !7226
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7227
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7228
  %call17 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay15, [4 x float]* %arraydecay16), !dbg !7229
  %21 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss, align 8, !dbg !7230
  %meshVelocities = getelementptr inbounds %struct.FluidsimSettings, %struct.FluidsimSettings* %21, i32 0, i32 43, !dbg !7232
  %22 = load %struct.FluidVertexVelocity*, %struct.FluidVertexVelocity** %meshVelocities, align 8, !dbg !7232
  %tobool18 = icmp ne %struct.FluidVertexVelocity* %22, null, !dbg !7230
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7233

if.then19:                                        ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !7234
  br label %return, !dbg !7234

if.end20:                                         ; preds = %if.end13
  %23 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7235
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %23, i32 0, i32 10, !dbg !7237
  %24 = load i32, i32* %totvert, align 8, !dbg !7237
  %25 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss, align 8, !dbg !7238
  %totvert21 = getelementptr inbounds %struct.FluidsimSettings, %struct.FluidsimSettings* %25, i32 0, i32 44, !dbg !7239
  %26 = load i32, i32* %totvert21, align 8, !dbg !7239
  %cmp = icmp ne i32 %24, %26, !dbg !7240
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !7241

if.then23:                                        ; preds = %if.end20
  store i32 0, i32* %retval, align 4, !dbg !7242
  br label %return, !dbg !7242

if.end24:                                         ; preds = %if.end20
  %27 = load %struct.FluidsimSettings*, %struct.FluidsimSettings** %fss, align 8, !dbg !7244
  %meshVelocities25 = getelementptr inbounds %struct.FluidsimSettings, %struct.FluidsimSettings* %27, i32 0, i32 43, !dbg !7245
  %28 = load %struct.FluidVertexVelocity*, %struct.FluidVertexVelocity** %meshVelocities25, align 8, !dbg !7245
  store %struct.FluidVertexVelocity* %28, %struct.FluidVertexVelocity** %velarray, align 8, !dbg !7246
  %29 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7247
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %29, i32 0, i32 11, !dbg !7249
  %30 = load i16, i16* %flag, align 8, !dbg !7249
  %conv26 = sext i16 %30 to i32, !dbg !7247
  %and = and i32 %conv26, 3, !dbg !7250
  %tobool27 = icmp ne i32 %and, 0, !dbg !7250
  br i1 %tobool27, label %if.then28, label %if.else34, !dbg !7251

if.then28:                                        ; preds = %if.end24
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7252
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7253
  %winmat30 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 35, !dbg !7254
  %arraydecay31 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat30, i64 0, i64 0, !dbg !7253
  %32 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7255
  %mat32 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %32, i32 0, i32 8, !dbg !7256
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat32, i64 0, i64 0, !dbg !7255
  call void @mul_m4_m4m4([4 x float]* %arraydecay29, [4 x float]* %arraydecay31, [4 x float]* %arraydecay33), !dbg !7257
  br label %if.end38, !dbg !7257

if.else34:                                        ; preds = %if.end24
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7258
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7259
  %winmat36 = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 35, !dbg !7260
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat36, i64 0, i64 0, !dbg !7259
  call void @copy_m4_m4([4 x float]* %arraydecay35, [4 x float]* %arraydecay37), !dbg !7261
  br label %if.end38

if.end38:                                         ; preds = %if.else34, %if.then28
  store i32 0, i32* %a, align 4, !dbg !7262
  br label %for.cond, !dbg !7264

for.cond:                                         ; preds = %for.inc50, %if.end38
  %34 = load i32, i32* %a, align 4, !dbg !7265
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7267
  %totvert39 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %35, i32 0, i32 10, !dbg !7268
  %36 = load i32, i32* %totvert39, align 8, !dbg !7268
  %cmp40 = icmp slt i32 %34, %36, !dbg !7269
  br i1 %cmp40, label %for.body, label %for.end52, !dbg !7270

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7271
  br label %for.cond42, !dbg !7274

for.cond42:                                       ; preds = %for.inc, %for.body
  %37 = load i32, i32* %j, align 4, !dbg !7275
  %cmp43 = icmp slt i32 %37, 3, !dbg !7277
  br i1 %cmp43, label %for.body45, label %for.end, !dbg !7278

for.body45:                                       ; preds = %for.cond42
  %38 = load %struct.FluidVertexVelocity*, %struct.FluidVertexVelocity** %velarray, align 8, !dbg !7279
  %39 = load i32, i32* %a, align 4, !dbg !7280
  %idxprom = sext i32 %39 to i64, !dbg !7279
  %arrayidx = getelementptr inbounds %struct.FluidVertexVelocity, %struct.FluidVertexVelocity* %38, i64 %idxprom, !dbg !7279
  %vel = getelementptr inbounds %struct.FluidVertexVelocity, %struct.FluidVertexVelocity* %arrayidx, i32 0, i32 0, !dbg !7281
  %40 = load i32, i32* %j, align 4, !dbg !7282
  %idxprom46 = sext i32 %40 to i64, !dbg !7279
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 %idxprom46, !dbg !7279
  %41 = load float, float* %arrayidx47, align 4, !dbg !7279
  %42 = load i32, i32* %j, align 4, !dbg !7283
  %idxprom48 = sext i32 %42 to i64, !dbg !7284
  %arrayidx49 = getelementptr inbounds [4 x float], [4 x float]* %avgvel, i64 0, i64 %idxprom48, !dbg !7284
  %43 = load float, float* %arrayidx49, align 4, !dbg !7285
  %add = fadd float %43, %41, !dbg !7285
  store float %add, float* %arrayidx49, align 4, !dbg !7285
  br label %for.inc, !dbg !7284

for.inc:                                          ; preds = %for.body45
  %44 = load i32, i32* %j, align 4, !dbg !7286
  %inc = add nsw i32 %44, 1, !dbg !7286
  store i32 %inc, i32* %j, align 4, !dbg !7286
  br label %for.cond42, !dbg !7287, !llvm.loop !7288

for.end:                                          ; preds = %for.cond42
  br label %for.inc50, !dbg !7290

for.inc50:                                        ; preds = %for.end
  %45 = load i32, i32* %a, align 4, !dbg !7291
  %inc51 = add nsw i32 %45, 1, !dbg !7291
  store i32 %inc51, i32* %a, align 4, !dbg !7291
  br label %for.cond, !dbg !7292, !llvm.loop !7293

for.end52:                                        ; preds = %for.cond
  store i32 0, i32* %j, align 4, !dbg !7295
  br label %for.cond53, !dbg !7297

for.cond53:                                       ; preds = %for.inc62, %for.end52
  %46 = load i32, i32* %j, align 4, !dbg !7298
  %cmp54 = icmp slt i32 %46, 3, !dbg !7300
  br i1 %cmp54, label %for.body56, label %for.end64, !dbg !7301

for.body56:                                       ; preds = %for.cond53
  %47 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7302
  %totvert57 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %47, i32 0, i32 10, !dbg !7303
  %48 = load i32, i32* %totvert57, align 8, !dbg !7303
  %conv58 = sitofp i32 %48 to float, !dbg !7304
  %49 = load i32, i32* %j, align 4, !dbg !7305
  %idxprom59 = sext i32 %49 to i64, !dbg !7306
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %avgvel, i64 0, i64 %idxprom59, !dbg !7306
  %50 = load float, float* %arrayidx60, align 4, !dbg !7307
  %div61 = fdiv float %50, %conv58, !dbg !7307
  store float %div61, float* %arrayidx60, align 4, !dbg !7307
  br label %for.inc62, !dbg !7306

for.inc62:                                        ; preds = %for.body56
  %51 = load i32, i32* %j, align 4, !dbg !7308
  %inc63 = add nsw i32 %51, 1, !dbg !7308
  store i32 %inc63, i32* %j, align 4, !dbg !7308
  br label %for.cond53, !dbg !7309, !llvm.loop !7310

for.end64:                                        ; preds = %for.cond53
  store i32 0, i32* %a, align 4, !dbg !7312
  br label %for.cond65, !dbg !7314

for.cond65:                                       ; preds = %for.inc172, %for.end64
  %52 = load i32, i32* %a, align 4, !dbg !7315
  %53 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7317
  %totvert66 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %53, i32 0, i32 10, !dbg !7318
  %54 = load i32, i32* %totvert66, align 8, !dbg !7318
  %cmp67 = icmp slt i32 %52, %54, !dbg !7319
  br i1 %cmp67, label %for.body69, label %for.end174, !dbg !7320

for.body69:                                       ; preds = %for.cond65
  %55 = load i32, i32* %a, align 4, !dbg !7321
  %and70 = and i32 %55, 255, !dbg !7324
  %cmp71 = icmp eq i32 %and70, 0, !dbg !7325
  br i1 %cmp71, label %if.then73, label %if.else76, !dbg !7326

if.then73:                                        ; preds = %for.body69
  %56 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7327
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %56, i32 0, i32 18, !dbg !7328
  %57 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !7328
  %58 = load i32, i32* %a, align 4, !dbg !7329
  %shr = ashr i32 %58, 8, !dbg !7330
  %idxprom74 = sext i32 %shr to i64, !dbg !7327
  %arrayidx75 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %57, i64 %idxprom74, !dbg !7327
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx75, i32 0, i32 0, !dbg !7331
  %59 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !7331
  store %struct.VertRen* %59, %struct.VertRen** %ver, align 8, !dbg !7332
  br label %if.end77, !dbg !7333

if.else76:                                        ; preds = %for.body69
  %60 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7334
  %incdec.ptr = getelementptr inbounds %struct.VertRen, %struct.VertRen* %60, i32 1, !dbg !7334
  store %struct.VertRen* %incdec.ptr, %struct.VertRen** %ver, align 8, !dbg !7334
  br label %if.end77

if.end77:                                         ; preds = %if.else76, %if.then73
  %arrayidx78 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 3, !dbg !7335
  store float 0.000000e+00, float* %arrayidx78, align 4, !dbg !7336
  store i32 0, i32* %j, align 4, !dbg !7337
  br label %for.cond79, !dbg !7339

for.cond79:                                       ; preds = %for.inc90, %if.end77
  %61 = load i32, i32* %j, align 4, !dbg !7340
  %cmp80 = icmp slt i32 %61, 3, !dbg !7342
  br i1 %cmp80, label %for.body82, label %for.end92, !dbg !7343

for.body82:                                       ; preds = %for.cond79
  %62 = load %struct.FluidVertexVelocity*, %struct.FluidVertexVelocity** %velarray, align 8, !dbg !7344
  %63 = load i32, i32* %a, align 4, !dbg !7345
  %idxprom83 = sext i32 %63 to i64, !dbg !7344
  %arrayidx84 = getelementptr inbounds %struct.FluidVertexVelocity, %struct.FluidVertexVelocity* %62, i64 %idxprom83, !dbg !7344
  %vel85 = getelementptr inbounds %struct.FluidVertexVelocity, %struct.FluidVertexVelocity* %arrayidx84, i32 0, i32 0, !dbg !7346
  %64 = load i32, i32* %j, align 4, !dbg !7347
  %idxprom86 = sext i32 %64 to i64, !dbg !7344
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %vel85, i64 0, i64 %idxprom86, !dbg !7344
  %65 = load float, float* %arrayidx87, align 4, !dbg !7344
  %66 = load i32, i32* %j, align 4, !dbg !7348
  %idxprom88 = sext i32 %66 to i64, !dbg !7349
  %arrayidx89 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 %idxprom88, !dbg !7349
  store float %65, float* %arrayidx89, align 4, !dbg !7350
  br label %for.inc90, !dbg !7349

for.inc90:                                        ; preds = %for.body82
  %67 = load i32, i32* %j, align 4, !dbg !7351
  %inc91 = add nsw i32 %67, 1, !dbg !7351
  store i32 %inc91, i32* %j, align 4, !dbg !7351
  br label %for.cond79, !dbg !7352, !llvm.loop !7353

for.end92:                                        ; preds = %for.cond79
  %arrayidx93 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 0, !dbg !7355
  %68 = load float, float* %arrayidx93, align 16, !dbg !7355
  %cmp94 = fcmp oeq float %68, 0.000000e+00, !dbg !7357
  br i1 %cmp94, label %land.lhs.true, label %if.end110, !dbg !7358

land.lhs.true:                                    ; preds = %for.end92
  %arrayidx96 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 1, !dbg !7359
  %69 = load float, float* %arrayidx96, align 4, !dbg !7359
  %cmp97 = fcmp oeq float %69, 0.000000e+00, !dbg !7360
  br i1 %cmp97, label %land.lhs.true99, label %if.end110, !dbg !7361

land.lhs.true99:                                  ; preds = %land.lhs.true
  %arrayidx100 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 2, !dbg !7362
  %70 = load float, float* %arrayidx100, align 8, !dbg !7362
  %cmp101 = fcmp oeq float %70, 0.000000e+00, !dbg !7363
  br i1 %cmp101, label %if.then103, label %if.end110, !dbg !7364

if.then103:                                       ; preds = %land.lhs.true99
  %arrayidx104 = getelementptr inbounds [4 x float], [4 x float]* %avgvel, i64 0, i64 0, !dbg !7365
  %71 = load float, float* %arrayidx104, align 16, !dbg !7365
  %arrayidx105 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 0, !dbg !7367
  store float %71, float* %arrayidx105, align 16, !dbg !7368
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %avgvel, i64 0, i64 1, !dbg !7369
  %72 = load float, float* %arrayidx106, align 4, !dbg !7369
  %arrayidx107 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 1, !dbg !7370
  store float %72, float* %arrayidx107, align 4, !dbg !7371
  %arrayidx108 = getelementptr inbounds [4 x float], [4 x float]* %avgvel, i64 0, i64 2, !dbg !7372
  %73 = load float, float* %arrayidx108, align 8, !dbg !7372
  %arrayidx109 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 2, !dbg !7373
  store float %73, float* %arrayidx109, align 8, !dbg !7374
  br label %if.end110, !dbg !7375

if.end110:                                        ; preds = %if.then103, %land.lhs.true99, %land.lhs.true, %for.end92
  %arrayidx111 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7376
  %arraydecay112 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx111, i64 0, i64 0, !dbg !7376
  %arraydecay113 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 0, !dbg !7377
  %call114 = call float @dot_v3v3(float* %arraydecay112, float* %arraydecay113), !dbg !7378
  %arrayidx115 = getelementptr inbounds [4 x float], [4 x float]* %camco, i64 0, i64 0, !dbg !7379
  store float %call114, float* %arrayidx115, align 16, !dbg !7380
  %arrayidx116 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 1, !dbg !7381
  %arraydecay117 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx116, i64 0, i64 0, !dbg !7381
  %arraydecay118 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 0, !dbg !7382
  %call119 = call float @dot_v3v3(float* %arraydecay117, float* %arraydecay118), !dbg !7383
  %arrayidx120 = getelementptr inbounds [4 x float], [4 x float]* %camco, i64 0, i64 1, !dbg !7384
  store float %call119, float* %arrayidx120, align 4, !dbg !7385
  %arrayidx121 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 2, !dbg !7386
  %arraydecay122 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx121, i64 0, i64 0, !dbg !7386
  %arraydecay123 = getelementptr inbounds [4 x float], [4 x float]* %fsvec, i64 0, i64 0, !dbg !7387
  %call124 = call float @dot_v3v3(float* %arraydecay122, float* %arraydecay123), !dbg !7388
  %arrayidx125 = getelementptr inbounds [4 x float], [4 x float]* %camco, i64 0, i64 2, !dbg !7389
  store float %call124, float* %arrayidx125, align 8, !dbg !7390
  %arraydecay126 = getelementptr inbounds [4 x float], [4 x float]* %camco, i64 0, i64 0, !dbg !7391
  %arraydecay127 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7392
  %arraydecay128 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !7393
  call void @projectvert(float* %arraydecay126, [4 x float]* %arraydecay127, float* %arraydecay128), !dbg !7394
  %74 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7395
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %74, i32 0, i32 0, !dbg !7396
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7395
  %arraydecay130 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7397
  %arraydecay131 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !7398
  call void @projectvert(float* %arraydecay129, [4 x float]* %arraydecay130, float* %arraydecay131), !dbg !7399
  %arrayidx132 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 3, !dbg !7400
  %75 = load float, float* %arrayidx132, align 4, !dbg !7400
  %cmp133 = fcmp olt float %75, 0x3FB99999A0000000, !dbg !7402
  br i1 %cmp133, label %if.then135, label %if.else136, !dbg !7403

if.then135:                                       ; preds = %if.end110
  store float 1.000000e+01, float* %div, align 4, !dbg !7404
  br label %if.end139, !dbg !7405

if.else136:                                       ; preds = %if.end110
  %arrayidx137 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 3, !dbg !7406
  %76 = load float, float* %arrayidx137, align 4, !dbg !7406
  %div138 = fdiv float 1.000000e+00, %76, !dbg !7407
  store float %div138, float* %div, align 4, !dbg !7408
  br label %if.end139

if.end139:                                        ; preds = %if.else136, %if.then135
  %77 = load float, float* %zmulx, align 4, !dbg !7409
  %arrayidx140 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 0, !dbg !7410
  %78 = load float, float* %arrayidx140, align 16, !dbg !7410
  %mul141 = fmul float %77, %78, !dbg !7411
  %79 = load float, float* %div, align 4, !dbg !7412
  %mul142 = fmul float %mul141, %79, !dbg !7413
  %arrayidx143 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !7414
  store float %mul142, float* %arrayidx143, align 4, !dbg !7415
  %80 = load float, float* %zmuly, align 4, !dbg !7416
  %arrayidx144 = getelementptr inbounds [4 x float], [4 x float]* %hoco, i64 0, i64 1, !dbg !7417
  %81 = load float, float* %arrayidx144, align 4, !dbg !7417
  %mul145 = fmul float %80, %81, !dbg !7418
  %82 = load float, float* %div, align 4, !dbg !7419
  %mul146 = fmul float %mul145, %82, !dbg !7420
  %arrayidx147 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !7421
  store float %mul146, float* %arrayidx147, align 4, !dbg !7422
  %arrayidx148 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !7423
  %83 = load float, float* %arrayidx148, align 4, !dbg !7423
  %arrayidx149 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !7424
  %84 = load float, float* %arrayidx149, align 4, !dbg !7424
  %mul150 = fmul float %83, %84, !dbg !7425
  %arrayidx151 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !7426
  %85 = load float, float* %arrayidx151, align 4, !dbg !7426
  %arrayidx152 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !7427
  %86 = load float, float* %arrayidx152, align 4, !dbg !7427
  %mul153 = fmul float %85, %86, !dbg !7428
  %add154 = fadd float %mul150, %mul153, !dbg !7429
  store float %add154, float* %len, align 4, !dbg !7430
  %87 = load float, float* %len, align 4, !dbg !7431
  %88 = load float, float* %winsq, align 4, !dbg !7433
  %cmp155 = fcmp ogt float %87, %88, !dbg !7434
  br i1 %cmp155, label %if.then157, label %if.end164, !dbg !7435

if.then157:                                       ; preds = %if.end139
  %89 = load float, float* %winroot, align 4, !dbg !7436
  %90 = load float, float* %len, align 4, !dbg !7438
  %call158 = call float @sqrtf(float %90) #5, !dbg !7439
  %div159 = fdiv float %89, %call158, !dbg !7440
  store float %div159, float* %len, align 4, !dbg !7441
  %91 = load float, float* %len, align 4, !dbg !7442
  %arrayidx160 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !7443
  %92 = load float, float* %arrayidx160, align 4, !dbg !7444
  %mul161 = fmul float %92, %91, !dbg !7444
  store float %mul161, float* %arrayidx160, align 4, !dbg !7444
  %93 = load float, float* %len, align 4, !dbg !7445
  %arrayidx162 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !7446
  %94 = load float, float* %arrayidx162, align 4, !dbg !7447
  %mul163 = fmul float %94, %93, !dbg !7447
  store float %mul163, float* %arrayidx162, align 4, !dbg !7447
  br label %if.end164, !dbg !7448

if.end164:                                        ; preds = %if.then157, %if.end139
  %95 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7449
  %96 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7450
  %call165 = call float* @RE_vertren_get_winspeed(%struct.ObjectInstanceRen* %95, %struct.VertRen* %96, i32 1), !dbg !7451
  store float* %call165, float** %speed, align 8, !dbg !7452
  %arrayidx166 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !7453
  %97 = load float, float* %arrayidx166, align 4, !dbg !7453
  %98 = load float*, float** %speed, align 8, !dbg !7454
  %arrayidx167 = getelementptr inbounds float, float* %98, i64 2, !dbg !7454
  store float %97, float* %arrayidx167, align 4, !dbg !7455
  %99 = load float*, float** %speed, align 8, !dbg !7456
  %arrayidx168 = getelementptr inbounds float, float* %99, i64 0, !dbg !7456
  store float %97, float* %arrayidx168, align 4, !dbg !7457
  %arrayidx169 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !7458
  %100 = load float, float* %arrayidx169, align 4, !dbg !7458
  %101 = load float*, float** %speed, align 8, !dbg !7459
  %arrayidx170 = getelementptr inbounds float, float* %101, i64 3, !dbg !7459
  store float %100, float* %arrayidx170, align 4, !dbg !7460
  %102 = load float*, float** %speed, align 8, !dbg !7461
  %arrayidx171 = getelementptr inbounds float, float* %102, i64 1, !dbg !7461
  store float %100, float* %arrayidx171, align 4, !dbg !7462
  br label %for.inc172, !dbg !7463

for.inc172:                                       ; preds = %if.end164
  %103 = load i32, i32* %a, align 4, !dbg !7464
  %inc173 = add nsw i32 %103, 1, !dbg !7464
  store i32 %inc173, i32* %a, align 4, !dbg !7464
  %104 = load float*, float** %vectors.addr, align 8, !dbg !7465
  %add.ptr = getelementptr inbounds float, float* %104, i64 2, !dbg !7465
  store float* %add.ptr, float** %vectors.addr, align 8, !dbg !7465
  br label %for.cond65, !dbg !7466, !llvm.loop !7467

for.end174:                                       ; preds = %for.cond65
  store i32 1, i32* %retval, align 4, !dbg !7469
  br label %return, !dbg !7469

return:                                           ; preds = %for.end174, %if.then23, %if.then19, %if.else, %if.then
  %105 = load i32, i32* %retval, align 4, !dbg !7470
  ret i32 %105, !dbg !7470
}

; Function Attrs: noinline nounwind uwtable
define internal void @calculate_speedvectors(%struct.Render* %re, %struct.ObjectInstanceRen* %obi, float* %vectors, i32 %step) #0 !dbg !7471 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vectors.addr = alloca float*, align 8
  %step.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %strandbuf = alloca %struct.StrandBuffer*, align 8
  %mesh = alloca %struct.StrandSurface*, align 8
  %speed = alloca float*, align 8
  %winspeed = alloca [4 x float]*, align 8
  %ho = alloca [4 x float], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  %co4 = alloca float*, align 8
  %w = alloca [4 x float], align 16
  %winsq = alloca float, align 4
  %winroot = alloca float, align 4
  %a = alloca i32, align 4
  %face = alloca i32*, align 8
  %index = alloca i32*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  store float* %vectors, float** %vectors.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vectors.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !7482, metadata !DIExpression()), !dbg !7483
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7484
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i32 0, i32 2, !dbg !7485
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !7485
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr, align 8, !dbg !7483
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !7486, metadata !DIExpression()), !dbg !7487
  store %struct.VertRen* null, %struct.VertRen** %ver, align 8, !dbg !7487
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !7488, metadata !DIExpression()), !dbg !7491
  store %struct.StrandRen* null, %struct.StrandRen** %strand, align 8, !dbg !7491
  call void @llvm.dbg.declare(metadata %struct.StrandBuffer** %strandbuf, metadata !7492, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh, metadata !7494, metadata !DIExpression()), !dbg !7495
  store %struct.StrandSurface* null, %struct.StrandSurface** %mesh, align 8, !dbg !7495
  call void @llvm.dbg.declare(metadata float** %speed, metadata !7496, metadata !DIExpression()), !dbg !7497
  call void @llvm.dbg.declare(metadata [4 x float]** %winspeed, metadata !7498, metadata !DIExpression()), !dbg !7499
  store [4 x float]* null, [4 x float]** %winspeed, align 8, !dbg !7499
  call void @llvm.dbg.declare(metadata [4 x float]* %ho, metadata !7500, metadata !DIExpression()), !dbg !7501
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !7502, metadata !DIExpression()), !dbg !7503
  call void @llvm.dbg.declare(metadata float** %co1, metadata !7504, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.declare(metadata float** %co2, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.declare(metadata float** %co3, metadata !7508, metadata !DIExpression()), !dbg !7509
  call void @llvm.dbg.declare(metadata float** %co4, metadata !7510, metadata !DIExpression()), !dbg !7511
  call void @llvm.dbg.declare(metadata [4 x float]* %w, metadata !7512, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.declare(metadata float* %winsq, metadata !7514, metadata !DIExpression()), !dbg !7515
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7516
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 13, !dbg !7517
  %3 = load i32, i32* %winx, align 4, !dbg !7517
  %conv = sitofp i32 %3 to float, !dbg !7518
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7519
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 14, !dbg !7520
  %5 = load i32, i32* %winy, align 8, !dbg !7520
  %conv2 = sitofp i32 %5 to float, !dbg !7521
  %mul = fmul float %conv, %conv2, !dbg !7522
  store float %mul, float* %winsq, align 4, !dbg !7515
  call void @llvm.dbg.declare(metadata float* %winroot, metadata !7523, metadata !DIExpression()), !dbg !7524
  %6 = load float, float* %winsq, align 4, !dbg !7525
  %call = call float @sqrtf(float %6) #5, !dbg !7526
  store float %call, float* %winroot, align 4, !dbg !7524
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata i32** %face, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata i32** %index, metadata !7531, metadata !DIExpression()), !dbg !7532
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7533
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 11, !dbg !7535
  %8 = load i16, i16* %flag, align 8, !dbg !7535
  %conv3 = sext i16 %8 to i32, !dbg !7533
  %and = and i32 %conv3, 3, !dbg !7536
  %tobool = icmp ne i32 %and, 0, !dbg !7536
  br i1 %tobool, label %if.then, label %if.else, !dbg !7537

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7538
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7539
  %winmat4 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 35, !dbg !7540
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat4, i64 0, i64 0, !dbg !7539
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7541
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %10, i32 0, i32 8, !dbg !7542
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7541
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay5, [4 x float]* %arraydecay6), !dbg !7543
  br label %if.end, !dbg !7543

if.else:                                          ; preds = %entry
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7544
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7545
  %winmat8 = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 35, !dbg !7546
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat8, i64 0, i64 0, !dbg !7545
  call void @copy_m4_m4([4 x float]* %arraydecay7, [4 x float]* %arraydecay9), !dbg !7547
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7548
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 18, !dbg !7550
  %13 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !7550
  %tobool10 = icmp ne %struct.VertTableNode* %13, null, !dbg !7548
  br i1 %tobool10, label %if.then11, label %if.end27, !dbg !7551

if.then11:                                        ; preds = %if.end
  store i32 0, i32* %a, align 4, !dbg !7552
  br label %for.cond, !dbg !7555

for.cond:                                         ; preds = %for.inc, %if.then11
  %14 = load i32, i32* %a, align 4, !dbg !7556
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7558
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 10, !dbg !7559
  %16 = load i32, i32* %totvert, align 8, !dbg !7559
  %cmp = icmp slt i32 %14, %16, !dbg !7560
  br i1 %cmp, label %for.body, label %for.end, !dbg !7561

for.body:                                         ; preds = %for.cond
  %17 = load i32, i32* %a, align 4, !dbg !7562
  %and13 = and i32 %17, 255, !dbg !7565
  %cmp14 = icmp eq i32 %and13, 0, !dbg !7566
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !7567

if.then16:                                        ; preds = %for.body
  %18 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7568
  %vertnodes17 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %18, i32 0, i32 18, !dbg !7569
  %19 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes17, align 8, !dbg !7569
  %20 = load i32, i32* %a, align 4, !dbg !7570
  %shr = ashr i32 %20, 8, !dbg !7571
  %idxprom = sext i32 %shr to i64, !dbg !7568
  %arrayidx = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %19, i64 %idxprom, !dbg !7568
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx, i32 0, i32 0, !dbg !7572
  %21 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !7572
  store %struct.VertRen* %21, %struct.VertRen** %ver, align 8, !dbg !7573
  br label %if.end19, !dbg !7574

if.else18:                                        ; preds = %for.body
  %22 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7575
  %incdec.ptr = getelementptr inbounds %struct.VertRen, %struct.VertRen* %22, i32 1, !dbg !7575
  store %struct.VertRen* %incdec.ptr, %struct.VertRen** %ver, align 8, !dbg !7575
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then16
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7576
  %24 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7577
  %call20 = call float* @RE_vertren_get_winspeed(%struct.ObjectInstanceRen* %23, %struct.VertRen* %24, i32 1), !dbg !7578
  store float* %call20, float** %speed, align 8, !dbg !7579
  %25 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7580
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %25, i32 0, i32 0, !dbg !7581
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7580
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7582
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !7583
  call void @projectvert(float* %arraydecay21, [4 x float]* %arraydecay22, float* %arraydecay23), !dbg !7584
  %26 = load float*, float** %vectors.addr, align 8, !dbg !7585
  %27 = load i32, i32* %step.addr, align 4, !dbg !7586
  %28 = load float, float* %winsq, align 4, !dbg !7587
  %29 = load float, float* %winroot, align 4, !dbg !7588
  %30 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !7589
  %co24 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %30, i32 0, i32 0, !dbg !7590
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co24, i64 0, i64 0, !dbg !7589
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !7591
  %31 = load float*, float** %speed, align 8, !dbg !7592
  call void @calculate_speedvector(float* %26, i32 %27, float %28, float %29, float* %arraydecay25, float* %arraydecay26, float* %31), !dbg !7593
  br label %for.inc, !dbg !7594

for.inc:                                          ; preds = %if.end19
  %32 = load i32, i32* %a, align 4, !dbg !7595
  %inc = add nsw i32 %32, 1, !dbg !7595
  store i32 %inc, i32* %a, align 4, !dbg !7595
  %33 = load float*, float** %vectors.addr, align 8, !dbg !7596
  %add.ptr = getelementptr inbounds float, float* %33, i64 2, !dbg !7596
  store float* %add.ptr, float** %vectors.addr, align 8, !dbg !7596
  br label %for.cond, !dbg !7597, !llvm.loop !7598

for.end:                                          ; preds = %for.cond
  br label %if.end27, !dbg !7600

if.end27:                                         ; preds = %for.end, %if.end
  %34 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7601
  %strandnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %34, i32 0, i32 20, !dbg !7603
  %35 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes, align 8, !dbg !7603
  %tobool28 = icmp ne %struct.StrandTableNode* %35, null, !dbg !7601
  br i1 %tobool28, label %if.then29, label %if.end124, !dbg !7604

if.then29:                                        ; preds = %if.end27
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7605
  %strandbuf30 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %36, i32 0, i32 22, !dbg !7607
  %37 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf30, align 8, !dbg !7607
  store %struct.StrandBuffer* %37, %struct.StrandBuffer** %strandbuf, align 8, !dbg !7608
  %38 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !7609
  %tobool31 = icmp ne %struct.StrandBuffer* %38, null, !dbg !7610
  br i1 %tobool31, label %cond.true, label %cond.false, !dbg !7610

cond.true:                                        ; preds = %if.then29
  %39 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !7611
  %surface = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %39, i32 0, i32 8, !dbg !7612
  %40 = load %struct.StrandSurface*, %struct.StrandSurface** %surface, align 8, !dbg !7612
  br label %cond.end, !dbg !7610

cond.false:                                       ; preds = %if.then29
  br label %cond.end, !dbg !7610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.StrandSurface* [ %40, %cond.true ], [ null, %cond.false ], !dbg !7610
  store %struct.StrandSurface* %cond, %struct.StrandSurface** %mesh, align 8, !dbg !7613
  %41 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7614
  %tobool32 = icmp ne %struct.StrandSurface* %41, null, !dbg !7614
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !7616

if.then33:                                        ; preds = %cond.end
  %42 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7617
  %43 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7618
  %44 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7619
  %call34 = call float* @calculate_strandsurface_speedvectors(%struct.Render* %42, %struct.ObjectInstanceRen* %43, %struct.StrandSurface* %44), !dbg !7620
  %45 = bitcast float* %call34 to [4 x float]*, !dbg !7621
  store [4 x float]* %45, [4 x float]** %winspeed, align 8, !dbg !7622
  br label %if.end35, !dbg !7623

if.end35:                                         ; preds = %if.then33, %cond.end
  %46 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7624
  %tobool36 = icmp ne [4 x float]* %46, null, !dbg !7624
  br i1 %tobool36, label %if.then37, label %if.end123, !dbg !7626

if.then37:                                        ; preds = %if.end35
  store i32 0, i32* %a, align 4, !dbg !7627
  br label %for.cond38, !dbg !7630

for.cond38:                                       ; preds = %for.inc119, %if.then37
  %47 = load i32, i32* %a, align 4, !dbg !7631
  %48 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7633
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %48, i32 0, i32 12, !dbg !7634
  %49 = load i32, i32* %totstrand, align 8, !dbg !7634
  %cmp39 = icmp slt i32 %47, %49, !dbg !7635
  br i1 %cmp39, label %for.body41, label %for.end122, !dbg !7636

for.body41:                                       ; preds = %for.cond38
  %50 = load i32, i32* %a, align 4, !dbg !7637
  %and42 = and i32 %50, 255, !dbg !7640
  %cmp43 = icmp eq i32 %and42, 0, !dbg !7641
  br i1 %cmp43, label %if.then45, label %if.else51, !dbg !7642

if.then45:                                        ; preds = %for.body41
  %51 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7643
  %strandnodes46 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %51, i32 0, i32 20, !dbg !7644
  %52 = load %struct.StrandTableNode*, %struct.StrandTableNode** %strandnodes46, align 8, !dbg !7644
  %53 = load i32, i32* %a, align 4, !dbg !7645
  %shr47 = ashr i32 %53, 8, !dbg !7646
  %idxprom48 = sext i32 %shr47 to i64, !dbg !7643
  %arrayidx49 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %52, i64 %idxprom48, !dbg !7643
  %strand50 = getelementptr inbounds %struct.StrandTableNode, %struct.StrandTableNode* %arrayidx49, i32 0, i32 0, !dbg !7647
  %54 = load %struct.StrandRen*, %struct.StrandRen** %strand50, align 8, !dbg !7647
  store %struct.StrandRen* %54, %struct.StrandRen** %strand, align 8, !dbg !7648
  br label %if.end53, !dbg !7649

if.else51:                                        ; preds = %for.body41
  %55 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !7650
  %incdec.ptr52 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %55, i32 1, !dbg !7650
  store %struct.StrandRen* %incdec.ptr52, %struct.StrandRen** %strand, align 8, !dbg !7650
  br label %if.end53

if.end53:                                         ; preds = %if.else51, %if.then45
  %56 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7651
  %57 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !7652
  %call54 = call i32* @RE_strandren_get_face(%struct.ObjectRen* %56, %struct.StrandRen* %57, i32 0), !dbg !7653
  store i32* %call54, i32** %index, align 8, !dbg !7654
  %58 = load i32*, i32** %index, align 8, !dbg !7655
  %tobool55 = icmp ne i32* %58, null, !dbg !7655
  br i1 %tobool55, label %land.lhs.true, label %if.end118, !dbg !7657

land.lhs.true:                                    ; preds = %if.end53
  %59 = load i32*, i32** %index, align 8, !dbg !7658
  %60 = load i32, i32* %59, align 4, !dbg !7659
  %61 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7660
  %totface = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %61, i32 0, i32 11, !dbg !7661
  %62 = load i32, i32* %totface, align 4, !dbg !7661
  %cmp56 = icmp slt i32 %60, %62, !dbg !7662
  br i1 %cmp56, label %if.then58, label %if.end118, !dbg !7663

if.then58:                                        ; preds = %land.lhs.true
  %63 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7664
  %64 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !7666
  %call59 = call float* @RE_strandren_get_winspeed(%struct.ObjectInstanceRen* %63, %struct.StrandRen* %64, i32 1), !dbg !7667
  store float* %call59, float** %speed, align 8, !dbg !7668
  %65 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7669
  %face60 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %65, i32 0, i32 3, !dbg !7670
  %66 = load [4 x i32]*, [4 x i32]** %face60, align 8, !dbg !7670
  %67 = load i32*, i32** %index, align 8, !dbg !7671
  %68 = load i32, i32* %67, align 4, !dbg !7672
  %idxprom61 = sext i32 %68 to i64, !dbg !7669
  %arrayidx62 = getelementptr inbounds [4 x i32], [4 x i32]* %66, i64 %idxprom61, !dbg !7669
  %arraydecay63 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx62, i64 0, i64 0, !dbg !7669
  store i32* %arraydecay63, i32** %face, align 8, !dbg !7673
  %69 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7674
  %co64 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %69, i32 0, i32 4, !dbg !7675
  %70 = load [3 x float]*, [3 x float]** %co64, align 8, !dbg !7675
  %71 = load i32*, i32** %face, align 8, !dbg !7676
  %arrayidx65 = getelementptr inbounds i32, i32* %71, i64 0, !dbg !7676
  %72 = load i32, i32* %arrayidx65, align 4, !dbg !7676
  %idxprom66 = sext i32 %72 to i64, !dbg !7674
  %arrayidx67 = getelementptr inbounds [3 x float], [3 x float]* %70, i64 %idxprom66, !dbg !7674
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx67, i64 0, i64 0, !dbg !7674
  store float* %arraydecay68, float** %co1, align 8, !dbg !7677
  %73 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7678
  %co69 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %73, i32 0, i32 4, !dbg !7679
  %74 = load [3 x float]*, [3 x float]** %co69, align 8, !dbg !7679
  %75 = load i32*, i32** %face, align 8, !dbg !7680
  %arrayidx70 = getelementptr inbounds i32, i32* %75, i64 1, !dbg !7680
  %76 = load i32, i32* %arrayidx70, align 4, !dbg !7680
  %idxprom71 = sext i32 %76 to i64, !dbg !7678
  %arrayidx72 = getelementptr inbounds [3 x float], [3 x float]* %74, i64 %idxprom71, !dbg !7678
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 0, !dbg !7678
  store float* %arraydecay73, float** %co2, align 8, !dbg !7681
  %77 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7682
  %co74 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %77, i32 0, i32 4, !dbg !7683
  %78 = load [3 x float]*, [3 x float]** %co74, align 8, !dbg !7683
  %79 = load i32*, i32** %face, align 8, !dbg !7684
  %arrayidx75 = getelementptr inbounds i32, i32* %79, i64 2, !dbg !7684
  %80 = load i32, i32* %arrayidx75, align 4, !dbg !7684
  %idxprom76 = sext i32 %80 to i64, !dbg !7682
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %78, i64 %idxprom76, !dbg !7682
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 0, !dbg !7682
  store float* %arraydecay78, float** %co3, align 8, !dbg !7685
  %81 = load i32*, i32** %face, align 8, !dbg !7686
  %arrayidx79 = getelementptr inbounds i32, i32* %81, i64 3, !dbg !7686
  %82 = load i32, i32* %arrayidx79, align 4, !dbg !7686
  %tobool80 = icmp ne i32 %82, 0, !dbg !7687
  br i1 %tobool80, label %cond.true81, label %cond.false87, !dbg !7687

cond.true81:                                      ; preds = %if.then58
  %83 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !7688
  %co82 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %83, i32 0, i32 4, !dbg !7689
  %84 = load [3 x float]*, [3 x float]** %co82, align 8, !dbg !7689
  %85 = load i32*, i32** %face, align 8, !dbg !7690
  %arrayidx83 = getelementptr inbounds i32, i32* %85, i64 3, !dbg !7690
  %86 = load i32, i32* %arrayidx83, align 4, !dbg !7690
  %idxprom84 = sext i32 %86 to i64, !dbg !7688
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %84, i64 %idxprom84, !dbg !7688
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !7688
  br label %cond.end88, !dbg !7687

cond.false87:                                     ; preds = %if.then58
  br label %cond.end88, !dbg !7687

cond.end88:                                       ; preds = %cond.false87, %cond.true81
  %cond89 = phi float* [ %arraydecay86, %cond.true81 ], [ null, %cond.false87 ], !dbg !7687
  store float* %cond89, float** %co4, align 8, !dbg !7691
  %arraydecay90 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !7692
  %87 = load float*, float** %co1, align 8, !dbg !7693
  %88 = load float*, float** %co2, align 8, !dbg !7694
  %89 = load float*, float** %co3, align 8, !dbg !7695
  %90 = load float*, float** %co4, align 8, !dbg !7696
  %91 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !7697
  %vert91 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %91, i32 0, i32 0, !dbg !7698
  %92 = load %struct.StrandVert*, %struct.StrandVert** %vert91, align 8, !dbg !7698
  %co92 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %92, i32 0, i32 0, !dbg !7699
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co92, i64 0, i64 0, !dbg !7697
  call void @interp_weights_face_v3(float* %arraydecay90, float* %87, float* %88, float* %89, float* %90, float* %arraydecay93), !dbg !7700
  %93 = load float*, float** %speed, align 8, !dbg !7701
  call void @zero_v4(float* %93), !dbg !7702
  %94 = load float*, float** %speed, align 8, !dbg !7703
  %95 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7704
  %96 = load i32*, i32** %face, align 8, !dbg !7705
  %arrayidx94 = getelementptr inbounds i32, i32* %96, i64 0, !dbg !7705
  %97 = load i32, i32* %arrayidx94, align 4, !dbg !7705
  %idxprom95 = sext i32 %97 to i64, !dbg !7704
  %arrayidx96 = getelementptr inbounds [4 x float], [4 x float]* %95, i64 %idxprom95, !dbg !7704
  %arraydecay97 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx96, i64 0, i64 0, !dbg !7704
  %arrayidx98 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !7706
  %98 = load float, float* %arrayidx98, align 16, !dbg !7706
  call void @madd_v4_v4fl(float* %94, float* %arraydecay97, float %98), !dbg !7707
  %99 = load float*, float** %speed, align 8, !dbg !7708
  %100 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7709
  %101 = load i32*, i32** %face, align 8, !dbg !7710
  %arrayidx99 = getelementptr inbounds i32, i32* %101, i64 1, !dbg !7710
  %102 = load i32, i32* %arrayidx99, align 4, !dbg !7710
  %idxprom100 = sext i32 %102 to i64, !dbg !7709
  %arrayidx101 = getelementptr inbounds [4 x float], [4 x float]* %100, i64 %idxprom100, !dbg !7709
  %arraydecay102 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx101, i64 0, i64 0, !dbg !7709
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 1, !dbg !7711
  %103 = load float, float* %arrayidx103, align 4, !dbg !7711
  call void @madd_v4_v4fl(float* %99, float* %arraydecay102, float %103), !dbg !7712
  %104 = load float*, float** %speed, align 8, !dbg !7713
  %105 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7714
  %106 = load i32*, i32** %face, align 8, !dbg !7715
  %arrayidx104 = getelementptr inbounds i32, i32* %106, i64 2, !dbg !7715
  %107 = load i32, i32* %arrayidx104, align 4, !dbg !7715
  %idxprom105 = sext i32 %107 to i64, !dbg !7714
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %105, i64 %idxprom105, !dbg !7714
  %arraydecay107 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx106, i64 0, i64 0, !dbg !7714
  %arrayidx108 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 2, !dbg !7716
  %108 = load float, float* %arrayidx108, align 8, !dbg !7716
  call void @madd_v4_v4fl(float* %104, float* %arraydecay107, float %108), !dbg !7717
  %109 = load i32*, i32** %face, align 8, !dbg !7718
  %arrayidx109 = getelementptr inbounds i32, i32* %109, i64 3, !dbg !7718
  %110 = load i32, i32* %arrayidx109, align 4, !dbg !7718
  %tobool110 = icmp ne i32 %110, 0, !dbg !7718
  br i1 %tobool110, label %if.then111, label %if.end117, !dbg !7720

if.then111:                                       ; preds = %cond.end88
  %111 = load float*, float** %speed, align 8, !dbg !7721
  %112 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7722
  %113 = load i32*, i32** %face, align 8, !dbg !7723
  %arrayidx112 = getelementptr inbounds i32, i32* %113, i64 3, !dbg !7723
  %114 = load i32, i32* %arrayidx112, align 4, !dbg !7723
  %idxprom113 = sext i32 %114 to i64, !dbg !7722
  %arrayidx114 = getelementptr inbounds [4 x float], [4 x float]* %112, i64 %idxprom113, !dbg !7722
  %arraydecay115 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx114, i64 0, i64 0, !dbg !7722
  %arrayidx116 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 3, !dbg !7724
  %115 = load float, float* %arrayidx116, align 4, !dbg !7724
  call void @madd_v4_v4fl(float* %111, float* %arraydecay115, float %115), !dbg !7725
  br label %if.end117, !dbg !7725

if.end117:                                        ; preds = %if.then111, %cond.end88
  br label %if.end118, !dbg !7726

if.end118:                                        ; preds = %if.end117, %land.lhs.true, %if.end53
  br label %for.inc119, !dbg !7727

for.inc119:                                       ; preds = %if.end118
  %116 = load i32, i32* %a, align 4, !dbg !7728
  %inc120 = add nsw i32 %116, 1, !dbg !7728
  store i32 %inc120, i32* %a, align 4, !dbg !7728
  %117 = load float*, float** %vectors.addr, align 8, !dbg !7729
  %add.ptr121 = getelementptr inbounds float, float* %117, i64 2, !dbg !7729
  store float* %add.ptr121, float** %vectors.addr, align 8, !dbg !7729
  br label %for.cond38, !dbg !7730, !llvm.loop !7731

for.end122:                                       ; preds = %for.cond38
  %118 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7733
  %119 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !7734
  %120 = bitcast [4 x float]* %119 to i8*, !dbg !7734
  call void %118(i8* %120), !dbg !7733
  br label %if.end123, !dbg !7735

if.end123:                                        ; preds = %for.end122, %if.end35
  br label %if.end124, !dbg !7736

if.end124:                                        ; preds = %if.end123, %if.end27
  ret void, !dbg !7737
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_dbase_object_vectors(%struct.ListBase* %lb) #0 !dbg !7738 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !7743, metadata !DIExpression()), !dbg !7744
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7745
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !7747
  %1 = load i8*, i8** %first, align 8, !dbg !7747
  %2 = bitcast i8* %1 to %struct.ObjectInstanceRen*, !dbg !7745
  store %struct.ObjectInstanceRen* %2, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7748
  br label %for.cond, !dbg !7749

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7750
  %tobool = icmp ne %struct.ObjectInstanceRen* %3, null, !dbg !7752
  br i1 %tobool, label %for.body, label %for.end, !dbg !7752

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7753
  %vectors = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 16, !dbg !7755
  %5 = load float*, float** %vectors, align 8, !dbg !7755
  %tobool1 = icmp ne float* %5, null, !dbg !7753
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7756

if.then:                                          ; preds = %for.body
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7757
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7758
  %vectors2 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 16, !dbg !7759
  %8 = load float*, float** %vectors2, align 8, !dbg !7759
  %9 = bitcast float* %8 to i8*, !dbg !7758
  call void %6(i8* %9), !dbg !7757
  br label %if.end, !dbg !7757

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7755

for.inc:                                          ; preds = %if.end
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7760
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %10, i32 0, i32 0, !dbg !7761
  %11 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !7761
  store %struct.ObjectInstanceRen* %11, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7762
  br label %for.cond, !dbg !7763, !llvm.loop !7764

for.end:                                          ; preds = %for.cond
  %12 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !7766
  call void @BLI_freelistN(%struct.ListBase* %12), !dbg !7767
  ret void, !dbg !7768
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RE_Database_Baking(%struct.Render* %re, %struct.Main* %bmain, %struct.Scene* %scene, i32 %lay, i32 %type, %struct.Object* %actob) #0 !dbg !7769 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %lay.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %actob.addr = alloca %struct.Object*, align 8
  %camera = alloca %struct.Object*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %amb = alloca [3 x float], align 4
  %onlyselected = alloca i16, align 2
  %nolamps = alloca i16, align 2
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  store i32 %lay, i32* %lay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lay.addr, metadata !7779, metadata !DIExpression()), !dbg !7780
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7781, metadata !DIExpression()), !dbg !7782
  store %struct.Object* %actob, %struct.Object** %actob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %actob.addr, metadata !7783, metadata !DIExpression()), !dbg !7784
  call void @llvm.dbg.declare(metadata %struct.Object** %camera, metadata !7785, metadata !DIExpression()), !dbg !7786
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !7787, metadata !DIExpression()), !dbg !7788
  call void @llvm.dbg.declare(metadata [3 x float]* %amb, metadata !7789, metadata !DIExpression()), !dbg !7790
  call void @llvm.dbg.declare(metadata i16* %onlyselected, metadata !7791, metadata !DIExpression()), !dbg !7792
  %0 = load i32, i32* %type.addr, align 4, !dbg !7793
  %cmp = icmp eq i32 %0, 0, !dbg !7793
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !7793

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !7793
  %cmp1 = icmp eq i32 %1, 1, !dbg !7793
  br i1 %cmp1, label %lor.end, label %lor.lhs.false2, !dbg !7793

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %type.addr, align 4, !dbg !7793
  %cmp3 = icmp eq i32 %2, 6, !dbg !7793
  br i1 %cmp3, label %lor.end, label %lor.lhs.false4, !dbg !7793

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %3 = load i32, i32* %type.addr, align 4, !dbg !7793
  %cmp5 = icmp eq i32 %3, 2, !dbg !7793
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !7793

lor.rhs:                                          ; preds = %lor.lhs.false4
  %4 = load i32, i32* %type.addr, align 4, !dbg !7793
  %cmp6 = icmp eq i32 %4, 14, !dbg !7793
  br label %lor.end, !dbg !7793

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %5 = phi i1 [ true, %lor.lhs.false4 ], [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp6, %lor.rhs ]
  %lnot = xor i1 %5, true, !dbg !7794
  %lnot.ext = zext i1 %lnot to i32, !dbg !7794
  %conv = trunc i32 %lnot.ext to i16, !dbg !7794
  store i16 %conv, i16* %onlyselected, align 2, !dbg !7792
  call void @llvm.dbg.declare(metadata i16* %nolamps, metadata !7795, metadata !DIExpression()), !dbg !7796
  %6 = load i32, i32* %type.addr, align 4, !dbg !7797
  %cmp7 = icmp eq i32 %6, 3, !dbg !7797
  br i1 %cmp7, label %lor.end21, label %lor.lhs.false9, !dbg !7797

lor.lhs.false9:                                   ; preds = %lor.end
  %7 = load i32, i32* %type.addr, align 4, !dbg !7797
  %cmp10 = icmp eq i32 %7, 4, !dbg !7797
  br i1 %cmp10, label %lor.end21, label %lor.lhs.false12, !dbg !7797

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %8 = load i32, i32* %type.addr, align 4, !dbg !7797
  %cmp13 = icmp eq i32 %8, 5, !dbg !7797
  br i1 %cmp13, label %lor.end21, label %lor.lhs.false15, !dbg !7797

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %9 = load i32, i32* %type.addr, align 4, !dbg !7797
  %cmp16 = icmp eq i32 %9, 13, !dbg !7797
  br i1 %cmp16, label %lor.end21, label %lor.rhs18, !dbg !7797

lor.rhs18:                                        ; preds = %lor.lhs.false15
  %10 = load i32, i32* %type.addr, align 4, !dbg !7797
  %cmp19 = icmp eq i32 %10, 14, !dbg !7797
  br label %lor.end21, !dbg !7797

lor.end21:                                        ; preds = %lor.rhs18, %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false9, %lor.end
  %11 = phi i1 [ true, %lor.lhs.false15 ], [ true, %lor.lhs.false12 ], [ true, %lor.lhs.false9 ], [ true, %lor.end ], [ %cmp19, %lor.rhs18 ]
  %lor.ext = zext i1 %11 to i32, !dbg !7797
  %conv22 = trunc i32 %lor.ext to i16, !dbg !7797
  store i16 %conv22, i16* %nolamps, align 2, !dbg !7796
  %12 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !7798
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7799
  %main = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 43, !dbg !7800
  store %struct.Main* %12, %struct.Main** %main, align 8, !dbg !7801
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7802
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7803
  %scene23 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 44, !dbg !7804
  store %struct.Scene* %14, %struct.Scene** %scene23, align 8, !dbg !7805
  %16 = load i32, i32* %lay.addr, align 4, !dbg !7806
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7807
  %lay24 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 48, !dbg !7808
  store i32 %16, i32* %lay24, align 8, !dbg !7809
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7810
  %r = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !7811
  %layers = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 60, !dbg !7812
  call void @BLI_freelistN(%struct.ListBase* %layers), !dbg !7813
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7814
  %r25 = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 45, !dbg !7815
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7816
  %r26 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 22, !dbg !7817
  %21 = bitcast %struct.RenderData* %r25 to i8*, !dbg !7817
  %22 = bitcast %struct.RenderData* %r26 to i8*, !dbg !7817
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 3984, i1 false), !dbg !7817
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7818
  %r27 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 45, !dbg !7819
  %layers28 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r27, i32 0, i32 60, !dbg !7820
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7821
  %r29 = getelementptr inbounds %struct.Scene, %struct.Scene* %24, i32 0, i32 22, !dbg !7822
  %layers30 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r29, i32 0, i32 60, !dbg !7823
  call void @BLI_duplicatelist(%struct.ListBase* %layers28, %struct.ListBase* %layers30), !dbg !7824
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7825
  call void @RE_init_threadcount(%struct.Render* %25), !dbg !7826
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7827
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 4, !dbg !7828
  %27 = load i16, i16* %flag, align 8, !dbg !7829
  %conv31 = sext i16 %27 to i32, !dbg !7829
  %or = or i32 %conv31, 64, !dbg !7829
  %conv32 = trunc i32 %or to i16, !dbg !7829
  store i16 %conv32, i16* %flag, align 8, !dbg !7829
  %28 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !7830
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7831
  %excludeob = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 78, !dbg !7832
  store %struct.Object* %28, %struct.Object** %excludeob, align 8, !dbg !7833
  %30 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !7834
  %tobool = icmp ne %struct.Object* %30, null, !dbg !7834
  br i1 %tobool, label %if.then, label %if.end, !dbg !7836

if.then:                                          ; preds = %lor.end21
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7837
  %flag33 = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 4, !dbg !7838
  %32 = load i16, i16* %flag33, align 8, !dbg !7839
  %conv34 = sext i16 %32 to i32, !dbg !7839
  %or35 = or i32 %conv34, 32, !dbg !7839
  %conv36 = trunc i32 %or35 to i16, !dbg !7839
  store i16 %conv36, i16* %flag33, align 8, !dbg !7839
  br label %if.end, !dbg !7837

if.end:                                           ; preds = %if.then, %lor.end21
  %33 = load i32, i32* %type.addr, align 4, !dbg !7840
  %cmp37 = icmp eq i32 %33, 3, !dbg !7842
  br i1 %cmp37, label %land.lhs.true, label %if.end48, !dbg !7843

land.lhs.true:                                    ; preds = %if.end
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7844
  %r39 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 45, !dbg !7845
  %bake_normal_space = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r39, i32 0, i32 76, !dbg !7846
  %35 = load i16, i16* %bake_normal_space, align 8, !dbg !7846
  %conv40 = sext i16 %35 to i32, !dbg !7844
  %cmp41 = icmp eq i32 %conv40, 3, !dbg !7847
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !7848

if.then43:                                        ; preds = %land.lhs.true
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7849
  %flag44 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 4, !dbg !7850
  %37 = load i16, i16* %flag44, align 8, !dbg !7851
  %conv45 = sext i16 %37 to i32, !dbg !7851
  %or46 = or i32 %conv45, 16, !dbg !7851
  %conv47 = trunc i32 %or46 to i16, !dbg !7851
  store i16 %conv47, i16* %flag44, align 8, !dbg !7851
  br label %if.end48, !dbg !7849

if.end48:                                         ; preds = %if.then43, %land.lhs.true, %if.end
  %38 = load i32, i32* %type.addr, align 4, !dbg !7852
  %cmp49 = icmp eq i32 %38, 14, !dbg !7854
  br i1 %cmp49, label %if.then51, label %if.end56, !dbg !7855

if.then51:                                        ; preds = %if.end48
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7856
  %flag52 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 4, !dbg !7857
  %40 = load i16, i16* %flag52, align 8, !dbg !7858
  %conv53 = sext i16 %40 to i32, !dbg !7858
  %or54 = or i32 %conv53, 256, !dbg !7858
  %conv55 = trunc i32 %or54 to i16, !dbg !7858
  store i16 %conv55, i16* %flag52, align 8, !dbg !7858
  br label %if.end56, !dbg !7856

if.end56:                                         ; preds = %if.then51, %if.end48
  %41 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !7859
  %tobool57 = icmp ne %struct.Object* %41, null, !dbg !7859
  br i1 %tobool57, label %if.end81, label %land.lhs.true58, !dbg !7861

land.lhs.true58:                                  ; preds = %if.end56
  %42 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp59 = icmp eq i32 %42, 0, !dbg !7862
  br i1 %cmp59, label %if.then76, label %lor.lhs.false61, !dbg !7862

lor.lhs.false61:                                  ; preds = %land.lhs.true58
  %43 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp62 = icmp eq i32 %43, 3, !dbg !7862
  br i1 %cmp62, label %if.then76, label %lor.lhs.false64, !dbg !7862

lor.lhs.false64:                                  ; preds = %lor.lhs.false61
  %44 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp65 = icmp eq i32 %44, 4, !dbg !7862
  br i1 %cmp65, label %if.then76, label %lor.lhs.false67, !dbg !7862

lor.lhs.false67:                                  ; preds = %lor.lhs.false64
  %45 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp68 = icmp eq i32 %45, 5, !dbg !7862
  br i1 %cmp68, label %if.then76, label %lor.lhs.false70, !dbg !7862

lor.lhs.false70:                                  ; preds = %lor.lhs.false67
  %46 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp71 = icmp eq i32 %46, 13, !dbg !7862
  br i1 %cmp71, label %if.then76, label %lor.lhs.false73, !dbg !7862

lor.lhs.false73:                                  ; preds = %lor.lhs.false70
  %47 = load i32, i32* %type.addr, align 4, !dbg !7862
  %cmp74 = icmp eq i32 %47, 14, !dbg !7862
  br i1 %cmp74, label %if.then76, label %if.end81, !dbg !7863

if.then76:                                        ; preds = %lor.lhs.false73, %lor.lhs.false70, %lor.lhs.false67, %lor.lhs.false64, %lor.lhs.false61, %land.lhs.true58
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7864
  %r77 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 45, !dbg !7866
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r77, i32 0, i32 47, !dbg !7867
  %49 = load i32, i32* %mode, align 8, !dbg !7868
  %and = and i32 %49, -3, !dbg !7868
  store i32 %and, i32* %mode, align 8, !dbg !7868
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7869
  %r78 = getelementptr inbounds %struct.Render, %struct.Render* %50, i32 0, i32 45, !dbg !7870
  %mode79 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r78, i32 0, i32 47, !dbg !7871
  %51 = load i32, i32* %mode79, align 8, !dbg !7872
  %and80 = and i32 %51, -65537, !dbg !7872
  store i32 %and80, i32* %mode79, align 8, !dbg !7872
  br label %if.end81, !dbg !7873

if.end81:                                         ; preds = %if.then76, %lor.lhs.false73, %if.end56
  %52 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !7874
  %tobool82 = icmp ne %struct.Object* %52, null, !dbg !7874
  br i1 %tobool82, label %if.end90, label %land.lhs.true83, !dbg !7876

land.lhs.true83:                                  ; preds = %if.end81
  %53 = load i32, i32* %type.addr, align 4, !dbg !7877
  %cmp84 = icmp eq i32 %53, 6, !dbg !7878
  br i1 %cmp84, label %if.then86, label %if.end90, !dbg !7879

if.then86:                                        ; preds = %land.lhs.true83
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7880
  %r87 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 45, !dbg !7882
  %mode88 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 47, !dbg !7883
  %55 = load i32, i32* %mode88, align 8, !dbg !7884
  %or89 = or i32 %55, 2, !dbg !7884
  store i32 %or89, i32* %mode88, align 8, !dbg !7884
  br label %if.end90, !dbg !7885

if.end90:                                         ; preds = %if.then86, %land.lhs.true83, %if.end81
  %call = call %struct.MemArena* @BLI_memarena_new(i64 16376, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0)), !dbg !7886
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7887
  %memArena = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 81, !dbg !7888
  store %struct.MemArena* %call, %struct.MemArena** %memArena, align 8, !dbg !7889
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7890
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %57, i32 0, i32 62, !dbg !7891
  store i32 0, i32* %tothalo, align 8, !dbg !7892
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7893
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 64, !dbg !7894
  store i32 0, i32* %totlamp, align 8, !dbg !7895
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7896
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %59, i32 0, i32 63, !dbg !7897
  store i32 0, i32* %totstrand, align 4, !dbg !7898
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7899
  %totvert = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 61, !dbg !7900
  store i32 0, i32* %totvert, align 4, !dbg !7901
  %61 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7902
  %totvlak = getelementptr inbounds %struct.Render, %struct.Render* %61, i32 0, i32 60, !dbg !7903
  store i32 0, i32* %totvlak, align 8, !dbg !7904
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7905
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %62, i32 0, i32 66, !dbg !7906
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights, i32 0, i32 1, !dbg !7907
  store i8* null, i8** %last, align 8, !dbg !7908
  %63 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7909
  %lights91 = getelementptr inbounds %struct.Render, %struct.Render* %63, i32 0, i32 66, !dbg !7910
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights91, i32 0, i32 0, !dbg !7911
  store i8* null, i8** %first, align 8, !dbg !7912
  %64 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7913
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %64, i32 0, i32 67, !dbg !7914
  %last92 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren, i32 0, i32 1, !dbg !7915
  store i8* null, i8** %last92, align 8, !dbg !7916
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7917
  %lampren93 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 67, !dbg !7918
  %first94 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lampren93, i32 0, i32 0, !dbg !7919
  store i8* null, i8** %first94, align 8, !dbg !7920
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7921
  %lay95 = getelementptr inbounds %struct.Render, %struct.Render* %66, i32 0, i32 48, !dbg !7923
  %67 = load i32, i32* %lay95, align 8, !dbg !7923
  %and96 = and i32 %67, -16777216, !dbg !7924
  %tobool97 = icmp ne i32 %and96, 0, !dbg !7924
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !7925

if.then98:                                        ; preds = %if.end90
  %68 = load i32, i32* %lay.addr, align 4, !dbg !7926
  %and99 = and i32 %68, -16777216, !dbg !7926
  store i32 %and99, i32* %lay.addr, align 4, !dbg !7926
  br label %if.end100, !dbg !7927

if.end100:                                        ; preds = %if.then98, %if.end90
  %69 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7928
  %call101 = call %struct.Object* @RE_GetCamera(%struct.Render* %69), !dbg !7929
  store %struct.Object* %call101, %struct.Object** %camera, align 8, !dbg !7930
  %70 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7931
  %tobool102 = icmp ne %struct.Object* %70, null, !dbg !7931
  br i1 %tobool102, label %if.then103, label %if.else, !dbg !7933

if.then103:                                       ; preds = %if.end100
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7934
  %71 = load %struct.Object*, %struct.Object** %camera, align 8, !dbg !7936
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %71, i32 0, i32 47, !dbg !7937
  %arraydecay104 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !7936
  call void @normalize_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay104), !dbg !7938
  %arraydecay105 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7939
  %call106 = call zeroext i8 @invert_m4([4 x float]* %arraydecay105), !dbg !7940
  %72 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7941
  %arraydecay107 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7942
  call void @RE_SetView(%struct.Render* %72, [4 x float]* %arraydecay107), !dbg !7943
  br label %if.end110, !dbg !7944

if.else:                                          ; preds = %if.end100
  %arraydecay108 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7945
  call void @unit_m4([4 x float]* %arraydecay108), !dbg !7947
  %73 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7948
  %arraydecay109 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7949
  call void @RE_SetView(%struct.Render* %73, [4 x float]* %arraydecay109), !dbg !7950
  br label %if.end110

if.end110:                                        ; preds = %if.else, %if.then103
  %74 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7951
  %imat = getelementptr inbounds %struct.Render, %struct.Render* %74, i32 0, i32 31, !dbg !7952
  %arraydecay111 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !7951
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7953
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 33, !dbg !7954
  %arraydecay112 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !7953
  call void @copy_m3_m4([3 x float]* %arraydecay111, [4 x float]* %arraydecay112), !dbg !7955
  %76 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7956
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %76, i32 0, i32 35, !dbg !7957
  %arraydecay113 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !7956
  call void @unit_m4([4 x float]* %arraydecay113), !dbg !7958
  %77 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7959
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %77, i32 0, i32 14, !dbg !7960
  store i32 256, i32* %winy, align 8, !dbg !7961
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7962
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 13, !dbg !7963
  store i32 256, i32* %winx, align 4, !dbg !7964
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7965
  call void @init_render_world(%struct.Render* %79), !dbg !7966
  %80 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7967
  %r114 = getelementptr inbounds %struct.Render, %struct.Render* %80, i32 0, i32 45, !dbg !7969
  %mode115 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r114, i32 0, i32 47, !dbg !7970
  %81 = load i32, i32* %mode115, align 8, !dbg !7970
  %and116 = and i32 %81, 65536, !dbg !7971
  %tobool117 = icmp ne i32 %and116, 0, !dbg !7971
  br i1 %tobool117, label %if.then118, label %if.end132, !dbg !7972

if.then118:                                       ; preds = %if.end110
  %82 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7973
  call void @init_render_qmcsampler(%struct.Render* %82), !dbg !7975
  %83 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7976
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %83, i32 0, i32 46, !dbg !7978
  %mode119 = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 23, !dbg !7979
  %84 = load i16, i16* %mode119, align 2, !dbg !7979
  %conv120 = sext i16 %84 to i32, !dbg !7976
  %and121 = and i32 %conv120, 208, !dbg !7980
  %tobool122 = icmp ne i32 %and121, 0, !dbg !7980
  br i1 %tobool122, label %if.then123, label %if.end131, !dbg !7981

if.then123:                                       ; preds = %if.then118
  %85 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7982
  %wrld124 = getelementptr inbounds %struct.Render, %struct.Render* %85, i32 0, i32 46, !dbg !7984
  %ao_samp_method = getelementptr inbounds %struct.World, %struct.World* %wrld124, i32 0, i32 63, !dbg !7985
  %86 = load i16, i16* %ao_samp_method, align 8, !dbg !7985
  %conv125 = sext i16 %86 to i32, !dbg !7982
  %cmp126 = icmp eq i32 %conv125, 0, !dbg !7986
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !7987

if.then128:                                       ; preds = %if.then123
  %87 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7988
  %wrld129 = getelementptr inbounds %struct.Render, %struct.Render* %87, i32 0, i32 46, !dbg !7989
  call void @init_ao_sphere(%struct.World* %wrld129), !dbg !7990
  br label %if.end130, !dbg !7990

if.end130:                                        ; preds = %if.then128, %if.then123
  br label %if.end131, !dbg !7991

if.end131:                                        ; preds = %if.end130, %if.then118
  br label %if.end132, !dbg !7992

if.end132:                                        ; preds = %if.end131, %if.end110
  %88 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7993
  call void @init_render_textures(%struct.Render* %88), !dbg !7994
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %amb, i64 0, i64 0, !dbg !7995
  %89 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !7996
  %wrld134 = getelementptr inbounds %struct.Render, %struct.Render* %89, i32 0, i32 46, !dbg !7997
  %ambr = getelementptr inbounds %struct.World, %struct.World* %wrld134, i32 0, i32 12, !dbg !7998
  call void @copy_v3_v3(float* %arraydecay133, float* %ambr), !dbg !7999
  %90 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8000
  %main135 = getelementptr inbounds %struct.Render, %struct.Render* %90, i32 0, i32 43, !dbg !8001
  %91 = load %struct.Main*, %struct.Main** %main135, align 8, !dbg !8001
  %92 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8002
  %r136 = getelementptr inbounds %struct.Render, %struct.Render* %92, i32 0, i32 45, !dbg !8003
  %mode137 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r136, i32 0, i32 47, !dbg !8004
  %93 = load i32, i32* %mode137, align 8, !dbg !8004
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %amb, i64 0, i64 0, !dbg !8005
  call void @init_render_materials(%struct.Main* %91, i32 %93, float* %arraydecay138), !dbg !8006
  call void @set_node_shader_lamp_loop(void (%struct.ShadeInput*, %struct.ShadeResult*)* @shade_material_loop), !dbg !8007
  %94 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8008
  %95 = load i32, i32* %lay.addr, align 4, !dbg !8009
  %96 = load i16, i16* %nolamps, align 2, !dbg !8010
  %conv139 = sext i16 %96 to i32, !dbg !8010
  %97 = load i16, i16* %onlyselected, align 2, !dbg !8011
  %conv140 = sext i16 %97 to i32, !dbg !8011
  %98 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !8012
  call void @database_init_objects(%struct.Render* %94, i32 %95, i32 %conv139, i32 %conv140, %struct.Object* %98, i32 0), !dbg !8013
  %99 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8014
  call void @set_material_lightgroups(%struct.Render* %99), !dbg !8015
  %100 = load i32, i32* %type.addr, align 4, !dbg !8016
  %cmp141 = icmp ne i32 %100, 0, !dbg !8018
  br i1 %cmp141, label %if.then143, label %if.end150, !dbg !8019

if.then143:                                       ; preds = %if.end132
  %101 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8020
  %r144 = getelementptr inbounds %struct.Render, %struct.Render* %101, i32 0, i32 45, !dbg !8022
  %mode145 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r144, i32 0, i32 47, !dbg !8023
  %102 = load i32, i32* %mode145, align 8, !dbg !8023
  %and146 = and i32 %102, 2, !dbg !8024
  %tobool147 = icmp ne i32 %and146, 0, !dbg !8024
  br i1 %tobool147, label %if.then148, label %if.end149, !dbg !8025

if.then148:                                       ; preds = %if.then143
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8026
  call void @threaded_makeshadowbufs(%struct.Render* %103), !dbg !8027
  br label %if.end149, !dbg !8027

if.end149:                                        ; preds = %if.then148, %if.then143
  br label %if.end150, !dbg !8028

if.end150:                                        ; preds = %if.end149, %if.end132
  %104 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8029
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %104, i32 0, i32 96, !dbg !8031
  %105 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !8031
  %106 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8032
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %106, i32 0, i32 97, !dbg !8033
  %107 = load i8*, i8** %tbh, align 8, !dbg !8033
  %call151 = call i32 %105(i8* %107), !dbg !8029
  %tobool152 = icmp ne i32 %call151, 0, !dbg !8029
  br i1 %tobool152, label %if.end160, label %if.then153, !dbg !8034

if.then153:                                       ; preds = %if.end150
  %108 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8035
  %r154 = getelementptr inbounds %struct.Render, %struct.Render* %108, i32 0, i32 45, !dbg !8037
  %mode155 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r154, i32 0, i32 47, !dbg !8038
  %109 = load i32, i32* %mode155, align 8, !dbg !8038
  %and156 = and i32 %109, 65536, !dbg !8039
  %tobool157 = icmp ne i32 %and156, 0, !dbg !8039
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !8040

if.then158:                                       ; preds = %if.then153
  %110 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8041
  call void @makeraytree(%struct.Render* %110), !dbg !8042
  br label %if.end159, !dbg !8042

if.end159:                                        ; preds = %if.then158, %if.then153
  br label %if.end160, !dbg !8043

if.end160:                                        ; preds = %if.end159, %if.end150
  %111 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8044
  %test_break161 = getelementptr inbounds %struct.Render, %struct.Render* %111, i32 0, i32 96, !dbg !8046
  %112 = load i32 (i8*)*, i32 (i8*)** %test_break161, align 8, !dbg !8046
  %113 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8047
  %tbh162 = getelementptr inbounds %struct.Render, %struct.Render* %113, i32 0, i32 97, !dbg !8048
  %114 = load i8*, i8** %tbh162, align 8, !dbg !8048
  %call163 = call i32 %112(i8* %114), !dbg !8044
  %tobool164 = icmp ne i32 %call163, 0, !dbg !8044
  br i1 %tobool164, label %if.end166, label %if.then165, !dbg !8049

if.then165:                                       ; preds = %if.end160
  %115 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8050
  call void @make_pointdensities(%struct.Render* %115), !dbg !8051
  br label %if.end166, !dbg !8051

if.end166:                                        ; preds = %if.then165, %if.end160
  %116 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8052
  %test_break167 = getelementptr inbounds %struct.Render, %struct.Render* %116, i32 0, i32 96, !dbg !8054
  %117 = load i32 (i8*)*, i32 (i8*)** %test_break167, align 8, !dbg !8054
  %118 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8055
  %tbh168 = getelementptr inbounds %struct.Render, %struct.Render* %118, i32 0, i32 97, !dbg !8056
  %119 = load i8*, i8** %tbh168, align 8, !dbg !8056
  %call169 = call i32 %117(i8* %119), !dbg !8052
  %tobool170 = icmp ne i32 %call169, 0, !dbg !8052
  br i1 %tobool170, label %if.end172, label %if.then171, !dbg !8057

if.then171:                                       ; preds = %if.end166
  %120 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8058
  call void @make_voxeldata(%struct.Render* %120), !dbg !8059
  br label %if.end172, !dbg !8059

if.end172:                                        ; preds = %if.then171, %if.end166
  %121 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8060
  %wrld173 = getelementptr inbounds %struct.Render, %struct.Render* %121, i32 0, i32 46, !dbg !8062
  %mode174 = getelementptr inbounds %struct.World, %struct.World* %wrld173, i32 0, i32 23, !dbg !8063
  %122 = load i16, i16* %mode174, align 2, !dbg !8063
  %conv175 = sext i16 %122 to i32, !dbg !8060
  %and176 = and i32 %conv175, 208, !dbg !8064
  %tobool177 = icmp ne i32 %and176, 0, !dbg !8064
  br i1 %tobool177, label %land.lhs.true178, label %if.end196, !dbg !8065

land.lhs.true178:                                 ; preds = %if.end172
  %123 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8066
  %test_break179 = getelementptr inbounds %struct.Render, %struct.Render* %123, i32 0, i32 96, !dbg !8067
  %124 = load i32 (i8*)*, i32 (i8*)** %test_break179, align 8, !dbg !8067
  %125 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8068
  %tbh180 = getelementptr inbounds %struct.Render, %struct.Render* %125, i32 0, i32 97, !dbg !8069
  %126 = load i8*, i8** %tbh180, align 8, !dbg !8069
  %call181 = call i32 %124(i8* %126), !dbg !8066
  %tobool182 = icmp ne i32 %call181, 0, !dbg !8066
  br i1 %tobool182, label %if.end196, label %if.then183, !dbg !8070

if.then183:                                       ; preds = %land.lhs.true178
  %127 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8071
  %wrld184 = getelementptr inbounds %struct.Render, %struct.Render* %127, i32 0, i32 46, !dbg !8073
  %ao_gather_method = getelementptr inbounds %struct.World, %struct.World* %wrld184, i32 0, i32 64, !dbg !8074
  %128 = load i16, i16* %ao_gather_method, align 2, !dbg !8074
  %conv185 = sext i16 %128 to i32, !dbg !8071
  %cmp186 = icmp eq i32 %conv185, 1, !dbg !8075
  br i1 %cmp186, label %if.then188, label %if.end195, !dbg !8076

if.then188:                                       ; preds = %if.then183
  %129 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8077
  %r189 = getelementptr inbounds %struct.Render, %struct.Render* %129, i32 0, i32 45, !dbg !8079
  %mode190 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r189, i32 0, i32 47, !dbg !8080
  %130 = load i32, i32* %mode190, align 8, !dbg !8080
  %and191 = and i32 %130, 2, !dbg !8081
  %tobool192 = icmp ne i32 %and191, 0, !dbg !8081
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !8082

if.then193:                                       ; preds = %if.then188
  %131 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8083
  call void @make_occ_tree(%struct.Render* %131), !dbg !8084
  br label %if.end194, !dbg !8084

if.end194:                                        ; preds = %if.then193, %if.then188
  br label %if.end195, !dbg !8085

if.end195:                                        ; preds = %if.end194, %if.then183
  br label %if.end196, !dbg !8086

if.end196:                                        ; preds = %if.end195, %land.lhs.true178, %if.end172
  %132 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8087
  %i = getelementptr inbounds %struct.Render, %struct.Render* %132, i32 0, i32 98, !dbg !8088
  %convertdone = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 11, !dbg !8089
  store i16 1, i16* %convertdone, align 4, !dbg !8090
  ret void, !dbg !8091
}

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #4

declare dso_local void @RE_init_threadcount(%struct.Render*) #4

declare dso_local void @unit_m4([4 x float]*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !8092 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8095, metadata !DIExpression()), !dbg !8096
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata float* %d, metadata !8099, metadata !DIExpression()), !dbg !8100
  %0 = load float*, float** %a.addr, align 8, !dbg !8101
  %1 = load float*, float** %a.addr, align 8, !dbg !8102
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8103
  store float %call, float* %d, align 4, !dbg !8100
  %2 = load float, float* %d, align 4, !dbg !8104
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8106
  br i1 %cmp, label %if.then, label %if.else, !dbg !8107

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8108
  %call1 = call float @sqrtf(float %3) #5, !dbg !8110
  store float %call1, float* %d, align 4, !dbg !8111
  %4 = load float*, float** %r.addr, align 8, !dbg !8112
  %5 = load float*, float** %a.addr, align 8, !dbg !8113
  %6 = load float, float* %d, align 4, !dbg !8114
  %div = fdiv float 1.000000e+00, %6, !dbg !8115
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !8116
  br label %if.end, !dbg !8117

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8118
  call void @zero_v3(float* %7), !dbg !8120
  store float 0.000000e+00, float* %d, align 4, !dbg !8121
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8122
  ret float %8, !dbg !8123
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8124 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8127, metadata !DIExpression()), !dbg !8128
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8129, metadata !DIExpression()), !dbg !8130
  %0 = load float*, float** %a.addr, align 8, !dbg !8131
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8131
  %1 = load float, float* %arrayidx, align 4, !dbg !8131
  %2 = load float*, float** %b.addr, align 8, !dbg !8132
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8132
  %3 = load float, float* %arrayidx1, align 4, !dbg !8132
  %mul = fmul float %1, %3, !dbg !8133
  %4 = load float*, float** %a.addr, align 8, !dbg !8134
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8134
  %5 = load float, float* %arrayidx2, align 4, !dbg !8134
  %6 = load float*, float** %b.addr, align 8, !dbg !8135
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8135
  %7 = load float, float* %arrayidx3, align 4, !dbg !8135
  %mul4 = fmul float %5, %7, !dbg !8136
  %add = fadd float %mul, %mul4, !dbg !8137
  %8 = load float*, float** %a.addr, align 8, !dbg !8138
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8138
  %9 = load float, float* %arrayidx5, align 4, !dbg !8138
  %10 = load float*, float** %b.addr, align 8, !dbg !8139
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8139
  %11 = load float, float* %arrayidx6, align 4, !dbg !8139
  %mul7 = fmul float %9, %11, !dbg !8140
  %add8 = fadd float %add, %mul7, !dbg !8141
  ret float %add8, !dbg !8142
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8143 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  %0 = load float*, float** %a.addr, align 8, !dbg !8152
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8152
  %1 = load float, float* %arrayidx, align 4, !dbg !8152
  %2 = load float, float* %f.addr, align 4, !dbg !8153
  %mul = fmul float %1, %2, !dbg !8154
  %3 = load float*, float** %r.addr, align 8, !dbg !8155
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8155
  store float %mul, float* %arrayidx1, align 4, !dbg !8156
  %4 = load float*, float** %a.addr, align 8, !dbg !8157
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8157
  %5 = load float, float* %arrayidx2, align 4, !dbg !8157
  %6 = load float, float* %f.addr, align 4, !dbg !8158
  %mul3 = fmul float %5, %6, !dbg !8159
  %7 = load float*, float** %r.addr, align 8, !dbg !8160
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8160
  store float %mul3, float* %arrayidx4, align 4, !dbg !8161
  %8 = load float*, float** %a.addr, align 8, !dbg !8162
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8162
  %9 = load float, float* %arrayidx5, align 4, !dbg !8162
  %10 = load float, float* %f.addr, align 4, !dbg !8163
  %mul6 = fmul float %9, %10, !dbg !8164
  %11 = load float*, float** %r.addr, align 8, !dbg !8165
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !8165
  store float %mul6, float* %arrayidx7, align 4, !dbg !8166
  ret void, !dbg !8167
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !8168 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  %0 = load float*, float** %r.addr, align 8, !dbg !8173
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8173
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8174
  %1 = load float*, float** %r.addr, align 8, !dbg !8175
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !8175
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8176
  %2 = load float*, float** %r.addr, align 8, !dbg !8177
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !8177
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !8178
  ret void, !dbg !8179
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @set_dupli_tex_mat(%struct.Render* %re, %struct.ObjectInstanceRen* %obi, %struct.DupliObject* %dob, [4 x float]* %omat) #0 !dbg !2 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %omat.addr = alloca [4 x float]*, align 8
  %material = alloca %struct.Material***, align 8
  %a = alloca i16, align 2
  %totmaterial = alloca i16*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store [4 x float]* %omat, [4 x float]** %omat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %omat.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8188
  %tobool = icmp ne %struct.Render* %0, null, !dbg !8188
  br i1 %tobool, label %if.end, label %if.then, !dbg !8190

if.then:                                          ; preds = %entry
  store %struct.Object* null, %struct.Object** @set_dupli_tex_mat.lastob, align 8, !dbg !8191
  store i32 0, i32* @set_dupli_tex_mat.needtexmat, align 4, !dbg !8193
  br label %return, !dbg !8194

if.end:                                           ; preds = %entry
  %1 = load %struct.Object*, %struct.Object** @set_dupli_tex_mat.lastob, align 8, !dbg !8195
  %2 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8197
  %ob = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %2, i32 0, i32 2, !dbg !8198
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8198
  %cmp = icmp ne %struct.Object* %1, %3, !dbg !8199
  br i1 %cmp, label %if.then1, label %if.end21, !dbg !8200

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Material**** %material, metadata !8201, metadata !DIExpression()), !dbg !8205
  call void @llvm.dbg.declare(metadata i16* %a, metadata !8206, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.declare(metadata i16** %totmaterial, metadata !8208, metadata !DIExpression()), !dbg !8209
  %4 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8210
  %ob2 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %4, i32 0, i32 2, !dbg !8211
  %5 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !8211
  store %struct.Object* %5, %struct.Object** @set_dupli_tex_mat.lastob, align 8, !dbg !8212
  store i32 0, i32* @set_dupli_tex_mat.needtexmat, align 4, !dbg !8213
  %6 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8214
  %ob3 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %6, i32 0, i32 2, !dbg !8215
  %7 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !8215
  %call = call i16* @give_totcolp(%struct.Object* %7), !dbg !8216
  store i16* %call, i16** %totmaterial, align 8, !dbg !8217
  %8 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8218
  %ob4 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %8, i32 0, i32 2, !dbg !8219
  %9 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !8219
  %call5 = call %struct.Material*** @give_matarar(%struct.Object* %9), !dbg !8220
  store %struct.Material*** %call5, %struct.Material**** %material, align 8, !dbg !8221
  %10 = load i16*, i16** %totmaterial, align 8, !dbg !8222
  %tobool6 = icmp ne i16* %10, null, !dbg !8222
  br i1 %tobool6, label %land.lhs.true, label %if.end20, !dbg !8224

land.lhs.true:                                    ; preds = %if.then1
  %11 = load %struct.Material***, %struct.Material**** %material, align 8, !dbg !8225
  %tobool7 = icmp ne %struct.Material*** %11, null, !dbg !8225
  br i1 %tobool7, label %if.then8, label %if.end20, !dbg !8226

if.then8:                                         ; preds = %land.lhs.true
  store i16 0, i16* %a, align 2, !dbg !8227
  br label %for.cond, !dbg !8229

for.cond:                                         ; preds = %for.inc, %if.then8
  %12 = load i16, i16* %a, align 2, !dbg !8230
  %conv = sext i16 %12 to i32, !dbg !8230
  %13 = load i16*, i16** %totmaterial, align 8, !dbg !8232
  %14 = load i16, i16* %13, align 2, !dbg !8233
  %conv9 = sext i16 %14 to i32, !dbg !8233
  %cmp10 = icmp slt i32 %conv, %conv9, !dbg !8234
  br i1 %cmp10, label %for.body, label %for.end, !dbg !8235

for.body:                                         ; preds = %for.cond
  %15 = load %struct.Material***, %struct.Material**** %material, align 8, !dbg !8236
  %16 = load %struct.Material**, %struct.Material*** %15, align 8, !dbg !8238
  %17 = load i16, i16* %a, align 2, !dbg !8239
  %idxprom = sext i16 %17 to i64, !dbg !8240
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %16, i64 %idxprom, !dbg !8240
  %18 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !8240
  %tobool12 = icmp ne %struct.Material* %18, null, !dbg !8240
  br i1 %tobool12, label %land.lhs.true13, label %if.end19, !dbg !8241

land.lhs.true13:                                  ; preds = %for.body
  %19 = load %struct.Material***, %struct.Material**** %material, align 8, !dbg !8242
  %20 = load %struct.Material**, %struct.Material*** %19, align 8, !dbg !8243
  %21 = load i16, i16* %a, align 2, !dbg !8244
  %idxprom14 = sext i16 %21 to i64, !dbg !8245
  %arrayidx15 = getelementptr inbounds %struct.Material*, %struct.Material** %20, i64 %idxprom14, !dbg !8245
  %22 = load %struct.Material*, %struct.Material** %arrayidx15, align 8, !dbg !8245
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 90, !dbg !8246
  %23 = load i16, i16* %texco, align 4, !dbg !8246
  %conv16 = sext i16 %23 to i32, !dbg !8245
  %and = and i32 %conv16, 32, !dbg !8247
  %tobool17 = icmp ne i32 %and, 0, !dbg !8247
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !8248

if.then18:                                        ; preds = %land.lhs.true13
  store i32 1, i32* @set_dupli_tex_mat.needtexmat, align 4, !dbg !8249
  br label %if.end19, !dbg !8250

if.end19:                                         ; preds = %if.then18, %land.lhs.true13, %for.body
  br label %for.inc, !dbg !8251

for.inc:                                          ; preds = %if.end19
  %24 = load i16, i16* %a, align 2, !dbg !8252
  %inc = add i16 %24, 1, !dbg !8252
  store i16 %inc, i16* %a, align 2, !dbg !8252
  br label %for.cond, !dbg !8253, !llvm.loop !8254

for.end:                                          ; preds = %for.cond
  br label %if.end20, !dbg !8255

if.end20:                                         ; preds = %for.end, %land.lhs.true, %if.then1
  br label %if.end21, !dbg !8256

if.end21:                                         ; preds = %if.end20, %if.end
  %25 = load i32, i32* @set_dupli_tex_mat.needtexmat, align 4, !dbg !8257
  %tobool22 = icmp ne i32 %25, 0, !dbg !8257
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !8259

if.then23:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !8260, metadata !DIExpression()), !dbg !8262
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8263
  %memArena = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 81, !dbg !8264
  %27 = load %struct.MemArena*, %struct.MemArena** %memArena, align 8, !dbg !8264
  %call24 = call i8* @BLI_memarena_alloc(%struct.MemArena* %27, i64 64), !dbg !8265
  %28 = bitcast i8* %call24 to [4 x float]*, !dbg !8265
  %29 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8266
  %duplitexmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %29, i32 0, i32 14, !dbg !8267
  store [4 x float]* %28, [4 x float]** %duplitexmat, align 8, !dbg !8268
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8269
  %30 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8270
  %mat = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %30, i32 0, i32 3, !dbg !8271
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8270
  %call26 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay25), !dbg !8272
  %31 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8273
  %duplitexmat27 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %31, i32 0, i32 14, !dbg !8273
  %32 = load [4 x float]*, [4 x float]** %duplitexmat27, align 8, !dbg !8273
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8273
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 32, !dbg !8273
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !8273
  %34 = load [4 x float]*, [4 x float]** %omat.addr, align 8, !dbg !8273
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8273
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8273
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 33, !dbg !8273
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !8273
  call void @_va_mul_m4_series_5([4 x float]* %32, [4 x float]* %arraydecay28, [4 x float]* %34, [4 x float]* %arraydecay29, [4 x float]* %arraydecay30), !dbg !8273
  br label %if.end31, !dbg !8274

if.end31:                                         ; preds = %if.then23, %if.end21
  %36 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8275
  %dupliorco = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %36, i32 0, i32 12, !dbg !8276
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %dupliorco, i64 0, i64 0, !dbg !8275
  %37 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8277
  %orco = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %37, i32 0, i32 4, !dbg !8278
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !8277
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay33), !dbg !8279
  %38 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8280
  %dupliuv = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %38, i32 0, i32 13, !dbg !8281
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv, i64 0, i64 0, !dbg !8280
  %39 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8282
  %uv = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %39, i32 0, i32 5, !dbg !8283
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8282
  call void @copy_v2_v2(float* %arraydecay34, float* %arraydecay35), !dbg !8284
  br label %return, !dbg !8285

return:                                           ; preds = %if.end31, %if.then
  ret void, !dbg !8285
}

declare dso_local %struct.Base* @_setlooper_base_step(%struct.Scene**, %struct.Base*) #4

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_object_restricted(%struct.Render* %re, %struct.Object* %ob) #0 !dbg !8286 {
entry:
  %retval = alloca i8, align 1
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8289, metadata !DIExpression()), !dbg !8290
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8291, metadata !DIExpression()), !dbg !8292
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8293
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !8295
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !8296
  %1 = load i32, i32* %scemode, align 4, !dbg !8296
  %and = and i32 %1, 524288, !dbg !8297
  %tobool = icmp ne i32 %and, 0, !dbg !8297
  br i1 %tobool, label %if.then, label %if.else, !dbg !8298

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8299
  %restrictflag = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 102, !dbg !8300
  %3 = load i8, i8* %restrictflag, align 8, !dbg !8300
  %conv = zext i8 %3 to i32, !dbg !8299
  %and1 = and i32 %conv, 1, !dbg !8301
  %cmp = icmp ne i32 %and1, 0, !dbg !8302
  %conv2 = zext i1 %cmp to i32, !dbg !8302
  %conv3 = trunc i32 %conv2 to i8, !dbg !8303
  store i8 %conv3, i8* %retval, align 1, !dbg !8304
  br label %return, !dbg !8304

if.else:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8305
  %restrictflag4 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 102, !dbg !8306
  %5 = load i8, i8* %restrictflag4, align 8, !dbg !8306
  %conv5 = zext i8 %5 to i32, !dbg !8305
  %and6 = and i32 %conv5, 4, !dbg !8307
  %cmp7 = icmp ne i32 %and6, 0, !dbg !8308
  %conv8 = zext i1 %cmp7 to i32, !dbg !8308
  %conv9 = trunc i32 %conv8 to i8, !dbg !8309
  store i8 %conv9, i8* %retval, align 1, !dbg !8310
  br label %return, !dbg !8310

return:                                           ; preds = %if.else, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !8311
  ret i8 %6, !dbg !8311
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @allow_render_object(%struct.Render* %re, %struct.Object* %ob, i32 %nolamps, i32 %onlyselected, %struct.Object* %actob) #0 !dbg !8312 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nolamps.addr = alloca i32, align 4
  %onlyselected.addr = alloca i32, align 4
  %actob.addr = alloca %struct.Object*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i32 %nolamps, i32* %nolamps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nolamps.addr, metadata !8319, metadata !DIExpression()), !dbg !8320
  store i32 %onlyselected, i32* %onlyselected.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onlyselected.addr, metadata !8321, metadata !DIExpression()), !dbg !8322
  store %struct.Object* %actob, %struct.Object** %actob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %actob.addr, metadata !8323, metadata !DIExpression()), !dbg !8324
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8325
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8327
  %call = call zeroext i8 @is_object_hidden(%struct.Render* %0, %struct.Object* %1), !dbg !8328
  %tobool = icmp ne i8 %call, 0, !dbg !8328
  br i1 %tobool, label %if.then, label %if.end, !dbg !8329

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8330
  br label %return, !dbg !8330

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8331
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 109, !dbg !8333
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !8334
  %3 = load i8*, i8** %first, align 8, !dbg !8334
  %tobool1 = icmp ne i8* %3, null, !dbg !8331
  br i1 %tobool1, label %if.end10, label %if.then2, !dbg !8335

if.then2:                                         ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8336
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 55, !dbg !8339
  %5 = load i16, i16* %transflag, align 8, !dbg !8339
  %conv = sext i16 %5 to i32, !dbg !8336
  %and = and i32 %conv, 2840, !dbg !8340
  %tobool3 = icmp ne i32 %and, 0, !dbg !8340
  br i1 %tobool3, label %land.lhs.true, label %if.end9, !dbg !8341

land.lhs.true:                                    ; preds = %if.then2
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8342
  %transflag4 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 55, !dbg !8343
  %7 = load i16, i16* %transflag4, align 8, !dbg !8343
  %conv5 = sext i16 %7 to i32, !dbg !8342
  %and6 = and i32 %conv5, 8, !dbg !8344
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8344
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8345

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8346
  br label %return, !dbg !8346

if.end9:                                          ; preds = %land.lhs.true, %if.then2
  br label %if.end10, !dbg !8348

if.end10:                                         ; preds = %if.end9, %if.end
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8349
  %type = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 3, !dbg !8351
  %9 = load i16, i16* %type, align 8, !dbg !8351
  %conv11 = sext i16 %9 to i32, !dbg !8349
  %cmp = icmp eq i32 %conv11, 5, !dbg !8352
  br i1 %cmp, label %land.lhs.true13, label %if.end18, !dbg !8353

land.lhs.true13:                                  ; preds = %if.end10
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8354
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8355
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %11, i32 0, i32 44, !dbg !8356
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8356
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8357
  %call14 = call %struct.Object* @BKE_mball_basis_find(%struct.Scene* %12, %struct.Object* %13), !dbg !8358
  %cmp15 = icmp ne %struct.Object* %10, %call14, !dbg !8359
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8360

if.then17:                                        ; preds = %land.lhs.true13
  store i32 0, i32* %retval, align 4, !dbg !8361
  br label %return, !dbg !8361

if.end18:                                         ; preds = %land.lhs.true13, %if.end10
  %14 = load i32, i32* %nolamps.addr, align 4, !dbg !8362
  %tobool19 = icmp ne i32 %14, 0, !dbg !8362
  br i1 %tobool19, label %land.lhs.true20, label %if.end26, !dbg !8364

land.lhs.true20:                                  ; preds = %if.end18
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8365
  %type21 = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 3, !dbg !8366
  %16 = load i16, i16* %type21, align 8, !dbg !8366
  %conv22 = sext i16 %16 to i32, !dbg !8365
  %cmp23 = icmp eq i32 %conv22, 10, !dbg !8367
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8368

if.then25:                                        ; preds = %land.lhs.true20
  store i32 0, i32* %retval, align 4, !dbg !8369
  br label %return, !dbg !8369

if.end26:                                         ; preds = %land.lhs.true20, %if.end18
  %17 = load i32, i32* %onlyselected.addr, align 4, !dbg !8370
  %tobool27 = icmp ne i32 %17, 0, !dbg !8370
  br i1 %tobool27, label %land.lhs.true28, label %if.end36, !dbg !8372

land.lhs.true28:                                  ; preds = %if.end26
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8373
  %19 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !8374
  %cmp29 = icmp ne %struct.Object* %18, %19, !dbg !8375
  br i1 %cmp29, label %land.lhs.true31, label %if.end36, !dbg !8376

land.lhs.true31:                                  ; preds = %land.lhs.true28
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8377
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %20, i32 0, i32 53, !dbg !8378
  %21 = load i16, i16* %flag, align 4, !dbg !8378
  %conv32 = sext i16 %21 to i32, !dbg !8377
  %and33 = and i32 %conv32, 1, !dbg !8379
  %tobool34 = icmp ne i32 %and33, 0, !dbg !8379
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !8380

if.then35:                                        ; preds = %land.lhs.true31
  store i32 0, i32* %retval, align 4, !dbg !8381
  br label %return, !dbg !8381

if.end36:                                         ; preds = %land.lhs.true31, %land.lhs.true28, %if.end26
  store i32 1, i32* %retval, align 4, !dbg !8382
  br label %return, !dbg !8382

return:                                           ; preds = %if.end36, %if.then35, %if.then25, %if.then17, %if.then8, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !8383
  ret i32 %22, !dbg !8383
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_object(%struct.Render* %re, %struct.Object* %ob, %struct.Object* %par, %struct.DupliObject* %dob, [4 x float]* %omat, i32 %timeoffset) #0 !dbg !4170 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %omat.addr = alloca [4 x float]*, align 8
  %timeoffset.addr = alloca i32, align 4
  %time = alloca double, align 8
  %mat = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8386, metadata !DIExpression()), !dbg !8387
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !8388, metadata !DIExpression()), !dbg !8389
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !8390, metadata !DIExpression()), !dbg !8391
  store [4 x float]* %omat, [4 x float]** %omat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %omat.addr, metadata !8392, metadata !DIExpression()), !dbg !8393
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata double* %time, metadata !8396, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !8398, metadata !DIExpression()), !dbg !8399
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8400
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !8402
  %1 = load i16, i16* %type, align 8, !dbg !8402
  %conv = sext i16 %1 to i32, !dbg !8400
  %cmp = icmp eq i32 %conv, 10, !dbg !8403
  br i1 %cmp, label %if.then, label %if.else, !dbg !8404

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8405
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8406
  %call = call %struct.GroupObject* @add_render_lamp(%struct.Render* %2, %struct.Object* %3), !dbg !8407
  br label %if.end11, !dbg !8407

if.else:                                          ; preds = %entry
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8408
  %type2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 3, !dbg !8410
  %5 = load i16, i16* %type2, align 8, !dbg !8410
  %call3 = call i32 @render_object_type(i16 signext %5), !dbg !8411
  %tobool = icmp ne i32 %call3, 0, !dbg !8411
  br i1 %tobool, label %if.then4, label %if.else5, !dbg !8412

if.then4:                                         ; preds = %if.else
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8413
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8414
  %8 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !8415
  %9 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8416
  %10 = load [4 x float]*, [4 x float]** %omat.addr, align 8, !dbg !8417
  %11 = load i32, i32* %timeoffset.addr, align 4, !dbg !8418
  call void @add_render_object(%struct.Render* %6, %struct.Object* %7, %struct.Object* %8, %struct.DupliObject* %9, [4 x float]* %10, i32 %11), !dbg !8419
  br label %if.end, !dbg !8419

if.else5:                                         ; preds = %if.else
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8420
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8422
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 32, !dbg !8423
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !8422
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8424
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 47, !dbg !8425
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8424
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay6, [4 x float]* %arraydecay7), !dbg !8426
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8427
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 50, !dbg !8428
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8427
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8429
  %call10 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay8, [4 x float]* %arraydecay9), !dbg !8430
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %call12 = call double @PIL_check_seconds_timer(), !dbg !8431
  store double %call12, double* %time, align 8, !dbg !8432
  %15 = load double, double* %time, align 8, !dbg !8433
  %16 = load double, double* @init_render_object.lasttime, align 8, !dbg !8435
  %sub = fsub double %15, %16, !dbg !8436
  %cmp13 = fcmp ogt double %sub, 1.000000e+00, !dbg !8437
  br i1 %cmp13, label %if.then15, label %if.end25, !dbg !8438

if.then15:                                        ; preds = %if.end11
  %17 = load double, double* %time, align 8, !dbg !8439
  store double %17, double* @init_render_object.lasttime, align 8, !dbg !8441
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8442
  %totvert = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 61, !dbg !8443
  %19 = load i32, i32* %totvert, align 4, !dbg !8443
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8444
  %i = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 98, !dbg !8445
  %totvert16 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 2, !dbg !8446
  store i32 %19, i32* %totvert16, align 8, !dbg !8447
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8448
  %totvlak = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 60, !dbg !8449
  %22 = load i32, i32* %totvlak, align 8, !dbg !8449
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8450
  %i17 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 98, !dbg !8451
  %totface = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i17, i32 0, i32 1, !dbg !8452
  store i32 %22, i32* %totface, align 4, !dbg !8453
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8454
  %totstrand = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 63, !dbg !8455
  %25 = load i32, i32* %totstrand, align 4, !dbg !8455
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8456
  %i18 = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 98, !dbg !8457
  %totstrand19 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i18, i32 0, i32 3, !dbg !8458
  store i32 %25, i32* %totstrand19, align 4, !dbg !8459
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8460
  %tothalo = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 62, !dbg !8461
  %28 = load i32, i32* %tothalo, align 8, !dbg !8461
  %29 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8462
  %i20 = getelementptr inbounds %struct.Render, %struct.Render* %29, i32 0, i32 98, !dbg !8463
  %tothalo21 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i20, i32 0, i32 4, !dbg !8464
  store i32 %28, i32* %tothalo21, align 8, !dbg !8465
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8466
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 64, !dbg !8467
  %31 = load i32, i32* %totlamp, align 8, !dbg !8467
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8468
  %i22 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 98, !dbg !8469
  %totlamp23 = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i22, i32 0, i32 5, !dbg !8470
  store i32 %31, i32* %totlamp23, align 4, !dbg !8471
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8472
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %33, i32 0, i32 90, !dbg !8473
  %34 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !8473
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8474
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 91, !dbg !8475
  %36 = load i8*, i8** %sdh, align 8, !dbg !8475
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8476
  %i24 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 98, !dbg !8477
  call void %34(i8* %36, %struct.RenderStats* %i24), !dbg !8472
  br label %if.end25, !dbg !8478

if.end25:                                         ; preds = %if.then15, %if.end11
  %38 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8479
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %38, i32 0, i32 53, !dbg !8480
  %39 = load i16, i16* %flag, align 4, !dbg !8481
  %conv26 = sext i16 %39 to i32, !dbg !8481
  %or = or i32 %conv26, 1024, !dbg !8481
  %conv27 = trunc i32 %or to i16, !dbg !8481
  store i16 %conv27, i16* %flag, align 4, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: noinline nounwind uwtable
define internal void @dupli_render_particle_set(%struct.Render* %re, %struct.Object* %ob, i32 %timeoffset, i32 %level, i32 %enable) #0 !dbg !8483 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %timeoffset.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %enable.addr = alloca i32, align 4
  %group = alloca %struct.Group*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8486, metadata !DIExpression()), !dbg !8487
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !8494, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata %struct.Group** %group, metadata !8496, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !8498, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !8511, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !8513, metadata !DIExpression()), !dbg !8514
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8515
  %r = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 45, !dbg !8517
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !8518
  %1 = load i32, i32* %scemode, align 4, !dbg !8518
  %and = and i32 %1, 524288, !dbg !8519
  %tobool = icmp ne i32 %and, 0, !dbg !8519
  br i1 %tobool, label %if.then, label %if.end, !dbg !8520

if.then:                                          ; preds = %entry
  br label %for.end50, !dbg !8521

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %level.addr, align 4, !dbg !8522
  %cmp = icmp sge i32 %2, 8, !dbg !8524
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8525

if.then1:                                         ; preds = %if.end
  br label %for.end50, !dbg !8526

if.end2:                                          ; preds = %if.end
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8527
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 55, !dbg !8529
  %4 = load i16, i16* %transflag, align 8, !dbg !8529
  %conv = sext i16 %4 to i32, !dbg !8527
  %and3 = and i32 %conv, 2048, !dbg !8530
  %tobool4 = icmp ne i32 %and3, 0, !dbg !8530
  br i1 %tobool4, label %if.then5, label %if.end37, !dbg !8531

if.then5:                                         ; preds = %if.end2
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8532
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 109, !dbg !8535
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !8536
  %6 = load i8*, i8** %first, align 8, !dbg !8536
  %7 = bitcast i8* %6 to %struct.ParticleSystem*, !dbg !8532
  store %struct.ParticleSystem* %7, %struct.ParticleSystem** %psys, align 8, !dbg !8537
  br label %for.cond, !dbg !8538

for.cond:                                         ; preds = %for.inc, %if.then5
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8539
  %tobool6 = icmp ne %struct.ParticleSystem* %8, null, !dbg !8541
  br i1 %tobool6, label %for.body, label %for.end, !dbg !8541

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8542
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 2, !dbg !8542
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8542
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 21, !dbg !8542
  %11 = load i16, i16* %ren_as, align 8, !dbg !8542
  %conv7 = sext i16 %11 to i32, !dbg !8542
  %cmp8 = icmp eq i32 %conv7, 7, !dbg !8542
  br i1 %cmp8, label %if.then15, label %lor.lhs.false, !dbg !8542

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8542
  %part10 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 2, !dbg !8542
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part10, align 8, !dbg !8542
  %ren_as11 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 21, !dbg !8542
  %14 = load i16, i16* %ren_as11, align 8, !dbg !8542
  %conv12 = sext i16 %14 to i32, !dbg !8542
  %cmp13 = icmp eq i32 %conv12, 8, !dbg !8542
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !8545

if.then15:                                        ; preds = %lor.lhs.false, %for.body
  %15 = load i32, i32* %enable.addr, align 4, !dbg !8546
  %tobool16 = icmp ne i32 %15, 0, !dbg !8546
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !8549

if.then17:                                        ; preds = %if.then15
  %16 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8550
  %17 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8551
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8552
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 32, !dbg !8553
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !8552
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8554
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 35, !dbg !8555
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !8554
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8556
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 13, !dbg !8557
  %21 = load i32, i32* %winx, align 4, !dbg !8557
  %22 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8558
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %22, i32 0, i32 14, !dbg !8559
  %23 = load i32, i32* %winy, align 8, !dbg !8559
  %24 = load i32, i32* %timeoffset.addr, align 4, !dbg !8560
  call void @psys_render_set(%struct.Object* %16, %struct.ParticleSystem* %17, [4 x float]* %arraydecay, [4 x float]* %arraydecay18, i32 %21, i32 %23, i32 %24), !dbg !8561
  br label %if.end19, !dbg !8561

if.else:                                          ; preds = %if.then15
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8562
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8563
  call void @psys_render_restore(%struct.Object* %25, %struct.ParticleSystem* %26), !dbg !8564
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then17
  br label %if.end20, !dbg !8565

if.end20:                                         ; preds = %if.end19, %lor.lhs.false
  br label %for.inc, !dbg !8566

for.inc:                                          ; preds = %if.end20
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8567
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 0, !dbg !8568
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !8568
  store %struct.ParticleSystem* %28, %struct.ParticleSystem** %psys, align 8, !dbg !8569
  br label %for.cond, !dbg !8570, !llvm.loop !8571

for.end:                                          ; preds = %for.cond
  %29 = load i32, i32* %enable.addr, align 4, !dbg !8573
  %tobool21 = icmp ne i32 %29, 0, !dbg !8573
  br i1 %tobool21, label %if.then22, label %if.end36, !dbg !8575

if.then22:                                        ; preds = %for.end
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8576
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 44, !dbg !8578
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !8578
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8579
  %33 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !8580
  %or = or i64 %33, 32, !dbg !8581
  %or23 = or i64 %or, 64, !dbg !8582
  %call = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %31, %struct.Object* %32, i64 %or23), !dbg !8583
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !8584
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8585
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 95, !dbg !8586
  %35 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !8586
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8587
  call void %35(%struct.DerivedMesh* %36), !dbg !8585
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8588
  %particlesystem24 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 109, !dbg !8590
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem24, i32 0, i32 0, !dbg !8591
  %38 = load i8*, i8** %first25, align 8, !dbg !8591
  %39 = bitcast i8* %38 to %struct.ParticleSystem*, !dbg !8588
  store %struct.ParticleSystem* %39, %struct.ParticleSystem** %psys, align 8, !dbg !8592
  br label %for.cond26, !dbg !8593

for.cond26:                                       ; preds = %for.inc33, %if.then22
  %40 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8594
  %tobool27 = icmp ne %struct.ParticleSystem* %40, null, !dbg !8596
  br i1 %tobool27, label %for.body28, label %for.end35, !dbg !8596

for.body28:                                       ; preds = %for.cond26
  %41 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8597
  %42 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8598
  %call29 = call %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object* %41, %struct.ParticleSystem* %42), !dbg !8599
  %flag = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %call29, i32 0, i32 6, !dbg !8600
  %43 = load i16, i16* %flag, align 4, !dbg !8601
  %conv30 = sext i16 %43 to i32, !dbg !8601
  %and31 = and i32 %conv30, -3, !dbg !8601
  %conv32 = trunc i32 %and31 to i16, !dbg !8601
  store i16 %conv32, i16* %flag, align 4, !dbg !8601
  br label %for.inc33, !dbg !8599

for.inc33:                                        ; preds = %for.body28
  %44 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8602
  %next34 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %44, i32 0, i32 0, !dbg !8603
  %45 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next34, align 8, !dbg !8603
  store %struct.ParticleSystem* %45, %struct.ParticleSystem** %psys, align 8, !dbg !8604
  br label %for.cond26, !dbg !8605, !llvm.loop !8606

for.end35:                                        ; preds = %for.cond26
  br label %if.end36, !dbg !8608

if.end36:                                         ; preds = %for.end35, %for.end
  br label %if.end37, !dbg !8609

if.end37:                                         ; preds = %if.end36, %if.end2
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8610
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 112, !dbg !8612
  %47 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !8612
  %cmp38 = icmp eq %struct.Group* %47, null, !dbg !8613
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8614

if.then40:                                        ; preds = %if.end37
  br label %for.end50, !dbg !8615

if.end41:                                         ; preds = %if.end37
  %48 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8616
  %dup_group42 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 112, !dbg !8617
  %49 = load %struct.Group*, %struct.Group** %dup_group42, align 8, !dbg !8617
  store %struct.Group* %49, %struct.Group** %group, align 8, !dbg !8618
  %50 = load %struct.Group*, %struct.Group** %group, align 8, !dbg !8619
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %50, i32 0, i32 1, !dbg !8621
  %first43 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !8622
  %51 = load i8*, i8** %first43, align 8, !dbg !8622
  %52 = bitcast i8* %51 to %struct.GroupObject*, !dbg !8619
  store %struct.GroupObject* %52, %struct.GroupObject** %go, align 8, !dbg !8623
  br label %for.cond44, !dbg !8624

for.cond44:                                       ; preds = %for.inc48, %if.end41
  %53 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !8625
  %tobool45 = icmp ne %struct.GroupObject* %53, null, !dbg !8627
  br i1 %tobool45, label %for.body46, label %for.end50, !dbg !8627

for.body46:                                       ; preds = %for.cond44
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8628
  %55 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !8629
  %ob47 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %55, i32 0, i32 2, !dbg !8630
  %56 = load %struct.Object*, %struct.Object** %ob47, align 8, !dbg !8630
  %57 = load i32, i32* %timeoffset.addr, align 4, !dbg !8631
  %58 = load i32, i32* %level.addr, align 4, !dbg !8632
  %add = add nsw i32 %58, 1, !dbg !8633
  %59 = load i32, i32* %enable.addr, align 4, !dbg !8634
  call void @dupli_render_particle_set(%struct.Render* %54, %struct.Object* %56, i32 %57, i32 %add, i32 %59), !dbg !8635
  br label %for.inc48, !dbg !8635

for.inc48:                                        ; preds = %for.body46
  %60 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !8636
  %next49 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %60, i32 0, i32 0, !dbg !8637
  %61 = load %struct.GroupObject*, %struct.GroupObject** %next49, align 8, !dbg !8637
  store %struct.GroupObject* %61, %struct.GroupObject** %go, align 8, !dbg !8638
  br label %for.cond44, !dbg !8639, !llvm.loop !8640

for.end50:                                        ; preds = %if.then, %if.then1, %if.then40, %for.cond44
  ret void, !dbg !8642
}

declare dso_local %struct.ListBase* @object_duplilist(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*) #4

declare dso_local %struct.DupliApplyData* @duplilist_apply(%struct.Object*, %struct.ListBase*) #4

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_object_hidden(%struct.Render* %re, %struct.Object* %ob) #0 !dbg !8643 {
entry:
  %retval = alloca i8, align 1
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8648
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8650
  %call = call zeroext i8 @is_object_restricted(%struct.Render* %0, %struct.Object* %1), !dbg !8651
  %tobool = icmp ne i8 %call, 0, !dbg !8651
  br i1 %tobool, label %if.then, label %if.end, !dbg !8652

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !8653
  br label %return, !dbg !8653

if.end:                                           ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8654
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !8656
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !8657
  %3 = load i32, i32* %scemode, align 4, !dbg !8657
  %and = and i32 %3, 524288, !dbg !8658
  %tobool1 = icmp ne i32 %and, 0, !dbg !8658
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8659

if.then2:                                         ; preds = %if.end
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8660
  %dt = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 87, !dbg !8660
  %5 = load i8, i8* %dt, align 2, !dbg !8660
  %conv = zext i8 %5 to i32, !dbg !8660
  %cmp = icmp eq i32 %conv, 1, !dbg !8660
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8660

lor.rhs:                                          ; preds = %if.then2
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8660
  %dt4 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 87, !dbg !8660
  %7 = load i8, i8* %dt4, align 2, !dbg !8660
  %conv5 = zext i8 %7 to i32, !dbg !8660
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !8660
  br label %lor.end, !dbg !8660

lor.end:                                          ; preds = %lor.rhs, %if.then2
  %8 = phi i1 [ true, %if.then2 ], [ %cmp6, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !8660
  %conv8 = trunc i32 %lor.ext to i8, !dbg !8660
  store i8 %conv8, i8* %retval, align 1, !dbg !8662
  br label %return, !dbg !8662

if.else:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !8663
  br label %return, !dbg !8663

return:                                           ; preds = %if.else, %lor.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !8665
  ret i8 %9, !dbg !8665
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @allow_render_dupli_instance(%struct.Render* %UNUSED_re, %struct.DupliObject* %dob, %struct.Object* %obd) #0 !dbg !8666 {
entry:
  %retval = alloca i32, align 4
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %obd.addr = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %ma = alloca %struct.Material*, align 8
  %a = alloca i16, align 2
  %totmaterial = alloca i16*, align 8
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store %struct.Object* %obd, %struct.Object** %obd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %obd.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !8677, metadata !DIExpression()), !dbg !8678
  call void @llvm.dbg.declare(metadata i16* %a, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata i16** %totmaterial, metadata !8681, metadata !DIExpression()), !dbg !8682
  %0 = load %struct.Object*, %struct.Object** %obd.addr, align 8, !dbg !8683
  %call = call i16* @give_totcolp(%struct.Object* %0), !dbg !8684
  store i16* %call, i16** %totmaterial, align 8, !dbg !8685
  %1 = load i16*, i16** %totmaterial, align 8, !dbg !8686
  %tobool = icmp ne i16* %1, null, !dbg !8686
  br i1 %tobool, label %if.then, label %if.end11, !dbg !8688

if.then:                                          ; preds = %entry
  store i16 0, i16* %a, align 2, !dbg !8689
  br label %for.cond, !dbg !8692

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i16, i16* %a, align 2, !dbg !8693
  %conv = sext i16 %2 to i32, !dbg !8693
  %3 = load i16*, i16** %totmaterial, align 8, !dbg !8695
  %4 = load i16, i16* %3, align 2, !dbg !8696
  %conv1 = sext i16 %4 to i32, !dbg !8696
  %cmp = icmp slt i32 %conv, %conv1, !dbg !8697
  br i1 %cmp, label %for.body, label %for.end, !dbg !8698

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Object*, %struct.Object** %obd.addr, align 8, !dbg !8699
  %6 = load i16, i16* %a, align 2, !dbg !8701
  %conv3 = sext i16 %6 to i32, !dbg !8701
  %add = add nsw i32 %conv3, 1, !dbg !8702
  %conv4 = trunc i32 %add to i16, !dbg !8701
  %call5 = call %struct.Material* @give_current_material(%struct.Object* %5, i16 signext %conv4), !dbg !8703
  store %struct.Material* %call5, %struct.Material** %ma, align 8, !dbg !8704
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8705
  %tobool6 = icmp ne %struct.Material* %7, null, !dbg !8705
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !8707

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !8708
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %8, i32 0, i32 2, !dbg !8709
  %9 = load i16, i16* %material_type, align 8, !dbg !8709
  %conv7 = sext i16 %9 to i32, !dbg !8708
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !8710
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !8711

if.then10:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8712
  br label %return, !dbg !8712

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8713

for.inc:                                          ; preds = %if.end
  %10 = load i16, i16* %a, align 2, !dbg !8714
  %inc = add i16 %10, 1, !dbg !8714
  store i16 %inc, i16* %a, align 2, !dbg !8714
  br label %for.cond, !dbg !8715, !llvm.loop !8716

for.end:                                          ; preds = %for.cond
  br label %if.end11, !dbg !8718

if.end11:                                         ; preds = %for.end, %entry
  %11 = load %struct.Object*, %struct.Object** %obd.addr, align 8, !dbg !8719
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 109, !dbg !8721
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !8722
  %12 = load i8*, i8** %first, align 8, !dbg !8722
  %13 = bitcast i8* %12 to %struct.ParticleSystem*, !dbg !8719
  store %struct.ParticleSystem* %13, %struct.ParticleSystem** %psys, align 8, !dbg !8723
  br label %for.cond12, !dbg !8724

for.cond12:                                       ; preds = %for.inc43, %if.end11
  %14 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8725
  %tobool13 = icmp ne %struct.ParticleSystem* %14, null, !dbg !8727
  br i1 %tobool13, label %for.body14, label %for.end44, !dbg !8727

for.body14:                                       ; preds = %for.cond12
  %15 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8728
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %15, i32 0, i32 2, !dbg !8728
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !8728
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 21, !dbg !8728
  %17 = load i16, i16* %ren_as, align 8, !dbg !8728
  %conv15 = sext i16 %17 to i32, !dbg !8728
  %cmp16 = icmp eq i32 %conv15, 9, !dbg !8728
  br i1 %cmp16, label %if.end42, label %lor.lhs.false, !dbg !8728

lor.lhs.false:                                    ; preds = %for.body14
  %18 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8728
  %part18 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %18, i32 0, i32 2, !dbg !8728
  %19 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part18, align 8, !dbg !8728
  %ren_as19 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %19, i32 0, i32 21, !dbg !8728
  %20 = load i16, i16* %ren_as19, align 8, !dbg !8728
  %conv20 = sext i16 %20 to i32, !dbg !8728
  %cmp21 = icmp eq i32 %conv20, 5, !dbg !8728
  br i1 %cmp21, label %if.end42, label %lor.lhs.false23, !dbg !8728

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %21 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8728
  %part24 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %21, i32 0, i32 2, !dbg !8728
  %22 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part24, align 8, !dbg !8728
  %ren_as25 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %22, i32 0, i32 21, !dbg !8728
  %23 = load i16, i16* %ren_as25, align 8, !dbg !8728
  %conv26 = sext i16 %23 to i32, !dbg !8728
  %cmp27 = icmp eq i32 %conv26, 6, !dbg !8728
  br i1 %cmp27, label %if.end42, label %lor.lhs.false29, !dbg !8728

lor.lhs.false29:                                  ; preds = %lor.lhs.false23
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8728
  %part30 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 2, !dbg !8728
  %25 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part30, align 8, !dbg !8728
  %ren_as31 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %25, i32 0, i32 21, !dbg !8728
  %26 = load i16, i16* %ren_as31, align 8, !dbg !8728
  %conv32 = sext i16 %26 to i32, !dbg !8728
  %cmp33 = icmp eq i32 %conv32, 7, !dbg !8728
  br i1 %cmp33, label %if.end42, label %lor.lhs.false35, !dbg !8728

lor.lhs.false35:                                  ; preds = %lor.lhs.false29
  %27 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8728
  %part36 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %27, i32 0, i32 2, !dbg !8728
  %28 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part36, align 8, !dbg !8728
  %ren_as37 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %28, i32 0, i32 21, !dbg !8728
  %29 = load i16, i16* %ren_as37, align 8, !dbg !8728
  %conv38 = sext i16 %29 to i32, !dbg !8728
  %cmp39 = icmp eq i32 %conv38, 8, !dbg !8728
  br i1 %cmp39, label %if.end42, label %if.then41, !dbg !8730

if.then41:                                        ; preds = %lor.lhs.false35
  store i32 0, i32* %retval, align 4, !dbg !8731
  br label %return, !dbg !8731

if.end42:                                         ; preds = %lor.lhs.false35, %lor.lhs.false29, %lor.lhs.false23, %lor.lhs.false, %for.body14
  br label %for.inc43, !dbg !8728

for.inc43:                                        ; preds = %if.end42
  %30 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !8732
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %30, i32 0, i32 0, !dbg !8733
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !8733
  store %struct.ParticleSystem* %31, %struct.ParticleSystem** %psys, align 8, !dbg !8734
  br label %for.cond12, !dbg !8735, !llvm.loop !8736

for.end44:                                        ; preds = %for.cond12
  %32 = load %struct.Object*, %struct.Object** %obd.addr, align 8, !dbg !8738
  %type = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 3, !dbg !8739
  %33 = load i16, i16* %type, align 8, !dbg !8739
  %call45 = call i32 @render_object_type(i16 signext %33), !dbg !8740
  %tobool46 = icmp ne i32 %call45, 0, !dbg !8740
  br i1 %tobool46, label %land.rhs, label %land.end, !dbg !8741

land.rhs:                                         ; preds = %for.end44
  %34 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8742
  %type47 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %34, i32 0, i32 6, !dbg !8743
  %35 = load i16, i16* %type47, align 4, !dbg !8743
  %conv48 = sext i16 %35 to i32, !dbg !8742
  %cmp49 = icmp eq i32 %conv48, 256, !dbg !8744
  br i1 %cmp49, label %lor.rhs, label %lor.end, !dbg !8745

lor.rhs:                                          ; preds = %land.rhs
  %36 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8746
  %animated = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %36, i32 0, i32 8, !dbg !8747
  %37 = load i8, i8* %animated, align 1, !dbg !8747
  %tobool51 = icmp ne i8 %37, 0, !dbg !8748
  %lnot = xor i1 %tobool51, true, !dbg !8748
  br label %lor.end, !dbg !8745

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %38 = phi i1 [ true, %land.rhs ], [ %lnot, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.end44
  %39 = phi i1 [ false, %for.end44 ], [ %38, %lor.end ], !dbg !8749
  %land.ext = zext i1 %39 to i32, !dbg !8741
  store i32 %land.ext, i32* %retval, align 4, !dbg !8750
  br label %return, !dbg !8750

return:                                           ; preds = %land.end, %if.then41, %if.then10
  %40 = load i32, i32* %retval, align 4, !dbg !8751
  ret i32 %40, !dbg !8751
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ObjectRen* @find_dupligroup_dupli(%struct.Render* %re, %struct.Object* %ob, i32 %psysindex) #0 !dbg !8752 {
entry:
  %retval = alloca %struct.ObjectRen*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %psysindex.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  store i32 %psysindex, i32* %psysindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %psysindex.addr, metadata !8759, metadata !DIExpression()), !dbg !8760
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !8761, metadata !DIExpression()), !dbg !8762
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8763
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 55, !dbg !8765
  %1 = load i16, i16* %transflag, align 8, !dbg !8765
  %conv = sext i16 %1 to i32, !dbg !8763
  %and = and i32 %conv, 4096, !dbg !8766
  %tobool = icmp ne i32 %and, 0, !dbg !8766
  br i1 %tobool, label %if.then, label %if.end, !dbg !8767

if.then:                                          ; preds = %entry
  store %struct.ObjectRen* null, %struct.ObjectRen** %retval, align 8, !dbg !8768
  br label %return, !dbg !8768

if.end:                                           ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8769
  %objecttable = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 68, !dbg !8771
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %objecttable, i32 0, i32 0, !dbg !8772
  %3 = load i8*, i8** %first, align 8, !dbg !8772
  %4 = bitcast i8* %3 to %struct.ObjectRen*, !dbg !8769
  store %struct.ObjectRen* %4, %struct.ObjectRen** %obr, align 8, !dbg !8773
  br label %for.cond, !dbg !8774

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8775
  %tobool1 = icmp ne %struct.ObjectRen* %5, null, !dbg !8777
  br i1 %tobool1, label %for.body, label %for.end, !dbg !8777

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8778
  %ob2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 2, !dbg !8780
  %7 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !8780
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8781
  %cmp = icmp eq %struct.Object* %7, %8, !dbg !8782
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !8783

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8784
  %psysindex4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 6, !dbg !8785
  %10 = load i32, i32* %psysindex4, align 4, !dbg !8785
  %11 = load i32, i32* %psysindex.addr, align 4, !dbg !8786
  %cmp5 = icmp eq i32 %10, %11, !dbg !8787
  br i1 %cmp5, label %land.lhs.true7, label %if.end11, !dbg !8788

land.lhs.true7:                                   ; preds = %land.lhs.true
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8789
  %flag = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 7, !dbg !8790
  %13 = load i32, i32* %flag, align 8, !dbg !8790
  %and8 = and i32 %13, 1, !dbg !8791
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8791
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8792

if.then10:                                        ; preds = %land.lhs.true7
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8793
  store %struct.ObjectRen* %14, %struct.ObjectRen** %retval, align 8, !dbg !8794
  br label %return, !dbg !8794

if.end11:                                         ; preds = %land.lhs.true7, %land.lhs.true, %for.body
  br label %for.inc, !dbg !8795

for.inc:                                          ; preds = %if.end11
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !8796
  %next = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 0, !dbg !8797
  %16 = load %struct.ObjectRen*, %struct.ObjectRen** %next, align 8, !dbg !8797
  store %struct.ObjectRen* %16, %struct.ObjectRen** %obr, align 8, !dbg !8798
  br label %for.cond, !dbg !8799, !llvm.loop !8800

for.end:                                          ; preds = %for.cond
  store %struct.ObjectRen* null, %struct.ObjectRen** %retval, align 8, !dbg !8802
  br label %return, !dbg !8802

return:                                           ; preds = %for.end, %if.then10, %if.then
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %retval, align 8, !dbg !8803
  ret %struct.ObjectRen* %17, !dbg !8803
}

declare dso_local %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, [4 x float]*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @assign_dupligroup_dupli(%struct.Render* %re, %struct.ObjectInstanceRen* %obi, %struct.ObjectRen* %obr, %struct.DupliObject* %dob) #0 !dbg !8804 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %obmat = alloca [4 x [4 x float]], align 16
  %obimat = alloca [4 x [4 x float]], align 16
  %nmat = alloca [3 x [3 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8807, metadata !DIExpression()), !dbg !8808
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !8817, metadata !DIExpression()), !dbg !8818
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obimat, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %nmat, metadata !8821, metadata !DIExpression()), !dbg !8822
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8823
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8824
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 32, !dbg !8825
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !8824
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8826
  %obmat2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 28, !dbg !8827
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat2, i64 0, i64 0, !dbg !8826
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1, [4 x float]* %arraydecay3), !dbg !8828
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8829
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8830
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !8831
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8832
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8833
  %obr6 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %3, i32 0, i32 2, !dbg !8834
  store %struct.ObjectRen* %2, %struct.ObjectRen** %obr6, align 8, !dbg !8835
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !8836
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8837
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 8, !dbg !8838
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8837
  call void @copy_m4_m4([4 x float]* %arraydecay7, [4 x float]* %arraydecay8), !dbg !8839
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8840
  %mat9 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %5, i32 0, i32 8, !dbg !8841
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat9, i64 0, i64 0, !dbg !8840
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !8842
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8843
  call void @mul_m4_m4m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay11, [4 x float]* %arraydecay12), !dbg !8844
  %arraydecay13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !8845
  %6 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8846
  %mat14 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %6, i32 0, i32 8, !dbg !8847
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat14, i64 0, i64 0, !dbg !8846
  call void @copy_m3_m4([3 x float]* %arraydecay13, [4 x float]* %arraydecay15), !dbg !8848
  %7 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8849
  %nmat16 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %7, i32 0, i32 10, !dbg !8850
  %arraydecay17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat16, i64 0, i64 0, !dbg !8849
  %arraydecay18 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !8851
  %call19 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay17, [3 x float]* %arraydecay18), !dbg !8852
  %8 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8853
  %nmat20 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %8, i32 0, i32 10, !dbg !8854
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat20, i64 0, i64 0, !dbg !8853
  call void @transpose_m3([3 x float]* %arraydecay21), !dbg !8855
  %9 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8856
  %tobool = icmp ne %struct.DupliObject* %9, null, !dbg !8856
  br i1 %tobool, label %if.then, label %if.end, !dbg !8858

if.then:                                          ; preds = %entry
  %10 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8859
  %dupliorco = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %10, i32 0, i32 12, !dbg !8861
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %dupliorco, i64 0, i64 0, !dbg !8859
  %11 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8862
  %orco = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %11, i32 0, i32 4, !dbg !8863
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !8862
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay23), !dbg !8864
  %12 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8865
  %uv = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %12, i32 0, i32 5, !dbg !8866
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8865
  %13 = load float, float* %arrayidx, align 4, !dbg !8865
  %14 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8867
  %dupliuv = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %14, i32 0, i32 13, !dbg !8868
  %arrayidx24 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv, i64 0, i64 0, !dbg !8867
  store float %13, float* %arrayidx24, align 8, !dbg !8869
  %15 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8870
  %uv25 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %15, i32 0, i32 5, !dbg !8871
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %uv25, i64 0, i64 1, !dbg !8870
  %16 = load float, float* %arrayidx26, align 4, !dbg !8870
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !8872
  %dupliuv27 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 13, !dbg !8873
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv27, i64 0, i64 1, !dbg !8872
  store float %16, float* %arrayidx28, align 4, !dbg !8874
  br label %if.end, !dbg !8875

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8876
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %18, i32 0, i32 10, !dbg !8877
  %19 = load i32, i32* %totvert, align 8, !dbg !8877
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8878
  %totvert29 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 61, !dbg !8879
  %21 = load i32, i32* %totvert29, align 4, !dbg !8880
  %add = add nsw i32 %21, %19, !dbg !8880
  store i32 %add, i32* %totvert29, align 4, !dbg !8880
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8881
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %22, i32 0, i32 11, !dbg !8882
  %23 = load i32, i32* %totvlak, align 4, !dbg !8882
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8883
  %totvlak30 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 60, !dbg !8884
  %25 = load i32, i32* %totvlak30, align 8, !dbg !8885
  %add31 = add nsw i32 %25, %23, !dbg !8885
  store i32 %add31, i32* %totvlak30, align 8, !dbg !8885
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8886
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 13, !dbg !8887
  %27 = load i32, i32* %tothalo, align 4, !dbg !8887
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8888
  %tothalo32 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 62, !dbg !8889
  %29 = load i32, i32* %tothalo32, align 8, !dbg !8890
  %add33 = add nsw i32 %29, %27, !dbg !8890
  store i32 %add33, i32* %tothalo32, align 8, !dbg !8890
  %30 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8891
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %30, i32 0, i32 12, !dbg !8892
  %31 = load i32, i32* %totstrand, align 8, !dbg !8892
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8893
  %totstrand34 = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 63, !dbg !8894
  %33 = load i32, i32* %totstrand34, align 4, !dbg !8895
  %add35 = add nsw i32 %33, %31, !dbg !8895
  store i32 %add35, i32* %totstrand34, align 4, !dbg !8895
  ret void, !dbg !8896
}

; Function Attrs: noinline nounwind uwtable
define internal void @find_dupli_instances(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.DupliObject* %dob) #0 !dbg !8897 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %obmat = alloca [4 x [4 x float]], align 16
  %obimat = alloca [4 x [4 x float]], align 16
  %nmat = alloca [3 x [3 x float]], align 16
  %first = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !8900, metadata !DIExpression()), !dbg !8901
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !8906, metadata !DIExpression()), !dbg !8907
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !8908, metadata !DIExpression()), !dbg !8909
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !8910, metadata !DIExpression()), !dbg !8911
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obimat, metadata !8912, metadata !DIExpression()), !dbg !8913
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %nmat, metadata !8914, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %first, metadata !8916, metadata !DIExpression()), !dbg !8917
  store i32 1, i32* %first, align 4, !dbg !8917
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8918
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8919
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 32, !dbg !8920
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !8919
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8921
  %obmat2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 28, !dbg !8922
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat2, i64 0, i64 0, !dbg !8921
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1, [4 x float]* %arraydecay3), !dbg !8923
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8924
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8925
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !8926
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !8927
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 70, !dbg !8929
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 1, !dbg !8930
  %3 = load i8*, i8** %last, align 8, !dbg !8930
  %4 = bitcast i8* %3 to %struct.ObjectInstanceRen*, !dbg !8927
  store %struct.ObjectInstanceRen* %4, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8931
  br label %for.cond, !dbg !8932

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8933
  %tobool = icmp ne %struct.ObjectInstanceRen* %5, null, !dbg !8935
  br i1 %tobool, label %for.body, label %for.end, !dbg !8935

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8936
  %obr6 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %6, i32 0, i32 2, !dbg !8939
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr6, align 8, !dbg !8939
  %tobool7 = icmp ne %struct.ObjectRen* %7, null, !dbg !8936
  br i1 %tobool7, label %if.end47, label %land.lhs.true, !dbg !8940

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8941
  %ob = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %8, i32 0, i32 3, !dbg !8942
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !8942
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8943
  %ob8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 2, !dbg !8944
  %11 = load %struct.Object*, %struct.Object** %ob8, align 8, !dbg !8944
  %cmp = icmp eq %struct.Object* %9, %11, !dbg !8945
  br i1 %cmp, label %land.lhs.true9, label %if.end47, !dbg !8946

land.lhs.true9:                                   ; preds = %land.lhs.true
  %12 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8947
  %psysindex = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %12, i32 0, i32 6, !dbg !8948
  %13 = load i32, i32* %psysindex, align 4, !dbg !8948
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8949
  %psysindex10 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %14, i32 0, i32 6, !dbg !8950
  %15 = load i32, i32* %psysindex10, align 4, !dbg !8950
  %cmp11 = icmp eq i32 %13, %15, !dbg !8951
  br i1 %cmp11, label %if.then, label %if.end47, !dbg !8952

if.then:                                          ; preds = %land.lhs.true9
  %16 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !8953
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8955
  %obr12 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 2, !dbg !8956
  store %struct.ObjectRen* %16, %struct.ObjectRen** %obr12, align 8, !dbg !8957
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !8958
  %18 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8959
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %18, i32 0, i32 8, !dbg !8960
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !8959
  call void @copy_m4_m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay14), !dbg !8961
  %19 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8962
  %mat15 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %19, i32 0, i32 8, !dbg !8963
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat15, i64 0, i64 0, !dbg !8962
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obimat, i64 0, i64 0, !dbg !8964
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8965
  call void @mul_m4_m4m4([4 x float]* %arraydecay16, [4 x float]* %arraydecay17, [4 x float]* %arraydecay18), !dbg !8966
  %arraydecay19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !8967
  %20 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8968
  %mat20 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %20, i32 0, i32 8, !dbg !8969
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat20, i64 0, i64 0, !dbg !8968
  call void @copy_m3_m4([3 x float]* %arraydecay19, [4 x float]* %arraydecay21), !dbg !8970
  %21 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8971
  %nmat22 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %21, i32 0, i32 10, !dbg !8972
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat22, i64 0, i64 0, !dbg !8971
  %arraydecay24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !8973
  %call25 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay23, [3 x float]* %arraydecay24), !dbg !8974
  %22 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8975
  %nmat26 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %22, i32 0, i32 10, !dbg !8976
  %arraydecay27 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat26, i64 0, i64 0, !dbg !8975
  call void @transpose_m3([3 x float]* %arraydecay27), !dbg !8977
  %23 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8978
  %tobool28 = icmp ne %struct.DupliObject* %23, null, !dbg !8978
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !8980

if.then29:                                        ; preds = %if.then
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8981
  %dupliorco = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %24, i32 0, i32 12, !dbg !8983
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %dupliorco, i64 0, i64 0, !dbg !8981
  %25 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8984
  %orco = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %25, i32 0, i32 4, !dbg !8985
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %orco, i64 0, i64 0, !dbg !8984
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay31), !dbg !8986
  %26 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8987
  %uv = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %26, i32 0, i32 5, !dbg !8988
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !8987
  %27 = load float, float* %arrayidx, align 4, !dbg !8987
  %28 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8989
  %dupliuv = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %28, i32 0, i32 13, !dbg !8990
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv, i64 0, i64 0, !dbg !8989
  store float %27, float* %arrayidx32, align 8, !dbg !8991
  %29 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !8992
  %uv33 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %29, i32 0, i32 5, !dbg !8993
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %uv33, i64 0, i64 1, !dbg !8992
  %30 = load float, float* %arrayidx34, align 4, !dbg !8992
  %31 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !8994
  %dupliuv35 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %31, i32 0, i32 13, !dbg !8995
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %dupliuv35, i64 0, i64 1, !dbg !8994
  store float %30, float* %arrayidx36, align 4, !dbg !8996
  br label %if.end, !dbg !8997

if.end:                                           ; preds = %if.then29, %if.then
  %32 = load i32, i32* %first, align 4, !dbg !8998
  %tobool37 = icmp ne i32 %32, 0, !dbg !8998
  br i1 %tobool37, label %if.else, label %if.then38, !dbg !9000

if.then38:                                        ; preds = %if.end
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !9001
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %33, i32 0, i32 10, !dbg !9003
  %34 = load i32, i32* %totvert, align 8, !dbg !9003
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9004
  %totvert39 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 61, !dbg !9005
  %36 = load i32, i32* %totvert39, align 4, !dbg !9006
  %add = add nsw i32 %36, %34, !dbg !9006
  store i32 %add, i32* %totvert39, align 4, !dbg !9006
  %37 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !9007
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %37, i32 0, i32 11, !dbg !9008
  %38 = load i32, i32* %totvlak, align 4, !dbg !9008
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9009
  %totvlak40 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 60, !dbg !9010
  %40 = load i32, i32* %totvlak40, align 8, !dbg !9011
  %add41 = add nsw i32 %40, %38, !dbg !9011
  store i32 %add41, i32* %totvlak40, align 8, !dbg !9011
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !9012
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %41, i32 0, i32 13, !dbg !9013
  %42 = load i32, i32* %tothalo, align 4, !dbg !9013
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9014
  %tothalo42 = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 62, !dbg !9015
  %44 = load i32, i32* %tothalo42, align 8, !dbg !9016
  %add43 = add nsw i32 %44, %42, !dbg !9016
  store i32 %add43, i32* %tothalo42, align 8, !dbg !9016
  %45 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !9017
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %45, i32 0, i32 12, !dbg !9018
  %46 = load i32, i32* %totstrand, align 8, !dbg !9018
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9019
  %totstrand44 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 63, !dbg !9020
  %48 = load i32, i32* %totstrand44, align 4, !dbg !9021
  %add45 = add nsw i32 %48, %46, !dbg !9021
  store i32 %add45, i32* %totstrand44, align 4, !dbg !9021
  br label %if.end46, !dbg !9022

if.else:                                          ; preds = %if.end
  store i32 0, i32* %first, align 4, !dbg !9023
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then38
  br label %if.end47, !dbg !9024

if.end47:                                         ; preds = %if.end46, %land.lhs.true9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9025

for.inc:                                          ; preds = %if.end47
  %49 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9026
  %prev = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %49, i32 0, i32 1, !dbg !9027
  %50 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %prev, align 8, !dbg !9027
  store %struct.ObjectInstanceRen* %50, %struct.ObjectInstanceRen** %obi, align 8, !dbg !9028
  br label %for.cond, !dbg !9029, !llvm.loop !9030

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9032
}

declare dso_local void @duplilist_restore(%struct.ListBase*, %struct.DupliApplyData*) #4

declare dso_local void @duplilist_free_apply_data(%struct.DupliApplyData*) #4

declare dso_local void @free_object_duplilist(%struct.ListBase*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @add_group_render_dupli_obs(%struct.Render* %re, %struct.Group* %group, i32 %nolamps, i32 %onlyselected, %struct.Object* %actob, i32 %timeoffset, i32 %level) #0 !dbg !9033 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %group.addr = alloca %struct.Group*, align 8
  %nolamps.addr = alloca i32, align 4
  %onlyselected.addr = alloca i32, align 4
  %actob.addr = alloca %struct.Object*, align 8
  %timeoffset.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  %go = alloca %struct.GroupObject*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9036, metadata !DIExpression()), !dbg !9037
  store %struct.Group* %group, %struct.Group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Group** %group.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  store i32 %nolamps, i32* %nolamps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nolamps.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  store i32 %onlyselected, i32* %onlyselected.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onlyselected.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store %struct.Object* %actob, %struct.Object** %actob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %actob.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !9048, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !9050, metadata !DIExpression()), !dbg !9051
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !9052, metadata !DIExpression()), !dbg !9053
  %0 = load i32, i32* %level.addr, align 4, !dbg !9054
  %cmp = icmp sgt i32 %0, 8, !dbg !9056
  br i1 %cmp, label %if.then, label %if.end, !dbg !9057

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9058

if.end:                                           ; preds = %entry
  %1 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !9059
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %1, i32 0, i32 1, !dbg !9061
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !9062
  %2 = load i8*, i8** %first, align 8, !dbg !9062
  %3 = bitcast i8* %2 to %struct.GroupObject*, !dbg !9059
  store %struct.GroupObject* %3, %struct.GroupObject** %go, align 8, !dbg !9063
  br label %for.cond, !dbg !9064

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9065
  %tobool = icmp ne %struct.GroupObject* %4, null, !dbg !9067
  br i1 %tobool, label %for.body, label %for.end, !dbg !9067

for.body:                                         ; preds = %for.cond
  %5 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9068
  %ob1 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %5, i32 0, i32 2, !dbg !9070
  %6 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !9070
  store %struct.Object* %6, %struct.Object** %ob, align 8, !dbg !9071
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9072
  %flag = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 53, !dbg !9074
  %8 = load i16, i16* %flag, align 4, !dbg !9074
  %conv = sext i16 %8 to i32, !dbg !9072
  %and = and i32 %conv, 1024, !dbg !9075
  %tobool2 = icmp ne i32 %and, 0, !dbg !9075
  br i1 %tobool2, label %if.then3, label %if.end20, !dbg !9076

if.then3:                                         ; preds = %for.body
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9077
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 55, !dbg !9080
  %10 = load i16, i16* %transflag, align 8, !dbg !9080
  %conv4 = sext i16 %10 to i32, !dbg !9077
  %and5 = and i32 %conv4, 4096, !dbg !9081
  %tobool6 = icmp ne i32 %and5, 0, !dbg !9081
  br i1 %tobool6, label %if.then7, label %if.end19, !dbg !9082

if.then7:                                         ; preds = %if.then3
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9083
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9086
  %13 = load i32, i32* %nolamps.addr, align 4, !dbg !9087
  %14 = load i32, i32* %onlyselected.addr, align 4, !dbg !9088
  %15 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !9089
  %call = call i32 @allow_render_object(%struct.Render* %11, %struct.Object* %12, i32 %13, i32 %14, %struct.Object* %15), !dbg !9090
  %tobool8 = icmp ne i32 %call, 0, !dbg !9090
  br i1 %tobool8, label %if.then9, label %if.end18, !dbg !9091

if.then9:                                         ; preds = %if.then7
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9092
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9094
  %18 = load i32, i32* %timeoffset.addr, align 4, !dbg !9095
  call void @init_render_object(%struct.Render* %16, %struct.Object* %17, %struct.Object* null, %struct.DupliObject* null, [4 x float]* null, i32 %18), !dbg !9096
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9097
  %transflag10 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 55, !dbg !9098
  %20 = load i16, i16* %transflag10, align 8, !dbg !9099
  %conv11 = sext i16 %20 to i32, !dbg !9099
  %and12 = and i32 %conv11, -4097, !dbg !9099
  %conv13 = trunc i32 %and12 to i16, !dbg !9099
  store i16 %conv13, i16* %transflag10, align 8, !dbg !9099
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9100
  %dup_group = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 112, !dbg !9102
  %22 = load %struct.Group*, %struct.Group** %dup_group, align 8, !dbg !9102
  %tobool14 = icmp ne %struct.Group* %22, null, !dbg !9100
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !9103

if.then15:                                        ; preds = %if.then9
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9104
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !9105
  %dup_group16 = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 112, !dbg !9106
  %25 = load %struct.Group*, %struct.Group** %dup_group16, align 8, !dbg !9106
  %26 = load i32, i32* %nolamps.addr, align 4, !dbg !9107
  %27 = load i32, i32* %onlyselected.addr, align 4, !dbg !9108
  %28 = load %struct.Object*, %struct.Object** %actob.addr, align 8, !dbg !9109
  %29 = load i32, i32* %timeoffset.addr, align 4, !dbg !9110
  %30 = load i32, i32* %level.addr, align 4, !dbg !9111
  %add = add nsw i32 %30, 1, !dbg !9112
  call void @add_group_render_dupli_obs(%struct.Render* %23, %struct.Group* %25, i32 %26, i32 %27, %struct.Object* %28, i32 %29, i32 %add), !dbg !9113
  br label %if.end17, !dbg !9113

if.end17:                                         ; preds = %if.then15, %if.then9
  br label %if.end18, !dbg !9114

if.end18:                                         ; preds = %if.end17, %if.then7
  br label %if.end19, !dbg !9115

if.end19:                                         ; preds = %if.end18, %if.then3
  br label %if.end20, !dbg !9116

if.end20:                                         ; preds = %if.end19, %for.body
  br label %for.inc, !dbg !9117

for.inc:                                          ; preds = %if.end20
  %31 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9118
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %31, i32 0, i32 0, !dbg !9119
  %32 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !9119
  store %struct.GroupObject* %32, %struct.GroupObject** %go, align 8, !dbg !9120
  br label %for.cond, !dbg !9121, !llvm.loop !9122

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9124
}

declare dso_local void @RE_makeRenderInstances(%struct.Render*) #4

declare dso_local i16* @give_totcolp(%struct.Object*) #4

declare dso_local %struct.Material*** @give_matarar(%struct.Object*) #4

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #4

declare dso_local void @_va_mul_m4_series_5([4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !9125 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  %0 = load float*, float** %a.addr, align 8, !dbg !9130
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !9130
  %1 = load float, float* %arrayidx, align 4, !dbg !9130
  %2 = load float*, float** %r.addr, align 8, !dbg !9131
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !9131
  store float %1, float* %arrayidx1, align 4, !dbg !9132
  %3 = load float*, float** %a.addr, align 8, !dbg !9133
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !9133
  %4 = load float, float* %arrayidx2, align 4, !dbg !9133
  %5 = load float*, float** %r.addr, align 8, !dbg !9134
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !9134
  store float %4, float* %arrayidx3, align 4, !dbg !9135
  ret void, !dbg !9136
}

declare dso_local %struct.Object* @BKE_mball_basis_find(%struct.Scene*, %struct.Object*) #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.GroupObject* @add_render_lamp(%struct.Render* %re, %struct.Object* %ob) #0 !dbg !9137 {
entry:
  %retval = alloca %struct.GroupObject*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %la = alloca %struct.Lamp*, align 8
  %lar = alloca %struct.LampRen*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %angle = alloca float, align 4
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %vec = alloca [3 x float], align 4
  %c = alloca i32, align 4
  %ls = alloca %struct.LampShadowSample*, align 8
  %lss = alloca %struct.LampShadowSubSample*, align 8
  %a = alloca i32, align 4
  %b517 = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata %struct.Lamp** %la, metadata !9144, metadata !DIExpression()), !dbg !9226
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9227
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !9228
  %1 = load i8*, i8** %data, align 8, !dbg !9228
  %2 = bitcast i8* %1 to %struct.Lamp*, !dbg !9227
  store %struct.Lamp* %2, %struct.Lamp** %la, align 8, !dbg !9226
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar, metadata !9229, metadata !DIExpression()), !dbg !9230
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata float* %angle, metadata !9235, metadata !DIExpression()), !dbg !9236
  call void @llvm.dbg.declare(metadata float* %xn, metadata !9237, metadata !DIExpression()), !dbg !9238
  call void @llvm.dbg.declare(metadata float* %yn, metadata !9239, metadata !DIExpression()), !dbg !9240
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !9241, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.declare(metadata i32* %c, metadata !9243, metadata !DIExpression()), !dbg !9244
  %3 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9245
  %cmp = icmp eq %struct.Lamp* %3, null, !dbg !9247
  br i1 %cmp, label %if.then, label %if.end, !dbg !9248

if.then:                                          ; preds = %entry
  store %struct.GroupObject* null, %struct.GroupObject** %retval, align 8, !dbg !9249
  br label %return, !dbg !9249

if.end:                                           ; preds = %entry
  %4 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9250
  %mode = getelementptr inbounds %struct.Lamp, %struct.Lamp* %4, i32 0, i32 4, !dbg !9252
  %5 = load i32, i32* %mode, align 4, !dbg !9252
  %and = and i32 %5, 32, !dbg !9253
  %tobool = icmp ne i32 %and, 0, !dbg !9253
  br i1 %tobool, label %if.then1, label %if.end7, !dbg !9254

if.then1:                                         ; preds = %if.end
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9255
  %r = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 45, !dbg !9257
  %mode2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !9258
  %7 = load i32, i32* %mode2, align 8, !dbg !9258
  %and3 = and i32 %7, 2, !dbg !9259
  %cmp4 = icmp eq i32 %and3, 0, !dbg !9260
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9261

if.then5:                                         ; preds = %if.then1
  store %struct.GroupObject* null, %struct.GroupObject** %retval, align 8, !dbg !9262
  br label %return, !dbg !9262

if.end6:                                          ; preds = %if.then1
  br label %if.end7, !dbg !9263

if.end7:                                          ; preds = %if.end6, %if.end
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9264
  %totlamp = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 64, !dbg !9265
  %9 = load i32, i32* %totlamp, align 8, !dbg !9266
  %inc = add nsw i32 %9, 1, !dbg !9266
  store i32 %inc, i32* %totlamp, align 8, !dbg !9266
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9267
  %call = call i8* %10(i64 40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)), !dbg !9267
  %11 = bitcast i8* %call to %struct.GroupObject*, !dbg !9267
  store %struct.GroupObject* %11, %struct.GroupObject** %go, align 8, !dbg !9268
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9269
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 66, !dbg !9270
  %13 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9271
  %14 = bitcast %struct.GroupObject* %13 to i8*, !dbg !9271
  call void @BLI_addtail(%struct.ListBase* %lights, i8* %14), !dbg !9272
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9273
  %16 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9274
  %ob8 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %16, i32 0, i32 2, !dbg !9275
  store %struct.Object* %15, %struct.Object** %ob8, align 8, !dbg !9276
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9277
  %call9 = call i8* %17(i64 672, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !9277
  %18 = bitcast i8* %call9 to %struct.LampRen*, !dbg !9278
  store %struct.LampRen* %18, %struct.LampRen** %lar, align 8, !dbg !9279
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9280
  %lampren = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 67, !dbg !9281
  %20 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9282
  %21 = bitcast %struct.LampRen* %20 to i8*, !dbg !9282
  call void @BLI_addtail(%struct.ListBase* %lampren, i8* %21), !dbg !9283
  %22 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9284
  %23 = bitcast %struct.LampRen* %22 to i8*, !dbg !9284
  %24 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !9285
  %lampren10 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %24, i32 0, i32 3, !dbg !9286
  store i8* %23, i8** %lampren10, align 8, !dbg !9287
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9288
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9289
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 32, !dbg !9290
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !9289
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9291
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 47, !dbg !9292
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !9291
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay11, [4 x float]* %arraydecay12), !dbg !9293
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9294
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 50, !dbg !9295
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !9294
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9296
  %call15 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay14), !dbg !9297
  %28 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9298
  %lampmat = getelementptr inbounds %struct.LampRen, %struct.LampRen* %28, i32 0, i32 63, !dbg !9299
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %lampmat, i64 0, i64 0, !dbg !9298
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9300
  %obmat17 = getelementptr inbounds %struct.Object, %struct.Object* %29, i32 0, i32 47, !dbg !9301
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat17, i64 0, i64 0, !dbg !9300
  call void @copy_m4_m4([4 x float]* %arraydecay16, [4 x float]* %arraydecay18), !dbg !9302
  %30 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9303
  %mat19 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %30, i32 0, i32 64, !dbg !9304
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat19, i64 0, i64 0, !dbg !9303
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !9305
  call void @copy_m3_m4([3 x float]* %arraydecay20, [4 x float]* %arraydecay21), !dbg !9306
  %31 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9307
  %imat22 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 59, !dbg !9308
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat22, i64 0, i64 0, !dbg !9307
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9309
  %imat24 = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 50, !dbg !9310
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat24, i64 0, i64 0, !dbg !9309
  call void @copy_m3_m4([3 x float]* %arraydecay23, [4 x float]* %arraydecay25), !dbg !9311
  %33 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9312
  %bufsize = getelementptr inbounds %struct.Lamp, %struct.Lamp* %33, i32 0, i32 32, !dbg !9313
  %34 = load i16, i16* %bufsize, align 8, !dbg !9313
  %35 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9314
  %bufsize26 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %35, i32 0, i32 31, !dbg !9315
  store i16 %34, i16* %bufsize26, align 8, !dbg !9316
  %36 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9317
  %samp = getelementptr inbounds %struct.Lamp, %struct.Lamp* %36, i32 0, i32 33, !dbg !9318
  %37 = load i16, i16* %samp, align 2, !dbg !9318
  %38 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9319
  %samp27 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %38, i32 0, i32 32, !dbg !9320
  store i16 %37, i16* %samp27, align 2, !dbg !9321
  %39 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9322
  %buffers = getelementptr inbounds %struct.Lamp, %struct.Lamp* %39, i32 0, i32 34, !dbg !9323
  %40 = load i16, i16* %buffers, align 4, !dbg !9323
  %41 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9324
  %buffers28 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %41, i32 0, i32 34, !dbg !9325
  store i16 %40, i16* %buffers28, align 8, !dbg !9326
  %42 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9327
  %buffers29 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %42, i32 0, i32 34, !dbg !9329
  %43 = load i16, i16* %buffers29, align 8, !dbg !9329
  %conv = sext i16 %43 to i32, !dbg !9327
  %cmp30 = icmp eq i32 %conv, 0, !dbg !9330
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !9331

if.then32:                                        ; preds = %if.end7
  %44 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9332
  %buffers33 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %44, i32 0, i32 34, !dbg !9333
  store i16 1, i16* %buffers33, align 8, !dbg !9334
  br label %if.end34, !dbg !9332

if.end34:                                         ; preds = %if.then32, %if.end7
  %45 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9335
  %buftype = getelementptr inbounds %struct.Lamp, %struct.Lamp* %45, i32 0, i32 37, !dbg !9336
  %46 = load i8, i8* %buftype, align 1, !dbg !9336
  %conv35 = zext i8 %46 to i16, !dbg !9335
  %47 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9337
  %buftype36 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %47, i32 0, i32 36, !dbg !9338
  store i16 %conv35, i16* %buftype36, align 4, !dbg !9339
  %48 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9340
  %filtertype = getelementptr inbounds %struct.Lamp, %struct.Lamp* %48, i32 0, i32 35, !dbg !9341
  %49 = load i16, i16* %filtertype, align 2, !dbg !9341
  %50 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9342
  %filtertype37 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %50, i32 0, i32 35, !dbg !9343
  store i16 %49, i16* %filtertype37, align 2, !dbg !9344
  %51 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9345
  %soft = getelementptr inbounds %struct.Lamp, %struct.Lamp* %51, i32 0, i32 28, !dbg !9346
  %52 = load float, float* %soft, align 8, !dbg !9346
  %53 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9347
  %soft38 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %53, i32 0, i32 33, !dbg !9348
  store float %52, float* %soft38, align 4, !dbg !9349
  %54 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9350
  %shadhalostep = getelementptr inbounds %struct.Lamp, %struct.Lamp* %54, i32 0, i32 50, !dbg !9351
  %55 = load i16, i16* %shadhalostep, align 2, !dbg !9351
  %56 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9352
  %shadhalostep39 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %56, i32 0, i32 38, !dbg !9353
  store i16 %55, i16* %shadhalostep39, align 8, !dbg !9354
  %57 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9355
  %clipsta = getelementptr inbounds %struct.Lamp, %struct.Lamp* %57, i32 0, i32 25, !dbg !9356
  %58 = load float, float* %clipsta, align 4, !dbg !9356
  %59 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9357
  %clipsta40 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %59, i32 0, i32 39, !dbg !9358
  store float %58, float* %clipsta40, align 4, !dbg !9359
  %60 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9360
  %clipend = getelementptr inbounds %struct.Lamp, %struct.Lamp* %60, i32 0, i32 26, !dbg !9361
  %61 = load float, float* %clipend, align 8, !dbg !9361
  %62 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9362
  %clipend41 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %62, i32 0, i32 40, !dbg !9363
  store float %61, float* %clipend41, align 8, !dbg !9364
  %63 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9365
  %bias = getelementptr inbounds %struct.Lamp, %struct.Lamp* %63, i32 0, i32 27, !dbg !9366
  %64 = load float, float* %bias, align 4, !dbg !9366
  %65 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9367
  %bias42 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %65, i32 0, i32 41, !dbg !9368
  store float %64, float* %bias42, align 4, !dbg !9369
  %66 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9370
  %compressthresh = getelementptr inbounds %struct.Lamp, %struct.Lamp* %66, i32 0, i32 29, !dbg !9371
  %67 = load float, float* %compressthresh, align 4, !dbg !9371
  %68 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9372
  %compressthresh43 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %68, i32 0, i32 42, !dbg !9373
  store float %67, float* %compressthresh43, align 8, !dbg !9374
  %69 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9375
  %type = getelementptr inbounds %struct.Lamp, %struct.Lamp* %69, i32 0, i32 2, !dbg !9376
  %70 = load i16, i16* %type, align 8, !dbg !9376
  %71 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9377
  %type44 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %71, i32 0, i32 6, !dbg !9378
  store i16 %70, i16* %type44, align 8, !dbg !9379
  %72 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9380
  %mode45 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %72, i32 0, i32 4, !dbg !9381
  %73 = load i32, i32* %mode45, align 4, !dbg !9381
  %74 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9382
  %mode46 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %74, i32 0, i32 7, !dbg !9383
  store i32 %73, i32* %mode46, align 4, !dbg !9384
  %75 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9385
  %energy = getelementptr inbounds %struct.Lamp, %struct.Lamp* %75, i32 0, i32 15, !dbg !9386
  %76 = load float, float* %energy, align 4, !dbg !9386
  %77 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9387
  %energy47 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %77, i32 0, i32 15, !dbg !9388
  store float %76, float* %energy47, align 4, !dbg !9389
  %78 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9390
  %mode48 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %78, i32 0, i32 4, !dbg !9392
  %79 = load i32, i32* %mode48, align 4, !dbg !9392
  %and49 = and i32 %79, 16, !dbg !9393
  %tobool50 = icmp ne i32 %and49, 0, !dbg !9393
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !9394

if.then51:                                        ; preds = %if.end34
  %80 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9395
  %energy52 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %80, i32 0, i32 15, !dbg !9396
  %81 = load float, float* %energy52, align 4, !dbg !9396
  %fneg = fneg float %81, !dbg !9397
  %82 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9398
  %energy53 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %82, i32 0, i32 15, !dbg !9399
  store float %fneg, float* %energy53, align 4, !dbg !9400
  br label %if.end54, !dbg !9398

if.end54:                                         ; preds = %if.then51, %if.end34
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !9401
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !9401
  %83 = load float, float* %arrayidx55, align 16, !dbg !9401
  %fneg56 = fneg float %83, !dbg !9402
  %84 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9403
  %vec57 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %84, i32 0, i32 20, !dbg !9404
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %vec57, i64 0, i64 0, !dbg !9403
  store float %fneg56, float* %arrayidx58, align 8, !dbg !9405
  %arrayidx59 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !9406
  %arrayidx60 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx59, i64 0, i64 1, !dbg !9406
  %85 = load float, float* %arrayidx60, align 4, !dbg !9406
  %fneg61 = fneg float %85, !dbg !9407
  %86 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9408
  %vec62 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %86, i32 0, i32 20, !dbg !9409
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %vec62, i64 0, i64 1, !dbg !9408
  store float %fneg61, float* %arrayidx63, align 4, !dbg !9410
  %arrayidx64 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 2, !dbg !9411
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx64, i64 0, i64 2, !dbg !9411
  %87 = load float, float* %arrayidx65, align 8, !dbg !9411
  %fneg66 = fneg float %87, !dbg !9412
  %88 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9413
  %vec67 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %88, i32 0, i32 20, !dbg !9414
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %vec67, i64 0, i64 2, !dbg !9413
  store float %fneg66, float* %arrayidx68, align 8, !dbg !9415
  %89 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9416
  %vec69 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %89, i32 0, i32 20, !dbg !9417
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %vec69, i64 0, i64 0, !dbg !9416
  %call71 = call float @normalize_v3(float* %arraydecay70), !dbg !9418
  %arrayidx72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !9419
  %arrayidx73 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx72, i64 0, i64 0, !dbg !9419
  %90 = load float, float* %arrayidx73, align 16, !dbg !9419
  %91 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9420
  %co = getelementptr inbounds %struct.LampRen, %struct.LampRen* %91, i32 0, i32 5, !dbg !9421
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9420
  store float %90, float* %arrayidx74, align 4, !dbg !9422
  %arrayidx75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !9423
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx75, i64 0, i64 1, !dbg !9423
  %92 = load float, float* %arrayidx76, align 4, !dbg !9423
  %93 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9424
  %co77 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %93, i32 0, i32 5, !dbg !9425
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %co77, i64 0, i64 1, !dbg !9424
  store float %92, float* %arrayidx78, align 4, !dbg !9426
  %arrayidx79 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 3, !dbg !9427
  %arrayidx80 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx79, i64 0, i64 2, !dbg !9427
  %94 = load float, float* %arrayidx80, align 8, !dbg !9427
  %95 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9428
  %co81 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %95, i32 0, i32 5, !dbg !9429
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %co81, i64 0, i64 2, !dbg !9428
  store float %94, float* %arrayidx82, align 4, !dbg !9430
  %96 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9431
  %dist = getelementptr inbounds %struct.Lamp, %struct.Lamp* %96, i32 0, i32 16, !dbg !9432
  %97 = load float, float* %dist, align 8, !dbg !9432
  %98 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9433
  %dist83 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %98, i32 0, i32 4, !dbg !9434
  store float %97, float* %dist83, align 8, !dbg !9435
  %99 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9436
  %haint = getelementptr inbounds %struct.Lamp, %struct.Lamp* %99, i32 0, i32 19, !dbg !9437
  %100 = load float, float* %haint, align 4, !dbg !9437
  %101 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9438
  %haint84 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %101, i32 0, i32 16, !dbg !9439
  store float %100, float* %haint84, align 8, !dbg !9440
  %102 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9441
  %dist85 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %102, i32 0, i32 4, !dbg !9442
  %103 = load float, float* %dist85, align 8, !dbg !9442
  %104 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9443
  %dist86 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %104, i32 0, i32 4, !dbg !9444
  %105 = load float, float* %dist86, align 8, !dbg !9444
  %mul = fmul float %103, %105, !dbg !9445
  %106 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9446
  %distkw = getelementptr inbounds %struct.LampRen, %struct.LampRen* %106, i32 0, i32 23, !dbg !9447
  store float %mul, float* %distkw, align 4, !dbg !9448
  %107 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9449
  %energy87 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %107, i32 0, i32 15, !dbg !9450
  %108 = load float, float* %energy87, align 4, !dbg !9450
  %109 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9451
  %r88 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %109, i32 0, i32 7, !dbg !9452
  %110 = load float, float* %r88, align 4, !dbg !9452
  %mul89 = fmul float %108, %110, !dbg !9453
  %111 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9454
  %r90 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %111, i32 0, i32 8, !dbg !9455
  store float %mul89, float* %r90, align 8, !dbg !9456
  %112 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9457
  %energy91 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %112, i32 0, i32 15, !dbg !9458
  %113 = load float, float* %energy91, align 4, !dbg !9458
  %114 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9459
  %g = getelementptr inbounds %struct.Lamp, %struct.Lamp* %114, i32 0, i32 8, !dbg !9460
  %115 = load float, float* %g, align 8, !dbg !9460
  %mul92 = fmul float %113, %115, !dbg !9461
  %116 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9462
  %g93 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %116, i32 0, i32 9, !dbg !9463
  store float %mul92, float* %g93, align 4, !dbg !9464
  %117 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9465
  %energy94 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %117, i32 0, i32 15, !dbg !9466
  %118 = load float, float* %energy94, align 4, !dbg !9466
  %119 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9467
  %b = getelementptr inbounds %struct.Lamp, %struct.Lamp* %119, i32 0, i32 9, !dbg !9468
  %120 = load float, float* %b, align 4, !dbg !9468
  %mul95 = fmul float %118, %120, !dbg !9469
  %121 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9470
  %b96 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %121, i32 0, i32 10, !dbg !9471
  store float %mul95, float* %b96, align 8, !dbg !9472
  %122 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9473
  %shdwr = getelementptr inbounds %struct.Lamp, %struct.Lamp* %122, i32 0, i32 11, !dbg !9474
  %123 = load float, float* %shdwr, align 4, !dbg !9474
  %124 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9475
  %shdwr97 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %124, i32 0, i32 12, !dbg !9476
  store float %123, float* %shdwr97, align 8, !dbg !9477
  %125 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9478
  %shdwg = getelementptr inbounds %struct.Lamp, %struct.Lamp* %125, i32 0, i32 12, !dbg !9479
  %126 = load float, float* %shdwg, align 8, !dbg !9479
  %127 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9480
  %shdwg98 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %127, i32 0, i32 13, !dbg !9481
  store float %126, float* %shdwg98, align 4, !dbg !9482
  %128 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9483
  %shdwb = getelementptr inbounds %struct.Lamp, %struct.Lamp* %128, i32 0, i32 13, !dbg !9484
  %129 = load float, float* %shdwb, align 4, !dbg !9484
  %130 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9485
  %shdwb99 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %130, i32 0, i32 14, !dbg !9486
  store float %129, float* %shdwb99, align 8, !dbg !9487
  %131 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9488
  %k = getelementptr inbounds %struct.Lamp, %struct.Lamp* %131, i32 0, i32 10, !dbg !9489
  %132 = load float, float* %k, align 8, !dbg !9489
  %133 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9490
  %k100 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %133, i32 0, i32 11, !dbg !9491
  store float %132, float* %k100, align 4, !dbg !9492
  %134 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9493
  %ray_samp = getelementptr inbounds %struct.Lamp, %struct.Lamp* %134, i32 0, i32 38, !dbg !9494
  %135 = load i16, i16* %ray_samp, align 2, !dbg !9494
  %136 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9495
  %ray_samp101 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %136, i32 0, i32 43, !dbg !9496
  store i16 %135, i16* %ray_samp101, align 4, !dbg !9497
  %137 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9498
  %ray_sampy = getelementptr inbounds %struct.Lamp, %struct.Lamp* %137, i32 0, i32 39, !dbg !9499
  %138 = load i16, i16* %ray_sampy, align 4, !dbg !9499
  %139 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9500
  %ray_sampy102 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %139, i32 0, i32 44, !dbg !9501
  store i16 %138, i16* %ray_sampy102, align 2, !dbg !9502
  %140 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9503
  %ray_sampz = getelementptr inbounds %struct.Lamp, %struct.Lamp* %140, i32 0, i32 40, !dbg !9504
  %141 = load i16, i16* %ray_sampz, align 2, !dbg !9504
  %142 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9505
  %ray_sampz103 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %142, i32 0, i32 45, !dbg !9506
  store i16 %141, i16* %ray_sampz103, align 8, !dbg !9507
  %143 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9508
  %area_size = getelementptr inbounds %struct.Lamp, %struct.Lamp* %143, i32 0, i32 43, !dbg !9509
  %144 = load float, float* %area_size, align 4, !dbg !9509
  %145 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9510
  %area_size104 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %145, i32 0, i32 52, !dbg !9511
  store float %144, float* %area_size104, align 8, !dbg !9512
  %146 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9513
  %area_sizey = getelementptr inbounds %struct.Lamp, %struct.Lamp* %146, i32 0, i32 44, !dbg !9514
  %147 = load float, float* %area_sizey, align 8, !dbg !9514
  %148 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9515
  %area_sizey105 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %148, i32 0, i32 53, !dbg !9516
  store float %147, float* %area_sizey105, align 4, !dbg !9517
  %149 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9518
  %area_sizez = getelementptr inbounds %struct.Lamp, %struct.Lamp* %149, i32 0, i32 45, !dbg !9519
  %150 = load float, float* %area_sizez, align 4, !dbg !9519
  %151 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9520
  %area_sizez106 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %151, i32 0, i32 54, !dbg !9521
  store float %150, float* %area_sizez106, align 8, !dbg !9522
  %152 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9523
  %area_shape = getelementptr inbounds %struct.Lamp, %struct.Lamp* %152, i32 0, i32 42, !dbg !9524
  %153 = load i16, i16* %area_shape, align 2, !dbg !9524
  %154 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9525
  %area_shape107 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %154, i32 0, i32 48, !dbg !9526
  store i16 %153, i16* %area_shape107, align 2, !dbg !9527
  %155 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9528
  %type108 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %155, i32 0, i32 2, !dbg !9528
  %156 = load i16, i16* %type108, align 8, !dbg !9528
  %conv109 = sext i16 %156 to i32, !dbg !9528
  %cmp110 = icmp eq i32 %conv109, 4, !dbg !9528
  br i1 %cmp110, label %land.lhs.true, label %lor.lhs.false, !dbg !9528

lor.lhs.false:                                    ; preds = %if.end54
  %157 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9528
  %type112 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %157, i32 0, i32 2, !dbg !9528
  %158 = load i16, i16* %type112, align 8, !dbg !9528
  %conv113 = sext i16 %158 to i32, !dbg !9528
  %cmp114 = icmp eq i32 %conv113, 2, !dbg !9528
  br i1 %cmp114, label %land.lhs.true, label %lor.lhs.false116, !dbg !9528

lor.lhs.false116:                                 ; preds = %lor.lhs.false
  %159 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9528
  %type117 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %159, i32 0, i32 2, !dbg !9528
  %160 = load i16, i16* %type117, align 8, !dbg !9528
  %conv118 = sext i16 %160 to i32, !dbg !9528
  %cmp119 = icmp eq i32 %conv118, 1, !dbg !9528
  br i1 %cmp119, label %land.lhs.true, label %lor.lhs.false121, !dbg !9528

lor.lhs.false121:                                 ; preds = %lor.lhs.false116
  %161 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9528
  %type122 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %161, i32 0, i32 2, !dbg !9528
  %162 = load i16, i16* %type122, align 8, !dbg !9528
  %conv123 = sext i16 %162 to i32, !dbg !9528
  %cmp124 = icmp eq i32 %conv123, 0, !dbg !9528
  br i1 %cmp124, label %land.lhs.true, label %if.end152, !dbg !9530

land.lhs.true:                                    ; preds = %lor.lhs.false121, %lor.lhs.false116, %lor.lhs.false, %if.end54
  %163 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9531
  %mode126 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %163, i32 0, i32 4, !dbg !9532
  %164 = load i32, i32* %mode126, align 4, !dbg !9532
  %and127 = and i32 %164, 8192, !dbg !9533
  %tobool128 = icmp ne i32 %and127, 0, !dbg !9533
  br i1 %tobool128, label %if.then129, label %if.end152, !dbg !9534

if.then129:                                       ; preds = %land.lhs.true
  %165 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9535
  %type130 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %165, i32 0, i32 2, !dbg !9535
  %166 = load i16, i16* %type130, align 8, !dbg !9535
  %conv131 = sext i16 %166 to i32, !dbg !9535
  %cmp132 = icmp eq i32 %conv131, 2, !dbg !9535
  br i1 %cmp132, label %if.then144, label %lor.lhs.false134, !dbg !9535

lor.lhs.false134:                                 ; preds = %if.then129
  %167 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9535
  %type135 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %167, i32 0, i32 2, !dbg !9535
  %168 = load i16, i16* %type135, align 8, !dbg !9535
  %conv136 = sext i16 %168 to i32, !dbg !9535
  %cmp137 = icmp eq i32 %conv136, 1, !dbg !9535
  br i1 %cmp137, label %if.then144, label %lor.lhs.false139, !dbg !9535

lor.lhs.false139:                                 ; preds = %lor.lhs.false134
  %169 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9535
  %type140 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %169, i32 0, i32 2, !dbg !9535
  %170 = load i16, i16* %type140, align 8, !dbg !9535
  %conv141 = sext i16 %170 to i32, !dbg !9535
  %cmp142 = icmp eq i32 %conv141, 0, !dbg !9535
  br i1 %cmp142, label %if.then144, label %if.end151, !dbg !9537

if.then144:                                       ; preds = %lor.lhs.false139, %lor.lhs.false134, %if.then129
  %171 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9538
  %ray_samp_method = getelementptr inbounds %struct.Lamp, %struct.Lamp* %171, i32 0, i32 47, !dbg !9540
  %172 = load i16, i16* %ray_samp_method, align 4, !dbg !9540
  %conv145 = sext i16 %172 to i32, !dbg !9538
  %cmp146 = icmp eq i32 %conv145, 0, !dbg !9541
  br i1 %cmp146, label %if.then148, label %if.end150, !dbg !9542

if.then148:                                       ; preds = %if.then144
  %173 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9543
  %ray_samp_method149 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %173, i32 0, i32 47, !dbg !9544
  store i16 1, i16* %ray_samp_method149, align 4, !dbg !9545
  br label %if.end150, !dbg !9543

if.end150:                                        ; preds = %if.then148, %if.then144
  br label %if.end151, !dbg !9546

if.end151:                                        ; preds = %if.end150, %lor.lhs.false139
  br label %if.end152, !dbg !9535

if.end152:                                        ; preds = %if.end151, %land.lhs.true, %lor.lhs.false121
  %174 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9547
  %ray_samp_method153 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %174, i32 0, i32 47, !dbg !9548
  %175 = load i16, i16* %ray_samp_method153, align 4, !dbg !9548
  %176 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9549
  %ray_samp_method154 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %176, i32 0, i32 46, !dbg !9550
  store i16 %175, i16* %ray_samp_method154, align 2, !dbg !9551
  %177 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9552
  %ray_samp_type = getelementptr inbounds %struct.Lamp, %struct.Lamp* %177, i32 0, i32 41, !dbg !9553
  %178 = load i16, i16* %ray_samp_type, align 8, !dbg !9553
  %179 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9554
  %ray_samp_type155 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %179, i32 0, i32 47, !dbg !9555
  store i16 %178, i16* %ray_samp_type155, align 4, !dbg !9556
  %180 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9557
  %adapt_thresh = getelementptr inbounds %struct.Lamp, %struct.Lamp* %180, i32 0, i32 46, !dbg !9558
  %181 = load float, float* %adapt_thresh, align 8, !dbg !9558
  %182 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9559
  %adapt_thresh156 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %182, i32 0, i32 55, !dbg !9560
  store float %181, float* %adapt_thresh156, align 4, !dbg !9561
  %183 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9562
  %sunsky = getelementptr inbounds %struct.LampRen, %struct.LampRen* %183, i32 0, i32 56, !dbg !9563
  store %struct.SunSky* null, %struct.SunSky** %sunsky, align 8, !dbg !9564
  %184 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9565
  %type157 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %184, i32 0, i32 6, !dbg !9565
  %185 = load i16, i16* %type157, align 8, !dbg !9565
  %conv158 = sext i16 %185 to i32, !dbg !9565
  %cmp159 = icmp eq i32 %conv158, 2, !dbg !9565
  br i1 %cmp159, label %if.then166, label %lor.lhs.false161, !dbg !9565

lor.lhs.false161:                                 ; preds = %if.end152
  %186 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9565
  %type162 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %186, i32 0, i32 6, !dbg !9565
  %187 = load i16, i16* %type162, align 8, !dbg !9565
  %conv163 = sext i16 %187 to i32, !dbg !9565
  %cmp164 = icmp eq i32 %conv163, 0, !dbg !9565
  br i1 %cmp164, label %if.then166, label %if.else, !dbg !9567

if.then166:                                       ; preds = %lor.lhs.false161, %if.end152
  %188 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9568
  %ray_samp167 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %188, i32 0, i32 43, !dbg !9570
  %189 = load i16, i16* %ray_samp167, align 4, !dbg !9570
  %conv168 = sext i16 %189 to i32, !dbg !9568
  %190 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9571
  %ray_samp169 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %190, i32 0, i32 43, !dbg !9572
  %191 = load i16, i16* %ray_samp169, align 4, !dbg !9572
  %conv170 = sext i16 %191 to i32, !dbg !9571
  %mul171 = mul nsw i32 %conv168, %conv170, !dbg !9573
  %conv172 = trunc i32 %mul171 to i16, !dbg !9568
  %192 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9574
  %ray_totsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %192, i32 0, i32 49, !dbg !9575
  store i16 %conv172, i16* %ray_totsamp, align 8, !dbg !9576
  %193 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9577
  %area_shape173 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %193, i32 0, i32 48, !dbg !9578
  store i16 0, i16* %area_shape173, align 2, !dbg !9579
  %194 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9580
  %area_size174 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %194, i32 0, i32 52, !dbg !9581
  %195 = load float, float* %area_size174, align 8, !dbg !9581
  %196 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9582
  %area_sizey175 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %196, i32 0, i32 53, !dbg !9583
  store float %195, float* %area_sizey175, align 4, !dbg !9584
  br label %if.end276, !dbg !9585

if.else:                                          ; preds = %lor.lhs.false161
  %197 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9586
  %type176 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %197, i32 0, i32 6, !dbg !9588
  %198 = load i16, i16* %type176, align 8, !dbg !9588
  %conv177 = sext i16 %198 to i32, !dbg !9586
  %cmp178 = icmp eq i32 %conv177, 4, !dbg !9589
  br i1 %cmp178, label %if.then180, label %if.else232, !dbg !9590

if.then180:                                       ; preds = %if.else
  %199 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9591
  %area_shape181 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %199, i32 0, i32 48, !dbg !9593
  %200 = load i16, i16* %area_shape181, align 2, !dbg !9593
  %conv182 = sext i16 %200 to i32, !dbg !9591
  switch i32 %conv182, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb194
    i32 2, label %sw.bb202
    i32 3, label %sw.bb221
  ], !dbg !9594

sw.bb:                                            ; preds = %if.then180
  %201 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9595
  %ray_samp183 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %201, i32 0, i32 43, !dbg !9597
  %202 = load i16, i16* %ray_samp183, align 4, !dbg !9597
  %conv184 = sext i16 %202 to i32, !dbg !9595
  %203 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9598
  %ray_samp185 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %203, i32 0, i32 43, !dbg !9599
  %204 = load i16, i16* %ray_samp185, align 4, !dbg !9599
  %conv186 = sext i16 %204 to i32, !dbg !9598
  %mul187 = mul nsw i32 %conv184, %conv186, !dbg !9600
  %conv188 = trunc i32 %mul187 to i16, !dbg !9595
  %205 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9601
  %ray_totsamp189 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %205, i32 0, i32 49, !dbg !9602
  store i16 %conv188, i16* %ray_totsamp189, align 8, !dbg !9603
  %206 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9604
  %ray_samp190 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %206, i32 0, i32 43, !dbg !9605
  %207 = load i16, i16* %ray_samp190, align 4, !dbg !9605
  %208 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9606
  %ray_sampy191 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %208, i32 0, i32 44, !dbg !9607
  store i16 %207, i16* %ray_sampy191, align 2, !dbg !9608
  %209 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9609
  %area_size192 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %209, i32 0, i32 52, !dbg !9610
  %210 = load float, float* %area_size192, align 8, !dbg !9610
  %211 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9611
  %area_sizey193 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %211, i32 0, i32 53, !dbg !9612
  store float %210, float* %area_sizey193, align 4, !dbg !9613
  br label %sw.epilog, !dbg !9614

sw.bb194:                                         ; preds = %if.then180
  %212 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9615
  %ray_samp195 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %212, i32 0, i32 43, !dbg !9616
  %213 = load i16, i16* %ray_samp195, align 4, !dbg !9616
  %conv196 = sext i16 %213 to i32, !dbg !9615
  %214 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9617
  %ray_sampy197 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %214, i32 0, i32 44, !dbg !9618
  %215 = load i16, i16* %ray_sampy197, align 2, !dbg !9618
  %conv198 = sext i16 %215 to i32, !dbg !9617
  %mul199 = mul nsw i32 %conv196, %conv198, !dbg !9619
  %conv200 = trunc i32 %mul199 to i16, !dbg !9615
  %216 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9620
  %ray_totsamp201 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %216, i32 0, i32 49, !dbg !9621
  store i16 %conv200, i16* %ray_totsamp201, align 8, !dbg !9622
  br label %sw.epilog, !dbg !9623

sw.bb202:                                         ; preds = %if.then180
  %217 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9624
  %ray_samp203 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %217, i32 0, i32 43, !dbg !9625
  %218 = load i16, i16* %ray_samp203, align 4, !dbg !9625
  %conv204 = sext i16 %218 to i32, !dbg !9624
  %219 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9626
  %ray_samp205 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %219, i32 0, i32 43, !dbg !9627
  %220 = load i16, i16* %ray_samp205, align 4, !dbg !9627
  %conv206 = sext i16 %220 to i32, !dbg !9626
  %mul207 = mul nsw i32 %conv204, %conv206, !dbg !9628
  %221 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9629
  %ray_samp208 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %221, i32 0, i32 43, !dbg !9630
  %222 = load i16, i16* %ray_samp208, align 4, !dbg !9630
  %conv209 = sext i16 %222 to i32, !dbg !9629
  %mul210 = mul nsw i32 %mul207, %conv209, !dbg !9631
  %conv211 = trunc i32 %mul210 to i16, !dbg !9624
  %223 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9632
  %ray_totsamp212 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %223, i32 0, i32 49, !dbg !9633
  store i16 %conv211, i16* %ray_totsamp212, align 8, !dbg !9634
  %224 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9635
  %ray_samp213 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %224, i32 0, i32 43, !dbg !9636
  %225 = load i16, i16* %ray_samp213, align 4, !dbg !9636
  %226 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9637
  %ray_sampy214 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %226, i32 0, i32 44, !dbg !9638
  store i16 %225, i16* %ray_sampy214, align 2, !dbg !9639
  %227 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9640
  %ray_samp215 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %227, i32 0, i32 43, !dbg !9641
  %228 = load i16, i16* %ray_samp215, align 4, !dbg !9641
  %229 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9642
  %ray_sampz216 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %229, i32 0, i32 45, !dbg !9643
  store i16 %228, i16* %ray_sampz216, align 8, !dbg !9644
  %230 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9645
  %area_size217 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %230, i32 0, i32 52, !dbg !9646
  %231 = load float, float* %area_size217, align 8, !dbg !9646
  %232 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9647
  %area_sizey218 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %232, i32 0, i32 53, !dbg !9648
  store float %231, float* %area_sizey218, align 4, !dbg !9649
  %233 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9650
  %area_size219 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %233, i32 0, i32 52, !dbg !9651
  %234 = load float, float* %area_size219, align 8, !dbg !9651
  %235 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9652
  %area_sizez220 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %235, i32 0, i32 54, !dbg !9653
  store float %234, float* %area_sizez220, align 8, !dbg !9654
  br label %sw.epilog, !dbg !9655

sw.bb221:                                         ; preds = %if.then180
  %236 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9656
  %ray_samp222 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %236, i32 0, i32 43, !dbg !9657
  %237 = load i16, i16* %ray_samp222, align 4, !dbg !9657
  %conv223 = sext i16 %237 to i32, !dbg !9656
  %238 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9658
  %ray_sampy224 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %238, i32 0, i32 44, !dbg !9659
  %239 = load i16, i16* %ray_sampy224, align 2, !dbg !9659
  %conv225 = sext i16 %239 to i32, !dbg !9658
  %mul226 = mul nsw i32 %conv223, %conv225, !dbg !9660
  %240 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9661
  %ray_sampz227 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %240, i32 0, i32 45, !dbg !9662
  %241 = load i16, i16* %ray_sampz227, align 8, !dbg !9662
  %conv228 = sext i16 %241 to i32, !dbg !9661
  %mul229 = mul nsw i32 %mul226, %conv228, !dbg !9663
  %conv230 = trunc i32 %mul229 to i16, !dbg !9656
  %242 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9664
  %ray_totsamp231 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %242, i32 0, i32 49, !dbg !9665
  store i16 %conv230, i16* %ray_totsamp231, align 8, !dbg !9666
  br label %sw.epilog, !dbg !9667

sw.epilog:                                        ; preds = %if.then180, %sw.bb221, %sw.bb202, %sw.bb194, %sw.bb
  %243 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9668
  call void @area_lamp_vectors(%struct.LampRen* %243), !dbg !9669
  %244 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9670
  call void @init_jitter_plane(%struct.LampRen* %244), !dbg !9671
  br label %if.end275, !dbg !9672

if.else232:                                       ; preds = %if.else
  %245 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9673
  %type233 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %245, i32 0, i32 6, !dbg !9675
  %246 = load i16, i16* %type233, align 8, !dbg !9675
  %conv234 = sext i16 %246 to i32, !dbg !9673
  %cmp235 = icmp eq i32 %conv234, 1, !dbg !9676
  br i1 %cmp235, label %if.then237, label %if.else272, !dbg !9677

if.then237:                                       ; preds = %if.else232
  %247 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9678
  %ray_samp238 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %247, i32 0, i32 43, !dbg !9680
  %248 = load i16, i16* %ray_samp238, align 4, !dbg !9680
  %conv239 = sext i16 %248 to i32, !dbg !9678
  %249 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9681
  %ray_samp240 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %249, i32 0, i32 43, !dbg !9682
  %250 = load i16, i16* %ray_samp240, align 4, !dbg !9682
  %conv241 = sext i16 %250 to i32, !dbg !9681
  %mul242 = mul nsw i32 %conv239, %conv241, !dbg !9683
  %conv243 = trunc i32 %mul242 to i16, !dbg !9678
  %251 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9684
  %ray_totsamp244 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %251, i32 0, i32 49, !dbg !9685
  store i16 %conv243, i16* %ray_totsamp244, align 8, !dbg !9686
  %252 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9687
  %area_shape245 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %252, i32 0, i32 48, !dbg !9688
  store i16 0, i16* %area_shape245, align 2, !dbg !9689
  %253 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9690
  %area_size246 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %253, i32 0, i32 52, !dbg !9691
  %254 = load float, float* %area_size246, align 8, !dbg !9691
  %255 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9692
  %area_sizey247 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %255, i32 0, i32 53, !dbg !9693
  store float %254, float* %area_sizey247, align 4, !dbg !9694
  %256 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9695
  %sun_effect_type = getelementptr inbounds %struct.Lamp, %struct.Lamp* %256, i32 0, i32 51, !dbg !9697
  %257 = load i16, i16* %sun_effect_type, align 4, !dbg !9697
  %conv248 = sext i16 %257 to i32, !dbg !9695
  %and249 = and i32 %conv248, 1, !dbg !9698
  %tobool250 = icmp ne i32 %and249, 0, !dbg !9698
  br i1 %tobool250, label %if.then256, label %lor.lhs.false251, !dbg !9699

lor.lhs.false251:                                 ; preds = %if.then237
  %258 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9700
  %sun_effect_type252 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %258, i32 0, i32 51, !dbg !9701
  %259 = load i16, i16* %sun_effect_type252, align 4, !dbg !9701
  %conv253 = sext i16 %259 to i32, !dbg !9700
  %and254 = and i32 %conv253, 2, !dbg !9702
  %tobool255 = icmp ne i32 %and254, 0, !dbg !9702
  br i1 %tobool255, label %if.then256, label %if.end271, !dbg !9703

if.then256:                                       ; preds = %lor.lhs.false251, %if.then237
  %260 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9704
  %call257 = call i8* %260(i64 224, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)), !dbg !9704
  %261 = bitcast i8* %call257 to %struct.SunSky*, !dbg !9706
  %262 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9707
  %sunsky258 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %262, i32 0, i32 56, !dbg !9708
  store %struct.SunSky* %261, %struct.SunSky** %sunsky258, align 8, !dbg !9709
  %263 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9710
  %sun_effect_type259 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %263, i32 0, i32 51, !dbg !9711
  %264 = load i16, i16* %sun_effect_type259, align 4, !dbg !9711
  %265 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9712
  %sunsky260 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %265, i32 0, i32 56, !dbg !9713
  %266 = load %struct.SunSky*, %struct.SunSky** %sunsky260, align 8, !dbg !9713
  %effect_type = getelementptr inbounds %struct.SunSky, %struct.SunSky* %266, i32 0, i32 0, !dbg !9714
  store i16 %264, i16* %effect_type, align 4, !dbg !9715
  %arraydecay261 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9716
  %267 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9717
  %obmat262 = getelementptr inbounds %struct.Object, %struct.Object* %267, i32 0, i32 47, !dbg !9718
  %arrayidx263 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat262, i64 0, i64 2, !dbg !9717
  %arraydecay264 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx263, i64 0, i64 0, !dbg !9717
  call void @copy_v3_v3(float* %arraydecay261, float* %arraydecay264), !dbg !9719
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9720
  %call266 = call float @normalize_v3(float* %arraydecay265), !dbg !9721
  %268 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9722
  %sunsky267 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %268, i32 0, i32 56, !dbg !9723
  %269 = load %struct.SunSky*, %struct.SunSky** %sunsky267, align 8, !dbg !9723
  %270 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9724
  %atm_turbidity = getelementptr inbounds %struct.Lamp, %struct.Lamp* %270, i32 0, i32 59, !dbg !9725
  %271 = load float, float* %atm_turbidity, align 8, !dbg !9725
  %arraydecay268 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !9726
  %272 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9727
  %horizon_brightness = getelementptr inbounds %struct.Lamp, %struct.Lamp* %272, i32 0, i32 53, !dbg !9728
  %273 = load float, float* %horizon_brightness, align 8, !dbg !9728
  %274 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9729
  %spread = getelementptr inbounds %struct.Lamp, %struct.Lamp* %274, i32 0, i32 54, !dbg !9730
  %275 = load float, float* %spread, align 4, !dbg !9730
  %276 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9731
  %sun_brightness = getelementptr inbounds %struct.Lamp, %struct.Lamp* %276, i32 0, i32 55, !dbg !9732
  %277 = load float, float* %sun_brightness, align 8, !dbg !9732
  %278 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9733
  %sun_size = getelementptr inbounds %struct.Lamp, %struct.Lamp* %278, i32 0, i32 56, !dbg !9734
  %279 = load float, float* %sun_size, align 4, !dbg !9734
  %280 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9735
  %backscattered_light = getelementptr inbounds %struct.Lamp, %struct.Lamp* %280, i32 0, i32 57, !dbg !9736
  %281 = load float, float* %backscattered_light, align 8, !dbg !9736
  %282 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9737
  %skyblendfac = getelementptr inbounds %struct.Lamp, %struct.Lamp* %282, i32 0, i32 63, !dbg !9738
  %283 = load float, float* %skyblendfac, align 8, !dbg !9738
  %284 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9739
  %skyblendtype = getelementptr inbounds %struct.Lamp, %struct.Lamp* %284, i32 0, i32 52, !dbg !9740
  %285 = load i16, i16* %skyblendtype, align 2, !dbg !9740
  %286 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9741
  %sky_exposure = getelementptr inbounds %struct.Lamp, %struct.Lamp* %286, i32 0, i32 64, !dbg !9742
  %287 = load float, float* %sky_exposure, align 4, !dbg !9742
  %288 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9743
  %sky_colorspace = getelementptr inbounds %struct.Lamp, %struct.Lamp* %288, i32 0, i32 66, !dbg !9744
  %289 = load i16, i16* %sky_colorspace, align 4, !dbg !9744
  %conv269 = sitofp i16 %289 to float, !dbg !9743
  call void @InitSunSky(%struct.SunSky* %269, float %271, float* %arraydecay268, float %273, float %275, float %277, float %279, float %281, float %283, i16 signext %285, float %287, float %conv269), !dbg !9745
  %290 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9746
  %sunsky270 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %290, i32 0, i32 56, !dbg !9747
  %291 = load %struct.SunSky*, %struct.SunSky** %sunsky270, align 8, !dbg !9747
  %292 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9748
  %sun_intensity = getelementptr inbounds %struct.Lamp, %struct.Lamp* %292, i32 0, i32 58, !dbg !9749
  %293 = load float, float* %sun_intensity, align 4, !dbg !9749
  %294 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9750
  %atm_inscattering_factor = getelementptr inbounds %struct.Lamp, %struct.Lamp* %294, i32 0, i32 60, !dbg !9751
  %295 = load float, float* %atm_inscattering_factor, align 4, !dbg !9751
  %296 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9752
  %atm_extinction_factor = getelementptr inbounds %struct.Lamp, %struct.Lamp* %296, i32 0, i32 61, !dbg !9753
  %297 = load float, float* %atm_extinction_factor, align 8, !dbg !9753
  %298 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9754
  %atm_distance_factor = getelementptr inbounds %struct.Lamp, %struct.Lamp* %298, i32 0, i32 62, !dbg !9755
  %299 = load float, float* %atm_distance_factor, align 4, !dbg !9755
  call void @InitAtmosphere(%struct.SunSky* %291, float %293, float 1.000000e+00, float 1.000000e+00, float %295, float %297, float %299), !dbg !9756
  br label %if.end271, !dbg !9757

if.end271:                                        ; preds = %if.then256, %lor.lhs.false251
  br label %if.end274, !dbg !9758

if.else272:                                       ; preds = %if.else232
  %300 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9759
  %ray_totsamp273 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %300, i32 0, i32 49, !dbg !9760
  store i16 0, i16* %ray_totsamp273, align 8, !dbg !9761
  br label %if.end274

if.end274:                                        ; preds = %if.else272, %if.end271
  br label %if.end275

if.end275:                                        ; preds = %if.end274, %sw.epilog
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.then166
  %301 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9762
  %spotsize = getelementptr inbounds %struct.Lamp, %struct.Lamp* %301, i32 0, i32 17, !dbg !9763
  %302 = load float, float* %spotsize, align 4, !dbg !9763
  %303 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9764
  %spotsi = getelementptr inbounds %struct.LampRen, %struct.LampRen* %303, i32 0, i32 18, !dbg !9765
  store float %302, float* %spotsi, align 8, !dbg !9766
  %304 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9767
  %mode277 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %304, i32 0, i32 7, !dbg !9769
  %305 = load i32, i32* %mode277, align 4, !dbg !9769
  %and278 = and i32 %305, 2, !dbg !9770
  %tobool279 = icmp ne i32 %and278, 0, !dbg !9770
  br i1 %tobool279, label %if.then280, label %if.end287, !dbg !9771

if.then280:                                       ; preds = %if.end276
  %306 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9772
  %spotsi281 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %306, i32 0, i32 18, !dbg !9775
  %307 = load float, float* %spotsi281, align 8, !dbg !9775
  %cmp282 = fcmp ogt float %307, 0x4007BC89C0000000, !dbg !9776
  br i1 %cmp282, label %if.then284, label %if.end286, !dbg !9777

if.then284:                                       ; preds = %if.then280
  %308 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9778
  %spotsi285 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %308, i32 0, i32 18, !dbg !9779
  store float 0x4007BC89C0000000, float* %spotsi285, align 8, !dbg !9780
  br label %if.end286, !dbg !9778

if.end286:                                        ; preds = %if.then284, %if.then280
  br label %if.end287, !dbg !9781

if.end287:                                        ; preds = %if.end286, %if.end276
  %309 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9782
  %spotsi288 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %309, i32 0, i32 18, !dbg !9783
  %310 = load float, float* %spotsi288, align 8, !dbg !9783
  %mul289 = fmul float %310, 5.000000e-01, !dbg !9784
  %call290 = call float @cosf(float %mul289) #5, !dbg !9785
  %311 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9786
  %spotsi291 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %311, i32 0, i32 18, !dbg !9787
  store float %call290, float* %spotsi291, align 8, !dbg !9788
  %312 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9789
  %spotsi292 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %312, i32 0, i32 18, !dbg !9790
  %313 = load float, float* %spotsi292, align 8, !dbg !9790
  %sub = fsub float 1.000000e+00, %313, !dbg !9791
  %314 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9792
  %spotblend = getelementptr inbounds %struct.Lamp, %struct.Lamp* %314, i32 0, i32 18, !dbg !9793
  %315 = load float, float* %spotblend, align 8, !dbg !9793
  %mul293 = fmul float %sub, %315, !dbg !9794
  %316 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9795
  %spotbl = getelementptr inbounds %struct.LampRen, %struct.LampRen* %316, i32 0, i32 19, !dbg !9796
  store float %mul293, float* %spotbl, align 4, !dbg !9797
  %317 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9798
  %mtex = getelementptr inbounds %struct.LampRen, %struct.LampRen* %317, i32 0, i32 69, !dbg !9799
  %arraydecay294 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 0, !dbg !9800
  %318 = bitcast %struct.MTex** %arraydecay294 to i8*, !dbg !9800
  %319 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9801
  %mtex295 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %319, i32 0, i32 69, !dbg !9802
  %arraydecay296 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex295, i64 0, i64 0, !dbg !9800
  %320 = bitcast %struct.MTex** %arraydecay296 to i8*, !dbg !9800
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %318, i8* align 8 %320, i64 144, i1 false), !dbg !9800
  %321 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9803
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %321, i32 0, i32 52, !dbg !9804
  %322 = load i32, i32* %lay, align 8, !dbg !9804
  %and297 = and i32 %322, 16777215, !dbg !9805
  %323 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9806
  %lay298 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %323, i32 0, i32 17, !dbg !9807
  store i32 %and297, i32* %lay298, align 4, !dbg !9808
  %324 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9809
  %falloff_type = getelementptr inbounds %struct.Lamp, %struct.Lamp* %324, i32 0, i32 23, !dbg !9810
  %325 = load i16, i16* %falloff_type, align 8, !dbg !9810
  %326 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9811
  %falloff_type299 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %326, i32 0, i32 27, !dbg !9812
  store i16 %325, i16* %falloff_type299, align 4, !dbg !9813
  %327 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9814
  %att1 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %327, i32 0, i32 20, !dbg !9815
  %328 = load float, float* %att1, align 8, !dbg !9815
  %329 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9816
  %ld1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %329, i32 0, i32 28, !dbg !9817
  store float %328, float* %ld1, align 8, !dbg !9818
  %330 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9819
  %att2 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %330, i32 0, i32 21, !dbg !9820
  %331 = load float, float* %att2, align 4, !dbg !9820
  %332 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9821
  %ld2 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %332, i32 0, i32 29, !dbg !9822
  store float %331, float* %ld2, align 4, !dbg !9823
  %333 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9824
  %curfalloff = getelementptr inbounds %struct.Lamp, %struct.Lamp* %333, i32 0, i32 22, !dbg !9825
  %334 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff, align 8, !dbg !9825
  %call300 = call %struct.CurveMapping* @curvemapping_copy(%struct.CurveMapping* %334), !dbg !9826
  %335 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9827
  %curfalloff301 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %335, i32 0, i32 30, !dbg !9828
  store %struct.CurveMapping* %call300, %struct.CurveMapping** %curfalloff301, align 8, !dbg !9829
  %336 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9830
  %curfalloff302 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %336, i32 0, i32 30, !dbg !9832
  %337 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff302, align 8, !dbg !9832
  %tobool303 = icmp ne %struct.CurveMapping* %337, null, !dbg !9830
  br i1 %tobool303, label %if.then304, label %if.end306, !dbg !9833

if.then304:                                       ; preds = %if.end287
  %338 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9834
  %curfalloff305 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %338, i32 0, i32 30, !dbg !9836
  %339 = load %struct.CurveMapping*, %struct.CurveMapping** %curfalloff305, align 8, !dbg !9836
  call void @curvemapping_initialize(%struct.CurveMapping* %339), !dbg !9837
  br label %if.end306, !dbg !9838

if.end306:                                        ; preds = %if.then304, %if.end287
  %340 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9839
  %type307 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %340, i32 0, i32 6, !dbg !9841
  %341 = load i16, i16* %type307, align 8, !dbg !9841
  %conv308 = sext i16 %341 to i32, !dbg !9839
  %cmp309 = icmp eq i32 %conv308, 2, !dbg !9842
  br i1 %cmp309, label %if.then311, label %if.end342, !dbg !9843

if.then311:                                       ; preds = %if.end306
  %342 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9844
  %imat312 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %342, i32 0, i32 59, !dbg !9846
  %arrayidx313 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat312, i64 0, i64 0, !dbg !9844
  %arraydecay314 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx313, i64 0, i64 0, !dbg !9844
  %call315 = call float @normalize_v3(float* %arraydecay314), !dbg !9847
  %343 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9848
  %imat316 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %343, i32 0, i32 59, !dbg !9849
  %arrayidx317 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat316, i64 0, i64 1, !dbg !9848
  %arraydecay318 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx317, i64 0, i64 0, !dbg !9848
  %call319 = call float @normalize_v3(float* %arraydecay318), !dbg !9850
  %344 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9851
  %imat320 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %344, i32 0, i32 59, !dbg !9852
  %arrayidx321 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat320, i64 0, i64 2, !dbg !9851
  %arraydecay322 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx321, i64 0, i64 0, !dbg !9851
  %call323 = call float @normalize_v3(float* %arraydecay322), !dbg !9853
  %345 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9854
  %spotsi324 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %345, i32 0, i32 18, !dbg !9855
  %346 = load float, float* %spotsi324, align 8, !dbg !9855
  %call325 = call float @saacos(float %346), !dbg !9856
  store float %call325, float* %xn, align 4, !dbg !9857
  %347 = load float, float* %xn, align 4, !dbg !9858
  %call326 = call float @sinf(float %347) #5, !dbg !9859
  %348 = load float, float* %xn, align 4, !dbg !9860
  %call327 = call float @cosf(float %348) #5, !dbg !9861
  %div = fdiv float %call326, %call327, !dbg !9862
  store float %div, float* %xn, align 4, !dbg !9863
  %349 = load float, float* %xn, align 4, !dbg !9864
  %div328 = fdiv float 1.000000e+00, %349, !dbg !9865
  %350 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9866
  %spottexfac = getelementptr inbounds %struct.LampRen, %struct.LampRen* %350, i32 0, i32 60, !dbg !9867
  store float %div328, float* %spottexfac, align 4, !dbg !9868
  %351 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9869
  %mode329 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %351, i32 0, i32 7, !dbg !9871
  %352 = load i32, i32* %mode329, align 4, !dbg !9871
  %and330 = and i32 %352, 32, !dbg !9872
  %tobool331 = icmp ne i32 %and330, 0, !dbg !9872
  br i1 %tobool331, label %if.then332, label %if.end341, !dbg !9873

if.then332:                                       ; preds = %if.then311
  %353 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9874
  %mode333 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %353, i32 0, i32 7, !dbg !9877
  %354 = load i32, i32* %mode333, align 4, !dbg !9877
  %and334 = and i32 %354, 8193, !dbg !9878
  %cmp335 = icmp eq i32 %and334, 0, !dbg !9879
  br i1 %cmp335, label %if.then337, label %if.end340, !dbg !9880

if.then337:                                       ; preds = %if.then332
  %355 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9881
  %mode338 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %355, i32 0, i32 7, !dbg !9882
  %356 = load i32, i32* %mode338, align 4, !dbg !9883
  %sub339 = sub nsw i32 %356, 32, !dbg !9883
  store i32 %sub339, i32* %mode338, align 4, !dbg !9883
  br label %if.end340, !dbg !9881

if.end340:                                        ; preds = %if.then337, %if.then332
  br label %if.end341, !dbg !9884

if.end341:                                        ; preds = %if.end340, %if.then311
  br label %if.end342, !dbg !9885

if.end342:                                        ; preds = %if.end341, %if.end306
  %357 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9886
  %type343 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %357, i32 0, i32 2, !dbg !9888
  %358 = load i16, i16* %type343, align 8, !dbg !9888
  %conv344 = sext i16 %358 to i32, !dbg !9886
  %cmp345 = icmp eq i32 %conv344, 2, !dbg !9889
  br i1 %cmp345, label %land.lhs.true347, label %if.else398, !dbg !9890

land.lhs.true347:                                 ; preds = %if.end342
  %359 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9891
  %mode348 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %359, i32 0, i32 4, !dbg !9892
  %360 = load i32, i32* %mode348, align 4, !dbg !9892
  %and349 = and i32 %360, 2, !dbg !9893
  %tobool350 = icmp ne i32 %and349, 0, !dbg !9893
  br i1 %tobool350, label %land.lhs.true351, label %if.else398, !dbg !9894

land.lhs.true351:                                 ; preds = %land.lhs.true347
  %361 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9895
  %buftype352 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %361, i32 0, i32 37, !dbg !9896
  %362 = load i8, i8* %buftype352, align 1, !dbg !9896
  %conv353 = zext i8 %362 to i32, !dbg !9895
  %cmp354 = icmp ne i32 %conv353, 3, !dbg !9897
  br i1 %cmp354, label %if.then356, label %if.else398, !dbg !9898

if.then356:                                       ; preds = %land.lhs.true351
  %363 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9899
  %haint357 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %363, i32 0, i32 19, !dbg !9902
  %364 = load float, float* %haint357, align 4, !dbg !9902
  %cmp358 = fcmp ogt float %364, 0.000000e+00, !dbg !9903
  br i1 %cmp358, label %if.then360, label %if.end397, !dbg !9904

if.then360:                                       ; preds = %if.then356
  %365 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !9905
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %365, i32 0, i32 4, !dbg !9907
  %366 = load i16, i16* %flag, align 8, !dbg !9908
  %conv361 = sext i16 %366 to i32, !dbg !9908
  %or = or i32 %conv361, 8, !dbg !9908
  %conv362 = trunc i32 %or to i16, !dbg !9908
  store i16 %conv362, i16* %flag, align 8, !dbg !9908
  %367 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9909
  %co363 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %367, i32 0, i32 5, !dbg !9910
  %arrayidx364 = getelementptr inbounds [3 x float], [3 x float]* %co363, i64 0, i64 0, !dbg !9909
  %368 = load float, float* %arrayidx364, align 4, !dbg !9909
  %fneg365 = fneg float %368, !dbg !9911
  %369 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9912
  %sh_invcampos = getelementptr inbounds %struct.LampRen, %struct.LampRen* %369, i32 0, i32 61, !dbg !9913
  %arrayidx366 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos, i64 0, i64 0, !dbg !9912
  store float %fneg365, float* %arrayidx366, align 8, !dbg !9914
  %370 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9915
  %co367 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %370, i32 0, i32 5, !dbg !9916
  %arrayidx368 = getelementptr inbounds [3 x float], [3 x float]* %co367, i64 0, i64 1, !dbg !9915
  %371 = load float, float* %arrayidx368, align 4, !dbg !9915
  %fneg369 = fneg float %371, !dbg !9917
  %372 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9918
  %sh_invcampos370 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %372, i32 0, i32 61, !dbg !9919
  %arrayidx371 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos370, i64 0, i64 1, !dbg !9918
  store float %fneg369, float* %arrayidx371, align 4, !dbg !9920
  %373 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9921
  %co372 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %373, i32 0, i32 5, !dbg !9922
  %arrayidx373 = getelementptr inbounds [3 x float], [3 x float]* %co372, i64 0, i64 2, !dbg !9921
  %374 = load float, float* %arrayidx373, align 4, !dbg !9921
  %fneg374 = fneg float %374, !dbg !9923
  %375 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9924
  %sh_invcampos375 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %375, i32 0, i32 61, !dbg !9925
  %arrayidx376 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos375, i64 0, i64 2, !dbg !9924
  store float %fneg374, float* %arrayidx376, align 8, !dbg !9926
  %376 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9927
  %imat377 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %376, i32 0, i32 59, !dbg !9928
  %arraydecay378 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat377, i64 0, i64 0, !dbg !9927
  %377 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9929
  %sh_invcampos379 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %377, i32 0, i32 61, !dbg !9930
  %arraydecay380 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos379, i64 0, i64 0, !dbg !9929
  call void @mul_m3_v3([3 x float]* %arraydecay378, float* %arraydecay380), !dbg !9931
  %378 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9932
  %spotsi381 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %378, i32 0, i32 18, !dbg !9933
  %379 = load float, float* %spotsi381, align 8, !dbg !9933
  %call382 = call float @saacos(float %379), !dbg !9934
  store float %call382, float* %angle, align 4, !dbg !9935
  %380 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9936
  %spotsi383 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %380, i32 0, i32 18, !dbg !9937
  %381 = load float, float* %spotsi383, align 8, !dbg !9937
  store float %381, float* %xn, align 4, !dbg !9938
  %382 = load float, float* %angle, align 4, !dbg !9939
  %call384 = call float @sinf(float %382) #5, !dbg !9940
  store float %call384, float* %yn, align 4, !dbg !9941
  %383 = load float, float* %yn, align 4, !dbg !9942
  %384 = load float, float* %xn, align 4, !dbg !9943
  %div385 = fdiv float %383, %384, !dbg !9944
  %385 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9945
  %sh_zfac = getelementptr inbounds %struct.LampRen, %struct.LampRen* %385, i32 0, i32 62, !dbg !9946
  store float %div385, float* %sh_zfac, align 4, !dbg !9947
  %386 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9948
  %sh_zfac386 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %386, i32 0, i32 62, !dbg !9949
  %387 = load float, float* %sh_zfac386, align 4, !dbg !9949
  %388 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9950
  %sh_invcampos387 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %388, i32 0, i32 61, !dbg !9951
  %arrayidx388 = getelementptr inbounds [3 x float], [3 x float]* %sh_invcampos387, i64 0, i64 2, !dbg !9950
  %389 = load float, float* %arrayidx388, align 8, !dbg !9952
  %mul389 = fmul float %389, %387, !dbg !9952
  store float %mul389, float* %arrayidx388, align 8, !dbg !9952
  %390 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9953
  %buftype390 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %390, i32 0, i32 36, !dbg !9955
  %391 = load i16, i16* %buftype390, align 4, !dbg !9955
  %conv391 = sext i16 %391 to i32, !dbg !9953
  %cmp392 = icmp eq i32 %conv391, 2, !dbg !9956
  br i1 %cmp392, label %if.then394, label %if.end396, !dbg !9957

if.then394:                                       ; preds = %if.then360
  %392 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9958
  %buftype395 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %392, i32 0, i32 36, !dbg !9959
  store i16 0, i16* %buftype395, align 4, !dbg !9960
  br label %if.end396, !dbg !9958

if.end396:                                        ; preds = %if.then394, %if.then360
  br label %if.end397, !dbg !9961

if.end397:                                        ; preds = %if.end396, %if.then356
  br label %if.end407, !dbg !9962

if.else398:                                       ; preds = %land.lhs.true351, %land.lhs.true347, %if.end342
  %393 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9963
  %type399 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %393, i32 0, i32 2, !dbg !9965
  %394 = load i16, i16* %type399, align 8, !dbg !9965
  %conv400 = sext i16 %394 to i32, !dbg !9963
  %cmp401 = icmp eq i32 %conv400, 3, !dbg !9966
  br i1 %cmp401, label %if.then403, label %if.end406, !dbg !9967

if.then403:                                       ; preds = %if.else398
  %395 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9968
  %mode404 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %395, i32 0, i32 7, !dbg !9970
  %396 = load i32, i32* %mode404, align 4, !dbg !9971
  %and405 = and i32 %396, -8194, !dbg !9971
  store i32 %and405, i32* %mode404, align 4, !dbg !9971
  br label %if.end406, !dbg !9972

if.end406:                                        ; preds = %if.then403, %if.else398
  br label %if.end407

if.end407:                                        ; preds = %if.end406, %if.end397
  store i32 0, i32* %c, align 4, !dbg !9973
  br label %for.cond, !dbg !9975

for.cond:                                         ; preds = %for.inc, %if.end407
  %397 = load i32, i32* %c, align 4, !dbg !9976
  %cmp408 = icmp slt i32 %397, 18, !dbg !9978
  br i1 %cmp408, label %for.body, label %for.end, !dbg !9979

for.body:                                         ; preds = %for.cond
  %398 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9980
  %mtex410 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %398, i32 0, i32 69, !dbg !9983
  %399 = load i32, i32* %c, align 4, !dbg !9984
  %idxprom = sext i32 %399 to i64, !dbg !9980
  %arrayidx411 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex410, i64 0, i64 %idxprom, !dbg !9980
  %400 = load %struct.MTex*, %struct.MTex** %arrayidx411, align 8, !dbg !9980
  %tobool412 = icmp ne %struct.MTex* %400, null, !dbg !9980
  br i1 %tobool412, label %land.lhs.true413, label %if.end458, !dbg !9985

land.lhs.true413:                                 ; preds = %for.body
  %401 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9986
  %mtex414 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %401, i32 0, i32 69, !dbg !9987
  %402 = load i32, i32* %c, align 4, !dbg !9988
  %idxprom415 = sext i32 %402 to i64, !dbg !9986
  %arrayidx416 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex414, i64 0, i64 %idxprom415, !dbg !9986
  %403 = load %struct.MTex*, %struct.MTex** %arrayidx416, align 8, !dbg !9986
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %403, i32 0, i32 5, !dbg !9989
  %404 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !9989
  %tobool417 = icmp ne %struct.Tex* %404, null, !dbg !9986
  br i1 %tobool417, label %if.then418, label %if.end458, !dbg !9990

if.then418:                                       ; preds = %land.lhs.true413
  %405 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !9991
  %mtex419 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %405, i32 0, i32 69, !dbg !9994
  %406 = load i32, i32* %c, align 4, !dbg !9995
  %idxprom420 = sext i32 %406 to i64, !dbg !9991
  %arrayidx421 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex419, i64 0, i64 %idxprom420, !dbg !9991
  %407 = load %struct.MTex*, %struct.MTex** %arrayidx421, align 8, !dbg !9991
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %407, i32 0, i32 1, !dbg !9996
  %408 = load i16, i16* %mapto, align 2, !dbg !9996
  %conv422 = sext i16 %408 to i32, !dbg !9991
  %and423 = and i32 %conv422, 1, !dbg !9997
  %tobool424 = icmp ne i32 %and423, 0, !dbg !9997
  br i1 %tobool424, label %if.then425, label %if.end428, !dbg !9998

if.then425:                                       ; preds = %if.then418
  %409 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !9999
  %mode426 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %409, i32 0, i32 7, !dbg !10000
  %410 = load i32, i32* %mode426, align 4, !dbg !10001
  %or427 = or i32 %410, 256, !dbg !10001
  store i32 %or427, i32* %mode426, align 4, !dbg !10001
  br label %if.end428, !dbg !9999

if.end428:                                        ; preds = %if.then425, %if.then418
  %411 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !10002
  %mtex429 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %411, i32 0, i32 69, !dbg !10004
  %412 = load i32, i32* %c, align 4, !dbg !10005
  %idxprom430 = sext i32 %412 to i64, !dbg !10002
  %arrayidx431 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex429, i64 0, i64 %idxprom430, !dbg !10002
  %413 = load %struct.MTex*, %struct.MTex** %arrayidx431, align 8, !dbg !10002
  %mapto432 = getelementptr inbounds %struct.MTex, %struct.MTex* %413, i32 0, i32 1, !dbg !10006
  %414 = load i16, i16* %mapto432, align 2, !dbg !10006
  %conv433 = sext i16 %414 to i32, !dbg !10002
  %and434 = and i32 %conv433, 2, !dbg !10007
  %tobool435 = icmp ne i32 %and434, 0, !dbg !10007
  br i1 %tobool435, label %if.then436, label %if.end439, !dbg !10008

if.then436:                                       ; preds = %if.end428
  %415 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10009
  %mode437 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %415, i32 0, i32 7, !dbg !10010
  %416 = load i32, i32* %mode437, align 4, !dbg !10011
  %or438 = or i32 %416, 65536, !dbg !10011
  store i32 %or438, i32* %mode437, align 4, !dbg !10011
  br label %if.end439, !dbg !10009

if.end439:                                        ; preds = %if.then436, %if.end428
  %417 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !10012
  %tobool440 = icmp ne i8 %417, 0, !dbg !10014
  br i1 %tobool440, label %if.then441, label %if.end457, !dbg !10015

if.then441:                                       ; preds = %if.end439
  %418 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10016
  %osa = getelementptr inbounds %struct.Render, %struct.Render* %418, i32 0, i32 5, !dbg !10019
  %419 = load i16, i16* %osa, align 2, !dbg !10019
  %tobool442 = icmp ne i16 %419, 0, !dbg !10016
  br i1 %tobool442, label %if.then443, label %if.end456, !dbg !10020

if.then443:                                       ; preds = %if.then441
  %420 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !10021
  %mtex444 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %420, i32 0, i32 69, !dbg !10024
  %421 = load i32, i32* %c, align 4, !dbg !10025
  %idxprom445 = sext i32 %421 to i64, !dbg !10021
  %arrayidx446 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex444, i64 0, i64 %idxprom445, !dbg !10021
  %422 = load %struct.MTex*, %struct.MTex** %arrayidx446, align 8, !dbg !10021
  %tex447 = getelementptr inbounds %struct.MTex, %struct.MTex* %422, i32 0, i32 5, !dbg !10026
  %423 = load %struct.Tex*, %struct.Tex** %tex447, align 8, !dbg !10026
  %type448 = getelementptr inbounds %struct.Tex, %struct.Tex* %423, i32 0, i32 32, !dbg !10027
  %424 = load i16, i16* %type448, align 8, !dbg !10027
  %conv449 = sext i16 %424 to i32, !dbg !10021
  %cmp450 = icmp eq i32 %conv449, 8, !dbg !10028
  br i1 %cmp450, label %if.then452, label %if.end455, !dbg !10029

if.then452:                                       ; preds = %if.then443
  %425 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10030
  %mode453 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %425, i32 0, i32 7, !dbg !10031
  %426 = load i32, i32* %mode453, align 4, !dbg !10032
  %or454 = or i32 %426, 512, !dbg !10032
  store i32 %or454, i32* %mode453, align 4, !dbg !10032
  br label %if.end455, !dbg !10030

if.end455:                                        ; preds = %if.then452, %if.then443
  br label %if.end456, !dbg !10033

if.end456:                                        ; preds = %if.end455, %if.then441
  br label %if.end457, !dbg !10034

if.end457:                                        ; preds = %if.end456, %if.end439
  br label %if.end458, !dbg !10035

if.end458:                                        ; preds = %if.end457, %land.lhs.true413, %for.body
  br label %for.inc, !dbg !10036

for.inc:                                          ; preds = %if.end458
  %427 = load i32, i32* %c, align 4, !dbg !10037
  %inc459 = add nsw i32 %427, 1, !dbg !10037
  store i32 %inc459, i32* %c, align 4, !dbg !10037
  br label %for.cond, !dbg !10038, !llvm.loop !10039

for.end:                                          ; preds = %for.cond
  %428 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10041
  %mode460 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %428, i32 0, i32 7, !dbg !10044
  %429 = load i32, i32* %mode460, align 4, !dbg !10044
  %and461 = and i32 %429, 8192, !dbg !10045
  %tobool462 = icmp ne i32 %and461, 0, !dbg !10045
  br i1 %tobool462, label %if.then463, label %if.end473, !dbg !10046

if.then463:                                       ; preds = %for.end
  %430 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10047
  %r464 = getelementptr inbounds %struct.Render, %struct.Render* %430, i32 0, i32 45, !dbg !10050
  %mode465 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r464, i32 0, i32 47, !dbg !10051
  %431 = load i32, i32* %mode465, align 8, !dbg !10051
  %and466 = and i32 %431, 65536, !dbg !10052
  %cmp467 = icmp eq i32 %and466, 0, !dbg !10053
  br i1 %cmp467, label %if.then469, label %if.end472, !dbg !10054

if.then469:                                       ; preds = %if.then463
  %432 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10055
  %mode470 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %432, i32 0, i32 7, !dbg !10056
  %433 = load i32, i32* %mode470, align 4, !dbg !10057
  %and471 = and i32 %433, -8193, !dbg !10057
  store i32 %and471, i32* %mode470, align 4, !dbg !10057
  br label %if.end472, !dbg !10055

if.end472:                                        ; preds = %if.then469, %if.then463
  br label %if.end473, !dbg !10058

if.end473:                                        ; preds = %if.end472, %for.end
  %434 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10059
  %r474 = getelementptr inbounds %struct.Render, %struct.Render* %434, i32 0, i32 45, !dbg !10061
  %mode475 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r474, i32 0, i32 47, !dbg !10062
  %435 = load i32, i32* %mode475, align 8, !dbg !10062
  %and476 = and i32 %435, 2, !dbg !10063
  %tobool477 = icmp ne i32 %and476, 0, !dbg !10063
  br i1 %tobool477, label %if.then478, label %if.end554, !dbg !10064

if.then478:                                       ; preds = %if.end473
  %436 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !10065
  %type479 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %436, i32 0, i32 2, !dbg !10068
  %437 = load i16, i16* %type479, align 8, !dbg !10068
  %conv480 = sext i16 %437 to i32, !dbg !10065
  %cmp481 = icmp eq i32 %conv480, 4, !dbg !10069
  br i1 %cmp481, label %land.lhs.true483, label %if.else493, !dbg !10070

land.lhs.true483:                                 ; preds = %if.then478
  %438 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10071
  %mode484 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %438, i32 0, i32 7, !dbg !10072
  %439 = load i32, i32* %mode484, align 4, !dbg !10072
  %and485 = and i32 %439, 8192, !dbg !10073
  %tobool486 = icmp ne i32 %and485, 0, !dbg !10073
  br i1 %tobool486, label %land.lhs.true487, label %if.else493, !dbg !10074

land.lhs.true487:                                 ; preds = %land.lhs.true483
  %440 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10075
  %ray_samp_method488 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %440, i32 0, i32 46, !dbg !10076
  %441 = load i16, i16* %ray_samp_method488, align 2, !dbg !10076
  %conv489 = sext i16 %441 to i32, !dbg !10075
  %cmp490 = icmp eq i32 %conv489, 0, !dbg !10077
  br i1 %cmp490, label %if.then492, label %if.else493, !dbg !10078

if.then492:                                       ; preds = %land.lhs.true487
  %442 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10079
  call void @init_jitter_plane(%struct.LampRen* %442), !dbg !10081
  br label %if.end510, !dbg !10082

if.else493:                                       ; preds = %land.lhs.true487, %land.lhs.true483, %if.then478
  %443 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !10083
  %type494 = getelementptr inbounds %struct.Lamp, %struct.Lamp* %443, i32 0, i32 2, !dbg !10085
  %444 = load i16, i16* %type494, align 8, !dbg !10085
  %conv495 = sext i16 %444 to i32, !dbg !10083
  %cmp496 = icmp eq i32 %conv495, 2, !dbg !10086
  br i1 %cmp496, label %land.lhs.true498, label %if.end509, !dbg !10087

land.lhs.true498:                                 ; preds = %if.else493
  %445 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10088
  %mode499 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %445, i32 0, i32 7, !dbg !10089
  %446 = load i32, i32* %mode499, align 4, !dbg !10089
  %and500 = and i32 %446, 1, !dbg !10090
  %tobool501 = icmp ne i32 %and500, 0, !dbg !10090
  br i1 %tobool501, label %if.then502, label %if.end509, !dbg !10091

if.then502:                                       ; preds = %land.lhs.true498
  %447 = load %struct.Lamp*, %struct.Lamp** %la, align 8, !dbg !10092
  %bufflag = getelementptr inbounds %struct.Lamp, %struct.Lamp* %447, i32 0, i32 36, !dbg !10094
  %448 = load i8, i8* %bufflag, align 8, !dbg !10094
  %conv503 = zext i8 %448 to i16, !dbg !10092
  %449 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10095
  %bufflag504 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %449, i32 0, i32 37, !dbg !10096
  store i16 %conv503, i16* %bufflag504, align 2, !dbg !10097
  %arraydecay505 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10098
  %450 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10099
  %obmat506 = getelementptr inbounds %struct.Object, %struct.Object* %450, i32 0, i32 47, !dbg !10100
  %arraydecay507 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat506, i64 0, i64 0, !dbg !10099
  call void @copy_m4_m4([4 x float]* %arraydecay505, [4 x float]* %arraydecay507), !dbg !10101
  %451 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10102
  %452 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10103
  %arraydecay508 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !10104
  call void @initshadowbuf(%struct.Render* %451, %struct.LampRen* %452, [4 x float]* %arraydecay508), !dbg !10105
  br label %if.end509, !dbg !10106

if.end509:                                        ; preds = %if.then502, %land.lhs.true498, %if.else493
  br label %if.end510

if.end510:                                        ; preds = %if.end509, %if.then492
  %453 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10107
  %shb = getelementptr inbounds %struct.LampRen, %struct.LampRen* %453, i32 0, i32 57, !dbg !10109
  %454 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10109
  %tobool511 = icmp ne %struct.ShadBuf* %454, null, !dbg !10107
  br i1 %tobool511, label %if.then516, label %lor.lhs.false512, !dbg !10110

lor.lhs.false512:                                 ; preds = %if.end510
  %455 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10111
  %mode513 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %455, i32 0, i32 7, !dbg !10112
  %456 = load i32, i32* %mode513, align 4, !dbg !10112
  %and514 = and i32 %456, 8192, !dbg !10113
  %tobool515 = icmp ne i32 %and514, 0, !dbg !10113
  br i1 %tobool515, label %if.then516, label %if.end553, !dbg !10114

if.then516:                                       ; preds = %lor.lhs.false512, %if.end510
  call void @llvm.dbg.declare(metadata %struct.LampShadowSample** %ls, metadata !10115, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.declare(metadata %struct.LampShadowSubSample** %lss, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.declare(metadata i32* %a, metadata !10121, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata i32* %b517, metadata !10123, metadata !DIExpression()), !dbg !10124
  %457 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10125
  %shadowsamplenr = getelementptr inbounds %struct.Render, %struct.Render* %457, i32 0, i32 42, !dbg !10126
  %arraydecay518 = getelementptr inbounds [1 x i32], [1 x i32]* %shadowsamplenr, i64 0, i64 0, !dbg !10127
  %458 = bitcast i32* %arraydecay518 to i8*, !dbg !10127
  call void @llvm.memset.p0i8.i64(i8* align 8 %458, i8 0, i64 4, i1 false), !dbg !10127
  %459 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10128
  %460 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10129
  %r519 = getelementptr inbounds %struct.Render, %struct.Render* %460, i32 0, i32 45, !dbg !10130
  %threads = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r519, i32 0, i32 14, !dbg !10131
  %461 = load i16, i16* %threads, align 2, !dbg !10131
  %conv520 = sext i16 %461 to i64, !dbg !10129
  %mul521 = mul i64 %conv520, 320, !dbg !10132
  %call522 = call i8* %459(i64 %mul521, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)), !dbg !10128
  %462 = bitcast i8* %call522 to %struct.LampShadowSample*, !dbg !10128
  %463 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10133
  %shadsamp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %463, i32 0, i32 67, !dbg !10134
  store %struct.LampShadowSample* %462, %struct.LampShadowSample** %shadsamp, align 8, !dbg !10135
  %464 = load %struct.LampRen*, %struct.LampRen** %lar, align 8, !dbg !10136
  %shadsamp523 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %464, i32 0, i32 67, !dbg !10137
  %465 = load %struct.LampShadowSample*, %struct.LampShadowSample** %shadsamp523, align 8, !dbg !10137
  store %struct.LampShadowSample* %465, %struct.LampShadowSample** %ls, align 8, !dbg !10138
  store i32 0, i32* %a, align 4, !dbg !10139
  br label %for.cond524, !dbg !10141

for.cond524:                                      ; preds = %for.inc549, %if.then516
  %466 = load i32, i32* %a, align 4, !dbg !10142
  %467 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10144
  %r525 = getelementptr inbounds %struct.Render, %struct.Render* %467, i32 0, i32 45, !dbg !10145
  %threads526 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r525, i32 0, i32 14, !dbg !10146
  %468 = load i16, i16* %threads526, align 2, !dbg !10146
  %conv527 = sext i16 %468 to i32, !dbg !10144
  %cmp528 = icmp slt i32 %466, %conv527, !dbg !10147
  br i1 %cmp528, label %for.body530, label %for.end552, !dbg !10148

for.body530:                                      ; preds = %for.cond524
  %469 = load %struct.LampShadowSample*, %struct.LampShadowSample** %ls, align 8, !dbg !10149
  %s = getelementptr inbounds %struct.LampShadowSample, %struct.LampShadowSample* %469, i32 0, i32 0, !dbg !10151
  %arraydecay531 = getelementptr inbounds [16 x %struct.LampShadowSubSample], [16 x %struct.LampShadowSubSample]* %s, i64 0, i64 0, !dbg !10149
  store %struct.LampShadowSubSample* %arraydecay531, %struct.LampShadowSubSample** %lss, align 8, !dbg !10152
  store i32 0, i32* %b517, align 4, !dbg !10153
  br label %for.cond532, !dbg !10155

for.cond532:                                      ; preds = %for.inc546, %for.body530
  %470 = load i32, i32* %b517, align 4, !dbg !10156
  %471 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10158
  %r533 = getelementptr inbounds %struct.Render, %struct.Render* %471, i32 0, i32 45, !dbg !10159
  %osa534 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r533, i32 0, i32 54, !dbg !10160
  %472 = load i16, i16* %osa534, align 2, !dbg !10160
  %conv535 = sext i16 %472 to i32, !dbg !10158
  %cmp536 = icmp slt i32 %470, %conv535, !dbg !10161
  br i1 %cmp536, label %for.body538, label %for.end548, !dbg !10162

for.body538:                                      ; preds = %for.cond532
  %473 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10163
  %samplenr = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %473, i32 0, i32 0, !dbg !10165
  store i32 -1, i32* %samplenr, align 4, !dbg !10166
  %474 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10167
  %shadfac = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %474, i32 0, i32 1, !dbg !10168
  %arrayidx539 = getelementptr inbounds [4 x float], [4 x float]* %shadfac, i64 0, i64 0, !dbg !10167
  store float 1.000000e+00, float* %arrayidx539, align 4, !dbg !10169
  %475 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10170
  %shadfac540 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %475, i32 0, i32 1, !dbg !10171
  %arrayidx541 = getelementptr inbounds [4 x float], [4 x float]* %shadfac540, i64 0, i64 1, !dbg !10170
  store float 1.000000e+00, float* %arrayidx541, align 4, !dbg !10172
  %476 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10173
  %shadfac542 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %476, i32 0, i32 1, !dbg !10174
  %arrayidx543 = getelementptr inbounds [4 x float], [4 x float]* %shadfac542, i64 0, i64 2, !dbg !10173
  store float 1.000000e+00, float* %arrayidx543, align 4, !dbg !10175
  %477 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10176
  %shadfac544 = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %477, i32 0, i32 1, !dbg !10177
  %arrayidx545 = getelementptr inbounds [4 x float], [4 x float]* %shadfac544, i64 0, i64 3, !dbg !10176
  store float 1.000000e+00, float* %arrayidx545, align 4, !dbg !10178
  br label %for.inc546, !dbg !10179

for.inc546:                                       ; preds = %for.body538
  %478 = load i32, i32* %b517, align 4, !dbg !10180
  %inc547 = add nsw i32 %478, 1, !dbg !10180
  store i32 %inc547, i32* %b517, align 4, !dbg !10180
  %479 = load %struct.LampShadowSubSample*, %struct.LampShadowSubSample** %lss, align 8, !dbg !10181
  %incdec.ptr = getelementptr inbounds %struct.LampShadowSubSample, %struct.LampShadowSubSample* %479, i32 1, !dbg !10181
  store %struct.LampShadowSubSample* %incdec.ptr, %struct.LampShadowSubSample** %lss, align 8, !dbg !10181
  br label %for.cond532, !dbg !10182, !llvm.loop !10183

for.end548:                                       ; preds = %for.cond532
  br label %for.inc549, !dbg !10185

for.inc549:                                       ; preds = %for.end548
  %480 = load i32, i32* %a, align 4, !dbg !10186
  %inc550 = add nsw i32 %480, 1, !dbg !10186
  store i32 %inc550, i32* %a, align 4, !dbg !10186
  %481 = load %struct.LampShadowSample*, %struct.LampShadowSample** %ls, align 8, !dbg !10187
  %incdec.ptr551 = getelementptr inbounds %struct.LampShadowSample, %struct.LampShadowSample* %481, i32 1, !dbg !10187
  store %struct.LampShadowSample* %incdec.ptr551, %struct.LampShadowSample** %ls, align 8, !dbg !10187
  br label %for.cond524, !dbg !10188, !llvm.loop !10189

for.end552:                                       ; preds = %for.cond524
  br label %if.end553, !dbg !10191

if.end553:                                        ; preds = %for.end552, %lor.lhs.false512
  br label %if.end554, !dbg !10192

if.end554:                                        ; preds = %if.end553, %if.end473
  %482 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10193
  store %struct.GroupObject* %482, %struct.GroupObject** %retval, align 8, !dbg !10194
  br label %return, !dbg !10194

return:                                           ; preds = %if.end554, %if.then5, %if.then
  %483 = load %struct.GroupObject*, %struct.GroupObject** %retval, align 8, !dbg !10195
  ret %struct.GroupObject* %483, !dbg !10195
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @render_object_type(i16 signext %type) #0 !dbg !10196 {
entry:
  %type.addr = alloca i16, align 2
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !10199, metadata !DIExpression()), !dbg !10200
  %0 = load i16, i16* %type.addr, align 2, !dbg !10201
  %conv = sext i16 %0 to i32, !dbg !10201
  %cmp = icmp sge i32 %conv, 1, !dbg !10201
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10201

land.rhs:                                         ; preds = %entry
  %1 = load i16, i16* %type.addr, align 2, !dbg !10201
  %conv2 = sext i16 %1 to i32, !dbg !10201
  %cmp3 = icmp sle i32 %conv2, 5, !dbg !10201
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !10202
  %land.ext = zext i1 %2 to i32, !dbg !10201
  ret i32 %land.ext, !dbg !10203
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_render_object(%struct.Render* %re, %struct.Object* %ob, %struct.Object* %par, %struct.DupliObject* %dob, [4 x float]* %omat, i32 %timeoffset) #0 !dbg !10204 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %par.addr = alloca %struct.Object*, align 8
  %dob.addr = alloca %struct.DupliObject*, align 8
  %omat.addr = alloca [4 x float]*, align 8
  %timeoffset.addr = alloca i32, align 4
  %obr = alloca %struct.ObjectRen*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %show_emitter = alloca i32, align 4
  %allow_render = alloca i32, align 4
  %index = alloca i32, align 4
  %psysindex = alloca i32, align 4
  %i = alloca i32, align 4
  %ma = alloca %struct.Material*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10205, metadata !DIExpression()), !dbg !10206
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10207, metadata !DIExpression()), !dbg !10208
  store %struct.Object* %par, %struct.Object** %par.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %par.addr, metadata !10209, metadata !DIExpression()), !dbg !10210
  store %struct.DupliObject* %dob, %struct.DupliObject** %dob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DupliObject** %dob.addr, metadata !10211, metadata !DIExpression()), !dbg !10212
  store [4 x float]* %omat, [4 x float]** %omat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %omat.addr, metadata !10213, metadata !DIExpression()), !dbg !10214
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !10215, metadata !DIExpression()), !dbg !10216
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !10217, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !10219, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !10221, metadata !DIExpression()), !dbg !10222
  call void @llvm.dbg.declare(metadata i32* %show_emitter, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata i32* %allow_render, metadata !10225, metadata !DIExpression()), !dbg !10226
  store i32 1, i32* %allow_render, align 4, !dbg !10226
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10227, metadata !DIExpression()), !dbg !10228
  call void @llvm.dbg.declare(metadata i32* %psysindex, metadata !10229, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10231, metadata !DIExpression()), !dbg !10232
  %0 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10233
  %tobool = icmp ne %struct.DupliObject* %0, null, !dbg !10234
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10234

cond.true:                                        ; preds = %entry
  %1 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10235
  %persistent_id = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %1, i32 0, i32 9, !dbg !10236
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %persistent_id, i64 0, i64 0, !dbg !10235
  %2 = load i32, i32* %arrayidx, align 8, !dbg !10235
  br label %cond.end, !dbg !10234

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !10234
  store i32 %cond, i32* %index, align 4, !dbg !10237
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10238
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 109, !dbg !10240
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !10241
  %4 = load i8*, i8** %first, align 8, !dbg !10241
  %tobool1 = icmp ne i8* %4, null, !dbg !10238
  br i1 %tobool1, label %if.then, label %if.end11, !dbg !10242

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %show_emitter, align 4, !dbg !10243
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10245
  %particlesystem2 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 109, !dbg !10247
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem2, i32 0, i32 0, !dbg !10248
  %6 = load i8*, i8** %first3, align 8, !dbg !10248
  %7 = bitcast i8* %6 to %struct.ParticleSystem*, !dbg !10245
  store %struct.ParticleSystem* %7, %struct.ParticleSystem** %psys, align 8, !dbg !10249
  br label %for.cond, !dbg !10250

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10251
  %tobool4 = icmp ne %struct.ParticleSystem* %8, null, !dbg !10253
  br i1 %tobool4, label %for.body, label %for.end, !dbg !10253

for.body:                                         ; preds = %for.cond
  %9 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10254
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %9, i32 0, i32 2, !dbg !10256
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10256
  %draw = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 15, !dbg !10257
  %11 = load i32, i32* %draw, align 8, !dbg !10257
  %and = and i32 %11, 8, !dbg !10258
  %12 = load i32, i32* %show_emitter, align 4, !dbg !10259
  %add = add nsw i32 %12, %and, !dbg !10259
  store i32 %add, i32* %show_emitter, align 4, !dbg !10259
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10260
  %r = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 45, !dbg !10262
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !10263
  %14 = load i32, i32* %scemode, align 4, !dbg !10263
  %and5 = and i32 %14, 524288, !dbg !10264
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10264
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !10265

if.then7:                                         ; preds = %for.body
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10266
  %16 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10267
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10268
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 32, !dbg !10269
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !10268
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10270
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 35, !dbg !10271
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !10270
  %19 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10272
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %19, i32 0, i32 13, !dbg !10273
  %20 = load i32, i32* %winx, align 4, !dbg !10273
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10274
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 14, !dbg !10275
  %22 = load i32, i32* %winy, align 8, !dbg !10275
  %23 = load i32, i32* %timeoffset.addr, align 4, !dbg !10276
  call void @psys_render_set(%struct.Object* %15, %struct.ParticleSystem* %16, [4 x float]* %arraydecay, [4 x float]* %arraydecay8, i32 %20, i32 %22, i32 %23), !dbg !10277
  br label %if.end, !dbg !10277

if.end:                                           ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !10278

for.inc:                                          ; preds = %if.end
  %24 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10279
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %24, i32 0, i32 0, !dbg !10280
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !10280
  store %struct.ParticleSystem* %25, %struct.ParticleSystem** %psys, align 8, !dbg !10281
  br label %for.cond, !dbg !10282, !llvm.loop !10283

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %show_emitter, align 4, !dbg !10285
  %cmp = icmp eq i32 %26, 0, !dbg !10287
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !10288

if.then9:                                         ; preds = %for.end
  store i32 0, i32* %allow_render, align 4, !dbg !10289
  br label %if.end10, !dbg !10290

if.end10:                                         ; preds = %if.then9, %for.end
  br label %if.end11, !dbg !10291

if.end11:                                         ; preds = %if.end10, %cond.end
  %27 = load i32, i32* %allow_render, align 4, !dbg !10292
  %tobool12 = icmp ne i32 %27, 0, !dbg !10292
  br i1 %tobool12, label %if.then13, label %if.end49, !dbg !10294

if.then13:                                        ; preds = %if.end11
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10295
  %29 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10297
  %30 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !10298
  %31 = load i32, i32* %index, align 4, !dbg !10299
  %32 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10300
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %32, i32 0, i32 52, !dbg !10301
  %33 = load i32, i32* %lay, align 8, !dbg !10301
  %call = call %struct.ObjectRen* @RE_addRenderObject(%struct.Render* %28, %struct.Object* %29, %struct.Object* %30, i32 %31, i32 0, i32 %33), !dbg !10302
  store %struct.ObjectRen* %call, %struct.ObjectRen** %obr, align 8, !dbg !10303
  %34 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10304
  %tobool14 = icmp ne %struct.DupliObject* %34, null, !dbg !10304
  br i1 %tobool14, label %land.lhs.true, label %lor.lhs.false, !dbg !10306

land.lhs.true:                                    ; preds = %if.then13
  %35 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10307
  %animated = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %35, i32 0, i32 8, !dbg !10308
  %36 = load i8, i8* %animated, align 1, !dbg !10308
  %tobool15 = icmp ne i8 %36, 0, !dbg !10307
  br i1 %tobool15, label %lor.lhs.false, label %if.then18, !dbg !10309

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then13
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10310
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 55, !dbg !10311
  %38 = load i16, i16* %transflag, align 8, !dbg !10311
  %conv = sext i16 %38 to i32, !dbg !10310
  %and16 = and i32 %conv, 4096, !dbg !10312
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10312
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !10313

if.then18:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %39 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10314
  %flag = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %39, i32 0, i32 7, !dbg !10316
  %40 = load i32, i32* %flag, align 8, !dbg !10317
  %or = or i32 %40, 1, !dbg !10317
  store i32 %or, i32* %flag, align 8, !dbg !10317
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10318
  %obmat = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %41, i32 0, i32 28, !dbg !10319
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10318
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10320
  %obmat20 = getelementptr inbounds %struct.Object, %struct.Object* %42, i32 0, i32 47, !dbg !10321
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat20, i64 0, i64 0, !dbg !10320
  call void @copy_m4_m4([4 x float]* %arraydecay19, [4 x float]* %arraydecay21), !dbg !10322
  br label %if.end22, !dbg !10323

if.end22:                                         ; preds = %if.then18, %lor.lhs.false
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10324
  %44 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10325
  %45 = load i32, i32* %timeoffset.addr, align 4, !dbg !10326
  call void @init_render_object_data(%struct.Render* %43, %struct.ObjectRen* %44, i32 %45), !dbg !10327
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10328
  %transflag23 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 55, !dbg !10330
  %47 = load i16, i16* %transflag23, align 8, !dbg !10330
  %conv24 = sext i16 %47 to i32, !dbg !10328
  %and25 = and i32 %conv24, 4096, !dbg !10331
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10331
  br i1 %tobool26, label %if.else, label %if.then27, !dbg !10332

if.then27:                                        ; preds = %if.end22
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10333
  %49 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10335
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10336
  %51 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !10337
  %52 = load i32, i32* %index, align 4, !dbg !10338
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10339
  %lay28 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 52, !dbg !10340
  %54 = load i32, i32* %lay28, align 8, !dbg !10340
  %call29 = call %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render* %48, %struct.ObjectRen* %49, %struct.Object* %50, %struct.Object* %51, i32 %52, i32 0, [4 x float]* null, i32 %54), !dbg !10341
  store %struct.ObjectInstanceRen* %call29, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10342
  %55 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10343
  %tobool30 = icmp ne %struct.DupliObject* %55, null, !dbg !10343
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10345

if.then31:                                        ; preds = %if.then27
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10346
  %57 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10347
  %58 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10348
  %59 = load [4 x float]*, [4 x float]** %omat.addr, align 8, !dbg !10349
  call void @set_dupli_tex_mat(%struct.Render* %56, %struct.ObjectInstanceRen* %57, %struct.DupliObject* %58, [4 x float]* %59), !dbg !10350
  br label %if.end32, !dbg !10350

if.end32:                                         ; preds = %if.then31, %if.then27
  br label %if.end33, !dbg !10351

if.else:                                          ; preds = %if.end22
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10352
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10353
  %62 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10354
  call void @find_dupli_instances(%struct.Render* %60, %struct.ObjectRen* %61, %struct.DupliObject* %62), !dbg !10355
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end32
  store i32 1, i32* %i, align 4, !dbg !10356
  br label %for.cond34, !dbg !10358

for.cond34:                                       ; preds = %for.inc47, %if.end33
  %63 = load i32, i32* %i, align 4, !dbg !10359
  %64 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10361
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 31, !dbg !10362
  %65 = load i32, i32* %totcol, align 8, !dbg !10362
  %cmp35 = icmp sle i32 %63, %65, !dbg !10363
  br i1 %cmp35, label %for.body37, label %for.end48, !dbg !10364

for.body37:                                       ; preds = %for.cond34
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !10365, metadata !DIExpression()), !dbg !10367
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10368
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10369
  %68 = load i32, i32* %i, align 4, !dbg !10370
  %conv38 = trunc i32 %68 to i16, !dbg !10370
  %call39 = call %struct.Material* @give_render_material(%struct.Render* %66, %struct.Object* %67, i16 signext %conv38), !dbg !10371
  store %struct.Material* %call39, %struct.Material** %ma, align 8, !dbg !10367
  %69 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10372
  %tobool40 = icmp ne %struct.Material* %69, null, !dbg !10372
  br i1 %tobool40, label %land.lhs.true41, label %if.end46, !dbg !10374

land.lhs.true41:                                  ; preds = %for.body37
  %70 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10375
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %70, i32 0, i32 2, !dbg !10376
  %71 = load i16, i16* %material_type, align 8, !dbg !10376
  %conv42 = sext i16 %71 to i32, !dbg !10375
  %cmp43 = icmp eq i32 %conv42, 2, !dbg !10377
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !10378

if.then45:                                        ; preds = %land.lhs.true41
  %72 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10379
  %73 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10380
  %74 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10381
  call void @add_volume(%struct.Render* %72, %struct.ObjectRen* %73, %struct.Material* %74), !dbg !10382
  br label %if.end46, !dbg !10382

if.end46:                                         ; preds = %if.then45, %land.lhs.true41, %for.body37
  br label %for.inc47, !dbg !10383

for.inc47:                                        ; preds = %if.end46
  %75 = load i32, i32* %i, align 4, !dbg !10384
  %inc = add nsw i32 %75, 1, !dbg !10384
  store i32 %inc, i32* %i, align 4, !dbg !10384
  br label %for.cond34, !dbg !10385, !llvm.loop !10386

for.end48:                                        ; preds = %for.cond34
  br label %if.end49, !dbg !10388

if.end49:                                         ; preds = %for.end48, %if.end11
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10389
  %particlesystem50 = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 109, !dbg !10391
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem50, i32 0, i32 0, !dbg !10392
  %77 = load i8*, i8** %first51, align 8, !dbg !10392
  %tobool52 = icmp ne i8* %77, null, !dbg !10389
  br i1 %tobool52, label %if.then53, label %if.end111, !dbg !10393

if.then53:                                        ; preds = %if.end49
  store i32 1, i32* %psysindex, align 4, !dbg !10394
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10396
  %particlesystem54 = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 109, !dbg !10398
  %first55 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem54, i32 0, i32 0, !dbg !10399
  %79 = load i8*, i8** %first55, align 8, !dbg !10399
  %80 = bitcast i8* %79 to %struct.ParticleSystem*, !dbg !10396
  store %struct.ParticleSystem* %80, %struct.ParticleSystem** %psys, align 8, !dbg !10400
  br label %for.cond56, !dbg !10401

for.cond56:                                       ; preds = %for.inc107, %if.then53
  %81 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10402
  %tobool57 = icmp ne %struct.ParticleSystem* %81, null, !dbg !10404
  br i1 %tobool57, label %for.body58, label %for.end110, !dbg !10404

for.body58:                                       ; preds = %for.cond56
  %82 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10405
  %83 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10408
  %call59 = call i32 @psys_check_enabled(%struct.Object* %82, %struct.ParticleSystem* %83), !dbg !10409
  %tobool60 = icmp ne i32 %call59, 0, !dbg !10409
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !10410

if.then61:                                        ; preds = %for.body58
  br label %for.inc107, !dbg !10411

if.end62:                                         ; preds = %for.body58
  %84 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10412
  %85 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10413
  %86 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !10414
  %87 = load i32, i32* %index, align 4, !dbg !10415
  %88 = load i32, i32* %psysindex, align 4, !dbg !10416
  %89 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10417
  %lay63 = getelementptr inbounds %struct.Object, %struct.Object* %89, i32 0, i32 52, !dbg !10418
  %90 = load i32, i32* %lay63, align 8, !dbg !10418
  %call64 = call %struct.ObjectRen* @RE_addRenderObject(%struct.Render* %84, %struct.Object* %85, %struct.Object* %86, i32 %87, i32 %88, i32 %90), !dbg !10419
  store %struct.ObjectRen* %call64, %struct.ObjectRen** %obr, align 8, !dbg !10420
  %91 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10421
  %tobool65 = icmp ne %struct.DupliObject* %91, null, !dbg !10421
  br i1 %tobool65, label %land.lhs.true66, label %lor.lhs.false69, !dbg !10423

land.lhs.true66:                                  ; preds = %if.end62
  %92 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10424
  %animated67 = getelementptr inbounds %struct.DupliObject, %struct.DupliObject* %92, i32 0, i32 8, !dbg !10425
  %93 = load i8, i8* %animated67, align 1, !dbg !10425
  %tobool68 = icmp ne i8 %93, 0, !dbg !10424
  br i1 %tobool68, label %lor.lhs.false69, label %if.then74, !dbg !10426

lor.lhs.false69:                                  ; preds = %land.lhs.true66, %if.end62
  %94 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10427
  %transflag70 = getelementptr inbounds %struct.Object, %struct.Object* %94, i32 0, i32 55, !dbg !10428
  %95 = load i16, i16* %transflag70, align 8, !dbg !10428
  %conv71 = sext i16 %95 to i32, !dbg !10427
  %and72 = and i32 %conv71, 4096, !dbg !10429
  %tobool73 = icmp ne i32 %and72, 0, !dbg !10429
  br i1 %tobool73, label %if.then74, label %if.end81, !dbg !10430

if.then74:                                        ; preds = %lor.lhs.false69, %land.lhs.true66
  %96 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10431
  %flag75 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %96, i32 0, i32 7, !dbg !10433
  %97 = load i32, i32* %flag75, align 8, !dbg !10434
  %or76 = or i32 %97, 1, !dbg !10434
  store i32 %or76, i32* %flag75, align 8, !dbg !10434
  %98 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10435
  %obmat77 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %98, i32 0, i32 28, !dbg !10436
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat77, i64 0, i64 0, !dbg !10435
  %99 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10437
  %obmat79 = getelementptr inbounds %struct.Object, %struct.Object* %99, i32 0, i32 47, !dbg !10438
  %arraydecay80 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat79, i64 0, i64 0, !dbg !10437
  call void @copy_m4_m4([4 x float]* %arraydecay78, [4 x float]* %arraydecay80), !dbg !10439
  br label %if.end81, !dbg !10440

if.end81:                                         ; preds = %if.then74, %lor.lhs.false69
  %100 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10441
  %tobool82 = icmp ne %struct.DupliObject* %100, null, !dbg !10441
  br i1 %tobool82, label %if.then83, label %if.end86, !dbg !10443

if.then83:                                        ; preds = %if.end81
  %101 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10444
  %flag84 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %101, i32 0, i32 25, !dbg !10445
  %102 = load i32, i32* %flag84, align 4, !dbg !10446
  %or85 = or i32 %102, 128, !dbg !10446
  store i32 %or85, i32* %flag84, align 4, !dbg !10446
  br label %if.end86, !dbg !10444

if.end86:                                         ; preds = %if.then83, %if.end81
  %103 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10447
  %104 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10448
  %105 = load i32, i32* %timeoffset.addr, align 4, !dbg !10449
  call void @init_render_object_data(%struct.Render* %103, %struct.ObjectRen* %104, i32 %105), !dbg !10450
  %106 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10451
  %r87 = getelementptr inbounds %struct.Render, %struct.Render* %106, i32 0, i32 45, !dbg !10453
  %scemode88 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r87, i32 0, i32 46, !dbg !10454
  %107 = load i32, i32* %scemode88, align 4, !dbg !10454
  %and89 = and i32 %107, 524288, !dbg !10455
  %tobool90 = icmp ne i32 %and89, 0, !dbg !10455
  br i1 %tobool90, label %if.end92, label %if.then91, !dbg !10456

if.then91:                                        ; preds = %if.end86
  %108 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10457
  %109 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10458
  call void @psys_render_restore(%struct.Object* %108, %struct.ParticleSystem* %109), !dbg !10459
  br label %if.end92, !dbg !10459

if.end92:                                         ; preds = %if.then91, %if.end86
  %110 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10460
  %flag93 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %110, i32 0, i32 25, !dbg !10461
  %111 = load i32, i32* %flag93, align 4, !dbg !10462
  %and94 = and i32 %111, -129, !dbg !10462
  store i32 %and94, i32* %flag93, align 4, !dbg !10462
  %112 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10463
  %transflag95 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 55, !dbg !10465
  %113 = load i16, i16* %transflag95, align 8, !dbg !10465
  %conv96 = sext i16 %113 to i32, !dbg !10463
  %and97 = and i32 %conv96, 4096, !dbg !10466
  %tobool98 = icmp ne i32 %and97, 0, !dbg !10466
  br i1 %tobool98, label %if.else105, label %if.then99, !dbg !10467

if.then99:                                        ; preds = %if.end92
  %114 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10468
  %115 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10470
  %116 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10471
  %117 = load %struct.Object*, %struct.Object** %par.addr, align 8, !dbg !10472
  %118 = load i32, i32* %index, align 4, !dbg !10473
  %119 = load i32, i32* %psysindex, align 4, !dbg !10474
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10475
  %lay100 = getelementptr inbounds %struct.Object, %struct.Object* %120, i32 0, i32 52, !dbg !10476
  %121 = load i32, i32* %lay100, align 8, !dbg !10476
  %call101 = call %struct.ObjectInstanceRen* @RE_addRenderInstance(%struct.Render* %114, %struct.ObjectRen* %115, %struct.Object* %116, %struct.Object* %117, i32 %118, i32 %119, [4 x float]* null, i32 %121), !dbg !10477
  store %struct.ObjectInstanceRen* %call101, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10478
  %122 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10479
  %tobool102 = icmp ne %struct.DupliObject* %122, null, !dbg !10479
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !10481

if.then103:                                       ; preds = %if.then99
  %123 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10482
  %124 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !10483
  %125 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10484
  %126 = load [4 x float]*, [4 x float]** %omat.addr, align 8, !dbg !10485
  call void @set_dupli_tex_mat(%struct.Render* %123, %struct.ObjectInstanceRen* %124, %struct.DupliObject* %125, [4 x float]* %126), !dbg !10486
  br label %if.end104, !dbg !10486

if.end104:                                        ; preds = %if.then103, %if.then99
  br label %if.end106, !dbg !10487

if.else105:                                       ; preds = %if.end92
  %127 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10488
  %128 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !10489
  %129 = load %struct.DupliObject*, %struct.DupliObject** %dob.addr, align 8, !dbg !10490
  call void @find_dupli_instances(%struct.Render* %127, %struct.ObjectRen* %128, %struct.DupliObject* %129), !dbg !10491
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.end104
  br label %for.inc107, !dbg !10492

for.inc107:                                       ; preds = %if.end106, %if.then61
  %130 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10493
  %next108 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %130, i32 0, i32 0, !dbg !10494
  %131 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next108, align 8, !dbg !10494
  store %struct.ParticleSystem* %131, %struct.ParticleSystem** %psys, align 8, !dbg !10495
  %132 = load i32, i32* %psysindex, align 4, !dbg !10496
  %inc109 = add nsw i32 %132, 1, !dbg !10496
  store i32 %inc109, i32* %psysindex, align 4, !dbg !10496
  br label %for.cond56, !dbg !10497, !llvm.loop !10498

for.end110:                                       ; preds = %for.cond56
  br label %if.end111, !dbg !10500

if.end111:                                        ; preds = %for.end110, %if.end49
  ret void, !dbg !10501
}

declare dso_local double @PIL_check_seconds_timer() #4

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #4

declare dso_local void @init_jitter_plane(%struct.LampRen*) #4

declare dso_local void @InitSunSky(%struct.SunSky*, float, float*, float, float, float, float, float, float, i16 signext, float, float) #4

declare dso_local void @InitAtmosphere(%struct.SunSky*, float, float, float, float, float, float) #4

; Function Attrs: nounwind
declare dso_local float @cosf(float) #2

declare dso_local %struct.CurveMapping* @curvemapping_copy(%struct.CurveMapping*) #4

declare dso_local void @curvemapping_initialize(%struct.CurveMapping*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @saacos(float %fac) #0 !dbg !10502 {
entry:
  %retval = alloca float, align 4
  %fac.addr = alloca float, align 4
  store float %fac, float* %fac.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fac.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  %0 = load float, float* %fac.addr, align 4, !dbg !10508
  %cmp = fcmp ole float %0, -1.000000e+00, !dbg !10508
  br i1 %cmp, label %if.then, label %if.else, !dbg !10510

if.then:                                          ; preds = %entry
  store float 0x400921FB60000000, float* %retval, align 4, !dbg !10511
  br label %return, !dbg !10511

if.else:                                          ; preds = %entry
  %1 = load float, float* %fac.addr, align 4, !dbg !10512
  %cmp1 = fcmp oge float %1, 1.000000e+00, !dbg !10512
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !10514

if.then2:                                         ; preds = %if.else
  store float 0.000000e+00, float* %retval, align 4, !dbg !10515
  br label %return, !dbg !10515

if.else3:                                         ; preds = %if.else
  %2 = load float, float* %fac.addr, align 4, !dbg !10516
  %call = call float @acosf(float %2) #5, !dbg !10517
  store float %call, float* %retval, align 4, !dbg !10518
  br label %return, !dbg !10518

return:                                           ; preds = %if.else3, %if.then2, %if.then
  %3 = load float, float* %retval, align 4, !dbg !10519
  ret float %3, !dbg !10519
}

; Function Attrs: nounwind
declare dso_local float @sinf(float) #2

declare dso_local void @mul_m3_v3([3 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @initshadowbuf(%struct.Render* %re, %struct.LampRen* %lar, [4 x float]* %mat) #0 !dbg !10520 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %lar.addr = alloca %struct.LampRen*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %shb = alloca %struct.ShadBuf*, align 8
  %viewinv = alloca [4 x [4 x float]], align 16
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  store %struct.LampRen* %lar, %struct.LampRen** %lar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.LampRen** %lar.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.declare(metadata %struct.ShadBuf** %shb, metadata !10529, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %viewinv, metadata !10531, metadata !DIExpression()), !dbg !10532
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10533
  %call = call i8* %0(i64 280, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)), !dbg !10533
  %1 = bitcast i8* %call to %struct.ShadBuf*, !dbg !10534
  store %struct.ShadBuf* %1, %struct.ShadBuf** %shb, align 8, !dbg !10535
  %2 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10536
  %3 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10537
  %shb1 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %3, i32 0, i32 57, !dbg !10538
  store %struct.ShadBuf* %2, %struct.ShadBuf** %shb1, align 8, !dbg !10539
  %4 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10540
  %cmp = icmp eq %struct.ShadBuf* %4, null, !dbg !10542
  br i1 %cmp, label %if.then, label %if.end, !dbg !10543

if.then:                                          ; preds = %entry
  br label %return, !dbg !10544

if.end:                                           ; preds = %entry
  %5 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10545
  %co = getelementptr inbounds %struct.LampRen, %struct.LampRen* %5, i32 0, i32 5, !dbg !10545
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10545
  %6 = load float, float* %arraydecay, align 4, !dbg !10545
  %conv = fptosi float %6 to i32, !dbg !10545
  %7 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10545
  %co2 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %7, i32 0, i32 13, !dbg !10545
  %arraydecay3 = getelementptr inbounds [3 x i32], [3 x i32]* %co2, i64 0, i64 0, !dbg !10545
  store i32 %conv, i32* %arraydecay3, align 4, !dbg !10545
  %8 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10545
  %co4 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %8, i32 0, i32 5, !dbg !10545
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %co4, i64 0, i64 0, !dbg !10545
  %add.ptr = getelementptr inbounds float, float* %arraydecay5, i64 1, !dbg !10545
  %9 = load float, float* %add.ptr, align 4, !dbg !10545
  %conv6 = fptosi float %9 to i32, !dbg !10545
  %10 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10545
  %co7 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %10, i32 0, i32 13, !dbg !10545
  %arraydecay8 = getelementptr inbounds [3 x i32], [3 x i32]* %co7, i64 0, i64 0, !dbg !10545
  %add.ptr9 = getelementptr inbounds i32, i32* %arraydecay8, i64 1, !dbg !10545
  store i32 %conv6, i32* %add.ptr9, align 4, !dbg !10545
  %11 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10545
  %co10 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %11, i32 0, i32 5, !dbg !10545
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !10545
  %add.ptr12 = getelementptr inbounds float, float* %arraydecay11, i64 2, !dbg !10545
  %12 = load float, float* %add.ptr12, align 4, !dbg !10545
  %conv13 = fptosi float %12 to i32, !dbg !10545
  %13 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10545
  %co14 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %13, i32 0, i32 13, !dbg !10545
  %arraydecay15 = getelementptr inbounds [3 x i32], [3 x i32]* %co14, i64 0, i64 0, !dbg !10545
  %add.ptr16 = getelementptr inbounds i32, i32* %arraydecay15, i64 2, !dbg !10545
  store i32 %conv13, i32* %add.ptr16, align 4, !dbg !10545
  %14 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10547
  %bufsize = getelementptr inbounds %struct.LampRen, %struct.LampRen* %14, i32 0, i32 31, !dbg !10548
  %15 = load i16, i16* %bufsize, align 8, !dbg !10548
  %conv17 = sext i16 %15 to i32, !dbg !10547
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10549
  %r = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 45, !dbg !10550
  %size = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 30, !dbg !10551
  %17 = load i16, i16* %size, align 2, !dbg !10551
  %conv18 = sext i16 %17 to i32, !dbg !10549
  %mul = mul nsw i32 %conv17, %conv18, !dbg !10552
  %div = sdiv i32 %mul, 100, !dbg !10553
  %18 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10554
  %size19 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %18, i32 0, i32 14, !dbg !10555
  store i32 %div, i32* %size19, align 8, !dbg !10556
  %19 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10557
  %size20 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %19, i32 0, i32 14, !dbg !10559
  %20 = load i32, i32* %size20, align 8, !dbg !10559
  %cmp21 = icmp slt i32 %20, 512, !dbg !10560
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !10561

if.then23:                                        ; preds = %if.end
  %21 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10562
  %size24 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %21, i32 0, i32 14, !dbg !10563
  store i32 512, i32* %size24, align 8, !dbg !10564
  br label %if.end35, !dbg !10562

if.else:                                          ; preds = %if.end
  %22 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10565
  %size25 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %22, i32 0, i32 14, !dbg !10567
  %23 = load i32, i32* %size25, align 8, !dbg !10567
  %24 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10568
  %bufsize26 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %24, i32 0, i32 31, !dbg !10569
  %25 = load i16, i16* %bufsize26, align 8, !dbg !10569
  %conv27 = sext i16 %25 to i32, !dbg !10568
  %cmp28 = icmp sgt i32 %23, %conv27, !dbg !10570
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !10571

if.then30:                                        ; preds = %if.else
  %26 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10572
  %bufsize31 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %26, i32 0, i32 31, !dbg !10573
  %27 = load i16, i16* %bufsize31, align 8, !dbg !10573
  %conv32 = sext i16 %27 to i32, !dbg !10572
  %28 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10574
  %size33 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %28, i32 0, i32 14, !dbg !10575
  store i32 %conv32, i32* %size33, align 8, !dbg !10576
  br label %if.end34, !dbg !10574

if.end34:                                         ; preds = %if.then30, %if.else
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then23
  %29 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10577
  %size36 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %29, i32 0, i32 14, !dbg !10578
  %30 = load i32, i32* %size36, align 8, !dbg !10579
  %and = and i32 %30, -16, !dbg !10579
  store i32 %and, i32* %size36, align 8, !dbg !10579
  %31 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10580
  %samp = getelementptr inbounds %struct.LampRen, %struct.LampRen* %31, i32 0, i32 32, !dbg !10581
  %32 = load i16, i16* %samp, align 2, !dbg !10581
  %33 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10582
  %samp37 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %33, i32 0, i32 0, !dbg !10583
  store i16 %32, i16* %samp37, align 8, !dbg !10584
  %34 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10585
  %soft = getelementptr inbounds %struct.LampRen, %struct.LampRen* %34, i32 0, i32 33, !dbg !10586
  %35 = load float, float* %soft, align 4, !dbg !10586
  %36 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10587
  %soft38 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %36, i32 0, i32 11, !dbg !10588
  store float %35, float* %soft38, align 4, !dbg !10589
  %37 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10590
  %shadhalostep = getelementptr inbounds %struct.LampRen, %struct.LampRen* %37, i32 0, i32 38, !dbg !10591
  %38 = load i16, i16* %shadhalostep, align 8, !dbg !10591
  %39 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10592
  %shadhalostep39 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %39, i32 0, i32 1, !dbg !10593
  store i16 %38, i16* %shadhalostep39, align 2, !dbg !10594
  %40 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !10595
  call void @normalize_m4([4 x float]* %40), !dbg !10596
  %41 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10597
  %winmat = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %41, i32 0, i32 5, !dbg !10598
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !10597
  %42 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !10599
  %call41 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay40, [4 x float]* %42), !dbg !10600
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !10601
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10602
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %43, i32 0, i32 32, !dbg !10603
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !10602
  %call44 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay42, [4 x float]* %arraydecay43), !dbg !10604
  %44 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10605
  %viewmat45 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %44, i32 0, i32 4, !dbg !10606
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat45, i64 0, i64 0, !dbg !10605
  %45 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10607
  %winmat47 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %45, i32 0, i32 5, !dbg !10608
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat47, i64 0, i64 0, !dbg !10607
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !10609
  call void @mul_m4_m4m4([4 x float]* %arraydecay46, [4 x float]* %arraydecay48, [4 x float]* %arraydecay49), !dbg !10610
  %46 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10611
  %clipsta = getelementptr inbounds %struct.LampRen, %struct.LampRen* %46, i32 0, i32 39, !dbg !10612
  %47 = load float, float* %clipsta, align 4, !dbg !10612
  %48 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10613
  %d = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %48, i32 0, i32 8, !dbg !10614
  store float %47, float* %d, align 8, !dbg !10615
  %49 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10616
  %clipend = getelementptr inbounds %struct.LampRen, %struct.LampRen* %49, i32 0, i32 40, !dbg !10617
  %50 = load float, float* %clipend, align 8, !dbg !10617
  %51 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10618
  %clipend50 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %51, i32 0, i32 9, !dbg !10619
  store float %50, float* %clipend50, align 4, !dbg !10620
  %52 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10621
  %bias = getelementptr inbounds %struct.LampRen, %struct.LampRen* %52, i32 0, i32 41, !dbg !10622
  %53 = load float, float* %bias, align 4, !dbg !10622
  %mul51 = fmul float 0x3F947AE140000000, %53, !dbg !10623
  %mul52 = fmul float %mul51, 0x41E0000000000000, !dbg !10624
  %conv53 = fptosi float %mul52 to i32, !dbg !10625
  %54 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10626
  %bias54 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %54, i32 0, i32 15, !dbg !10627
  store i32 %conv53, i32* %bias54, align 4, !dbg !10628
  %55 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10629
  %buftype = getelementptr inbounds %struct.LampRen, %struct.LampRen* %55, i32 0, i32 36, !dbg !10629
  %56 = load i16, i16* %buftype, align 4, !dbg !10629
  %conv55 = sext i16 %56 to i32, !dbg !10629
  %cmp56 = icmp eq i32 %conv55, 2, !dbg !10629
  br i1 %cmp56, label %if.then62, label %lor.lhs.false, !dbg !10629

lor.lhs.false:                                    ; preds = %if.end35
  %57 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10629
  %buftype58 = getelementptr inbounds %struct.LampRen, %struct.LampRen* %57, i32 0, i32 36, !dbg !10629
  %58 = load i16, i16* %buftype58, align 4, !dbg !10629
  %conv59 = sext i16 %58 to i32, !dbg !10629
  %cmp60 = icmp eq i32 %conv59, 3, !dbg !10629
  br i1 %cmp60, label %if.then62, label %if.end68, !dbg !10631

if.then62:                                        ; preds = %lor.lhs.false, %if.end35
  %59 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10632
  %bias63 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %59, i32 0, i32 15, !dbg !10633
  %60 = load i32, i32* %bias63, align 4, !dbg !10633
  %conv64 = sitofp i32 %60 to float, !dbg !10632
  %mul65 = fmul float 0x3FB99999A0000000, %conv64, !dbg !10634
  %conv66 = fptosi float %mul65 to i32, !dbg !10635
  %61 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10636
  %bias67 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %61, i32 0, i32 15, !dbg !10637
  store i32 %conv66, i32* %bias67, align 4, !dbg !10638
  br label %if.end68, !dbg !10636

if.end68:                                         ; preds = %if.then62, %lor.lhs.false
  %62 = load %struct.LampRen*, %struct.LampRen** %lar.addr, align 8, !dbg !10639
  %compressthresh = getelementptr inbounds %struct.LampRen, %struct.LampRen* %62, i32 0, i32 42, !dbg !10640
  %63 = load float, float* %compressthresh, align 8, !dbg !10640
  %64 = load %struct.ShadBuf*, %struct.ShadBuf** %shb, align 8, !dbg !10641
  %compressthresh69 = getelementptr inbounds %struct.ShadBuf, %struct.ShadBuf* %64, i32 0, i32 12, !dbg !10642
  store float %63, float* %compressthresh69, align 8, !dbg !10643
  br label %return, !dbg !10644

return:                                           ; preds = %if.end68, %if.then
  ret void, !dbg !10644
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #2

declare dso_local void @normalize_m4([4 x float]*) #4

declare dso_local void @psys_render_set(%struct.Object*, %struct.ParticleSystem*, [4 x float]*, [4 x float]*, i32, i32, i32) #4

declare dso_local %struct.ObjectRen* @RE_addRenderObject(%struct.Render*, %struct.Object*, %struct.Object*, i32, i32, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_object_data(%struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset) #0 !dbg !10645 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %psys = alloca %struct.ParticleSystem*, align 8
  %i = alloca i32, align 4
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !10652, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10654, metadata !DIExpression()), !dbg !10655
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10656
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !10657
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !10657
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !10655
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10660, metadata !DIExpression()), !dbg !10661
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10662
  %psysindex = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 6, !dbg !10664
  %3 = load i32, i32* %psysindex, align 4, !dbg !10664
  %tobool = icmp ne i32 %3, 0, !dbg !10662
  br i1 %tobool, label %if.then, label %if.else24, !dbg !10665

if.then:                                          ; preds = %entry
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10666
  %prev = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 1, !dbg !10669
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %prev, align 8, !dbg !10669
  %tobool2 = icmp ne %struct.ObjectRen* %5, null, !dbg !10666
  br i1 %tobool2, label %lor.lhs.false, label %land.lhs.true, !dbg !10670

lor.lhs.false:                                    ; preds = %if.then
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10671
  %prev3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 1, !dbg !10672
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %prev3, align 8, !dbg !10672
  %ob4 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 2, !dbg !10673
  %8 = load %struct.Object*, %struct.Object** %ob4, align 8, !dbg !10673
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10674
  %cmp = icmp ne %struct.Object* %8, %9, !dbg !10675
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false5, !dbg !10676

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10677
  %prev6 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 1, !dbg !10678
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %prev6, align 8, !dbg !10678
  %flag = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 7, !dbg !10679
  %12 = load i32, i32* %flag, align 8, !dbg !10679
  %and = and i32 %12, 1, !dbg !10680
  %cmp7 = icmp eq i32 %and, 0, !dbg !10681
  br i1 %cmp7, label %land.lhs.true, label %if.end19, !dbg !10682

land.lhs.true:                                    ; preds = %lor.lhs.false5, %lor.lhs.false, %if.then
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10683
  %type = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 3, !dbg !10684
  %14 = load i16, i16* %type, align 8, !dbg !10684
  %conv = sext i16 %14 to i32, !dbg !10683
  %cmp8 = icmp eq i32 %conv, 1, !dbg !10685
  br i1 %cmp8, label %if.then10, label %if.end19, !dbg !10686

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !10687, metadata !DIExpression()), !dbg !10689
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10690
  %r = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 45, !dbg !10692
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !10693
  %16 = load i32, i32* %scemode, align 4, !dbg !10693
  %and11 = and i32 %16, 524288, !dbg !10694
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10694
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !10695

if.then13:                                        ; preds = %if.then10
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10696
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 44, !dbg !10697
  %18 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10697
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10698
  %20 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !10699
  %or = or i64 %20, 32, !dbg !10700
  %or14 = or i64 %or, 64, !dbg !10701
  %call = call %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene* %18, %struct.Object* %19, i64 %or14), !dbg !10702
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !10703
  br label %if.end, !dbg !10704

if.else:                                          ; preds = %if.then10
  %21 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10705
  %scene15 = getelementptr inbounds %struct.Render, %struct.Render* %21, i32 0, i32 44, !dbg !10706
  %22 = load %struct.Scene*, %struct.Scene** %scene15, align 8, !dbg !10706
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10707
  %24 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !10708
  %or16 = or i64 %24, 32, !dbg !10709
  %or17 = or i64 %or16, 64, !dbg !10710
  %call18 = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %22, %struct.Object* %23, i64 %or17), !dbg !10711
  store %struct.DerivedMesh* %call18, %struct.DerivedMesh** %dm, align 8, !dbg !10712
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then13
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10713
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 95, !dbg !10714
  %26 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !10714
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !10715
  call void %26(%struct.DerivedMesh* %27), !dbg !10713
  br label %if.end19, !dbg !10716

if.end19:                                         ; preds = %if.end, %land.lhs.true, %lor.lhs.false5
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10717
  %particlesystem = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 109, !dbg !10719
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %particlesystem, i32 0, i32 0, !dbg !10720
  %29 = load i8*, i8** %first, align 8, !dbg !10720
  %30 = bitcast i8* %29 to %struct.ParticleSystem*, !dbg !10717
  store %struct.ParticleSystem* %30, %struct.ParticleSystem** %psys, align 8, !dbg !10721
  store i32 0, i32* %i, align 4, !dbg !10722
  br label %for.cond, !dbg !10723

for.cond:                                         ; preds = %for.inc, %if.end19
  %31 = load i32, i32* %i, align 4, !dbg !10724
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10726
  %psysindex20 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %32, i32 0, i32 6, !dbg !10727
  %33 = load i32, i32* %psysindex20, align 4, !dbg !10727
  %sub = sub nsw i32 %33, 1, !dbg !10728
  %cmp21 = icmp slt i32 %31, %sub, !dbg !10729
  br i1 %cmp21, label %for.body, label %for.end, !dbg !10730

for.body:                                         ; preds = %for.cond
  %34 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10731
  %next = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %34, i32 0, i32 0, !dbg !10732
  %35 = load %struct.ParticleSystem*, %struct.ParticleSystem** %next, align 8, !dbg !10732
  store %struct.ParticleSystem* %35, %struct.ParticleSystem** %psys, align 8, !dbg !10733
  br label %for.inc, !dbg !10734

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !dbg !10735
  %inc = add nsw i32 %36, 1, !dbg !10735
  store i32 %inc, i32* %i, align 4, !dbg !10735
  br label %for.cond, !dbg !10736, !llvm.loop !10737

for.end:                                          ; preds = %for.cond
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10739
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10740
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10741
  %40 = load i32, i32* %timeoffset.addr, align 4, !dbg !10742
  %call23 = call i32 @render_new_particle_system(%struct.Render* %37, %struct.ObjectRen* %38, %struct.ParticleSystem* %39, i32 %40), !dbg !10743
  br label %if.end57, !dbg !10744

if.else24:                                        ; preds = %entry
  %41 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10745
  %type25 = getelementptr inbounds %struct.Object, %struct.Object* %41, i32 0, i32 3, !dbg !10745
  %42 = load i16, i16* %type25, align 8, !dbg !10745
  %conv26 = sext i16 %42 to i32, !dbg !10745
  %cmp27 = icmp eq i32 %conv26, 4, !dbg !10745
  br i1 %cmp27, label %if.then34, label %lor.lhs.false29, !dbg !10745

lor.lhs.false29:                                  ; preds = %if.else24
  %43 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10745
  %type30 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 3, !dbg !10745
  %44 = load i16, i16* %type30, align 8, !dbg !10745
  %conv31 = sext i16 %44 to i32, !dbg !10745
  %cmp32 = icmp eq i32 %conv31, 2, !dbg !10745
  br i1 %cmp32, label %if.then34, label %if.else35, !dbg !10748

if.then34:                                        ; preds = %lor.lhs.false29, %if.else24
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10749
  %46 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10750
  %47 = load i32, i32* %timeoffset.addr, align 4, !dbg !10751
  call void @init_render_curve(%struct.Render* %45, %struct.ObjectRen* %46, i32 %47), !dbg !10752
  br label %if.end56, !dbg !10752

if.else35:                                        ; preds = %lor.lhs.false29
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10753
  %type36 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 3, !dbg !10755
  %49 = load i16, i16* %type36, align 8, !dbg !10755
  %conv37 = sext i16 %49 to i32, !dbg !10753
  %cmp38 = icmp eq i32 %conv37, 3, !dbg !10756
  br i1 %cmp38, label %if.then40, label %if.else41, !dbg !10757

if.then40:                                        ; preds = %if.else35
  %50 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10758
  %51 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10759
  %52 = load i32, i32* %timeoffset.addr, align 4, !dbg !10760
  call void @init_render_surf(%struct.Render* %50, %struct.ObjectRen* %51, i32 %52), !dbg !10761
  br label %if.end55, !dbg !10761

if.else41:                                        ; preds = %if.else35
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10762
  %type42 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 3, !dbg !10764
  %54 = load i16, i16* %type42, align 8, !dbg !10764
  %conv43 = sext i16 %54 to i32, !dbg !10762
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !10765
  br i1 %cmp44, label %if.then46, label %if.else47, !dbg !10766

if.then46:                                        ; preds = %if.else41
  %55 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10767
  %56 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10768
  %57 = load i32, i32* %timeoffset.addr, align 4, !dbg !10769
  call void @init_render_mesh(%struct.Render* %55, %struct.ObjectRen* %56, i32 %57), !dbg !10770
  br label %if.end54, !dbg !10770

if.else47:                                        ; preds = %if.else41
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !10771
  %type48 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 3, !dbg !10773
  %59 = load i16, i16* %type48, align 8, !dbg !10773
  %conv49 = sext i16 %59 to i32, !dbg !10771
  %cmp50 = icmp eq i32 %conv49, 5, !dbg !10774
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !10775

if.then52:                                        ; preds = %if.else47
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10776
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10777
  call void @init_render_mball(%struct.Render* %60, %struct.ObjectRen* %61), !dbg !10778
  br label %if.end53, !dbg !10778

if.end53:                                         ; preds = %if.then52, %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then46
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then34
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %for.end
  %62 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10779
  %63 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10780
  %64 = load i32, i32* %timeoffset.addr, align 4, !dbg !10781
  call void @finalize_render_object(%struct.Render* %62, %struct.ObjectRen* %63, i32 %64), !dbg !10782
  %65 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10783
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %65, i32 0, i32 10, !dbg !10784
  %66 = load i32, i32* %totvert, align 8, !dbg !10784
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10785
  %totvert58 = getelementptr inbounds %struct.Render, %struct.Render* %67, i32 0, i32 61, !dbg !10786
  %68 = load i32, i32* %totvert58, align 4, !dbg !10787
  %add = add nsw i32 %68, %66, !dbg !10787
  store i32 %add, i32* %totvert58, align 4, !dbg !10787
  %69 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10788
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %69, i32 0, i32 11, !dbg !10789
  %70 = load i32, i32* %totvlak, align 4, !dbg !10789
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10790
  %totvlak59 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 60, !dbg !10791
  %72 = load i32, i32* %totvlak59, align 8, !dbg !10792
  %add60 = add nsw i32 %72, %70, !dbg !10792
  store i32 %add60, i32* %totvlak59, align 8, !dbg !10792
  %73 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10793
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %73, i32 0, i32 13, !dbg !10794
  %74 = load i32, i32* %tothalo, align 4, !dbg !10794
  %75 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10795
  %tothalo61 = getelementptr inbounds %struct.Render, %struct.Render* %75, i32 0, i32 62, !dbg !10796
  %76 = load i32, i32* %tothalo61, align 8, !dbg !10797
  %add62 = add nsw i32 %76, %74, !dbg !10797
  store i32 %add62, i32* %tothalo61, align 8, !dbg !10797
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10798
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %77, i32 0, i32 12, !dbg !10799
  %78 = load i32, i32* %totstrand, align 8, !dbg !10799
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10800
  %totstrand63 = getelementptr inbounds %struct.Render, %struct.Render* %79, i32 0, i32 63, !dbg !10801
  %80 = load i32, i32* %totstrand63, align 4, !dbg !10802
  %add64 = add nsw i32 %80, %78, !dbg !10802
  store i32 %add64, i32* %totstrand63, align 4, !dbg !10802
  ret void, !dbg !10803
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Material* @give_render_material(%struct.Render* %re, %struct.Object* %ob, i16 signext %nr) #0 !dbg !10804 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %nr.addr = alloca i16, align 2
  %ma = alloca %struct.Material*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  store i16 %nr, i16* %nr.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nr.addr, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10815
  %1 = load i16, i16* %nr.addr, align 2, !dbg !10816
  %call = call %struct.Material* @give_current_material(%struct.Object* %0, i16 signext %1), !dbg !10817
  store %struct.Material* %call, %struct.Material** %ma, align 8, !dbg !10818
  %2 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10819
  %cmp = icmp eq %struct.Material* %2, null, !dbg !10821
  br i1 %cmp, label %if.then, label %if.end, !dbg !10822

if.then:                                          ; preds = %entry
  store %struct.Material* @defmaterial, %struct.Material** %ma, align 8, !dbg !10823
  br label %if.end, !dbg !10824

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10825
  %r = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 45, !dbg !10827
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !10828
  %4 = load i32, i32* %mode, align 8, !dbg !10828
  %and = and i32 %4, 1048576, !dbg !10829
  %tobool = icmp ne i32 %and, 0, !dbg !10829
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !10830

if.then1:                                         ; preds = %if.end
  %5 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10831
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 90, !dbg !10832
  %6 = load i16, i16* %texco, align 4, !dbg !10833
  %conv = sext i16 %6 to i32, !dbg !10833
  %or = or i32 %conv, 2048, !dbg !10833
  %conv2 = trunc i32 %or to i16, !dbg !10833
  store i16 %conv2, i16* %texco, align 4, !dbg !10833
  br label %if.end3, !dbg !10831

if.end3:                                          ; preds = %if.then1, %if.end
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10834
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 2, !dbg !10836
  %8 = load i16, i16* %material_type, align 8, !dbg !10836
  %conv4 = sext i16 %8 to i32, !dbg !10834
  %cmp5 = icmp eq i32 %conv4, 2, !dbg !10837
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !10838

if.then7:                                         ; preds = %if.end3
  %9 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10839
  %mode8 = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 51, !dbg !10841
  %10 = load i32, i32* %mode8, align 4, !dbg !10842
  %or9 = or i32 %10, 65536, !dbg !10842
  store i32 %or9, i32* %mode8, align 4, !dbg !10842
  %11 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10843
  %mode10 = getelementptr inbounds %struct.Material, %struct.Material* %11, i32 0, i32 51, !dbg !10844
  %12 = load i32, i32* %mode10, align 4, !dbg !10845
  %and11 = and i32 %12, -33554433, !dbg !10845
  store i32 %and11, i32* %mode10, align 4, !dbg !10845
  br label %if.end12, !dbg !10846

if.end12:                                         ; preds = %if.then7, %if.end3
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10847
  %mode13 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 51, !dbg !10849
  %14 = load i32, i32* %mode13, align 4, !dbg !10849
  %and14 = and i32 %14, 65536, !dbg !10850
  %tobool15 = icmp ne i32 %and14, 0, !dbg !10850
  br i1 %tobool15, label %land.lhs.true, label %if.end23, !dbg !10851

land.lhs.true:                                    ; preds = %if.end12
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10852
  %mode16 = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 51, !dbg !10853
  %16 = load i32, i32* %mode16, align 4, !dbg !10853
  %and17 = and i32 %16, 64, !dbg !10854
  %tobool18 = icmp ne i32 %and17, 0, !dbg !10854
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !10855

if.then19:                                        ; preds = %land.lhs.true
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10856
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 4, !dbg !10857
  %18 = load i16, i16* %flag, align 8, !dbg !10858
  %conv20 = sext i16 %18 to i32, !dbg !10858
  %or21 = or i32 %conv20, 1, !dbg !10858
  %conv22 = trunc i32 %or21 to i16, !dbg !10858
  store i16 %conv22, i16* %flag, align 8, !dbg !10858
  br label %if.end23, !dbg !10856

if.end23:                                         ; preds = %if.then19, %land.lhs.true, %if.end12
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10859
  %flag24 = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 3, !dbg !10860
  %20 = load i16, i16* %flag24, align 2, !dbg !10861
  %conv25 = sext i16 %20 to i32, !dbg !10861
  %or26 = or i32 %conv25, 1, !dbg !10861
  %conv27 = trunc i32 %or26 to i16, !dbg !10861
  store i16 %conv27, i16* %flag24, align 2, !dbg !10861
  %21 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10862
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 103, !dbg !10864
  %22 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !10864
  %tobool28 = icmp ne %struct.bNodeTree* %22, null, !dbg !10862
  br i1 %tobool28, label %land.lhs.true29, label %if.end34, !dbg !10865

land.lhs.true29:                                  ; preds = %if.end23
  %23 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10866
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 77, !dbg !10867
  %24 = load i8, i8* %use_nodes, align 1, !dbg !10867
  %conv30 = zext i8 %24 to i32, !dbg !10866
  %tobool31 = icmp ne i32 %conv30, 0, !dbg !10866
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !10868

if.then32:                                        ; preds = %land.lhs.true29
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10869
  %26 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10870
  %nodetree33 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 103, !dbg !10871
  %27 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree33, align 8, !dbg !10871
  call void @flag_render_node_material(%struct.Render* %25, %struct.bNodeTree* %27), !dbg !10872
  br label %if.end34, !dbg !10872

if.end34:                                         ; preds = %if.then32, %land.lhs.true29, %if.end23
  %28 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10873
  call void @check_material_mapto(%struct.Material* %28), !dbg !10874
  %29 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !10875
  ret %struct.Material* %29, !dbg !10876
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_volume(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Material* %ma) #0 !dbg !10877 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %vo = alloca %struct.VolumeOb*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10880, metadata !DIExpression()), !dbg !10881
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !10882, metadata !DIExpression()), !dbg !10883
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !10884, metadata !DIExpression()), !dbg !10885
  call void @llvm.dbg.declare(metadata %struct.VolumeOb** %vo, metadata !10886, metadata !DIExpression()), !dbg !10887
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10888
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)), !dbg !10888
  %1 = bitcast i8* %call to %struct.VolumeOb*, !dbg !10888
  store %struct.VolumeOb* %1, %struct.VolumeOb** %vo, align 8, !dbg !10889
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !10890
  %3 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !10891
  %ma1 = getelementptr inbounds %struct.VolumeOb, %struct.VolumeOb* %3, i32 0, i32 2, !dbg !10892
  store %struct.Material* %2, %struct.Material** %ma1, align 8, !dbg !10893
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10894
  %5 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !10895
  %obr2 = getelementptr inbounds %struct.VolumeOb, %struct.VolumeOb* %5, i32 0, i32 3, !dbg !10896
  store %struct.ObjectRen* %4, %struct.ObjectRen** %obr2, align 8, !dbg !10897
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !10898
  %volumes = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 80, !dbg !10899
  %7 = load %struct.VolumeOb*, %struct.VolumeOb** %vo, align 8, !dbg !10900
  %8 = bitcast %struct.VolumeOb* %7 to i8*, !dbg !10900
  call void @BLI_addtail(%struct.ListBase* %volumes, i8* %8), !dbg !10901
  ret void, !dbg !10902
}

declare dso_local i32 @psys_check_enabled(%struct.Object*, %struct.ParticleSystem*) #4

declare dso_local void @psys_render_restore(%struct.Object*, %struct.ParticleSystem*) #4

declare dso_local %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene*, %struct.Object*, i64) #4

declare dso_local %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene*, %struct.Object*, i64) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @render_new_particle_system(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.ParticleSystem* %psys, i32 %timeoffset) #0 !dbg !10903 {
entry:
  %retval = alloca i32, align 4
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %ma = alloca %struct.Material*, align 8
  %psmd = alloca %struct.ParticleSystemModifierData*, align 8
  %tpsys = alloca %struct.ParticleSystem*, align 8
  %part = alloca %struct.ParticleSettings*, align 8
  %tpart = alloca %struct.ParticleSettings*, align 8
  %pars = alloca %struct.ParticleData*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %tpa = alloca %struct.ParticleData*, align 8
  %states = alloca %struct.ParticleKey*, align 8
  %state = alloca %struct.ParticleKey, align 4
  %cache = alloca %struct.ParticleCacheKey*, align 8
  %bb = alloca %struct.ParticleBillboardData, align 8
  %sim = alloca %struct.ParticleSimulationData, align 8
  %sd = alloca %struct.ParticleStrandData, align 8
  %strandbuf = alloca %struct.StrandBuffer*, align 8
  %svert = alloca %struct.StrandVert*, align 8
  %sbound = alloca %struct.StrandBound*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %rng = alloca %struct.RNG*, align 8
  %loc = alloca [3 x float], align 4
  %loc1 = alloca [3 x float], align 4
  %loc0 = alloca [3 x float], align 4
  %mat = alloca [4 x [4 x float]], align 16
  %nmat = alloca [3 x [3 x float]], align 16
  %co = alloca [3 x float], align 4
  %nor = alloca [3 x float], align 4
  %duplimat = alloca [4 x [4 x float]], align 16
  %strandlen = alloca float, align 4
  %curlen = alloca float, align 4
  %hasize = alloca float, align 4
  %pa_size = alloca float, align 4
  %r_tilt = alloca float, align 4
  %r_length = alloca float, align 4
  %pa_time = alloca float, align 4
  %pa_birthtime = alloca float, align 4
  %pa_dietime = alloca float, align 4
  %random = alloca float, align 4
  %simplify = alloca [2 x float], align 4
  %pa_co = alloca [3 x float], align 4
  %cfra = alloca float, align 4
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %k = alloca i32, align 4
  %max_k = alloca i32, align 4
  %totpart = alloca i32, align 4
  %do_simplify = alloca i8, align 1
  %do_surfacecache = alloca i8, align 1
  %use_duplimat = alloca i8, align 1
  %totchild = alloca i32, align 4
  %step_nbr = alloca i32, align 4
  %seed = alloca i32, align 4
  %path_nbr = alloca i32, align 4
  %orco1 = alloca i32, align 4
  %num = alloca i32, align 4
  %totface = alloca i32, align 4
  %uv_name = alloca i8**, align 8
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %first_uv = alloca i32, align 4
  %cpa = alloca %struct.ChildParticle*, align 8
  %par = alloca %struct.ParticleData*, align 8
  %parent508 = alloca %struct.ParticleData*, align 8
  %orignum = alloca i32, align 4
  %ssimplify = alloca float*, align 8
  %snor = alloca float*, align 8
  %facenum = alloca i32*, align 8
  %uv617 = alloca float*, align 8
  %mc = alloca %struct.MCol*, align 8
  %time685 = alloca float, align 4
  %length = alloca float, align 4
  %trail_count771 = alloca i32, align 4
  %ct = alloca float, align 4
  %dt = alloca float, align 4
  %pa_vel = alloca float, align 4
  %head = alloca float, align 4
  %tail = alloca float, align 4
  %pa_vel968 = alloca float, align 4
  %head972 = alloca float, align 4
  %tail975 = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !10906, metadata !DIExpression()), !dbg !10907
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !10914, metadata !DIExpression()), !dbg !10915
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !10916
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !10917
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !10917
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !10915
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !10918, metadata !DIExpression()), !dbg !10919
  store %struct.Material* null, %struct.Material** %ma, align 8, !dbg !10919
  call void @llvm.dbg.declare(metadata %struct.ParticleSystemModifierData** %psmd, metadata !10920, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %tpsys, metadata !10934, metadata !DIExpression()), !dbg !10935
  store %struct.ParticleSystem* null, %struct.ParticleSystem** %tpsys, align 8, !dbg !10935
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !10936, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %tpart, metadata !10938, metadata !DIExpression()), !dbg !10939
  store %struct.ParticleSettings* null, %struct.ParticleSettings** %tpart, align 8, !dbg !10939
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pars, metadata !10940, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !10942, metadata !DIExpression()), !dbg !10943
  store %struct.ParticleData* null, %struct.ParticleData** %pa, align 8, !dbg !10943
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %tpa, metadata !10944, metadata !DIExpression()), !dbg !10945
  store %struct.ParticleData* null, %struct.ParticleData** %tpa, align 8, !dbg !10945
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %states, metadata !10946, metadata !DIExpression()), !dbg !10947
  store %struct.ParticleKey* null, %struct.ParticleKey** %states, align 8, !dbg !10947
  call void @llvm.dbg.declare(metadata %struct.ParticleKey* %state, metadata !10948, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.declare(metadata %struct.ParticleCacheKey** %cache, metadata !10950, metadata !DIExpression()), !dbg !10953
  store %struct.ParticleCacheKey* null, %struct.ParticleCacheKey** %cache, align 8, !dbg !10953
  call void @llvm.dbg.declare(metadata %struct.ParticleBillboardData* %bb, metadata !10954, metadata !DIExpression()), !dbg !10975
  call void @llvm.dbg.declare(metadata %struct.ParticleSimulationData* %sim, metadata !10976, metadata !DIExpression()), !dbg !10987
  %2 = bitcast %struct.ParticleSimulationData* %sim to i8*, !dbg !10987
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false), !dbg !10987
  call void @llvm.dbg.declare(metadata %struct.ParticleStrandData* %sd, metadata !10988, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.declare(metadata %struct.StrandBuffer** %strandbuf, metadata !10990, metadata !DIExpression()), !dbg !10991
  store %struct.StrandBuffer* null, %struct.StrandBuffer** %strandbuf, align 8, !dbg !10991
  call void @llvm.dbg.declare(metadata %struct.StrandVert** %svert, metadata !10992, metadata !DIExpression()), !dbg !10993
  store %struct.StrandVert* null, %struct.StrandVert** %svert, align 8, !dbg !10993
  call void @llvm.dbg.declare(metadata %struct.StrandBound** %sbound, metadata !10994, metadata !DIExpression()), !dbg !10997
  store %struct.StrandBound* null, %struct.StrandBound** %sbound, align 8, !dbg !10997
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !10998, metadata !DIExpression()), !dbg !10999
  store %struct.StrandRen* null, %struct.StrandRen** %strand, align 8, !dbg !10999
  call void @llvm.dbg.declare(metadata %struct.RNG** %rng, metadata !11000, metadata !DIExpression()), !dbg !11005
  store %struct.RNG* null, %struct.RNG** %rng, align 8, !dbg !11005
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !11006, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.declare(metadata [3 x float]* %loc1, metadata !11008, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.declare(metadata [3 x float]* %loc0, metadata !11010, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !11012, metadata !DIExpression()), !dbg !11013
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %nmat, metadata !11014, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !11016, metadata !DIExpression()), !dbg !11017
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !11018, metadata !DIExpression()), !dbg !11019
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %duplimat, metadata !11020, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.declare(metadata float* %strandlen, metadata !11022, metadata !DIExpression()), !dbg !11023
  store float 0.000000e+00, float* %strandlen, align 4, !dbg !11023
  call void @llvm.dbg.declare(metadata float* %curlen, metadata !11024, metadata !DIExpression()), !dbg !11025
  store float 0.000000e+00, float* %curlen, align 4, !dbg !11025
  call void @llvm.dbg.declare(metadata float* %hasize, metadata !11026, metadata !DIExpression()), !dbg !11027
  call void @llvm.dbg.declare(metadata float* %pa_size, metadata !11028, metadata !DIExpression()), !dbg !11029
  call void @llvm.dbg.declare(metadata float* %r_tilt, metadata !11030, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.declare(metadata float* %r_length, metadata !11032, metadata !DIExpression()), !dbg !11033
  call void @llvm.dbg.declare(metadata float* %pa_time, metadata !11034, metadata !DIExpression()), !dbg !11035
  call void @llvm.dbg.declare(metadata float* %pa_birthtime, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata float* %pa_dietime, metadata !11038, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.declare(metadata float* %random, metadata !11040, metadata !DIExpression()), !dbg !11041
  call void @llvm.dbg.declare(metadata [2 x float]* %simplify, metadata !11042, metadata !DIExpression()), !dbg !11043
  call void @llvm.dbg.declare(metadata [3 x float]* %pa_co, metadata !11044, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.declare(metadata float* %cfra, metadata !11046, metadata !DIExpression()), !dbg !11047
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11048
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 44, !dbg !11049
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11049
  %call = call float @BKE_scene_frame_get(%struct.Scene* %4), !dbg !11050
  store float %call, float* %cfra, align 4, !dbg !11047
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11053, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.declare(metadata i32* %max_k, metadata !11057, metadata !DIExpression()), !dbg !11058
  store i32 0, i32* %max_k, align 4, !dbg !11058
  call void @llvm.dbg.declare(metadata i32* %totpart, metadata !11059, metadata !DIExpression()), !dbg !11060
  call void @llvm.dbg.declare(metadata i8* %do_simplify, metadata !11061, metadata !DIExpression()), !dbg !11062
  store i8 0, i8* %do_simplify, align 1, !dbg !11062
  call void @llvm.dbg.declare(metadata i8* %do_surfacecache, metadata !11063, metadata !DIExpression()), !dbg !11064
  store i8 0, i8* %do_surfacecache, align 1, !dbg !11064
  call void @llvm.dbg.declare(metadata i8* %use_duplimat, metadata !11065, metadata !DIExpression()), !dbg !11066
  store i8 0, i8* %use_duplimat, align 1, !dbg !11066
  call void @llvm.dbg.declare(metadata i32* %totchild, metadata !11067, metadata !DIExpression()), !dbg !11068
  store i32 0, i32* %totchild, align 4, !dbg !11068
  call void @llvm.dbg.declare(metadata i32* %step_nbr, metadata !11069, metadata !DIExpression()), !dbg !11070
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !11071, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.declare(metadata i32* %path_nbr, metadata !11073, metadata !DIExpression()), !dbg !11074
  store i32 0, i32* %path_nbr, align 4, !dbg !11074
  call void @llvm.dbg.declare(metadata i32* %orco1, metadata !11075, metadata !DIExpression()), !dbg !11076
  store i32 0, i32* %orco1, align 4, !dbg !11076
  call void @llvm.dbg.declare(metadata i32* %num, metadata !11077, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.declare(metadata i8*** %uv_name, metadata !11081, metadata !DIExpression()), !dbg !11083
  store i8** null, i8*** %uv_name, align 8, !dbg !11083
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !11084, metadata !DIExpression()), !dbg !11086
  store i32* null, i32** %index_mf_to_mpoly, align 8, !dbg !11086
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !11087, metadata !DIExpression()), !dbg !11088
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !11088
  %5 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11089
  %cmp = icmp eq %struct.ParticleSystem* %5, null, !dbg !11091
  br i1 %cmp, label %if.then, label %if.end, !dbg !11092

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11093
  br label %return, !dbg !11093

if.end:                                           ; preds = %entry
  %6 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11094
  %part2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %6, i32 0, i32 2, !dbg !11095
  %7 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part2, align 8, !dbg !11095
  store %struct.ParticleSettings* %7, %struct.ParticleSettings** %part, align 8, !dbg !11096
  %8 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11097
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %8, i32 0, i32 3, !dbg !11098
  %9 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !11098
  store %struct.ParticleData* %9, %struct.ParticleData** %pars, align 8, !dbg !11099
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11100
  %cmp3 = icmp eq %struct.ParticleSettings* %10, null, !dbg !11102
  br i1 %cmp3, label %if.then7, label %lor.lhs.false, !dbg !11103

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ParticleData*, %struct.ParticleData** %pars, align 8, !dbg !11104
  %cmp4 = icmp eq %struct.ParticleData* %11, null, !dbg !11105
  br i1 %cmp4, label %if.then7, label %lor.lhs.false5, !dbg !11106

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11107
  %13 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11108
  %call6 = call i32 @psys_check_enabled(%struct.Object* %12, %struct.ParticleSystem* %13), !dbg !11109
  %tobool = icmp ne i32 %call6, 0, !dbg !11109
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11110

if.then7:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11111
  br label %return, !dbg !11111

if.end8:                                          ; preds = %lor.lhs.false5
  %14 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11112
  %ren_as = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %14, i32 0, i32 21, !dbg !11114
  %15 = load i16, i16* %ren_as, align 8, !dbg !11114
  %conv = sext i16 %15 to i32, !dbg !11112
  %cmp9 = icmp eq i32 %conv, 7, !dbg !11115
  br i1 %cmp9, label %if.then21, label %lor.lhs.false11, !dbg !11116

lor.lhs.false11:                                  ; preds = %if.end8
  %16 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11117
  %ren_as12 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %16, i32 0, i32 21, !dbg !11118
  %17 = load i16, i16* %ren_as12, align 8, !dbg !11118
  %conv13 = sext i16 %17 to i32, !dbg !11117
  %cmp14 = icmp eq i32 %conv13, 8, !dbg !11119
  br i1 %cmp14, label %if.then21, label %lor.lhs.false16, !dbg !11120

lor.lhs.false16:                                  ; preds = %lor.lhs.false11
  %18 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11121
  %ren_as17 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %18, i32 0, i32 21, !dbg !11122
  %19 = load i16, i16* %ren_as17, align 8, !dbg !11122
  %conv18 = sext i16 %19 to i32, !dbg !11121
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !11123
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !11124

if.then21:                                        ; preds = %lor.lhs.false16, %lor.lhs.false11, %if.end8
  store i32 1, i32* %retval, align 4, !dbg !11125
  br label %return, !dbg !11125

if.end22:                                         ; preds = %lor.lhs.false16
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11126
  %r = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 45, !dbg !11128
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 46, !dbg !11129
  %21 = load i32, i32* %scemode, align 4, !dbg !11129
  %and = and i32 %21, 524288, !dbg !11130
  %tobool23 = icmp ne i32 %and, 0, !dbg !11130
  br i1 %tobool23, label %land.lhs.true, label %if.end27, !dbg !11131

land.lhs.true:                                    ; preds = %if.end22
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11132
  %mode = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 27, !dbg !11133
  %23 = load i32, i32* %mode, align 8, !dbg !11133
  %and24 = and i32 %23, 32, !dbg !11134
  %tobool25 = icmp ne i32 %and24, 0, !dbg !11134
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !11135

if.then26:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !11136
  br label %return, !dbg !11136

if.end27:                                         ; preds = %land.lhs.true, %if.end22
  %24 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11137
  %25 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11138
  %call28 = call %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object* %24, %struct.ParticleSystem* %25), !dbg !11139
  store %struct.ParticleSystemModifierData* %call28, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11140
  %26 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11141
  %modifier = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %26, i32 0, i32 0, !dbg !11143
  %mode29 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier, i32 0, i32 3, !dbg !11144
  %27 = load i32, i32* %mode29, align 4, !dbg !11144
  %and30 = and i32 %27, 2, !dbg !11145
  %tobool31 = icmp ne i32 %and30, 0, !dbg !11145
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !11146

if.then32:                                        ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !11147
  br label %return, !dbg !11147

if.end33:                                         ; preds = %if.end27
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11148
  %scene34 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 44, !dbg !11149
  %29 = load %struct.Scene*, %struct.Scene** %scene34, align 8, !dbg !11149
  %scene35 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 0, !dbg !11150
  store %struct.Scene* %29, %struct.Scene** %scene35, align 8, !dbg !11151
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11152
  %ob36 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 1, !dbg !11153
  store %struct.Object* %30, %struct.Object** %ob36, align 8, !dbg !11154
  %31 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11155
  %psys37 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 2, !dbg !11156
  store %struct.ParticleSystem* %31, %struct.ParticleSystem** %psys37, align 8, !dbg !11157
  %32 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11158
  %psmd38 = getelementptr inbounds %struct.ParticleSimulationData, %struct.ParticleSimulationData* %sim, i32 0, i32 3, !dbg !11159
  store %struct.ParticleSystemModifierData* %32, %struct.ParticleSystemModifierData** %psmd38, align 8, !dbg !11160
  %33 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11161
  %phystype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %33, i32 0, i32 11, !dbg !11163
  %34 = load i16, i16* %phystype, align 8, !dbg !11163
  %conv39 = sext i16 %34 to i32, !dbg !11161
  %cmp40 = icmp eq i32 %conv39, 2, !dbg !11164
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !11165

if.then42:                                        ; preds = %if.end33
  call void @psys_count_keyed_targets(%struct.ParticleSimulationData* %sim), !dbg !11166
  br label %if.end43, !dbg !11166

if.end43:                                         ; preds = %if.then42, %if.end33
  %35 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11167
  %totchild44 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %35, i32 0, i32 28, !dbg !11168
  %36 = load i32, i32* %totchild44, align 8, !dbg !11168
  store i32 %36, i32* %totchild, align 4, !dbg !11169
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11170
  %type = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 7, !dbg !11172
  %38 = load i16, i16* %type, align 8, !dbg !11172
  %conv45 = sext i16 %38 to i32, !dbg !11170
  %cmp46 = icmp eq i32 %conv45, 2, !dbg !11173
  br i1 %cmp46, label %land.lhs.true48, label %if.end51, !dbg !11174

land.lhs.true48:                                  ; preds = %if.end43
  %39 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11175
  %childcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %39, i32 0, i32 8, !dbg !11176
  %40 = load %struct.ParticleCacheKey**, %struct.ParticleCacheKey*** %childcache, align 8, !dbg !11176
  %tobool49 = icmp ne %struct.ParticleCacheKey** %40, null, !dbg !11175
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !11177

if.then50:                                        ; preds = %land.lhs.true48
  store i32 0, i32* %totchild, align 4, !dbg !11178
  br label %if.end51, !dbg !11179

if.end51:                                         ; preds = %if.then50, %land.lhs.true48, %if.end43
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11180
  %r52 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 45, !dbg !11182
  %scemode53 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r52, i32 0, i32 46, !dbg !11183
  %42 = load i32, i32* %scemode53, align 4, !dbg !11183
  %and54 = and i32 %42, 524288, !dbg !11184
  %tobool55 = icmp ne i32 %and54, 0, !dbg !11184
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !11185

if.then56:                                        ; preds = %if.end51
  %43 = load i32, i32* %totchild, align 4, !dbg !11186
  %conv57 = sitofp i32 %43 to float, !dbg !11188
  %44 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11189
  %disp = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %44, i32 0, i32 30, !dbg !11190
  %45 = load i16, i16* %disp, align 2, !dbg !11190
  %conv58 = sitofp i16 %45 to float, !dbg !11191
  %mul = fmul float %conv57, %conv58, !dbg !11192
  %div = fdiv float %mul, 1.000000e+02, !dbg !11193
  %conv59 = fptosi float %div to i32, !dbg !11194
  store i32 %conv59, i32* %totchild, align 4, !dbg !11195
  %46 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11196
  %draw_step = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %46, i32 0, i32 24, !dbg !11197
  %47 = load i16, i16* %draw_step, align 2, !dbg !11197
  %conv60 = sext i16 %47 to i32, !dbg !11196
  store i32 %conv60, i32* %step_nbr, align 4, !dbg !11198
  br label %if.end62, !dbg !11199

if.else:                                          ; preds = %if.end51
  %48 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11200
  %ren_step = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %48, i32 0, i32 25, !dbg !11202
  %49 = load i16, i16* %ren_step, align 8, !dbg !11202
  %conv61 = sext i16 %49 to i32, !dbg !11200
  store i32 %conv61, i32* %step_nbr, align 4, !dbg !11203
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then56
  %50 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11204
  %flag = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %50, i32 0, i32 25, !dbg !11205
  %51 = load i32, i32* %flag, align 4, !dbg !11206
  %or = or i32 %51, 64, !dbg !11206
  store i32 %or, i32* %flag, align 4, !dbg !11206
  %52 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11207
  %seed63 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %52, i32 0, i32 23, !dbg !11208
  %53 = load i32, i32* %seed63, align 4, !dbg !11208
  %call64 = call %struct.RNG* @BLI_rng_new(i32 %53), !dbg !11209
  store %struct.RNG* %call64, %struct.RNG** %rng, align 8, !dbg !11210
  %54 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11211
  %totpart65 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %54, i32 0, i32 26, !dbg !11212
  %55 = load i32, i32* %totpart65, align 8, !dbg !11212
  store i32 %55, i32* %totpart, align 4, !dbg !11213
  %56 = bitcast %struct.ParticleStrandData* %sd to i8*, !dbg !11214
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 72, i1 false), !dbg !11214
  %override_uv = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 13, !dbg !11215
  store i32 -1, i32* %override_uv, align 4, !dbg !11216
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11217
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11218
  %59 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11219
  %omat = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %59, i32 0, i32 31, !dbg !11220
  %60 = load i16, i16* %omat, align 4, !dbg !11220
  %call66 = call %struct.Material* @give_render_material(%struct.Render* %57, %struct.Object* %58, i16 signext %60), !dbg !11221
  store %struct.Material* %call66, %struct.Material** %ma, align 8, !dbg !11222
  %61 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11223
  %hasize67 = getelementptr inbounds %struct.Material, %struct.Material* %61, i32 0, i32 59, !dbg !11224
  %62 = load float, float* %hasize67, align 4, !dbg !11224
  store float %62, float* %hasize, align 4, !dbg !11225
  %63 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11226
  %seed1 = getelementptr inbounds %struct.Material, %struct.Material* %63, i32 0, i32 39, !dbg !11227
  %64 = load i8, i8* %seed1, align 2, !dbg !11227
  %conv68 = zext i8 %64 to i32, !dbg !11226
  store i32 %conv68, i32* %seed, align 4, !dbg !11228
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11229
  %flag69 = getelementptr inbounds %struct.Render, %struct.Render* %65, i32 0, i32 4, !dbg !11230
  %66 = load i16, i16* %flag69, align 8, !dbg !11231
  %conv70 = sext i16 %66 to i32, !dbg !11231
  %or71 = or i32 %conv70, 2, !dbg !11231
  %conv72 = trunc i32 %or71 to i16, !dbg !11231
  store i16 %conv72, i16* %flag69, align 8, !dbg !11231
  %67 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !11232
  %68 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11233
  %dm = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %68, i32 0, i32 2, !dbg !11234
  %69 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11234
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %69, i32 0, i32 2, !dbg !11235
  call void @RE_set_customdata_names(%struct.ObjectRen* %67, %struct.CustomData* %faceData), !dbg !11236
  %70 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11237
  %dm73 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %70, i32 0, i32 2, !dbg !11238
  %71 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm73, align 8, !dbg !11238
  %faceData74 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %71, i32 0, i32 2, !dbg !11239
  %call75 = call i32 @CustomData_number_of_layers(%struct.CustomData* %faceData74, i32 5), !dbg !11240
  %totuv = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 8, !dbg !11241
  store i32 %call75, i32* %totuv, align 8, !dbg !11242
  %72 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11243
  %dm76 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %72, i32 0, i32 2, !dbg !11244
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm76, align 8, !dbg !11244
  %faceData77 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %73, i32 0, i32 2, !dbg !11245
  %call78 = call i32 @CustomData_number_of_layers(%struct.CustomData* %faceData77, i32 6), !dbg !11246
  %totcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 9, !dbg !11247
  store i32 %call78, i32* %totcol, align 4, !dbg !11248
  %74 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11249
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %74, i32 0, i32 90, !dbg !11251
  %75 = load i16, i16* %texco, align 4, !dbg !11251
  %conv79 = sext i16 %75 to i32, !dbg !11249
  %and80 = and i32 %conv79, 16, !dbg !11252
  %tobool81 = icmp ne i32 %and80, 0, !dbg !11252
  br i1 %tobool81, label %land.lhs.true82, label %if.else103, !dbg !11253

land.lhs.true82:                                  ; preds = %if.end62
  %totuv83 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 8, !dbg !11254
  %76 = load i32, i32* %totuv83, align 8, !dbg !11254
  %tobool84 = icmp ne i32 %76, 0, !dbg !11255
  br i1 %tobool84, label %if.then85, label %if.else103, !dbg !11256

if.then85:                                        ; preds = %land.lhs.true82
  %77 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11257
  %totuv86 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 8, !dbg !11259
  %78 = load i32, i32* %totuv86, align 8, !dbg !11259
  %mul87 = mul nsw i32 %78, 2, !dbg !11260
  %conv88 = sext i32 %mul87 to i64, !dbg !11261
  %mul89 = mul i64 %conv88, 4, !dbg !11262
  %call90 = call i8* %77(i64 %mul89, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)), !dbg !11257
  %79 = bitcast i8* %call90 to float*, !dbg !11257
  %uvco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !11263
  store float* %79, float** %uvco, align 8, !dbg !11264
  %80 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11265
  %strand_uvname = getelementptr inbounds %struct.Material, %struct.Material* %80, i32 0, i32 69, !dbg !11267
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %strand_uvname, i64 0, i64 0, !dbg !11265
  %81 = load i8, i8* %arrayidx, align 4, !dbg !11265
  %tobool91 = icmp ne i8 %81, 0, !dbg !11265
  br i1 %tobool91, label %if.then92, label %if.end102, !dbg !11268

if.then92:                                        ; preds = %if.then85
  %82 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11269
  %dm93 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %82, i32 0, i32 2, !dbg !11271
  %83 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm93, align 8, !dbg !11271
  %faceData94 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %83, i32 0, i32 2, !dbg !11272
  %84 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11273
  %strand_uvname95 = getelementptr inbounds %struct.Material, %struct.Material* %84, i32 0, i32 69, !dbg !11274
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %strand_uvname95, i64 0, i64 0, !dbg !11273
  %call96 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %faceData94, i32 5, i8* %arraydecay), !dbg !11275
  %override_uv97 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 13, !dbg !11276
  store i32 %call96, i32* %override_uv97, align 4, !dbg !11277
  %85 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11278
  %dm98 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %85, i32 0, i32 2, !dbg !11279
  %86 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm98, align 8, !dbg !11279
  %faceData99 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %86, i32 0, i32 2, !dbg !11280
  %call100 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData99, i32 5), !dbg !11281
  %override_uv101 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 13, !dbg !11282
  %87 = load i32, i32* %override_uv101, align 4, !dbg !11283
  %sub = sub nsw i32 %87, %call100, !dbg !11283
  store i32 %sub, i32* %override_uv101, align 4, !dbg !11283
  br label %if.end102, !dbg !11284

if.end102:                                        ; preds = %if.then92, %if.then85
  br label %if.end105, !dbg !11285

if.else103:                                       ; preds = %land.lhs.true82, %if.end62
  %uvco104 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !11286
  store float* null, float** %uvco104, align 8, !dbg !11287
  br label %if.end105

if.end105:                                        ; preds = %if.else103, %if.end102
  %totcol106 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 9, !dbg !11288
  %88 = load i32, i32* %totcol106, align 4, !dbg !11288
  %tobool107 = icmp ne i32 %88, 0, !dbg !11290
  br i1 %tobool107, label %if.then108, label %if.end113, !dbg !11291

if.then108:                                       ; preds = %if.end105
  %89 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11292
  %totcol109 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 9, !dbg !11293
  %90 = load i32, i32* %totcol109, align 4, !dbg !11293
  %conv110 = sext i32 %90 to i64, !dbg !11294
  %mul111 = mul i64 %conv110, 4, !dbg !11295
  %call112 = call i8* %89(i64 %mul111, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)), !dbg !11292
  %91 = bitcast i8* %call112 to %struct.MCol*, !dbg !11292
  %mcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 0, !dbg !11296
  store %struct.MCol* %91, %struct.MCol** %mcol, align 8, !dbg !11297
  br label %if.end113, !dbg !11298

if.end113:                                        ; preds = %if.then108, %if.end105
  %92 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11299
  %ren_as114 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %92, i32 0, i32 21, !dbg !11301
  %93 = load i16, i16* %ren_as114, align 8, !dbg !11301
  %conv115 = sext i16 %93 to i32, !dbg !11299
  %cmp116 = icmp eq i32 %conv115, 9, !dbg !11302
  br i1 %cmp116, label %if.then118, label %if.end173, !dbg !11303

if.then118:                                       ; preds = %if.end113
  call void @llvm.dbg.declare(metadata i32* %first_uv, metadata !11304, metadata !DIExpression()), !dbg !11306
  %94 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11307
  %dm119 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %94, i32 0, i32 2, !dbg !11308
  %95 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm119, align 8, !dbg !11308
  %faceData120 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %95, i32 0, i32 2, !dbg !11309
  %call121 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData120, i32 5), !dbg !11310
  store i32 %call121, i32* %first_uv, align 4, !dbg !11306
  %96 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11311
  %dm122 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %96, i32 0, i32 2, !dbg !11312
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm122, align 8, !dbg !11312
  %faceData123 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %97, i32 0, i32 2, !dbg !11313
  %98 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11314
  %bb_uvname = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %98, i32 0, i32 35, !dbg !11315
  %arrayidx124 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %bb_uvname, i64 0, i64 0, !dbg !11314
  %arraydecay125 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx124, i64 0, i64 0, !dbg !11314
  %call126 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %faceData123, i32 5, i8* %arraydecay125), !dbg !11316
  %uv = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11317
  %arrayidx127 = getelementptr inbounds [3 x i32], [3 x i32]* %uv, i64 0, i64 0, !dbg !11318
  store i32 %call126, i32* %arrayidx127, align 4, !dbg !11319
  %uv128 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11320
  %arrayidx129 = getelementptr inbounds [3 x i32], [3 x i32]* %uv128, i64 0, i64 0, !dbg !11322
  %99 = load i32, i32* %arrayidx129, align 4, !dbg !11322
  %cmp130 = icmp slt i32 %99, 0, !dbg !11323
  br i1 %cmp130, label %if.then132, label %if.end138, !dbg !11324

if.then132:                                       ; preds = %if.then118
  %100 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11325
  %dm133 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %100, i32 0, i32 2, !dbg !11326
  %101 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm133, align 8, !dbg !11326
  %faceData134 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %101, i32 0, i32 2, !dbg !11327
  %call135 = call i32 @CustomData_get_active_layer_index(%struct.CustomData* %faceData134, i32 5), !dbg !11328
  %uv136 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11329
  %arrayidx137 = getelementptr inbounds [3 x i32], [3 x i32]* %uv136, i64 0, i64 0, !dbg !11330
  store i32 %call135, i32* %arrayidx137, align 4, !dbg !11331
  br label %if.end138, !dbg !11330

if.end138:                                        ; preds = %if.then132, %if.then118
  %102 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11332
  %dm139 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %102, i32 0, i32 2, !dbg !11333
  %103 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm139, align 8, !dbg !11333
  %faceData140 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %103, i32 0, i32 2, !dbg !11334
  %104 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11335
  %bb_uvname141 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %104, i32 0, i32 35, !dbg !11336
  %arrayidx142 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %bb_uvname141, i64 0, i64 1, !dbg !11335
  %arraydecay143 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx142, i64 0, i64 0, !dbg !11335
  %call144 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %faceData140, i32 5, i8* %arraydecay143), !dbg !11337
  %uv145 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11338
  %arrayidx146 = getelementptr inbounds [3 x i32], [3 x i32]* %uv145, i64 0, i64 1, !dbg !11339
  store i32 %call144, i32* %arrayidx146, align 4, !dbg !11340
  %105 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11341
  %dm147 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %105, i32 0, i32 2, !dbg !11342
  %106 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm147, align 8, !dbg !11342
  %faceData148 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %106, i32 0, i32 2, !dbg !11343
  %107 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11344
  %bb_uvname149 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %107, i32 0, i32 35, !dbg !11345
  %arrayidx150 = getelementptr inbounds [3 x [64 x i8]], [3 x [64 x i8]]* %bb_uvname149, i64 0, i64 2, !dbg !11344
  %arraydecay151 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx150, i64 0, i64 0, !dbg !11344
  %call152 = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %faceData148, i32 5, i8* %arraydecay151), !dbg !11346
  %uv153 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11347
  %arrayidx154 = getelementptr inbounds [3 x i32], [3 x i32]* %uv153, i64 0, i64 2, !dbg !11348
  store i32 %call152, i32* %arrayidx154, align 4, !dbg !11349
  %108 = load i32, i32* %first_uv, align 4, !dbg !11350
  %cmp155 = icmp sge i32 %108, 0, !dbg !11352
  br i1 %cmp155, label %if.then157, label %if.end167, !dbg !11353

if.then157:                                       ; preds = %if.end138
  %109 = load i32, i32* %first_uv, align 4, !dbg !11354
  %uv158 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11356
  %arrayidx159 = getelementptr inbounds [3 x i32], [3 x i32]* %uv158, i64 0, i64 0, !dbg !11357
  %110 = load i32, i32* %arrayidx159, align 4, !dbg !11358
  %sub160 = sub nsw i32 %110, %109, !dbg !11358
  store i32 %sub160, i32* %arrayidx159, align 4, !dbg !11358
  %111 = load i32, i32* %first_uv, align 4, !dbg !11359
  %uv161 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11360
  %arrayidx162 = getelementptr inbounds [3 x i32], [3 x i32]* %uv161, i64 0, i64 1, !dbg !11361
  %112 = load i32, i32* %arrayidx162, align 4, !dbg !11362
  %sub163 = sub nsw i32 %112, %111, !dbg !11362
  store i32 %sub163, i32* %arrayidx162, align 4, !dbg !11362
  %113 = load i32, i32* %first_uv, align 4, !dbg !11363
  %uv164 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 8, !dbg !11364
  %arrayidx165 = getelementptr inbounds [3 x i32], [3 x i32]* %uv164, i64 0, i64 2, !dbg !11365
  %114 = load i32, i32* %arrayidx165, align 4, !dbg !11366
  %sub166 = sub nsw i32 %114, %113, !dbg !11366
  store i32 %sub166, i32* %arrayidx165, align 4, !dbg !11366
  br label %if.end167, !dbg !11367

if.end167:                                        ; preds = %if.then157, %if.end138
  %115 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11368
  %bb_align = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %115, i32 0, i32 37, !dbg !11369
  %116 = load i16, i16* %bb_align, align 8, !dbg !11369
  %align = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 13, !dbg !11370
  store i16 %116, i16* %align, align 8, !dbg !11371
  %117 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11372
  %bb_anim = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %117, i32 0, i32 39, !dbg !11373
  %118 = load i16, i16* %bb_anim, align 4, !dbg !11373
  %anim = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 15, !dbg !11374
  store i16 %118, i16* %anim, align 4, !dbg !11375
  %119 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11376
  %draw = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %119, i32 0, i32 15, !dbg !11377
  %120 = load i32, i32* %draw, align 8, !dbg !11377
  %and168 = and i32 %120, 128, !dbg !11378
  %lock = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 9, !dbg !11379
  store i32 %and168, i32* %lock, align 8, !dbg !11380
  %121 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11381
  %bb_ob = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %121, i32 0, i32 126, !dbg !11382
  %122 = load %struct.Object*, %struct.Object** %bb_ob, align 8, !dbg !11382
  %tobool169 = icmp ne %struct.Object* %122, null, !dbg !11381
  br i1 %tobool169, label %cond.true, label %cond.false, !dbg !11381

cond.true:                                        ; preds = %if.end167
  %123 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11383
  %bb_ob170 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %123, i32 0, i32 126, !dbg !11384
  %124 = load %struct.Object*, %struct.Object** %bb_ob170, align 8, !dbg !11384
  br label %cond.end, !dbg !11381

cond.false:                                       ; preds = %if.end167
  %125 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11385
  %call171 = call %struct.Object* @RE_GetCamera(%struct.Render* %125), !dbg !11386
  br label %cond.end, !dbg !11381

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.Object* [ %124, %cond.true ], [ %call171, %cond.false ], !dbg !11381
  %ob172 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 0, !dbg !11387
  store %struct.Object* %cond, %struct.Object** %ob172, align 8, !dbg !11388
  %126 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11389
  %bb_split_offset = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %126, i32 0, i32 40, !dbg !11390
  %127 = load i16, i16* %bb_split_offset, align 2, !dbg !11390
  %split_offset = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 16, !dbg !11391
  store i16 %127, i16* %split_offset, align 2, !dbg !11392
  %128 = load i32, i32* %totpart, align 4, !dbg !11393
  %129 = load i32, i32* %totchild, align 4, !dbg !11394
  %add = add nsw i32 %128, %129, !dbg !11395
  %totnum = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 11, !dbg !11396
  store i32 %add, i32* %totnum, align 8, !dbg !11397
  %130 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11398
  %bb_uv_split = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %130, i32 0, i32 38, !dbg !11399
  %131 = load i16, i16* %bb_uv_split, align 2, !dbg !11399
  %uv_split = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 14, !dbg !11400
  store i16 %131, i16* %uv_split, align 2, !dbg !11401
  br label %if.end173, !dbg !11402

if.end173:                                        ; preds = %cond.end, %if.end113
  %arraydecay174 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11403
  %132 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11404
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %132, i32 0, i32 32, !dbg !11405
  %arraydecay175 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !11404
  %133 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11406
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %133, i32 0, i32 47, !dbg !11407
  %arraydecay176 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !11406
  call void @mul_m4_m4m4([4 x float]* %arraydecay174, [4 x float]* %arraydecay175, [4 x float]* %arraydecay176), !dbg !11408
  %134 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11409
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %134, i32 0, i32 50, !dbg !11410
  %arraydecay177 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !11409
  %arraydecay178 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !11411
  %call179 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay177, [4 x float]* %arraydecay178), !dbg !11412
  %arraydecay180 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !11413
  %135 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11414
  %imat181 = getelementptr inbounds %struct.Object, %struct.Object* %135, i32 0, i32 50, !dbg !11415
  %arraydecay182 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat181, i64 0, i64 0, !dbg !11414
  call void @copy_m3_m4([3 x float]* %arraydecay180, [4 x float]* %arraydecay182), !dbg !11416
  %arraydecay183 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !11417
  call void @transpose_m3([3 x float]* %arraydecay183), !dbg !11418
  %136 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11419
  %flag184 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %136, i32 0, i32 25, !dbg !11421
  %137 = load i32, i32* %flag184, align 4, !dbg !11421
  %and185 = and i32 %137, 128, !dbg !11422
  %tobool186 = icmp ne i32 %and185, 0, !dbg !11422
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !11423

if.then187:                                       ; preds = %if.end173
  %arraydecay188 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %duplimat, i64 0, i64 0, !dbg !11424
  %138 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11426
  %obmat189 = getelementptr inbounds %struct.Object, %struct.Object* %138, i32 0, i32 47, !dbg !11427
  %arraydecay190 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat189, i64 0, i64 0, !dbg !11426
  %139 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11428
  %imat191 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %139, i32 0, i32 19, !dbg !11429
  %arraydecay192 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat191, i64 0, i64 0, !dbg !11428
  call void @mul_m4_m4m4([4 x float]* %arraydecay188, [4 x float]* %arraydecay190, [4 x float]* %arraydecay192), !dbg !11430
  store i8 1, i8* %use_duplimat, align 1, !dbg !11431
  br label %if.end193, !dbg !11432

if.end193:                                        ; preds = %if.then187, %if.end173
  %140 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11433
  %ren_as194 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %140, i32 0, i32 21, !dbg !11435
  %141 = load i16, i16* %ren_as194, align 8, !dbg !11435
  %conv195 = sext i16 %141 to i32, !dbg !11433
  %cmp196 = icmp eq i32 %conv195, 6, !dbg !11436
  br i1 %cmp196, label %land.lhs.true198, label %if.end350, !dbg !11437

land.lhs.true198:                                 ; preds = %if.end193
  %142 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11438
  %pathcache = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %142, i32 0, i32 7, !dbg !11439
  %143 = load %struct.ParticleCacheKey**, %struct.ParticleCacheKey*** %pathcache, align 8, !dbg !11439
  %tobool199 = icmp ne %struct.ParticleCacheKey** %143, null, !dbg !11438
  br i1 %tobool199, label %if.then200, label %if.end350, !dbg !11440

if.then200:                                       ; preds = %land.lhs.true198
  %144 = load i32, i32* %step_nbr, align 4, !dbg !11441
  %conv201 = sitofp i32 %144 to double, !dbg !11443
  %call202 = call double @pow(double 2.000000e+00, double %conv201) #5, !dbg !11444
  %conv203 = fptosi double %call202 to i32, !dbg !11445
  store i32 %conv203, i32* %path_nbr, align 4, !dbg !11446
  %145 = load i32, i32* %path_nbr, align 4, !dbg !11447
  %tobool204 = icmp ne i32 %145, 0, !dbg !11447
  br i1 %tobool204, label %if.then205, label %if.end227, !dbg !11449

if.then205:                                       ; preds = %if.then200
  %146 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11450
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %146, i32 0, i32 2, !dbg !11450
  %147 = load i16, i16* %material_type, align 8, !dbg !11450
  %conv206 = sext i16 %147 to i32, !dbg !11450
  %cmp207 = icmp eq i32 %conv206, 1, !dbg !11450
  br i1 %cmp207, label %if.end226, label %lor.lhs.false209, !dbg !11450

lor.lhs.false209:                                 ; preds = %if.then205
  %148 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11450
  %material_type210 = getelementptr inbounds %struct.Material, %struct.Material* %148, i32 0, i32 2, !dbg !11450
  %149 = load i16, i16* %material_type210, align 8, !dbg !11450
  %conv211 = sext i16 %149 to i32, !dbg !11450
  %cmp212 = icmp eq i32 %conv211, 3, !dbg !11450
  br i1 %cmp212, label %if.end226, label %if.then214, !dbg !11453

if.then214:                                       ; preds = %lor.lhs.false209
  %150 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11454
  %151 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11456
  %152 = bitcast %struct.ParticleSystem* %151 to i8*, !dbg !11456
  %call215 = call float* @get_object_orco(%struct.Render* %150, i8* %152), !dbg !11457
  %orco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11458
  store float* %call215, float** %orco, align 8, !dbg !11459
  %orco216 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11460
  %153 = load float*, float** %orco216, align 8, !dbg !11460
  %tobool217 = icmp ne float* %153, null, !dbg !11462
  br i1 %tobool217, label %if.end225, label %if.then218, !dbg !11463

if.then218:                                       ; preds = %if.then214
  %154 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11464
  %155 = load i32, i32* %totpart, align 4, !dbg !11466
  %156 = load i32, i32* %totchild, align 4, !dbg !11467
  %add219 = add nsw i32 %155, %156, !dbg !11468
  %conv220 = sext i32 %add219 to i64, !dbg !11469
  %mul221 = mul i64 12, %conv220, !dbg !11470
  %call222 = call i8* %154(i64 %mul221, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)), !dbg !11464
  %157 = bitcast i8* %call222 to float*, !dbg !11464
  %orco223 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11471
  store float* %157, float** %orco223, align 8, !dbg !11472
  %158 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11473
  %159 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11474
  %160 = bitcast %struct.ParticleSystem* %159 to i8*, !dbg !11474
  %orco224 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11475
  %161 = load float*, float** %orco224, align 8, !dbg !11475
  call void @set_object_orco(%struct.Render* %158, i8* %160, float* %161), !dbg !11476
  br label %if.end225, !dbg !11477

if.end225:                                        ; preds = %if.then218, %if.then214
  br label %if.end226, !dbg !11478

if.end226:                                        ; preds = %if.end225, %lor.lhs.false209, %if.then205
  br label %if.end227, !dbg !11479

if.end227:                                        ; preds = %if.end226, %if.then200
  %162 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11480
  %draw228 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %162, i32 0, i32 15, !dbg !11482
  %163 = load i32, i32* %draw228, align 8, !dbg !11482
  %and229 = and i32 %163, 2048, !dbg !11483
  %tobool230 = icmp ne i32 %and229, 0, !dbg !11483
  br i1 %tobool230, label %if.then231, label %if.end238, !dbg !11484

if.then231:                                       ; preds = %if.end227
  %adapt = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 12, !dbg !11485
  store i32 1, i32* %adapt, align 8, !dbg !11487
  %164 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11488
  %adapt_pix = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %164, i32 0, i32 29, !dbg !11489
  %165 = load i16, i16* %adapt_pix, align 8, !dbg !11489
  %conv232 = sitofp i16 %165 to float, !dbg !11490
  %adapt_pix233 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 6, !dbg !11491
  store float %conv232, float* %adapt_pix233, align 8, !dbg !11492
  %166 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11493
  %adapt_angle = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %166, i32 0, i32 28, !dbg !11493
  %167 = load i16, i16* %adapt_angle, align 2, !dbg !11493
  %conv234 = sitofp i16 %167 to float, !dbg !11493
  %mul235 = fmul float %conv234, 0x3F91DF46A0000000, !dbg !11493
  %call236 = call float @cosf(float %mul235) #5, !dbg !11494
  %adapt_angle237 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 5, !dbg !11495
  store float %call236, float* %adapt_angle237, align 4, !dbg !11496
  br label %if.end238, !dbg !11497

if.end238:                                        ; preds = %if.then231, %if.end227
  %168 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11498
  %draw239 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %168, i32 0, i32 15, !dbg !11500
  %169 = load i32, i32* %draw239, align 8, !dbg !11500
  %and240 = and i32 %169, 32768, !dbg !11501
  %tobool241 = icmp ne i32 %and240, 0, !dbg !11501
  br i1 %tobool241, label %if.then242, label %if.end349, !dbg !11502

if.then242:                                       ; preds = %if.end238
  %170 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !11503
  %171 = load i32, i32* %totpart, align 4, !dbg !11505
  %172 = load i32, i32* %totchild, align 4, !dbg !11506
  %add243 = add nsw i32 %171, %172, !dbg !11507
  %173 = load i32, i32* %path_nbr, align 4, !dbg !11508
  %add244 = add nsw i32 %173, 1, !dbg !11509
  %mul245 = mul nsw i32 %add243, %add244, !dbg !11510
  %call246 = call %struct.StrandBuffer* @RE_addStrandBuffer(%struct.ObjectRen* %170, i32 %mul245), !dbg !11511
  store %struct.StrandBuffer* %call246, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11512
  %174 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11513
  %175 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11514
  %ma247 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %175, i32 0, i32 7, !dbg !11515
  store %struct.Material* %174, %struct.Material** %ma247, align 8, !dbg !11516
  %176 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11517
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %176, i32 0, i32 52, !dbg !11518
  %177 = load i32, i32* %lay, align 8, !dbg !11518
  %178 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11519
  %lay248 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %178, i32 0, i32 9, !dbg !11520
  store i32 %177, i32* %lay248, align 8, !dbg !11521
  %179 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11522
  %winmat = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %179, i32 0, i32 17, !dbg !11523
  %arraydecay249 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !11522
  %180 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11524
  %winmat250 = getelementptr inbounds %struct.Render, %struct.Render* %180, i32 0, i32 35, !dbg !11525
  %arraydecay251 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat250, i64 0, i64 0, !dbg !11524
  call void @copy_m4_m4([4 x float]* %arraydecay249, [4 x float]* %arraydecay251), !dbg !11526
  %181 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11527
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %181, i32 0, i32 13, !dbg !11528
  %182 = load i32, i32* %winx, align 4, !dbg !11528
  %183 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11529
  %winx252 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %183, i32 0, i32 18, !dbg !11530
  store i32 %182, i32* %winx252, align 8, !dbg !11531
  %184 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11532
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %184, i32 0, i32 14, !dbg !11533
  %185 = load i32, i32* %winy, align 8, !dbg !11533
  %186 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11534
  %winy253 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %186, i32 0, i32 19, !dbg !11535
  store i32 %185, i32* %winy253, align 4, !dbg !11536
  %187 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11537
  %maxdepth = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %187, i32 0, i32 12, !dbg !11538
  store i32 2, i32* %maxdepth, align 4, !dbg !11539
  %188 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11540
  %adapt_angle254 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %188, i32 0, i32 28, !dbg !11540
  %189 = load i16, i16* %adapt_angle254, align 2, !dbg !11540
  %conv255 = sitofp i16 %189 to float, !dbg !11540
  %mul256 = fmul float %conv255, 0x3F91DF46A0000000, !dbg !11540
  %call257 = call float @cosf(float %mul256) #5, !dbg !11541
  %190 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11542
  %adaptcos = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %190, i32 0, i32 13, !dbg !11543
  store float %call257, float* %adaptcos, align 8, !dbg !11544
  %override_uv258 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 13, !dbg !11545
  %191 = load i32, i32* %override_uv258, align 4, !dbg !11545
  %192 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11546
  %overrideuv = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %192, i32 0, i32 10, !dbg !11547
  store i32 %191, i32* %overrideuv, align 4, !dbg !11548
  %193 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11549
  %strand_min = getelementptr inbounds %struct.Material, %struct.Material* %193, i32 0, i32 67, !dbg !11550
  %194 = load float, float* %strand_min, align 4, !dbg !11550
  %195 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11551
  %minwidth = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %195, i32 0, i32 14, !dbg !11552
  store float %194, float* %minwidth, align 4, !dbg !11553
  %196 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11554
  %strand_widthfade = getelementptr inbounds %struct.Material, %struct.Material* %196, i32 0, i32 68, !dbg !11556
  %197 = load float, float* %strand_widthfade, align 8, !dbg !11556
  %cmp259 = fcmp oeq float %197, 0.000000e+00, !dbg !11557
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !11558

if.then261:                                       ; preds = %if.then242
  %198 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11559
  %widthfade = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %198, i32 0, i32 15, !dbg !11560
  store float -1.000000e+00, float* %widthfade, align 8, !dbg !11561
  br label %if.end282, !dbg !11559

if.else262:                                       ; preds = %if.then242
  %199 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11562
  %strand_widthfade263 = getelementptr inbounds %struct.Material, %struct.Material* %199, i32 0, i32 68, !dbg !11564
  %200 = load float, float* %strand_widthfade263, align 8, !dbg !11564
  %cmp264 = fcmp oge float %200, 1.000000e+00, !dbg !11565
  br i1 %cmp264, label %if.then266, label %if.else270, !dbg !11566

if.then266:                                       ; preds = %if.else262
  %201 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11567
  %strand_widthfade267 = getelementptr inbounds %struct.Material, %struct.Material* %201, i32 0, i32 68, !dbg !11568
  %202 = load float, float* %strand_widthfade267, align 8, !dbg !11568
  %sub268 = fsub float 2.000000e+00, %202, !dbg !11569
  %203 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11570
  %widthfade269 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %203, i32 0, i32 15, !dbg !11571
  store float %sub268, float* %widthfade269, align 8, !dbg !11572
  br label %if.end281, !dbg !11570

if.else270:                                       ; preds = %if.else262
  %204 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11573
  %strand_widthfade271 = getelementptr inbounds %struct.Material, %struct.Material* %204, i32 0, i32 68, !dbg !11573
  %205 = load float, float* %strand_widthfade271, align 8, !dbg !11573
  %cmp272 = fcmp ogt float %205, 0x3EE4F8B580000000, !dbg !11573
  br i1 %cmp272, label %cond.true274, label %cond.false276, !dbg !11573

cond.true274:                                     ; preds = %if.else270
  %206 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11573
  %strand_widthfade275 = getelementptr inbounds %struct.Material, %struct.Material* %206, i32 0, i32 68, !dbg !11573
  %207 = load float, float* %strand_widthfade275, align 8, !dbg !11573
  br label %cond.end277, !dbg !11573

cond.false276:                                    ; preds = %if.else270
  br label %cond.end277, !dbg !11573

cond.end277:                                      ; preds = %cond.false276, %cond.true274
  %cond278 = phi float [ %207, %cond.true274 ], [ 0x3EE4F8B580000000, %cond.false276 ], !dbg !11573
  %div279 = fdiv float 1.000000e+00, %cond278, !dbg !11574
  %208 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11575
  %widthfade280 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %208, i32 0, i32 15, !dbg !11576
  store float %div279, float* %widthfade280, align 8, !dbg !11577
  br label %if.end281

if.end281:                                        ; preds = %cond.end277, %if.then266
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then261
  %209 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11578
  %flag283 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %209, i32 0, i32 5, !dbg !11580
  %210 = load i32, i32* %flag283, align 8, !dbg !11580
  %and284 = and i32 %210, 1024, !dbg !11581
  %tobool285 = icmp ne i32 %and284, 0, !dbg !11581
  br i1 %tobool285, label %if.then286, label %if.end289, !dbg !11582

if.then286:                                       ; preds = %if.end282
  %211 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11583
  %flag287 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %211, i32 0, i32 11, !dbg !11584
  %212 = load i32, i32* %flag287, align 8, !dbg !11585
  %or288 = or i32 %212, 1, !dbg !11585
  store i32 %or288, i32* %flag287, align 8, !dbg !11585
  br label %if.end289, !dbg !11583

if.end289:                                        ; preds = %if.then286, %if.end282
  %213 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11586
  %mode290 = getelementptr inbounds %struct.Material, %struct.Material* %213, i32 0, i32 51, !dbg !11588
  %214 = load i32, i32* %mode290, align 4, !dbg !11588
  %and291 = and i32 %214, 1073741824, !dbg !11589
  %tobool292 = icmp ne i32 %and291, 0, !dbg !11589
  br i1 %tobool292, label %if.then293, label %if.end296, !dbg !11590

if.then293:                                       ; preds = %if.end289
  %215 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11591
  %flag294 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %215, i32 0, i32 11, !dbg !11592
  %216 = load i32, i32* %flag294, align 8, !dbg !11593
  %or295 = or i32 %216, 2, !dbg !11593
  store i32 %or295, i32* %flag294, align 8, !dbg !11593
  br label %if.end296, !dbg !11591

if.end296:                                        ; preds = %if.then293, %if.end289
  %217 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11594
  %vert = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %217, i32 0, i32 2, !dbg !11595
  %218 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !11595
  store %struct.StrandVert* %218, %struct.StrandVert** %svert, align 8, !dbg !11596
  %219 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11597
  %r297 = getelementptr inbounds %struct.Render, %struct.Render* %219, i32 0, i32 45, !dbg !11599
  %mode298 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r297, i32 0, i32 47, !dbg !11600
  %220 = load i32, i32* %mode298, align 8, !dbg !11600
  %and299 = and i32 %220, 1048576, !dbg !11601
  %tobool300 = icmp ne i32 %and299, 0, !dbg !11601
  br i1 %tobool300, label %if.then301, label %if.else302, !dbg !11602

if.then301:                                       ; preds = %if.end296
  store i8 1, i8* %do_surfacecache, align 1, !dbg !11603
  br label %if.end318, !dbg !11604

if.else302:                                       ; preds = %if.end296
  %221 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11605
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %221, i32 0, i32 46, !dbg !11607
  %mode303 = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 23, !dbg !11608
  %222 = load i16, i16* %mode303, align 2, !dbg !11608
  %conv304 = sext i16 %222 to i32, !dbg !11605
  %and305 = and i32 %conv304, 208, !dbg !11609
  %tobool306 = icmp ne i32 %and305, 0, !dbg !11609
  br i1 %tobool306, label %land.lhs.true307, label %if.end317, !dbg !11610

land.lhs.true307:                                 ; preds = %if.else302
  %223 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !11611
  %wrld308 = getelementptr inbounds %struct.Render, %struct.Render* %223, i32 0, i32 46, !dbg !11612
  %ao_gather_method = getelementptr inbounds %struct.World, %struct.World* %wrld308, i32 0, i32 64, !dbg !11613
  %224 = load i16, i16* %ao_gather_method, align 2, !dbg !11613
  %conv309 = sext i16 %224 to i32, !dbg !11611
  %cmp310 = icmp eq i32 %conv309, 1, !dbg !11614
  br i1 %cmp310, label %if.then312, label %if.end317, !dbg !11615

if.then312:                                       ; preds = %land.lhs.true307
  %225 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11616
  %amb = getelementptr inbounds %struct.Material, %struct.Material* %225, i32 0, i32 16, !dbg !11618
  %226 = load float, float* %amb, align 4, !dbg !11618
  %cmp313 = fcmp une float %226, 0.000000e+00, !dbg !11619
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !11620

if.then315:                                       ; preds = %if.then312
  store i8 1, i8* %do_surfacecache, align 1, !dbg !11621
  br label %if.end316, !dbg !11622

if.end316:                                        ; preds = %if.then315, %if.then312
  br label %if.end317, !dbg !11623

if.end317:                                        ; preds = %if.end316, %land.lhs.true307, %if.else302
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then301
  %227 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11624
  %dm319 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %227, i32 0, i32 2, !dbg !11625
  %228 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm319, align 8, !dbg !11625
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %228, i32 0, i32 25, !dbg !11626
  %229 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !11626
  %230 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11627
  %dm320 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %230, i32 0, i32 2, !dbg !11628
  %231 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm320, align 8, !dbg !11628
  %call321 = call i32 %229(%struct.DerivedMesh* %231), !dbg !11624
  store i32 %call321, i32* %totface, align 4, !dbg !11629
  %232 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11630
  %dm322 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %232, i32 0, i32 2, !dbg !11631
  %233 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm322, align 8, !dbg !11631
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %233, i32 0, i32 52, !dbg !11632
  %234 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !11632
  %235 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11633
  %dm323 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %235, i32 0, i32 2, !dbg !11634
  %236 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm323, align 8, !dbg !11634
  %call324 = call i8* %234(%struct.DerivedMesh* %236, i32 7), !dbg !11630
  %237 = bitcast i8* %call324 to i32*, !dbg !11630
  store i32* %237, i32** %index_mf_to_mpoly, align 8, !dbg !11635
  %238 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11636
  %dm325 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %238, i32 0, i32 2, !dbg !11637
  %239 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm325, align 8, !dbg !11637
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %239, i32 0, i32 54, !dbg !11638
  %240 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !11638
  %241 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11639
  %dm326 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %241, i32 0, i32 2, !dbg !11640
  %242 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm326, align 8, !dbg !11640
  %call327 = call i8* %240(%struct.DerivedMesh* %242, i32 7), !dbg !11636
  %243 = bitcast i8* %call327 to i32*, !dbg !11636
  store i32* %243, i32** %index_mp_to_orig, align 8, !dbg !11641
  %244 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !11642
  %cmp328 = icmp eq i32* %244, null, !dbg !11644
  br i1 %cmp328, label %if.then330, label %if.end331, !dbg !11645

if.then330:                                       ; preds = %if.end318
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !11646
  br label %if.end331, !dbg !11648

if.end331:                                        ; preds = %if.then330, %if.end318
  store i32 0, i32* %a, align 4, !dbg !11649
  br label %for.cond, !dbg !11651

for.cond:                                         ; preds = %for.inc, %if.end331
  %245 = load i32, i32* %a, align 4, !dbg !11652
  %246 = load i32, i32* %totface, align 4, !dbg !11654
  %cmp332 = icmp slt i32 %245, %246, !dbg !11655
  br i1 %cmp332, label %for.body, label %for.end, !dbg !11656

for.body:                                         ; preds = %for.cond
  %247 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11657
  %totbound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %247, i32 0, i32 5, !dbg !11658
  %248 = load i32, i32* %totbound, align 4, !dbg !11658
  %249 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !11659
  %tobool334 = icmp ne i32* %249, null, !dbg !11660
  br i1 %tobool334, label %cond.true335, label %cond.false337, !dbg !11660

cond.true335:                                     ; preds = %for.body
  %250 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !11661
  %251 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !11662
  %252 = load i32, i32* %a, align 4, !dbg !11663
  %call336 = call i32 @DM_origindex_mface_mpoly(i32* %250, i32* %251, i32 %252), !dbg !11664
  br label %cond.end338, !dbg !11660

cond.false337:                                    ; preds = %for.body
  %253 = load i32, i32* %a, align 4, !dbg !11665
  br label %cond.end338, !dbg !11660

cond.end338:                                      ; preds = %cond.false337, %cond.true335
  %cond339 = phi i32 [ %call336, %cond.true335 ], [ %253, %cond.false337 ], !dbg !11660
  %call340 = call i32 @max_ii(i32 %248, i32 %cond339), !dbg !11666
  %254 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11667
  %totbound341 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %254, i32 0, i32 5, !dbg !11668
  store i32 %call340, i32* %totbound341, align 4, !dbg !11669
  br label %for.inc, !dbg !11667

for.inc:                                          ; preds = %cond.end338
  %255 = load i32, i32* %a, align 4, !dbg !11670
  %inc = add nsw i32 %255, 1, !dbg !11670
  store i32 %inc, i32* %a, align 4, !dbg !11670
  br label %for.cond, !dbg !11671, !llvm.loop !11672

for.end:                                          ; preds = %for.cond
  %256 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11674
  %totbound342 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %256, i32 0, i32 5, !dbg !11675
  %257 = load i32, i32* %totbound342, align 4, !dbg !11676
  %inc343 = add nsw i32 %257, 1, !dbg !11676
  store i32 %inc343, i32* %totbound342, align 4, !dbg !11676
  %258 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11677
  %259 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11678
  %totbound344 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %259, i32 0, i32 5, !dbg !11679
  %260 = load i32, i32* %totbound344, align 4, !dbg !11679
  %conv345 = sext i32 %260 to i64, !dbg !11678
  %mul346 = mul i64 32, %conv345, !dbg !11680
  %call347 = call i8* %258(i64 %mul346, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)), !dbg !11677
  %261 = bitcast i8* %call347 to %struct.StrandBound*, !dbg !11677
  %262 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11681
  %bound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %262, i32 0, i32 3, !dbg !11682
  store %struct.StrandBound* %261, %struct.StrandBound** %bound, align 8, !dbg !11683
  %263 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !11684
  %bound348 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %263, i32 0, i32 3, !dbg !11685
  %264 = load %struct.StrandBound*, %struct.StrandBound** %bound348, align 8, !dbg !11685
  store %struct.StrandBound* %264, %struct.StrandBound** %sbound, align 8, !dbg !11686
  %265 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !11687
  %end = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %265, i32 0, i32 1, !dbg !11688
  store i32 0, i32* %end, align 4, !dbg !11689
  %266 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !11690
  %start = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %266, i32 0, i32 0, !dbg !11691
  store i32 0, i32* %start, align 4, !dbg !11692
  br label %if.end349, !dbg !11693

if.end349:                                        ; preds = %for.end, %if.end238
  br label %if.end350, !dbg !11694

if.end350:                                        ; preds = %if.end349, %land.lhs.true198, %if.end193
  %orco351 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11695
  %267 = load float*, float** %orco351, align 8, !dbg !11695
  %cmp352 = icmp eq float* %267, null, !dbg !11697
  br i1 %cmp352, label %if.then354, label %if.end357, !dbg !11698

if.then354:                                       ; preds = %if.end350
  %268 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11699
  %call355 = call i8* %268(i64 12, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0)), !dbg !11699
  %269 = bitcast i8* %call355 to float*, !dbg !11699
  %orco356 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11701
  store float* %269, float** %orco356, align 8, !dbg !11702
  store i32 1, i32* %orco1, align 4, !dbg !11703
  br label %if.end357, !dbg !11704

if.end357:                                        ; preds = %if.then354, %if.end350
  %270 = load i32, i32* %path_nbr, align 4, !dbg !11705
  %cmp358 = icmp eq i32 %270, 0, !dbg !11707
  br i1 %cmp358, label %if.then360, label %if.end362, !dbg !11708

if.then360:                                       ; preds = %if.end357
  %call361 = call %struct.LatticeDeformData* @psys_create_lattice_deform_data(%struct.ParticleSimulationData* %sim), !dbg !11709
  %271 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11710
  %lattice_deform_data = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %271, i32 0, i32 15, !dbg !11711
  store %struct.LatticeDeformData* %call361, %struct.LatticeDeformData** %lattice_deform_data, align 8, !dbg !11712
  br label %if.end362, !dbg !11710

if.end362:                                        ; preds = %if.then360, %if.end357
  store i32 0, i32* %a, align 4, !dbg !11713
  %272 = load %struct.ParticleData*, %struct.ParticleData** %pars, align 8, !dbg !11715
  store %struct.ParticleData* %272, %struct.ParticleData** %pa, align 8, !dbg !11716
  br label %for.cond363, !dbg !11717

for.cond363:                                      ; preds = %for.inc1032, %if.end362
  %273 = load i32, i32* %a, align 4, !dbg !11718
  %274 = load i32, i32* %totpart, align 4, !dbg !11720
  %275 = load i32, i32* %totchild, align 4, !dbg !11721
  %add364 = add nsw i32 %274, %275, !dbg !11722
  %cmp365 = icmp slt i32 %273, %add364, !dbg !11723
  br i1 %cmp365, label %for.body367, label %for.end1036, !dbg !11724

for.body367:                                      ; preds = %for.cond363
  %276 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !11725
  %call368 = call float @BLI_rng_get_float(%struct.RNG* %276), !dbg !11727
  store float %call368, float* %random, align 4, !dbg !11728
  %277 = load i32, i32* %a, align 4, !dbg !11729
  %278 = load i32, i32* %totpart, align 4, !dbg !11731
  %cmp369 = icmp slt i32 %277, %278, !dbg !11732
  br i1 %cmp369, label %if.then371, label %if.else446, !dbg !11733

if.then371:                                       ; preds = %for.body367
  %279 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11734
  %flag372 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %279, i32 0, i32 17, !dbg !11737
  %280 = load i16, i16* %flag372, align 4, !dbg !11737
  %conv373 = sext i16 %280 to i32, !dbg !11734
  %and374 = and i32 %conv373, 1, !dbg !11738
  %tobool375 = icmp ne i32 %and374, 0, !dbg !11738
  br i1 %tobool375, label %if.then376, label %if.end377, !dbg !11739

if.then376:                                       ; preds = %if.then371
  br label %for.inc1032, !dbg !11740

if.end377:                                        ; preds = %if.then371
  %281 = load float, float* %cfra, align 4, !dbg !11741
  %282 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11742
  %time = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %282, i32 0, i32 6, !dbg !11743
  %283 = load float, float* %time, align 4, !dbg !11743
  %sub378 = fsub float %281, %283, !dbg !11744
  %284 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11745
  %lifetime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %284, i32 0, i32 7, !dbg !11746
  %285 = load float, float* %lifetime, align 8, !dbg !11746
  %div379 = fdiv float %sub378, %285, !dbg !11747
  store float %div379, float* %pa_time, align 4, !dbg !11748
  %286 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11749
  %time380 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %286, i32 0, i32 6, !dbg !11750
  %287 = load float, float* %time380, align 4, !dbg !11750
  store float %287, float* %pa_birthtime, align 4, !dbg !11751
  %288 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11752
  %dietime = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %288, i32 0, i32 8, !dbg !11753
  %289 = load float, float* %dietime, align 4, !dbg !11753
  store float %289, float* %pa_dietime, align 4, !dbg !11754
  %290 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !11755
  %hasize381 = getelementptr inbounds %struct.Material, %struct.Material* %290, i32 0, i32 59, !dbg !11756
  %291 = load float, float* %hasize381, align 4, !dbg !11756
  store float %291, float* %hasize, align 4, !dbg !11757
  %292 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !11758
  %tobool382 = icmp ne %struct.ParticleSystem* %292, null, !dbg !11758
  br i1 %tobool382, label %land.lhs.true383, label %if.else397, !dbg !11760

land.lhs.true383:                                 ; preds = %if.end377
  %293 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11761
  %phystype384 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %293, i32 0, i32 11, !dbg !11762
  %294 = load i16, i16* %phystype384, align 8, !dbg !11762
  %conv385 = sext i16 %294 to i32, !dbg !11761
  %cmp386 = icmp eq i32 %conv385, 0, !dbg !11763
  br i1 %cmp386, label %if.then388, label %if.else397, !dbg !11764

if.then388:                                       ; preds = %land.lhs.true383
  %295 = load %struct.ParticleSystem*, %struct.ParticleSystem** %tpsys, align 8, !dbg !11765
  %particles389 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %295, i32 0, i32 3, !dbg !11767
  %296 = load %struct.ParticleData*, %struct.ParticleData** %particles389, align 8, !dbg !11767
  %297 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11768
  %num390 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %297, i32 0, i32 9, !dbg !11769
  %298 = load i32, i32* %num390, align 8, !dbg !11769
  %idx.ext = sext i32 %298 to i64, !dbg !11770
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %296, i64 %idx.ext, !dbg !11770
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %tpa, align 8, !dbg !11771
  %299 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11772
  %300 = load %struct.ParticleSettings*, %struct.ParticleSettings** %tpart, align 8, !dbg !11773
  %from = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %300, i32 0, i32 8, !dbg !11774
  %301 = load i16, i16* %from, align 2, !dbg !11774
  %conv391 = sext i16 %301 to i32, !dbg !11773
  %302 = load %struct.ParticleData*, %struct.ParticleData** %tpa, align 8, !dbg !11775
  %num392 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %302, i32 0, i32 9, !dbg !11776
  %303 = load i32, i32* %num392, align 8, !dbg !11776
  %304 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11777
  %num_dmcache = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %304, i32 0, i32 10, !dbg !11778
  %305 = load i32, i32* %num_dmcache, align 4, !dbg !11778
  %306 = load %struct.ParticleData*, %struct.ParticleData** %tpa, align 8, !dbg !11779
  %fuv = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %306, i32 0, i32 11, !dbg !11780
  %arraydecay393 = getelementptr inbounds [4 x float], [4 x float]* %fuv, i64 0, i64 0, !dbg !11779
  %307 = load %struct.ParticleData*, %struct.ParticleData** %tpa, align 8, !dbg !11781
  %foffset = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %307, i32 0, i32 12, !dbg !11782
  %308 = load float, float* %foffset, align 8, !dbg !11782
  %arraydecay394 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11783
  %arraydecay395 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11784
  %orco396 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11785
  %309 = load float*, float** %orco396, align 8, !dbg !11785
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %299, i32 %conv391, i32 %303, i32 %305, float* %arraydecay393, float %308, float* %arraydecay394, float* %arraydecay395, float* null, float* null, float* %309, float* null), !dbg !11786
  br label %if.end408, !dbg !11787

if.else397:                                       ; preds = %land.lhs.true383, %if.end377
  %310 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11788
  %311 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11790
  %from398 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %311, i32 0, i32 8, !dbg !11791
  %312 = load i16, i16* %from398, align 2, !dbg !11791
  %conv399 = sext i16 %312 to i32, !dbg !11790
  %313 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11792
  %num400 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %313, i32 0, i32 9, !dbg !11793
  %314 = load i32, i32* %num400, align 8, !dbg !11793
  %315 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11794
  %num_dmcache401 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %315, i32 0, i32 10, !dbg !11795
  %316 = load i32, i32* %num_dmcache401, align 4, !dbg !11795
  %317 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11796
  %fuv402 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %317, i32 0, i32 11, !dbg !11797
  %arraydecay403 = getelementptr inbounds [4 x float], [4 x float]* %fuv402, i64 0, i64 0, !dbg !11796
  %318 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11798
  %foffset404 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %318, i32 0, i32 12, !dbg !11799
  %319 = load float, float* %foffset404, align 8, !dbg !11799
  %arraydecay405 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11800
  %arraydecay406 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11801
  %orco407 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11802
  %320 = load float*, float** %orco407, align 8, !dbg !11802
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %310, i32 %conv399, i32 %314, i32 %316, float* %arraydecay403, float %319, float* %arraydecay405, float* %arraydecay406, float* null, float* null, float* %320, float* null), !dbg !11803
  br label %if.end408

if.end408:                                        ; preds = %if.else397, %if.then388
  %321 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11804
  %num_dmcache409 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %321, i32 0, i32 10, !dbg !11805
  %322 = load i32, i32* %num_dmcache409, align 4, !dbg !11805
  store i32 %322, i32* %num, align 4, !dbg !11806
  %323 = load i32, i32* %num, align 4, !dbg !11807
  %cmp410 = icmp eq i32 %323, -1, !dbg !11809
  br i1 %cmp410, label %if.then412, label %if.end423, !dbg !11810

if.then412:                                       ; preds = %if.end408
  %324 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11811
  %num413 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %324, i32 0, i32 9, !dbg !11813
  %325 = load i32, i32* %num413, align 8, !dbg !11813
  %326 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11814
  %dm414 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %326, i32 0, i32 2, !dbg !11815
  %327 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm414, align 8, !dbg !11815
  %getNumTessFaces415 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %327, i32 0, i32 25, !dbg !11816
  %328 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces415, align 8, !dbg !11816
  %329 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11817
  %dm416 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %329, i32 0, i32 2, !dbg !11818
  %330 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm416, align 8, !dbg !11818
  %call417 = call i32 %328(%struct.DerivedMesh* %330), !dbg !11814
  %cmp418 = icmp slt i32 %325, %call417, !dbg !11819
  br i1 %cmp418, label %if.then420, label %if.end422, !dbg !11820

if.then420:                                       ; preds = %if.then412
  %331 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11821
  %num421 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %331, i32 0, i32 9, !dbg !11822
  %332 = load i32, i32* %num421, align 8, !dbg !11822
  store i32 %332, i32* %num, align 4, !dbg !11823
  br label %if.end422, !dbg !11824

if.end422:                                        ; preds = %if.then420, %if.then412
  br label %if.end423, !dbg !11825

if.end423:                                        ; preds = %if.end422, %if.end408
  %333 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11826
  %from424 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %333, i32 0, i32 8, !dbg !11827
  %334 = load i16, i16* %from424, align 2, !dbg !11827
  %335 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11828
  %dm425 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %335, i32 0, i32 2, !dbg !11829
  %336 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm425, align 8, !dbg !11829
  %337 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11830
  %fuv426 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %337, i32 0, i32 11, !dbg !11831
  %arraydecay427 = getelementptr inbounds [4 x float], [4 x float]* %fuv426, i64 0, i64 0, !dbg !11830
  %338 = load i32, i32* %num, align 4, !dbg !11832
  call void @get_particle_uvco_mcol(i16 signext %334, %struct.DerivedMesh* %336, float* %arraydecay427, i32 %338, %struct.ParticleStrandData* %sd), !dbg !11833
  %339 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !11834
  %size = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %339, i32 0, i32 13, !dbg !11835
  %340 = load float, float* %size, align 4, !dbg !11835
  store float %340, float* %pa_size, align 4, !dbg !11836
  %341 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11837
  %342 = load i32, i32* %a, align 4, !dbg !11838
  %call428 = call float @psys_frand(%struct.ParticleSystem* %341, i32 %342), !dbg !11839
  %sub429 = fsub float %call428, 5.000000e-01, !dbg !11840
  %mul430 = fmul float 2.000000e+00, %sub429, !dbg !11841
  store float %mul430, float* %r_tilt, align 4, !dbg !11842
  %343 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11843
  %344 = load i32, i32* %a, align 4, !dbg !11844
  %add431 = add nsw i32 %344, 1, !dbg !11845
  %call432 = call float @psys_frand(%struct.ParticleSystem* %343, i32 %add431), !dbg !11846
  store float %call432, float* %r_length, align 4, !dbg !11847
  %345 = load i32, i32* %path_nbr, align 4, !dbg !11848
  %tobool433 = icmp ne i32 %345, 0, !dbg !11848
  br i1 %tobool433, label %if.then434, label %if.end437, !dbg !11850

if.then434:                                       ; preds = %if.end423
  %346 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11851
  %pathcache435 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %346, i32 0, i32 7, !dbg !11853
  %347 = load %struct.ParticleCacheKey**, %struct.ParticleCacheKey*** %pathcache435, align 8, !dbg !11853
  %348 = load i32, i32* %a, align 4, !dbg !11854
  %idxprom = sext i32 %348 to i64, !dbg !11851
  %arrayidx436 = getelementptr inbounds %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %347, i64 %idxprom, !dbg !11851
  %349 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %arrayidx436, align 8, !dbg !11851
  store %struct.ParticleCacheKey* %349, %struct.ParticleCacheKey** %cache, align 8, !dbg !11855
  %350 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !11856
  %steps = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %350, i32 0, i32 5, !dbg !11857
  %351 = load i32, i32* %steps, align 4, !dbg !11857
  store i32 %351, i32* %max_k, align 4, !dbg !11858
  br label %if.end437, !dbg !11859

if.end437:                                        ; preds = %if.then434, %if.end423
  %352 = load i32, i32* %totchild, align 4, !dbg !11860
  %tobool438 = icmp ne i32 %352, 0, !dbg !11860
  br i1 %tobool438, label %land.lhs.true439, label %if.end445, !dbg !11862

land.lhs.true439:                                 ; preds = %if.end437
  %353 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11863
  %draw440 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %353, i32 0, i32 15, !dbg !11864
  %354 = load i32, i32* %draw440, align 8, !dbg !11864
  %and441 = and i32 %354, 256, !dbg !11865
  %cmp442 = icmp eq i32 %and441, 0, !dbg !11866
  br i1 %cmp442, label %if.then444, label %if.end445, !dbg !11867

if.then444:                                       ; preds = %land.lhs.true439
  br label %for.inc1032, !dbg !11868

if.end445:                                        ; preds = %land.lhs.true439, %if.end437
  br label %if.end561, !dbg !11869

if.else446:                                       ; preds = %for.body367
  call void @llvm.dbg.declare(metadata %struct.ChildParticle** %cpa, metadata !11870, metadata !DIExpression()), !dbg !11872
  %355 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11873
  %child = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %355, i32 0, i32 4, !dbg !11874
  %356 = load %struct.ChildParticle*, %struct.ChildParticle** %child, align 8, !dbg !11874
  %357 = load i32, i32* %a, align 4, !dbg !11875
  %idx.ext447 = sext i32 %357 to i64, !dbg !11876
  %add.ptr448 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %356, i64 %idx.ext447, !dbg !11876
  %358 = load i32, i32* %totpart, align 4, !dbg !11877
  %idx.ext449 = sext i32 %358 to i64, !dbg !11878
  %idx.neg = sub i64 0, %idx.ext449, !dbg !11878
  %add.ptr450 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %add.ptr448, i64 %idx.neg, !dbg !11878
  store %struct.ChildParticle* %add.ptr450, %struct.ChildParticle** %cpa, align 8, !dbg !11872
  %359 = load i32, i32* %path_nbr, align 4, !dbg !11879
  %tobool451 = icmp ne i32 %359, 0, !dbg !11879
  br i1 %tobool451, label %if.then452, label %if.end463, !dbg !11881

if.then452:                                       ; preds = %if.else446
  %360 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11882
  %childcache453 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %360, i32 0, i32 8, !dbg !11884
  %361 = load %struct.ParticleCacheKey**, %struct.ParticleCacheKey*** %childcache453, align 8, !dbg !11884
  %362 = load i32, i32* %a, align 4, !dbg !11885
  %363 = load i32, i32* %totpart, align 4, !dbg !11886
  %sub454 = sub nsw i32 %362, %363, !dbg !11887
  %idxprom455 = sext i32 %sub454 to i64, !dbg !11882
  %arrayidx456 = getelementptr inbounds %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %361, i64 %idxprom455, !dbg !11882
  %364 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %arrayidx456, align 8, !dbg !11882
  store %struct.ParticleCacheKey* %364, %struct.ParticleCacheKey** %cache, align 8, !dbg !11888
  %365 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !11889
  %steps457 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %365, i32 0, i32 5, !dbg !11891
  %366 = load i32, i32* %steps457, align 4, !dbg !11891
  %cmp458 = icmp slt i32 %366, 0, !dbg !11892
  br i1 %cmp458, label %if.then460, label %if.end461, !dbg !11893

if.then460:                                       ; preds = %if.then452
  br label %for.inc1032, !dbg !11894

if.end461:                                        ; preds = %if.then452
  %367 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !11895
  %steps462 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %367, i32 0, i32 5, !dbg !11896
  %368 = load i32, i32* %steps462, align 4, !dbg !11896
  store i32 %368, i32* %max_k, align 4, !dbg !11897
  br label %if.end463, !dbg !11898

if.end463:                                        ; preds = %if.end461, %if.else446
  %369 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11899
  %370 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11900
  %371 = load float, float* %cfra, align 4, !dbg !11901
  %call464 = call float @psys_get_child_time(%struct.ParticleSystem* %369, %struct.ChildParticle* %370, float %371, float* %pa_birthtime, float* %pa_dietime), !dbg !11902
  store float %call464, float* %pa_time, align 4, !dbg !11903
  %372 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11904
  %373 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11905
  %374 = load float, float* %cfra, align 4, !dbg !11906
  %call465 = call float @psys_get_child_size(%struct.ParticleSystem* %372, %struct.ChildParticle* %373, float %374, float* %pa_time), !dbg !11907
  store float %call465, float* %pa_size, align 4, !dbg !11908
  %375 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11909
  %376 = load i32, i32* %a, align 4, !dbg !11910
  %add466 = add nsw i32 %376, 21, !dbg !11911
  %call467 = call float @psys_frand(%struct.ParticleSystem* %375, i32 %add466), !dbg !11912
  %sub468 = fsub float %call467, 5.000000e-01, !dbg !11913
  %mul469 = fmul float 2.000000e+00, %sub468, !dbg !11914
  store float %mul469, float* %r_tilt, align 4, !dbg !11915
  %377 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11916
  %378 = load i32, i32* %a, align 4, !dbg !11917
  %add470 = add nsw i32 %378, 22, !dbg !11918
  %call471 = call float @psys_frand(%struct.ParticleSystem* %377, i32 %add470), !dbg !11919
  store float %call471, float* %r_length, align 4, !dbg !11920
  %379 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11921
  %num472 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %379, i32 0, i32 0, !dbg !11922
  %380 = load i32, i32* %num472, align 4, !dbg !11922
  store i32 %380, i32* %num, align 4, !dbg !11923
  %381 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11924
  %childtype = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %381, i32 0, i32 19, !dbg !11926
  %382 = load i16, i16* %childtype, align 4, !dbg !11926
  %conv473 = sext i16 %382 to i32, !dbg !11924
  %cmp474 = icmp eq i32 %conv473, 2, !dbg !11927
  br i1 %cmp474, label %if.then476, label %if.else484, !dbg !11928

if.then476:                                       ; preds = %if.end463
  %383 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11929
  %384 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11931
  %num477 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %384, i32 0, i32 0, !dbg !11932
  %385 = load i32, i32* %num477, align 4, !dbg !11932
  %386 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11933
  %fuv478 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %386, i32 0, i32 4, !dbg !11934
  %arraydecay479 = getelementptr inbounds [4 x float], [4 x float]* %fuv478, i64 0, i64 0, !dbg !11933
  %387 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11935
  %foffset480 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %387, i32 0, i32 5, !dbg !11936
  %388 = load float, float* %foffset480, align 4, !dbg !11936
  %arraydecay481 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11937
  %arraydecay482 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11938
  %orco483 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11939
  %389 = load float*, float** %orco483, align 8, !dbg !11939
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %383, i32 1, i32 %385, i32 -2, float* %arraydecay479, float %388, float* %arraydecay481, float* %arraydecay482, float* null, float* null, float* %389, float* null), !dbg !11940
  br label %if.end497, !dbg !11941

if.else484:                                       ; preds = %if.end463
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %par, metadata !11942, metadata !DIExpression()), !dbg !11944
  %390 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11945
  %particles485 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %390, i32 0, i32 3, !dbg !11946
  %391 = load %struct.ParticleData*, %struct.ParticleData** %particles485, align 8, !dbg !11946
  %392 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11947
  %parent = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %392, i32 0, i32 1, !dbg !11948
  %393 = load i32, i32* %parent, align 4, !dbg !11948
  %idx.ext486 = sext i32 %393 to i64, !dbg !11949
  %add.ptr487 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %391, i64 %idx.ext486, !dbg !11949
  store %struct.ParticleData* %add.ptr487, %struct.ParticleData** %par, align 8, !dbg !11944
  %394 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11950
  %395 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11951
  %from488 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %395, i32 0, i32 8, !dbg !11952
  %396 = load i16, i16* %from488, align 2, !dbg !11952
  %conv489 = sext i16 %396 to i32, !dbg !11951
  %397 = load %struct.ParticleData*, %struct.ParticleData** %par, align 8, !dbg !11953
  %num490 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %397, i32 0, i32 9, !dbg !11954
  %398 = load i32, i32* %num490, align 8, !dbg !11954
  %399 = load %struct.ParticleData*, %struct.ParticleData** %par, align 8, !dbg !11955
  %fuv491 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %399, i32 0, i32 11, !dbg !11956
  %arraydecay492 = getelementptr inbounds [4 x float], [4 x float]* %fuv491, i64 0, i64 0, !dbg !11955
  %400 = load %struct.ParticleData*, %struct.ParticleData** %par, align 8, !dbg !11957
  %foffset493 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %400, i32 0, i32 12, !dbg !11958
  %401 = load float, float* %foffset493, align 8, !dbg !11958
  %arraydecay494 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !11959
  %arraydecay495 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !11960
  %orco496 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !11961
  %402 = load float*, float** %orco496, align 8, !dbg !11961
  call void @psys_particle_on_emitter(%struct.ParticleSystemModifierData* %394, i32 %conv489, i32 %398, i32 -2, float* %arraydecay492, float %401, float* %arraydecay494, float* %arraydecay495, float* null, float* null, float* %402, float* null), !dbg !11962
  br label %if.end497

if.end497:                                        ; preds = %if.else484, %if.then476
  %403 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !11963
  %childtype498 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %403, i32 0, i32 19, !dbg !11965
  %404 = load i16, i16* %childtype498, align 4, !dbg !11965
  %conv499 = sext i16 %404 to i32, !dbg !11963
  %cmp500 = icmp eq i32 %conv499, 2, !dbg !11966
  br i1 %cmp500, label %if.then502, label %if.else507, !dbg !11967

if.then502:                                       ; preds = %if.end497
  %405 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11968
  %dm503 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %405, i32 0, i32 2, !dbg !11970
  %406 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm503, align 8, !dbg !11970
  %407 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11971
  %fuv504 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %407, i32 0, i32 4, !dbg !11972
  %arraydecay505 = getelementptr inbounds [4 x float], [4 x float]* %fuv504, i64 0, i64 0, !dbg !11971
  %408 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11973
  %num506 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %408, i32 0, i32 0, !dbg !11974
  %409 = load i32, i32* %num506, align 4, !dbg !11974
  call void @get_particle_uvco_mcol(i16 signext 1, %struct.DerivedMesh* %406, float* %arraydecay505, i32 %409, %struct.ParticleStrandData* %sd), !dbg !11975
  br label %if.end532, !dbg !11976

if.else507:                                       ; preds = %if.end497
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %parent508, metadata !11977, metadata !DIExpression()), !dbg !11979
  %410 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !11980
  %particles509 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %410, i32 0, i32 3, !dbg !11981
  %411 = load %struct.ParticleData*, %struct.ParticleData** %particles509, align 8, !dbg !11981
  %412 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !11982
  %parent510 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %412, i32 0, i32 1, !dbg !11983
  %413 = load i32, i32* %parent510, align 4, !dbg !11983
  %idx.ext511 = sext i32 %413 to i64, !dbg !11984
  %add.ptr512 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %411, i64 %idx.ext511, !dbg !11984
  store %struct.ParticleData* %add.ptr512, %struct.ParticleData** %parent508, align 8, !dbg !11979
  %414 = load %struct.ParticleData*, %struct.ParticleData** %parent508, align 8, !dbg !11985
  %num_dmcache513 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %414, i32 0, i32 10, !dbg !11986
  %415 = load i32, i32* %num_dmcache513, align 4, !dbg !11986
  store i32 %415, i32* %num, align 4, !dbg !11987
  %416 = load i32, i32* %num, align 4, !dbg !11988
  %cmp514 = icmp eq i32 %416, -1, !dbg !11990
  br i1 %cmp514, label %if.then516, label %if.end527, !dbg !11991

if.then516:                                       ; preds = %if.else507
  %417 = load %struct.ParticleData*, %struct.ParticleData** %parent508, align 8, !dbg !11992
  %num517 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %417, i32 0, i32 9, !dbg !11994
  %418 = load i32, i32* %num517, align 8, !dbg !11994
  %419 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11995
  %dm518 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %419, i32 0, i32 2, !dbg !11996
  %420 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm518, align 8, !dbg !11996
  %getNumTessFaces519 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %420, i32 0, i32 25, !dbg !11997
  %421 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces519, align 8, !dbg !11997
  %422 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !11998
  %dm520 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %422, i32 0, i32 2, !dbg !11999
  %423 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm520, align 8, !dbg !11999
  %call521 = call i32 %421(%struct.DerivedMesh* %423), !dbg !11995
  %cmp522 = icmp slt i32 %418, %call521, !dbg !12000
  br i1 %cmp522, label %if.then524, label %if.end526, !dbg !12001

if.then524:                                       ; preds = %if.then516
  %424 = load %struct.ParticleData*, %struct.ParticleData** %parent508, align 8, !dbg !12002
  %num525 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %424, i32 0, i32 9, !dbg !12003
  %425 = load i32, i32* %num525, align 8, !dbg !12003
  store i32 %425, i32* %num, align 4, !dbg !12004
  br label %if.end526, !dbg !12005

if.end526:                                        ; preds = %if.then524, %if.then516
  br label %if.end527, !dbg !12006

if.end527:                                        ; preds = %if.end526, %if.else507
  %426 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12007
  %from528 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %426, i32 0, i32 8, !dbg !12008
  %427 = load i16, i16* %from528, align 2, !dbg !12008
  %428 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12009
  %dm529 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %428, i32 0, i32 2, !dbg !12010
  %429 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm529, align 8, !dbg !12010
  %430 = load %struct.ParticleData*, %struct.ParticleData** %parent508, align 8, !dbg !12011
  %fuv530 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %430, i32 0, i32 11, !dbg !12012
  %arraydecay531 = getelementptr inbounds [4 x float], [4 x float]* %fuv530, i64 0, i64 0, !dbg !12011
  %431 = load i32, i32* %num, align 4, !dbg !12013
  call void @get_particle_uvco_mcol(i16 signext %427, %struct.DerivedMesh* %429, float* %arraydecay531, i32 %431, %struct.ParticleStrandData* %sd), !dbg !12014
  br label %if.end532

if.end532:                                        ; preds = %if.end527, %if.then502
  %432 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12015
  %433 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !12016
  %arraydecay533 = getelementptr inbounds [2 x float], [2 x float]* %simplify, i64 0, i64 0, !dbg !12017
  %call534 = call zeroext i8 @psys_render_simplify_params(%struct.ParticleSystem* %432, %struct.ChildParticle* %433, float* %arraydecay533), !dbg !12018
  store i8 %call534, i8* %do_simplify, align 1, !dbg !12019
  %434 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12020
  %tobool535 = icmp ne %struct.StrandBuffer* %434, null, !dbg !12020
  br i1 %tobool535, label %if.then536, label %if.end560, !dbg !12022

if.then536:                                       ; preds = %if.end532
  call void @llvm.dbg.declare(metadata i32* %orignum, metadata !12023, metadata !DIExpression()), !dbg !12025
  %435 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !12026
  %tobool537 = icmp ne i32* %435, null, !dbg !12027
  br i1 %tobool537, label %cond.true538, label %cond.false541, !dbg !12027

cond.true538:                                     ; preds = %if.then536
  %436 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !12028
  %437 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !12029
  %438 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !12030
  %num539 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %438, i32 0, i32 0, !dbg !12031
  %439 = load i32, i32* %num539, align 4, !dbg !12031
  %call540 = call i32 @DM_origindex_mface_mpoly(i32* %436, i32* %437, i32 %439), !dbg !12032
  br label %cond.end543, !dbg !12027

cond.false541:                                    ; preds = %if.then536
  %440 = load %struct.ChildParticle*, %struct.ChildParticle** %cpa, align 8, !dbg !12033
  %num542 = getelementptr inbounds %struct.ChildParticle, %struct.ChildParticle* %440, i32 0, i32 0, !dbg !12034
  %441 = load i32, i32* %num542, align 4, !dbg !12034
  br label %cond.end543, !dbg !12027

cond.end543:                                      ; preds = %cond.false541, %cond.true538
  %cond544 = phi i32 [ %call540, %cond.true538 ], [ %441, %cond.false541 ], !dbg !12027
  store i32 %cond544, i32* %orignum, align 4, !dbg !12025
  %442 = load i32, i32* %orignum, align 4, !dbg !12035
  %conv545 = sext i32 %442 to i64, !dbg !12035
  %443 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !12037
  %444 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12038
  %bound546 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %444, i32 0, i32 3, !dbg !12039
  %445 = load %struct.StrandBound*, %struct.StrandBound** %bound546, align 8, !dbg !12039
  %sub.ptr.lhs.cast = ptrtoint %struct.StrandBound* %443 to i64, !dbg !12040
  %sub.ptr.rhs.cast = ptrtoint %struct.StrandBound* %445 to i64, !dbg !12040
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12040
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32, !dbg !12040
  %cmp547 = icmp sgt i64 %conv545, %sub.ptr.div, !dbg !12041
  br i1 %cmp547, label %land.lhs.true549, label %if.end559, !dbg !12042

land.lhs.true549:                                 ; preds = %cond.end543
  %446 = load i32, i32* %orignum, align 4, !dbg !12043
  %447 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12044
  %totbound550 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %447, i32 0, i32 5, !dbg !12045
  %448 = load i32, i32* %totbound550, align 4, !dbg !12045
  %cmp551 = icmp slt i32 %446, %448, !dbg !12046
  br i1 %cmp551, label %if.then553, label %if.end559, !dbg !12047

if.then553:                                       ; preds = %land.lhs.true549
  %449 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12048
  %bound554 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %449, i32 0, i32 3, !dbg !12050
  %450 = load %struct.StrandBound*, %struct.StrandBound** %bound554, align 8, !dbg !12050
  %451 = load i32, i32* %orignum, align 4, !dbg !12051
  %idxprom555 = sext i32 %451 to i64, !dbg !12048
  %arrayidx556 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %450, i64 %idxprom555, !dbg !12048
  store %struct.StrandBound* %arrayidx556, %struct.StrandBound** %sbound, align 8, !dbg !12052
  %452 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12053
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %452, i32 0, i32 12, !dbg !12054
  %453 = load i32, i32* %totstrand, align 8, !dbg !12054
  %454 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !12055
  %end557 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %454, i32 0, i32 1, !dbg !12056
  store i32 %453, i32* %end557, align 4, !dbg !12057
  %455 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !12058
  %start558 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %455, i32 0, i32 0, !dbg !12059
  store i32 %453, i32* %start558, align 4, !dbg !12060
  br label %if.end559, !dbg !12061

if.end559:                                        ; preds = %if.then553, %land.lhs.true549, %cond.end543
  br label %if.end560, !dbg !12062

if.end560:                                        ; preds = %if.end559, %if.end532
  br label %if.end561

if.end561:                                        ; preds = %if.end560, %if.end445
  %456 = load float, float* %pa_time, align 4, !dbg !12063
  %arrayidx562 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12064
  store float %456, float* %arrayidx562, align 4, !dbg !12065
  %arrayidx563 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 1, !dbg !12066
  store float 0.000000e+00, float* %arrayidx563, align 4, !dbg !12067
  %arrayidx564 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 2, !dbg !12068
  store float 0.000000e+00, float* %arrayidx564, align 4, !dbg !12069
  %457 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12070
  %mode_l = getelementptr inbounds %struct.Material, %struct.Material* %457, i32 0, i32 52, !dbg !12072
  %458 = load i32, i32* %mode_l, align 8, !dbg !12072
  %and565 = and i32 %458, -2147483648, !dbg !12073
  %tobool566 = icmp ne i32 %and565, 0, !dbg !12073
  br i1 %tobool566, label %if.then567, label %if.else571, !dbg !12074

if.then567:                                       ; preds = %if.end561
  %arraydecay568 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !12075
  %arraydecay569 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !12077
  call void @mul_m3_v3([3 x float]* %arraydecay568, float* %arraydecay569), !dbg !12078
  %arraydecay570 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !12079
  %surfnor = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 3, !dbg !12080
  store float* %arraydecay570, float** %surfnor, align 8, !dbg !12081
  br label %if.end573, !dbg !12082

if.else571:                                       ; preds = %if.end561
  %surfnor572 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 3, !dbg !12083
  store float* null, float** %surfnor572, align 8, !dbg !12084
  br label %if.end573

if.end573:                                        ; preds = %if.else571, %if.then567
  %459 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12085
  %tobool574 = icmp ne %struct.StrandBuffer* %459, null, !dbg !12085
  br i1 %tobool574, label %if.then575, label %if.end653, !dbg !12087

if.then575:                                       ; preds = %if.end573
  %460 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12088
  %461 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12090
  %totstrand576 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %461, i32 0, i32 12, !dbg !12091
  %462 = load i32, i32* %totstrand576, align 8, !dbg !12092
  %inc577 = add nsw i32 %462, 1, !dbg !12092
  store i32 %inc577, i32* %totstrand576, align 8, !dbg !12092
  %call578 = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %460, i32 %462), !dbg !12093
  store %struct.StrandRen* %call578, %struct.StrandRen** %strand, align 8, !dbg !12094
  %463 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12095
  %464 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12096
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %464, i32 0, i32 1, !dbg !12097
  store %struct.StrandBuffer* %463, %struct.StrandBuffer** %buffer, align 8, !dbg !12098
  %465 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !12099
  %466 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12100
  %vert579 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %466, i32 0, i32 0, !dbg !12101
  store %struct.StrandVert* %465, %struct.StrandVert** %vert579, align 8, !dbg !12102
  %467 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12103
  %orco580 = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %467, i32 0, i32 6, !dbg !12104
  %arraydecay581 = getelementptr inbounds [3 x float], [3 x float]* %orco580, i64 0, i64 0, !dbg !12103
  %orco582 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !12105
  %468 = load float*, float** %orco582, align 8, !dbg !12105
  call void @copy_v3_v3(float* %arraydecay581, float* %468), !dbg !12106
  %469 = load i8, i8* %do_simplify, align 1, !dbg !12107
  %tobool583 = icmp ne i8 %469, 0, !dbg !12107
  br i1 %tobool583, label %if.then584, label %if.end590, !dbg !12109

if.then584:                                       ; preds = %if.then575
  call void @llvm.dbg.declare(metadata float** %ssimplify, metadata !12110, metadata !DIExpression()), !dbg !12112
  %470 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12113
  %471 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12114
  %call585 = call float* @RE_strandren_get_simplify(%struct.ObjectRen* %470, %struct.StrandRen* %471, i32 1), !dbg !12115
  store float* %call585, float** %ssimplify, align 8, !dbg !12112
  %arrayidx586 = getelementptr inbounds [2 x float], [2 x float]* %simplify, i64 0, i64 0, !dbg !12116
  %472 = load float, float* %arrayidx586, align 4, !dbg !12116
  %473 = load float*, float** %ssimplify, align 8, !dbg !12117
  %arrayidx587 = getelementptr inbounds float, float* %473, i64 0, !dbg !12117
  store float %472, float* %arrayidx587, align 4, !dbg !12118
  %arrayidx588 = getelementptr inbounds [2 x float], [2 x float]* %simplify, i64 0, i64 1, !dbg !12119
  %474 = load float, float* %arrayidx588, align 4, !dbg !12119
  %475 = load float*, float** %ssimplify, align 8, !dbg !12120
  %arrayidx589 = getelementptr inbounds float, float* %475, i64 1, !dbg !12120
  store float %474, float* %arrayidx589, align 4, !dbg !12121
  br label %if.end590, !dbg !12122

if.end590:                                        ; preds = %if.then584, %if.then575
  %surfnor591 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 3, !dbg !12123
  %476 = load float*, float** %surfnor591, align 8, !dbg !12123
  %tobool592 = icmp ne float* %476, null, !dbg !12125
  br i1 %tobool592, label %if.then593, label %if.end596, !dbg !12126

if.then593:                                       ; preds = %if.end590
  call void @llvm.dbg.declare(metadata float** %snor, metadata !12127, metadata !DIExpression()), !dbg !12129
  %477 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12130
  %478 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12131
  %call594 = call float* @RE_strandren_get_surfnor(%struct.ObjectRen* %477, %struct.StrandRen* %478, i32 1), !dbg !12132
  store float* %call594, float** %snor, align 8, !dbg !12129
  %479 = load float*, float** %snor, align 8, !dbg !12133
  %surfnor595 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 3, !dbg !12134
  %480 = load float*, float** %surfnor595, align 8, !dbg !12134
  call void @copy_v3_v3(float* %479, float* %480), !dbg !12135
  br label %if.end596, !dbg !12136

if.end596:                                        ; preds = %if.then593, %if.end590
  %481 = load i8, i8* %do_surfacecache, align 1, !dbg !12137
  %conv597 = zext i8 %481 to i32, !dbg !12137
  %tobool598 = icmp ne i32 %conv597, 0, !dbg !12137
  br i1 %tobool598, label %land.lhs.true599, label %if.end604, !dbg !12139

land.lhs.true599:                                 ; preds = %if.end596
  %482 = load i32, i32* %num, align 4, !dbg !12140
  %cmp600 = icmp sge i32 %482, 0, !dbg !12141
  br i1 %cmp600, label %if.then602, label %if.end604, !dbg !12142

if.then602:                                       ; preds = %land.lhs.true599
  call void @llvm.dbg.declare(metadata i32** %facenum, metadata !12143, metadata !DIExpression()), !dbg !12145
  %483 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12146
  %484 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12147
  %call603 = call i32* @RE_strandren_get_face(%struct.ObjectRen* %483, %struct.StrandRen* %484, i32 1), !dbg !12148
  store i32* %call603, i32** %facenum, align 8, !dbg !12145
  %485 = load i32, i32* %num, align 4, !dbg !12149
  %486 = load i32*, i32** %facenum, align 8, !dbg !12150
  store i32 %485, i32* %486, align 4, !dbg !12151
  br label %if.end604, !dbg !12152

if.end604:                                        ; preds = %if.then602, %land.lhs.true599, %if.end596
  %uvco605 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !12153
  %487 = load float*, float** %uvco605, align 8, !dbg !12153
  %tobool606 = icmp ne float* %487, null, !dbg !12155
  br i1 %tobool606, label %if.then607, label %if.end634, !dbg !12156

if.then607:                                       ; preds = %if.end604
  store i32 0, i32* %i, align 4, !dbg !12157
  br label %for.cond608, !dbg !12160

for.cond608:                                      ; preds = %for.inc631, %if.then607
  %488 = load i32, i32* %i, align 4, !dbg !12161
  %totuv609 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 8, !dbg !12163
  %489 = load i32, i32* %totuv609, align 8, !dbg !12163
  %cmp610 = icmp slt i32 %488, %489, !dbg !12164
  br i1 %cmp610, label %for.body612, label %for.end633, !dbg !12165

for.body612:                                      ; preds = %for.cond608
  %490 = load i32, i32* %i, align 4, !dbg !12166
  %override_uv613 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 13, !dbg !12169
  %491 = load i32, i32* %override_uv613, align 4, !dbg !12169
  %cmp614 = icmp ne i32 %490, %491, !dbg !12170
  br i1 %cmp614, label %if.then616, label %if.end630, !dbg !12171

if.then616:                                       ; preds = %for.body612
  call void @llvm.dbg.declare(metadata float** %uv617, metadata !12172, metadata !DIExpression()), !dbg !12174
  %492 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12175
  %493 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12176
  %494 = load i32, i32* %i, align 4, !dbg !12177
  %call618 = call float* @RE_strandren_get_uv(%struct.ObjectRen* %492, %struct.StrandRen* %493, i32 %494, i8** null, i32 1), !dbg !12178
  store float* %call618, float** %uv617, align 8, !dbg !12174
  %uvco619 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !12179
  %495 = load float*, float** %uvco619, align 8, !dbg !12179
  %496 = load i32, i32* %i, align 4, !dbg !12180
  %mul620 = mul nsw i32 2, %496, !dbg !12181
  %idxprom621 = sext i32 %mul620 to i64, !dbg !12182
  %arrayidx622 = getelementptr inbounds float, float* %495, i64 %idxprom621, !dbg !12182
  %497 = load float, float* %arrayidx622, align 4, !dbg !12182
  %498 = load float*, float** %uv617, align 8, !dbg !12183
  %arrayidx623 = getelementptr inbounds float, float* %498, i64 0, !dbg !12183
  store float %497, float* %arrayidx623, align 4, !dbg !12184
  %uvco624 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !12185
  %499 = load float*, float** %uvco624, align 8, !dbg !12185
  %500 = load i32, i32* %i, align 4, !dbg !12186
  %mul625 = mul nsw i32 2, %500, !dbg !12187
  %add626 = add nsw i32 %mul625, 1, !dbg !12188
  %idxprom627 = sext i32 %add626 to i64, !dbg !12189
  %arrayidx628 = getelementptr inbounds float, float* %499, i64 %idxprom627, !dbg !12189
  %501 = load float, float* %arrayidx628, align 4, !dbg !12189
  %502 = load float*, float** %uv617, align 8, !dbg !12190
  %arrayidx629 = getelementptr inbounds float, float* %502, i64 1, !dbg !12190
  store float %501, float* %arrayidx629, align 4, !dbg !12191
  br label %if.end630, !dbg !12192

if.end630:                                        ; preds = %if.then616, %for.body612
  br label %for.inc631, !dbg !12193

for.inc631:                                       ; preds = %if.end630
  %503 = load i32, i32* %i, align 4, !dbg !12194
  %inc632 = add nsw i32 %503, 1, !dbg !12194
  store i32 %inc632, i32* %i, align 4, !dbg !12194
  br label %for.cond608, !dbg !12195, !llvm.loop !12196

for.end633:                                       ; preds = %for.cond608
  br label %if.end634, !dbg !12198

if.end634:                                        ; preds = %for.end633, %if.end604
  %mcol635 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 0, !dbg !12199
  %504 = load %struct.MCol*, %struct.MCol** %mcol635, align 8, !dbg !12199
  %tobool636 = icmp ne %struct.MCol* %504, null, !dbg !12201
  br i1 %tobool636, label %if.then637, label %if.end650, !dbg !12202

if.then637:                                       ; preds = %if.end634
  store i32 0, i32* %i, align 4, !dbg !12203
  br label %for.cond638, !dbg !12206

for.cond638:                                      ; preds = %for.inc647, %if.then637
  %505 = load i32, i32* %i, align 4, !dbg !12207
  %totcol639 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 9, !dbg !12209
  %506 = load i32, i32* %totcol639, align 4, !dbg !12209
  %cmp640 = icmp slt i32 %505, %506, !dbg !12210
  br i1 %cmp640, label %for.body642, label %for.end649, !dbg !12211

for.body642:                                      ; preds = %for.cond638
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !12212, metadata !DIExpression()), !dbg !12214
  %507 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12215
  %508 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12216
  %509 = load i32, i32* %i, align 4, !dbg !12217
  %call643 = call %struct.MCol* @RE_strandren_get_mcol(%struct.ObjectRen* %507, %struct.StrandRen* %508, i32 %509, i8** null, i32 1), !dbg !12218
  store %struct.MCol* %call643, %struct.MCol** %mc, align 8, !dbg !12214
  %510 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !12219
  %mcol644 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 0, !dbg !12220
  %511 = load %struct.MCol*, %struct.MCol** %mcol644, align 8, !dbg !12220
  %512 = load i32, i32* %i, align 4, !dbg !12221
  %idxprom645 = sext i32 %512 to i64, !dbg !12222
  %arrayidx646 = getelementptr inbounds %struct.MCol, %struct.MCol* %511, i64 %idxprom645, !dbg !12222
  %513 = bitcast %struct.MCol* %510 to i8*, !dbg !12222
  %514 = bitcast %struct.MCol* %arrayidx646 to i8*, !dbg !12222
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %513, i8* align 1 %514, i64 4, i1 false), !dbg !12222
  br label %for.inc647, !dbg !12223

for.inc647:                                       ; preds = %for.body642
  %515 = load i32, i32* %i, align 4, !dbg !12224
  %inc648 = add nsw i32 %515, 1, !dbg !12224
  store i32 %inc648, i32* %i, align 4, !dbg !12224
  br label %for.cond638, !dbg !12225, !llvm.loop !12226

for.end649:                                       ; preds = %for.cond638
  br label %if.end650, !dbg !12228

if.end650:                                        ; preds = %for.end649, %if.end634
  %516 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !12229
  %end651 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %516, i32 0, i32 1, !dbg !12230
  %517 = load i32, i32* %end651, align 4, !dbg !12231
  %inc652 = add nsw i32 %517, 1, !dbg !12231
  store i32 %inc652, i32* %end651, align 4, !dbg !12231
  br label %if.end653, !dbg !12232

if.end653:                                        ; preds = %if.end650, %if.end573
  %518 = load i32, i32* %path_nbr, align 4, !dbg !12233
  %tobool654 = icmp ne i32 %518, 0, !dbg !12233
  br i1 %tobool654, label %if.then655, label %if.end678, !dbg !12235

if.then655:                                       ; preds = %if.end653
  store float 0.000000e+00, float* %strandlen, align 4, !dbg !12236
  store float 0.000000e+00, float* %curlen, align 4, !dbg !12238
  store i32 1, i32* %k, align 4, !dbg !12239
  br label %for.cond656, !dbg !12241

for.cond656:                                      ; preds = %for.inc675, %if.then655
  %519 = load i32, i32* %k, align 4, !dbg !12242
  %520 = load i32, i32* %path_nbr, align 4, !dbg !12244
  %cmp657 = icmp sle i32 %519, %520, !dbg !12245
  br i1 %cmp657, label %for.body659, label %for.end677, !dbg !12246

for.body659:                                      ; preds = %for.cond656
  %521 = load i32, i32* %k, align 4, !dbg !12247
  %522 = load i32, i32* %max_k, align 4, !dbg !12249
  %cmp660 = icmp sle i32 %521, %522, !dbg !12250
  br i1 %cmp660, label %if.then662, label %if.end674, !dbg !12251

if.then662:                                       ; preds = %for.body659
  %523 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12252
  %524 = load i32, i32* %k, align 4, !dbg !12253
  %idx.ext663 = sext i32 %524 to i64, !dbg !12254
  %add.ptr664 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %523, i64 %idx.ext663, !dbg !12254
  %add.ptr665 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr664, i64 -1, !dbg !12255
  %co666 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr665, i32 0, i32 0, !dbg !12256
  %arraydecay667 = getelementptr inbounds [3 x float], [3 x float]* %co666, i64 0, i64 0, !dbg !12257
  %525 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12258
  %526 = load i32, i32* %k, align 4, !dbg !12259
  %idx.ext668 = sext i32 %526 to i64, !dbg !12260
  %add.ptr669 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %525, i64 %idx.ext668, !dbg !12260
  %co670 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr669, i32 0, i32 0, !dbg !12261
  %arraydecay671 = getelementptr inbounds [3 x float], [3 x float]* %co670, i64 0, i64 0, !dbg !12262
  %call672 = call float @len_v3v3(float* %arraydecay667, float* %arraydecay671), !dbg !12263
  %527 = load float, float* %strandlen, align 4, !dbg !12264
  %add673 = fadd float %527, %call672, !dbg !12264
  store float %add673, float* %strandlen, align 4, !dbg !12264
  br label %if.end674, !dbg !12265

if.end674:                                        ; preds = %if.then662, %for.body659
  br label %for.inc675, !dbg !12249

for.inc675:                                       ; preds = %if.end674
  %528 = load i32, i32* %k, align 4, !dbg !12266
  %inc676 = add nsw i32 %528, 1, !dbg !12266
  store i32 %inc676, i32* %k, align 4, !dbg !12266
  br label %for.cond656, !dbg !12267, !llvm.loop !12268

for.end677:                                       ; preds = %for.cond656
  br label %if.end678, !dbg !12270

if.end678:                                        ; preds = %for.end677, %if.end653
  %529 = load i32, i32* %path_nbr, align 4, !dbg !12271
  %tobool679 = icmp ne i32 %529, 0, !dbg !12271
  br i1 %tobool679, label %if.then680, label %if.else764, !dbg !12273

if.then680:                                       ; preds = %if.end678
  store i32 0, i32* %k, align 4, !dbg !12274
  br label %for.cond681, !dbg !12277

for.cond681:                                      ; preds = %for.inc761, %if.then680
  %530 = load i32, i32* %k, align 4, !dbg !12278
  %531 = load i32, i32* %path_nbr, align 4, !dbg !12280
  %cmp682 = icmp sle i32 %530, %531, !dbg !12281
  br i1 %cmp682, label %for.body684, label %for.end763, !dbg !12282

for.body684:                                      ; preds = %for.cond681
  call void @llvm.dbg.declare(metadata float* %time685, metadata !12283, metadata !DIExpression()), !dbg !12285
  %532 = load i32, i32* %k, align 4, !dbg !12286
  %533 = load i32, i32* %max_k, align 4, !dbg !12288
  %cmp686 = icmp sle i32 %532, %533, !dbg !12289
  br i1 %cmp686, label %if.then688, label %if.else700, !dbg !12290

if.then688:                                       ; preds = %for.body684
  %co689 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12291
  %arraydecay690 = getelementptr inbounds [3 x float], [3 x float]* %co689, i64 0, i64 0, !dbg !12293
  %534 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12294
  %535 = load i32, i32* %k, align 4, !dbg !12295
  %idx.ext691 = sext i32 %535 to i64, !dbg !12296
  %add.ptr692 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %534, i64 %idx.ext691, !dbg !12296
  %co693 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr692, i32 0, i32 0, !dbg !12297
  %arraydecay694 = getelementptr inbounds [3 x float], [3 x float]* %co693, i64 0, i64 0, !dbg !12298
  call void @copy_v3_v3(float* %arraydecay690, float* %arraydecay694), !dbg !12299
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 1, !dbg !12300
  %arraydecay695 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !12301
  %536 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12302
  %537 = load i32, i32* %k, align 4, !dbg !12303
  %idx.ext696 = sext i32 %537 to i64, !dbg !12304
  %add.ptr697 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %536, i64 %idx.ext696, !dbg !12304
  %vel698 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr697, i32 0, i32 1, !dbg !12305
  %arraydecay699 = getelementptr inbounds [3 x float], [3 x float]* %vel698, i64 0, i64 0, !dbg !12306
  call void @copy_v3_v3(float* %arraydecay695, float* %arraydecay699), !dbg !12307
  br label %if.end701, !dbg !12308

if.else700:                                       ; preds = %for.body684
  br label %for.inc761, !dbg !12309

if.end701:                                        ; preds = %if.then688
  %538 = load i32, i32* %k, align 4, !dbg !12310
  %cmp702 = icmp sgt i32 %538, 0, !dbg !12312
  br i1 %cmp702, label %if.then704, label %if.end716, !dbg !12313

if.then704:                                       ; preds = %if.end701
  %539 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12314
  %540 = load i32, i32* %k, align 4, !dbg !12315
  %idx.ext705 = sext i32 %540 to i64, !dbg !12316
  %add.ptr706 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %539, i64 %idx.ext705, !dbg !12316
  %add.ptr707 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr706, i64 -1, !dbg !12317
  %co708 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr707, i32 0, i32 0, !dbg !12318
  %arraydecay709 = getelementptr inbounds [3 x float], [3 x float]* %co708, i64 0, i64 0, !dbg !12319
  %541 = load %struct.ParticleCacheKey*, %struct.ParticleCacheKey** %cache, align 8, !dbg !12320
  %542 = load i32, i32* %k, align 4, !dbg !12321
  %idx.ext710 = sext i32 %542 to i64, !dbg !12322
  %add.ptr711 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %541, i64 %idx.ext710, !dbg !12322
  %co712 = getelementptr inbounds %struct.ParticleCacheKey, %struct.ParticleCacheKey* %add.ptr711, i32 0, i32 0, !dbg !12323
  %arraydecay713 = getelementptr inbounds [3 x float], [3 x float]* %co712, i64 0, i64 0, !dbg !12324
  %call714 = call float @len_v3v3(float* %arraydecay709, float* %arraydecay713), !dbg !12325
  %543 = load float, float* %curlen, align 4, !dbg !12326
  %add715 = fadd float %543, %call714, !dbg !12326
  store float %add715, float* %curlen, align 4, !dbg !12326
  br label %if.end716, !dbg !12327

if.end716:                                        ; preds = %if.then704, %if.end701
  %544 = load float, float* %curlen, align 4, !dbg !12328
  %545 = load float, float* %strandlen, align 4, !dbg !12329
  %div717 = fdiv float %544, %545, !dbg !12330
  store float %div717, float* %time685, align 4, !dbg !12331
  %arraydecay718 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12332
  %co719 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12333
  %arraydecay720 = getelementptr inbounds [3 x float], [3 x float]* %co719, i64 0, i64 0, !dbg !12334
  call void @copy_v3_v3(float* %arraydecay718, float* %arraydecay720), !dbg !12335
  %546 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12336
  %viewmat721 = getelementptr inbounds %struct.Render, %struct.Render* %546, i32 0, i32 32, !dbg !12337
  %arraydecay722 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat721, i64 0, i64 0, !dbg !12336
  %arraydecay723 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12338
  call void @mul_m4_v3([4 x float]* %arraydecay722, float* %arraydecay723), !dbg !12339
  %547 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12340
  %tobool724 = icmp ne %struct.StrandBuffer* %547, null, !dbg !12340
  br i1 %tobool724, label %if.then725, label %if.else732, !dbg !12342

if.then725:                                       ; preds = %if.end716
  %548 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !12343
  %co726 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %548, i32 0, i32 0, !dbg !12345
  %arraydecay727 = getelementptr inbounds [3 x float], [3 x float]* %co726, i64 0, i64 0, !dbg !12343
  %arraydecay728 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12346
  call void @copy_v3_v3(float* %arraydecay727, float* %arraydecay728), !dbg !12347
  %549 = load float, float* %time685, align 4, !dbg !12348
  %mul729 = fmul float 2.000000e+00, %549, !dbg !12349
  %add730 = fadd float -1.000000e+00, %mul729, !dbg !12350
  %550 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !12351
  %strandco = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %550, i32 0, i32 1, !dbg !12352
  store float %add730, float* %strandco, align 4, !dbg !12353
  %551 = load %struct.StrandVert*, %struct.StrandVert** %svert, align 8, !dbg !12354
  %incdec.ptr = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %551, i32 1, !dbg !12354
  store %struct.StrandVert* %incdec.ptr, %struct.StrandVert** %svert, align 8, !dbg !12354
  %552 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !12355
  %totvert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %552, i32 0, i32 2, !dbg !12356
  %553 = load i32, i32* %totvert, align 8, !dbg !12357
  %inc731 = add nsw i32 %553, 1, !dbg !12357
  store i32 %inc731, i32* %totvert, align 8, !dbg !12357
  br label %if.end760, !dbg !12358

if.else732:                                       ; preds = %if.end716
  %554 = load float, float* %hasize, align 4, !dbg !12359
  %size733 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 7, !dbg !12361
  store float %554, float* %size733, align 4, !dbg !12362
  %555 = load i32, i32* %k, align 4, !dbg !12363
  %cmp734 = icmp eq i32 %555, 1, !dbg !12365
  br i1 %cmp734, label %if.then736, label %if.end748, !dbg !12366

if.then736:                                       ; preds = %if.else732
  %first = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 10, !dbg !12367
  store i32 1, i32* %first, align 8, !dbg !12369
  %time737 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 4, !dbg !12370
  store float 0.000000e+00, float* %time737, align 8, !dbg !12371
  %arraydecay738 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !12372
  %arraydecay739 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12373
  %arraydecay740 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12374
  call void @sub_v3_v3v3(float* %arraydecay738, float* %arraydecay739, float* %arraydecay740), !dbg !12375
  %arraydecay741 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !12376
  %arraydecay742 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12377
  %arraydecay743 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !12378
  call void @add_v3_v3v3(float* %arraydecay741, float* %arraydecay742, float* %arraydecay743), !dbg !12379
  %556 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12380
  %557 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12381
  %558 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12382
  %dm744 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %558, i32 0, i32 2, !dbg !12383
  %559 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm744, align 8, !dbg !12383
  %560 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12384
  %arraydecay745 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12385
  %arraydecay746 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !12386
  %561 = load i32, i32* %seed, align 4, !dbg !12387
  %arraydecay747 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12388
  call void @particle_curve(%struct.Render* %556, %struct.ObjectRen* %557, %struct.DerivedMesh* %559, %struct.Material* %560, %struct.ParticleStrandData* %sd, float* %arraydecay745, float* %arraydecay746, i32 %561, float* %arraydecay747), !dbg !12389
  br label %if.end748, !dbg !12390

if.end748:                                        ; preds = %if.then736, %if.else732
  %first749 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 10, !dbg !12391
  store i32 0, i32* %first749, align 8, !dbg !12392
  %562 = load float, float* %time685, align 4, !dbg !12393
  %time750 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 4, !dbg !12394
  store float %562, float* %time750, align 8, !dbg !12395
  %563 = load i32, i32* %k, align 4, !dbg !12396
  %tobool751 = icmp ne i32 %563, 0, !dbg !12396
  br i1 %tobool751, label %if.then752, label %if.end757, !dbg !12398

if.then752:                                       ; preds = %if.end748
  %564 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12399
  %565 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12400
  %566 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12401
  %dm753 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %566, i32 0, i32 2, !dbg !12402
  %567 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm753, align 8, !dbg !12402
  %568 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12403
  %arraydecay754 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12404
  %arraydecay755 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12405
  %569 = load i32, i32* %seed, align 4, !dbg !12406
  %arraydecay756 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12407
  call void @particle_curve(%struct.Render* %564, %struct.ObjectRen* %565, %struct.DerivedMesh* %567, %struct.Material* %568, %struct.ParticleStrandData* %sd, float* %arraydecay754, float* %arraydecay755, i32 %569, float* %arraydecay756), !dbg !12408
  br label %if.end757, !dbg !12408

if.end757:                                        ; preds = %if.then752, %if.end748
  %arraydecay758 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !12409
  %arraydecay759 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !12410
  call void @copy_v3_v3(float* %arraydecay758, float* %arraydecay759), !dbg !12411
  br label %if.end760

if.end760:                                        ; preds = %if.end757, %if.then725
  br label %for.inc761, !dbg !12412

for.inc761:                                       ; preds = %if.end760, %if.else700
  %570 = load i32, i32* %k, align 4, !dbg !12413
  %inc762 = add nsw i32 %570, 1, !dbg !12413
  store i32 %inc762, i32* %k, align 4, !dbg !12413
  br label %for.cond681, !dbg !12414, !llvm.loop !12415

for.end763:                                       ; preds = %for.cond681
  br label %if.end1021, !dbg !12417

if.else764:                                       ; preds = %if.end678
  %571 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12418
  %trail_count = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %571, i32 0, i32 119, !dbg !12421
  %572 = load i32, i32* %trail_count, align 8, !dbg !12421
  %cmp765 = icmp sgt i32 %572, 1, !dbg !12422
  br i1 %cmp765, label %if.then767, label %if.else922, !dbg !12423

if.then767:                                       ; preds = %if.else764
  call void @llvm.dbg.declare(metadata float* %length, metadata !12424, metadata !DIExpression()), !dbg !12426
  %573 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12427
  %path_end = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %573, i32 0, i32 118, !dbg !12428
  %574 = load float, float* %path_end, align 4, !dbg !12428
  %575 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12429
  %randlength = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %575, i32 0, i32 88, !dbg !12430
  %576 = load float, float* %randlength, align 8, !dbg !12430
  %577 = load float, float* %r_length, align 4, !dbg !12431
  %mul768 = fmul float %576, %577, !dbg !12432
  %sub769 = fsub float 1.000000e+00, %mul768, !dbg !12433
  %mul770 = fmul float %574, %sub769, !dbg !12434
  store float %mul770, float* %length, align 4, !dbg !12426
  call void @llvm.dbg.declare(metadata i32* %trail_count771, metadata !12435, metadata !DIExpression()), !dbg !12436
  %578 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12437
  %trail_count772 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %578, i32 0, i32 119, !dbg !12438
  %579 = load i32, i32* %trail_count772, align 8, !dbg !12438
  %conv773 = sitofp i32 %579 to float, !dbg !12437
  %580 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12439
  %randlength774 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %580, i32 0, i32 88, !dbg !12440
  %581 = load float, float* %randlength774, align 8, !dbg !12440
  %582 = load float, float* %r_length, align 4, !dbg !12441
  %mul775 = fmul float %581, %582, !dbg !12442
  %sub776 = fsub float 1.000000e+00, %mul775, !dbg !12443
  %mul777 = fmul float %conv773, %sub776, !dbg !12444
  %conv778 = fptosi float %mul777 to i32, !dbg !12437
  store i32 %conv778, i32* %trail_count771, align 4, !dbg !12436
  call void @llvm.dbg.declare(metadata float* %ct, metadata !12445, metadata !DIExpression()), !dbg !12446
  %583 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12447
  %draw779 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %583, i32 0, i32 15, !dbg !12448
  %584 = load i32, i32* %draw779, align 8, !dbg !12448
  %and780 = and i32 %584, 32, !dbg !12449
  %tobool781 = icmp ne i32 %and780, 0, !dbg !12449
  br i1 %tobool781, label %cond.true782, label %cond.false783, !dbg !12450

cond.true782:                                     ; preds = %if.then767
  %585 = load float, float* %cfra, align 4, !dbg !12451
  br label %cond.end784, !dbg !12450

cond.false783:                                    ; preds = %if.then767
  %586 = load float, float* %pa_time, align 4, !dbg !12452
  br label %cond.end784, !dbg !12450

cond.end784:                                      ; preds = %cond.false783, %cond.true782
  %cond785 = phi float [ %585, %cond.true782 ], [ %586, %cond.false783 ], !dbg !12450
  store float %cond785, float* %ct, align 4, !dbg !12446
  call void @llvm.dbg.declare(metadata float* %dt, metadata !12453, metadata !DIExpression()), !dbg !12454
  %587 = load float, float* %length, align 4, !dbg !12455
  %588 = load i32, i32* %trail_count771, align 4, !dbg !12456
  %tobool786 = icmp ne i32 %588, 0, !dbg !12456
  br i1 %tobool786, label %cond.true787, label %cond.false789, !dbg !12456

cond.true787:                                     ; preds = %cond.end784
  %589 = load i32, i32* %trail_count771, align 4, !dbg !12457
  %conv788 = sitofp i32 %589 to float, !dbg !12458
  br label %cond.end790, !dbg !12456

cond.false789:                                    ; preds = %cond.end784
  br label %cond.end790, !dbg !12456

cond.end790:                                      ; preds = %cond.false789, %cond.true787
  %cond791 = phi float [ %conv788, %cond.true787 ], [ 1.000000e+00, %cond.false789 ], !dbg !12456
  %div792 = fdiv float %587, %cond791, !dbg !12459
  store float %div792, float* %dt, align 4, !dbg !12454
  %590 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12460
  %591 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12461
  call void @psys_make_temp_pointcache(%struct.Object* %590, %struct.ParticleSystem* %591), !dbg !12462
  store i32 0, i32* %i, align 4, !dbg !12463
  br label %for.cond793, !dbg !12465

for.cond793:                                      ; preds = %for.inc918, %cond.end790
  %592 = load i32, i32* %i, align 4, !dbg !12466
  %593 = load i32, i32* %trail_count771, align 4, !dbg !12468
  %cmp794 = icmp slt i32 %592, %593, !dbg !12469
  br i1 %cmp794, label %for.body796, label %for.end921, !dbg !12470

for.body796:                                      ; preds = %for.cond793
  %594 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12471
  %draw797 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %594, i32 0, i32 15, !dbg !12474
  %595 = load i32, i32* %draw797, align 8, !dbg !12474
  %and798 = and i32 %595, 32, !dbg !12475
  %tobool799 = icmp ne i32 %and798, 0, !dbg !12475
  br i1 %tobool799, label %if.then800, label %if.else808, !dbg !12476

if.then800:                                       ; preds = %for.body796
  %596 = load float, float* %ct, align 4, !dbg !12477
  %597 = load float, float* %pa_birthtime, align 4, !dbg !12480
  %cmp801 = fcmp olt float %596, %597, !dbg !12481
  br i1 %cmp801, label %if.then806, label %lor.lhs.false803, !dbg !12482

lor.lhs.false803:                                 ; preds = %if.then800
  %598 = load float, float* %ct, align 4, !dbg !12483
  %599 = load float, float* %pa_dietime, align 4, !dbg !12484
  %cmp804 = fcmp ogt float %598, %599, !dbg !12485
  br i1 %cmp804, label %if.then806, label %if.end807, !dbg !12486

if.then806:                                       ; preds = %lor.lhs.false803, %if.then800
  br label %for.inc918, !dbg !12487

if.end807:                                        ; preds = %lor.lhs.false803
  br label %if.end816, !dbg !12488

if.else808:                                       ; preds = %for.body796
  %600 = load float, float* %ct, align 4, !dbg !12489
  %cmp809 = fcmp olt float %600, 0.000000e+00, !dbg !12491
  br i1 %cmp809, label %if.then814, label %lor.lhs.false811, !dbg !12492

lor.lhs.false811:                                 ; preds = %if.else808
  %601 = load float, float* %ct, align 4, !dbg !12493
  %cmp812 = fcmp ogt float %601, 1.000000e+00, !dbg !12494
  br i1 %cmp812, label %if.then814, label %if.end815, !dbg !12495

if.then814:                                       ; preds = %lor.lhs.false811, %if.else808
  br label %for.inc918, !dbg !12496

if.end815:                                        ; preds = %lor.lhs.false811
  br label %if.end816

if.end816:                                        ; preds = %if.end815, %if.end807
  %602 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12497
  %draw817 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %602, i32 0, i32 15, !dbg !12498
  %603 = load i32, i32* %draw817, align 8, !dbg !12498
  %and818 = and i32 %603, 32, !dbg !12499
  %tobool819 = icmp ne i32 %and818, 0, !dbg !12499
  br i1 %tobool819, label %cond.true820, label %cond.false821, !dbg !12500

cond.true820:                                     ; preds = %if.end816
  %604 = load float, float* %ct, align 4, !dbg !12501
  %fneg = fneg float %604, !dbg !12502
  br label %cond.end822, !dbg !12500

cond.false821:                                    ; preds = %if.end816
  %605 = load float, float* %ct, align 4, !dbg !12503
  br label %cond.end822, !dbg !12500

cond.end822:                                      ; preds = %cond.false821, %cond.true820
  %cond823 = phi float [ %fneg, %cond.true820 ], [ %605, %cond.false821 ], !dbg !12500
  %time824 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 4, !dbg !12504
  store float %cond823, float* %time824, align 4, !dbg !12505
  %606 = load i32, i32* %a, align 4, !dbg !12506
  call void @psys_get_particle_on_path(%struct.ParticleSimulationData* %sim, i32 %606, %struct.ParticleKey* %state, i8 zeroext 1), !dbg !12507
  %607 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12508
  %parent825 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %607, i32 0, i32 16, !dbg !12510
  %608 = load %struct.Object*, %struct.Object** %parent825, align 8, !dbg !12510
  %tobool826 = icmp ne %struct.Object* %608, null, !dbg !12508
  br i1 %tobool826, label %if.then827, label %if.end833, !dbg !12511

if.then827:                                       ; preds = %cond.end822
  %609 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12512
  %parent828 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %609, i32 0, i32 16, !dbg !12513
  %610 = load %struct.Object*, %struct.Object** %parent828, align 8, !dbg !12513
  %obmat829 = getelementptr inbounds %struct.Object, %struct.Object* %610, i32 0, i32 47, !dbg !12514
  %arraydecay830 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat829, i64 0, i64 0, !dbg !12512
  %co831 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12515
  %arraydecay832 = getelementptr inbounds [3 x float], [3 x float]* %co831, i64 0, i64 0, !dbg !12516
  call void @mul_m4_v3([4 x float]* %arraydecay830, float* %arraydecay832), !dbg !12517
  br label %if.end833, !dbg !12517

if.end833:                                        ; preds = %if.then827, %cond.end822
  %611 = load i8, i8* %use_duplimat, align 1, !dbg !12518
  %tobool834 = icmp ne i8 %611, 0, !dbg !12518
  br i1 %tobool834, label %if.then835, label %if.end839, !dbg !12520

if.then835:                                       ; preds = %if.end833
  %arraydecay836 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %duplimat, i64 0, i64 0, !dbg !12521
  %co837 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12522
  %arraydecay838 = getelementptr inbounds [3 x float], [3 x float]* %co837, i64 0, i64 0, !dbg !12523
  call void @mul_m4_v4([4 x float]* %arraydecay836, float* %arraydecay838), !dbg !12524
  br label %if.end839, !dbg !12524

if.end839:                                        ; preds = %if.then835, %if.end833
  %612 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12525
  %ren_as840 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %612, i32 0, i32 21, !dbg !12527
  %613 = load i16, i16* %ren_as840, align 8, !dbg !12527
  %conv841 = sext i16 %613 to i32, !dbg !12525
  %cmp842 = icmp eq i32 %conv841, 9, !dbg !12528
  br i1 %cmp842, label %if.then844, label %if.end898, !dbg !12529

if.then844:                                       ; preds = %if.end839
  %614 = load float, float* %random, align 4, !dbg !12530
  %random845 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 6, !dbg !12532
  store float %614, float* %random845, align 4, !dbg !12533
  %615 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12534
  %bb_offset = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %615, i32 0, i32 43, !dbg !12535
  %arrayidx846 = getelementptr inbounds [2 x float], [2 x float]* %bb_offset, i64 0, i64 0, !dbg !12534
  %616 = load float, float* %arrayidx846, align 8, !dbg !12534
  %offset = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12536
  %arrayidx847 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !12537
  store float %616, float* %arrayidx847, align 8, !dbg !12538
  %617 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12539
  %bb_offset848 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %617, i32 0, i32 43, !dbg !12540
  %arrayidx849 = getelementptr inbounds [2 x float], [2 x float]* %bb_offset848, i64 0, i64 1, !dbg !12539
  %618 = load float, float* %arrayidx849, align 4, !dbg !12539
  %offset850 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12541
  %arrayidx851 = getelementptr inbounds [2 x float], [2 x float]* %offset850, i64 0, i64 1, !dbg !12542
  store float %618, float* %arrayidx851, align 4, !dbg !12543
  %619 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12544
  %bb_size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %619, i32 0, i32 44, !dbg !12545
  %arrayidx852 = getelementptr inbounds [2 x float], [2 x float]* %bb_size, i64 0, i64 0, !dbg !12544
  %620 = load float, float* %arrayidx852, align 8, !dbg !12544
  %621 = load float, float* %pa_size, align 4, !dbg !12546
  %mul853 = fmul float %620, %621, !dbg !12547
  %size854 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12548
  %arrayidx855 = getelementptr inbounds [2 x float], [2 x float]* %size854, i64 0, i64 0, !dbg !12549
  store float %mul853, float* %arrayidx855, align 8, !dbg !12550
  %622 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12551
  %bb_align856 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %622, i32 0, i32 37, !dbg !12553
  %623 = load i16, i16* %bb_align856, align 8, !dbg !12553
  %conv857 = sext i16 %623 to i32, !dbg !12551
  %cmp858 = icmp eq i32 %conv857, 4, !dbg !12554
  br i1 %cmp858, label %if.then860, label %if.else886, !dbg !12555

if.then860:                                       ; preds = %if.then844
  call void @llvm.dbg.declare(metadata float* %pa_vel, metadata !12556, metadata !DIExpression()), !dbg !12558
  %vel861 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 1, !dbg !12559
  %arraydecay862 = getelementptr inbounds [3 x float], [3 x float]* %vel861, i64 0, i64 0, !dbg !12560
  %call863 = call float @len_v3(float* %arraydecay862), !dbg !12561
  store float %call863, float* %pa_vel, align 4, !dbg !12558
  call void @llvm.dbg.declare(metadata float* %head, metadata !12562, metadata !DIExpression()), !dbg !12563
  %624 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12564
  %bb_vel_head = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %624, i32 0, i32 45, !dbg !12565
  %625 = load float, float* %bb_vel_head, align 8, !dbg !12565
  %626 = load float, float* %pa_vel, align 4, !dbg !12566
  %mul864 = fmul float %625, %626, !dbg !12567
  store float %mul864, float* %head, align 4, !dbg !12563
  call void @llvm.dbg.declare(metadata float* %tail, metadata !12568, metadata !DIExpression()), !dbg !12569
  %627 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12570
  %bb_vel_tail = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %627, i32 0, i32 46, !dbg !12571
  %628 = load float, float* %bb_vel_tail, align 4, !dbg !12571
  %629 = load float, float* %pa_vel, align 4, !dbg !12572
  %mul865 = fmul float %628, %629, !dbg !12573
  store float %mul865, float* %tail, align 4, !dbg !12569
  %630 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12574
  %bb_size866 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %630, i32 0, i32 44, !dbg !12575
  %arrayidx867 = getelementptr inbounds [2 x float], [2 x float]* %bb_size866, i64 0, i64 1, !dbg !12574
  %631 = load float, float* %arrayidx867, align 4, !dbg !12574
  %632 = load float, float* %pa_size, align 4, !dbg !12576
  %mul868 = fmul float %631, %632, !dbg !12577
  %633 = load float, float* %head, align 4, !dbg !12578
  %add869 = fadd float %mul868, %633, !dbg !12579
  %634 = load float, float* %tail, align 4, !dbg !12580
  %add870 = fadd float %add869, %634, !dbg !12581
  %size871 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12582
  %arrayidx872 = getelementptr inbounds [2 x float], [2 x float]* %size871, i64 0, i64 1, !dbg !12583
  store float %add870, float* %arrayidx872, align 4, !dbg !12584
  %size873 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12585
  %arrayidx874 = getelementptr inbounds [2 x float], [2 x float]* %size873, i64 0, i64 1, !dbg !12587
  %635 = load float, float* %arrayidx874, align 4, !dbg !12587
  %cmp875 = fcmp ogt float %635, 0.000000e+00, !dbg !12588
  br i1 %cmp875, label %if.then877, label %if.end885, !dbg !12589

if.then877:                                       ; preds = %if.then860
  %636 = load float, float* %head, align 4, !dbg !12590
  %637 = load float, float* %tail, align 4, !dbg !12591
  %sub878 = fsub float %636, %637, !dbg !12592
  %size879 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12593
  %arrayidx880 = getelementptr inbounds [2 x float], [2 x float]* %size879, i64 0, i64 1, !dbg !12594
  %638 = load float, float* %arrayidx880, align 4, !dbg !12594
  %div881 = fdiv float %sub878, %638, !dbg !12595
  %offset882 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12596
  %arrayidx883 = getelementptr inbounds [2 x float], [2 x float]* %offset882, i64 0, i64 1, !dbg !12597
  %639 = load float, float* %arrayidx883, align 4, !dbg !12598
  %add884 = fadd float %639, %div881, !dbg !12598
  store float %add884, float* %arrayidx883, align 4, !dbg !12598
  br label %if.end885, !dbg !12597

if.end885:                                        ; preds = %if.then877, %if.then860
  br label %if.end892, !dbg !12599

if.else886:                                       ; preds = %if.then844
  %640 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12600
  %bb_size887 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %640, i32 0, i32 44, !dbg !12601
  %arrayidx888 = getelementptr inbounds [2 x float], [2 x float]* %bb_size887, i64 0, i64 1, !dbg !12600
  %641 = load float, float* %arrayidx888, align 4, !dbg !12600
  %642 = load float, float* %pa_size, align 4, !dbg !12602
  %mul889 = fmul float %641, %642, !dbg !12603
  %size890 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12604
  %arrayidx891 = getelementptr inbounds [2 x float], [2 x float]* %size890, i64 0, i64 1, !dbg !12605
  store float %mul889, float* %arrayidx891, align 4, !dbg !12606
  br label %if.end892

if.end892:                                        ; preds = %if.else886, %if.end885
  %643 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12607
  %bb_tilt = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %643, i32 0, i32 41, !dbg !12608
  %644 = load float, float* %bb_tilt, align 8, !dbg !12608
  %645 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12609
  %bb_rand_tilt = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %645, i32 0, i32 42, !dbg !12610
  %646 = load float, float* %bb_rand_tilt, align 4, !dbg !12610
  %647 = load float, float* %r_tilt, align 4, !dbg !12611
  %mul893 = fmul float %646, %647, !dbg !12612
  %sub894 = fsub float 1.000000e+00, %mul893, !dbg !12613
  %mul895 = fmul float %644, %sub894, !dbg !12614
  %tilt = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 5, !dbg !12615
  store float %mul895, float* %tilt, align 8, !dbg !12616
  %648 = load float, float* %ct, align 4, !dbg !12617
  %time896 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 7, !dbg !12618
  store float %648, float* %time896, align 8, !dbg !12619
  %649 = load i32, i32* %a, align 4, !dbg !12620
  %num897 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 10, !dbg !12621
  store i32 %649, i32* %num897, align 4, !dbg !12622
  br label %if.end898, !dbg !12623

if.end898:                                        ; preds = %if.end892, %if.end839
  %650 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12624
  %draw899 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %650, i32 0, i32 15, !dbg !12625
  %651 = load i32, i32* %draw899, align 8, !dbg !12625
  %and900 = and i32 %651, 32, !dbg !12626
  %tobool901 = icmp ne i32 %and900, 0, !dbg !12626
  br i1 %tobool901, label %cond.true902, label %cond.false906, !dbg !12627

cond.true902:                                     ; preds = %if.end898
  %652 = load float, float* %ct, align 4, !dbg !12628
  %653 = load float, float* %pa_birthtime, align 4, !dbg !12629
  %sub903 = fsub float %652, %653, !dbg !12630
  %654 = load float, float* %pa_dietime, align 4, !dbg !12631
  %655 = load float, float* %pa_birthtime, align 4, !dbg !12632
  %sub904 = fsub float %654, %655, !dbg !12633
  %div905 = fdiv float %sub903, %sub904, !dbg !12634
  br label %cond.end907, !dbg !12627

cond.false906:                                    ; preds = %if.end898
  %656 = load float, float* %ct, align 4, !dbg !12635
  br label %cond.end907, !dbg !12627

cond.end907:                                      ; preds = %cond.false906, %cond.true902
  %cond908 = phi float [ %div905, %cond.true902 ], [ %656, %cond.false906 ], !dbg !12627
  %arrayidx909 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12636
  store float %cond908, float* %arrayidx909, align 4, !dbg !12637
  %657 = load i32, i32* %i, align 4, !dbg !12638
  %conv910 = sitofp i32 %657 to float, !dbg !12639
  %658 = load i32, i32* %trail_count771, align 4, !dbg !12640
  %sub911 = sub nsw i32 %658, 1, !dbg !12641
  %conv912 = sitofp i32 %sub911 to float, !dbg !12642
  %div913 = fdiv float %conv910, %conv912, !dbg !12643
  %arrayidx914 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 1, !dbg !12644
  store float %div913, float* %arrayidx914, align 4, !dbg !12645
  %659 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12646
  %ren_as915 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %659, i32 0, i32 21, !dbg !12647
  %660 = load i16, i16* %ren_as915, align 8, !dbg !12647
  %661 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12648
  %662 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12649
  %663 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12650
  %664 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12651
  %dm916 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %664, i32 0, i32 2, !dbg !12652
  %665 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm916, align 8, !dbg !12652
  %666 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12653
  %667 = load i32, i32* %seed, align 4, !dbg !12654
  %668 = load float, float* %hasize, align 4, !dbg !12655
  %arraydecay917 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12656
  call void @particle_normal_ren(i16 signext %660, %struct.ParticleSettings* %661, %struct.Render* %662, %struct.ObjectRen* %663, %struct.DerivedMesh* %665, %struct.Material* %666, %struct.ParticleStrandData* %sd, %struct.ParticleBillboardData* %bb, %struct.ParticleKey* %state, i32 %667, float %668, float* %arraydecay917), !dbg !12657
  br label %for.inc918, !dbg !12658

for.inc918:                                       ; preds = %cond.end907, %if.then814, %if.then806
  %669 = load i32, i32* %i, align 4, !dbg !12659
  %inc919 = add nsw i32 %669, 1, !dbg !12659
  store i32 %inc919, i32* %i, align 4, !dbg !12659
  %670 = load float, float* %dt, align 4, !dbg !12660
  %671 = load float, float* %ct, align 4, !dbg !12661
  %sub920 = fsub float %671, %670, !dbg !12661
  store float %sub920, float* %ct, align 4, !dbg !12661
  br label %for.cond793, !dbg !12662, !llvm.loop !12663

for.end921:                                       ; preds = %for.cond793
  br label %if.end1020, !dbg !12665

if.else922:                                       ; preds = %if.else764
  %672 = load float, float* %cfra, align 4, !dbg !12666
  %time923 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 4, !dbg !12668
  store float %672, float* %time923, align 4, !dbg !12669
  %673 = load i32, i32* %a, align 4, !dbg !12670
  %call924 = call i32 @psys_get_particle_state(%struct.ParticleSimulationData* %sim, i32 %673, %struct.ParticleKey* %state, i32 0), !dbg !12672
  %cmp925 = icmp eq i32 %call924, 0, !dbg !12673
  br i1 %cmp925, label %if.then927, label %if.end928, !dbg !12674

if.then927:                                       ; preds = %if.else922
  br label %for.inc1032, !dbg !12675

if.end928:                                        ; preds = %if.else922
  %674 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12676
  %parent929 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %674, i32 0, i32 16, !dbg !12678
  %675 = load %struct.Object*, %struct.Object** %parent929, align 8, !dbg !12678
  %tobool930 = icmp ne %struct.Object* %675, null, !dbg !12676
  br i1 %tobool930, label %if.then931, label %if.end937, !dbg !12679

if.then931:                                       ; preds = %if.end928
  %676 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12680
  %parent932 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %676, i32 0, i32 16, !dbg !12681
  %677 = load %struct.Object*, %struct.Object** %parent932, align 8, !dbg !12681
  %obmat933 = getelementptr inbounds %struct.Object, %struct.Object* %677, i32 0, i32 47, !dbg !12682
  %arraydecay934 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat933, i64 0, i64 0, !dbg !12680
  %co935 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12683
  %arraydecay936 = getelementptr inbounds [3 x float], [3 x float]* %co935, i64 0, i64 0, !dbg !12684
  call void @mul_m4_v3([4 x float]* %arraydecay934, float* %arraydecay936), !dbg !12685
  br label %if.end937, !dbg !12685

if.end937:                                        ; preds = %if.then931, %if.end928
  %678 = load i8, i8* %use_duplimat, align 1, !dbg !12686
  %tobool938 = icmp ne i8 %678, 0, !dbg !12686
  br i1 %tobool938, label %if.then939, label %if.end943, !dbg !12688

if.then939:                                       ; preds = %if.end937
  %arraydecay940 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %duplimat, i64 0, i64 0, !dbg !12689
  %co941 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !12690
  %arraydecay942 = getelementptr inbounds [3 x float], [3 x float]* %co941, i64 0, i64 0, !dbg !12691
  call void @mul_m4_v3([4 x float]* %arraydecay940, float* %arraydecay942), !dbg !12692
  br label %if.end943, !dbg !12692

if.end943:                                        ; preds = %if.then939, %if.end937
  %679 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12693
  %ren_as944 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %679, i32 0, i32 21, !dbg !12695
  %680 = load i16, i16* %ren_as944, align 8, !dbg !12695
  %conv945 = sext i16 %680 to i32, !dbg !12693
  %cmp946 = icmp eq i32 %conv945, 9, !dbg !12696
  br i1 %cmp946, label %if.then948, label %if.end1016, !dbg !12697

if.then948:                                       ; preds = %if.end943
  %681 = load float, float* %random, align 4, !dbg !12698
  %random949 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 6, !dbg !12700
  store float %681, float* %random949, align 4, !dbg !12701
  %682 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12702
  %bb_offset950 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %682, i32 0, i32 43, !dbg !12703
  %arrayidx951 = getelementptr inbounds [2 x float], [2 x float]* %bb_offset950, i64 0, i64 0, !dbg !12702
  %683 = load float, float* %arrayidx951, align 8, !dbg !12702
  %offset952 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12704
  %arrayidx953 = getelementptr inbounds [2 x float], [2 x float]* %offset952, i64 0, i64 0, !dbg !12705
  store float %683, float* %arrayidx953, align 8, !dbg !12706
  %684 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12707
  %bb_offset954 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %684, i32 0, i32 43, !dbg !12708
  %arrayidx955 = getelementptr inbounds [2 x float], [2 x float]* %bb_offset954, i64 0, i64 1, !dbg !12707
  %685 = load float, float* %arrayidx955, align 4, !dbg !12707
  %offset956 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12709
  %arrayidx957 = getelementptr inbounds [2 x float], [2 x float]* %offset956, i64 0, i64 1, !dbg !12710
  store float %685, float* %arrayidx957, align 4, !dbg !12711
  %686 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12712
  %bb_size958 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %686, i32 0, i32 44, !dbg !12713
  %arrayidx959 = getelementptr inbounds [2 x float], [2 x float]* %bb_size958, i64 0, i64 0, !dbg !12712
  %687 = load float, float* %arrayidx959, align 8, !dbg !12712
  %688 = load float, float* %pa_size, align 4, !dbg !12714
  %mul960 = fmul float %687, %688, !dbg !12715
  %size961 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12716
  %arrayidx962 = getelementptr inbounds [2 x float], [2 x float]* %size961, i64 0, i64 0, !dbg !12717
  store float %mul960, float* %arrayidx962, align 8, !dbg !12718
  %689 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12719
  %bb_align963 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %689, i32 0, i32 37, !dbg !12721
  %690 = load i16, i16* %bb_align963, align 8, !dbg !12721
  %conv964 = sext i16 %690 to i32, !dbg !12719
  %cmp965 = icmp eq i32 %conv964, 4, !dbg !12722
  br i1 %cmp965, label %if.then967, label %if.else998, !dbg !12723

if.then967:                                       ; preds = %if.then948
  call void @llvm.dbg.declare(metadata float* %pa_vel968, metadata !12724, metadata !DIExpression()), !dbg !12726
  %vel969 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 1, !dbg !12727
  %arraydecay970 = getelementptr inbounds [3 x float], [3 x float]* %vel969, i64 0, i64 0, !dbg !12728
  %call971 = call float @len_v3(float* %arraydecay970), !dbg !12729
  store float %call971, float* %pa_vel968, align 4, !dbg !12726
  call void @llvm.dbg.declare(metadata float* %head972, metadata !12730, metadata !DIExpression()), !dbg !12731
  %691 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12732
  %bb_vel_head973 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %691, i32 0, i32 45, !dbg !12733
  %692 = load float, float* %bb_vel_head973, align 8, !dbg !12733
  %693 = load float, float* %pa_vel968, align 4, !dbg !12734
  %mul974 = fmul float %692, %693, !dbg !12735
  store float %mul974, float* %head972, align 4, !dbg !12731
  call void @llvm.dbg.declare(metadata float* %tail975, metadata !12736, metadata !DIExpression()), !dbg !12737
  %694 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12738
  %bb_vel_tail976 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %694, i32 0, i32 46, !dbg !12739
  %695 = load float, float* %bb_vel_tail976, align 4, !dbg !12739
  %696 = load float, float* %pa_vel968, align 4, !dbg !12740
  %mul977 = fmul float %695, %696, !dbg !12741
  store float %mul977, float* %tail975, align 4, !dbg !12737
  %697 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12742
  %bb_size978 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %697, i32 0, i32 44, !dbg !12743
  %arrayidx979 = getelementptr inbounds [2 x float], [2 x float]* %bb_size978, i64 0, i64 1, !dbg !12742
  %698 = load float, float* %arrayidx979, align 4, !dbg !12742
  %699 = load float, float* %pa_size, align 4, !dbg !12744
  %mul980 = fmul float %698, %699, !dbg !12745
  %700 = load float, float* %head972, align 4, !dbg !12746
  %add981 = fadd float %mul980, %700, !dbg !12747
  %701 = load float, float* %tail975, align 4, !dbg !12748
  %add982 = fadd float %add981, %701, !dbg !12749
  %size983 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12750
  %arrayidx984 = getelementptr inbounds [2 x float], [2 x float]* %size983, i64 0, i64 1, !dbg !12751
  store float %add982, float* %arrayidx984, align 4, !dbg !12752
  %size985 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12753
  %arrayidx986 = getelementptr inbounds [2 x float], [2 x float]* %size985, i64 0, i64 1, !dbg !12755
  %702 = load float, float* %arrayidx986, align 4, !dbg !12755
  %cmp987 = fcmp ogt float %702, 0.000000e+00, !dbg !12756
  br i1 %cmp987, label %if.then989, label %if.end997, !dbg !12757

if.then989:                                       ; preds = %if.then967
  %703 = load float, float* %head972, align 4, !dbg !12758
  %704 = load float, float* %tail975, align 4, !dbg !12759
  %sub990 = fsub float %703, %704, !dbg !12760
  %size991 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12761
  %arrayidx992 = getelementptr inbounds [2 x float], [2 x float]* %size991, i64 0, i64 1, !dbg !12762
  %705 = load float, float* %arrayidx992, align 4, !dbg !12762
  %div993 = fdiv float %sub990, %705, !dbg !12763
  %offset994 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 3, !dbg !12764
  %arrayidx995 = getelementptr inbounds [2 x float], [2 x float]* %offset994, i64 0, i64 1, !dbg !12765
  %706 = load float, float* %arrayidx995, align 4, !dbg !12766
  %add996 = fadd float %706, %div993, !dbg !12766
  store float %add996, float* %arrayidx995, align 4, !dbg !12766
  br label %if.end997, !dbg !12765

if.end997:                                        ; preds = %if.then989, %if.then967
  br label %if.end1004, !dbg !12767

if.else998:                                       ; preds = %if.then948
  %707 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12768
  %bb_size999 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %707, i32 0, i32 44, !dbg !12769
  %arrayidx1000 = getelementptr inbounds [2 x float], [2 x float]* %bb_size999, i64 0, i64 1, !dbg !12768
  %708 = load float, float* %arrayidx1000, align 4, !dbg !12768
  %709 = load float, float* %pa_size, align 4, !dbg !12770
  %mul1001 = fmul float %708, %709, !dbg !12771
  %size1002 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 4, !dbg !12772
  %arrayidx1003 = getelementptr inbounds [2 x float], [2 x float]* %size1002, i64 0, i64 1, !dbg !12773
  store float %mul1001, float* %arrayidx1003, align 4, !dbg !12774
  br label %if.end1004

if.end1004:                                       ; preds = %if.else998, %if.end997
  %710 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12775
  %bb_tilt1005 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %710, i32 0, i32 41, !dbg !12776
  %711 = load float, float* %bb_tilt1005, align 8, !dbg !12776
  %712 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12777
  %bb_rand_tilt1006 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %712, i32 0, i32 42, !dbg !12778
  %713 = load float, float* %bb_rand_tilt1006, align 4, !dbg !12778
  %714 = load float, float* %r_tilt, align 4, !dbg !12779
  %mul1007 = fmul float %713, %714, !dbg !12780
  %sub1008 = fsub float 1.000000e+00, %mul1007, !dbg !12781
  %mul1009 = fmul float %711, %sub1008, !dbg !12782
  %tilt1010 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 5, !dbg !12783
  store float %mul1009, float* %tilt1010, align 8, !dbg !12784
  %715 = load float, float* %pa_time, align 4, !dbg !12785
  %time1011 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 7, !dbg !12786
  store float %715, float* %time1011, align 8, !dbg !12787
  %716 = load i32, i32* %a, align 4, !dbg !12788
  %num1012 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 10, !dbg !12789
  store i32 %716, i32* %num1012, align 4, !dbg !12790
  %717 = load float, float* %pa_dietime, align 4, !dbg !12791
  %718 = load float, float* %pa_birthtime, align 4, !dbg !12792
  %sub1013 = fsub float %717, %718, !dbg !12793
  %conv1014 = fptosi float %sub1013 to i32, !dbg !12791
  %lifetime1015 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %bb, i32 0, i32 12, !dbg !12794
  store i32 %conv1014, i32* %lifetime1015, align 4, !dbg !12795
  br label %if.end1016, !dbg !12796

if.end1016:                                       ; preds = %if.end1004, %if.end943
  %719 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12797
  %ren_as1017 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %719, i32 0, i32 21, !dbg !12798
  %720 = load i16, i16* %ren_as1017, align 8, !dbg !12798
  %721 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !12799
  %722 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12800
  %723 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12801
  %724 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12802
  %dm1018 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %724, i32 0, i32 2, !dbg !12803
  %725 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm1018, align 8, !dbg !12803
  %726 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12804
  %727 = load i32, i32* %seed, align 4, !dbg !12805
  %728 = load float, float* %hasize, align 4, !dbg !12806
  %arraydecay1019 = getelementptr inbounds [3 x float], [3 x float]* %pa_co, i64 0, i64 0, !dbg !12807
  call void @particle_normal_ren(i16 signext %720, %struct.ParticleSettings* %721, %struct.Render* %722, %struct.ObjectRen* %723, %struct.DerivedMesh* %725, %struct.Material* %726, %struct.ParticleStrandData* %sd, %struct.ParticleBillboardData* %bb, %struct.ParticleKey* %state, i32 %727, float %728, float* %arraydecay1019), !dbg !12808
  br label %if.end1020

if.end1020:                                       ; preds = %if.end1016, %for.end921
  br label %if.end1021

if.end1021:                                       ; preds = %if.end1020, %for.end763
  %729 = load i32, i32* %orco1, align 4, !dbg !12809
  %cmp1022 = icmp eq i32 %729, 0, !dbg !12811
  br i1 %cmp1022, label %if.then1024, label %if.end1027, !dbg !12812

if.then1024:                                      ; preds = %if.end1021
  %orco1025 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !12813
  %730 = load float*, float** %orco1025, align 8, !dbg !12814
  %add.ptr1026 = getelementptr inbounds float, float* %730, i64 3, !dbg !12814
  store float* %add.ptr1026, float** %orco1025, align 8, !dbg !12814
  br label %if.end1027, !dbg !12815

if.end1027:                                       ; preds = %if.then1024, %if.end1021
  %731 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12816
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %731, i32 0, i32 96, !dbg !12818
  %732 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !12818
  %733 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12819
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %733, i32 0, i32 97, !dbg !12820
  %734 = load i8*, i8** %tbh, align 8, !dbg !12820
  %call1028 = call i32 %732(i8* %734), !dbg !12816
  %tobool1029 = icmp ne i32 %call1028, 0, !dbg !12816
  br i1 %tobool1029, label %if.then1030, label %if.end1031, !dbg !12821

if.then1030:                                      ; preds = %if.end1027
  br label %for.end1036, !dbg !12822

if.end1031:                                       ; preds = %if.end1027
  br label %for.inc1032, !dbg !12823

for.inc1032:                                      ; preds = %if.end1031, %if.then927, %if.then460, %if.then444, %if.then376
  %735 = load i32, i32* %a, align 4, !dbg !12824
  %inc1033 = add nsw i32 %735, 1, !dbg !12824
  store i32 %inc1033, i32* %a, align 4, !dbg !12824
  %736 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !12825
  %incdec.ptr1034 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %736, i32 1, !dbg !12825
  store %struct.ParticleData* %incdec.ptr1034, %struct.ParticleData** %pa, align 8, !dbg !12825
  %737 = load i32, i32* %seed, align 4, !dbg !12826
  %inc1035 = add nsw i32 %737, 1, !dbg !12826
  store i32 %inc1035, i32* %seed, align 4, !dbg !12826
  br label %for.cond363, !dbg !12827, !llvm.loop !12828

for.end1036:                                      ; preds = %if.then1030, %for.cond363
  %738 = load i8, i8* %do_surfacecache, align 1, !dbg !12830
  %tobool1037 = icmp ne i8 %738, 0, !dbg !12830
  br i1 %tobool1037, label %if.then1038, label %if.end1042, !dbg !12832

if.then1038:                                      ; preds = %for.end1036
  %739 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12833
  %740 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12834
  %741 = load %struct.ParticleSystemModifierData*, %struct.ParticleSystemModifierData** %psmd, align 8, !dbg !12835
  %dm1039 = getelementptr inbounds %struct.ParticleSystemModifierData, %struct.ParticleSystemModifierData* %741, i32 0, i32 2, !dbg !12836
  %742 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm1039, align 8, !dbg !12836
  %arraydecay1040 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !12837
  %743 = load i32, i32* %timeoffset.addr, align 4, !dbg !12838
  %call1041 = call %struct.StrandSurface* @cache_strand_surface(%struct.Render* %739, %struct.ObjectRen* %740, %struct.DerivedMesh* %742, [4 x float]* %arraydecay1040, i32 %743), !dbg !12839
  %744 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !12840
  %surface = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %744, i32 0, i32 8, !dbg !12841
  store %struct.StrandSurface* %call1041, %struct.StrandSurface** %surface, align 8, !dbg !12842
  br label %if.end1042, !dbg !12840

if.end1042:                                       ; preds = %if.then1038, %for.end1036
  %745 = load i32, i32* %orco1, align 4, !dbg !12843
  %tobool1043 = icmp ne i32 %745, 0, !dbg !12843
  br i1 %tobool1043, label %if.then1044, label %if.end1046, !dbg !12845

if.then1044:                                      ; preds = %if.end1042
  %746 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12846
  %orco1045 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 1, !dbg !12847
  %747 = load float*, float** %orco1045, align 8, !dbg !12847
  %748 = bitcast float* %747 to i8*, !dbg !12848
  call void %746(i8* %748), !dbg !12846
  br label %if.end1046, !dbg !12846

if.end1046:                                       ; preds = %if.then1044, %if.end1042
  %uvco1047 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !12849
  %749 = load float*, float** %uvco1047, align 8, !dbg !12849
  %tobool1048 = icmp ne float* %749, null, !dbg !12851
  br i1 %tobool1048, label %if.then1049, label %if.end1051, !dbg !12852

if.then1049:                                      ; preds = %if.end1046
  %750 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12853
  %uvco1050 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 2, !dbg !12854
  %751 = load float*, float** %uvco1050, align 8, !dbg !12854
  %752 = bitcast float* %751 to i8*, !dbg !12855
  call void %750(i8* %752), !dbg !12853
  br label %if.end1051, !dbg !12853

if.end1051:                                       ; preds = %if.then1049, %if.end1046
  %mcol1052 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 0, !dbg !12856
  %753 = load %struct.MCol*, %struct.MCol** %mcol1052, align 8, !dbg !12856
  %tobool1053 = icmp ne %struct.MCol* %753, null, !dbg !12858
  br i1 %tobool1053, label %if.then1054, label %if.end1056, !dbg !12859

if.then1054:                                      ; preds = %if.end1051
  %754 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12860
  %mcol1055 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %sd, i32 0, i32 0, !dbg !12861
  %755 = load %struct.MCol*, %struct.MCol** %mcol1055, align 8, !dbg !12861
  %756 = bitcast %struct.MCol* %755 to i8*, !dbg !12862
  call void %754(i8* %756), !dbg !12860
  br label %if.end1056, !dbg !12860

if.end1056:                                       ; preds = %if.then1054, %if.end1051
  %757 = load i8**, i8*** %uv_name, align 8, !dbg !12863
  %tobool1057 = icmp ne i8** %757, null, !dbg !12863
  br i1 %tobool1057, label %if.then1058, label %if.end1059, !dbg !12865

if.then1058:                                      ; preds = %if.end1056
  %758 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12866
  %759 = load i8**, i8*** %uv_name, align 8, !dbg !12867
  %760 = bitcast i8** %759 to i8*, !dbg !12867
  call void %758(i8* %760), !dbg !12866
  br label %if.end1059, !dbg !12866

if.end1059:                                       ; preds = %if.then1058, %if.end1056
  %761 = load %struct.ParticleKey*, %struct.ParticleKey** %states, align 8, !dbg !12868
  %tobool1060 = icmp ne %struct.ParticleKey* %761, null, !dbg !12868
  br i1 %tobool1060, label %if.then1061, label %if.end1062, !dbg !12870

if.then1061:                                      ; preds = %if.end1059
  %762 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12871
  %763 = load %struct.ParticleKey*, %struct.ParticleKey** %states, align 8, !dbg !12872
  %764 = bitcast %struct.ParticleKey* %763 to i8*, !dbg !12872
  call void %762(i8* %764), !dbg !12871
  br label %if.end1062, !dbg !12871

if.end1062:                                       ; preds = %if.then1061, %if.end1059
  %765 = load %struct.RNG*, %struct.RNG** %rng, align 8, !dbg !12873
  call void @BLI_rng_free(%struct.RNG* %765), !dbg !12874
  %766 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12875
  %flag1063 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %766, i32 0, i32 25, !dbg !12876
  %767 = load i32, i32* %flag1063, align 4, !dbg !12877
  %and1064 = and i32 %767, -65, !dbg !12877
  store i32 %and1064, i32* %flag1063, align 4, !dbg !12877
  %768 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12878
  %lattice_deform_data1065 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %768, i32 0, i32 15, !dbg !12880
  %769 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data1065, align 8, !dbg !12880
  %tobool1066 = icmp ne %struct.LatticeDeformData* %769, null, !dbg !12878
  br i1 %tobool1066, label %if.then1067, label %if.end1070, !dbg !12881

if.then1067:                                      ; preds = %if.end1062
  %770 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12882
  %lattice_deform_data1068 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %770, i32 0, i32 15, !dbg !12884
  %771 = load %struct.LatticeDeformData*, %struct.LatticeDeformData** %lattice_deform_data1068, align 8, !dbg !12884
  call void @end_latt_deform(%struct.LatticeDeformData* %771), !dbg !12885
  %772 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !12886
  %lattice_deform_data1069 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %772, i32 0, i32 15, !dbg !12887
  store %struct.LatticeDeformData* null, %struct.LatticeDeformData** %lattice_deform_data1069, align 8, !dbg !12888
  br label %if.end1070, !dbg !12889

if.end1070:                                       ; preds = %if.then1067, %if.end1062
  %773 = load i32, i32* %path_nbr, align 4, !dbg !12890
  %tobool1071 = icmp ne i32 %773, 0, !dbg !12890
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1078, !dbg !12892

land.lhs.true1072:                                ; preds = %if.end1070
  %774 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !12893
  %mode_l1073 = getelementptr inbounds %struct.Material, %struct.Material* %774, i32 0, i32 52, !dbg !12894
  %775 = load i32, i32* %mode_l1073, align 8, !dbg !12894
  %and1074 = and i32 %775, 16777216, !dbg !12895
  %cmp1075 = icmp eq i32 %and1074, 0, !dbg !12896
  br i1 %cmp1075, label %if.then1077, label %if.end1078, !dbg !12897

if.then1077:                                      ; preds = %land.lhs.true1072
  %776 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !12898
  %777 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12899
  call void @calc_vertexnormals(%struct.Render* %776, %struct.ObjectRen* %777, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !12900
  br label %if.end1078, !dbg !12900

if.end1078:                                       ; preds = %if.then1077, %land.lhs.true1072, %if.end1070
  store i32 1, i32* %retval, align 4, !dbg !12901
  br label %return, !dbg !12901

return:                                           ; preds = %if.end1078, %if.then32, %if.then26, %if.then21, %if.then7, %if.then
  %778 = load i32, i32* %retval, align 4, !dbg !12902
  ret i32 %778, !dbg !12902
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_curve(%struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset) #0 !dbg !12903 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %cu = alloca %struct.Curve*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %dl = alloca %struct.DispList*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %disp = alloca %struct.ListBase, align 8
  %matar = alloca %struct.Material**, align 8
  %data = alloca float*, align 8
  %fp = alloca float*, align 8
  %orco = alloca float*, align 8
  %n = alloca [3 x float], align 4
  %mat = alloca [4 x [4 x float]], align 16
  %nmat = alloca [4 x [4 x float]], align 16
  %nr = alloca i32, align 4
  %startvert = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %negative_scale = alloca i32, align 4
  %need_orco = alloca i8, align 1
  %totmat = alloca i32, align 4
  %index = alloca i32*, align 8
  %tmp = alloca [3 x float], align 4
  %startvlak = alloca i32, align 4
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p3 = alloca i32, align 4
  %p4 = alloca i32, align 4
  %startvlak276 = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !12906, metadata !DIExpression()), !dbg !12907
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !12910, metadata !DIExpression()), !dbg !12911
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !12912
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !12913
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !12913
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !12911
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !12914, metadata !DIExpression()), !dbg !13016
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !13017, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !13019, metadata !DIExpression()), !dbg !13022
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !13023, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !13045, metadata !DIExpression()), !dbg !13046
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !13046
  call void @llvm.dbg.declare(metadata %struct.ListBase* %disp, metadata !13047, metadata !DIExpression()), !dbg !13048
  %2 = bitcast %struct.ListBase* %disp to i8*, !dbg !13048
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !13048
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata float** %data, metadata !13051, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.declare(metadata float** %fp, metadata !13053, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.declare(metadata float** %orco, metadata !13055, metadata !DIExpression()), !dbg !13056
  store float* null, float** %orco, align 8, !dbg !13056
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !13057, metadata !DIExpression()), !dbg !13058
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !13059, metadata !DIExpression()), !dbg !13060
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %nmat, metadata !13061, metadata !DIExpression()), !dbg !13062
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !13063, metadata !DIExpression()), !dbg !13064
  call void @llvm.dbg.declare(metadata i32* %startvert, metadata !13065, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13067, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.declare(metadata i32* %b, metadata !13069, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.declare(metadata i32* %negative_scale, metadata !13071, metadata !DIExpression()), !dbg !13072
  call void @llvm.dbg.declare(metadata i8* %need_orco, metadata !13073, metadata !DIExpression()), !dbg !13074
  store i8 0, i8* %need_orco, align 1, !dbg !13074
  call void @llvm.dbg.declare(metadata i32* %totmat, metadata !13075, metadata !DIExpression()), !dbg !13076
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13077
  %data2 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !13078
  %4 = load i8*, i8** %data2, align 8, !dbg !13078
  %5 = bitcast i8* %4 to %struct.Curve*, !dbg !13077
  store %struct.Curve* %5, %struct.Curve** %cu, align 8, !dbg !13079
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13080
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !13082
  %7 = load i16, i16* %type, align 8, !dbg !13082
  %conv = sext i16 %7 to i32, !dbg !13080
  %cmp = icmp eq i32 %conv, 4, !dbg !13083
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13084

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13085
  %str = getelementptr inbounds %struct.Curve, %struct.Curve* %8, i32 0, i32 52, !dbg !13086
  %9 = load i8*, i8** %str, align 8, !dbg !13086
  %cmp4 = icmp eq i8* %9, null, !dbg !13087
  br i1 %cmp4, label %if.then, label %if.else, !dbg !13088

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !13089

if.else:                                          ; preds = %land.lhs.true, %entry
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13090
  %type6 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !13092
  %11 = load i16, i16* %type6, align 8, !dbg !13092
  %conv7 = sext i16 %11 to i32, !dbg !13090
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !13093
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !13094

land.lhs.true10:                                  ; preds = %if.else
  %12 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13095
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %12, i32 0, i32 3, !dbg !13096
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !13097
  %13 = load i8*, i8** %first, align 8, !dbg !13097
  %cmp11 = icmp eq i8* %13, null, !dbg !13098
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !13099

if.then13:                                        ; preds = %land.lhs.true10
  br label %return, !dbg !13100

if.end:                                           ; preds = %land.lhs.true10, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13101
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 44, !dbg !13102
  %15 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !13102
  %16 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13103
  call void @BKE_displist_make_curveTypes_forRender(%struct.Scene* %15, %struct.Object* %16, %struct.ListBase* %disp, %struct.DerivedMesh** %dm, i8 zeroext 0, i8 zeroext 1), !dbg !13104
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %disp, i32 0, i32 0, !dbg !13105
  %17 = load i8*, i8** %first15, align 8, !dbg !13105
  %18 = bitcast i8* %17 to %struct.DispList*, !dbg !13106
  store %struct.DispList* %18, %struct.DispList** %dl, align 8, !dbg !13107
  %19 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13108
  %cmp16 = icmp eq %struct.DispList* %19, null, !dbg !13110
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !13111

if.then18:                                        ; preds = %if.end14
  br label %return, !dbg !13112

if.end19:                                         ; preds = %if.end14
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13113
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13114
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 32, !dbg !13115
  %arraydecay20 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !13114
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13116
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 47, !dbg !13117
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !13116
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay20, [4 x float]* %arraydecay21), !dbg !13118
  %22 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13119
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %22, i32 0, i32 50, !dbg !13120
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !13119
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13121
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay22, [4 x float]* %arraydecay23), !dbg !13122
  %arraydecay24 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13123
  %call25 = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay24), !dbg !13124
  %conv26 = zext i8 %call25 to i32, !dbg !13124
  store i32 %conv26, i32* %negative_scale, align 4, !dbg !13125
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nmat, i64 0, i64 0, !dbg !13126
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13127
  call void @copy_m4_m4([4 x float]* %arraydecay27, [4 x float]* %arraydecay28), !dbg !13128
  %arraydecay29 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nmat, i64 0, i64 0, !dbg !13129
  call void @transpose_m4([4 x float]* %arraydecay29), !dbg !13130
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nmat, i64 0, i64 0, !dbg !13131
  %call31 = call zeroext i8 @invert_m4([4 x float]* %arraydecay30), !dbg !13132
  %23 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13133
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 31, !dbg !13134
  %24 = load i32, i32* %totcol, align 8, !dbg !13134
  %add = add nsw i32 %24, 1, !dbg !13135
  store i32 %add, i32* %totmat, align 4, !dbg !13136
  %25 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13137
  %26 = load i32, i32* %totmat, align 4, !dbg !13138
  %conv32 = sext i32 %26 to i64, !dbg !13138
  %mul = mul i64 8, %conv32, !dbg !13139
  %call33 = call i8* %25(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0)), !dbg !13137
  %27 = bitcast i8* %call33 to %struct.Material**, !dbg !13137
  store %struct.Material** %27, %struct.Material*** %matar, align 8, !dbg !13140
  store i32 0, i32* %a, align 4, !dbg !13141
  br label %for.cond, !dbg !13143

for.cond:                                         ; preds = %for.inc, %if.end19
  %28 = load i32, i32* %a, align 4, !dbg !13144
  %29 = load i32, i32* %totmat, align 4, !dbg !13146
  %cmp34 = icmp slt i32 %28, %29, !dbg !13147
  br i1 %cmp34, label %for.body, label %for.end, !dbg !13148

for.body:                                         ; preds = %for.cond
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13149
  %31 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13151
  %32 = load i32, i32* %a, align 4, !dbg !13152
  %add36 = add nsw i32 %32, 1, !dbg !13153
  %conv37 = trunc i32 %add36 to i16, !dbg !13152
  %call38 = call %struct.Material* @give_render_material(%struct.Render* %30, %struct.Object* %31, i16 signext %conv37), !dbg !13154
  %33 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13155
  %34 = load i32, i32* %a, align 4, !dbg !13156
  %idxprom = sext i32 %34 to i64, !dbg !13155
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %33, i64 %idxprom, !dbg !13155
  store %struct.Material* %call38, %struct.Material** %arrayidx, align 8, !dbg !13157
  %35 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13158
  %36 = load i32, i32* %a, align 4, !dbg !13160
  %idxprom39 = sext i32 %36 to i64, !dbg !13158
  %arrayidx40 = getelementptr inbounds %struct.Material*, %struct.Material** %35, i64 %idxprom39, !dbg !13158
  %37 = load %struct.Material*, %struct.Material** %arrayidx40, align 8, !dbg !13158
  %tobool = icmp ne %struct.Material* %37, null, !dbg !13158
  br i1 %tobool, label %land.lhs.true41, label %if.end47, !dbg !13161

land.lhs.true41:                                  ; preds = %for.body
  %38 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13162
  %39 = load i32, i32* %a, align 4, !dbg !13163
  %idxprom42 = sext i32 %39 to i64, !dbg !13162
  %arrayidx43 = getelementptr inbounds %struct.Material*, %struct.Material** %38, i64 %idxprom42, !dbg !13162
  %40 = load %struct.Material*, %struct.Material** %arrayidx43, align 8, !dbg !13162
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 90, !dbg !13164
  %41 = load i16, i16* %texco, align 4, !dbg !13164
  %conv44 = sext i16 %41 to i32, !dbg !13162
  %and = and i32 %conv44, 1, !dbg !13165
  %tobool45 = icmp ne i32 %and, 0, !dbg !13165
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13166

if.then46:                                        ; preds = %land.lhs.true41
  store i8 1, i8* %need_orco, align 1, !dbg !13167
  br label %if.end47, !dbg !13168

if.end47:                                         ; preds = %if.then46, %land.lhs.true41, %for.body
  br label %for.inc, !dbg !13169

for.inc:                                          ; preds = %if.end47
  %42 = load i32, i32* %a, align 4, !dbg !13170
  %inc = add nsw i32 %42, 1, !dbg !13170
  store i32 %inc, i32* %a, align 4, !dbg !13170
  br label %for.cond, !dbg !13171, !llvm.loop !13172

for.end:                                          ; preds = %for.cond
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13174
  %tobool48 = icmp ne %struct.DerivedMesh* %43, null, !dbg !13174
  br i1 %tobool48, label %if.then49, label %if.else63, !dbg !13176

if.then49:                                        ; preds = %for.end
  %44 = load i8, i8* %need_orco, align 1, !dbg !13177
  %tobool50 = icmp ne i8 %44, 0, !dbg !13177
  br i1 %tobool50, label %if.then51, label %if.end61, !dbg !13180

if.then51:                                        ; preds = %if.then49
  %45 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13181
  %46 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13183
  %47 = bitcast %struct.Object* %46 to i8*, !dbg !13183
  %call52 = call float* @get_object_orco(%struct.Render* %45, i8* %47), !dbg !13184
  store float* %call52, float** %orco, align 8, !dbg !13185
  %48 = load float*, float** %orco, align 8, !dbg !13186
  %tobool53 = icmp ne float* %48, null, !dbg !13186
  br i1 %tobool53, label %if.end60, label %if.then54, !dbg !13188

if.then54:                                        ; preds = %if.then51
  %49 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13189
  %scene55 = getelementptr inbounds %struct.Render, %struct.Render* %49, i32 0, i32 44, !dbg !13191
  %50 = load %struct.Scene*, %struct.Scene** %scene55, align 8, !dbg !13191
  %51 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13192
  %52 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13193
  %call56 = call float* @BKE_displist_make_orco(%struct.Scene* %50, %struct.Object* %51, %struct.DerivedMesh* %52, i8 zeroext 1, i8 zeroext 1), !dbg !13194
  store float* %call56, float** %orco, align 8, !dbg !13195
  %53 = load float*, float** %orco, align 8, !dbg !13196
  %tobool57 = icmp ne float* %53, null, !dbg !13196
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !13198

if.then58:                                        ; preds = %if.then54
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13199
  %55 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13201
  %56 = bitcast %struct.Object* %55 to i8*, !dbg !13201
  %57 = load float*, float** %orco, align 8, !dbg !13202
  call void @set_object_orco(%struct.Render* %54, i8* %56, float* %57), !dbg !13203
  br label %if.end59, !dbg !13204

if.end59:                                         ; preds = %if.then58, %if.then54
  br label %if.end60, !dbg !13205

if.end60:                                         ; preds = %if.end59, %if.then51
  br label %if.end61, !dbg !13206

if.end61:                                         ; preds = %if.end60, %if.then49
  %58 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13207
  %59 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13208
  %60 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13209
  %61 = load i32, i32* %timeoffset.addr, align 4, !dbg !13210
  %62 = load float*, float** %orco, align 8, !dbg !13211
  %arraydecay62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13212
  call void @init_render_dm(%struct.DerivedMesh* %58, %struct.Render* %59, %struct.ObjectRen* %60, i32 %61, float* %62, [4 x float]* %arraydecay62), !dbg !13213
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13214
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 95, !dbg !13215
  %64 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !13215
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !13216
  call void %64(%struct.DerivedMesh* %65), !dbg !13214
  br label %if.end445, !dbg !13217

if.else63:                                        ; preds = %for.end
  %66 = load i8, i8* %need_orco, align 1, !dbg !13218
  %tobool64 = icmp ne i8 %66, 0, !dbg !13218
  br i1 %tobool64, label %if.then65, label %if.end72, !dbg !13221

if.then65:                                        ; preds = %if.else63
  %67 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13222
  %68 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13224
  %69 = bitcast %struct.Object* %68 to i8*, !dbg !13224
  %call66 = call float* @get_object_orco(%struct.Render* %67, i8* %69), !dbg !13225
  store float* %call66, float** %orco, align 8, !dbg !13226
  %70 = load float*, float** %orco, align 8, !dbg !13227
  %tobool67 = icmp ne float* %70, null, !dbg !13227
  br i1 %tobool67, label %if.end71, label %if.then68, !dbg !13229

if.then68:                                        ; preds = %if.then65
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13230
  %scene69 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 44, !dbg !13232
  %72 = load %struct.Scene*, %struct.Scene** %scene69, align 8, !dbg !13232
  %73 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13233
  %call70 = call float* @BKE_curve_make_orco(%struct.Scene* %72, %struct.Object* %73, i32* null), !dbg !13234
  store float* %call70, float** %orco, align 8, !dbg !13235
  %74 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !13236
  %75 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13237
  %76 = bitcast %struct.Object* %75 to i8*, !dbg !13237
  %77 = load float*, float** %orco, align 8, !dbg !13238
  call void @set_object_orco(%struct.Render* %74, i8* %76, float* %77), !dbg !13239
  br label %if.end71, !dbg !13240

if.end71:                                         ; preds = %if.then68, %if.then65
  br label %if.end72, !dbg !13241

if.end72:                                         ; preds = %if.end71, %if.else63
  br label %while.cond, !dbg !13242

while.cond:                                       ; preds = %if.end443, %if.end72
  %78 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13243
  %tobool73 = icmp ne %struct.DispList* %78, null, !dbg !13242
  br i1 %tobool73, label %while.body, label %while.end444, !dbg !13242

while.body:                                       ; preds = %while.cond
  %79 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13244
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %79, i32 0, i32 6, !dbg !13247
  %80 = load i16, i16* %col, align 4, !dbg !13247
  %conv74 = sext i16 %80 to i32, !dbg !13244
  %81 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13248
  %totcol75 = getelementptr inbounds %struct.Object, %struct.Object* %81, i32 0, i32 31, !dbg !13249
  %82 = load i32, i32* %totcol75, align 8, !dbg !13249
  %cmp76 = icmp sgt i32 %conv74, %82, !dbg !13250
  br i1 %cmp76, label %if.then78, label %if.else79, !dbg !13251

if.then78:                                        ; preds = %while.body
  br label %if.end443, !dbg !13252

if.else79:                                        ; preds = %while.body
  %83 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13254
  %type80 = getelementptr inbounds %struct.DispList, %struct.DispList* %83, i32 0, i32 2, !dbg !13256
  %84 = load i16, i16* %type80, align 8, !dbg !13256
  %conv81 = sext i16 %84 to i32, !dbg !13254
  %cmp82 = icmp eq i32 %conv81, 4, !dbg !13257
  br i1 %cmp82, label %if.then84, label %if.else208, !dbg !13258

if.then84:                                        ; preds = %if.else79
  call void @llvm.dbg.declare(metadata i32** %index, metadata !13259, metadata !DIExpression()), !dbg !13261
  %85 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13262
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %85, i32 0, i32 10, !dbg !13263
  %86 = load i32, i32* %totvert, align 8, !dbg !13263
  store i32 %86, i32* %startvert, align 4, !dbg !13264
  %87 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13265
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %87, i32 0, i32 8, !dbg !13266
  %88 = load float*, float** %verts, align 8, !dbg !13266
  store float* %88, float** %data, align 8, !dbg !13267
  store i32 0, i32* %a, align 4, !dbg !13268
  br label %for.cond85, !dbg !13270

for.cond85:                                       ; preds = %for.inc101, %if.then84
  %89 = load i32, i32* %a, align 4, !dbg !13271
  %90 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13273
  %nr86 = getelementptr inbounds %struct.DispList, %struct.DispList* %90, i32 0, i32 5, !dbg !13274
  %91 = load i32, i32* %nr86, align 8, !dbg !13274
  %cmp87 = icmp slt i32 %89, %91, !dbg !13275
  br i1 %cmp87, label %for.body89, label %for.end104, !dbg !13276

for.body89:                                       ; preds = %for.cond85
  %92 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13277
  %93 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13279
  %totvert90 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %93, i32 0, i32 10, !dbg !13280
  %94 = load i32, i32* %totvert90, align 8, !dbg !13281
  %inc91 = add nsw i32 %94, 1, !dbg !13281
  store i32 %inc91, i32* %totvert90, align 8, !dbg !13281
  %call92 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %92, i32 %94), !dbg !13282
  store %struct.VertRen* %call92, %struct.VertRen** %ver, align 8, !dbg !13283
  %95 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13284
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %95, i32 0, i32 0, !dbg !13285
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13284
  %96 = load float*, float** %data, align 8, !dbg !13286
  call void @copy_v3_v3(float* %arraydecay93, float* %96), !dbg !13287
  %arraydecay94 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13288
  %97 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13289
  %co95 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %97, i32 0, i32 0, !dbg !13290
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %co95, i64 0, i64 0, !dbg !13289
  call void @mul_m4_v3([4 x float]* %arraydecay94, float* %arraydecay96), !dbg !13291
  %98 = load float*, float** %orco, align 8, !dbg !13292
  %tobool97 = icmp ne float* %98, null, !dbg !13292
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !13294

if.then98:                                        ; preds = %for.body89
  %99 = load float*, float** %orco, align 8, !dbg !13295
  %100 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13297
  %orco99 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %100, i32 0, i32 2, !dbg !13298
  store float* %99, float** %orco99, align 8, !dbg !13299
  %101 = load float*, float** %orco, align 8, !dbg !13300
  %add.ptr = getelementptr inbounds float, float* %101, i64 3, !dbg !13300
  store float* %add.ptr, float** %orco, align 8, !dbg !13300
  br label %if.end100, !dbg !13301

if.end100:                                        ; preds = %if.then98, %for.body89
  br label %for.inc101, !dbg !13302

for.inc101:                                       ; preds = %if.end100
  %102 = load i32, i32* %a, align 4, !dbg !13303
  %inc102 = add nsw i32 %102, 1, !dbg !13303
  store i32 %inc102, i32* %a, align 4, !dbg !13303
  %103 = load float*, float** %data, align 8, !dbg !13304
  %add.ptr103 = getelementptr inbounds float, float* %103, i64 3, !dbg !13304
  store float* %add.ptr103, float** %data, align 8, !dbg !13304
  br label %for.cond85, !dbg !13305, !llvm.loop !13306

for.end104:                                       ; preds = %for.cond85
  %104 = load i32, i32* %timeoffset.addr, align 4, !dbg !13308
  %cmp105 = icmp eq i32 %104, 0, !dbg !13310
  br i1 %cmp105, label %if.then107, label %if.end207, !dbg !13311

if.then107:                                       ; preds = %for.end104
  call void @llvm.dbg.declare(metadata [3 x float]* %tmp, metadata !13312, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.declare(metadata i32* %startvlak, metadata !13315, metadata !DIExpression()), !dbg !13316
  %105 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13317
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %105, i32 0, i32 11, !dbg !13318
  %106 = load i32, i32* %totvlak, align 4, !dbg !13318
  store i32 %106, i32* %startvlak, align 4, !dbg !13316
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !13319
  call void @zero_v3(float* %arraydecay108), !dbg !13320
  %107 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13321
  %index109 = getelementptr inbounds %struct.DispList, %struct.DispList* %107, i32 0, i32 10, !dbg !13322
  %108 = load i32*, i32** %index109, align 8, !dbg !13322
  store i32* %108, i32** %index, align 8, !dbg !13323
  store i32 0, i32* %a, align 4, !dbg !13324
  br label %for.cond110, !dbg !13326

for.cond110:                                      ; preds = %for.inc160, %if.then107
  %109 = load i32, i32* %a, align 4, !dbg !13327
  %110 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13329
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %110, i32 0, i32 4, !dbg !13330
  %111 = load i32, i32* %parts, align 4, !dbg !13330
  %cmp111 = icmp slt i32 %109, %111, !dbg !13331
  br i1 %cmp111, label %for.body113, label %for.end163, !dbg !13332

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !13333, metadata !DIExpression()), !dbg !13335
  %112 = load i32*, i32** %index, align 8, !dbg !13336
  %arrayidx114 = getelementptr inbounds i32, i32* %112, i64 0, !dbg !13336
  %113 = load i32, i32* %arrayidx114, align 4, !dbg !13336
  store i32 %113, i32* %v1, align 4, !dbg !13335
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !13337, metadata !DIExpression()), !dbg !13338
  %114 = load i32*, i32** %index, align 8, !dbg !13339
  %arrayidx115 = getelementptr inbounds i32, i32* %114, i64 2, !dbg !13339
  %115 = load i32, i32* %arrayidx115, align 4, !dbg !13339
  store i32 %115, i32* %v2, align 4, !dbg !13338
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !13340, metadata !DIExpression()), !dbg !13341
  %116 = load i32*, i32** %index, align 8, !dbg !13342
  %arrayidx116 = getelementptr inbounds i32, i32* %116, i64 1, !dbg !13342
  %117 = load i32, i32* %arrayidx116, align 4, !dbg !13342
  store i32 %117, i32* %v3, align 4, !dbg !13341
  call void @llvm.dbg.declare(metadata float** %co1, metadata !13343, metadata !DIExpression()), !dbg !13344
  %118 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13345
  %verts117 = getelementptr inbounds %struct.DispList, %struct.DispList* %118, i32 0, i32 8, !dbg !13346
  %119 = load float*, float** %verts117, align 8, !dbg !13346
  %120 = load i32, i32* %v1, align 4, !dbg !13347
  %mul118 = mul nsw i32 %120, 3, !dbg !13348
  %idxprom119 = sext i32 %mul118 to i64, !dbg !13345
  %arrayidx120 = getelementptr inbounds float, float* %119, i64 %idxprom119, !dbg !13345
  store float* %arrayidx120, float** %co1, align 8, !dbg !13344
  call void @llvm.dbg.declare(metadata float** %co2, metadata !13349, metadata !DIExpression()), !dbg !13350
  %121 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13351
  %verts121 = getelementptr inbounds %struct.DispList, %struct.DispList* %121, i32 0, i32 8, !dbg !13352
  %122 = load float*, float** %verts121, align 8, !dbg !13352
  %123 = load i32, i32* %v2, align 4, !dbg !13353
  %mul122 = mul nsw i32 %123, 3, !dbg !13354
  %idxprom123 = sext i32 %mul122 to i64, !dbg !13351
  %arrayidx124 = getelementptr inbounds float, float* %122, i64 %idxprom123, !dbg !13351
  store float* %arrayidx124, float** %co2, align 8, !dbg !13350
  call void @llvm.dbg.declare(metadata float** %co3, metadata !13355, metadata !DIExpression()), !dbg !13356
  %124 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13357
  %verts125 = getelementptr inbounds %struct.DispList, %struct.DispList* %124, i32 0, i32 8, !dbg !13358
  %125 = load float*, float** %verts125, align 8, !dbg !13358
  %126 = load i32, i32* %v3, align 4, !dbg !13359
  %mul126 = mul nsw i32 %126, 3, !dbg !13360
  %idxprom127 = sext i32 %mul126 to i64, !dbg !13357
  %arrayidx128 = getelementptr inbounds float, float* %125, i64 %idxprom127, !dbg !13357
  store float* %arrayidx128, float** %co3, align 8, !dbg !13356
  %127 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13361
  %128 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13362
  %totvlak129 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %128, i32 0, i32 11, !dbg !13363
  %129 = load i32, i32* %totvlak129, align 4, !dbg !13364
  %inc130 = add nsw i32 %129, 1, !dbg !13364
  store i32 %inc130, i32* %totvlak129, align 4, !dbg !13364
  %call131 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %127, i32 %129), !dbg !13365
  store %struct.VlakRen* %call131, %struct.VlakRen** %vlr, align 8, !dbg !13366
  %130 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13367
  %131 = load i32, i32* %startvert, align 4, !dbg !13368
  %132 = load i32, i32* %v1, align 4, !dbg !13369
  %add132 = add nsw i32 %131, %132, !dbg !13370
  %call133 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %130, i32 %add132), !dbg !13371
  %133 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13372
  %v1134 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %133, i32 0, i32 0, !dbg !13373
  store %struct.VertRen* %call133, %struct.VertRen** %v1134, align 8, !dbg !13374
  %134 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13375
  %135 = load i32, i32* %startvert, align 4, !dbg !13376
  %136 = load i32, i32* %v2, align 4, !dbg !13377
  %add135 = add nsw i32 %135, %136, !dbg !13378
  %call136 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %134, i32 %add135), !dbg !13379
  %137 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13380
  %v2137 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %137, i32 0, i32 1, !dbg !13381
  store %struct.VertRen* %call136, %struct.VertRen** %v2137, align 8, !dbg !13382
  %138 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13383
  %139 = load i32, i32* %startvert, align 4, !dbg !13384
  %140 = load i32, i32* %v3, align 4, !dbg !13385
  %add138 = add nsw i32 %139, %140, !dbg !13386
  %call139 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %138, i32 %add138), !dbg !13387
  %141 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13388
  %v3140 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %141, i32 0, i32 2, !dbg !13389
  store %struct.VertRen* %call139, %struct.VertRen** %v3140, align 8, !dbg !13390
  %142 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13391
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %142, i32 0, i32 3, !dbg !13392
  store %struct.VertRen* null, %struct.VertRen** %v4, align 8, !dbg !13393
  %143 = load float*, float** %co3, align 8, !dbg !13394
  %144 = load float*, float** %co2, align 8, !dbg !13396
  %145 = load float*, float** %co1, align 8, !dbg !13397
  %call141 = call float @area_tri_v3(float* %143, float* %144, float* %145), !dbg !13398
  %cmp142 = fcmp ogt float %call141, 0x3E80000000000000, !dbg !13399
  br i1 %cmp142, label %if.then144, label %if.end155, !dbg !13400

if.then144:                                       ; preds = %for.body113
  %146 = load i32, i32* %negative_scale, align 4, !dbg !13401
  %tobool145 = icmp ne i32 %146, 0, !dbg !13401
  br i1 %tobool145, label %if.then146, label %if.else149, !dbg !13404

if.then146:                                       ; preds = %if.then144
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !13405
  %147 = load float*, float** %co1, align 8, !dbg !13406
  %148 = load float*, float** %co2, align 8, !dbg !13407
  %149 = load float*, float** %co3, align 8, !dbg !13408
  %call148 = call float @normal_tri_v3(float* %arraydecay147, float* %147, float* %148, float* %149), !dbg !13409
  br label %if.end152, !dbg !13409

if.else149:                                       ; preds = %if.then144
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !13410
  %150 = load float*, float** %co3, align 8, !dbg !13411
  %151 = load float*, float** %co2, align 8, !dbg !13412
  %152 = load float*, float** %co1, align 8, !dbg !13413
  %call151 = call float @normal_tri_v3(float* %arraydecay150, float* %150, float* %151, float* %152), !dbg !13414
  br label %if.end152

if.end152:                                        ; preds = %if.else149, %if.then146
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !13415
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %tmp, i64 0, i64 0, !dbg !13416
  call void @add_v3_v3(float* %arraydecay153, float* %arraydecay154), !dbg !13417
  br label %if.end155, !dbg !13418

if.end155:                                        ; preds = %if.end152, %for.body113
  %153 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13419
  %154 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13420
  %col156 = getelementptr inbounds %struct.DispList, %struct.DispList* %154, i32 0, i32 6, !dbg !13421
  %155 = load i16, i16* %col156, align 4, !dbg !13421
  %idxprom157 = sext i16 %155 to i64, !dbg !13419
  %arrayidx158 = getelementptr inbounds %struct.Material*, %struct.Material** %153, i64 %idxprom157, !dbg !13419
  %156 = load %struct.Material*, %struct.Material** %arrayidx158, align 8, !dbg !13419
  %157 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13422
  %mat159 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %157, i32 0, i32 5, !dbg !13423
  store %struct.Material* %156, %struct.Material** %mat159, align 8, !dbg !13424
  %158 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13425
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %158, i32 0, i32 7, !dbg !13426
  store i8 0, i8* %flag, align 1, !dbg !13427
  %159 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13428
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %159, i32 0, i32 8, !dbg !13429
  store i8 0, i8* %ec, align 2, !dbg !13430
  br label %for.inc160, !dbg !13431

for.inc160:                                       ; preds = %if.end155
  %160 = load i32, i32* %a, align 4, !dbg !13432
  %inc161 = add nsw i32 %160, 1, !dbg !13432
  store i32 %inc161, i32* %a, align 4, !dbg !13432
  %161 = load i32*, i32** %index, align 8, !dbg !13433
  %add.ptr162 = getelementptr inbounds i32, i32* %161, i64 3, !dbg !13433
  store i32* %add.ptr162, i32** %index, align 8, !dbg !13433
  br label %for.cond110, !dbg !13434, !llvm.loop !13435

for.end163:                                       ; preds = %for.cond110
  %arraydecay164 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nmat, i64 0, i64 0, !dbg !13437
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !13438
  call void @mul_m4_v3([4 x float]* %arraydecay164, float* %arraydecay165), !dbg !13439
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !13440
  %call167 = call float @normalize_v3(float* %arraydecay166), !dbg !13441
  %162 = load i32, i32* %startvlak, align 4, !dbg !13442
  store i32 %162, i32* %a, align 4, !dbg !13444
  br label %for.cond168, !dbg !13445

for.cond168:                                      ; preds = %for.inc192, %for.end163
  %163 = load i32, i32* %a, align 4, !dbg !13446
  %164 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13448
  %totvlak169 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %164, i32 0, i32 11, !dbg !13449
  %165 = load i32, i32* %totvlak169, align 4, !dbg !13449
  %cmp170 = icmp slt i32 %163, %165, !dbg !13450
  br i1 %cmp170, label %for.body172, label %for.end194, !dbg !13451

for.body172:                                      ; preds = %for.cond168
  %166 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13452
  %167 = load i32, i32* %a, align 4, !dbg !13454
  %call173 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %166, i32 %167), !dbg !13455
  store %struct.VlakRen* %call173, %struct.VlakRen** %vlr, align 8, !dbg !13456
  %168 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13457
  %n174 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %168, i32 0, i32 4, !dbg !13458
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %n174, i64 0, i64 0, !dbg !13457
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !13459
  call void @copy_v3_v3(float* %arraydecay175, float* %arraydecay176), !dbg !13460
  %169 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13461
  %v1177 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %169, i32 0, i32 0, !dbg !13462
  %170 = load %struct.VertRen*, %struct.VertRen** %v1177, align 8, !dbg !13462
  %n178 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %170, i32 0, i32 1, !dbg !13463
  %arraydecay179 = getelementptr inbounds [3 x float], [3 x float]* %n178, i64 0, i64 0, !dbg !13461
  %171 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13464
  %n180 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %171, i32 0, i32 4, !dbg !13465
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %n180, i64 0, i64 0, !dbg !13464
  call void @add_v3_v3(float* %arraydecay179, float* %arraydecay181), !dbg !13466
  %172 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13467
  %v3182 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %172, i32 0, i32 2, !dbg !13468
  %173 = load %struct.VertRen*, %struct.VertRen** %v3182, align 8, !dbg !13468
  %n183 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %173, i32 0, i32 1, !dbg !13469
  %arraydecay184 = getelementptr inbounds [3 x float], [3 x float]* %n183, i64 0, i64 0, !dbg !13467
  %174 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13470
  %n185 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %174, i32 0, i32 4, !dbg !13471
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %n185, i64 0, i64 0, !dbg !13470
  call void @add_v3_v3(float* %arraydecay184, float* %arraydecay186), !dbg !13472
  %175 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13473
  %v2187 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %175, i32 0, i32 1, !dbg !13474
  %176 = load %struct.VertRen*, %struct.VertRen** %v2187, align 8, !dbg !13474
  %n188 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %176, i32 0, i32 1, !dbg !13475
  %arraydecay189 = getelementptr inbounds [3 x float], [3 x float]* %n188, i64 0, i64 0, !dbg !13473
  %177 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13476
  %n190 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %177, i32 0, i32 4, !dbg !13477
  %arraydecay191 = getelementptr inbounds [3 x float], [3 x float]* %n190, i64 0, i64 0, !dbg !13476
  call void @add_v3_v3(float* %arraydecay189, float* %arraydecay191), !dbg !13478
  br label %for.inc192, !dbg !13479

for.inc192:                                       ; preds = %for.body172
  %178 = load i32, i32* %a, align 4, !dbg !13480
  %inc193 = add nsw i32 %178, 1, !dbg !13480
  store i32 %inc193, i32* %a, align 4, !dbg !13480
  br label %for.cond168, !dbg !13481, !llvm.loop !13482

for.end194:                                       ; preds = %for.cond168
  %179 = load i32, i32* %startvert, align 4, !dbg !13484
  store i32 %179, i32* %a, align 4, !dbg !13486
  br label %for.cond195, !dbg !13487

for.cond195:                                      ; preds = %for.inc204, %for.end194
  %180 = load i32, i32* %a, align 4, !dbg !13488
  %181 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13490
  %totvert196 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %181, i32 0, i32 10, !dbg !13491
  %182 = load i32, i32* %totvert196, align 8, !dbg !13491
  %cmp197 = icmp slt i32 %180, %182, !dbg !13492
  br i1 %cmp197, label %for.body199, label %for.end206, !dbg !13493

for.body199:                                      ; preds = %for.cond195
  %183 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13494
  %184 = load i32, i32* %a, align 4, !dbg !13496
  %call200 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %183, i32 %184), !dbg !13497
  store %struct.VertRen* %call200, %struct.VertRen** %ver, align 8, !dbg !13498
  %185 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13499
  %n201 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %185, i32 0, i32 1, !dbg !13500
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %n201, i64 0, i64 0, !dbg !13499
  %call203 = call float @normalize_v3(float* %arraydecay202), !dbg !13501
  br label %for.inc204, !dbg !13502

for.inc204:                                       ; preds = %for.body199
  %186 = load i32, i32* %a, align 4, !dbg !13503
  %inc205 = add nsw i32 %186, 1, !dbg !13503
  store i32 %inc205, i32* %a, align 4, !dbg !13503
  br label %for.cond195, !dbg !13504, !llvm.loop !13505

for.end206:                                       ; preds = %for.cond195
  br label %if.end207, !dbg !13507

if.end207:                                        ; preds = %for.end206, %for.end104
  br label %if.end442, !dbg !13508

if.else208:                                       ; preds = %if.else79
  %187 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13509
  %type209 = getelementptr inbounds %struct.DispList, %struct.DispList* %187, i32 0, i32 2, !dbg !13511
  %188 = load i16, i16* %type209, align 8, !dbg !13511
  %conv210 = sext i16 %188 to i32, !dbg !13509
  %cmp211 = icmp eq i32 %conv210, 2, !dbg !13512
  br i1 %cmp211, label %if.then213, label %if.end441, !dbg !13513

if.then213:                                       ; preds = %if.else208
  %189 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13514
  %flag214 = getelementptr inbounds %struct.DispList, %struct.DispList* %189, i32 0, i32 3, !dbg !13517
  %190 = load i16, i16* %flag214, align 2, !dbg !13517
  %conv215 = sext i16 %190 to i32, !dbg !13514
  %and216 = and i32 %conv215, 1, !dbg !13518
  %tobool217 = icmp ne i32 %and216, 0, !dbg !13518
  br i1 %tobool217, label %if.then218, label %if.else223, !dbg !13519

if.then218:                                       ; preds = %if.then213
  %191 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13520
  %192 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13522
  %193 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13523
  %194 = load float*, float** %orco, align 8, !dbg !13524
  %arraydecay219 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13525
  %call220 = call i32 @dl_surf_to_renderdata(%struct.ObjectRen* %191, %struct.DispList* %192, %struct.Material** %193, float* %194, [4 x float]* %arraydecay219), !dbg !13526
  %mul221 = mul nsw i32 3, %call220, !dbg !13527
  %195 = load float*, float** %orco, align 8, !dbg !13528
  %idx.ext = sext i32 %mul221 to i64, !dbg !13528
  %add.ptr222 = getelementptr inbounds float, float* %195, i64 %idx.ext, !dbg !13528
  store float* %add.ptr222, float** %orco, align 8, !dbg !13528
  br label %if.end440, !dbg !13529

if.else223:                                       ; preds = %if.then213
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !13530, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !13533, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !13535, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.declare(metadata i32* %p4, metadata !13537, metadata !DIExpression()), !dbg !13538
  %196 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13539
  %verts224 = getelementptr inbounds %struct.DispList, %struct.DispList* %196, i32 0, i32 8, !dbg !13540
  %197 = load float*, float** %verts224, align 8, !dbg !13540
  store float* %197, float** %fp, align 8, !dbg !13541
  %198 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13542
  %totvert225 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %198, i32 0, i32 10, !dbg !13543
  %199 = load i32, i32* %totvert225, align 8, !dbg !13543
  store i32 %199, i32* %startvert, align 4, !dbg !13544
  %200 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13545
  %nr226 = getelementptr inbounds %struct.DispList, %struct.DispList* %200, i32 0, i32 5, !dbg !13546
  %201 = load i32, i32* %nr226, align 8, !dbg !13546
  %202 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13547
  %parts227 = getelementptr inbounds %struct.DispList, %struct.DispList* %202, i32 0, i32 4, !dbg !13548
  %203 = load i32, i32* %parts227, align 4, !dbg !13548
  %mul228 = mul nsw i32 %201, %203, !dbg !13549
  store i32 %mul228, i32* %nr, align 4, !dbg !13550
  br label %while.cond229, !dbg !13551

while.cond229:                                    ; preds = %if.end245, %if.else223
  %204 = load i32, i32* %nr, align 4, !dbg !13552
  %dec = add nsw i32 %204, -1, !dbg !13552
  store i32 %dec, i32* %nr, align 4, !dbg !13552
  %tobool230 = icmp ne i32 %204, 0, !dbg !13551
  br i1 %tobool230, label %while.body231, label %while.end, !dbg !13551

while.body231:                                    ; preds = %while.cond229
  %205 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13553
  %206 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13555
  %totvert232 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %206, i32 0, i32 10, !dbg !13556
  %207 = load i32, i32* %totvert232, align 8, !dbg !13557
  %inc233 = add nsw i32 %207, 1, !dbg !13557
  store i32 %inc233, i32* %totvert232, align 8, !dbg !13557
  %call234 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %205, i32 %207), !dbg !13558
  store %struct.VertRen* %call234, %struct.VertRen** %ver, align 8, !dbg !13559
  %208 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13560
  %co235 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %208, i32 0, i32 0, !dbg !13561
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %co235, i64 0, i64 0, !dbg !13560
  %209 = load float*, float** %fp, align 8, !dbg !13562
  call void @copy_v3_v3(float* %arraydecay236, float* %209), !dbg !13563
  %arraydecay237 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13564
  %210 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13565
  %co238 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %210, i32 0, i32 0, !dbg !13566
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %co238, i64 0, i64 0, !dbg !13565
  call void @mul_m4_v3([4 x float]* %arraydecay237, float* %arraydecay239), !dbg !13567
  %211 = load float*, float** %fp, align 8, !dbg !13568
  %add.ptr240 = getelementptr inbounds float, float* %211, i64 3, !dbg !13568
  store float* %add.ptr240, float** %fp, align 8, !dbg !13568
  %212 = load float*, float** %orco, align 8, !dbg !13569
  %tobool241 = icmp ne float* %212, null, !dbg !13569
  br i1 %tobool241, label %if.then242, label %if.end245, !dbg !13571

if.then242:                                       ; preds = %while.body231
  %213 = load float*, float** %orco, align 8, !dbg !13572
  %214 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13574
  %orco243 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %214, i32 0, i32 2, !dbg !13575
  store float* %213, float** %orco243, align 8, !dbg !13576
  %215 = load float*, float** %orco, align 8, !dbg !13577
  %add.ptr244 = getelementptr inbounds float, float* %215, i64 3, !dbg !13577
  store float* %add.ptr244, float** %orco, align 8, !dbg !13577
  br label %if.end245, !dbg !13578

if.end245:                                        ; preds = %if.then242, %while.body231
  br label %while.cond229, !dbg !13551, !llvm.loop !13579

while.end:                                        ; preds = %while.cond229
  %216 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13581
  %flag246 = getelementptr inbounds %struct.DispList, %struct.DispList* %216, i32 0, i32 3, !dbg !13583
  %217 = load i16, i16* %flag246, align 2, !dbg !13583
  %conv247 = sext i16 %217 to i32, !dbg !13581
  %and248 = and i32 %conv247, 2, !dbg !13584
  %tobool249 = icmp ne i32 %and248, 0, !dbg !13584
  br i1 %tobool249, label %land.lhs.true250, label %if.end271, !dbg !13585

land.lhs.true250:                                 ; preds = %while.end
  %218 = load float*, float** %orco, align 8, !dbg !13586
  %tobool251 = icmp ne float* %218, null, !dbg !13586
  br i1 %tobool251, label %if.then252, label %if.end271, !dbg !13587

if.then252:                                       ; preds = %land.lhs.true250
  %219 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13588
  %verts253 = getelementptr inbounds %struct.DispList, %struct.DispList* %219, i32 0, i32 8, !dbg !13590
  %220 = load float*, float** %verts253, align 8, !dbg !13590
  store float* %220, float** %fp, align 8, !dbg !13591
  %221 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13592
  %nr254 = getelementptr inbounds %struct.DispList, %struct.DispList* %221, i32 0, i32 5, !dbg !13593
  %222 = load i32, i32* %nr254, align 8, !dbg !13593
  store i32 %222, i32* %nr, align 4, !dbg !13594
  br label %while.cond255, !dbg !13595

while.cond255:                                    ; preds = %while.body258, %if.then252
  %223 = load i32, i32* %nr, align 4, !dbg !13596
  %dec256 = add nsw i32 %223, -1, !dbg !13596
  store i32 %dec256, i32* %nr, align 4, !dbg !13596
  %tobool257 = icmp ne i32 %223, 0, !dbg !13595
  br i1 %tobool257, label %while.body258, label %while.end270, !dbg !13595

while.body258:                                    ; preds = %while.cond255
  %224 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13597
  %225 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13599
  %totvert259 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %225, i32 0, i32 10, !dbg !13600
  %226 = load i32, i32* %totvert259, align 8, !dbg !13601
  %inc260 = add nsw i32 %226, 1, !dbg !13601
  store i32 %inc260, i32* %totvert259, align 8, !dbg !13601
  %call261 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %224, i32 %226), !dbg !13602
  store %struct.VertRen* %call261, %struct.VertRen** %ver, align 8, !dbg !13603
  %227 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13604
  %co262 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %227, i32 0, i32 0, !dbg !13605
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %co262, i64 0, i64 0, !dbg !13604
  %228 = load float*, float** %fp, align 8, !dbg !13606
  call void @copy_v3_v3(float* %arraydecay263, float* %228), !dbg !13607
  %arraydecay264 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !13608
  %229 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13609
  %co265 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %229, i32 0, i32 0, !dbg !13610
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %co265, i64 0, i64 0, !dbg !13609
  call void @mul_m4_v3([4 x float]* %arraydecay264, float* %arraydecay266), !dbg !13611
  %230 = load float*, float** %orco, align 8, !dbg !13612
  %231 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13613
  %orco267 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %231, i32 0, i32 2, !dbg !13614
  store float* %230, float** %orco267, align 8, !dbg !13615
  %232 = load float*, float** %fp, align 8, !dbg !13616
  %add.ptr268 = getelementptr inbounds float, float* %232, i64 3, !dbg !13616
  store float* %add.ptr268, float** %fp, align 8, !dbg !13616
  %233 = load float*, float** %orco, align 8, !dbg !13617
  %add.ptr269 = getelementptr inbounds float, float* %233, i64 3, !dbg !13617
  store float* %add.ptr269, float** %orco, align 8, !dbg !13617
  br label %while.cond255, !dbg !13595, !llvm.loop !13618

while.end270:                                     ; preds = %while.cond255
  br label %if.end271, !dbg !13620

if.end271:                                        ; preds = %while.end270, %land.lhs.true250, %while.end
  %234 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13621
  %bevelSplitFlag = getelementptr inbounds %struct.DispList, %struct.DispList* %234, i32 0, i32 13, !dbg !13623
  %235 = load i32*, i32** %bevelSplitFlag, align 8, !dbg !13623
  %tobool272 = icmp ne i32* %235, null, !dbg !13621
  br i1 %tobool272, label %if.then275, label %lor.lhs.false, !dbg !13624

lor.lhs.false:                                    ; preds = %if.end271
  %236 = load i32, i32* %timeoffset.addr, align 4, !dbg !13625
  %cmp273 = icmp eq i32 %236, 0, !dbg !13626
  br i1 %cmp273, label %if.then275, label %if.end439, !dbg !13627

if.then275:                                       ; preds = %lor.lhs.false, %if.end271
  call void @llvm.dbg.declare(metadata i32* %startvlak276, metadata !13628, metadata !DIExpression()), !dbg !13630
  %237 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13631
  %totvlak277 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %237, i32 0, i32 11, !dbg !13632
  %238 = load i32, i32* %totvlak277, align 4, !dbg !13632
  store i32 %238, i32* %startvlak276, align 4, !dbg !13630
  store i32 0, i32* %a, align 4, !dbg !13633
  br label %for.cond278, !dbg !13635

for.cond278:                                      ; preds = %for.inc360, %if.then275
  %239 = load i32, i32* %a, align 4, !dbg !13636
  %240 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13638
  %parts279 = getelementptr inbounds %struct.DispList, %struct.DispList* %240, i32 0, i32 4, !dbg !13639
  %241 = load i32, i32* %parts279, align 4, !dbg !13639
  %cmp280 = icmp slt i32 %239, %241, !dbg !13640
  br i1 %cmp280, label %for.body282, label %for.end362, !dbg !13641

for.body282:                                      ; preds = %for.cond278
  %242 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13642
  %243 = load i32, i32* %a, align 4, !dbg !13645
  %call283 = call zeroext i8 @BKE_displist_surfindex_get(%struct.DispList* %242, i32 %243, i32* %b, i32* %p1, i32* %p2, i32* %p3, i32* %p4), !dbg !13646
  %conv284 = zext i8 %call283 to i32, !dbg !13646
  %cmp285 = icmp eq i32 %conv284, 0, !dbg !13647
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !13648

if.then287:                                       ; preds = %for.body282
  br label %for.end362, !dbg !13649

if.end288:                                        ; preds = %for.body282
  %244 = load i32, i32* %startvert, align 4, !dbg !13650
  %245 = load i32, i32* %p1, align 4, !dbg !13651
  %add289 = add nsw i32 %245, %244, !dbg !13651
  store i32 %add289, i32* %p1, align 4, !dbg !13651
  %246 = load i32, i32* %startvert, align 4, !dbg !13652
  %247 = load i32, i32* %p2, align 4, !dbg !13653
  %add290 = add nsw i32 %247, %246, !dbg !13653
  store i32 %add290, i32* %p2, align 4, !dbg !13653
  %248 = load i32, i32* %startvert, align 4, !dbg !13654
  %249 = load i32, i32* %p3, align 4, !dbg !13655
  %add291 = add nsw i32 %249, %248, !dbg !13655
  store i32 %add291, i32* %p3, align 4, !dbg !13655
  %250 = load i32, i32* %startvert, align 4, !dbg !13656
  %251 = load i32, i32* %p4, align 4, !dbg !13657
  %add292 = add nsw i32 %251, %250, !dbg !13657
  store i32 %add292, i32* %p4, align 4, !dbg !13657
  %252 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13658
  %flag293 = getelementptr inbounds %struct.DispList, %struct.DispList* %252, i32 0, i32 3, !dbg !13660
  %253 = load i16, i16* %flag293, align 2, !dbg !13660
  %conv294 = sext i16 %253 to i32, !dbg !13658
  %and295 = and i32 %conv294, 2, !dbg !13661
  %tobool296 = icmp ne i32 %and295, 0, !dbg !13661
  br i1 %tobool296, label %land.lhs.true297, label %if.end308, !dbg !13662

land.lhs.true297:                                 ; preds = %if.end288
  %254 = load float*, float** %orco, align 8, !dbg !13663
  %tobool298 = icmp ne float* %254, null, !dbg !13663
  br i1 %tobool298, label %land.lhs.true299, label %if.end308, !dbg !13664

land.lhs.true299:                                 ; preds = %land.lhs.true297
  %255 = load i32, i32* %a, align 4, !dbg !13665
  %256 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13666
  %parts300 = getelementptr inbounds %struct.DispList, %struct.DispList* %256, i32 0, i32 4, !dbg !13667
  %257 = load i32, i32* %parts300, align 4, !dbg !13667
  %sub = sub nsw i32 %257, 1, !dbg !13668
  %cmp301 = icmp eq i32 %255, %sub, !dbg !13669
  br i1 %cmp301, label %if.then303, label %if.end308, !dbg !13670

if.then303:                                       ; preds = %land.lhs.true299
  %258 = load i32, i32* %p1, align 4, !dbg !13671
  %259 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13673
  %nr304 = getelementptr inbounds %struct.DispList, %struct.DispList* %259, i32 0, i32 5, !dbg !13674
  %260 = load i32, i32* %nr304, align 8, !dbg !13674
  %add305 = add nsw i32 %258, %260, !dbg !13675
  store i32 %add305, i32* %p3, align 4, !dbg !13676
  %261 = load i32, i32* %p2, align 4, !dbg !13677
  %262 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13678
  %nr306 = getelementptr inbounds %struct.DispList, %struct.DispList* %262, i32 0, i32 5, !dbg !13679
  %263 = load i32, i32* %nr306, align 8, !dbg !13679
  %add307 = add nsw i32 %261, %263, !dbg !13680
  store i32 %add307, i32* %p4, align 4, !dbg !13681
  br label %if.end308, !dbg !13682

if.end308:                                        ; preds = %if.then303, %land.lhs.true299, %land.lhs.true297, %if.end288
  br label %for.cond309, !dbg !13683

for.cond309:                                      ; preds = %for.inc357, %if.end308
  %264 = load i32, i32* %b, align 4, !dbg !13684
  %265 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13687
  %nr310 = getelementptr inbounds %struct.DispList, %struct.DispList* %265, i32 0, i32 5, !dbg !13688
  %266 = load i32, i32* %nr310, align 8, !dbg !13688
  %cmp311 = icmp slt i32 %264, %266, !dbg !13689
  br i1 %cmp311, label %for.body313, label %for.end359, !dbg !13690

for.body313:                                      ; preds = %for.cond309
  %267 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13691
  %268 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13693
  %totvlak314 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %268, i32 0, i32 11, !dbg !13694
  %269 = load i32, i32* %totvlak314, align 4, !dbg !13695
  %inc315 = add nsw i32 %269, 1, !dbg !13695
  store i32 %inc315, i32* %totvlak314, align 4, !dbg !13695
  %call316 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %267, i32 %269), !dbg !13696
  store %struct.VlakRen* %call316, %struct.VlakRen** %vlr, align 8, !dbg !13697
  %270 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13698
  %271 = load i32, i32* %p2, align 4, !dbg !13699
  %call317 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %270, i32 %271), !dbg !13700
  %272 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13701
  %v1318 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %272, i32 0, i32 0, !dbg !13702
  store %struct.VertRen* %call317, %struct.VertRen** %v1318, align 8, !dbg !13703
  %273 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13704
  %274 = load i32, i32* %p1, align 4, !dbg !13705
  %call319 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %273, i32 %274), !dbg !13706
  %275 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13707
  %v2320 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %275, i32 0, i32 1, !dbg !13708
  store %struct.VertRen* %call319, %struct.VertRen** %v2320, align 8, !dbg !13709
  %276 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13710
  %277 = load i32, i32* %p3, align 4, !dbg !13711
  %call321 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %276, i32 %277), !dbg !13712
  %278 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13713
  %v3322 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %278, i32 0, i32 2, !dbg !13714
  store %struct.VertRen* %call321, %struct.VertRen** %v3322, align 8, !dbg !13715
  %279 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13716
  %280 = load i32, i32* %p4, align 4, !dbg !13717
  %call323 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %279, i32 %280), !dbg !13718
  %281 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13719
  %v4324 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %281, i32 0, i32 3, !dbg !13720
  store %struct.VertRen* %call323, %struct.VertRen** %v4324, align 8, !dbg !13721
  %282 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13722
  %ec325 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %282, i32 0, i32 8, !dbg !13723
  store i8 6, i8* %ec325, align 2, !dbg !13724
  %283 = load i32, i32* %a, align 4, !dbg !13725
  %cmp326 = icmp eq i32 %283, 0, !dbg !13727
  br i1 %cmp326, label %if.then328, label %if.end333, !dbg !13728

if.then328:                                       ; preds = %for.body313
  %284 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13729
  %ec329 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %284, i32 0, i32 8, !dbg !13730
  %285 = load i8, i8* %ec329, align 2, !dbg !13731
  %conv330 = zext i8 %285 to i32, !dbg !13731
  %add331 = add nsw i32 %conv330, 1, !dbg !13731
  %conv332 = trunc i32 %add331 to i8, !dbg !13731
  store i8 %conv332, i8* %ec329, align 2, !dbg !13731
  br label %if.end333, !dbg !13729

if.end333:                                        ; preds = %if.then328, %for.body313
  %286 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13732
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %286, i32 0, i32 7, !dbg !13733
  %287 = load i16, i16* %rt, align 2, !dbg !13733
  %conv334 = trunc i16 %287 to i8, !dbg !13732
  %288 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13734
  %flag335 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %288, i32 0, i32 7, !dbg !13735
  store i8 %conv334, i8* %flag335, align 1, !dbg !13736
  %289 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13737
  %n336 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %289, i32 0, i32 4, !dbg !13738
  %arraydecay337 = getelementptr inbounds [3 x float], [3 x float]* %n336, i64 0, i64 0, !dbg !13737
  %290 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13739
  %v4338 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %290, i32 0, i32 3, !dbg !13740
  %291 = load %struct.VertRen*, %struct.VertRen** %v4338, align 8, !dbg !13740
  %co339 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %291, i32 0, i32 0, !dbg !13741
  %arraydecay340 = getelementptr inbounds [3 x float], [3 x float]* %co339, i64 0, i64 0, !dbg !13739
  %292 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13742
  %v3341 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %292, i32 0, i32 2, !dbg !13743
  %293 = load %struct.VertRen*, %struct.VertRen** %v3341, align 8, !dbg !13743
  %co342 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %293, i32 0, i32 0, !dbg !13744
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %co342, i64 0, i64 0, !dbg !13742
  %294 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13745
  %v2344 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %294, i32 0, i32 1, !dbg !13746
  %295 = load %struct.VertRen*, %struct.VertRen** %v2344, align 8, !dbg !13746
  %co345 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %295, i32 0, i32 0, !dbg !13747
  %arraydecay346 = getelementptr inbounds [3 x float], [3 x float]* %co345, i64 0, i64 0, !dbg !13745
  %296 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13748
  %v1347 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %296, i32 0, i32 0, !dbg !13749
  %297 = load %struct.VertRen*, %struct.VertRen** %v1347, align 8, !dbg !13749
  %co348 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %297, i32 0, i32 0, !dbg !13750
  %arraydecay349 = getelementptr inbounds [3 x float], [3 x float]* %co348, i64 0, i64 0, !dbg !13748
  %call350 = call float @normal_quad_v3(float* %arraydecay337, float* %arraydecay340, float* %arraydecay343, float* %arraydecay346, float* %arraydecay349), !dbg !13751
  %298 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13752
  %299 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13753
  %col351 = getelementptr inbounds %struct.DispList, %struct.DispList* %299, i32 0, i32 6, !dbg !13754
  %300 = load i16, i16* %col351, align 4, !dbg !13754
  %idxprom352 = sext i16 %300 to i64, !dbg !13752
  %arrayidx353 = getelementptr inbounds %struct.Material*, %struct.Material** %298, i64 %idxprom352, !dbg !13752
  %301 = load %struct.Material*, %struct.Material** %arrayidx353, align 8, !dbg !13752
  %302 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13755
  %mat354 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %302, i32 0, i32 5, !dbg !13756
  store %struct.Material* %301, %struct.Material** %mat354, align 8, !dbg !13757
  %303 = load i32, i32* %p3, align 4, !dbg !13758
  store i32 %303, i32* %p4, align 4, !dbg !13759
  %304 = load i32, i32* %p3, align 4, !dbg !13760
  %inc355 = add nsw i32 %304, 1, !dbg !13760
  store i32 %inc355, i32* %p3, align 4, !dbg !13760
  %305 = load i32, i32* %p1, align 4, !dbg !13761
  store i32 %305, i32* %p2, align 4, !dbg !13762
  %306 = load i32, i32* %p1, align 4, !dbg !13763
  %inc356 = add nsw i32 %306, 1, !dbg !13763
  store i32 %inc356, i32* %p1, align 4, !dbg !13763
  br label %for.inc357, !dbg !13764

for.inc357:                                       ; preds = %if.end333
  %307 = load i32, i32* %b, align 4, !dbg !13765
  %inc358 = add nsw i32 %307, 1, !dbg !13765
  store i32 %inc358, i32* %b, align 4, !dbg !13765
  br label %for.cond309, !dbg !13766, !llvm.loop !13767

for.end359:                                       ; preds = %for.cond309
  br label %for.inc360, !dbg !13769

for.inc360:                                       ; preds = %for.end359
  %308 = load i32, i32* %a, align 4, !dbg !13770
  %inc361 = add nsw i32 %308, 1, !dbg !13770
  store i32 %inc361, i32* %a, align 4, !dbg !13770
  br label %for.cond278, !dbg !13771, !llvm.loop !13772

for.end362:                                       ; preds = %if.then287, %for.cond278
  %309 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13774
  %bevelSplitFlag363 = getelementptr inbounds %struct.DispList, %struct.DispList* %309, i32 0, i32 13, !dbg !13776
  %310 = load i32*, i32** %bevelSplitFlag363, align 8, !dbg !13776
  %tobool364 = icmp ne i32* %310, null, !dbg !13774
  br i1 %tobool364, label %if.then365, label %if.end397, !dbg !13777

if.then365:                                       ; preds = %for.end362
  store i32 0, i32* %a, align 4, !dbg !13778
  br label %for.cond366, !dbg !13781

for.cond366:                                      ; preds = %for.inc394, %if.then365
  %311 = load i32, i32* %a, align 4, !dbg !13782
  %312 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13784
  %parts367 = getelementptr inbounds %struct.DispList, %struct.DispList* %312, i32 0, i32 4, !dbg !13785
  %313 = load i32, i32* %parts367, align 4, !dbg !13785
  %sub368 = sub nsw i32 %313, 1, !dbg !13786
  %314 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13787
  %flag369 = getelementptr inbounds %struct.DispList, %struct.DispList* %314, i32 0, i32 3, !dbg !13788
  %315 = load i16, i16* %flag369, align 2, !dbg !13788
  %conv370 = sext i16 %315 to i32, !dbg !13787
  %and371 = and i32 %conv370, 2, !dbg !13789
  %tobool372 = icmp ne i32 %and371, 0, !dbg !13790
  %lnot = xor i1 %tobool372, true, !dbg !13790
  %lnot373 = xor i1 %lnot, true, !dbg !13791
  %lnot.ext = zext i1 %lnot373 to i32, !dbg !13791
  %add374 = add nsw i32 %sub368, %lnot.ext, !dbg !13792
  %cmp375 = icmp slt i32 %311, %add374, !dbg !13793
  br i1 %cmp375, label %for.body377, label %for.end396, !dbg !13794

for.body377:                                      ; preds = %for.cond366
  %316 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13795
  %bevelSplitFlag378 = getelementptr inbounds %struct.DispList, %struct.DispList* %316, i32 0, i32 13, !dbg !13797
  %317 = load i32*, i32** %bevelSplitFlag378, align 8, !dbg !13797
  %318 = load i32, i32* %a, align 4, !dbg !13798
  %shr = ashr i32 %318, 5, !dbg !13799
  %idxprom379 = sext i32 %shr to i64, !dbg !13795
  %arrayidx380 = getelementptr inbounds i32, i32* %317, i64 %idxprom379, !dbg !13795
  %319 = load i32, i32* %arrayidx380, align 4, !dbg !13795
  %320 = load i32, i32* %a, align 4, !dbg !13800
  %and381 = and i32 %320, 31, !dbg !13801
  %shl = shl i32 1, %and381, !dbg !13802
  %and382 = and i32 %319, %shl, !dbg !13803
  %tobool383 = icmp ne i32 %and382, 0, !dbg !13803
  br i1 %tobool383, label %if.then384, label %if.end393, !dbg !13804

if.then384:                                       ; preds = %for.body377
  %321 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13805
  %322 = load i32, i32* %startvlak276, align 4, !dbg !13806
  %323 = load i32, i32* %startvert, align 4, !dbg !13807
  %324 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13808
  %parts385 = getelementptr inbounds %struct.DispList, %struct.DispList* %324, i32 0, i32 4, !dbg !13809
  %325 = load i32, i32* %parts385, align 4, !dbg !13809
  %326 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13810
  %nr386 = getelementptr inbounds %struct.DispList, %struct.DispList* %326, i32 0, i32 5, !dbg !13811
  %327 = load i32, i32* %nr386, align 8, !dbg !13811
  %328 = load i32, i32* %a, align 4, !dbg !13812
  %329 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13813
  %flag387 = getelementptr inbounds %struct.DispList, %struct.DispList* %329, i32 0, i32 3, !dbg !13814
  %330 = load i16, i16* %flag387, align 2, !dbg !13814
  %conv388 = sext i16 %330 to i32, !dbg !13813
  %and389 = and i32 %conv388, 2, !dbg !13815
  %331 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13816
  %flag390 = getelementptr inbounds %struct.DispList, %struct.DispList* %331, i32 0, i32 3, !dbg !13817
  %332 = load i16, i16* %flag390, align 2, !dbg !13817
  %conv391 = sext i16 %332 to i32, !dbg !13816
  %and392 = and i32 %conv391, 1, !dbg !13818
  call void @split_v_renderfaces(%struct.ObjectRen* %321, i32 %322, i32 %323, i32 %325, i32 %327, i32 %328, i32 %and389, i32 %and392), !dbg !13819
  br label %if.end393, !dbg !13819

if.end393:                                        ; preds = %if.then384, %for.body377
  br label %for.inc394, !dbg !13820

for.inc394:                                       ; preds = %if.end393
  %333 = load i32, i32* %a, align 4, !dbg !13821
  %inc395 = add nsw i32 %333, 1, !dbg !13821
  store i32 %inc395, i32* %a, align 4, !dbg !13821
  br label %for.cond366, !dbg !13822, !llvm.loop !13823

for.end396:                                       ; preds = %for.cond366
  br label %if.end397, !dbg !13825

if.end397:                                        ; preds = %for.end396, %for.end362
  %334 = load i32, i32* %startvlak276, align 4, !dbg !13826
  store i32 %334, i32* %a, align 4, !dbg !13828
  br label %for.cond398, !dbg !13829

for.cond398:                                      ; preds = %for.inc424, %if.end397
  %335 = load i32, i32* %a, align 4, !dbg !13830
  %336 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13832
  %totvlak399 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %336, i32 0, i32 11, !dbg !13833
  %337 = load i32, i32* %totvlak399, align 4, !dbg !13833
  %cmp400 = icmp slt i32 %335, %337, !dbg !13834
  br i1 %cmp400, label %for.body402, label %for.end426, !dbg !13835

for.body402:                                      ; preds = %for.cond398
  %338 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13836
  %339 = load i32, i32* %a, align 4, !dbg !13838
  %call403 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %338, i32 %339), !dbg !13839
  store %struct.VlakRen* %call403, %struct.VlakRen** %vlr, align 8, !dbg !13840
  %340 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13841
  %v1404 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %340, i32 0, i32 0, !dbg !13842
  %341 = load %struct.VertRen*, %struct.VertRen** %v1404, align 8, !dbg !13842
  %n405 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %341, i32 0, i32 1, !dbg !13843
  %arraydecay406 = getelementptr inbounds [3 x float], [3 x float]* %n405, i64 0, i64 0, !dbg !13841
  %342 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13844
  %n407 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %342, i32 0, i32 4, !dbg !13845
  %arraydecay408 = getelementptr inbounds [3 x float], [3 x float]* %n407, i64 0, i64 0, !dbg !13844
  call void @add_v3_v3(float* %arraydecay406, float* %arraydecay408), !dbg !13846
  %343 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13847
  %v3409 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %343, i32 0, i32 2, !dbg !13848
  %344 = load %struct.VertRen*, %struct.VertRen** %v3409, align 8, !dbg !13848
  %n410 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %344, i32 0, i32 1, !dbg !13849
  %arraydecay411 = getelementptr inbounds [3 x float], [3 x float]* %n410, i64 0, i64 0, !dbg !13847
  %345 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13850
  %n412 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %345, i32 0, i32 4, !dbg !13851
  %arraydecay413 = getelementptr inbounds [3 x float], [3 x float]* %n412, i64 0, i64 0, !dbg !13850
  call void @add_v3_v3(float* %arraydecay411, float* %arraydecay413), !dbg !13852
  %346 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13853
  %v2414 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %346, i32 0, i32 1, !dbg !13854
  %347 = load %struct.VertRen*, %struct.VertRen** %v2414, align 8, !dbg !13854
  %n415 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %347, i32 0, i32 1, !dbg !13855
  %arraydecay416 = getelementptr inbounds [3 x float], [3 x float]* %n415, i64 0, i64 0, !dbg !13853
  %348 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13856
  %n417 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %348, i32 0, i32 4, !dbg !13857
  %arraydecay418 = getelementptr inbounds [3 x float], [3 x float]* %n417, i64 0, i64 0, !dbg !13856
  call void @add_v3_v3(float* %arraydecay416, float* %arraydecay418), !dbg !13858
  %349 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13859
  %v4419 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %349, i32 0, i32 3, !dbg !13860
  %350 = load %struct.VertRen*, %struct.VertRen** %v4419, align 8, !dbg !13860
  %n420 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %350, i32 0, i32 1, !dbg !13861
  %arraydecay421 = getelementptr inbounds [3 x float], [3 x float]* %n420, i64 0, i64 0, !dbg !13859
  %351 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !13862
  %n422 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %351, i32 0, i32 4, !dbg !13863
  %arraydecay423 = getelementptr inbounds [3 x float], [3 x float]* %n422, i64 0, i64 0, !dbg !13862
  call void @add_v3_v3(float* %arraydecay421, float* %arraydecay423), !dbg !13864
  br label %for.inc424, !dbg !13865

for.inc424:                                       ; preds = %for.body402
  %352 = load i32, i32* %a, align 4, !dbg !13866
  %inc425 = add nsw i32 %352, 1, !dbg !13866
  store i32 %inc425, i32* %a, align 4, !dbg !13866
  br label %for.cond398, !dbg !13867, !llvm.loop !13868

for.end426:                                       ; preds = %for.cond398
  %353 = load i32, i32* %startvert, align 4, !dbg !13870
  store i32 %353, i32* %a, align 4, !dbg !13872
  br label %for.cond427, !dbg !13873

for.cond427:                                      ; preds = %for.inc436, %for.end426
  %354 = load i32, i32* %a, align 4, !dbg !13874
  %355 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13876
  %totvert428 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %355, i32 0, i32 10, !dbg !13877
  %356 = load i32, i32* %totvert428, align 8, !dbg !13877
  %cmp429 = icmp slt i32 %354, %356, !dbg !13878
  br i1 %cmp429, label %for.body431, label %for.end438, !dbg !13879

for.body431:                                      ; preds = %for.cond427
  %357 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13880
  %358 = load i32, i32* %a, align 4, !dbg !13882
  %call432 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %357, i32 %358), !dbg !13883
  store %struct.VertRen* %call432, %struct.VertRen** %ver, align 8, !dbg !13884
  %359 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !13885
  %n433 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %359, i32 0, i32 1, !dbg !13886
  %arraydecay434 = getelementptr inbounds [3 x float], [3 x float]* %n433, i64 0, i64 0, !dbg !13885
  %call435 = call float @normalize_v3(float* %arraydecay434), !dbg !13887
  br label %for.inc436, !dbg !13888

for.inc436:                                       ; preds = %for.body431
  %360 = load i32, i32* %a, align 4, !dbg !13889
  %inc437 = add nsw i32 %360, 1, !dbg !13889
  store i32 %inc437, i32* %a, align 4, !dbg !13889
  br label %for.cond427, !dbg !13890, !llvm.loop !13891

for.end438:                                       ; preds = %for.cond427
  br label %if.end439, !dbg !13893

if.end439:                                        ; preds = %for.end438, %lor.lhs.false
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.then218
  br label %if.end441, !dbg !13894

if.end441:                                        ; preds = %if.end440, %if.else208
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end207
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then78
  %361 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !13895
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %361, i32 0, i32 0, !dbg !13896
  %362 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !13896
  store %struct.DispList* %362, %struct.DispList** %dl, align 8, !dbg !13897
  br label %while.cond, !dbg !13242, !llvm.loop !13898

while.end444:                                     ; preds = %while.cond
  br label %if.end445

if.end445:                                        ; preds = %while.end444, %if.end61
  call void @BKE_displist_free(%struct.ListBase* %disp), !dbg !13900
  %363 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13901
  %364 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !13902
  %365 = bitcast %struct.Material** %364 to i8*, !dbg !13902
  call void %363(i8* %365), !dbg !13901
  br label %return, !dbg !13903

return:                                           ; preds = %if.end445, %if.then18, %if.then13, %if.then
  ret void, !dbg !13903
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_surf(%struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset) #0 !dbg !13904 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %nu = alloca %struct.Nurb*, align 8
  %cu = alloca %struct.Curve*, align 8
  %displist = alloca %struct.ListBase, align 8
  %dl = alloca %struct.DispList*, align 8
  %matar = alloca %struct.Material**, align 8
  %orco = alloca float*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %a = alloca i32, align 4
  %totmat = alloca i32, align 4
  %need_orco = alloca i8, align 1
  %dm = alloca %struct.DerivedMesh*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !13905, metadata !DIExpression()), !dbg !13906
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !13907, metadata !DIExpression()), !dbg !13908
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !13909, metadata !DIExpression()), !dbg !13910
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !13911, metadata !DIExpression()), !dbg !13912
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !13913
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !13914
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !13914
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !13912
  call void @llvm.dbg.declare(metadata %struct.Nurb** %nu, metadata !13915, metadata !DIExpression()), !dbg !13974
  store %struct.Nurb* null, %struct.Nurb** %nu, align 8, !dbg !13974
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !13975, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.declare(metadata %struct.ListBase* %displist, metadata !13977, metadata !DIExpression()), !dbg !13978
  %2 = bitcast %struct.ListBase* %displist to i8*, !dbg !13978
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !13978
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !13979, metadata !DIExpression()), !dbg !13980
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar, metadata !13981, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.declare(metadata float** %orco, metadata !13983, metadata !DIExpression()), !dbg !13984
  store float* null, float** %orco, align 8, !dbg !13984
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !13985, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.declare(metadata i32* %a, metadata !13987, metadata !DIExpression()), !dbg !13988
  call void @llvm.dbg.declare(metadata i32* %totmat, metadata !13989, metadata !DIExpression()), !dbg !13990
  call void @llvm.dbg.declare(metadata i8* %need_orco, metadata !13991, metadata !DIExpression()), !dbg !13992
  store i8 0, i8* %need_orco, align 1, !dbg !13992
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !13993, metadata !DIExpression()), !dbg !13994
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !13994
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !13995
  %data = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 19, !dbg !13996
  %4 = load i8*, i8** %data, align 8, !dbg !13996
  %5 = bitcast i8* %4 to %struct.Curve*, !dbg !13995
  store %struct.Curve* %5, %struct.Curve** %cu, align 8, !dbg !13997
  %6 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13998
  %nurb = getelementptr inbounds %struct.Curve, %struct.Curve* %6, i32 0, i32 3, !dbg !13999
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nurb, i32 0, i32 0, !dbg !14000
  %7 = load i8*, i8** %first, align 8, !dbg !14000
  %8 = bitcast i8* %7 to %struct.Nurb*, !dbg !13998
  store %struct.Nurb* %8, %struct.Nurb** %nu, align 8, !dbg !14001
  %9 = load %struct.Nurb*, %struct.Nurb** %nu, align 8, !dbg !14002
  %cmp = icmp eq %struct.Nurb* %9, null, !dbg !14004
  br i1 %cmp, label %if.then, label %if.end, !dbg !14005

if.then:                                          ; preds = %entry
  br label %return, !dbg !14006

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14007
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14008
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 32, !dbg !14009
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !14008
  %11 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14010
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 47, !dbg !14011
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !14010
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !14012
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14013
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 50, !dbg !14014
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !14013
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14015
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay4, [4 x float]* %arraydecay5), !dbg !14016
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14017
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 31, !dbg !14018
  %14 = load i32, i32* %totcol, align 8, !dbg !14018
  %add = add nsw i32 %14, 1, !dbg !14019
  store i32 %add, i32* %totmat, align 4, !dbg !14020
  %15 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !14021
  %16 = load i32, i32* %totmat, align 4, !dbg !14022
  %conv = sext i32 %16 to i64, !dbg !14022
  %mul = mul i64 8, %conv, !dbg !14023
  %call6 = call i8* %15(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0)), !dbg !14021
  %17 = bitcast i8* %call6 to %struct.Material**, !dbg !14021
  store %struct.Material** %17, %struct.Material*** %matar, align 8, !dbg !14024
  store i32 0, i32* %a, align 4, !dbg !14025
  br label %for.cond, !dbg !14027

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %a, align 4, !dbg !14028
  %19 = load i32, i32* %totmat, align 4, !dbg !14030
  %cmp7 = icmp slt i32 %18, %19, !dbg !14031
  br i1 %cmp7, label %for.body, label %for.end, !dbg !14032

for.body:                                         ; preds = %for.cond
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14033
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14035
  %22 = load i32, i32* %a, align 4, !dbg !14036
  %add9 = add nsw i32 %22, 1, !dbg !14037
  %conv10 = trunc i32 %add9 to i16, !dbg !14036
  %call11 = call %struct.Material* @give_render_material(%struct.Render* %20, %struct.Object* %21, i16 signext %conv10), !dbg !14038
  %23 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !14039
  %24 = load i32, i32* %a, align 4, !dbg !14040
  %idxprom = sext i32 %24 to i64, !dbg !14039
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %23, i64 %idxprom, !dbg !14039
  store %struct.Material* %call11, %struct.Material** %arrayidx, align 8, !dbg !14041
  %25 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !14042
  %26 = load i32, i32* %a, align 4, !dbg !14044
  %idxprom12 = sext i32 %26 to i64, !dbg !14042
  %arrayidx13 = getelementptr inbounds %struct.Material*, %struct.Material** %25, i64 %idxprom12, !dbg !14042
  %27 = load %struct.Material*, %struct.Material** %arrayidx13, align 8, !dbg !14042
  %tobool = icmp ne %struct.Material* %27, null, !dbg !14042
  br i1 %tobool, label %land.lhs.true, label %if.end19, !dbg !14045

land.lhs.true:                                    ; preds = %for.body
  %28 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !14046
  %29 = load i32, i32* %a, align 4, !dbg !14047
  %idxprom14 = sext i32 %29 to i64, !dbg !14046
  %arrayidx15 = getelementptr inbounds %struct.Material*, %struct.Material** %28, i64 %idxprom14, !dbg !14046
  %30 = load %struct.Material*, %struct.Material** %arrayidx15, align 8, !dbg !14046
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %30, i32 0, i32 90, !dbg !14048
  %31 = load i16, i16* %texco, align 4, !dbg !14048
  %conv16 = sext i16 %31 to i32, !dbg !14046
  %and = and i32 %conv16, 1, !dbg !14049
  %tobool17 = icmp ne i32 %and, 0, !dbg !14049
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !14050

if.then18:                                        ; preds = %land.lhs.true
  store i8 1, i8* %need_orco, align 1, !dbg !14051
  br label %if.end19, !dbg !14052

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14053

for.inc:                                          ; preds = %if.end19
  %32 = load i32, i32* %a, align 4, !dbg !14054
  %inc = add nsw i32 %32, 1, !dbg !14054
  store i32 %inc, i32* %a, align 4, !dbg !14054
  br label %for.cond, !dbg !14055, !llvm.loop !14056

for.end:                                          ; preds = %for.cond
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14058
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 9, !dbg !14060
  %34 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !14060
  %tobool20 = icmp ne %struct.Object* %34, null, !dbg !14058
  br i1 %tobool20, label %land.lhs.true21, label %if.end27, !dbg !14061

land.lhs.true21:                                  ; preds = %for.end
  %35 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14062
  %parent22 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 9, !dbg !14063
  %36 = load %struct.Object*, %struct.Object** %parent22, align 8, !dbg !14063
  %type = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 3, !dbg !14064
  %37 = load i16, i16* %type, align 8, !dbg !14064
  %conv23 = sext i16 %37 to i32, !dbg !14062
  %cmp24 = icmp eq i32 %conv23, 22, !dbg !14065
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !14066

if.then26:                                        ; preds = %land.lhs.true21
  store i8 1, i8* %need_orco, align 1, !dbg !14067
  br label %if.end27, !dbg !14068

if.end27:                                         ; preds = %if.then26, %land.lhs.true21, %for.end
  %38 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14069
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %38, i32 0, i32 44, !dbg !14070
  %39 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !14070
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14071
  call void @BKE_displist_make_surf(%struct.Scene* %39, %struct.Object* %40, %struct.ListBase* %displist, %struct.DerivedMesh** %dm, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1), !dbg !14072
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14073
  %tobool28 = icmp ne %struct.DerivedMesh* %41, null, !dbg !14073
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !14075

if.then29:                                        ; preds = %if.end27
  %42 = load i8, i8* %need_orco, align 1, !dbg !14076
  %tobool30 = icmp ne i8 %42, 0, !dbg !14076
  br i1 %tobool30, label %if.then31, label %if.end41, !dbg !14079

if.then31:                                        ; preds = %if.then29
  %43 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14080
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14082
  %45 = bitcast %struct.Object* %44 to i8*, !dbg !14082
  %call32 = call float* @get_object_orco(%struct.Render* %43, i8* %45), !dbg !14083
  store float* %call32, float** %orco, align 8, !dbg !14084
  %46 = load float*, float** %orco, align 8, !dbg !14085
  %tobool33 = icmp ne float* %46, null, !dbg !14085
  br i1 %tobool33, label %if.end40, label %if.then34, !dbg !14087

if.then34:                                        ; preds = %if.then31
  %47 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14088
  %scene35 = getelementptr inbounds %struct.Render, %struct.Render* %47, i32 0, i32 44, !dbg !14090
  %48 = load %struct.Scene*, %struct.Scene** %scene35, align 8, !dbg !14090
  %49 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14091
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14092
  %call36 = call float* @BKE_displist_make_orco(%struct.Scene* %48, %struct.Object* %49, %struct.DerivedMesh* %50, i8 zeroext 1, i8 zeroext 1), !dbg !14093
  store float* %call36, float** %orco, align 8, !dbg !14094
  %51 = load float*, float** %orco, align 8, !dbg !14095
  %tobool37 = icmp ne float* %51, null, !dbg !14095
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !14097

if.then38:                                        ; preds = %if.then34
  %52 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14098
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14100
  %54 = bitcast %struct.Object* %53 to i8*, !dbg !14100
  %55 = load float*, float** %orco, align 8, !dbg !14101
  call void @set_object_orco(%struct.Render* %52, i8* %54, float* %55), !dbg !14102
  br label %if.end39, !dbg !14103

if.end39:                                         ; preds = %if.then38, %if.then34
  br label %if.end40, !dbg !14104

if.end40:                                         ; preds = %if.end39, %if.then31
  br label %if.end41, !dbg !14105

if.end41:                                         ; preds = %if.end40, %if.then29
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14106
  %57 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14107
  %58 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14108
  %59 = load i32, i32* %timeoffset.addr, align 4, !dbg !14109
  %60 = load float*, float** %orco, align 8, !dbg !14110
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14111
  call void @init_render_dm(%struct.DerivedMesh* %56, %struct.Render* %57, %struct.ObjectRen* %58, i32 %59, float* %60, [4 x float]* %arraydecay42), !dbg !14112
  %61 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14113
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %61, i32 0, i32 95, !dbg !14114
  %62 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !14114
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14115
  call void %62(%struct.DerivedMesh* %63), !dbg !14113
  br label %if.end66, !dbg !14116

if.else:                                          ; preds = %if.end27
  %64 = load i8, i8* %need_orco, align 1, !dbg !14117
  %tobool43 = icmp ne i8 %64, 0, !dbg !14117
  br i1 %tobool43, label %if.then44, label %if.end50, !dbg !14120

if.then44:                                        ; preds = %if.else
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14121
  %66 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14123
  %67 = bitcast %struct.Object* %66 to i8*, !dbg !14123
  %call45 = call float* @get_object_orco(%struct.Render* %65, i8* %67), !dbg !14124
  store float* %call45, float** %orco, align 8, !dbg !14125
  %68 = load float*, float** %orco, align 8, !dbg !14126
  %tobool46 = icmp ne float* %68, null, !dbg !14126
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !14128

if.then47:                                        ; preds = %if.then44
  %69 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14129
  %call48 = call float* @BKE_curve_surf_make_orco(%struct.Object* %69), !dbg !14131
  store float* %call48, float** %orco, align 8, !dbg !14132
  %70 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14133
  %71 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14134
  %72 = bitcast %struct.Object* %71 to i8*, !dbg !14134
  %73 = load float*, float** %orco, align 8, !dbg !14135
  call void @set_object_orco(%struct.Render* %70, i8* %72, float* %73), !dbg !14136
  br label %if.end49, !dbg !14137

if.end49:                                         ; preds = %if.then47, %if.then44
  br label %if.end50, !dbg !14138

if.end50:                                         ; preds = %if.end49, %if.else
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %displist, i32 0, i32 0, !dbg !14139
  %74 = load i8*, i8** %first51, align 8, !dbg !14139
  %75 = bitcast i8* %74 to %struct.DispList*, !dbg !14141
  store %struct.DispList* %75, %struct.DispList** %dl, align 8, !dbg !14142
  br label %for.cond52, !dbg !14143

for.cond52:                                       ; preds = %for.inc64, %if.end50
  %76 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !14144
  %tobool53 = icmp ne %struct.DispList* %76, null, !dbg !14146
  br i1 %tobool53, label %for.body54, label %for.end65, !dbg !14146

for.body54:                                       ; preds = %for.cond52
  %77 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !14147
  %type55 = getelementptr inbounds %struct.DispList, %struct.DispList* %77, i32 0, i32 2, !dbg !14150
  %78 = load i16, i16* %type55, align 8, !dbg !14150
  %conv56 = sext i16 %78 to i32, !dbg !14147
  %cmp57 = icmp eq i32 %conv56, 2, !dbg !14151
  br i1 %cmp57, label %if.then59, label %if.end63, !dbg !14152

if.then59:                                        ; preds = %for.body54
  %79 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14153
  %80 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !14154
  %81 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !14155
  %82 = load float*, float** %orco, align 8, !dbg !14156
  %arraydecay60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14157
  %call61 = call i32 @dl_surf_to_renderdata(%struct.ObjectRen* %79, %struct.DispList* %80, %struct.Material** %81, float* %82, [4 x float]* %arraydecay60), !dbg !14158
  %mul62 = mul nsw i32 3, %call61, !dbg !14159
  %83 = load float*, float** %orco, align 8, !dbg !14160
  %idx.ext = sext i32 %mul62 to i64, !dbg !14160
  %add.ptr = getelementptr inbounds float, float* %83, i64 %idx.ext, !dbg !14160
  store float* %add.ptr, float** %orco, align 8, !dbg !14160
  br label %if.end63, !dbg !14161

if.end63:                                         ; preds = %if.then59, %for.body54
  br label %for.inc64, !dbg !14162

for.inc64:                                        ; preds = %if.end63
  %84 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !14163
  %next = getelementptr inbounds %struct.DispList, %struct.DispList* %84, i32 0, i32 0, !dbg !14164
  %85 = load %struct.DispList*, %struct.DispList** %next, align 8, !dbg !14164
  store %struct.DispList* %85, %struct.DispList** %dl, align 8, !dbg !14165
  br label %for.cond52, !dbg !14166, !llvm.loop !14167

for.end65:                                        ; preds = %for.cond52
  br label %if.end66

if.end66:                                         ; preds = %for.end65, %if.end41
  call void @BKE_displist_free(%struct.ListBase* %displist), !dbg !14169
  %86 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14170
  %87 = load %struct.Material**, %struct.Material*** %matar, align 8, !dbg !14171
  %88 = bitcast %struct.Material** %87 to i8*, !dbg !14171
  call void %86(i8* %88), !dbg !14170
  br label %return, !dbg !14172

return:                                           ; preds = %if.end66, %if.then
  ret void, !dbg !14172
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_mesh(%struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset) #0 !dbg !14173 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %me = alloca %struct.Mesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %mask = alloca i64, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  %imat = alloca [3 x [3 x float]], align 16
  %mat = alloca [4 x [4 x float]], align 16
  %orco = alloca float*, align 8
  %loop_nors = alloca [4 x [3 x i16]]*, align 8
  %need_orco = alloca i8, align 1
  %need_stress = alloca i8, align 1
  %need_nmap_tangent = alloca i8, align 1
  %need_tangent = alloca i8, align 1
  %need_origindex = alloca i8, align 1
  %a = alloca i32, align 4
  %a1 = alloca i32, align 4
  %ok = alloca i32, align 4
  %vertofs = alloca i32, align 4
  %end = alloca i32, align 4
  %totvert = alloca i32, align 4
  %do_autosmooth = alloca i8, align 1
  %do_displace = alloca i8, align 1
  %use_original_normals = alloca i8, align 1
  %recalc_normals = alloca i32, align 4
  %negative_scale = alloca i32, align 4
  %index_vert_orig = alloca i32*, align 8
  %index_mf_to_mpoly = alloca i32*, align 8
  %index_mp_to_orig = alloca i32*, align 8
  %origindex = alloca i32*, align 8
  %lnp = alloca [4 x [3 x i16]]*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %v4 = alloca i32, align 4
  %flag291 = alloca i32, align 4
  %len = alloca float, align 4
  %reverse_verts = alloca i8, align 1
  %rev_tab = alloca [4 x i32], align 16
  %mf = alloca %struct.MFace*, align 8
  %mv = alloca %struct.MVert*, align 8
  %layer = alloca %struct.CustomDataLayer*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mtf = alloca %struct.MTFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mc = alloca %struct.MCol*, align 8
  %index = alloca i32, align 4
  %mtfn = alloca i32, align 4
  %mcn = alloca i32, align 4
  %mtng = alloca i32, align 4
  %mln = alloca i32, align 4
  %vindex = alloca i32, align 4
  %name = alloca i8*, align 8
  %nr_verts = alloca i32, align 4
  %t = alloca i32, align 4
  %tangent = alloca float*, align 8
  %ftang = alloca float*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %origindex606 = alloca i32*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %edgetable = alloca %struct.edgesort*, align 8
  %totedge = alloca i32, align 4
  %v0 = alloca %struct.MVert*, align 8
  %v1658 = alloca %struct.MVert*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !14174, metadata !DIExpression()), !dbg !14175
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !14176, metadata !DIExpression()), !dbg !14177
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !14178, metadata !DIExpression()), !dbg !14179
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !14180, metadata !DIExpression()), !dbg !14181
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14182
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !14183
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !14183
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !14181
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !14184, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !14188, metadata !DIExpression()), !dbg !14189
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !14189
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !14190, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !14194, metadata !DIExpression()), !dbg !14195
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !14196, metadata !DIExpression()), !dbg !14197
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !14198, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !14200, metadata !DIExpression()), !dbg !14201
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !14202, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.declare(metadata float* %xn, metadata !14206, metadata !DIExpression()), !dbg !14207
  call void @llvm.dbg.declare(metadata float* %yn, metadata !14208, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.declare(metadata float* %zn, metadata !14210, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat, metadata !14212, metadata !DIExpression()), !dbg !14213
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !14214, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.declare(metadata float** %orco, metadata !14216, metadata !DIExpression()), !dbg !14217
  store float* null, float** %orco, align 8, !dbg !14217
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %loop_nors, metadata !14218, metadata !DIExpression()), !dbg !14221
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !14221
  call void @llvm.dbg.declare(metadata i8* %need_orco, metadata !14222, metadata !DIExpression()), !dbg !14223
  store i8 0, i8* %need_orco, align 1, !dbg !14223
  call void @llvm.dbg.declare(metadata i8* %need_stress, metadata !14224, metadata !DIExpression()), !dbg !14225
  store i8 0, i8* %need_stress, align 1, !dbg !14225
  call void @llvm.dbg.declare(metadata i8* %need_nmap_tangent, metadata !14226, metadata !DIExpression()), !dbg !14227
  store i8 0, i8* %need_nmap_tangent, align 1, !dbg !14227
  call void @llvm.dbg.declare(metadata i8* %need_tangent, metadata !14228, metadata !DIExpression()), !dbg !14229
  store i8 0, i8* %need_tangent, align 1, !dbg !14229
  call void @llvm.dbg.declare(metadata i8* %need_origindex, metadata !14230, metadata !DIExpression()), !dbg !14231
  store i8 0, i8* %need_origindex, align 1, !dbg !14231
  call void @llvm.dbg.declare(metadata i32* %a, metadata !14232, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.declare(metadata i32* %a1, metadata !14234, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !14236, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.declare(metadata i32* %vertofs, metadata !14238, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.declare(metadata i32* %end, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !14242, metadata !DIExpression()), !dbg !14243
  store i32 0, i32* %totvert, align 4, !dbg !14243
  call void @llvm.dbg.declare(metadata i8* %do_autosmooth, metadata !14244, metadata !DIExpression()), !dbg !14245
  store i8 0, i8* %do_autosmooth, align 1, !dbg !14245
  call void @llvm.dbg.declare(metadata i8* %do_displace, metadata !14246, metadata !DIExpression()), !dbg !14247
  store i8 0, i8* %do_displace, align 1, !dbg !14247
  call void @llvm.dbg.declare(metadata i8* %use_original_normals, metadata !14248, metadata !DIExpression()), !dbg !14249
  store i8 0, i8* %use_original_normals, align 1, !dbg !14249
  call void @llvm.dbg.declare(metadata i32* %recalc_normals, metadata !14250, metadata !DIExpression()), !dbg !14251
  store i32 0, i32* %recalc_normals, align 4, !dbg !14251
  call void @llvm.dbg.declare(metadata i32* %negative_scale, metadata !14252, metadata !DIExpression()), !dbg !14253
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14254
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !14255
  %3 = load i8*, i8** %data, align 8, !dbg !14255
  %4 = bitcast i8* %3 to %struct.Mesh*, !dbg !14254
  store %struct.Mesh* %4, %struct.Mesh** %me, align 8, !dbg !14256
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14257
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14258
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 32, !dbg !14259
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !14258
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14260
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 47, !dbg !14261
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !14260
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !14262
  %7 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14263
  %imat4 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 50, !dbg !14264
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat4, i64 0, i64 0, !dbg !14263
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14265
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay5, [4 x float]* %arraydecay6), !dbg !14266
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !14267
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14268
  %imat8 = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 50, !dbg !14269
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat8, i64 0, i64 0, !dbg !14268
  call void @copy_m3_m4([3 x float]* %arraydecay7, [4 x float]* %arraydecay9), !dbg !14270
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14271
  %call11 = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay10), !dbg !14272
  %conv = zext i8 %call11 to i32, !dbg !14272
  store i32 %conv, i32* %negative_scale, align 4, !dbg !14273
  %9 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14274
  %totvert12 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %9, i32 0, i32 26, !dbg !14276
  %10 = load i32, i32* %totvert12, align 8, !dbg !14276
  %cmp = icmp eq i32 %10, 0, !dbg !14277
  br i1 %cmp, label %if.then, label %if.end, !dbg !14278

if.then:                                          ; preds = %entry
  br label %return, !dbg !14279

if.end:                                           ; preds = %entry
  store i8 0, i8* %need_orco, align 1, !dbg !14280
  store i32 1, i32* %a, align 4, !dbg !14281
  br label %for.cond, !dbg !14283

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %a, align 4, !dbg !14284
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14286
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 31, !dbg !14287
  %13 = load i32, i32* %totcol, align 8, !dbg !14287
  %cmp14 = icmp sle i32 %11, %13, !dbg !14288
  br i1 %cmp14, label %for.body, label %for.end, !dbg !14289

for.body:                                         ; preds = %for.cond
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14290
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14292
  %16 = load i32, i32* %a, align 4, !dbg !14293
  %conv16 = trunc i32 %16 to i16, !dbg !14293
  %call17 = call %struct.Material* @give_render_material(%struct.Render* %14, %struct.Object* %15, i16 signext %conv16), !dbg !14294
  store %struct.Material* %call17, %struct.Material** %ma, align 8, !dbg !14295
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14296
  %tobool = icmp ne %struct.Material* %17, null, !dbg !14296
  br i1 %tobool, label %if.then18, label %if.end47, !dbg !14298

if.then18:                                        ; preds = %for.body
  %18 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14299
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %18, i32 0, i32 90, !dbg !14302
  %19 = load i16, i16* %texco, align 4, !dbg !14302
  %conv19 = sext i16 %19 to i32, !dbg !14299
  %and = and i32 %conv19, 16385, !dbg !14303
  %tobool20 = icmp ne i32 %and, 0, !dbg !14303
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !14304

if.then21:                                        ; preds = %if.then18
  store i8 1, i8* %need_orco, align 1, !dbg !14305
  br label %if.end22, !dbg !14306

if.end22:                                         ; preds = %if.then21, %if.then18
  %20 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14307
  %texco23 = getelementptr inbounds %struct.Material, %struct.Material* %20, i32 0, i32 90, !dbg !14309
  %21 = load i16, i16* %texco23, align 4, !dbg !14309
  %conv24 = sext i16 %21 to i32, !dbg !14307
  %and25 = and i32 %conv24, 16384, !dbg !14310
  %tobool26 = icmp ne i32 %and25, 0, !dbg !14310
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !14311

if.then27:                                        ; preds = %if.end22
  store i8 1, i8* %need_stress, align 1, !dbg !14312
  br label %if.end28, !dbg !14313

if.end28:                                         ; preds = %if.then27, %if.end22
  %22 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14314
  %mode_l = getelementptr inbounds %struct.Material, %struct.Material* %22, i32 0, i32 52, !dbg !14316
  %23 = load i32, i32* %mode_l, align 8, !dbg !14316
  %and29 = and i32 %23, 67108864, !dbg !14317
  %tobool30 = icmp ne i32 %and29, 0, !dbg !14317
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !14318

if.then31:                                        ; preds = %if.end28
  store i8 1, i8* %need_tangent, align 1, !dbg !14319
  %24 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14321
  %mtpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %24, i32 0, i32 8, !dbg !14323
  %25 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly, align 8, !dbg !14323
  %cmp32 = icmp eq %struct.MTexPoly* %25, null, !dbg !14324
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !14325

if.then34:                                        ; preds = %if.then31
  store i8 1, i8* %need_orco, align 1, !dbg !14326
  br label %if.end35, !dbg !14327

if.end35:                                         ; preds = %if.then34, %if.then31
  br label %if.end36, !dbg !14328

if.end36:                                         ; preds = %if.end35, %if.end28
  %26 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14329
  %mode_l37 = getelementptr inbounds %struct.Material, %struct.Material* %26, i32 0, i32 52, !dbg !14331
  %27 = load i32, i32* %mode_l37, align 8, !dbg !14331
  %and38 = and i32 %27, 134217728, !dbg !14332
  %tobool39 = icmp ne i32 %and38, 0, !dbg !14332
  br i1 %tobool39, label %if.then40, label %if.end46, !dbg !14333

if.then40:                                        ; preds = %if.end36
  %28 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14334
  %mtpoly41 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %28, i32 0, i32 8, !dbg !14337
  %29 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly41, align 8, !dbg !14337
  %cmp42 = icmp eq %struct.MTexPoly* %29, null, !dbg !14338
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !14339

if.then44:                                        ; preds = %if.then40
  store i8 1, i8* %need_orco, align 1, !dbg !14340
  store i8 1, i8* %need_tangent, align 1, !dbg !14342
  br label %if.end45, !dbg !14343

if.end45:                                         ; preds = %if.then44, %if.then40
  store i8 1, i8* %need_nmap_tangent, align 1, !dbg !14344
  br label %if.end46, !dbg !14345

if.end46:                                         ; preds = %if.end45, %if.end36
  br label %if.end47, !dbg !14346

if.end47:                                         ; preds = %if.end46, %for.body
  br label %for.inc, !dbg !14347

for.inc:                                          ; preds = %if.end47
  %30 = load i32, i32* %a, align 4, !dbg !14348
  %inc = add nsw i32 %30, 1, !dbg !14348
  store i32 %inc, i32* %a, align 4, !dbg !14348
  br label %for.cond, !dbg !14349, !llvm.loop !14350

for.end:                                          ; preds = %for.cond
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14352
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 4, !dbg !14354
  %32 = load i16, i16* %flag, align 8, !dbg !14354
  %conv48 = sext i16 %32 to i32, !dbg !14352
  %and49 = and i32 %conv48, 16, !dbg !14355
  %tobool50 = icmp ne i32 %and49, 0, !dbg !14355
  br i1 %tobool50, label %if.then51, label %if.end57, !dbg !14356

if.then51:                                        ; preds = %for.end
  %33 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14357
  %mtpoly52 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %33, i32 0, i32 8, !dbg !14360
  %34 = load %struct.MTexPoly*, %struct.MTexPoly** %mtpoly52, align 8, !dbg !14360
  %cmp53 = icmp eq %struct.MTexPoly* %34, null, !dbg !14361
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !14362

if.then55:                                        ; preds = %if.then51
  store i8 1, i8* %need_orco, align 1, !dbg !14363
  store i8 1, i8* %need_tangent, align 1, !dbg !14365
  br label %if.end56, !dbg !14366

if.end56:                                         ; preds = %if.then55, %if.then51
  store i8 1, i8* %need_nmap_tangent, align 1, !dbg !14367
  br label %if.end57, !dbg !14368

if.end57:                                         ; preds = %if.end56, %for.end
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14369
  %36 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14370
  %call58 = call signext i16 @test_for_displace(%struct.Render* %35, %struct.Object* %36), !dbg !14371
  %conv59 = trunc i16 %call58 to i8, !dbg !14371
  store i8 %conv59, i8* %do_displace, align 1, !dbg !14372
  %37 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14373
  %flag60 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %37, i32 0, i32 38, !dbg !14374
  %38 = load i16, i16* %flag60, align 2, !dbg !14374
  %conv61 = sext i16 %38 to i32, !dbg !14373
  %and62 = and i32 %conv61, 32, !dbg !14375
  %cmp63 = icmp ne i32 %and62, 0, !dbg !14376
  br i1 %cmp63, label %land.rhs, label %land.end, !dbg !14377

land.rhs:                                         ; preds = %if.end57
  %39 = load i8, i8* %do_displace, align 1, !dbg !14378
  %tobool65 = icmp ne i8 %39, 0, !dbg !14379
  %lnot = xor i1 %tobool65, true, !dbg !14379
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end57
  %40 = phi i1 [ false, %if.end57 ], [ %lnot, %land.rhs ], !dbg !14380
  %land.ext = zext i1 %40 to i32, !dbg !14377
  %conv66 = trunc i32 %land.ext to i8, !dbg !14381
  store i8 %conv66, i8* %do_autosmooth, align 1, !dbg !14382
  %41 = load i8, i8* %do_autosmooth, align 1, !dbg !14383
  %conv67 = zext i8 %41 to i32, !dbg !14383
  %tobool68 = icmp ne i32 %conv67, 0, !dbg !14383
  br i1 %tobool68, label %if.then71, label %lor.lhs.false, !dbg !14385

lor.lhs.false:                                    ; preds = %land.end
  %42 = load i8, i8* %do_displace, align 1, !dbg !14386
  %conv69 = zext i8 %42 to i32, !dbg !14386
  %tobool70 = icmp ne i32 %conv69, 0, !dbg !14386
  br i1 %tobool70, label %if.then71, label %if.end72, !dbg !14387

if.then71:                                        ; preds = %lor.lhs.false, %land.end
  store i32 0, i32* %timeoffset.addr, align 4, !dbg !14388
  br label %if.end72, !dbg !14389

if.end72:                                         ; preds = %if.then71, %lor.lhs.false
  %43 = load i8, i8* %do_autosmooth, align 1, !dbg !14390
  %conv73 = zext i8 %43 to i32, !dbg !14390
  %tobool74 = icmp ne i32 %conv73, 0, !dbg !14390
  br i1 %tobool74, label %lor.end, label %lor.rhs, !dbg !14391

lor.rhs:                                          ; preds = %if.end72
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14392
  %flag75 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 4, !dbg !14393
  %45 = load i16, i16* %flag75, align 8, !dbg !14393
  %conv76 = sext i16 %45 to i32, !dbg !14392
  %and77 = and i32 %conv76, 64, !dbg !14394
  %tobool78 = icmp ne i32 %and77, 0, !dbg !14394
  br i1 %tobool78, label %land.rhs79, label %land.end83, !dbg !14395

land.rhs79:                                       ; preds = %lor.rhs
  %46 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14396
  %r = getelementptr inbounds %struct.Render, %struct.Render* %46, i32 0, i32 45, !dbg !14397
  %bake_flag = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 75, !dbg !14398
  %47 = load i16, i16* %bake_flag, align 2, !dbg !14398
  %conv80 = sext i16 %47 to i32, !dbg !14396
  %and81 = and i32 %conv80, 64, !dbg !14399
  %tobool82 = icmp ne i32 %and81, 0, !dbg !14395
  br label %land.end83

land.end83:                                       ; preds = %land.rhs79, %lor.rhs
  %48 = phi i1 [ false, %lor.rhs ], [ %tobool82, %land.rhs79 ], !dbg !14380
  br label %lor.end, !dbg !14391

lor.end:                                          ; preds = %land.end83, %if.end72
  %49 = phi i1 [ true, %if.end72 ], [ %48, %land.end83 ]
  %lor.ext = zext i1 %49 to i32, !dbg !14391
  %conv85 = trunc i32 %lor.ext to i8, !dbg !14400
  store i8 %conv85, i8* %need_origindex, align 1, !dbg !14401
  %50 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !14402
  %or = or i64 %50, 32, !dbg !14403
  %or86 = or i64 %or, 64, !dbg !14404
  store i64 %or86, i64* %mask, align 8, !dbg !14405
  %51 = load i32, i32* %timeoffset.addr, align 4, !dbg !14406
  %tobool87 = icmp ne i32 %51, 0, !dbg !14406
  br i1 %tobool87, label %if.end93, label %if.then88, !dbg !14408

if.then88:                                        ; preds = %lor.end
  %52 = load i8, i8* %need_orco, align 1, !dbg !14409
  %tobool89 = icmp ne i8 %52, 0, !dbg !14409
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !14411

if.then90:                                        ; preds = %if.then88
  %53 = load i64, i64* %mask, align 8, !dbg !14412
  %or91 = or i64 %53, 16384, !dbg !14412
  store i64 %or91, i64* %mask, align 8, !dbg !14412
  br label %if.end92, !dbg !14413

if.end92:                                         ; preds = %if.then90, %if.then88
  br label %if.end93, !dbg !14409

if.end93:                                         ; preds = %if.end92, %lor.end
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14414
  %r94 = getelementptr inbounds %struct.Render, %struct.Render* %54, i32 0, i32 45, !dbg !14416
  %scemode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r94, i32 0, i32 46, !dbg !14417
  %55 = load i32, i32* %scemode, align 4, !dbg !14417
  %and95 = and i32 %55, 524288, !dbg !14418
  %tobool96 = icmp ne i32 %and95, 0, !dbg !14418
  br i1 %tobool96, label %if.then97, label %if.else, !dbg !14419

if.then97:                                        ; preds = %if.end93
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14420
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 44, !dbg !14421
  %57 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !14421
  %58 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14422
  %59 = load i64, i64* %mask, align 8, !dbg !14423
  %call98 = call %struct.DerivedMesh* @mesh_create_derived_view(%struct.Scene* %57, %struct.Object* %58, i64 %59), !dbg !14424
  store %struct.DerivedMesh* %call98, %struct.DerivedMesh** %dm, align 8, !dbg !14425
  br label %if.end101, !dbg !14426

if.else:                                          ; preds = %if.end93
  %60 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14427
  %scene99 = getelementptr inbounds %struct.Render, %struct.Render* %60, i32 0, i32 44, !dbg !14428
  %61 = load %struct.Scene*, %struct.Scene** %scene99, align 8, !dbg !14428
  %62 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14429
  %63 = load i64, i64* %mask, align 8, !dbg !14430
  %call100 = call %struct.DerivedMesh* @mesh_create_derived_render(%struct.Scene* %61, %struct.Object* %62, i64 %63), !dbg !14431
  store %struct.DerivedMesh* %call100, %struct.DerivedMesh** %dm, align 8, !dbg !14432
  br label %if.end101

if.end101:                                        ; preds = %if.else, %if.then97
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14433
  %cmp102 = icmp eq %struct.DerivedMesh* %64, null, !dbg !14435
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !14436

if.then104:                                       ; preds = %if.end101
  br label %return, !dbg !14437

if.end105:                                        ; preds = %if.end101
  %65 = load i64, i64* %mask, align 8, !dbg !14438
  %and106 = and i64 %65, 16384, !dbg !14440
  %tobool107 = icmp ne i64 %and106, 0, !dbg !14440
  br i1 %tobool107, label %if.then108, label %if.end118, !dbg !14441

if.then108:                                       ; preds = %if.end105
  %66 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14442
  %67 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14444
  %68 = bitcast %struct.Object* %67 to i8*, !dbg !14444
  %call109 = call float* @get_object_orco(%struct.Render* %66, i8* %68), !dbg !14445
  store float* %call109, float** %orco, align 8, !dbg !14446
  %69 = load float*, float** %orco, align 8, !dbg !14447
  %tobool110 = icmp ne float* %69, null, !dbg !14447
  br i1 %tobool110, label %if.end117, label %if.then111, !dbg !14449

if.then111:                                       ; preds = %if.then108
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14450
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %70, i32 0, i32 50, !dbg !14452
  %71 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !14452
  %72 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14453
  %call112 = call i8* %71(%struct.DerivedMesh* %72, i32 14), !dbg !14450
  %73 = bitcast i8* %call112 to float*, !dbg !14450
  store float* %73, float** %orco, align 8, !dbg !14454
  %74 = load float*, float** %orco, align 8, !dbg !14455
  %tobool113 = icmp ne float* %74, null, !dbg !14455
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !14457

if.then114:                                       ; preds = %if.then111
  %75 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !14458
  %76 = load float*, float** %orco, align 8, !dbg !14460
  %77 = bitcast float* %76 to i8*, !dbg !14460
  %call115 = call i8* %75(i8* %77), !dbg !14458
  %78 = bitcast i8* %call115 to float*, !dbg !14458
  store float* %78, float** %orco, align 8, !dbg !14461
  %79 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14462
  %80 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14463
  %81 = bitcast %struct.Object* %80 to i8*, !dbg !14463
  %82 = load float*, float** %orco, align 8, !dbg !14464
  call void @set_object_orco(%struct.Render* %79, i8* %81, float* %82), !dbg !14465
  br label %if.end116, !dbg !14466

if.end116:                                        ; preds = %if.then114, %if.then111
  br label %if.end117, !dbg !14467

if.end117:                                        ; preds = %if.end116, %if.then108
  br label %if.end118, !dbg !14468

if.end118:                                        ; preds = %if.end117, %if.end105
  %83 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14469
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %83, i32 0, i32 31, !dbg !14470
  %84 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !14470
  %85 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14471
  %call119 = call %struct.MVert* %84(%struct.DerivedMesh* %85), !dbg !14469
  store %struct.MVert* %call119, %struct.MVert** %mvert, align 8, !dbg !14472
  %86 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14473
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %86, i32 0, i32 23, !dbg !14474
  %87 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !14474
  %88 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14475
  %call120 = call i32 %87(%struct.DerivedMesh* %88), !dbg !14473
  store i32 %call120, i32* %totvert, align 4, !dbg !14476
  %89 = load i8, i8* %do_autosmooth, align 1, !dbg !14477
  %conv121 = zext i8 %89 to i32, !dbg !14477
  %tobool122 = icmp ne i32 %conv121, 0, !dbg !14477
  br i1 %tobool122, label %land.lhs.true, label %if.end131, !dbg !14479

land.lhs.true:                                    ; preds = %if.end118
  %90 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14480
  %totvert123 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %90, i32 0, i32 26, !dbg !14481
  %91 = load i32, i32* %totvert123, align 8, !dbg !14481
  %92 = load i32, i32* %totvert, align 4, !dbg !14482
  %cmp124 = icmp eq i32 %91, %92, !dbg !14483
  br i1 %cmp124, label %land.lhs.true126, label %if.end131, !dbg !14484

land.lhs.true126:                                 ; preds = %land.lhs.true
  %93 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14485
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %93, i32 0, i32 28, !dbg !14486
  %94 = load i32, i32* %totface, align 8, !dbg !14486
  %95 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14487
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %95, i32 0, i32 25, !dbg !14488
  %96 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !14488
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14489
  %call127 = call i32 %96(%struct.DerivedMesh* %97), !dbg !14487
  %cmp128 = icmp eq i32 %94, %call127, !dbg !14490
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !14491

if.then130:                                       ; preds = %land.lhs.true126
  store i8 1, i8* %use_original_normals, align 1, !dbg !14492
  br label %if.end131, !dbg !14493

if.end131:                                        ; preds = %if.then130, %land.lhs.true126, %land.lhs.true, %if.end118
  %98 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14494
  %99 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14495
  %call132 = call %struct.Material* @give_render_material(%struct.Render* %98, %struct.Object* %99, i16 signext 1), !dbg !14496
  store %struct.Material* %call132, %struct.Material** %ma, align 8, !dbg !14497
  %100 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14498
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %100, i32 0, i32 2, !dbg !14500
  %101 = load i16, i16* %material_type, align 8, !dbg !14500
  %conv133 = sext i16 %101 to i32, !dbg !14498
  %cmp134 = icmp eq i32 %conv133, 1, !dbg !14501
  br i1 %cmp134, label %if.then136, label %if.else137, !dbg !14502

if.then136:                                       ; preds = %if.end131
  %102 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14503
  %103 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14505
  %104 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14506
  %105 = load i32, i32* %totvert, align 4, !dbg !14507
  %106 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14508
  %107 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14509
  %108 = load float*, float** %orco, align 8, !dbg !14510
  call void @make_render_halos(%struct.Render* %102, %struct.ObjectRen* %103, %struct.Mesh* %104, i32 %105, %struct.MVert* %106, %struct.Material* %107, float* %108), !dbg !14511
  br label %if.end761, !dbg !14512

if.else137:                                       ; preds = %if.end131
  call void @llvm.dbg.declare(metadata i32** %index_vert_orig, metadata !14513, metadata !DIExpression()), !dbg !14515
  store i32* null, i32** %index_vert_orig, align 8, !dbg !14515
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly, metadata !14516, metadata !DIExpression()), !dbg !14517
  store i32* null, i32** %index_mf_to_mpoly, align 8, !dbg !14517
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig, metadata !14518, metadata !DIExpression()), !dbg !14519
  store i32* null, i32** %index_mp_to_orig, align 8, !dbg !14519
  %109 = load i8, i8* %need_origindex, align 1, !dbg !14520
  %tobool138 = icmp ne i8 %109, 0, !dbg !14520
  br i1 %tobool138, label %if.then139, label %if.end142, !dbg !14522

if.then139:                                       ; preds = %if.else137
  %110 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14523
  %getVertDataArray140 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %110, i32 0, i32 50, !dbg !14525
  %111 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray140, align 8, !dbg !14525
  %112 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14526
  %call141 = call i8* %111(%struct.DerivedMesh* %112, i32 7), !dbg !14523
  %113 = bitcast i8* %call141 to i32*, !dbg !14523
  store i32* %113, i32** %index_vert_orig, align 8, !dbg !14527
  br label %if.end142, !dbg !14528

if.end142:                                        ; preds = %if.then139, %if.else137
  store i32 0, i32* %a, align 4, !dbg !14529
  br label %for.cond143, !dbg !14531

for.cond143:                                      ; preds = %for.inc183, %if.end142
  %114 = load i32, i32* %a, align 4, !dbg !14532
  %115 = load i32, i32* %totvert, align 4, !dbg !14534
  %cmp144 = icmp slt i32 %114, %115, !dbg !14535
  br i1 %cmp144, label %for.body146, label %for.end185, !dbg !14536

for.body146:                                      ; preds = %for.cond143
  %116 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14537
  %117 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14539
  %totvert147 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %117, i32 0, i32 10, !dbg !14540
  %118 = load i32, i32* %totvert147, align 8, !dbg !14541
  %inc148 = add nsw i32 %118, 1, !dbg !14541
  store i32 %inc148, i32* %totvert147, align 8, !dbg !14541
  %call149 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %116, i32 %118), !dbg !14542
  store %struct.VertRen* %call149, %struct.VertRen** %ver, align 8, !dbg !14543
  %119 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14544
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %119, i32 0, i32 0, !dbg !14545
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14544
  %120 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14546
  %co151 = getelementptr inbounds %struct.MVert, %struct.MVert* %120, i32 0, i32 0, !dbg !14547
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %co151, i64 0, i64 0, !dbg !14546
  call void @copy_v3_v3(float* %arraydecay150, float* %arraydecay152), !dbg !14548
  %121 = load i8, i8* %do_autosmooth, align 1, !dbg !14549
  %conv153 = zext i8 %121 to i32, !dbg !14549
  %cmp154 = icmp eq i32 %conv153, 0, !dbg !14551
  br i1 %cmp154, label %if.then156, label %if.end170, !dbg !14552

if.then156:                                       ; preds = %for.body146
  %122 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14553
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %122, i32 0, i32 1, !dbg !14555
  %arraydecay157 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !14553
  %123 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14556
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %123, i32 0, i32 1, !dbg !14557
  %arraydecay158 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !14556
  call void @normal_short_to_float_v3(float* %arraydecay157, i16* %arraydecay158), !dbg !14558
  %arraydecay159 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !14559
  %124 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14560
  %co160 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %124, i32 0, i32 0, !dbg !14561
  %arraydecay161 = getelementptr inbounds [3 x float], [3 x float]* %co160, i64 0, i64 0, !dbg !14560
  call void @mul_m4_v3([4 x float]* %arraydecay159, float* %arraydecay161), !dbg !14562
  %arraydecay162 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !14563
  %125 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14564
  %n163 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %125, i32 0, i32 1, !dbg !14565
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %n163, i64 0, i64 0, !dbg !14564
  call void @mul_transposed_m3_v3([3 x float]* %arraydecay162, float* %arraydecay164), !dbg !14566
  %126 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14567
  %n165 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %126, i32 0, i32 1, !dbg !14568
  %arraydecay166 = getelementptr inbounds [3 x float], [3 x float]* %n165, i64 0, i64 0, !dbg !14567
  %call167 = call float @normalize_v3(float* %arraydecay166), !dbg !14569
  %127 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14570
  %n168 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %127, i32 0, i32 1, !dbg !14571
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %n168, i64 0, i64 0, !dbg !14570
  call void @negate_v3(float* %arraydecay169), !dbg !14572
  br label %if.end170, !dbg !14573

if.end170:                                        ; preds = %if.then156, %for.body146
  %128 = load float*, float** %orco, align 8, !dbg !14574
  %tobool171 = icmp ne float* %128, null, !dbg !14574
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !14576

if.then172:                                       ; preds = %if.end170
  %129 = load float*, float** %orco, align 8, !dbg !14577
  %130 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14579
  %orco173 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %130, i32 0, i32 2, !dbg !14580
  store float* %129, float** %orco173, align 8, !dbg !14581
  %131 = load float*, float** %orco, align 8, !dbg !14582
  %add.ptr = getelementptr inbounds float, float* %131, i64 3, !dbg !14582
  store float* %add.ptr, float** %orco, align 8, !dbg !14582
  br label %if.end174, !dbg !14583

if.end174:                                        ; preds = %if.then172, %if.end170
  %132 = load i8, i8* %need_origindex, align 1, !dbg !14584
  %tobool175 = icmp ne i8 %132, 0, !dbg !14584
  br i1 %tobool175, label %if.then176, label %if.end182, !dbg !14586

if.then176:                                       ; preds = %if.end174
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !14587, metadata !DIExpression()), !dbg !14589
  %133 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14590
  %134 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !14591
  %call177 = call i32* @RE_vertren_get_origindex(%struct.ObjectRen* %133, %struct.VertRen* %134, i32 1), !dbg !14592
  store i32* %call177, i32** %origindex, align 8, !dbg !14593
  %135 = load i32*, i32** %index_vert_orig, align 8, !dbg !14594
  %tobool178 = icmp ne i32* %135, null, !dbg !14594
  br i1 %tobool178, label %if.then179, label %if.else180, !dbg !14596

if.then179:                                       ; preds = %if.then176
  %136 = load i32*, i32** %index_vert_orig, align 8, !dbg !14597
  %137 = load i32, i32* %a, align 4, !dbg !14598
  %idxprom = sext i32 %137 to i64, !dbg !14597
  %arrayidx = getelementptr inbounds i32, i32* %136, i64 %idxprom, !dbg !14597
  %138 = load i32, i32* %arrayidx, align 4, !dbg !14597
  %139 = load i32*, i32** %origindex, align 8, !dbg !14599
  store i32 %138, i32* %139, align 4, !dbg !14600
  br label %if.end181, !dbg !14601

if.else180:                                       ; preds = %if.then176
  %140 = load i32, i32* %a, align 4, !dbg !14602
  %141 = load i32*, i32** %origindex, align 8, !dbg !14603
  store i32 %140, i32* %141, align 4, !dbg !14604
  br label %if.end181

if.end181:                                        ; preds = %if.else180, %if.then179
  br label %if.end182, !dbg !14605

if.end182:                                        ; preds = %if.end181, %if.end174
  br label %for.inc183, !dbg !14606

for.inc183:                                       ; preds = %if.end182
  %142 = load i32, i32* %a, align 4, !dbg !14607
  %inc184 = add nsw i32 %142, 1, !dbg !14607
  store i32 %inc184, i32* %a, align 4, !dbg !14607
  %143 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14608
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %143, i32 1, !dbg !14608
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !14608
  br label %for.cond143, !dbg !14609, !llvm.loop !14610

for.end185:                                       ; preds = %for.cond143
  %144 = load i32, i32* %timeoffset.addr, align 4, !dbg !14612
  %tobool186 = icmp ne i32 %144, 0, !dbg !14612
  br i1 %tobool186, label %if.end760, label %if.then187, !dbg !14614

if.then187:                                       ; preds = %for.end185
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnp, metadata !14615, metadata !DIExpression()), !dbg !14617
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %lnp, align 8, !dbg !14617
  %145 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14618
  %146 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14619
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %146, i32 0, i32 2, !dbg !14620
  call void @RE_set_customdata_names(%struct.ObjectRen* %145, %struct.CustomData* %faceData), !dbg !14621
  %147 = load i8, i8* %need_nmap_tangent, align 1, !dbg !14622
  %conv188 = zext i8 %147 to i32, !dbg !14622
  %cmp189 = icmp ne i32 %conv188, 0, !dbg !14624
  br i1 %cmp189, label %land.lhs.true191, label %if.end197, !dbg !14625

land.lhs.true191:                                 ; preds = %if.then187
  %148 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14626
  %faceData192 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %148, i32 0, i32 2, !dbg !14627
  %call193 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData192, i32 18), !dbg !14628
  %cmp194 = icmp eq i32 %call193, -1, !dbg !14629
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !14630

if.then196:                                       ; preds = %land.lhs.true191
  %149 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14631
  call void @DM_add_tangent_layer(%struct.DerivedMesh* %149), !dbg !14632
  br label %if.end197, !dbg !14632

if.end197:                                        ; preds = %if.then196, %land.lhs.true191, %if.then187
  %150 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14633
  %totvert198 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %150, i32 0, i32 10, !dbg !14634
  %151 = load i32, i32* %totvert198, align 8, !dbg !14634
  %152 = load i32, i32* %totvert, align 4, !dbg !14635
  %sub = sub nsw i32 %151, %152, !dbg !14636
  store i32 %sub, i32* %vertofs, align 4, !dbg !14637
  store i32 0, i32* %a1, align 4, !dbg !14638
  br label %for.cond199, !dbg !14640

for.cond199:                                      ; preds = %for.inc629, %if.end197
  %153 = load i32, i32* %a1, align 4, !dbg !14641
  %154 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14643
  %totcol200 = getelementptr inbounds %struct.Object, %struct.Object* %154, i32 0, i32 31, !dbg !14644
  %155 = load i32, i32* %totcol200, align 8, !dbg !14644
  %cmp201 = icmp slt i32 %153, %155, !dbg !14645
  br i1 %cmp201, label %lor.end212, label %lor.rhs203, !dbg !14646

lor.rhs203:                                       ; preds = %for.cond199
  %156 = load i32, i32* %a1, align 4, !dbg !14647
  %cmp204 = icmp eq i32 %156, 0, !dbg !14648
  br i1 %cmp204, label %land.rhs206, label %land.end210, !dbg !14649

land.rhs206:                                      ; preds = %lor.rhs203
  %157 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14650
  %totcol207 = getelementptr inbounds %struct.Object, %struct.Object* %157, i32 0, i32 31, !dbg !14651
  %158 = load i32, i32* %totcol207, align 8, !dbg !14651
  %cmp208 = icmp eq i32 %158, 0, !dbg !14652
  br label %land.end210

land.end210:                                      ; preds = %land.rhs206, %lor.rhs203
  %159 = phi i1 [ false, %lor.rhs203 ], [ %cmp208, %land.rhs206 ], !dbg !14653
  br label %lor.end212, !dbg !14646

lor.end212:                                       ; preds = %land.end210, %for.cond199
  %160 = phi i1 [ true, %for.cond199 ], [ %159, %land.end210 ]
  br i1 %160, label %for.body214, label %for.end631, !dbg !14654

for.body214:                                      ; preds = %lor.end212
  %161 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !14655
  %162 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !14657
  %163 = load i32, i32* %a1, align 4, !dbg !14658
  %add = add nsw i32 %163, 1, !dbg !14659
  %conv215 = trunc i32 %add to i16, !dbg !14658
  %call216 = call %struct.Material* @give_render_material(%struct.Render* %161, %struct.Object* %162, i16 signext %conv215), !dbg !14660
  store %struct.Material* %call216, %struct.Material** %ma, align 8, !dbg !14661
  store i32 1, i32* %ok, align 4, !dbg !14662
  %164 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14663
  %alpha = getelementptr inbounds %struct.Material, %struct.Material* %164, i32 0, i32 21, !dbg !14665
  %165 = load float, float* %alpha, align 8, !dbg !14665
  %cmp217 = fcmp oeq float %165, 0.000000e+00, !dbg !14666
  br i1 %cmp217, label %land.lhs.true219, label %if.end259, !dbg !14667

land.lhs.true219:                                 ; preds = %for.body214
  %166 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14668
  %spectra = getelementptr inbounds %struct.Material, %struct.Material* %166, i32 0, i32 19, !dbg !14669
  %167 = load float, float* %spectra, align 8, !dbg !14669
  %cmp220 = fcmp oeq float %167, 0.000000e+00, !dbg !14670
  br i1 %cmp220, label %land.lhs.true222, label %if.end259, !dbg !14671

land.lhs.true222:                                 ; preds = %land.lhs.true219
  %168 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14672
  %filter = getelementptr inbounds %struct.Material, %struct.Material* %168, i32 0, i32 33, !dbg !14673
  %169 = load float, float* %filter, align 8, !dbg !14673
  %cmp223 = fcmp oeq float %169, 0.000000e+00, !dbg !14674
  br i1 %cmp223, label %land.lhs.true225, label %if.end259, !dbg !14675

land.lhs.true225:                                 ; preds = %land.lhs.true222
  %170 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14676
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %170, i32 0, i32 51, !dbg !14677
  %171 = load i32, i32* %mode, align 4, !dbg !14677
  %and226 = and i32 %171, 65536, !dbg !14678
  %tobool227 = icmp ne i32 %and226, 0, !dbg !14678
  br i1 %tobool227, label %land.lhs.true228, label %if.end259, !dbg !14679

land.lhs.true228:                                 ; preds = %land.lhs.true225
  %172 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14680
  %mode229 = getelementptr inbounds %struct.Material, %struct.Material* %172, i32 0, i32 51, !dbg !14681
  %173 = load i32, i32* %mode229, align 4, !dbg !14681
  %and230 = and i32 %173, 393216, !dbg !14682
  %cmp231 = icmp eq i32 %and230, 0, !dbg !14683
  br i1 %cmp231, label %if.then233, label %if.end259, !dbg !14684

if.then233:                                       ; preds = %land.lhs.true228
  store i32 0, i32* %ok, align 4, !dbg !14685
  store i32 0, i32* %a, align 4, !dbg !14687
  br label %for.cond234, !dbg !14689

for.cond234:                                      ; preds = %for.inc256, %if.then233
  %174 = load i32, i32* %a, align 4, !dbg !14690
  %cmp235 = icmp slt i32 %174, 18, !dbg !14692
  br i1 %cmp235, label %for.body237, label %for.end258, !dbg !14693

for.body237:                                      ; preds = %for.cond234
  %175 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14694
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %175, i32 0, i32 102, !dbg !14697
  %176 = load i32, i32* %a, align 4, !dbg !14698
  %idxprom238 = sext i32 %176 to i64, !dbg !14694
  %arrayidx239 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom238, !dbg !14694
  %177 = load %struct.MTex*, %struct.MTex** %arrayidx239, align 8, !dbg !14694
  %tobool240 = icmp ne %struct.MTex* %177, null, !dbg !14694
  br i1 %tobool240, label %land.lhs.true241, label %if.end255, !dbg !14699

land.lhs.true241:                                 ; preds = %for.body237
  %178 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14700
  %mtex242 = getelementptr inbounds %struct.Material, %struct.Material* %178, i32 0, i32 102, !dbg !14701
  %179 = load i32, i32* %a, align 4, !dbg !14702
  %idxprom243 = sext i32 %179 to i64, !dbg !14700
  %arrayidx244 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex242, i64 0, i64 %idxprom243, !dbg !14700
  %180 = load %struct.MTex*, %struct.MTex** %arrayidx244, align 8, !dbg !14700
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %180, i32 0, i32 5, !dbg !14703
  %181 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !14703
  %tobool245 = icmp ne %struct.Tex* %181, null, !dbg !14700
  br i1 %tobool245, label %if.then246, label %if.end255, !dbg !14704

if.then246:                                       ; preds = %land.lhs.true241
  %182 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14705
  %mtex247 = getelementptr inbounds %struct.Material, %struct.Material* %182, i32 0, i32 102, !dbg !14708
  %183 = load i32, i32* %a, align 4, !dbg !14709
  %idxprom248 = sext i32 %183 to i64, !dbg !14705
  %arrayidx249 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex247, i64 0, i64 %idxprom248, !dbg !14705
  %184 = load %struct.MTex*, %struct.MTex** %arrayidx249, align 8, !dbg !14705
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %184, i32 0, i32 1, !dbg !14710
  %185 = load i16, i16* %mapto, align 2, !dbg !14710
  %conv250 = sext i16 %185 to i32, !dbg !14705
  %and251 = and i32 %conv250, 128, !dbg !14711
  %tobool252 = icmp ne i32 %and251, 0, !dbg !14711
  br i1 %tobool252, label %if.then253, label %if.end254, !dbg !14712

if.then253:                                       ; preds = %if.then246
  store i32 1, i32* %ok, align 4, !dbg !14713
  br label %if.end254, !dbg !14714

if.end254:                                        ; preds = %if.then253, %if.then246
  br label %if.end255, !dbg !14715

if.end255:                                        ; preds = %if.end254, %land.lhs.true241, %for.body237
  br label %for.inc256, !dbg !14716

for.inc256:                                       ; preds = %if.end255
  %186 = load i32, i32* %a, align 4, !dbg !14717
  %inc257 = add nsw i32 %186, 1, !dbg !14717
  store i32 %inc257, i32* %a, align 4, !dbg !14717
  br label %for.cond234, !dbg !14718, !llvm.loop !14719

for.end258:                                       ; preds = %for.cond234
  br label %if.end259, !dbg !14721

if.end259:                                        ; preds = %for.end258, %land.lhs.true228, %land.lhs.true225, %land.lhs.true222, %land.lhs.true219, %for.body214
  %187 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14722
  %material_type260 = getelementptr inbounds %struct.Material, %struct.Material* %187, i32 0, i32 2, !dbg !14724
  %188 = load i16, i16* %material_type260, align 8, !dbg !14724
  %conv261 = sext i16 %188 to i32, !dbg !14722
  %cmp262 = icmp eq i32 %conv261, 3, !dbg !14725
  br i1 %cmp262, label %if.then264, label %if.end269, !dbg !14726

if.then264:                                       ; preds = %if.end259
  %189 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14727
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %189, i32 0, i32 24, !dbg !14729
  %190 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !14729
  %191 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14730
  %call265 = call i32 %190(%struct.DerivedMesh* %191), !dbg !14727
  store i32 %call265, i32* %end, align 4, !dbg !14731
  %192 = load i32, i32* %end, align 4, !dbg !14732
  %tobool266 = icmp ne i32 %192, 0, !dbg !14732
  br i1 %tobool266, label %if.then267, label %if.end268, !dbg !14734

if.then267:                                       ; preds = %if.then264
  store i32 0, i32* %ok, align 4, !dbg !14735
  br label %if.end268, !dbg !14736

if.end268:                                        ; preds = %if.then267, %if.then264
  br label %if.end269, !dbg !14737

if.end269:                                        ; preds = %if.end268, %if.end259
  %193 = load i32, i32* %ok, align 4, !dbg !14738
  %tobool270 = icmp ne i32 %193, 0, !dbg !14738
  br i1 %tobool270, label %if.then271, label %if.end628, !dbg !14740

if.then271:                                       ; preds = %if.end269
  %194 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14741
  %getNumTessFaces272 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %194, i32 0, i32 25, !dbg !14743
  %195 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces272, align 8, !dbg !14743
  %196 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14744
  %call273 = call i32 %195(%struct.DerivedMesh* %196), !dbg !14741
  store i32 %call273, i32* %end, align 4, !dbg !14745
  %197 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14746
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %197, i32 0, i32 33, !dbg !14747
  %198 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !14747
  %199 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14748
  %call274 = call %struct.MFace* %198(%struct.DerivedMesh* %199), !dbg !14746
  store %struct.MFace* %call274, %struct.MFace** %mface, align 8, !dbg !14749
  %200 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !14750
  %tobool275 = icmp ne [4 x [3 x i16]]* %200, null, !dbg !14750
  br i1 %tobool275, label %if.end286, label %land.lhs.true276, !dbg !14752

land.lhs.true276:                                 ; preds = %if.then271
  %201 = load i8, i8* %do_autosmooth, align 1, !dbg !14753
  %conv277 = zext i8 %201 to i32, !dbg !14753
  %tobool278 = icmp ne i32 %conv277, 0, !dbg !14753
  br i1 %tobool278, label %land.lhs.true279, label %if.end286, !dbg !14754

land.lhs.true279:                                 ; preds = %land.lhs.true276
  %202 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14755
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %202, i32 0, i32 52, !dbg !14756
  %203 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !14756
  %204 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14757
  %call280 = call i8* %203(%struct.DerivedMesh* %204, i32 40), !dbg !14755
  %cmp281 = icmp ne i8* %call280, null, !dbg !14758
  br i1 %cmp281, label %if.then283, label %if.end286, !dbg !14759

if.then283:                                       ; preds = %land.lhs.true279
  %205 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !14760
  %206 = load i32, i32* %end, align 4, !dbg !14762
  %conv284 = sext i32 %206 to i64, !dbg !14762
  %mul = mul i64 24, %conv284, !dbg !14763
  %call285 = call i8* %205(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.init_render_mesh, i64 0, i64 0)), !dbg !14760
  %207 = bitcast i8* %call285 to [4 x [3 x i16]]*, !dbg !14760
  store [4 x [3 x i16]]* %207, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !14764
  store [4 x [3 x i16]]* %207, [4 x [3 x i16]]** %lnp, align 8, !dbg !14765
  br label %if.end286, !dbg !14766

if.end286:                                        ; preds = %if.then283, %land.lhs.true279, %land.lhs.true276, %if.then271
  store i32 0, i32* %a, align 4, !dbg !14767
  br label %for.cond287, !dbg !14769

for.cond287:                                      ; preds = %for.inc624, %if.end286
  %208 = load i32, i32* %a, align 4, !dbg !14770
  %209 = load i32, i32* %end, align 4, !dbg !14772
  %cmp288 = icmp slt i32 %208, %209, !dbg !14773
  br i1 %cmp288, label %for.body290, label %for.end627, !dbg !14774

for.body290:                                      ; preds = %for.cond287
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !14775, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !14778, metadata !DIExpression()), !dbg !14779
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !14780, metadata !DIExpression()), !dbg !14781
  call void @llvm.dbg.declare(metadata i32* %v4, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.declare(metadata i32* %flag291, metadata !14784, metadata !DIExpression()), !dbg !14785
  %210 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14786
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %210, i32 0, i32 4, !dbg !14788
  %211 = load i16, i16* %mat_nr, align 4, !dbg !14788
  %conv292 = sext i16 %211 to i32, !dbg !14786
  %212 = load i32, i32* %a1, align 4, !dbg !14789
  %cmp293 = icmp eq i32 %conv292, %212, !dbg !14790
  br i1 %cmp293, label %if.then295, label %if.end623, !dbg !14791

if.then295:                                       ; preds = %for.body290
  call void @llvm.dbg.declare(metadata float* %len, metadata !14792, metadata !DIExpression()), !dbg !14794
  call void @llvm.dbg.declare(metadata i8* %reverse_verts, metadata !14795, metadata !DIExpression()), !dbg !14796
  %213 = load i32, i32* %negative_scale, align 4, !dbg !14797
  %cmp296 = icmp ne i32 %213, 0, !dbg !14798
  br i1 %cmp296, label %land.rhs298, label %land.end302, !dbg !14799

land.rhs298:                                      ; preds = %if.then295
  %214 = load i8, i8* %do_autosmooth, align 1, !dbg !14800
  %conv299 = zext i8 %214 to i32, !dbg !14800
  %cmp300 = icmp eq i32 %conv299, 0, !dbg !14801
  br label %land.end302

land.end302:                                      ; preds = %land.rhs298, %if.then295
  %215 = phi i1 [ false, %if.then295 ], [ %cmp300, %land.rhs298 ], !dbg !14802
  %land.ext303 = zext i1 %215 to i32, !dbg !14799
  %conv304 = trunc i32 %land.ext303 to i8, !dbg !14803
  store i8 %conv304, i8* %reverse_verts, align 1, !dbg !14796
  call void @llvm.dbg.declare(metadata [4 x i32]* %rev_tab, metadata !14804, metadata !DIExpression()), !dbg !14805
  %arrayinit.begin = getelementptr inbounds [4 x i32], [4 x i32]* %rev_tab, i64 0, i64 0, !dbg !14806
  %216 = load i8, i8* %reverse_verts, align 1, !dbg !14807
  %conv305 = zext i8 %216 to i32, !dbg !14807
  %cmp306 = icmp eq i32 %conv305, 0, !dbg !14808
  %217 = zext i1 %cmp306 to i64, !dbg !14807
  %cond = select i1 %cmp306, i32 0, i32 2, !dbg !14807
  store i32 %cond, i32* %arrayinit.begin, align 4, !dbg !14806
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1, !dbg !14806
  store i32 1, i32* %arrayinit.element, align 4, !dbg !14806
  %arrayinit.element308 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1, !dbg !14806
  %218 = load i8, i8* %reverse_verts, align 1, !dbg !14809
  %conv309 = zext i8 %218 to i32, !dbg !14809
  %cmp310 = icmp eq i32 %conv309, 0, !dbg !14810
  %219 = zext i1 %cmp310 to i64, !dbg !14809
  %cond312 = select i1 %cmp310, i32 2, i32 0, !dbg !14809
  store i32 %cond312, i32* %arrayinit.element308, align 4, !dbg !14806
  %arrayinit.element313 = getelementptr inbounds i32, i32* %arrayinit.element308, i64 1, !dbg !14806
  store i32 3, i32* %arrayinit.element313, align 4, !dbg !14806
  %220 = load i8, i8* %reverse_verts, align 1, !dbg !14811
  %conv314 = zext i8 %220 to i32, !dbg !14811
  %cmp315 = icmp eq i32 %conv314, 0, !dbg !14812
  br i1 %cmp315, label %cond.true, label %cond.false, !dbg !14811

cond.true:                                        ; preds = %land.end302
  %221 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14813
  %v1317 = getelementptr inbounds %struct.MFace, %struct.MFace* %221, i32 0, i32 0, !dbg !14814
  %222 = load i32, i32* %v1317, align 4, !dbg !14814
  br label %cond.end, !dbg !14811

cond.false:                                       ; preds = %land.end302
  %223 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14815
  %v3318 = getelementptr inbounds %struct.MFace, %struct.MFace* %223, i32 0, i32 2, !dbg !14816
  %224 = load i32, i32* %v3318, align 4, !dbg !14816
  br label %cond.end, !dbg !14811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond319 = phi i32 [ %222, %cond.true ], [ %224, %cond.false ], !dbg !14811
  store i32 %cond319, i32* %v1, align 4, !dbg !14817
  %225 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14818
  %v2320 = getelementptr inbounds %struct.MFace, %struct.MFace* %225, i32 0, i32 1, !dbg !14819
  %226 = load i32, i32* %v2320, align 4, !dbg !14819
  store i32 %226, i32* %v2, align 4, !dbg !14820
  %227 = load i8, i8* %reverse_verts, align 1, !dbg !14821
  %conv321 = zext i8 %227 to i32, !dbg !14821
  %cmp322 = icmp eq i32 %conv321, 0, !dbg !14822
  br i1 %cmp322, label %cond.true324, label %cond.false326, !dbg !14821

cond.true324:                                     ; preds = %cond.end
  %228 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14823
  %v3325 = getelementptr inbounds %struct.MFace, %struct.MFace* %228, i32 0, i32 2, !dbg !14824
  %229 = load i32, i32* %v3325, align 4, !dbg !14824
  br label %cond.end328, !dbg !14821

cond.false326:                                    ; preds = %cond.end
  %230 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14825
  %v1327 = getelementptr inbounds %struct.MFace, %struct.MFace* %230, i32 0, i32 0, !dbg !14826
  %231 = load i32, i32* %v1327, align 4, !dbg !14826
  br label %cond.end328, !dbg !14821

cond.end328:                                      ; preds = %cond.false326, %cond.true324
  %cond329 = phi i32 [ %229, %cond.true324 ], [ %231, %cond.false326 ], !dbg !14821
  store i32 %cond329, i32* %v3, align 4, !dbg !14827
  %232 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14828
  %v4330 = getelementptr inbounds %struct.MFace, %struct.MFace* %232, i32 0, i32 3, !dbg !14829
  %233 = load i32, i32* %v4330, align 4, !dbg !14829
  store i32 %233, i32* %v4, align 4, !dbg !14830
  %234 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !14831
  %flag331 = getelementptr inbounds %struct.MFace, %struct.MFace* %234, i32 0, i32 6, !dbg !14832
  %235 = load i8, i8* %flag331, align 1, !dbg !14832
  %conv332 = zext i8 %235 to i32, !dbg !14831
  %and333 = and i32 %conv332, 1, !dbg !14833
  store i32 %and333, i32* %flag291, align 4, !dbg !14834
  %236 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14835
  %237 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14836
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %237, i32 0, i32 11, !dbg !14837
  %238 = load i32, i32* %totvlak, align 4, !dbg !14838
  %inc334 = add nsw i32 %238, 1, !dbg !14838
  store i32 %inc334, i32* %totvlak, align 4, !dbg !14838
  %call335 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %236, i32 %238), !dbg !14839
  store %struct.VlakRen* %call335, %struct.VlakRen** %vlr, align 8, !dbg !14840
  %239 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14841
  %240 = load i32, i32* %vertofs, align 4, !dbg !14842
  %241 = load i32, i32* %v1, align 4, !dbg !14843
  %add336 = add nsw i32 %240, %241, !dbg !14844
  %call337 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %239, i32 %add336), !dbg !14845
  %242 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14846
  %v1338 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %242, i32 0, i32 0, !dbg !14847
  store %struct.VertRen* %call337, %struct.VertRen** %v1338, align 8, !dbg !14848
  %243 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14849
  %244 = load i32, i32* %vertofs, align 4, !dbg !14850
  %245 = load i32, i32* %v2, align 4, !dbg !14851
  %add339 = add nsw i32 %244, %245, !dbg !14852
  %call340 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %243, i32 %add339), !dbg !14853
  %246 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14854
  %v2341 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %246, i32 0, i32 1, !dbg !14855
  store %struct.VertRen* %call340, %struct.VertRen** %v2341, align 8, !dbg !14856
  %247 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14857
  %248 = load i32, i32* %vertofs, align 4, !dbg !14858
  %249 = load i32, i32* %v3, align 4, !dbg !14859
  %add342 = add nsw i32 %248, %249, !dbg !14860
  %call343 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %247, i32 %add342), !dbg !14861
  %250 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14862
  %v3344 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %250, i32 0, i32 2, !dbg !14863
  store %struct.VertRen* %call343, %struct.VertRen** %v3344, align 8, !dbg !14864
  %251 = load i32, i32* %v4, align 4, !dbg !14865
  %tobool345 = icmp ne i32 %251, 0, !dbg !14865
  br i1 %tobool345, label %if.then346, label %if.else350, !dbg !14867

if.then346:                                       ; preds = %cond.end328
  %252 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14868
  %253 = load i32, i32* %vertofs, align 4, !dbg !14869
  %254 = load i32, i32* %v4, align 4, !dbg !14870
  %add347 = add nsw i32 %253, %254, !dbg !14871
  %call348 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %252, i32 %add347), !dbg !14872
  %255 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14873
  %v4349 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %255, i32 0, i32 3, !dbg !14874
  store %struct.VertRen* %call348, %struct.VertRen** %v4349, align 8, !dbg !14875
  br label %if.end352, !dbg !14873

if.else350:                                       ; preds = %cond.end328
  %256 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14876
  %v4351 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %256, i32 0, i32 3, !dbg !14877
  store %struct.VertRen* null, %struct.VertRen** %v4351, align 8, !dbg !14878
  br label %if.end352

if.end352:                                        ; preds = %if.else350, %if.then346
  %257 = load i8, i8* %use_original_normals, align 1, !dbg !14879
  %tobool353 = icmp ne i8 %257, 0, !dbg !14879
  br i1 %tobool353, label %if.then354, label %if.else404, !dbg !14881

if.then354:                                       ; preds = %if.end352
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !14882, metadata !DIExpression()), !dbg !14884
  %258 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14885
  %mface355 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %258, i32 0, i32 12, !dbg !14886
  %259 = load %struct.MFace*, %struct.MFace** %mface355, align 8, !dbg !14886
  %260 = load i32, i32* %a, align 4, !dbg !14887
  %idx.ext = sext i32 %260 to i64, !dbg !14888
  %add.ptr356 = getelementptr inbounds %struct.MFace, %struct.MFace* %259, i64 %idx.ext, !dbg !14888
  store %struct.MFace* %add.ptr356, %struct.MFace** %mf, align 8, !dbg !14884
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !14889, metadata !DIExpression()), !dbg !14890
  %261 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !14891
  %mvert357 = getelementptr inbounds %struct.Mesh, %struct.Mesh* %261, i32 0, i32 15, !dbg !14892
  %262 = load %struct.MVert*, %struct.MVert** %mvert357, align 8, !dbg !14892
  store %struct.MVert* %262, %struct.MVert** %mv, align 8, !dbg !14890
  %263 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14893
  %v4358 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %263, i32 0, i32 3, !dbg !14895
  %264 = load %struct.VertRen*, %struct.VertRen** %v4358, align 8, !dbg !14895
  %tobool359 = icmp ne %struct.VertRen* %264, null, !dbg !14893
  br i1 %tobool359, label %if.then360, label %if.else384, !dbg !14896

if.then360:                                       ; preds = %if.then354
  %265 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14897
  %n361 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %265, i32 0, i32 4, !dbg !14898
  %arraydecay362 = getelementptr inbounds [3 x float], [3 x float]* %n361, i64 0, i64 0, !dbg !14897
  %266 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14899
  %267 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14900
  %v4363 = getelementptr inbounds %struct.MFace, %struct.MFace* %267, i32 0, i32 3, !dbg !14901
  %268 = load i32, i32* %v4363, align 4, !dbg !14901
  %idxprom364 = zext i32 %268 to i64, !dbg !14899
  %arrayidx365 = getelementptr inbounds %struct.MVert, %struct.MVert* %266, i64 %idxprom364, !dbg !14899
  %co366 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx365, i32 0, i32 0, !dbg !14902
  %arraydecay367 = getelementptr inbounds [3 x float], [3 x float]* %co366, i64 0, i64 0, !dbg !14899
  %269 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14903
  %270 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14904
  %v3368 = getelementptr inbounds %struct.MFace, %struct.MFace* %270, i32 0, i32 2, !dbg !14905
  %271 = load i32, i32* %v3368, align 4, !dbg !14905
  %idxprom369 = zext i32 %271 to i64, !dbg !14903
  %arrayidx370 = getelementptr inbounds %struct.MVert, %struct.MVert* %269, i64 %idxprom369, !dbg !14903
  %co371 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx370, i32 0, i32 0, !dbg !14906
  %arraydecay372 = getelementptr inbounds [3 x float], [3 x float]* %co371, i64 0, i64 0, !dbg !14903
  %272 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14907
  %273 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14908
  %v2373 = getelementptr inbounds %struct.MFace, %struct.MFace* %273, i32 0, i32 1, !dbg !14909
  %274 = load i32, i32* %v2373, align 4, !dbg !14909
  %idxprom374 = zext i32 %274 to i64, !dbg !14907
  %arrayidx375 = getelementptr inbounds %struct.MVert, %struct.MVert* %272, i64 %idxprom374, !dbg !14907
  %co376 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx375, i32 0, i32 0, !dbg !14910
  %arraydecay377 = getelementptr inbounds [3 x float], [3 x float]* %co376, i64 0, i64 0, !dbg !14907
  %275 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14911
  %276 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14912
  %v1378 = getelementptr inbounds %struct.MFace, %struct.MFace* %276, i32 0, i32 0, !dbg !14913
  %277 = load i32, i32* %v1378, align 4, !dbg !14913
  %idxprom379 = zext i32 %277 to i64, !dbg !14911
  %arrayidx380 = getelementptr inbounds %struct.MVert, %struct.MVert* %275, i64 %idxprom379, !dbg !14911
  %co381 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx380, i32 0, i32 0, !dbg !14914
  %arraydecay382 = getelementptr inbounds [3 x float], [3 x float]* %co381, i64 0, i64 0, !dbg !14911
  %call383 = call float @normal_quad_v3(float* %arraydecay362, float* %arraydecay367, float* %arraydecay372, float* %arraydecay377, float* %arraydecay382), !dbg !14915
  store float %call383, float* %len, align 4, !dbg !14916
  br label %if.end403, !dbg !14917

if.else384:                                       ; preds = %if.then354
  %278 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14918
  %n385 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %278, i32 0, i32 4, !dbg !14919
  %arraydecay386 = getelementptr inbounds [3 x float], [3 x float]* %n385, i64 0, i64 0, !dbg !14918
  %279 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14920
  %280 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14921
  %v3387 = getelementptr inbounds %struct.MFace, %struct.MFace* %280, i32 0, i32 2, !dbg !14922
  %281 = load i32, i32* %v3387, align 4, !dbg !14922
  %idxprom388 = zext i32 %281 to i64, !dbg !14920
  %arrayidx389 = getelementptr inbounds %struct.MVert, %struct.MVert* %279, i64 %idxprom388, !dbg !14920
  %co390 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx389, i32 0, i32 0, !dbg !14923
  %arraydecay391 = getelementptr inbounds [3 x float], [3 x float]* %co390, i64 0, i64 0, !dbg !14920
  %282 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14924
  %283 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14925
  %v2392 = getelementptr inbounds %struct.MFace, %struct.MFace* %283, i32 0, i32 1, !dbg !14926
  %284 = load i32, i32* %v2392, align 4, !dbg !14926
  %idxprom393 = zext i32 %284 to i64, !dbg !14924
  %arrayidx394 = getelementptr inbounds %struct.MVert, %struct.MVert* %282, i64 %idxprom393, !dbg !14924
  %co395 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx394, i32 0, i32 0, !dbg !14927
  %arraydecay396 = getelementptr inbounds [3 x float], [3 x float]* %co395, i64 0, i64 0, !dbg !14924
  %285 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !14928
  %286 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !14929
  %v1397 = getelementptr inbounds %struct.MFace, %struct.MFace* %286, i32 0, i32 0, !dbg !14930
  %287 = load i32, i32* %v1397, align 4, !dbg !14930
  %idxprom398 = zext i32 %287 to i64, !dbg !14928
  %arrayidx399 = getelementptr inbounds %struct.MVert, %struct.MVert* %285, i64 %idxprom398, !dbg !14928
  %co400 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx399, i32 0, i32 0, !dbg !14931
  %arraydecay401 = getelementptr inbounds [3 x float], [3 x float]* %co400, i64 0, i64 0, !dbg !14928
  %call402 = call float @normal_tri_v3(float* %arraydecay386, float* %arraydecay391, float* %arraydecay396, float* %arraydecay401), !dbg !14932
  store float %call402, float* %len, align 4, !dbg !14933
  br label %if.end403

if.end403:                                        ; preds = %if.else384, %if.then360
  br label %if.end437, !dbg !14934

if.else404:                                       ; preds = %if.end352
  %288 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14935
  %v4405 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %288, i32 0, i32 3, !dbg !14938
  %289 = load %struct.VertRen*, %struct.VertRen** %v4405, align 8, !dbg !14938
  %tobool406 = icmp ne %struct.VertRen* %289, null, !dbg !14935
  br i1 %tobool406, label %if.then407, label %if.else423, !dbg !14939

if.then407:                                       ; preds = %if.else404
  %290 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14940
  %n408 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %290, i32 0, i32 4, !dbg !14941
  %arraydecay409 = getelementptr inbounds [3 x float], [3 x float]* %n408, i64 0, i64 0, !dbg !14940
  %291 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14942
  %v4410 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %291, i32 0, i32 3, !dbg !14943
  %292 = load %struct.VertRen*, %struct.VertRen** %v4410, align 8, !dbg !14943
  %co411 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %292, i32 0, i32 0, !dbg !14944
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %co411, i64 0, i64 0, !dbg !14942
  %293 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14945
  %v3413 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %293, i32 0, i32 2, !dbg !14946
  %294 = load %struct.VertRen*, %struct.VertRen** %v3413, align 8, !dbg !14946
  %co414 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %294, i32 0, i32 0, !dbg !14947
  %arraydecay415 = getelementptr inbounds [3 x float], [3 x float]* %co414, i64 0, i64 0, !dbg !14945
  %295 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14948
  %v2416 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %295, i32 0, i32 1, !dbg !14949
  %296 = load %struct.VertRen*, %struct.VertRen** %v2416, align 8, !dbg !14949
  %co417 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %296, i32 0, i32 0, !dbg !14950
  %arraydecay418 = getelementptr inbounds [3 x float], [3 x float]* %co417, i64 0, i64 0, !dbg !14948
  %297 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14951
  %v1419 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %297, i32 0, i32 0, !dbg !14952
  %298 = load %struct.VertRen*, %struct.VertRen** %v1419, align 8, !dbg !14952
  %co420 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %298, i32 0, i32 0, !dbg !14953
  %arraydecay421 = getelementptr inbounds [3 x float], [3 x float]* %co420, i64 0, i64 0, !dbg !14951
  %call422 = call float @normal_quad_v3(float* %arraydecay409, float* %arraydecay412, float* %arraydecay415, float* %arraydecay418, float* %arraydecay421), !dbg !14954
  store float %call422, float* %len, align 4, !dbg !14955
  br label %if.end436, !dbg !14956

if.else423:                                       ; preds = %if.else404
  %299 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14957
  %n424 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %299, i32 0, i32 4, !dbg !14958
  %arraydecay425 = getelementptr inbounds [3 x float], [3 x float]* %n424, i64 0, i64 0, !dbg !14957
  %300 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14959
  %v3426 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %300, i32 0, i32 2, !dbg !14960
  %301 = load %struct.VertRen*, %struct.VertRen** %v3426, align 8, !dbg !14960
  %co427 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %301, i32 0, i32 0, !dbg !14961
  %arraydecay428 = getelementptr inbounds [3 x float], [3 x float]* %co427, i64 0, i64 0, !dbg !14959
  %302 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14962
  %v2429 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %302, i32 0, i32 1, !dbg !14963
  %303 = load %struct.VertRen*, %struct.VertRen** %v2429, align 8, !dbg !14963
  %co430 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %303, i32 0, i32 0, !dbg !14964
  %arraydecay431 = getelementptr inbounds [3 x float], [3 x float]* %co430, i64 0, i64 0, !dbg !14962
  %304 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14965
  %v1432 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %304, i32 0, i32 0, !dbg !14966
  %305 = load %struct.VertRen*, %struct.VertRen** %v1432, align 8, !dbg !14966
  %co433 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %305, i32 0, i32 0, !dbg !14967
  %arraydecay434 = getelementptr inbounds [3 x float], [3 x float]* %co433, i64 0, i64 0, !dbg !14965
  %call435 = call float @normal_tri_v3(float* %arraydecay425, float* %arraydecay428, float* %arraydecay431, float* %arraydecay434), !dbg !14968
  store float %call435, float* %len, align 4, !dbg !14969
  br label %if.end436

if.end436:                                        ; preds = %if.else423, %if.then407
  br label %if.end437

if.end437:                                        ; preds = %if.end436, %if.end403
  %306 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !14970
  %307 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14971
  %mat438 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %307, i32 0, i32 5, !dbg !14972
  store %struct.Material* %306, %struct.Material** %mat438, align 8, !dbg !14973
  %308 = load i32, i32* %flag291, align 4, !dbg !14974
  %conv439 = trunc i32 %308 to i8, !dbg !14974
  %309 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14975
  %flag440 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %309, i32 0, i32 7, !dbg !14976
  store i8 %conv439, i8* %flag440, align 1, !dbg !14977
  %310 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !14978
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %310, i32 0, i32 8, !dbg !14979
  store i8 0, i8* %ec, align 2, !dbg !14980
  %311 = load float, float* %len, align 4, !dbg !14981
  %cmp441 = fcmp oeq float %311, 0.000000e+00, !dbg !14983
  br i1 %cmp441, label %if.then443, label %if.else445, !dbg !14984

if.then443:                                       ; preds = %if.end437
  %312 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !14985
  %totvlak444 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %312, i32 0, i32 11, !dbg !14986
  %313 = load i32, i32* %totvlak444, align 4, !dbg !14987
  %dec = add nsw i32 %313, -1, !dbg !14987
  store i32 %dec, i32* %totvlak444, align 4, !dbg !14987
  br label %if.end622, !dbg !14985

if.else445:                                       ; preds = %if.end437
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !14988, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !14991, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf, metadata !14993, metadata !DIExpression()), !dbg !14994
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !14995, metadata !DIExpression()), !dbg !14996
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !14997, metadata !DIExpression()), !dbg !14998
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14999, metadata !DIExpression()), !dbg !15000
  call void @llvm.dbg.declare(metadata i32* %mtfn, metadata !15001, metadata !DIExpression()), !dbg !15002
  store i32 0, i32* %mtfn, align 4, !dbg !15002
  call void @llvm.dbg.declare(metadata i32* %mcn, metadata !15003, metadata !DIExpression()), !dbg !15004
  store i32 0, i32* %mcn, align 4, !dbg !15004
  call void @llvm.dbg.declare(metadata i32* %mtng, metadata !15005, metadata !DIExpression()), !dbg !15006
  store i32 0, i32* %mtng, align 4, !dbg !15006
  call void @llvm.dbg.declare(metadata i32* %mln, metadata !15007, metadata !DIExpression()), !dbg !15008
  store i32 0, i32* %mln, align 4, !dbg !15008
  call void @llvm.dbg.declare(metadata i32* %vindex, metadata !15009, metadata !DIExpression()), !dbg !15010
  call void @llvm.dbg.declare(metadata i8** %name, metadata !15011, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.declare(metadata i32* %nr_verts, metadata !15013, metadata !DIExpression()), !dbg !15014
  %314 = load i32, i32* %v4, align 4, !dbg !15015
  %cmp446 = icmp ne i32 %314, 0, !dbg !15016
  %315 = zext i1 %cmp446 to i64, !dbg !15015
  %cond448 = select i1 %cmp446, i32 4, i32 3, !dbg !15015
  store i32 %cond448, i32* %nr_verts, align 4, !dbg !15014
  store i32 0, i32* %index, align 4, !dbg !15017
  br label %for.cond449, !dbg !15019

for.cond449:                                      ; preds = %for.inc601, %if.else445
  %316 = load i32, i32* %index, align 4, !dbg !15020
  %317 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15022
  %faceData450 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %317, i32 0, i32 2, !dbg !15023
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData450, i32 0, i32 2, !dbg !15024
  %318 = load i32, i32* %totlayer, align 4, !dbg !15024
  %cmp451 = icmp slt i32 %316, %318, !dbg !15025
  br i1 %cmp451, label %for.body453, label %for.end603, !dbg !15026

for.body453:                                      ; preds = %for.cond449
  %319 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15027
  %faceData454 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %319, i32 0, i32 2, !dbg !15029
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData454, i32 0, i32 0, !dbg !15030
  %320 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !15030
  %321 = load i32, i32* %index, align 4, !dbg !15031
  %idxprom455 = sext i32 %321 to i64, !dbg !15027
  %arrayidx456 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %320, i64 %idxprom455, !dbg !15027
  store %struct.CustomDataLayer* %arrayidx456, %struct.CustomDataLayer** %layer, align 8, !dbg !15032
  %322 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15033
  %name457 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %322, i32 0, i32 8, !dbg !15034
  %arraydecay458 = getelementptr inbounds [64 x i8], [64 x i8]* %name457, i64 0, i64 0, !dbg !15033
  store i8* %arraydecay458, i8** %name, align 8, !dbg !15035
  %323 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15036
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %323, i32 0, i32 0, !dbg !15038
  %324 = load i32, i32* %type, align 8, !dbg !15038
  %cmp459 = icmp eq i32 %324, 5, !dbg !15039
  br i1 %cmp459, label %land.lhs.true461, label %if.else497, !dbg !15040

land.lhs.true461:                                 ; preds = %for.body453
  %325 = load i32, i32* %mtfn, align 4, !dbg !15041
  %cmp462 = icmp slt i32 %325, 8, !dbg !15042
  br i1 %cmp462, label %if.then464, label %if.else497, !dbg !15043

if.then464:                                       ; preds = %land.lhs.true461
  call void @llvm.dbg.declare(metadata i32* %t, metadata !15044, metadata !DIExpression()), !dbg !15046
  %326 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15047
  %327 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15048
  %328 = load i32, i32* %mtfn, align 4, !dbg !15049
  %inc465 = add nsw i32 %328, 1, !dbg !15049
  store i32 %inc465, i32* %mtfn, align 4, !dbg !15049
  %call466 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %326, %struct.VlakRen* %327, i32 %328, i8** %name, i32 1), !dbg !15050
  store %struct.MTFace* %call466, %struct.MTFace** %mtf, align 8, !dbg !15051
  %329 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15052
  %data467 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %329, i32 0, i32 9, !dbg !15053
  %330 = load i8*, i8** %data467, align 8, !dbg !15053
  %331 = bitcast i8* %330 to %struct.MTFace*, !dbg !15054
  store %struct.MTFace* %331, %struct.MTFace** %mtface, align 8, !dbg !15055
  %332 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !15056
  %333 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !15057
  %334 = load i32, i32* %a, align 4, !dbg !15058
  %idxprom468 = sext i32 %334 to i64, !dbg !15057
  %arrayidx469 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %333, i64 %idxprom468, !dbg !15057
  %335 = bitcast %struct.MTFace* %332 to i8*, !dbg !15057
  %336 = bitcast %struct.MTFace* %arrayidx469 to i8*, !dbg !15057
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %336, i64 48, i1 false), !dbg !15057
  store i32 0, i32* %vindex, align 4, !dbg !15059
  br label %for.cond470, !dbg !15061

for.cond470:                                      ; preds = %for.inc494, %if.then464
  %337 = load i32, i32* %vindex, align 4, !dbg !15062
  %338 = load i32, i32* %nr_verts, align 4, !dbg !15064
  %cmp471 = icmp slt i32 %337, %338, !dbg !15065
  br i1 %cmp471, label %for.body473, label %for.end496, !dbg !15066

for.body473:                                      ; preds = %for.cond470
  store i32 0, i32* %t, align 4, !dbg !15067
  br label %for.cond474, !dbg !15069

for.cond474:                                      ; preds = %for.inc491, %for.body473
  %339 = load i32, i32* %t, align 4, !dbg !15070
  %cmp475 = icmp slt i32 %339, 2, !dbg !15072
  br i1 %cmp475, label %for.body477, label %for.end493, !dbg !15073

for.body477:                                      ; preds = %for.cond474
  %340 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !15074
  %341 = load i32, i32* %a, align 4, !dbg !15075
  %idxprom478 = sext i32 %341 to i64, !dbg !15074
  %arrayidx479 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %340, i64 %idxprom478, !dbg !15074
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx479, i32 0, i32 0, !dbg !15076
  %342 = load i32, i32* %vindex, align 4, !dbg !15077
  %idxprom480 = sext i32 %342 to i64, !dbg !15078
  %arrayidx481 = getelementptr inbounds [4 x i32], [4 x i32]* %rev_tab, i64 0, i64 %idxprom480, !dbg !15078
  %343 = load i32, i32* %arrayidx481, align 4, !dbg !15078
  %idxprom482 = sext i32 %343 to i64, !dbg !15074
  %arrayidx483 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom482, !dbg !15074
  %344 = load i32, i32* %t, align 4, !dbg !15079
  %idxprom484 = sext i32 %344 to i64, !dbg !15074
  %arrayidx485 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx483, i64 0, i64 %idxprom484, !dbg !15074
  %345 = load float, float* %arrayidx485, align 4, !dbg !15074
  %346 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !15080
  %uv486 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %346, i32 0, i32 0, !dbg !15081
  %347 = load i32, i32* %vindex, align 4, !dbg !15082
  %idxprom487 = sext i32 %347 to i64, !dbg !15080
  %arrayidx488 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv486, i64 0, i64 %idxprom487, !dbg !15080
  %348 = load i32, i32* %t, align 4, !dbg !15083
  %idxprom489 = sext i32 %348 to i64, !dbg !15080
  %arrayidx490 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx488, i64 0, i64 %idxprom489, !dbg !15080
  store float %345, float* %arrayidx490, align 4, !dbg !15084
  br label %for.inc491, !dbg !15080

for.inc491:                                       ; preds = %for.body477
  %349 = load i32, i32* %t, align 4, !dbg !15085
  %inc492 = add nsw i32 %349, 1, !dbg !15085
  store i32 %inc492, i32* %t, align 4, !dbg !15085
  br label %for.cond474, !dbg !15086, !llvm.loop !15087

for.end493:                                       ; preds = %for.cond474
  br label %for.inc494, !dbg !15088

for.inc494:                                       ; preds = %for.end493
  %350 = load i32, i32* %vindex, align 4, !dbg !15089
  %inc495 = add nsw i32 %350, 1, !dbg !15089
  store i32 %inc495, i32* %vindex, align 4, !dbg !15089
  br label %for.cond470, !dbg !15090, !llvm.loop !15091

for.end496:                                       ; preds = %for.cond470
  br label %if.end600, !dbg !15093

if.else497:                                       ; preds = %land.lhs.true461, %for.body453
  %351 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15094
  %type498 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %351, i32 0, i32 0, !dbg !15096
  %352 = load i32, i32* %type498, align 8, !dbg !15096
  %cmp499 = icmp eq i32 %352, 6, !dbg !15097
  br i1 %cmp499, label %land.lhs.true501, label %if.else523, !dbg !15098

land.lhs.true501:                                 ; preds = %if.else497
  %353 = load i32, i32* %mcn, align 4, !dbg !15099
  %cmp502 = icmp slt i32 %353, 8, !dbg !15100
  br i1 %cmp502, label %if.then504, label %if.else523, !dbg !15101

if.then504:                                       ; preds = %land.lhs.true501
  %354 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15102
  %355 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15104
  %356 = load i32, i32* %mcn, align 4, !dbg !15105
  %inc505 = add nsw i32 %356, 1, !dbg !15105
  store i32 %inc505, i32* %mcn, align 4, !dbg !15105
  %call506 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %354, %struct.VlakRen* %355, i32 %356, i8** %name, i32 1), !dbg !15106
  store %struct.MCol* %call506, %struct.MCol** %mc, align 8, !dbg !15107
  %357 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15108
  %data507 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %357, i32 0, i32 9, !dbg !15109
  %358 = load i8*, i8** %data507, align 8, !dbg !15109
  %359 = bitcast i8* %358 to %struct.MCol*, !dbg !15110
  store %struct.MCol* %359, %struct.MCol** %mcol, align 8, !dbg !15111
  store i32 0, i32* %vindex, align 4, !dbg !15112
  br label %for.cond508, !dbg !15114

for.cond508:                                      ; preds = %for.inc520, %if.then504
  %360 = load i32, i32* %vindex, align 4, !dbg !15115
  %361 = load i32, i32* %nr_verts, align 4, !dbg !15117
  %cmp509 = icmp slt i32 %360, %361, !dbg !15118
  br i1 %cmp509, label %for.body511, label %for.end522, !dbg !15119

for.body511:                                      ; preds = %for.cond508
  %362 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !15120
  %363 = load i32, i32* %vindex, align 4, !dbg !15121
  %idxprom512 = sext i32 %363 to i64, !dbg !15120
  %arrayidx513 = getelementptr inbounds %struct.MCol, %struct.MCol* %362, i64 %idxprom512, !dbg !15120
  %364 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !15122
  %365 = load i32, i32* %a, align 4, !dbg !15123
  %mul514 = mul nsw i32 %365, 4, !dbg !15124
  %366 = load i32, i32* %vindex, align 4, !dbg !15125
  %idxprom515 = sext i32 %366 to i64, !dbg !15126
  %arrayidx516 = getelementptr inbounds [4 x i32], [4 x i32]* %rev_tab, i64 0, i64 %idxprom515, !dbg !15126
  %367 = load i32, i32* %arrayidx516, align 4, !dbg !15126
  %add517 = add nsw i32 %mul514, %367, !dbg !15127
  %idxprom518 = sext i32 %add517 to i64, !dbg !15122
  %arrayidx519 = getelementptr inbounds %struct.MCol, %struct.MCol* %364, i64 %idxprom518, !dbg !15122
  %368 = bitcast %struct.MCol* %arrayidx513 to i8*, !dbg !15122
  %369 = bitcast %struct.MCol* %arrayidx519 to i8*, !dbg !15122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %368, i8* align 1 %369, i64 4, i1 false), !dbg !15122
  br label %for.inc520, !dbg !15120

for.inc520:                                       ; preds = %for.body511
  %370 = load i32, i32* %vindex, align 4, !dbg !15128
  %inc521 = add nsw i32 %370, 1, !dbg !15128
  store i32 %inc521, i32* %vindex, align 4, !dbg !15128
  br label %for.cond508, !dbg !15129, !llvm.loop !15130

for.end522:                                       ; preds = %for.cond508
  br label %if.end599, !dbg !15132

if.else523:                                       ; preds = %land.lhs.true501, %if.else497
  %371 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15133
  %type524 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %371, i32 0, i32 0, !dbg !15135
  %372 = load i32, i32* %type524, align 8, !dbg !15135
  %cmp525 = icmp eq i32 %372, 18, !dbg !15136
  br i1 %cmp525, label %land.lhs.true527, label %if.else565, !dbg !15137

land.lhs.true527:                                 ; preds = %if.else523
  %373 = load i32, i32* %mtng, align 4, !dbg !15138
  %cmp528 = icmp slt i32 %373, 1, !dbg !15139
  br i1 %cmp528, label %if.then530, label %if.else565, !dbg !15140

if.then530:                                       ; preds = %land.lhs.true527
  %374 = load i8, i8* %need_nmap_tangent, align 1, !dbg !15141
  %conv531 = zext i8 %374 to i32, !dbg !15141
  %cmp532 = icmp ne i32 %conv531, 0, !dbg !15144
  br i1 %cmp532, label %if.then534, label %if.end563, !dbg !15145

if.then534:                                       ; preds = %if.then530
  call void @llvm.dbg.declare(metadata float** %tangent, metadata !15146, metadata !DIExpression()), !dbg !15148
  %375 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15149
  %data535 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %375, i32 0, i32 9, !dbg !15150
  %376 = load i8*, i8** %data535, align 8, !dbg !15150
  %377 = bitcast i8* %376 to float*, !dbg !15151
  store float* %377, float** %tangent, align 8, !dbg !15148
  call void @llvm.dbg.declare(metadata float** %ftang, metadata !15152, metadata !DIExpression()), !dbg !15153
  %378 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15154
  %379 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15155
  %call536 = call float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen* %378, %struct.VlakRen* %379, i32 1), !dbg !15156
  store float* %call536, float** %ftang, align 8, !dbg !15153
  store i32 0, i32* %vindex, align 4, !dbg !15157
  br label %for.cond537, !dbg !15159

for.cond537:                                      ; preds = %for.inc560, %if.then534
  %380 = load i32, i32* %vindex, align 4, !dbg !15160
  %381 = load i32, i32* %nr_verts, align 4, !dbg !15162
  %cmp538 = icmp slt i32 %380, %381, !dbg !15163
  br i1 %cmp538, label %for.body540, label %for.end562, !dbg !15164

for.body540:                                      ; preds = %for.cond537
  %382 = load float*, float** %ftang, align 8, !dbg !15165
  %383 = load i32, i32* %vindex, align 4, !dbg !15167
  %mul541 = mul nsw i32 %383, 4, !dbg !15168
  %idx.ext542 = sext i32 %mul541 to i64, !dbg !15169
  %add.ptr543 = getelementptr inbounds float, float* %382, i64 %idx.ext542, !dbg !15169
  %384 = load float*, float** %tangent, align 8, !dbg !15170
  %385 = load i32, i32* %a, align 4, !dbg !15171
  %mul544 = mul nsw i32 %385, 16, !dbg !15172
  %idx.ext545 = sext i32 %mul544 to i64, !dbg !15173
  %add.ptr546 = getelementptr inbounds float, float* %384, i64 %idx.ext545, !dbg !15173
  %386 = load i32, i32* %vindex, align 4, !dbg !15174
  %idxprom547 = sext i32 %386 to i64, !dbg !15175
  %arrayidx548 = getelementptr inbounds [4 x i32], [4 x i32]* %rev_tab, i64 0, i64 %idxprom547, !dbg !15175
  %387 = load i32, i32* %arrayidx548, align 4, !dbg !15175
  %mul549 = mul nsw i32 %387, 4, !dbg !15176
  %idx.ext550 = sext i32 %mul549 to i64, !dbg !15177
  %add.ptr551 = getelementptr inbounds float, float* %add.ptr546, i64 %idx.ext550, !dbg !15177
  call void @copy_v4_v4(float* %add.ptr543, float* %add.ptr551), !dbg !15178
  %arraydecay552 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15179
  %388 = load float*, float** %ftang, align 8, !dbg !15180
  %389 = load i32, i32* %vindex, align 4, !dbg !15181
  %mul553 = mul nsw i32 %389, 4, !dbg !15182
  %idx.ext554 = sext i32 %mul553 to i64, !dbg !15183
  %add.ptr555 = getelementptr inbounds float, float* %388, i64 %idx.ext554, !dbg !15183
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay552, float* %add.ptr555), !dbg !15184
  %390 = load float*, float** %ftang, align 8, !dbg !15185
  %391 = load i32, i32* %vindex, align 4, !dbg !15186
  %mul556 = mul nsw i32 %391, 4, !dbg !15187
  %idx.ext557 = sext i32 %mul556 to i64, !dbg !15188
  %add.ptr558 = getelementptr inbounds float, float* %390, i64 %idx.ext557, !dbg !15188
  %call559 = call float @normalize_v3(float* %add.ptr558), !dbg !15189
  br label %for.inc560, !dbg !15190

for.inc560:                                       ; preds = %for.body540
  %392 = load i32, i32* %vindex, align 4, !dbg !15191
  %inc561 = add nsw i32 %392, 1, !dbg !15191
  store i32 %inc561, i32* %vindex, align 4, !dbg !15191
  br label %for.cond537, !dbg !15192, !llvm.loop !15193

for.end562:                                       ; preds = %for.cond537
  br label %if.end563, !dbg !15195

if.end563:                                        ; preds = %for.end562, %if.then530
  %393 = load i32, i32* %mtng, align 4, !dbg !15196
  %inc564 = add nsw i32 %393, 1, !dbg !15196
  store i32 %inc564, i32* %mtng, align 4, !dbg !15196
  br label %if.end598, !dbg !15197

if.else565:                                       ; preds = %land.lhs.true527, %if.else523
  %394 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15198
  %type566 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %394, i32 0, i32 0, !dbg !15200
  %395 = load i32, i32* %type566, align 8, !dbg !15200
  %cmp567 = icmp eq i32 %395, 40, !dbg !15201
  br i1 %cmp567, label %land.lhs.true569, label %if.end597, !dbg !15202

land.lhs.true569:                                 ; preds = %if.else565
  %396 = load i32, i32* %mln, align 4, !dbg !15203
  %cmp570 = icmp slt i32 %396, 1, !dbg !15204
  br i1 %cmp570, label %if.then572, label %if.end597, !dbg !15205

if.then572:                                       ; preds = %land.lhs.true569
  %397 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15206
  %tobool573 = icmp ne [4 x [3 x i16]]* %397, null, !dbg !15206
  br i1 %tobool573, label %if.then574, label %if.end595, !dbg !15209

if.then574:                                       ; preds = %if.then572
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !15210, metadata !DIExpression()), !dbg !15212
  %398 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !15213
  %data575 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %398, i32 0, i32 9, !dbg !15214
  %399 = load i8*, i8** %data575, align 8, !dbg !15214
  %400 = bitcast i8* %399 to [4 x [3 x i16]]*, !dbg !15215
  store [4 x [3 x i16]]* %400, [4 x [3 x i16]]** %lnors, align 8, !dbg !15212
  store i32 0, i32* %vindex, align 4, !dbg !15216
  br label %for.cond576, !dbg !15218

for.cond576:                                      ; preds = %for.inc591, %if.then574
  %401 = load i32, i32* %vindex, align 4, !dbg !15219
  %cmp577 = icmp slt i32 %401, 4, !dbg !15221
  br i1 %cmp577, label %for.body579, label %for.end593, !dbg !15222

for.body579:                                      ; preds = %for.cond576
  %402 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnp, align 8, !dbg !15223
  %arrayidx580 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %402, i64 0, !dbg !15223
  %403 = load i32, i32* %vindex, align 4, !dbg !15225
  %idxprom581 = sext i32 %403 to i64, !dbg !15223
  %arrayidx582 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx580, i64 0, i64 %idxprom581, !dbg !15223
  %arraydecay583 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx582, i64 0, i64 0, !dbg !15223
  %404 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !15226
  %405 = load i32, i32* %a, align 4, !dbg !15227
  %idxprom584 = sext i32 %405 to i64, !dbg !15226
  %arrayidx585 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %404, i64 %idxprom584, !dbg !15226
  %406 = load i32, i32* %vindex, align 4, !dbg !15228
  %idxprom586 = sext i32 %406 to i64, !dbg !15229
  %arrayidx587 = getelementptr inbounds [4 x i32], [4 x i32]* %rev_tab, i64 0, i64 %idxprom586, !dbg !15229
  %407 = load i32, i32* %arrayidx587, align 4, !dbg !15229
  %idxprom588 = sext i32 %407 to i64, !dbg !15226
  %arrayidx589 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx585, i64 0, i64 %idxprom588, !dbg !15226
  %arraydecay590 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx589, i64 0, i64 0, !dbg !15226
  call void @copy_v3_v3_short(i16* %arraydecay583, i16* %arraydecay590), !dbg !15230
  br label %for.inc591, !dbg !15231

for.inc591:                                       ; preds = %for.body579
  %408 = load i32, i32* %vindex, align 4, !dbg !15232
  %inc592 = add nsw i32 %408, 1, !dbg !15232
  store i32 %inc592, i32* %vindex, align 4, !dbg !15232
  br label %for.cond576, !dbg !15233, !llvm.loop !15234

for.end593:                                       ; preds = %for.cond576
  %409 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnp, align 8, !dbg !15236
  %incdec.ptr594 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %409, i32 1, !dbg !15236
  store [4 x [3 x i16]]* %incdec.ptr594, [4 x [3 x i16]]** %lnp, align 8, !dbg !15236
  br label %if.end595, !dbg !15237

if.end595:                                        ; preds = %for.end593, %if.then572
  %410 = load i32, i32* %mln, align 4, !dbg !15238
  %inc596 = add nsw i32 %410, 1, !dbg !15238
  store i32 %inc596, i32* %mln, align 4, !dbg !15238
  br label %if.end597, !dbg !15239

if.end597:                                        ; preds = %if.end595, %land.lhs.true569, %if.else565
  br label %if.end598

if.end598:                                        ; preds = %if.end597, %if.end563
  br label %if.end599

if.end599:                                        ; preds = %if.end598, %for.end522
  br label %if.end600

if.end600:                                        ; preds = %if.end599, %for.end496
  br label %for.inc601, !dbg !15240

for.inc601:                                       ; preds = %if.end600
  %411 = load i32, i32* %index, align 4, !dbg !15241
  %inc602 = add nsw i32 %411, 1, !dbg !15241
  store i32 %inc602, i32* %index, align 4, !dbg !15241
  br label %for.cond449, !dbg !15242, !llvm.loop !15243

for.end603:                                       ; preds = %for.cond449
  %412 = load i8, i8* %need_origindex, align 1, !dbg !15245
  %tobool604 = icmp ne i8 %412, 0, !dbg !15245
  br i1 %tobool604, label %if.then605, label %if.end621, !dbg !15247

if.then605:                                       ; preds = %for.end603
  call void @llvm.dbg.declare(metadata i32** %origindex606, metadata !15248, metadata !DIExpression()), !dbg !15250
  %413 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15251
  %414 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15252
  %call607 = call i32* @RE_vlakren_get_origindex(%struct.ObjectRen* %413, %struct.VlakRen* %414, i32 1), !dbg !15253
  store i32* %call607, i32** %origindex606, align 8, !dbg !15254
  %415 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !15255
  %tobool608 = icmp ne i32* %415, null, !dbg !15255
  br i1 %tobool608, label %land.lhs.true609, label %if.else613, !dbg !15257

land.lhs.true609:                                 ; preds = %if.then605
  %416 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !15258
  %tobool610 = icmp ne i32* %416, null, !dbg !15258
  br i1 %tobool610, label %if.then611, label %if.else613, !dbg !15259

if.then611:                                       ; preds = %land.lhs.true609
  %417 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !15260
  %418 = load i32*, i32** %index_mp_to_orig, align 8, !dbg !15261
  %419 = load i32, i32* %a, align 4, !dbg !15262
  %call612 = call i32 @DM_origindex_mface_mpoly(i32* %417, i32* %418, i32 %419), !dbg !15263
  %420 = load i32*, i32** %origindex606, align 8, !dbg !15264
  store i32 %call612, i32* %420, align 4, !dbg !15265
  br label %if.end620, !dbg !15266

if.else613:                                       ; preds = %land.lhs.true609, %if.then605
  %421 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !15267
  %tobool614 = icmp ne i32* %421, null, !dbg !15267
  br i1 %tobool614, label %if.then615, label %if.else618, !dbg !15269

if.then615:                                       ; preds = %if.else613
  %422 = load i32*, i32** %index_mf_to_mpoly, align 8, !dbg !15270
  %423 = load i32, i32* %a, align 4, !dbg !15271
  %idxprom616 = sext i32 %423 to i64, !dbg !15270
  %arrayidx617 = getelementptr inbounds i32, i32* %422, i64 %idxprom616, !dbg !15270
  %424 = load i32, i32* %arrayidx617, align 4, !dbg !15270
  %425 = load i32*, i32** %origindex606, align 8, !dbg !15272
  store i32 %424, i32* %425, align 4, !dbg !15273
  br label %if.end619, !dbg !15274

if.else618:                                       ; preds = %if.else613
  %426 = load i32, i32* %a, align 4, !dbg !15275
  %427 = load i32*, i32** %origindex606, align 8, !dbg !15276
  store i32 %426, i32* %427, align 4, !dbg !15277
  br label %if.end619

if.end619:                                        ; preds = %if.else618, %if.then615
  br label %if.end620

if.end620:                                        ; preds = %if.end619, %if.then611
  br label %if.end621, !dbg !15278

if.end621:                                        ; preds = %if.end620, %for.end603
  br label %if.end622

if.end622:                                        ; preds = %if.end621, %if.then443
  br label %if.end623, !dbg !15279

if.end623:                                        ; preds = %if.end622, %for.body290
  br label %for.inc624, !dbg !15280

for.inc624:                                       ; preds = %if.end623
  %428 = load i32, i32* %a, align 4, !dbg !15281
  %inc625 = add nsw i32 %428, 1, !dbg !15281
  store i32 %inc625, i32* %a, align 4, !dbg !15281
  %429 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15282
  %incdec.ptr626 = getelementptr inbounds %struct.MFace, %struct.MFace* %429, i32 1, !dbg !15282
  store %struct.MFace* %incdec.ptr626, %struct.MFace** %mface, align 8, !dbg !15282
  br label %for.cond287, !dbg !15283, !llvm.loop !15284

for.end627:                                       ; preds = %for.cond287
  br label %if.end628, !dbg !15286

if.end628:                                        ; preds = %for.end627, %if.end269
  br label %for.inc629, !dbg !15287

for.inc629:                                       ; preds = %if.end628
  %430 = load i32, i32* %a1, align 4, !dbg !15288
  %inc630 = add nsw i32 %430, 1, !dbg !15288
  store i32 %inc630, i32* %a1, align 4, !dbg !15288
  br label %for.cond199, !dbg !15289, !llvm.loop !15290

for.end631:                                       ; preds = %lor.end212
  %431 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15292
  %getNumEdges632 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %431, i32 0, i32 24, !dbg !15293
  %432 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges632, align 8, !dbg !15293
  %433 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15294
  %call633 = call i32 %432(%struct.DerivedMesh* %433), !dbg !15292
  store i32 %call633, i32* %end, align 4, !dbg !15295
  %434 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15296
  %getVertArray634 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %434, i32 0, i32 31, !dbg !15297
  %435 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray634, align 8, !dbg !15297
  %436 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15298
  %call635 = call %struct.MVert* %435(%struct.DerivedMesh* %436), !dbg !15296
  store %struct.MVert* %call635, %struct.MVert** %mvert, align 8, !dbg !15299
  %437 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15300
  %438 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15301
  %call636 = call %struct.Material* @give_render_material(%struct.Render* %437, %struct.Object* %438, i16 signext 1), !dbg !15302
  store %struct.Material* %call636, %struct.Material** %ma, align 8, !dbg !15303
  %439 = load i32, i32* %end, align 4, !dbg !15304
  %tobool637 = icmp ne i32 %439, 0, !dbg !15304
  br i1 %tobool637, label %land.lhs.true638, label %if.end759, !dbg !15306

land.lhs.true638:                                 ; preds = %for.end631
  %440 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !15307
  %material_type639 = getelementptr inbounds %struct.Material, %struct.Material* %440, i32 0, i32 2, !dbg !15308
  %441 = load i16, i16* %material_type639, align 8, !dbg !15308
  %conv640 = sext i16 %441 to i32, !dbg !15307
  %cmp641 = icmp eq i32 %conv640, 3, !dbg !15309
  br i1 %cmp641, label %if.then643, label %if.end759, !dbg !15310

if.then643:                                       ; preds = %land.lhs.true638
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !15311, metadata !DIExpression()), !dbg !15315
  call void @llvm.dbg.declare(metadata %struct.edgesort** %edgetable, metadata !15316, metadata !DIExpression()), !dbg !15325
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !15326, metadata !DIExpression()), !dbg !15327
  store i32 0, i32* %totedge, align 4, !dbg !15327
  store i32 1, i32* %recalc_normals, align 4, !dbg !15328
  %442 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15329
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %442, i32 0, i32 32, !dbg !15330
  %443 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !15330
  %444 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15331
  %call644 = call %struct.MEdge* %443(%struct.DerivedMesh* %444), !dbg !15329
  store %struct.MEdge* %call644, %struct.MEdge** %medge, align 8, !dbg !15332
  %445 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15333
  %call645 = call %struct.edgesort* @make_mesh_edge_lookup(%struct.DerivedMesh* %445, i32* %totedge), !dbg !15334
  store %struct.edgesort* %call645, %struct.edgesort** %edgetable, align 8, !dbg !15335
  store i32 0, i32* %a1, align 4, !dbg !15336
  br label %for.cond646, !dbg !15338

for.cond646:                                      ; preds = %for.inc752, %if.then643
  %446 = load i32, i32* %a1, align 4, !dbg !15339
  %447 = load i32, i32* %end, align 4, !dbg !15341
  %cmp647 = icmp slt i32 %446, %447, !dbg !15342
  br i1 %cmp647, label %for.body649, label %for.end755, !dbg !15343

for.body649:                                      ; preds = %for.cond646
  %448 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15344
  %flag650 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %448, i32 0, i32 4, !dbg !15347
  %449 = load i16, i16* %flag650, align 2, !dbg !15347
  %conv651 = sext i16 %449 to i32, !dbg !15344
  %and652 = and i32 %conv651, 32, !dbg !15348
  %tobool653 = icmp ne i32 %and652, 0, !dbg !15348
  br i1 %tobool653, label %if.then654, label %if.end751, !dbg !15349

if.then654:                                       ; preds = %for.body649
  call void @llvm.dbg.declare(metadata %struct.MVert** %v0, metadata !15350, metadata !DIExpression()), !dbg !15352
  %450 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15353
  %451 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15354
  %v1655 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %451, i32 0, i32 0, !dbg !15355
  %452 = load i32, i32* %v1655, align 4, !dbg !15355
  %idxprom656 = zext i32 %452 to i64, !dbg !15353
  %arrayidx657 = getelementptr inbounds %struct.MVert, %struct.MVert* %450, i64 %idxprom656, !dbg !15353
  store %struct.MVert* %arrayidx657, %struct.MVert** %v0, align 8, !dbg !15352
  call void @llvm.dbg.declare(metadata %struct.MVert** %v1658, metadata !15356, metadata !DIExpression()), !dbg !15357
  %453 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15358
  %454 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15359
  %v2659 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %454, i32 0, i32 1, !dbg !15360
  %455 = load i32, i32* %v2659, align 4, !dbg !15360
  %idxprom660 = zext i32 %455 to i64, !dbg !15358
  %arrayidx661 = getelementptr inbounds %struct.MVert, %struct.MVert* %453, i64 %idxprom660, !dbg !15358
  store %struct.MVert* %arrayidx661, %struct.MVert** %v1658, align 8, !dbg !15357
  %456 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15361
  %457 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15362
  %totvlak662 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %457, i32 0, i32 11, !dbg !15363
  %458 = load i32, i32* %totvlak662, align 4, !dbg !15364
  %inc663 = add nsw i32 %458, 1, !dbg !15364
  store i32 %inc663, i32* %totvlak662, align 4, !dbg !15364
  %call664 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %456, i32 %458), !dbg !15365
  store %struct.VlakRen* %call664, %struct.VlakRen** %vlr, align 8, !dbg !15366
  %459 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15367
  %460 = load i32, i32* %vertofs, align 4, !dbg !15368
  %461 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15369
  %v1665 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %461, i32 0, i32 0, !dbg !15370
  %462 = load i32, i32* %v1665, align 4, !dbg !15370
  %add666 = add i32 %460, %462, !dbg !15371
  %call667 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %459, i32 %add666), !dbg !15372
  %463 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15373
  %v1668 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %463, i32 0, i32 0, !dbg !15374
  store %struct.VertRen* %call667, %struct.VertRen** %v1668, align 8, !dbg !15375
  %464 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15376
  %465 = load i32, i32* %vertofs, align 4, !dbg !15377
  %466 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15378
  %v2669 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %466, i32 0, i32 1, !dbg !15379
  %467 = load i32, i32* %v2669, align 4, !dbg !15379
  %add670 = add i32 %465, %467, !dbg !15380
  %call671 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %464, i32 %add670), !dbg !15381
  %468 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15382
  %v2672 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %468, i32 0, i32 1, !dbg !15383
  store %struct.VertRen* %call671, %struct.VertRen** %v2672, align 8, !dbg !15384
  %469 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15385
  %v2673 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %469, i32 0, i32 1, !dbg !15386
  %470 = load %struct.VertRen*, %struct.VertRen** %v2673, align 8, !dbg !15386
  %471 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15387
  %v3674 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %471, i32 0, i32 2, !dbg !15388
  store %struct.VertRen* %470, %struct.VertRen** %v3674, align 8, !dbg !15389
  %472 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15390
  %v4675 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %472, i32 0, i32 3, !dbg !15391
  store %struct.VertRen* null, %struct.VertRen** %v4675, align 8, !dbg !15392
  %473 = load %struct.edgesort*, %struct.edgesort** %edgetable, align 8, !dbg !15393
  %tobool676 = icmp ne %struct.edgesort* %473, null, !dbg !15393
  br i1 %tobool676, label %if.then677, label %if.end678, !dbg !15395

if.then677:                                       ; preds = %if.then654
  %474 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15396
  %475 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15397
  %476 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15398
  %477 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15399
  %478 = load %struct.edgesort*, %struct.edgesort** %edgetable, align 8, !dbg !15400
  %479 = load i32, i32* %totedge, align 4, !dbg !15401
  call void @use_mesh_edge_lookup(%struct.ObjectRen* %474, %struct.DerivedMesh* %475, %struct.MEdge* %476, %struct.VlakRen* %477, %struct.edgesort* %478, i32 %479), !dbg !15402
  br label %if.end678, !dbg !15402

if.end678:                                        ; preds = %if.then677, %if.then654
  %480 = load %struct.MVert*, %struct.MVert** %v0, align 8, !dbg !15403
  %no679 = getelementptr inbounds %struct.MVert, %struct.MVert* %480, i32 0, i32 1, !dbg !15404
  %arrayidx680 = getelementptr inbounds [3 x i16], [3 x i16]* %no679, i64 0, i64 0, !dbg !15403
  %481 = load i16, i16* %arrayidx680, align 4, !dbg !15403
  %conv681 = sext i16 %481 to i32, !dbg !15403
  %482 = load %struct.MVert*, %struct.MVert** %v1658, align 8, !dbg !15405
  %no682 = getelementptr inbounds %struct.MVert, %struct.MVert* %482, i32 0, i32 1, !dbg !15406
  %arrayidx683 = getelementptr inbounds [3 x i16], [3 x i16]* %no682, i64 0, i64 0, !dbg !15405
  %483 = load i16, i16* %arrayidx683, align 4, !dbg !15405
  %conv684 = sext i16 %483 to i32, !dbg !15405
  %add685 = add nsw i32 %conv681, %conv684, !dbg !15407
  %sub686 = sub nsw i32 0, %add685, !dbg !15408
  %conv687 = sitofp i32 %sub686 to float, !dbg !15408
  store float %conv687, float* %xn, align 4, !dbg !15409
  %484 = load %struct.MVert*, %struct.MVert** %v0, align 8, !dbg !15410
  %no688 = getelementptr inbounds %struct.MVert, %struct.MVert* %484, i32 0, i32 1, !dbg !15411
  %arrayidx689 = getelementptr inbounds [3 x i16], [3 x i16]* %no688, i64 0, i64 1, !dbg !15410
  %485 = load i16, i16* %arrayidx689, align 2, !dbg !15410
  %conv690 = sext i16 %485 to i32, !dbg !15410
  %486 = load %struct.MVert*, %struct.MVert** %v1658, align 8, !dbg !15412
  %no691 = getelementptr inbounds %struct.MVert, %struct.MVert* %486, i32 0, i32 1, !dbg !15413
  %arrayidx692 = getelementptr inbounds [3 x i16], [3 x i16]* %no691, i64 0, i64 1, !dbg !15412
  %487 = load i16, i16* %arrayidx692, align 2, !dbg !15412
  %conv693 = sext i16 %487 to i32, !dbg !15412
  %add694 = add nsw i32 %conv690, %conv693, !dbg !15414
  %sub695 = sub nsw i32 0, %add694, !dbg !15415
  %conv696 = sitofp i32 %sub695 to float, !dbg !15415
  store float %conv696, float* %yn, align 4, !dbg !15416
  %488 = load %struct.MVert*, %struct.MVert** %v0, align 8, !dbg !15417
  %no697 = getelementptr inbounds %struct.MVert, %struct.MVert* %488, i32 0, i32 1, !dbg !15418
  %arrayidx698 = getelementptr inbounds [3 x i16], [3 x i16]* %no697, i64 0, i64 2, !dbg !15417
  %489 = load i16, i16* %arrayidx698, align 4, !dbg !15417
  %conv699 = sext i16 %489 to i32, !dbg !15417
  %490 = load %struct.MVert*, %struct.MVert** %v1658, align 8, !dbg !15419
  %no700 = getelementptr inbounds %struct.MVert, %struct.MVert* %490, i32 0, i32 1, !dbg !15420
  %arrayidx701 = getelementptr inbounds [3 x i16], [3 x i16]* %no700, i64 0, i64 2, !dbg !15419
  %491 = load i16, i16* %arrayidx701, align 4, !dbg !15419
  %conv702 = sext i16 %491 to i32, !dbg !15419
  %add703 = add nsw i32 %conv699, %conv702, !dbg !15421
  %sub704 = sub nsw i32 0, %add703, !dbg !15422
  %conv705 = sitofp i32 %sub704 to float, !dbg !15422
  store float %conv705, float* %zn, align 4, !dbg !15423
  %arrayidx706 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15424
  %arrayidx707 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx706, i64 0, i64 0, !dbg !15424
  %492 = load float, float* %arrayidx707, align 16, !dbg !15424
  %493 = load float, float* %xn, align 4, !dbg !15425
  %mul708 = fmul float %492, %493, !dbg !15426
  %arrayidx709 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15427
  %arrayidx710 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx709, i64 0, i64 1, !dbg !15427
  %494 = load float, float* %arrayidx710, align 4, !dbg !15427
  %495 = load float, float* %yn, align 4, !dbg !15428
  %mul711 = fmul float %494, %495, !dbg !15429
  %add712 = fadd float %mul708, %mul711, !dbg !15430
  %arrayidx713 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15431
  %arrayidx714 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx713, i64 0, i64 2, !dbg !15431
  %496 = load float, float* %arrayidx714, align 8, !dbg !15431
  %497 = load float, float* %zn, align 4, !dbg !15432
  %mul715 = fmul float %496, %497, !dbg !15433
  %add716 = fadd float %add712, %mul715, !dbg !15434
  %498 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15435
  %n717 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %498, i32 0, i32 4, !dbg !15436
  %arrayidx718 = getelementptr inbounds [3 x float], [3 x float]* %n717, i64 0, i64 0, !dbg !15435
  store float %add716, float* %arrayidx718, align 8, !dbg !15437
  %arrayidx719 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15438
  %arrayidx720 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx719, i64 0, i64 0, !dbg !15438
  %499 = load float, float* %arrayidx720, align 4, !dbg !15438
  %500 = load float, float* %xn, align 4, !dbg !15439
  %mul721 = fmul float %499, %500, !dbg !15440
  %arrayidx722 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15441
  %arrayidx723 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx722, i64 0, i64 1, !dbg !15441
  %501 = load float, float* %arrayidx723, align 4, !dbg !15441
  %502 = load float, float* %yn, align 4, !dbg !15442
  %mul724 = fmul float %501, %502, !dbg !15443
  %add725 = fadd float %mul721, %mul724, !dbg !15444
  %arrayidx726 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15445
  %arrayidx727 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx726, i64 0, i64 2, !dbg !15445
  %503 = load float, float* %arrayidx727, align 4, !dbg !15445
  %504 = load float, float* %zn, align 4, !dbg !15446
  %mul728 = fmul float %503, %504, !dbg !15447
  %add729 = fadd float %add725, %mul728, !dbg !15448
  %505 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15449
  %n730 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %505, i32 0, i32 4, !dbg !15450
  %arrayidx731 = getelementptr inbounds [3 x float], [3 x float]* %n730, i64 0, i64 1, !dbg !15449
  store float %add729, float* %arrayidx731, align 4, !dbg !15451
  %arrayidx732 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15452
  %arrayidx733 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx732, i64 0, i64 0, !dbg !15452
  %506 = load float, float* %arrayidx733, align 8, !dbg !15452
  %507 = load float, float* %xn, align 4, !dbg !15453
  %mul734 = fmul float %506, %507, !dbg !15454
  %arrayidx735 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15455
  %arrayidx736 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx735, i64 0, i64 1, !dbg !15455
  %508 = load float, float* %arrayidx736, align 4, !dbg !15455
  %509 = load float, float* %yn, align 4, !dbg !15456
  %mul737 = fmul float %508, %509, !dbg !15457
  %add738 = fadd float %mul734, %mul737, !dbg !15458
  %arrayidx739 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15459
  %arrayidx740 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx739, i64 0, i64 2, !dbg !15459
  %510 = load float, float* %arrayidx740, align 8, !dbg !15459
  %511 = load float, float* %zn, align 4, !dbg !15460
  %mul741 = fmul float %510, %511, !dbg !15461
  %add742 = fadd float %add738, %mul741, !dbg !15462
  %512 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15463
  %n743 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %512, i32 0, i32 4, !dbg !15464
  %arrayidx744 = getelementptr inbounds [3 x float], [3 x float]* %n743, i64 0, i64 2, !dbg !15463
  store float %add742, float* %arrayidx744, align 8, !dbg !15465
  %513 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15466
  %n745 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %513, i32 0, i32 4, !dbg !15467
  %arraydecay746 = getelementptr inbounds [3 x float], [3 x float]* %n745, i64 0, i64 0, !dbg !15466
  %call747 = call float @normalize_v3(float* %arraydecay746), !dbg !15468
  %514 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !15469
  %515 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15470
  %mat748 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %515, i32 0, i32 5, !dbg !15471
  store %struct.Material* %514, %struct.Material** %mat748, align 8, !dbg !15472
  %516 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15473
  %flag749 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %516, i32 0, i32 7, !dbg !15474
  store i8 0, i8* %flag749, align 1, !dbg !15475
  %517 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15476
  %ec750 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %517, i32 0, i32 8, !dbg !15477
  store i8 1, i8* %ec750, align 2, !dbg !15478
  br label %if.end751, !dbg !15479

if.end751:                                        ; preds = %if.end678, %for.body649
  br label %for.inc752, !dbg !15480

for.inc752:                                       ; preds = %if.end751
  %518 = load i32, i32* %a1, align 4, !dbg !15481
  %inc753 = add nsw i32 %518, 1, !dbg !15481
  store i32 %inc753, i32* %a1, align 4, !dbg !15481
  %519 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !15482
  %incdec.ptr754 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %519, i32 1, !dbg !15482
  store %struct.MEdge* %incdec.ptr754, %struct.MEdge** %medge, align 8, !dbg !15482
  br label %for.cond646, !dbg !15483, !llvm.loop !15484

for.end755:                                       ; preds = %for.cond646
  %520 = load %struct.edgesort*, %struct.edgesort** %edgetable, align 8, !dbg !15486
  %tobool756 = icmp ne %struct.edgesort* %520, null, !dbg !15486
  br i1 %tobool756, label %if.then757, label %if.end758, !dbg !15488

if.then757:                                       ; preds = %for.end755
  %521 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15489
  %522 = load %struct.edgesort*, %struct.edgesort** %edgetable, align 8, !dbg !15490
  %523 = bitcast %struct.edgesort* %522 to i8*, !dbg !15490
  call void %521(i8* %523), !dbg !15489
  br label %if.end758, !dbg !15489

if.end758:                                        ; preds = %if.then757, %for.end755
  br label %if.end759, !dbg !15491

if.end759:                                        ; preds = %if.end758, %land.lhs.true638, %for.end631
  br label %if.end760, !dbg !15492

if.end760:                                        ; preds = %if.end759, %for.end185
  br label %if.end761

if.end761:                                        ; preds = %if.end760, %if.then136
  %524 = load i32, i32* %timeoffset.addr, align 4, !dbg !15493
  %tobool762 = icmp ne i32 %524, 0, !dbg !15493
  br i1 %tobool762, label %if.end786, label %if.then763, !dbg !15495

if.then763:                                       ; preds = %if.end761
  %525 = load i8, i8* %need_stress, align 1, !dbg !15496
  %tobool764 = icmp ne i8 %525, 0, !dbg !15496
  br i1 %tobool764, label %if.then765, label %if.end766, !dbg !15499

if.then765:                                       ; preds = %if.then763
  %526 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15500
  %527 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15501
  %528 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !15502
  call void @calc_edge_stress(%struct.Render* %526, %struct.ObjectRen* %527, %struct.Mesh* %528), !dbg !15503
  br label %if.end766, !dbg !15503

if.end766:                                        ; preds = %if.then765, %if.then763
  %529 = load i8, i8* %do_displace, align 1, !dbg !15504
  %tobool767 = icmp ne i8 %529, 0, !dbg !15504
  br i1 %tobool767, label %if.then768, label %if.else769, !dbg !15506

if.then768:                                       ; preds = %if.end766
  %530 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15507
  %531 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15509
  call void @calc_vertexnormals(%struct.Render* %530, %struct.ObjectRen* %531, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !15510
  %532 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15511
  %533 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15512
  call void @displace(%struct.Render* %532, %struct.ObjectRen* %533), !dbg !15513
  store i32 0, i32* %recalc_normals, align 4, !dbg !15514
  br label %if.end776, !dbg !15515

if.else769:                                       ; preds = %if.end766
  %534 = load i8, i8* %do_autosmooth, align 1, !dbg !15516
  %tobool770 = icmp ne i8 %534, 0, !dbg !15516
  br i1 %tobool770, label %if.then771, label %if.end775, !dbg !15518

if.then771:                                       ; preds = %if.else769
  %535 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15519
  %cmp772 = icmp eq [4 x [3 x i16]]* %535, null, !dbg !15521
  %conv773 = zext i1 %cmp772 to i32, !dbg !15521
  store i32 %conv773, i32* %recalc_normals, align 4, !dbg !15522
  %536 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15523
  %537 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15524
  %arraydecay774 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15525
  %538 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15526
  call void @autosmooth(%struct.Render* %536, %struct.ObjectRen* %537, [4 x float]* %arraydecay774, [4 x [3 x i16]]* %538), !dbg !15527
  br label %if.end775, !dbg !15528

if.end775:                                        ; preds = %if.then771, %if.else769
  br label %if.end776

if.end776:                                        ; preds = %if.end775, %if.then768
  %539 = load i32, i32* %recalc_normals, align 4, !dbg !15529
  %cmp777 = icmp ne i32 %539, 0, !dbg !15531
  br i1 %cmp777, label %if.then783, label %lor.lhs.false779, !dbg !15532

lor.lhs.false779:                                 ; preds = %if.end776
  %540 = load i8, i8* %need_tangent, align 1, !dbg !15533
  %conv780 = zext i8 %540 to i32, !dbg !15533
  %cmp781 = icmp ne i32 %conv780, 0, !dbg !15534
  br i1 %cmp781, label %if.then783, label %if.end785, !dbg !15535

if.then783:                                       ; preds = %lor.lhs.false779, %if.end776
  %541 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15536
  %542 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15537
  %543 = load i32, i32* %recalc_normals, align 4, !dbg !15538
  %conv784 = trunc i32 %543 to i8, !dbg !15538
  %544 = load i8, i8* %need_tangent, align 1, !dbg !15539
  %545 = load i8, i8* %need_nmap_tangent, align 1, !dbg !15540
  call void @calc_vertexnormals(%struct.Render* %541, %struct.ObjectRen* %542, i8 zeroext %conv784, i8 zeroext %544, i8 zeroext %545), !dbg !15541
  br label %if.end785, !dbg !15541

if.end785:                                        ; preds = %if.then783, %lor.lhs.false779
  br label %if.end786, !dbg !15542

if.end786:                                        ; preds = %if.end785, %if.end761
  %546 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15543
  %tobool787 = icmp ne [4 x [3 x i16]]* %546, null, !dbg !15543
  br i1 %tobool787, label %if.then788, label %if.end789, !dbg !15545

if.then788:                                       ; preds = %if.end786
  %547 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15546
  %548 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15546
  %549 = bitcast [4 x [3 x i16]]* %548 to i8*, !dbg !15546
  call void %547(i8* %549), !dbg !15546
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %loop_nors, align 8, !dbg !15546
  br label %if.end789, !dbg !15546

if.end789:                                        ; preds = %if.then788, %if.end786
  %550 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15548
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %550, i32 0, i32 95, !dbg !15549
  %551 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !15549
  %552 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15550
  call void %551(%struct.DerivedMesh* %552), !dbg !15548
  br label %return, !dbg !15551

return:                                           ; preds = %if.end789, %if.then104, %if.then
  ret void, !dbg !15551
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_mball(%struct.Render* %re, %struct.ObjectRen* %obr) #0 !dbg !15552 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ob = alloca %struct.Object*, align 8
  %dl = alloca %struct.DispList*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %vlr1 = alloca %struct.VlakRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %data = alloca float*, align 8
  %nors = alloca float*, align 8
  %orco = alloca float*, align 8
  %mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [3 x [3 x float]], align 16
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  %a = alloca i32, align 4
  %need_orco = alloca i32, align 4
  %vlakindex = alloca i32, align 4
  %index = alloca i32*, align 8
  %negative_scale = alloca i32, align 4
  %dispbase = alloca %struct.ListBase, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !15555, metadata !DIExpression()), !dbg !15556
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !15559, metadata !DIExpression()), !dbg !15560
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15561
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !15562
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !15562
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !15560
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl, metadata !15563, metadata !DIExpression()), !dbg !15564
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !15565, metadata !DIExpression()), !dbg !15566
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !15567, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr1, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !15571, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.declare(metadata float** %data, metadata !15573, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.declare(metadata float** %nors, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata float** %orco, metadata !15577, metadata !DIExpression()), !dbg !15578
  store float* null, float** %orco, align 8, !dbg !15578
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !15579, metadata !DIExpression()), !dbg !15580
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat, metadata !15581, metadata !DIExpression()), !dbg !15582
  call void @llvm.dbg.declare(metadata float* %xn, metadata !15583, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.declare(metadata float* %yn, metadata !15585, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.declare(metadata float* %zn, metadata !15587, metadata !DIExpression()), !dbg !15588
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata i32* %need_orco, metadata !15591, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.declare(metadata i32* %vlakindex, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.declare(metadata i32** %index, metadata !15595, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.declare(metadata i32* %negative_scale, metadata !15597, metadata !DIExpression()), !dbg !15598
  call void @llvm.dbg.declare(metadata %struct.ListBase* %dispbase, metadata !15599, metadata !DIExpression()), !dbg !15600
  %2 = bitcast %struct.ListBase* %dispbase to i8*, !dbg !15600
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !15600
  %3 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15601
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15603
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 44, !dbg !15604
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !15604
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15605
  %call = call %struct.Object* @BKE_mball_basis_find(%struct.Scene* %5, %struct.Object* %6), !dbg !15606
  %cmp = icmp ne %struct.Object* %3, %call, !dbg !15607
  br i1 %cmp, label %if.then, label %if.end, !dbg !15608

if.then:                                          ; preds = %entry
  br label %return, !dbg !15609

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15610
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15611
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 32, !dbg !15612
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !15611
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15613
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 47, !dbg !15614
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !15613
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !15615
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15616
  %imat4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 50, !dbg !15617
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat4, i64 0, i64 0, !dbg !15616
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15618
  %call7 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay5, [4 x float]* %arraydecay6), !dbg !15619
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15620
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15621
  %imat9 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 50, !dbg !15622
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat9, i64 0, i64 0, !dbg !15621
  call void @copy_m3_m4([3 x float]* %arraydecay8, [4 x float]* %arraydecay10), !dbg !15623
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15624
  %call12 = call zeroext i8 @is_negative_m4([4 x float]* %arraydecay11), !dbg !15625
  %conv = zext i8 %call12 to i32, !dbg !15625
  store i32 %conv, i32* %negative_scale, align 4, !dbg !15626
  %11 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15627
  %12 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15628
  %call13 = call %struct.Material* @give_render_material(%struct.Render* %11, %struct.Object* %12, i16 signext 1), !dbg !15629
  store %struct.Material* %call13, %struct.Material** %ma, align 8, !dbg !15630
  store i32 0, i32* %need_orco, align 4, !dbg !15631
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !15632
  %texco = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 90, !dbg !15634
  %14 = load i16, i16* %texco, align 4, !dbg !15634
  %conv14 = sext i16 %14 to i32, !dbg !15632
  %and = and i32 %conv14, 1, !dbg !15635
  %tobool = icmp ne i32 %and, 0, !dbg !15635
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !15636

if.then15:                                        ; preds = %if.end
  store i32 1, i32* %need_orco, align 4, !dbg !15637
  br label %if.end16, !dbg !15639

if.end16:                                         ; preds = %if.then15, %if.end
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15640
  %eval_ctx = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 101, !dbg !15641
  %16 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !15641
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15642
  %scene17 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 44, !dbg !15643
  %18 = load %struct.Scene*, %struct.Scene** %scene17, align 8, !dbg !15643
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15644
  call void @BKE_displist_make_mball_forRender(%struct.EvaluationContext* %16, %struct.Scene* %18, %struct.Object* %19, %struct.ListBase* %dispbase), !dbg !15645
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %dispbase, i32 0, i32 0, !dbg !15646
  %20 = load i8*, i8** %first, align 8, !dbg !15646
  %21 = bitcast i8* %20 to %struct.DispList*, !dbg !15647
  store %struct.DispList* %21, %struct.DispList** %dl, align 8, !dbg !15648
  %22 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15649
  %cmp18 = icmp eq %struct.DispList* %22, null, !dbg !15651
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15652

if.then20:                                        ; preds = %if.end16
  br label %return, !dbg !15653

if.end21:                                         ; preds = %if.end16
  %23 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15654
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %23, i32 0, i32 8, !dbg !15655
  %24 = load float*, float** %verts, align 8, !dbg !15655
  store float* %24, float** %data, align 8, !dbg !15656
  %25 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15657
  %nors22 = getelementptr inbounds %struct.DispList, %struct.DispList* %25, i32 0, i32 9, !dbg !15658
  %26 = load float*, float** %nors22, align 8, !dbg !15658
  store float* %26, float** %nors, align 8, !dbg !15659
  %27 = load i32, i32* %need_orco, align 4, !dbg !15660
  %tobool23 = icmp ne i32 %27, 0, !dbg !15660
  br i1 %tobool23, label %if.then24, label %if.end30, !dbg !15662

if.then24:                                        ; preds = %if.end21
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15663
  %29 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15665
  %30 = bitcast %struct.Object* %29 to i8*, !dbg !15665
  %call25 = call float* @get_object_orco(%struct.Render* %28, i8* %30), !dbg !15666
  store float* %call25, float** %orco, align 8, !dbg !15667
  %31 = load float*, float** %orco, align 8, !dbg !15668
  %tobool26 = icmp ne float* %31, null, !dbg !15668
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !15670

if.then27:                                        ; preds = %if.then24
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15671
  %call28 = call float* @BKE_mball_make_orco(%struct.Object* %32, %struct.ListBase* %dispbase), !dbg !15673
  store float* %call28, float** %orco, align 8, !dbg !15674
  %33 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15675
  %34 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15676
  %35 = bitcast %struct.Object* %34 to i8*, !dbg !15676
  %36 = load float*, float** %orco, align 8, !dbg !15677
  call void @set_object_orco(%struct.Render* %33, i8* %35, float* %36), !dbg !15678
  br label %if.end29, !dbg !15679

if.end29:                                         ; preds = %if.then27, %if.then24
  br label %if.end30, !dbg !15680

if.end30:                                         ; preds = %if.end29, %if.end21
  store i32 0, i32* %a, align 4, !dbg !15681
  br label %for.cond, !dbg !15683

for.cond:                                         ; preds = %for.inc, %if.end30
  %37 = load i32, i32* %a, align 4, !dbg !15684
  %38 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15686
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %38, i32 0, i32 5, !dbg !15687
  %39 = load i32, i32* %nr, align 8, !dbg !15687
  %cmp31 = icmp slt i32 %37, %39, !dbg !15688
  br i1 %cmp31, label %for.body, label %for.end, !dbg !15689

for.body:                                         ; preds = %for.cond
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15690
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15692
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %41, i32 0, i32 10, !dbg !15693
  %42 = load i32, i32* %totvert, align 8, !dbg !15694
  %inc = add nsw i32 %42, 1, !dbg !15694
  store i32 %inc, i32* %totvert, align 8, !dbg !15694
  %call33 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %40, i32 %42), !dbg !15695
  store %struct.VertRen* %call33, %struct.VertRen** %ver, align 8, !dbg !15696
  %43 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15697
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 0, !dbg !15698
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !15697
  %44 = load float*, float** %data, align 8, !dbg !15699
  call void @copy_v3_v3(float* %arraydecay34, float* %44), !dbg !15700
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !15701
  %45 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15702
  %co36 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %45, i32 0, i32 0, !dbg !15703
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co36, i64 0, i64 0, !dbg !15702
  call void @mul_m4_v3([4 x float]* %arraydecay35, float* %arraydecay37), !dbg !15704
  %46 = load float*, float** %nors, align 8, !dbg !15705
  %arrayidx = getelementptr inbounds float, float* %46, i64 0, !dbg !15705
  %47 = load float, float* %arrayidx, align 4, !dbg !15705
  %fneg = fneg float %47, !dbg !15706
  store float %fneg, float* %xn, align 4, !dbg !15707
  %48 = load float*, float** %nors, align 8, !dbg !15708
  %arrayidx38 = getelementptr inbounds float, float* %48, i64 1, !dbg !15708
  %49 = load float, float* %arrayidx38, align 4, !dbg !15708
  %fneg39 = fneg float %49, !dbg !15709
  store float %fneg39, float* %yn, align 4, !dbg !15710
  %50 = load float*, float** %nors, align 8, !dbg !15711
  %arrayidx40 = getelementptr inbounds float, float* %50, i64 2, !dbg !15711
  %51 = load float, float* %arrayidx40, align 4, !dbg !15711
  %fneg41 = fneg float %51, !dbg !15712
  store float %fneg41, float* %zn, align 4, !dbg !15713
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15714
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !15714
  %52 = load float, float* %arrayidx43, align 16, !dbg !15714
  %53 = load float, float* %xn, align 4, !dbg !15715
  %mul = fmul float %52, %53, !dbg !15716
  %arrayidx44 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15717
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 1, !dbg !15717
  %54 = load float, float* %arrayidx45, align 4, !dbg !15717
  %55 = load float, float* %yn, align 4, !dbg !15718
  %mul46 = fmul float %54, %55, !dbg !15719
  %add = fadd float %mul, %mul46, !dbg !15720
  %arrayidx47 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !15721
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx47, i64 0, i64 2, !dbg !15721
  %56 = load float, float* %arrayidx48, align 8, !dbg !15721
  %57 = load float, float* %zn, align 4, !dbg !15722
  %mul49 = fmul float %56, %57, !dbg !15723
  %add50 = fadd float %add, %mul49, !dbg !15724
  %58 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15725
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %58, i32 0, i32 1, !dbg !15726
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !15725
  store float %add50, float* %arrayidx51, align 4, !dbg !15727
  %arrayidx52 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15728
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 0, !dbg !15728
  %59 = load float, float* %arrayidx53, align 4, !dbg !15728
  %60 = load float, float* %xn, align 4, !dbg !15729
  %mul54 = fmul float %59, %60, !dbg !15730
  %arrayidx55 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15731
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 1, !dbg !15731
  %61 = load float, float* %arrayidx56, align 4, !dbg !15731
  %62 = load float, float* %yn, align 4, !dbg !15732
  %mul57 = fmul float %61, %62, !dbg !15733
  %add58 = fadd float %mul54, %mul57, !dbg !15734
  %arrayidx59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !15735
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 2, !dbg !15735
  %63 = load float, float* %arrayidx60, align 4, !dbg !15735
  %64 = load float, float* %zn, align 4, !dbg !15736
  %mul61 = fmul float %63, %64, !dbg !15737
  %add62 = fadd float %add58, %mul61, !dbg !15738
  %65 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15739
  %n63 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %65, i32 0, i32 1, !dbg !15740
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %n63, i64 0, i64 1, !dbg !15739
  store float %add62, float* %arrayidx64, align 4, !dbg !15741
  %arrayidx65 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15742
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !15742
  %66 = load float, float* %arrayidx66, align 8, !dbg !15742
  %67 = load float, float* %xn, align 4, !dbg !15743
  %mul67 = fmul float %66, %67, !dbg !15744
  %arrayidx68 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15745
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx68, i64 0, i64 1, !dbg !15745
  %68 = load float, float* %arrayidx69, align 4, !dbg !15745
  %69 = load float, float* %yn, align 4, !dbg !15746
  %mul70 = fmul float %68, %69, !dbg !15747
  %add71 = fadd float %mul67, %mul70, !dbg !15748
  %arrayidx72 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !15749
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 2, !dbg !15749
  %70 = load float, float* %arrayidx73, align 8, !dbg !15749
  %71 = load float, float* %zn, align 4, !dbg !15750
  %mul74 = fmul float %70, %71, !dbg !15751
  %add75 = fadd float %add71, %mul74, !dbg !15752
  %72 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15753
  %n76 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %72, i32 0, i32 1, !dbg !15754
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %n76, i64 0, i64 2, !dbg !15753
  store float %add75, float* %arrayidx77, align 4, !dbg !15755
  %73 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15756
  %n78 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %73, i32 0, i32 1, !dbg !15757
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %n78, i64 0, i64 0, !dbg !15756
  %call80 = call float @normalize_v3(float* %arraydecay79), !dbg !15758
  %74 = load i32, i32* %need_orco, align 4, !dbg !15759
  %tobool81 = icmp ne i32 %74, 0, !dbg !15759
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !15761

if.then82:                                        ; preds = %for.body
  %75 = load float*, float** %orco, align 8, !dbg !15762
  %76 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !15764
  %orco83 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %76, i32 0, i32 2, !dbg !15765
  store float* %75, float** %orco83, align 8, !dbg !15766
  %77 = load float*, float** %orco, align 8, !dbg !15767
  %add.ptr = getelementptr inbounds float, float* %77, i64 3, !dbg !15767
  store float* %add.ptr, float** %orco, align 8, !dbg !15767
  br label %if.end84, !dbg !15768

if.end84:                                         ; preds = %if.then82, %for.body
  br label %for.inc, !dbg !15769

for.inc:                                          ; preds = %if.end84
  %78 = load i32, i32* %a, align 4, !dbg !15770
  %inc85 = add nsw i32 %78, 1, !dbg !15770
  store i32 %inc85, i32* %a, align 4, !dbg !15770
  %79 = load float*, float** %data, align 8, !dbg !15771
  %add.ptr86 = getelementptr inbounds float, float* %79, i64 3, !dbg !15771
  store float* %add.ptr86, float** %data, align 8, !dbg !15771
  %80 = load float*, float** %nors, align 8, !dbg !15772
  %add.ptr87 = getelementptr inbounds float, float* %80, i64 3, !dbg !15772
  store float* %add.ptr87, float** %nors, align 8, !dbg !15772
  br label %for.cond, !dbg !15773, !llvm.loop !15774

for.end:                                          ; preds = %for.cond
  %81 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15776
  %index88 = getelementptr inbounds %struct.DispList, %struct.DispList* %81, i32 0, i32 10, !dbg !15777
  %82 = load i32*, i32** %index88, align 8, !dbg !15777
  store i32* %82, i32** %index, align 8, !dbg !15778
  store i32 0, i32* %a, align 4, !dbg !15779
  br label %for.cond89, !dbg !15781

for.cond89:                                       ; preds = %for.inc175, %for.end
  %83 = load i32, i32* %a, align 4, !dbg !15782
  %84 = load %struct.DispList*, %struct.DispList** %dl, align 8, !dbg !15784
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %84, i32 0, i32 4, !dbg !15785
  %85 = load i32, i32* %parts, align 4, !dbg !15785
  %cmp90 = icmp slt i32 %83, %85, !dbg !15786
  br i1 %cmp90, label %for.body92, label %for.end178, !dbg !15787

for.body92:                                       ; preds = %for.cond89
  %86 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15788
  %87 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15790
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %87, i32 0, i32 11, !dbg !15791
  %88 = load i32, i32* %totvlak, align 4, !dbg !15792
  %inc93 = add nsw i32 %88, 1, !dbg !15792
  store i32 %inc93, i32* %totvlak, align 4, !dbg !15792
  %call94 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %86, i32 %88), !dbg !15793
  store %struct.VlakRen* %call94, %struct.VlakRen** %vlr, align 8, !dbg !15794
  %89 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15795
  %90 = load i32*, i32** %index, align 8, !dbg !15796
  %arrayidx95 = getelementptr inbounds i32, i32* %90, i64 0, !dbg !15796
  %91 = load i32, i32* %arrayidx95, align 4, !dbg !15796
  %call96 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %89, i32 %91), !dbg !15797
  %92 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15798
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %92, i32 0, i32 0, !dbg !15799
  store %struct.VertRen* %call96, %struct.VertRen** %v1, align 8, !dbg !15800
  %93 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15801
  %94 = load i32*, i32** %index, align 8, !dbg !15802
  %arrayidx97 = getelementptr inbounds i32, i32* %94, i64 1, !dbg !15802
  %95 = load i32, i32* %arrayidx97, align 4, !dbg !15802
  %call98 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %93, i32 %95), !dbg !15803
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15804
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %96, i32 0, i32 1, !dbg !15805
  store %struct.VertRen* %call98, %struct.VertRen** %v2, align 8, !dbg !15806
  %97 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15807
  %98 = load i32*, i32** %index, align 8, !dbg !15808
  %arrayidx99 = getelementptr inbounds i32, i32* %98, i64 2, !dbg !15808
  %99 = load i32, i32* %arrayidx99, align 4, !dbg !15808
  %call100 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %97, i32 %99), !dbg !15809
  %100 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15810
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %100, i32 0, i32 2, !dbg !15811
  store %struct.VertRen* %call100, %struct.VertRen** %v3, align 8, !dbg !15812
  %101 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15813
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %101, i32 0, i32 3, !dbg !15814
  store %struct.VertRen* null, %struct.VertRen** %v4, align 8, !dbg !15815
  %102 = load i32, i32* %negative_scale, align 4, !dbg !15816
  %tobool101 = icmp ne i32 %102, 0, !dbg !15816
  br i1 %tobool101, label %if.then102, label %if.else, !dbg !15818

if.then102:                                       ; preds = %for.body92
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15819
  %n103 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 4, !dbg !15820
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %n103, i64 0, i64 0, !dbg !15819
  %104 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15821
  %v1105 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %104, i32 0, i32 0, !dbg !15822
  %105 = load %struct.VertRen*, %struct.VertRen** %v1105, align 8, !dbg !15822
  %co106 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %105, i32 0, i32 0, !dbg !15823
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co106, i64 0, i64 0, !dbg !15821
  %106 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15824
  %v2108 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %106, i32 0, i32 1, !dbg !15825
  %107 = load %struct.VertRen*, %struct.VertRen** %v2108, align 8, !dbg !15825
  %co109 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %107, i32 0, i32 0, !dbg !15826
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %co109, i64 0, i64 0, !dbg !15824
  %108 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15827
  %v3111 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %108, i32 0, i32 2, !dbg !15828
  %109 = load %struct.VertRen*, %struct.VertRen** %v3111, align 8, !dbg !15828
  %co112 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %109, i32 0, i32 0, !dbg !15829
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %co112, i64 0, i64 0, !dbg !15827
  %call114 = call float @normal_tri_v3(float* %arraydecay104, float* %arraydecay107, float* %arraydecay110, float* %arraydecay113), !dbg !15830
  br label %if.end127, !dbg !15830

if.else:                                          ; preds = %for.body92
  %110 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15831
  %n115 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %110, i32 0, i32 4, !dbg !15832
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %n115, i64 0, i64 0, !dbg !15831
  %111 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15833
  %v3117 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %111, i32 0, i32 2, !dbg !15834
  %112 = load %struct.VertRen*, %struct.VertRen** %v3117, align 8, !dbg !15834
  %co118 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %112, i32 0, i32 0, !dbg !15835
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %co118, i64 0, i64 0, !dbg !15833
  %113 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15836
  %v2120 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %113, i32 0, i32 1, !dbg !15837
  %114 = load %struct.VertRen*, %struct.VertRen** %v2120, align 8, !dbg !15837
  %co121 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %114, i32 0, i32 0, !dbg !15838
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %co121, i64 0, i64 0, !dbg !15836
  %115 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15839
  %v1123 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %115, i32 0, i32 0, !dbg !15840
  %116 = load %struct.VertRen*, %struct.VertRen** %v1123, align 8, !dbg !15840
  %co124 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %116, i32 0, i32 0, !dbg !15841
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %co124, i64 0, i64 0, !dbg !15839
  %call126 = call float @normal_tri_v3(float* %arraydecay116, float* %arraydecay119, float* %arraydecay122, float* %arraydecay125), !dbg !15842
  br label %if.end127

if.end127:                                        ; preds = %if.else, %if.then102
  %117 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !15843
  %118 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15844
  %mat128 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %118, i32 0, i32 5, !dbg !15845
  store %struct.Material* %117, %struct.Material** %mat128, align 8, !dbg !15846
  %119 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15847
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %119, i32 0, i32 7, !dbg !15848
  store i8 1, i8* %flag, align 1, !dbg !15849
  %120 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15850
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %120, i32 0, i32 8, !dbg !15851
  store i8 0, i8* %ec, align 2, !dbg !15852
  %121 = load i32*, i32** %index, align 8, !dbg !15853
  %arrayidx129 = getelementptr inbounds i32, i32* %121, i64 3, !dbg !15853
  %122 = load i32, i32* %arrayidx129, align 4, !dbg !15853
  %tobool130 = icmp ne i32 %122, 0, !dbg !15853
  br i1 %tobool130, label %land.lhs.true, label %if.end174, !dbg !15855

land.lhs.true:                                    ; preds = %if.end127
  %123 = load i32*, i32** %index, align 8, !dbg !15856
  %arrayidx131 = getelementptr inbounds i32, i32* %123, i64 3, !dbg !15856
  %124 = load i32, i32* %arrayidx131, align 4, !dbg !15856
  %125 = load i32*, i32** %index, align 8, !dbg !15857
  %arrayidx132 = getelementptr inbounds i32, i32* %125, i64 2, !dbg !15857
  %126 = load i32, i32* %arrayidx132, align 4, !dbg !15857
  %cmp133 = icmp ne i32 %124, %126, !dbg !15858
  br i1 %cmp133, label %if.then135, label %if.end174, !dbg !15859

if.then135:                                       ; preds = %land.lhs.true
  %127 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15860
  %128 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15862
  %totvlak136 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %128, i32 0, i32 11, !dbg !15863
  %129 = load i32, i32* %totvlak136, align 4, !dbg !15864
  %inc137 = add nsw i32 %129, 1, !dbg !15864
  store i32 %inc137, i32* %totvlak136, align 4, !dbg !15864
  %call138 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %127, i32 %129), !dbg !15865
  store %struct.VlakRen* %call138, %struct.VlakRen** %vlr1, align 8, !dbg !15866
  %130 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15867
  %index139 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %130, i32 0, i32 9, !dbg !15868
  %131 = load i32, i32* %index139, align 4, !dbg !15868
  store i32 %131, i32* %vlakindex, align 4, !dbg !15869
  %132 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15870
  %133 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !15871
  %134 = bitcast %struct.VlakRen* %132 to i8*, !dbg !15872
  %135 = bitcast %struct.VlakRen* %133 to i8*, !dbg !15872
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 64, i1 false), !dbg !15872
  %136 = load i32, i32* %vlakindex, align 4, !dbg !15873
  %137 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15874
  %index140 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %137, i32 0, i32 9, !dbg !15875
  store i32 %136, i32* %index140, align 4, !dbg !15876
  %138 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15877
  %v3141 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %138, i32 0, i32 2, !dbg !15878
  %139 = load %struct.VertRen*, %struct.VertRen** %v3141, align 8, !dbg !15878
  %140 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15879
  %v2142 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %140, i32 0, i32 1, !dbg !15880
  store %struct.VertRen* %139, %struct.VertRen** %v2142, align 8, !dbg !15881
  %141 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15882
  %142 = load i32*, i32** %index, align 8, !dbg !15883
  %arrayidx143 = getelementptr inbounds i32, i32* %142, i64 3, !dbg !15883
  %143 = load i32, i32* %arrayidx143, align 4, !dbg !15883
  %call144 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %141, i32 %143), !dbg !15884
  %144 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15885
  %v3145 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %144, i32 0, i32 2, !dbg !15886
  store %struct.VertRen* %call144, %struct.VertRen** %v3145, align 8, !dbg !15887
  %145 = load i32, i32* %negative_scale, align 4, !dbg !15888
  %tobool146 = icmp ne i32 %145, 0, !dbg !15888
  br i1 %tobool146, label %if.then147, label %if.else160, !dbg !15890

if.then147:                                       ; preds = %if.then135
  %146 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15891
  %n148 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %146, i32 0, i32 4, !dbg !15892
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %n148, i64 0, i64 0, !dbg !15891
  %147 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15893
  %v1150 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %147, i32 0, i32 0, !dbg !15894
  %148 = load %struct.VertRen*, %struct.VertRen** %v1150, align 8, !dbg !15894
  %co151 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %148, i32 0, i32 0, !dbg !15895
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %co151, i64 0, i64 0, !dbg !15893
  %149 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15896
  %v2153 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %149, i32 0, i32 1, !dbg !15897
  %150 = load %struct.VertRen*, %struct.VertRen** %v2153, align 8, !dbg !15897
  %co154 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %150, i32 0, i32 0, !dbg !15898
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co154, i64 0, i64 0, !dbg !15896
  %151 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15899
  %v3156 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %151, i32 0, i32 2, !dbg !15900
  %152 = load %struct.VertRen*, %struct.VertRen** %v3156, align 8, !dbg !15900
  %co157 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %152, i32 0, i32 0, !dbg !15901
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %co157, i64 0, i64 0, !dbg !15899
  %call159 = call float @normal_tri_v3(float* %arraydecay149, float* %arraydecay152, float* %arraydecay155, float* %arraydecay158), !dbg !15902
  br label %if.end173, !dbg !15902

if.else160:                                       ; preds = %if.then135
  %153 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15903
  %n161 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %153, i32 0, i32 4, !dbg !15904
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %n161, i64 0, i64 0, !dbg !15903
  %154 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15905
  %v3163 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %154, i32 0, i32 2, !dbg !15906
  %155 = load %struct.VertRen*, %struct.VertRen** %v3163, align 8, !dbg !15906
  %co164 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %155, i32 0, i32 0, !dbg !15907
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %co164, i64 0, i64 0, !dbg !15905
  %156 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15908
  %v2166 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %156, i32 0, i32 1, !dbg !15909
  %157 = load %struct.VertRen*, %struct.VertRen** %v2166, align 8, !dbg !15909
  %co167 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %157, i32 0, i32 0, !dbg !15910
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %co167, i64 0, i64 0, !dbg !15908
  %158 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !15911
  %v1169 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %158, i32 0, i32 0, !dbg !15912
  %159 = load %struct.VertRen*, %struct.VertRen** %v1169, align 8, !dbg !15912
  %co170 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %159, i32 0, i32 0, !dbg !15913
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %co170, i64 0, i64 0, !dbg !15911
  %call172 = call float @normal_tri_v3(float* %arraydecay162, float* %arraydecay165, float* %arraydecay168, float* %arraydecay171), !dbg !15914
  br label %if.end173

if.end173:                                        ; preds = %if.else160, %if.then147
  br label %if.end174, !dbg !15915

if.end174:                                        ; preds = %if.end173, %land.lhs.true, %if.end127
  br label %for.inc175, !dbg !15916

for.inc175:                                       ; preds = %if.end174
  %160 = load i32, i32* %a, align 4, !dbg !15917
  %inc176 = add nsw i32 %160, 1, !dbg !15917
  store i32 %inc176, i32* %a, align 4, !dbg !15917
  %161 = load i32*, i32** %index, align 8, !dbg !15918
  %add.ptr177 = getelementptr inbounds i32, i32* %161, i64 4, !dbg !15918
  store i32* %add.ptr177, i32** %index, align 8, !dbg !15918
  br label %for.cond89, !dbg !15919, !llvm.loop !15920

for.end178:                                       ; preds = %for.cond89
  call void @BKE_displist_free(%struct.ListBase* %dispbase), !dbg !15922
  br label %return, !dbg !15923

return:                                           ; preds = %for.end178, %if.then20, %if.then
  ret void, !dbg !15923
}

; Function Attrs: noinline nounwind uwtable
define internal void @finalize_render_object(%struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset) #0 !dbg !15924 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %ob = alloca %struct.Object*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %sbound = alloca %struct.StrandBound*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %smin = alloca [3 x float], align 4
  %smax = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %width = alloca float, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !15925, metadata !DIExpression()), !dbg !15926
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !15927, metadata !DIExpression()), !dbg !15928
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !15931, metadata !DIExpression()), !dbg !15932
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15933
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !15934
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !15934
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !15932
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !15935, metadata !DIExpression()), !dbg !15936
  store %struct.VertRen* null, %struct.VertRen** %ver, align 8, !dbg !15936
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !15937, metadata !DIExpression()), !dbg !15938
  store %struct.StrandRen* null, %struct.StrandRen** %strand, align 8, !dbg !15938
  call void @llvm.dbg.declare(metadata %struct.StrandBound** %sbound, metadata !15939, metadata !DIExpression()), !dbg !15940
  store %struct.StrandBound* null, %struct.StrandBound** %sbound, align 8, !dbg !15940
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !15941, metadata !DIExpression()), !dbg !15942
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !15943, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.declare(metadata [3 x float]* %smin, metadata !15945, metadata !DIExpression()), !dbg !15946
  call void @llvm.dbg.declare(metadata [3 x float]* %smax, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.declare(metadata i32* %a, metadata !15949, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.declare(metadata i32* %b, metadata !15951, metadata !DIExpression()), !dbg !15952
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15953
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 10, !dbg !15955
  %3 = load i32, i32* %totvert, align 8, !dbg !15955
  %tobool = icmp ne i32 %3, 0, !dbg !15953
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15956

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15957
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 11, !dbg !15958
  %5 = load i32, i32* %totvlak, align 4, !dbg !15958
  %tobool2 = icmp ne i32 %5, 0, !dbg !15957
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !15959

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15960
  %tothalo = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %6, i32 0, i32 13, !dbg !15961
  %7 = load i32, i32* %tothalo, align 4, !dbg !15961
  %tobool4 = icmp ne i32 %7, 0, !dbg !15960
  br i1 %tobool4, label %if.then, label %lor.lhs.false5, !dbg !15962

lor.lhs.false5:                                   ; preds = %lor.lhs.false3
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15963
  %totstrand = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 12, !dbg !15964
  %9 = load i32, i32* %totstrand, align 8, !dbg !15964
  %tobool6 = icmp ne i32 %9, 0, !dbg !15963
  br i1 %tobool6, label %if.then, label %if.end134, !dbg !15965

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false3, %lor.lhs.false, %entry
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15966
  %type = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 3, !dbg !15969
  %11 = load i16, i16* %type, align 8, !dbg !15969
  %conv = sext i16 %11 to i32, !dbg !15966
  %cmp = icmp ne i32 %conv, 1, !dbg !15970
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15971

land.lhs.true:                                    ; preds = %if.then
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15972
  %13 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15973
  %call = call signext i16 @test_for_displace(%struct.Render* %12, %struct.Object* %13), !dbg !15974
  %conv8 = sext i16 %call to i32, !dbg !15974
  %tobool9 = icmp ne i32 %conv8, 0, !dbg !15974
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !15975

if.then10:                                        ; preds = %land.lhs.true
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15976
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15977
  call void @displace(%struct.Render* %14, %struct.ObjectRen* %15), !dbg !15978
  br label %if.end, !dbg !15978

if.end:                                           ; preds = %if.then10, %land.lhs.true, %if.then
  %16 = load i32, i32* %timeoffset.addr, align 4, !dbg !15979
  %tobool11 = icmp ne i32 %16, 0, !dbg !15979
  br i1 %tobool11, label %if.end133, label %if.then12, !dbg !15981

if.then12:                                        ; preds = %if.end
  %17 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !15982
  %smoothresh = getelementptr inbounds %struct.Object, %struct.Object* %17, i32 0, i32 116, !dbg !15984
  store float 0.000000e+00, float* %smoothresh, align 4, !dbg !15985
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15986
  %r = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 45, !dbg !15988
  %mode = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !15989
  %19 = load i32, i32* %mode, align 8, !dbg !15989
  %and = and i32 %19, 65536, !dbg !15990
  %tobool13 = icmp ne i32 %and, 0, !dbg !15990
  br i1 %tobool13, label %land.lhs.true14, label %if.end20, !dbg !15991

land.lhs.true14:                                  ; preds = %if.then12
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15992
  %r15 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 45, !dbg !15993
  %mode16 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r15, i32 0, i32 47, !dbg !15994
  %21 = load i32, i32* %mode16, align 8, !dbg !15994
  %and17 = and i32 %21, 2, !dbg !15995
  %tobool18 = icmp ne i32 %and17, 0, !dbg !15995
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !15996

if.then19:                                        ; preds = %land.lhs.true14
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !15997
  call void @set_phong_threshold(%struct.ObjectRen* %22), !dbg !15998
  br label %if.end20, !dbg !15998

if.end20:                                         ; preds = %if.then19, %land.lhs.true14, %if.then12
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !15999
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 4, !dbg !16001
  %24 = load i16, i16* %flag, align 8, !dbg !16001
  %conv21 = sext i16 %24 to i32, !dbg !15999
  %and22 = and i32 %conv21, 64, !dbg !16002
  %tobool23 = icmp ne i32 %and22, 0, !dbg !16002
  br i1 %tobool23, label %land.lhs.true24, label %if.else, !dbg !16003

land.lhs.true24:                                  ; preds = %if.end20
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16004
  %r25 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 45, !dbg !16005
  %bake_quad_split = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r25, i32 0, i32 77, !dbg !16006
  %26 = load i16, i16* %bake_quad_split, align 2, !dbg !16006
  %conv26 = sext i16 %26 to i32, !dbg !16004
  %cmp27 = icmp ne i32 %conv26, 0, !dbg !16007
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !16008

if.then29:                                        ; preds = %land.lhs.true24
  %27 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16009
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16011
  %r30 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 45, !dbg !16012
  %bake_quad_split31 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r30, i32 0, i32 77, !dbg !16013
  %29 = load i16, i16* %bake_quad_split31, align 2, !dbg !16013
  %conv32 = sext i16 %29 to i32, !dbg !16011
  call void @split_quads(%struct.ObjectRen* %27, i32 %conv32), !dbg !16014
  br label %if.end49, !dbg !16015

if.else:                                          ; preds = %land.lhs.true24, %if.end20
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16016
  %scene = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 44, !dbg !16018
  %31 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !16018
  %32 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !16019
  %call33 = call zeroext i8 @BKE_object_is_animated(%struct.Scene* %31, %struct.Object* %32), !dbg !16020
  %tobool34 = icmp ne i8 %call33, 0, !dbg !16020
  br i1 %tobool34, label %if.then35, label %if.else36, !dbg !16021

if.then35:                                        ; preds = %if.else
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16022
  call void @split_quads(%struct.ObjectRen* %33, i32 1), !dbg !16023
  br label %if.end48, !dbg !16023

if.else36:                                        ; preds = %if.else
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16024
  %r37 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 45, !dbg !16027
  %mode38 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r37, i32 0, i32 47, !dbg !16028
  %35 = load i32, i32* %mode38, align 8, !dbg !16028
  %and39 = and i32 %35, 16777216, !dbg !16029
  %tobool40 = icmp ne i32 %and39, 0, !dbg !16029
  br i1 %tobool40, label %land.rhs, label %land.end, !dbg !16030

land.rhs:                                         ; preds = %if.else36
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16031
  %r41 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 45, !dbg !16032
  %simplify_flag = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r41, i32 0, i32 95, !dbg !16033
  %37 = load i32, i32* %simplify_flag, align 8, !dbg !16033
  %and42 = and i32 %37, 1, !dbg !16034
  %tobool43 = icmp ne i32 %and42, 0, !dbg !16030
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else36
  %38 = phi i1 [ false, %if.else36 ], [ %tobool43, %land.rhs ], !dbg !16035
  %land.ext = zext i1 %38 to i32, !dbg !16030
  %cmp44 = icmp eq i32 %land.ext, 0, !dbg !16036
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !16037

if.then46:                                        ; preds = %land.end
  %39 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16038
  call void @check_non_flat_quads(%struct.ObjectRen* %39), !dbg !16039
  br label %if.end47, !dbg !16039

if.end47:                                         ; preds = %if.then46, %land.end
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then35
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then29
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16040
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16041
  call void @set_fullsample_trace_flag(%struct.Render* %40, %struct.ObjectRen* %41), !dbg !16042
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !16043
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !16043
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !16043
  store float 0x46293E5940000000, float* %arrayidx50, align 4, !dbg !16043
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16043
  store float 0x46293E5940000000, float* %arrayidx51, align 4, !dbg !16043
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !16043
  store float 0xC6293E5940000000, float* %arrayidx52, align 4, !dbg !16043
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !16043
  store float 0xC6293E5940000000, float* %arrayidx53, align 4, !dbg !16043
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16043
  store float 0xC6293E5940000000, float* %arrayidx54, align 4, !dbg !16043
  store i32 0, i32* %a, align 4, !dbg !16045
  br label %for.cond, !dbg !16047

for.cond:                                         ; preds = %for.inc, %if.end49
  %42 = load i32, i32* %a, align 4, !dbg !16048
  %43 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16050
  %totvert55 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %43, i32 0, i32 10, !dbg !16051
  %44 = load i32, i32* %totvert55, align 8, !dbg !16051
  %cmp56 = icmp slt i32 %42, %44, !dbg !16052
  br i1 %cmp56, label %for.body, label %for.end, !dbg !16053

for.body:                                         ; preds = %for.cond
  %45 = load i32, i32* %a, align 4, !dbg !16054
  %and58 = and i32 %45, 255, !dbg !16057
  %cmp59 = icmp eq i32 %and58, 0, !dbg !16058
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !16059

if.then61:                                        ; preds = %for.body
  %46 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16060
  %vertnodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %46, i32 0, i32 18, !dbg !16061
  %47 = load %struct.VertTableNode*, %struct.VertTableNode** %vertnodes, align 8, !dbg !16061
  %48 = load i32, i32* %a, align 4, !dbg !16062
  %shr = ashr i32 %48, 8, !dbg !16063
  %idxprom = sext i32 %shr to i64, !dbg !16060
  %arrayidx62 = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %47, i64 %idxprom, !dbg !16060
  %vert = getelementptr inbounds %struct.VertTableNode, %struct.VertTableNode* %arrayidx62, i32 0, i32 0, !dbg !16064
  %49 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !16064
  store %struct.VertRen* %49, %struct.VertRen** %ver, align 8, !dbg !16065
  br label %if.end64, !dbg !16066

if.else63:                                        ; preds = %for.body
  %50 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !16067
  %incdec.ptr = getelementptr inbounds %struct.VertRen, %struct.VertRen* %50, i32 1, !dbg !16067
  store %struct.VertRen* %incdec.ptr, %struct.VertRen** %ver, align 8, !dbg !16067
  br label %if.end64

if.end64:                                         ; preds = %if.else63, %if.then61
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16068
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16069
  %51 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !16070
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %51, i32 0, i32 0, !dbg !16071
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !16070
  call void @minmax_v3v3_v3(float* %arraydecay, float* %arraydecay65, float* %arraydecay66), !dbg !16072
  br label %for.inc, !dbg !16073

for.inc:                                          ; preds = %if.end64
  %52 = load i32, i32* %a, align 4, !dbg !16074
  %inc = add nsw i32 %52, 1, !dbg !16074
  store i32 %inc, i32* %a, align 4, !dbg !16074
  br label %for.cond, !dbg !16075, !llvm.loop !16076

for.end:                                          ; preds = %for.cond
  %53 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16078
  %strandbuf = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %53, i32 0, i32 22, !dbg !16080
  %54 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf, align 8, !dbg !16080
  %tobool67 = icmp ne %struct.StrandBuffer* %54, null, !dbg !16078
  br i1 %tobool67, label %if.then68, label %if.end124, !dbg !16081

if.then68:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata float* %width, metadata !16082, metadata !DIExpression()), !dbg !16084
  %55 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16085
  %strandbuf69 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %55, i32 0, i32 22, !dbg !16087
  %56 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf69, align 8, !dbg !16087
  %flag70 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %56, i32 0, i32 11, !dbg !16088
  %57 = load i32, i32* %flag70, align 8, !dbg !16088
  %and71 = and i32 %57, 2, !dbg !16089
  %tobool72 = icmp ne i32 %and71, 0, !dbg !16089
  br i1 %tobool72, label %if.then73, label %if.else79, !dbg !16090

if.then73:                                        ; preds = %if.then68
  %58 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16091
  %strandbuf74 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %58, i32 0, i32 22, !dbg !16092
  %59 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf74, align 8, !dbg !16092
  %ma = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %59, i32 0, i32 7, !dbg !16093
  %60 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !16093
  %strand_sta = getelementptr inbounds %struct.Material, %struct.Material* %60, i32 0, i32 63, !dbg !16094
  %61 = load float, float* %strand_sta, align 4, !dbg !16094
  %62 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16095
  %strandbuf75 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %62, i32 0, i32 22, !dbg !16096
  %63 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf75, align 8, !dbg !16096
  %ma76 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %63, i32 0, i32 7, !dbg !16097
  %64 = load %struct.Material*, %struct.Material** %ma76, align 8, !dbg !16097
  %strand_end = getelementptr inbounds %struct.Material, %struct.Material* %64, i32 0, i32 64, !dbg !16098
  %65 = load float, float* %strand_end, align 8, !dbg !16098
  %call77 = call float @max_ff(float %61, float %65), !dbg !16099
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16100
  %strandbuf78 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 22, !dbg !16101
  %67 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf78, align 8, !dbg !16101
  %maxwidth = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %67, i32 0, i32 16, !dbg !16102
  store float %call77, float* %maxwidth, align 4, !dbg !16103
  br label %if.end82, !dbg !16100

if.else79:                                        ; preds = %if.then68
  %68 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16104
  %strandbuf80 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %68, i32 0, i32 22, !dbg !16105
  %69 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf80, align 8, !dbg !16105
  %maxwidth81 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %69, i32 0, i32 16, !dbg !16106
  store float 0.000000e+00, float* %maxwidth81, align 4, !dbg !16107
  br label %if.end82

if.end82:                                         ; preds = %if.else79, %if.then73
  %70 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16108
  %strandbuf83 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %70, i32 0, i32 22, !dbg !16109
  %71 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf83, align 8, !dbg !16109
  %maxwidth84 = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %71, i32 0, i32 16, !dbg !16110
  %72 = load float, float* %maxwidth84, align 4, !dbg !16110
  store float %72, float* %width, align 4, !dbg !16111
  %73 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16112
  %strandbuf85 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %73, i32 0, i32 22, !dbg !16113
  %74 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf85, align 8, !dbg !16113
  %bound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %74, i32 0, i32 3, !dbg !16114
  %75 = load %struct.StrandBound*, %struct.StrandBound** %bound, align 8, !dbg !16114
  store %struct.StrandBound* %75, %struct.StrandBound** %sbound, align 8, !dbg !16115
  store i32 0, i32* %b, align 4, !dbg !16116
  br label %for.cond86, !dbg !16118

for.cond86:                                       ; preds = %for.inc120, %if.end82
  %76 = load i32, i32* %b, align 4, !dbg !16119
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16121
  %strandbuf87 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %77, i32 0, i32 22, !dbg !16122
  %78 = load %struct.StrandBuffer*, %struct.StrandBuffer** %strandbuf87, align 8, !dbg !16122
  %totbound = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %78, i32 0, i32 5, !dbg !16123
  %79 = load i32, i32* %totbound, align 4, !dbg !16123
  %cmp88 = icmp slt i32 %76, %79, !dbg !16124
  br i1 %cmp88, label %for.body90, label %for.end123, !dbg !16125

for.body90:                                       ; preds = %for.cond86
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 2, !dbg !16126
  store float 0x46293E5940000000, float* %arrayidx91, align 4, !dbg !16126
  %arrayidx92 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 1, !dbg !16126
  store float 0x46293E5940000000, float* %arrayidx92, align 4, !dbg !16126
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 0, !dbg !16126
  store float 0x46293E5940000000, float* %arrayidx93, align 4, !dbg !16126
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 2, !dbg !16126
  store float 0xC6293E5940000000, float* %arrayidx94, align 4, !dbg !16126
  %arrayidx95 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 1, !dbg !16126
  store float 0xC6293E5940000000, float* %arrayidx95, align 4, !dbg !16126
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 0, !dbg !16126
  store float 0xC6293E5940000000, float* %arrayidx96, align 4, !dbg !16126
  %80 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !16129
  %start = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %80, i32 0, i32 0, !dbg !16131
  %81 = load i32, i32* %start, align 4, !dbg !16131
  store i32 %81, i32* %a, align 4, !dbg !16132
  br label %for.cond97, !dbg !16133

for.cond97:                                       ; preds = %for.inc104, %for.body90
  %82 = load i32, i32* %a, align 4, !dbg !16134
  %83 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !16136
  %end = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %83, i32 0, i32 1, !dbg !16137
  %84 = load i32, i32* %end, align 4, !dbg !16137
  %cmp98 = icmp slt i32 %82, %84, !dbg !16138
  br i1 %cmp98, label %for.body100, label %for.end106, !dbg !16139

for.body100:                                      ; preds = %for.cond97
  %85 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16140
  %86 = load i32, i32* %a, align 4, !dbg !16142
  %call101 = call %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen* %85, i32 %86), !dbg !16143
  store %struct.StrandRen* %call101, %struct.StrandRen** %strand, align 8, !dbg !16144
  %87 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !16145
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 0, !dbg !16146
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 0, !dbg !16147
  %88 = load float, float* %width, align 4, !dbg !16148
  call void @strand_minmax(%struct.StrandRen* %87, float* %arraydecay102, float* %arraydecay103, float %88), !dbg !16149
  br label %for.inc104, !dbg !16150

for.inc104:                                       ; preds = %for.body100
  %89 = load i32, i32* %a, align 4, !dbg !16151
  %inc105 = add nsw i32 %89, 1, !dbg !16151
  store i32 %inc105, i32* %a, align 4, !dbg !16151
  br label %for.cond97, !dbg !16152, !llvm.loop !16153

for.end106:                                       ; preds = %for.cond97
  %90 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !16155
  %boundbox = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %90, i32 0, i32 2, !dbg !16156
  %arrayidx107 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox, i64 0, i64 0, !dbg !16155
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx107, i64 0, i64 0, !dbg !16155
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 0, !dbg !16157
  call void @copy_v3_v3(float* %arraydecay108, float* %arraydecay109), !dbg !16158
  %91 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !16159
  %boundbox110 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %91, i32 0, i32 2, !dbg !16160
  %arrayidx111 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox110, i64 0, i64 1, !dbg !16159
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx111, i64 0, i64 0, !dbg !16159
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 0, !dbg !16161
  call void @copy_v3_v3(float* %arraydecay112, float* %arraydecay113), !dbg !16162
  %arraydecay114 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16163
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16164
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %smin, i64 0, i64 0, !dbg !16165
  call void @minmax_v3v3_v3(float* %arraydecay114, float* %arraydecay115, float* %arraydecay116), !dbg !16166
  %arraydecay117 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16167
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16168
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %smax, i64 0, i64 0, !dbg !16169
  call void @minmax_v3v3_v3(float* %arraydecay117, float* %arraydecay118, float* %arraydecay119), !dbg !16170
  br label %for.inc120, !dbg !16171

for.inc120:                                       ; preds = %for.end106
  %92 = load i32, i32* %b, align 4, !dbg !16172
  %inc121 = add nsw i32 %92, 1, !dbg !16172
  store i32 %inc121, i32* %b, align 4, !dbg !16172
  %93 = load %struct.StrandBound*, %struct.StrandBound** %sbound, align 8, !dbg !16173
  %incdec.ptr122 = getelementptr inbounds %struct.StrandBound, %struct.StrandBound* %93, i32 1, !dbg !16173
  store %struct.StrandBound* %incdec.ptr122, %struct.StrandBound** %sbound, align 8, !dbg !16173
  br label %for.cond86, !dbg !16174, !llvm.loop !16175

for.end123:                                       ; preds = %for.cond86
  br label %if.end124, !dbg !16177

if.end124:                                        ; preds = %for.end123, %for.end
  %94 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16178
  %boundbox125 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %94, i32 0, i32 9, !dbg !16179
  %arrayidx126 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox125, i64 0, i64 0, !dbg !16178
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx126, i64 0, i64 0, !dbg !16178
  %arraydecay128 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !16180
  call void @copy_v3_v3(float* %arraydecay127, float* %arraydecay128), !dbg !16181
  %95 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16182
  %boundbox129 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %95, i32 0, i32 9, !dbg !16183
  %arrayidx130 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %boundbox129, i64 0, i64 1, !dbg !16182
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx130, i64 0, i64 0, !dbg !16182
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !16184
  call void @copy_v3_v3(float* %arraydecay131, float* %arraydecay132), !dbg !16185
  br label %if.end133, !dbg !16186

if.end133:                                        ; preds = %if.end124, %if.end
  br label %if.end134, !dbg !16187

if.end134:                                        ; preds = %if.end133, %lor.lhs.false5
  ret void, !dbg !16188
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #4

declare dso_local %struct.ParticleSystemModifierData* @psys_get_modifier(%struct.Object*, %struct.ParticleSystem*) #4

declare dso_local void @psys_count_keyed_targets(%struct.ParticleSimulationData*) #4

declare dso_local %struct.RNG* @BLI_rng_new(i32) #4

declare dso_local void @RE_set_customdata_names(%struct.ObjectRen*, %struct.CustomData*) #4

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #4

declare dso_local i32 @CustomData_get_named_layer_index(%struct.CustomData*, i32, i8*) #4

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #4

declare dso_local i32 @CustomData_get_active_layer_index(%struct.CustomData*, i32) #4

declare dso_local void @transpose_m3([3 x float]*) #4

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @get_object_orco(%struct.Render* %re, i8* %ob) #0 !dbg !16189 {
entry:
  %retval = alloca float*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca i8*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !16192, metadata !DIExpression()), !dbg !16193
  store i8* %ob, i8** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ob.addr, metadata !16194, metadata !DIExpression()), !dbg !16195
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16196
  %orco_hash = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 73, !dbg !16198
  %1 = load %struct.GHash*, %struct.GHash** %orco_hash, align 8, !dbg !16198
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !16196
  br i1 %tobool, label %if.end, label %if.then, !dbg !16199

if.then:                                          ; preds = %entry
  store float* null, float** %retval, align 8, !dbg !16200
  br label %return, !dbg !16200

if.end:                                           ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16202
  %orco_hash1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 73, !dbg !16203
  %3 = load %struct.GHash*, %struct.GHash** %orco_hash1, align 8, !dbg !16203
  %4 = load i8*, i8** %ob.addr, align 8, !dbg !16204
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %3, i8* %4), !dbg !16205
  %5 = bitcast i8* %call to float*, !dbg !16205
  store float* %5, float** %retval, align 8, !dbg !16206
  br label %return, !dbg !16206

return:                                           ; preds = %if.end, %if.then
  %6 = load float*, float** %retval, align 8, !dbg !16207
  ret float* %6, !dbg !16207
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_object_orco(%struct.Render* %re, i8* %ob, float* %orco) #0 !dbg !16208 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca i8*, align 8
  %orco.addr = alloca float*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !16211, metadata !DIExpression()), !dbg !16212
  store i8* %ob, i8** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ob.addr, metadata !16213, metadata !DIExpression()), !dbg !16214
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !16215, metadata !DIExpression()), !dbg !16216
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16217
  %orco_hash = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 73, !dbg !16219
  %1 = load %struct.GHash*, %struct.GHash** %orco_hash, align 8, !dbg !16219
  %tobool = icmp ne %struct.GHash* %1, null, !dbg !16217
  br i1 %tobool, label %if.end, label %if.then, !dbg !16220

if.then:                                          ; preds = %entry
  %call = call %struct.GHash* @BLI_ghash_ptr_new(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)), !dbg !16221
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16222
  %orco_hash1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 73, !dbg !16223
  store %struct.GHash* %call, %struct.GHash** %orco_hash1, align 8, !dbg !16224
  br label %if.end, !dbg !16222

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16225
  %orco_hash2 = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 73, !dbg !16226
  %4 = load %struct.GHash*, %struct.GHash** %orco_hash2, align 8, !dbg !16226
  %5 = load i8*, i8** %ob.addr, align 8, !dbg !16227
  %6 = load float*, float** %orco.addr, align 8, !dbg !16228
  %7 = bitcast float* %6 to i8*, !dbg !16228
  call void @BLI_ghash_insert(%struct.GHash* %4, i8* %5, i8* %7), !dbg !16229
  ret void, !dbg !16230
}

declare dso_local %struct.StrandBuffer* @RE_addStrandBuffer(%struct.ObjectRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !16231 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !16234, metadata !DIExpression()), !dbg !16235
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !16236, metadata !DIExpression()), !dbg !16237
  %0 = load i32, i32* %b.addr, align 4, !dbg !16238
  %1 = load i32, i32* %a.addr, align 4, !dbg !16239
  %cmp = icmp slt i32 %0, %1, !dbg !16240
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16241

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !16242
  br label %cond.end, !dbg !16241

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !16243
  br label %cond.end, !dbg !16241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !16241
  ret i32 %cond, !dbg !16244
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DM_origindex_mface_mpoly(i32* %index_mf_to_mpoly, i32* %index_mp_to_orig, i32 %i) #0 !dbg !16245 {
entry:
  %index_mf_to_mpoly.addr = alloca i32*, align 8
  %index_mp_to_orig.addr = alloca i32*, align 8
  %i.addr = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %index_mf_to_mpoly, i32** %index_mf_to_mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mf_to_mpoly.addr, metadata !16248, metadata !DIExpression()), !dbg !16249
  store i32* %index_mp_to_orig, i32** %index_mp_to_orig.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %index_mp_to_orig.addr, metadata !16250, metadata !DIExpression()), !dbg !16251
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16252, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.declare(metadata i32* %j, metadata !16254, metadata !DIExpression()), !dbg !16255
  %0 = load i32*, i32** %index_mf_to_mpoly.addr, align 8, !dbg !16256
  %1 = load i32, i32* %i.addr, align 4, !dbg !16257
  %idxprom = sext i32 %1 to i64, !dbg !16256
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom, !dbg !16256
  %2 = load i32, i32* %arrayidx, align 4, !dbg !16256
  store i32 %2, i32* %j, align 4, !dbg !16255
  %3 = load i32, i32* %j, align 4, !dbg !16258
  %cmp = icmp ne i32 %3, -1, !dbg !16259
  br i1 %cmp, label %cond.true, label %cond.false4, !dbg !16260

cond.true:                                        ; preds = %entry
  %4 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !16261
  %tobool = icmp ne i32* %4, null, !dbg !16261
  br i1 %tobool, label %cond.true1, label %cond.false, !dbg !16261

cond.true1:                                       ; preds = %cond.true
  %5 = load i32*, i32** %index_mp_to_orig.addr, align 8, !dbg !16262
  %6 = load i32, i32* %j, align 4, !dbg !16263
  %idxprom2 = sext i32 %6 to i64, !dbg !16262
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2, !dbg !16262
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !16262
  br label %cond.end, !dbg !16261

cond.false:                                       ; preds = %cond.true
  %8 = load i32, i32* %j, align 4, !dbg !16264
  br label %cond.end, !dbg !16261

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %7, %cond.true1 ], [ %8, %cond.false ], !dbg !16261
  br label %cond.end5, !dbg !16260

cond.false4:                                      ; preds = %entry
  br label %cond.end5, !dbg !16260

cond.end5:                                        ; preds = %cond.false4, %cond.end
  %cond6 = phi i32 [ %cond, %cond.end ], [ -1, %cond.false4 ], !dbg !16260
  ret i32 %cond6, !dbg !16265
}

declare dso_local %struct.LatticeDeformData* @psys_create_lattice_deform_data(%struct.ParticleSimulationData*) #4

declare dso_local float @BLI_rng_get_float(%struct.RNG*) #4

declare dso_local void @psys_particle_on_emitter(%struct.ParticleSystemModifierData*, i32, i32, i32, float*, float, float*, float*, float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @get_particle_uvco_mcol(i16 signext %from, %struct.DerivedMesh* %dm, float* %fuv, i32 %num, %struct.ParticleStrandData* %sd) #0 !dbg !16266 {
entry:
  %from.addr = alloca i16, align 2
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %fuv.addr = alloca float*, align 8
  %num.addr = alloca i32, align 4
  %sd.addr = alloca %struct.ParticleStrandData*, align 8
  %i = alloca i32, align 4
  %mface = alloca %struct.MFace*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mface38 = alloca %struct.MFace*, align 8
  %mc = alloca %struct.MCol*, align 8
  store i16 %from, i16* %from.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %from.addr, metadata !16269, metadata !DIExpression()), !dbg !16270
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !16271, metadata !DIExpression()), !dbg !16272
  store float* %fuv, float** %fuv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fuv.addr, metadata !16273, metadata !DIExpression()), !dbg !16274
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !16275, metadata !DIExpression()), !dbg !16276
  store %struct.ParticleStrandData* %sd, %struct.ParticleStrandData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleStrandData** %sd.addr, metadata !16277, metadata !DIExpression()), !dbg !16278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16279, metadata !DIExpression()), !dbg !16280
  %0 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16281
  %uvco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %0, i32 0, i32 2, !dbg !16283
  %1 = load float*, float** %uvco, align 8, !dbg !16283
  %tobool = icmp ne float* %1, null, !dbg !16281
  br i1 %tobool, label %land.lhs.true, label %if.end20, !dbg !16284

land.lhs.true:                                    ; preds = %entry
  %2 = load i16, i16* %from.addr, align 2, !dbg !16285
  %conv = sext i16 %2 to i32, !dbg !16285
  %cmp = icmp eq i32 %conv, 1, !dbg !16285
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16285

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load i16, i16* %from.addr, align 2, !dbg !16285
  %conv2 = sext i16 %3 to i32, !dbg !16285
  %cmp3 = icmp eq i32 %conv2, 2, !dbg !16285
  br i1 %cmp3, label %if.then, label %if.end20, !dbg !16286

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !16287
  br label %for.cond, !dbg !16290

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !dbg !16291
  %5 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16293
  %totuv = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %5, i32 0, i32 8, !dbg !16294
  %6 = load i32, i32* %totuv, align 8, !dbg !16294
  %cmp5 = icmp slt i32 %4, %6, !dbg !16295
  br i1 %cmp5, label %for.body, label %for.end, !dbg !16296

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %num.addr, align 4, !dbg !16297
  %cmp7 = icmp ne i32 %7, -1, !dbg !16300
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !16301

if.then9:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !16302, metadata !DIExpression()), !dbg !16304
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16305
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 48, !dbg !16306
  %9 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !16306
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16307
  %11 = load i32, i32* %num.addr, align 4, !dbg !16308
  %call = call i8* %9(%struct.DerivedMesh* %10, i32 %11, i32 4), !dbg !16305
  %12 = bitcast i8* %call to %struct.MFace*, !dbg !16305
  store %struct.MFace* %12, %struct.MFace** %mface, align 8, !dbg !16304
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !16309, metadata !DIExpression()), !dbg !16310
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16311
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 2, !dbg !16312
  %14 = load i32, i32* %i, align 4, !dbg !16313
  %call10 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData, i32 5, i32 %14), !dbg !16314
  %15 = bitcast i8* %call10 to %struct.MTFace*, !dbg !16315
  store %struct.MTFace* %15, %struct.MTFace** %mtface, align 8, !dbg !16310
  %16 = load i32, i32* %num.addr, align 4, !dbg !16316
  %17 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !16317
  %idx.ext = sext i32 %16 to i64, !dbg !16317
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %17, i64 %idx.ext, !dbg !16317
  store %struct.MTFace* %add.ptr, %struct.MTFace** %mtface, align 8, !dbg !16317
  %18 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !16318
  %19 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !16319
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !16320
  %20 = load i32, i32* %v4, align 4, !dbg !16320
  %21 = load float*, float** %fuv.addr, align 8, !dbg !16321
  %22 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16322
  %uvco11 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %22, i32 0, i32 2, !dbg !16323
  %23 = load float*, float** %uvco11, align 8, !dbg !16323
  %24 = load i32, i32* %i, align 4, !dbg !16324
  %mul = mul nsw i32 2, %24, !dbg !16325
  %idx.ext12 = sext i32 %mul to i64, !dbg !16326
  %add.ptr13 = getelementptr inbounds float, float* %23, i64 %idx.ext12, !dbg !16326
  call void @psys_interpolate_uvs(%struct.MTFace* %18, i32 %20, float* %21, float* %add.ptr13), !dbg !16327
  br label %if.end, !dbg !16328

if.else:                                          ; preds = %for.body
  %25 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16329
  %uvco14 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %25, i32 0, i32 2, !dbg !16331
  %26 = load float*, float** %uvco14, align 8, !dbg !16331
  %27 = load i32, i32* %i, align 4, !dbg !16332
  %mul15 = mul nsw i32 2, %27, !dbg !16333
  %idxprom = sext i32 %mul15 to i64, !dbg !16329
  %arrayidx = getelementptr inbounds float, float* %26, i64 %idxprom, !dbg !16329
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !16334
  %28 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16335
  %uvco16 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %28, i32 0, i32 2, !dbg !16336
  %29 = load float*, float** %uvco16, align 8, !dbg !16336
  %30 = load i32, i32* %i, align 4, !dbg !16337
  %mul17 = mul nsw i32 2, %30, !dbg !16338
  %add = add nsw i32 %mul17, 1, !dbg !16339
  %idxprom18 = sext i32 %add to i64, !dbg !16335
  %arrayidx19 = getelementptr inbounds float, float* %29, i64 %idxprom18, !dbg !16335
  store float 0.000000e+00, float* %arrayidx19, align 4, !dbg !16340
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %for.inc, !dbg !16341

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !16342
  %inc = add nsw i32 %31, 1, !dbg !16342
  store i32 %inc, i32* %i, align 4, !dbg !16342
  br label %for.cond, !dbg !16343, !llvm.loop !16344

for.end:                                          ; preds = %for.cond
  br label %if.end20, !dbg !16346

if.end20:                                         ; preds = %for.end, %lor.lhs.false, %entry
  %32 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16347
  %mcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %32, i32 0, i32 0, !dbg !16349
  %33 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !16349
  %tobool21 = icmp ne %struct.MCol* %33, null, !dbg !16347
  br i1 %tobool21, label %land.lhs.true22, label %if.end58, !dbg !16350

land.lhs.true22:                                  ; preds = %if.end20
  %34 = load i16, i16* %from.addr, align 2, !dbg !16351
  %conv23 = sext i16 %34 to i32, !dbg !16351
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !16351
  br i1 %cmp24, label %if.then30, label %lor.lhs.false26, !dbg !16351

lor.lhs.false26:                                  ; preds = %land.lhs.true22
  %35 = load i16, i16* %from.addr, align 2, !dbg !16351
  %conv27 = sext i16 %35 to i32, !dbg !16351
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !16351
  br i1 %cmp28, label %if.then30, label %if.end58, !dbg !16352

if.then30:                                        ; preds = %lor.lhs.false26, %land.lhs.true22
  store i32 0, i32* %i, align 4, !dbg !16353
  br label %for.cond31, !dbg !16356

for.cond31:                                       ; preds = %for.inc55, %if.then30
  %36 = load i32, i32* %i, align 4, !dbg !16357
  %37 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16359
  %totcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %37, i32 0, i32 9, !dbg !16360
  %38 = load i32, i32* %totcol, align 4, !dbg !16360
  %cmp32 = icmp slt i32 %36, %38, !dbg !16361
  br i1 %cmp32, label %for.body34, label %for.end57, !dbg !16362

for.body34:                                       ; preds = %for.cond31
  %39 = load i32, i32* %num.addr, align 4, !dbg !16363
  %cmp35 = icmp ne i32 %39, -1, !dbg !16366
  br i1 %cmp35, label %if.then37, label %if.else50, !dbg !16367

if.then37:                                        ; preds = %for.body34
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface38, metadata !16368, metadata !DIExpression()), !dbg !16370
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16371
  %getTessFaceData39 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 48, !dbg !16372
  %41 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData39, align 8, !dbg !16372
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16373
  %43 = load i32, i32* %num.addr, align 4, !dbg !16374
  %call40 = call i8* %41(%struct.DerivedMesh* %42, i32 %43, i32 4), !dbg !16371
  %44 = bitcast i8* %call40 to %struct.MFace*, !dbg !16371
  store %struct.MFace* %44, %struct.MFace** %mface38, align 8, !dbg !16370
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !16375, metadata !DIExpression()), !dbg !16376
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16377
  %faceData41 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %45, i32 0, i32 2, !dbg !16378
  %46 = load i32, i32* %i, align 4, !dbg !16379
  %call42 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData41, i32 6, i32 %46), !dbg !16380
  %47 = bitcast i8* %call42 to %struct.MCol*, !dbg !16381
  store %struct.MCol* %47, %struct.MCol** %mc, align 8, !dbg !16376
  %48 = load i32, i32* %num.addr, align 4, !dbg !16382
  %mul43 = mul nsw i32 %48, 4, !dbg !16383
  %49 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !16384
  %idx.ext44 = sext i32 %mul43 to i64, !dbg !16384
  %add.ptr45 = getelementptr inbounds %struct.MCol, %struct.MCol* %49, i64 %idx.ext44, !dbg !16384
  store %struct.MCol* %add.ptr45, %struct.MCol** %mc, align 8, !dbg !16384
  %50 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !16385
  %51 = load %struct.MFace*, %struct.MFace** %mface38, align 8, !dbg !16386
  %v446 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 3, !dbg !16387
  %52 = load i32, i32* %v446, align 4, !dbg !16387
  %53 = load float*, float** %fuv.addr, align 8, !dbg !16388
  %54 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16389
  %mcol47 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %54, i32 0, i32 0, !dbg !16390
  %55 = load %struct.MCol*, %struct.MCol** %mcol47, align 8, !dbg !16390
  %56 = load i32, i32* %i, align 4, !dbg !16391
  %idx.ext48 = sext i32 %56 to i64, !dbg !16392
  %add.ptr49 = getelementptr inbounds %struct.MCol, %struct.MCol* %55, i64 %idx.ext48, !dbg !16392
  call void @psys_interpolate_mcol(%struct.MCol* %50, i32 %52, float* %53, %struct.MCol* %add.ptr49), !dbg !16393
  br label %if.end54, !dbg !16394

if.else50:                                        ; preds = %for.body34
  %57 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16395
  %mcol51 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %57, i32 0, i32 0, !dbg !16396
  %58 = load %struct.MCol*, %struct.MCol** %mcol51, align 8, !dbg !16396
  %59 = load i32, i32* %i, align 4, !dbg !16397
  %idxprom52 = sext i32 %59 to i64, !dbg !16395
  %arrayidx53 = getelementptr inbounds %struct.MCol, %struct.MCol* %58, i64 %idxprom52, !dbg !16395
  %60 = bitcast %struct.MCol* %arrayidx53 to i8*, !dbg !16398
  call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 0, i64 4, i1 false), !dbg !16398
  br label %if.end54

if.end54:                                         ; preds = %if.else50, %if.then37
  br label %for.inc55, !dbg !16399

for.inc55:                                        ; preds = %if.end54
  %61 = load i32, i32* %i, align 4, !dbg !16400
  %inc56 = add nsw i32 %61, 1, !dbg !16400
  store i32 %inc56, i32* %i, align 4, !dbg !16400
  br label %for.cond31, !dbg !16401, !llvm.loop !16402

for.end57:                                        ; preds = %for.cond31
  br label %if.end58, !dbg !16404

if.end58:                                         ; preds = %for.end57, %lor.lhs.false26, %if.end20
  ret void, !dbg !16405
}

; Function Attrs: noinline nounwind uwtable
define internal float @psys_frand(%struct.ParticleSystem* %psys, i32 %seed) #0 !dbg !16406 {
entry:
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %seed.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %multiplier = alloca i32, align 4
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !16409, metadata !DIExpression()), !dbg !16410
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !16411, metadata !DIExpression()), !dbg !16412
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !16413, metadata !DIExpression()), !dbg !16414
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16415
  %seed1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 23, !dbg !16416
  %1 = load i32, i32* %seed1, align 4, !dbg !16416
  %rem = srem i32 %1, 1024, !dbg !16417
  %idxprom = sext i32 %rem to i64, !dbg !16418
  %arrayidx = getelementptr inbounds [1024 x i32], [1024 x i32]* @PSYS_FRAND_SEED_OFFSET, i64 0, i64 %idxprom, !dbg !16418
  %2 = load i32, i32* %arrayidx, align 4, !dbg !16418
  store i32 %2, i32* %offset, align 4, !dbg !16414
  call void @llvm.dbg.declare(metadata i32* %multiplier, metadata !16419, metadata !DIExpression()), !dbg !16420
  %3 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !16421
  %seed2 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %3, i32 0, i32 23, !dbg !16422
  %4 = load i32, i32* %seed2, align 4, !dbg !16422
  %rem3 = srem i32 %4, 1024, !dbg !16423
  %idxprom4 = sext i32 %rem3 to i64, !dbg !16424
  %arrayidx5 = getelementptr inbounds [1024 x i32], [1024 x i32]* @PSYS_FRAND_SEED_MULTIPLIER, i64 0, i64 %idxprom4, !dbg !16424
  %5 = load i32, i32* %arrayidx5, align 4, !dbg !16424
  store i32 %5, i32* %multiplier, align 4, !dbg !16420
  %6 = load i32, i32* %offset, align 4, !dbg !16425
  %7 = load i32, i32* %seed.addr, align 4, !dbg !16426
  %8 = load i32, i32* %multiplier, align 4, !dbg !16427
  %mul = mul i32 %7, %8, !dbg !16428
  %add = add i32 %6, %mul, !dbg !16429
  %rem6 = urem i32 %add, 1024, !dbg !16430
  %idxprom7 = zext i32 %rem6 to i64, !dbg !16431
  %arrayidx8 = getelementptr inbounds [1024 x float], [1024 x float]* @PSYS_FRAND_BASE, i64 0, i64 %idxprom7, !dbg !16431
  %9 = load float, float* %arrayidx8, align 4, !dbg !16431
  ret float %9, !dbg !16432
}

declare dso_local float @psys_get_child_time(%struct.ParticleSystem*, %struct.ChildParticle*, float, float*, float*) #4

declare dso_local float @psys_get_child_size(%struct.ParticleSystem*, %struct.ChildParticle*, float, float*) #4

declare dso_local zeroext i8 @psys_render_simplify_params(%struct.ParticleSystem*, %struct.ChildParticle*, float*) #4

declare dso_local %struct.StrandRen* @RE_findOrAddStrand(%struct.ObjectRen*, i32) #4

declare dso_local float* @RE_strandren_get_simplify(%struct.ObjectRen*, %struct.StrandRen*, i32) #4

declare dso_local float* @RE_strandren_get_surfnor(%struct.ObjectRen*, %struct.StrandRen*, i32) #4

declare dso_local i32* @RE_strandren_get_face(%struct.ObjectRen*, %struct.StrandRen*, i32) #4

declare dso_local float* @RE_strandren_get_uv(%struct.ObjectRen*, %struct.StrandRen*, i32, i8**, i32) #4

declare dso_local %struct.MCol* @RE_strandren_get_mcol(%struct.ObjectRen*, %struct.StrandRen*, i32, i8**, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !16433 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16434, metadata !DIExpression()), !dbg !16435
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !16436, metadata !DIExpression()), !dbg !16437
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !16438, metadata !DIExpression()), !dbg !16439
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !16440
  %0 = load float*, float** %b.addr, align 8, !dbg !16441
  %1 = load float*, float** %a.addr, align 8, !dbg !16442
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !16443
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !16444
  %call = call float @len_v3(float* %arraydecay1), !dbg !16445
  ret float %call, !dbg !16446
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !16447 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16450, metadata !DIExpression()), !dbg !16451
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16452, metadata !DIExpression()), !dbg !16453
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !16454, metadata !DIExpression()), !dbg !16455
  %0 = load float*, float** %a.addr, align 8, !dbg !16456
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16456
  %1 = load float, float* %arrayidx, align 4, !dbg !16456
  %2 = load float*, float** %b.addr, align 8, !dbg !16457
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !16457
  %3 = load float, float* %arrayidx1, align 4, !dbg !16457
  %sub = fsub float %1, %3, !dbg !16458
  %4 = load float*, float** %r.addr, align 8, !dbg !16459
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !16459
  store float %sub, float* %arrayidx2, align 4, !dbg !16460
  %5 = load float*, float** %a.addr, align 8, !dbg !16461
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !16461
  %6 = load float, float* %arrayidx3, align 4, !dbg !16461
  %7 = load float*, float** %b.addr, align 8, !dbg !16462
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !16462
  %8 = load float, float* %arrayidx4, align 4, !dbg !16462
  %sub5 = fsub float %6, %8, !dbg !16463
  %9 = load float*, float** %r.addr, align 8, !dbg !16464
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !16464
  store float %sub5, float* %arrayidx6, align 4, !dbg !16465
  %10 = load float*, float** %a.addr, align 8, !dbg !16466
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !16466
  %11 = load float, float* %arrayidx7, align 4, !dbg !16466
  %12 = load float*, float** %b.addr, align 8, !dbg !16467
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !16467
  %13 = load float, float* %arrayidx8, align 4, !dbg !16467
  %sub9 = fsub float %11, %13, !dbg !16468
  %14 = load float*, float** %r.addr, align 8, !dbg !16469
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !16469
  store float %sub9, float* %arrayidx10, align 4, !dbg !16470
  ret void, !dbg !16471
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !16472 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !16473, metadata !DIExpression()), !dbg !16474
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16475, metadata !DIExpression()), !dbg !16476
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !16477, metadata !DIExpression()), !dbg !16478
  %0 = load float*, float** %a.addr, align 8, !dbg !16479
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !16479
  %1 = load float, float* %arrayidx, align 4, !dbg !16479
  %2 = load float*, float** %b.addr, align 8, !dbg !16480
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !16480
  %3 = load float, float* %arrayidx1, align 4, !dbg !16480
  %add = fadd float %1, %3, !dbg !16481
  %4 = load float*, float** %r.addr, align 8, !dbg !16482
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !16482
  store float %add, float* %arrayidx2, align 4, !dbg !16483
  %5 = load float*, float** %a.addr, align 8, !dbg !16484
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !16484
  %6 = load float, float* %arrayidx3, align 4, !dbg !16484
  %7 = load float*, float** %b.addr, align 8, !dbg !16485
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !16485
  %8 = load float, float* %arrayidx4, align 4, !dbg !16485
  %add5 = fadd float %6, %8, !dbg !16486
  %9 = load float*, float** %r.addr, align 8, !dbg !16487
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !16487
  store float %add5, float* %arrayidx6, align 4, !dbg !16488
  %10 = load float*, float** %a.addr, align 8, !dbg !16489
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !16489
  %11 = load float, float* %arrayidx7, align 4, !dbg !16489
  %12 = load float*, float** %b.addr, align 8, !dbg !16490
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !16490
  %13 = load float, float* %arrayidx8, align 4, !dbg !16490
  %add9 = fadd float %11, %13, !dbg !16491
  %14 = load float*, float** %r.addr, align 8, !dbg !16492
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !16492
  store float %add9, float* %arrayidx10, align 4, !dbg !16493
  ret void, !dbg !16494
}

; Function Attrs: noinline nounwind uwtable
define internal void @particle_curve(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.DerivedMesh* %dm, %struct.Material* %ma, %struct.ParticleStrandData* %sd, float* %loc, float* %loc1, i32 %seed, float* %pa_co) #0 !dbg !16495 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %sd.addr = alloca %struct.ParticleStrandData*, align 8
  %loc.addr = alloca float*, align 8
  %loc1.addr = alloca float*, align 8
  %seed.addr = alloca i32, align 4
  %pa_co.addr = alloca float*, align 8
  %har = alloca %struct.HaloRen*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !16498, metadata !DIExpression()), !dbg !16499
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !16500, metadata !DIExpression()), !dbg !16501
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !16502, metadata !DIExpression()), !dbg !16503
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !16504, metadata !DIExpression()), !dbg !16505
  store %struct.ParticleStrandData* %sd, %struct.ParticleStrandData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleStrandData** %sd.addr, metadata !16506, metadata !DIExpression()), !dbg !16507
  store float* %loc, float** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %loc.addr, metadata !16508, metadata !DIExpression()), !dbg !16509
  store float* %loc1, float** %loc1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %loc1.addr, metadata !16510, metadata !DIExpression()), !dbg !16511
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !16512, metadata !DIExpression()), !dbg !16513
  store float* %pa_co, float** %pa_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pa_co.addr, metadata !16514, metadata !DIExpression()), !dbg !16515
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !16516, metadata !DIExpression()), !dbg !16517
  store %struct.HaloRen* null, %struct.HaloRen** %har, align 8, !dbg !16517
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16518
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 2, !dbg !16520
  %1 = load i16, i16* %material_type, align 8, !dbg !16520
  %conv = sext i16 %1 to i32, !dbg !16518
  %cmp = icmp eq i32 %conv, 3, !dbg !16521
  br i1 %cmp, label %if.then, label %if.else, !dbg !16522

if.then:                                          ; preds = %entry
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16523
  %3 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16524
  %4 = load float*, float** %loc.addr, align 8, !dbg !16525
  %5 = load float*, float** %loc1.addr, align 8, !dbg !16526
  %6 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16527
  %first = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %6, i32 0, i32 10, !dbg !16528
  %7 = load i32, i32* %first, align 8, !dbg !16528
  %8 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16529
  %line = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %8, i32 0, i32 11, !dbg !16530
  %9 = load i32, i32* %line, align 4, !dbg !16530
  call void @static_particle_wire(%struct.ObjectRen* %2, %struct.Material* %3, float* %4, float* %5, i32 %7, i32 %9), !dbg !16531
  br label %if.end11, !dbg !16531

if.else:                                          ; preds = %entry
  %10 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16532
  %material_type2 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 2, !dbg !16534
  %11 = load i16, i16* %material_type2, align 8, !dbg !16534
  %conv3 = sext i16 %11 to i32, !dbg !16532
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !16535
  br i1 %cmp4, label %if.then6, label %if.else9, !dbg !16536

if.then6:                                         ; preds = %if.else
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16537
  %13 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16539
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16540
  %15 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16541
  %16 = load float*, float** %loc.addr, align 8, !dbg !16542
  %17 = load float*, float** %loc1.addr, align 8, !dbg !16543
  %18 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16544
  %orco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %18, i32 0, i32 1, !dbg !16545
  %19 = load float*, float** %orco, align 8, !dbg !16545
  %20 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16546
  %uvco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %20, i32 0, i32 2, !dbg !16547
  %21 = load float*, float** %uvco, align 8, !dbg !16547
  %22 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16548
  %size = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %22, i32 0, i32 7, !dbg !16549
  %23 = load float, float* %size, align 4, !dbg !16549
  %24 = load i32, i32* %seed.addr, align 4, !dbg !16550
  %25 = load float*, float** %pa_co.addr, align 8, !dbg !16551
  %call = call %struct.HaloRen* @RE_inithalo_particle(%struct.Render* %12, %struct.ObjectRen* %13, %struct.DerivedMesh* %14, %struct.Material* %15, float* %16, float* %17, float* %19, float* %21, float %23, float 1.000000e+00, i32 %24, float* %25), !dbg !16552
  store %struct.HaloRen* %call, %struct.HaloRen** %har, align 8, !dbg !16553
  %26 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !16554
  %tobool = icmp ne %struct.HaloRen* %26, null, !dbg !16554
  br i1 %tobool, label %if.then7, label %if.end, !dbg !16556

if.then7:                                         ; preds = %if.then6
  %27 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16557
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %27, i32 0, i32 2, !dbg !16558
  %28 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !16558
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 52, !dbg !16559
  %29 = load i32, i32* %lay, align 8, !dbg !16559
  %30 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !16560
  %lay8 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %30, i32 0, i32 28, !dbg !16561
  store i32 %29, i32* %lay8, align 8, !dbg !16562
  br label %if.end, !dbg !16560

if.end:                                           ; preds = %if.then7, %if.then6
  br label %if.end10, !dbg !16563

if.else9:                                         ; preds = %if.else
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16564
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16565
  %33 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16566
  %34 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16567
  %35 = load float*, float** %loc.addr, align 8, !dbg !16568
  %36 = load float*, float** %loc1.addr, align 8, !dbg !16569
  call void @static_particle_strand(%struct.Render* %31, %struct.ObjectRen* %32, %struct.Material* %33, %struct.ParticleStrandData* %34, float* %35, float* %36), !dbg !16570
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then
  ret void, !dbg !16571
}

declare dso_local void @psys_make_temp_pointcache(%struct.Object*, %struct.ParticleSystem*) #4

declare dso_local void @psys_get_particle_on_path(%struct.ParticleSimulationData*, i32, %struct.ParticleKey*, i8 zeroext) #4

declare dso_local void @mul_m4_v4([4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !16572 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !16575, metadata !DIExpression()), !dbg !16576
  %0 = load float*, float** %a.addr, align 8, !dbg !16577
  %1 = load float*, float** %a.addr, align 8, !dbg !16578
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !16579
  %call1 = call float @sqrtf(float %call) #5, !dbg !16580
  ret float %call1, !dbg !16581
}

; Function Attrs: noinline nounwind uwtable
define internal void @particle_normal_ren(i16 signext %ren_as, %struct.ParticleSettings* %part, %struct.Render* %re, %struct.ObjectRen* %obr, %struct.DerivedMesh* %dm, %struct.Material* %ma, %struct.ParticleStrandData* %sd, %struct.ParticleBillboardData* %bb, %struct.ParticleKey* %state, i32 %seed, float %hasize, float* %pa_co) #0 !dbg !16582 {
entry:
  %ren_as.addr = alloca i16, align 2
  %part.addr = alloca %struct.ParticleSettings*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %sd.addr = alloca %struct.ParticleStrandData*, align 8
  %bb.addr = alloca %struct.ParticleBillboardData*, align 8
  %state.addr = alloca %struct.ParticleKey*, align 8
  %seed.addr = alloca i32, align 4
  %hasize.addr = alloca float, align 4
  %pa_co.addr = alloca float*, align 8
  %loc = alloca [3 x float], align 4
  %loc0 = alloca [3 x float], align 4
  %loc1 = alloca [3 x float], align 4
  %vel = alloca [3 x float], align 4
  %har = alloca %struct.HaloRen*, align 8
  store i16 %ren_as, i16* %ren_as.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %ren_as.addr, metadata !16586, metadata !DIExpression()), !dbg !16587
  store %struct.ParticleSettings* %part, %struct.ParticleSettings** %part.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part.addr, metadata !16588, metadata !DIExpression()), !dbg !16589
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !16590, metadata !DIExpression()), !dbg !16591
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !16592, metadata !DIExpression()), !dbg !16593
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !16594, metadata !DIExpression()), !dbg !16595
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !16596, metadata !DIExpression()), !dbg !16597
  store %struct.ParticleStrandData* %sd, %struct.ParticleStrandData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleStrandData** %sd.addr, metadata !16598, metadata !DIExpression()), !dbg !16599
  store %struct.ParticleBillboardData* %bb, %struct.ParticleBillboardData** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleBillboardData** %bb.addr, metadata !16600, metadata !DIExpression()), !dbg !16601
  store %struct.ParticleKey* %state, %struct.ParticleKey** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleKey** %state.addr, metadata !16602, metadata !DIExpression()), !dbg !16603
  store i32 %seed, i32* %seed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %seed.addr, metadata !16604, metadata !DIExpression()), !dbg !16605
  store float %hasize, float* %hasize.addr, align 4
  call void @llvm.dbg.declare(metadata float* %hasize.addr, metadata !16606, metadata !DIExpression()), !dbg !16607
  store float* %pa_co, float** %pa_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pa_co.addr, metadata !16608, metadata !DIExpression()), !dbg !16609
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !16610, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.declare(metadata [3 x float]* %loc0, metadata !16612, metadata !DIExpression()), !dbg !16613
  call void @llvm.dbg.declare(metadata [3 x float]* %loc1, metadata !16614, metadata !DIExpression()), !dbg !16615
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !16616, metadata !DIExpression()), !dbg !16617
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16618
  %0 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !16619
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %0, i32 0, i32 0, !dbg !16620
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !16619
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !16621
  %1 = load i16, i16* %ren_as.addr, align 2, !dbg !16622
  %conv = sext i16 %1 to i32, !dbg !16622
  %cmp = icmp ne i32 %conv, 9, !dbg !16624
  br i1 %cmp, label %if.then, label %if.end, !dbg !16625

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16626
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 32, !dbg !16627
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !16626
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16628
  call void @mul_m4_v3([4 x float]* %arraydecay3, float* %arraydecay4), !dbg !16629
  br label %if.end, !dbg !16629

if.end:                                           ; preds = %if.then, %entry
  %3 = load i16, i16* %ren_as.addr, align 2, !dbg !16630
  %conv5 = sext i16 %3 to i32, !dbg !16630
  switch i32 %conv5, label %sw.default [
    i32 5, label %sw.bb
    i32 9, label %sw.bb29
  ], !dbg !16631

sw.bb:                                            ; preds = %if.end
  %4 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16632
  %line = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %4, i32 0, i32 11, !dbg !16634
  store i32 1, i32* %line, align 4, !dbg !16635
  %5 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16636
  %time = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %5, i32 0, i32 4, !dbg !16637
  store float 0.000000e+00, float* %time, align 8, !dbg !16638
  %6 = load float, float* %hasize.addr, align 4, !dbg !16639
  %7 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16640
  %size = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %7, i32 0, i32 7, !dbg !16641
  store float %6, float* %size, align 4, !dbg !16642
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16643
  %8 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !16644
  %vel7 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %8, i32 0, i32 1, !dbg !16645
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %vel7, i64 0, i64 0, !dbg !16644
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay8), !dbg !16646
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16647
  %viewmat9 = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 32, !dbg !16648
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat9, i64 0, i64 0, !dbg !16647
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16649
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay10, float* %arraydecay11), !dbg !16650
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16651
  %call = call float @normalize_v3(float* %arraydecay12), !dbg !16652
  %10 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !16653
  %draw = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %10, i32 0, i32 15, !dbg !16655
  %11 = load i32, i32* %draw, align 8, !dbg !16655
  %and = and i32 %11, 4096, !dbg !16656
  %tobool = icmp ne i32 %and, 0, !dbg !16656
  br i1 %tobool, label %if.then13, label %if.end18, !dbg !16657

if.then13:                                        ; preds = %sw.bb
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16658
  %12 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !16659
  %vel15 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %12, i32 0, i32 1, !dbg !16660
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vel15, i64 0, i64 0, !dbg !16659
  %call17 = call float @len_v3(float* %arraydecay16), !dbg !16661
  call void @mul_v3_fl(float* %arraydecay14, float %call17), !dbg !16662
  br label %if.end18, !dbg !16662

if.end18:                                         ; preds = %if.then13, %sw.bb
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !16663
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16664
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16665
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !16666
  %draw_line = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 116, !dbg !16667
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %draw_line, i64 0, i64 0, !dbg !16666
  %14 = load float, float* %arrayidx, align 8, !dbg !16666
  %fneg = fneg float %14, !dbg !16668
  call void @madd_v3_v3v3fl(float* %arraydecay19, float* %arraydecay20, float* %arraydecay21, float %fneg), !dbg !16669
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !16670
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16671
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16672
  %15 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part.addr, align 8, !dbg !16673
  %draw_line25 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %15, i32 0, i32 116, !dbg !16674
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %draw_line25, i64 0, i64 1, !dbg !16673
  %16 = load float, float* %arrayidx26, align 4, !dbg !16673
  call void @madd_v3_v3v3fl(float* %arraydecay22, float* %arraydecay23, float* %arraydecay24, float %16), !dbg !16675
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16676
  %18 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16677
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16678
  %20 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16679
  %21 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16680
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %loc0, i64 0, i64 0, !dbg !16681
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %loc1, i64 0, i64 0, !dbg !16682
  %22 = load i32, i32* %seed.addr, align 4, !dbg !16683
  %23 = load float*, float** %pa_co.addr, align 8, !dbg !16684
  call void @particle_curve(%struct.Render* %17, %struct.ObjectRen* %18, %struct.DerivedMesh* %19, %struct.Material* %20, %struct.ParticleStrandData* %21, float* %arraydecay27, float* %arraydecay28, i32 %22, float* %23), !dbg !16685
  br label %sw.epilog, !dbg !16686

sw.bb29:                                          ; preds = %if.end
  %24 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !16687
  %vec = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %24, i32 0, i32 1, !dbg !16688
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !16687
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16689
  call void @copy_v3_v3(float* %arraydecay30, float* %arraydecay31), !dbg !16690
  %25 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !16691
  %vel32 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %25, i32 0, i32 2, !dbg !16692
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %vel32, i64 0, i64 0, !dbg !16691
  %26 = load %struct.ParticleKey*, %struct.ParticleKey** %state.addr, align 8, !dbg !16693
  %vel34 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %26, i32 0, i32 1, !dbg !16694
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %vel34, i64 0, i64 0, !dbg !16693
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay35), !dbg !16695
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16696
  %28 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16697
  %29 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16698
  %30 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !16699
  call void @particle_billboard(%struct.Render* %27, %struct.ObjectRen* %28, %struct.Material* %29, %struct.ParticleBillboardData* %30), !dbg !16700
  br label %sw.epilog, !dbg !16701

sw.default:                                       ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !16702, metadata !DIExpression()), !dbg !16704
  store %struct.HaloRen* null, %struct.HaloRen** %har, align 8, !dbg !16704
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !16705
  %32 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16706
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !16707
  %34 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !16708
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !16709
  %35 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16710
  %orco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %35, i32 0, i32 1, !dbg !16711
  %36 = load float*, float** %orco, align 8, !dbg !16711
  %37 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !16712
  %uvco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %37, i32 0, i32 2, !dbg !16713
  %38 = load float*, float** %uvco, align 8, !dbg !16713
  %39 = load float, float* %hasize.addr, align 4, !dbg !16714
  %40 = load i32, i32* %seed.addr, align 4, !dbg !16715
  %41 = load float*, float** %pa_co.addr, align 8, !dbg !16716
  %call37 = call %struct.HaloRen* @RE_inithalo_particle(%struct.Render* %31, %struct.ObjectRen* %32, %struct.DerivedMesh* %33, %struct.Material* %34, float* %arraydecay36, float* null, float* %36, float* %38, float %39, float 0.000000e+00, i32 %40, float* %41), !dbg !16717
  store %struct.HaloRen* %call37, %struct.HaloRen** %har, align 8, !dbg !16718
  %42 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !16719
  %tobool38 = icmp ne %struct.HaloRen* %42, null, !dbg !16719
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !16721

if.then39:                                        ; preds = %sw.default
  %43 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16722
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %43, i32 0, i32 2, !dbg !16723
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !16723
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 52, !dbg !16724
  %45 = load i32, i32* %lay, align 8, !dbg !16724
  %46 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !16725
  %lay40 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %46, i32 0, i32 28, !dbg !16726
  store i32 %45, i32* %lay40, align 8, !dbg !16727
  br label %if.end41, !dbg !16725

if.end41:                                         ; preds = %if.then39, %sw.default
  br label %sw.epilog, !dbg !16728

sw.epilog:                                        ; preds = %if.end41, %sw.bb29, %if.end18
  ret void, !dbg !16729
}

declare dso_local i32 @psys_get_particle_state(%struct.ParticleSimulationData*, i32, %struct.ParticleKey*, i32) #4

declare dso_local %struct.StrandSurface* @cache_strand_surface(%struct.Render*, %struct.ObjectRen*, %struct.DerivedMesh*, [4 x float]*, i32) #4

declare dso_local void @BLI_rng_free(%struct.RNG*) #4

declare dso_local void @end_latt_deform(%struct.LatticeDeformData*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @calc_vertexnormals(%struct.Render* %UNUSED_re, %struct.ObjectRen* %obr, i8 zeroext %do_vertex_normal, i8 zeroext %do_tangent, i8 zeroext %do_nmap_tangent) #0 !dbg !16730 {
entry:
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %do_vertex_normal.addr = alloca i8, align 1
  %do_tangent.addr = alloca i8, align 1
  %do_nmap_tangent.addr = alloca i8, align 1
  %a = alloca i32, align 4
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %n4 = alloca float*, align 8
  %c4 = alloca float*, align 8
  %vlr54 = alloca %struct.VlakRen*, align 8
  %ver126 = alloca %struct.VertRen*, align 8
  %tav = alloca float*, align 8
  %tdn = alloca float, align 4
  %mesh2tangent = alloca %struct.SRenderMeshToTangent, align 8
  %sContext = alloca %struct.SMikkTSpaceContext, align 8
  %sInterface = alloca %struct.SMikkTSpaceInterface, align 8
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !16733, metadata !DIExpression()), !dbg !16734
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !16735, metadata !DIExpression()), !dbg !16736
  store i8 %do_vertex_normal, i8* %do_vertex_normal.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_vertex_normal.addr, metadata !16737, metadata !DIExpression()), !dbg !16738
  store i8 %do_tangent, i8* %do_tangent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_tangent.addr, metadata !16739, metadata !DIExpression()), !dbg !16740
  store i8 %do_nmap_tangent, i8* %do_nmap_tangent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_nmap_tangent.addr, metadata !16741, metadata !DIExpression()), !dbg !16742
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16743, metadata !DIExpression()), !dbg !16744
  %0 = load i8, i8* %do_vertex_normal.addr, align 1, !dbg !16745
  %tobool = icmp ne i8 %0, 0, !dbg !16745
  br i1 %tobool, label %if.then, label %if.end, !dbg !16747

if.then:                                          ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !16748
  br label %for.cond, !dbg !16751

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %a, align 4, !dbg !16752
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16754
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 10, !dbg !16755
  %3 = load i32, i32* %totvert, align 8, !dbg !16755
  %cmp = icmp slt i32 %1, %3, !dbg !16756
  br i1 %cmp, label %for.body, label %for.end, !dbg !16757

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !16758, metadata !DIExpression()), !dbg !16760
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16761
  %5 = load i32, i32* %a, align 4, !dbg !16762
  %call = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %4, i32 %5), !dbg !16763
  store %struct.VertRen* %call, %struct.VertRen** %ver, align 8, !dbg !16760
  %6 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !16764
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %6, i32 0, i32 1, !dbg !16765
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 2, !dbg !16764
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !16766
  %7 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !16767
  %n1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %7, i32 0, i32 1, !dbg !16768
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 1, !dbg !16767
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !16769
  %8 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !16770
  %n3 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %8, i32 0, i32 1, !dbg !16771
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %n3, i64 0, i64 0, !dbg !16770
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !16772
  br label %for.inc, !dbg !16773

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %a, align 4, !dbg !16774
  %inc = add nsw i32 %9, 1, !dbg !16774
  store i32 %inc, i32* %a, align 4, !dbg !16774
  br label %for.cond, !dbg !16775, !llvm.loop !16776

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !16778

if.end:                                           ; preds = %for.end, %entry
  store i32 0, i32* %a, align 4, !dbg !16779
  br label %for.cond5, !dbg !16781

for.cond5:                                        ; preds = %for.inc46, %if.end
  %10 = load i32, i32* %a, align 4, !dbg !16782
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16784
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 11, !dbg !16785
  %12 = load i32, i32* %totvlak, align 4, !dbg !16785
  %cmp6 = icmp slt i32 %10, %12, !dbg !16786
  br i1 %cmp6, label %for.body7, label %for.end48, !dbg !16787

for.body7:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !16788, metadata !DIExpression()), !dbg !16790
  %13 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16791
  %14 = load i32, i32* %a, align 4, !dbg !16792
  %call8 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %13, i32 %14), !dbg !16793
  store %struct.VlakRen* %call8, %struct.VlakRen** %vlr, align 8, !dbg !16790
  %15 = load i8, i8* %do_vertex_normal.addr, align 1, !dbg !16794
  %conv = zext i8 %15 to i32, !dbg !16794
  %tobool9 = icmp ne i32 %conv, 0, !dbg !16794
  br i1 %tobool9, label %land.lhs.true, label %if.end41, !dbg !16796

land.lhs.true:                                    ; preds = %for.body7
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16797
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 7, !dbg !16798
  %17 = load i8, i8* %flag, align 1, !dbg !16798
  %conv10 = zext i8 %17 to i32, !dbg !16797
  %and = and i32 %conv10, 1, !dbg !16799
  %tobool11 = icmp ne i32 %and, 0, !dbg !16799
  br i1 %tobool11, label %if.then12, label %if.end41, !dbg !16800

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float** %n4, metadata !16801, metadata !DIExpression()), !dbg !16803
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16804
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 3, !dbg !16805
  %19 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !16805
  %tobool13 = icmp ne %struct.VertRen* %19, null, !dbg !16806
  br i1 %tobool13, label %cond.true, label %cond.false, !dbg !16806

cond.true:                                        ; preds = %if.then12
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16807
  %v414 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %20, i32 0, i32 3, !dbg !16808
  %21 = load %struct.VertRen*, %struct.VertRen** %v414, align 8, !dbg !16808
  %n15 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %21, i32 0, i32 1, !dbg !16809
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n15, i64 0, i64 0, !dbg !16807
  br label %cond.end, !dbg !16806

cond.false:                                       ; preds = %if.then12
  br label %cond.end, !dbg !16806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16806
  store float* %cond, float** %n4, align 8, !dbg !16803
  call void @llvm.dbg.declare(metadata float** %c4, metadata !16810, metadata !DIExpression()), !dbg !16811
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16812
  %v416 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 3, !dbg !16813
  %23 = load %struct.VertRen*, %struct.VertRen** %v416, align 8, !dbg !16813
  %tobool17 = icmp ne %struct.VertRen* %23, null, !dbg !16814
  br i1 %tobool17, label %cond.true18, label %cond.false21, !dbg !16814

cond.true18:                                      ; preds = %cond.end
  %24 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16815
  %v419 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %24, i32 0, i32 3, !dbg !16816
  %25 = load %struct.VertRen*, %struct.VertRen** %v419, align 8, !dbg !16816
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %25, i32 0, i32 0, !dbg !16817
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !16815
  br label %cond.end22, !dbg !16814

cond.false21:                                     ; preds = %cond.end
  br label %cond.end22, !dbg !16814

cond.end22:                                       ; preds = %cond.false21, %cond.true18
  %cond23 = phi float* [ %arraydecay20, %cond.true18 ], [ null, %cond.false21 ], !dbg !16814
  store float* %cond23, float** %c4, align 8, !dbg !16811
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16818
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 0, !dbg !16819
  %27 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !16819
  %n24 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %27, i32 0, i32 1, !dbg !16820
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %n24, i64 0, i64 0, !dbg !16818
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16821
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %28, i32 0, i32 1, !dbg !16822
  %29 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !16822
  %n26 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %29, i32 0, i32 1, !dbg !16823
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %n26, i64 0, i64 0, !dbg !16821
  %30 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16824
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %30, i32 0, i32 2, !dbg !16825
  %31 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !16825
  %n28 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %31, i32 0, i32 1, !dbg !16826
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %n28, i64 0, i64 0, !dbg !16824
  %32 = load float*, float** %n4, align 8, !dbg !16827
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16828
  %n30 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 4, !dbg !16829
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %n30, i64 0, i64 0, !dbg !16828
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16830
  %v132 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 0, !dbg !16831
  %35 = load %struct.VertRen*, %struct.VertRen** %v132, align 8, !dbg !16831
  %co33 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %35, i32 0, i32 0, !dbg !16832
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 0, !dbg !16830
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16833
  %v235 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 1, !dbg !16834
  %37 = load %struct.VertRen*, %struct.VertRen** %v235, align 8, !dbg !16834
  %co36 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 0, !dbg !16835
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %co36, i64 0, i64 0, !dbg !16833
  %38 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16836
  %v338 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %38, i32 0, i32 2, !dbg !16837
  %39 = load %struct.VertRen*, %struct.VertRen** %v338, align 8, !dbg !16837
  %co39 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %39, i32 0, i32 0, !dbg !16838
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !16836
  %40 = load float*, float** %c4, align 8, !dbg !16839
  call void @accumulate_vertex_normals(float* %arraydecay25, float* %arraydecay27, float* %arraydecay29, float* %32, float* %arraydecay31, float* %arraydecay34, float* %arraydecay37, float* %arraydecay40, float* %40), !dbg !16840
  br label %if.end41, !dbg !16841

if.end41:                                         ; preds = %cond.end22, %land.lhs.true, %for.body7
  %41 = load i8, i8* %do_tangent.addr, align 1, !dbg !16842
  %tobool42 = icmp ne i8 %41, 0, !dbg !16842
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !16844

if.then43:                                        ; preds = %if.end41
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16845
  %43 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !16847
  %44 = load i8, i8* %do_tangent.addr, align 1, !dbg !16848
  %conv44 = zext i8 %44 to i32, !dbg !16848
  call void @calc_tangent_vector(%struct.ObjectRen* %42, %struct.VlakRen* %43, i32 %conv44), !dbg !16849
  br label %if.end45, !dbg !16850

if.end45:                                         ; preds = %if.then43, %if.end41
  br label %for.inc46, !dbg !16851

for.inc46:                                        ; preds = %if.end45
  %45 = load i32, i32* %a, align 4, !dbg !16852
  %inc47 = add nsw i32 %45, 1, !dbg !16852
  store i32 %inc47, i32* %a, align 4, !dbg !16852
  br label %for.cond5, !dbg !16853, !llvm.loop !16854

for.end48:                                        ; preds = %for.cond5
  store i32 0, i32* %a, align 4, !dbg !16856
  br label %for.cond49, !dbg !16858

for.cond49:                                       ; preds = %for.inc118, %for.end48
  %46 = load i32, i32* %a, align 4, !dbg !16859
  %47 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16861
  %totvlak50 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %47, i32 0, i32 11, !dbg !16862
  %48 = load i32, i32* %totvlak50, align 4, !dbg !16862
  %cmp51 = icmp slt i32 %46, %48, !dbg !16863
  br i1 %cmp51, label %for.body53, label %for.end120, !dbg !16864

for.body53:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr54, metadata !16865, metadata !DIExpression()), !dbg !16867
  %49 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16868
  %50 = load i32, i32* %a, align 4, !dbg !16869
  %call55 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %49, i32 %50), !dbg !16870
  store %struct.VlakRen* %call55, %struct.VlakRen** %vlr54, align 8, !dbg !16867
  %51 = load i8, i8* %do_vertex_normal.addr, align 1, !dbg !16871
  %conv56 = zext i8 %51 to i32, !dbg !16871
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !16871
  br i1 %tobool57, label %land.lhs.true58, label %if.end117, !dbg !16873

land.lhs.true58:                                  ; preds = %for.body53
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16874
  %flag59 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 7, !dbg !16875
  %53 = load i8, i8* %flag59, align 1, !dbg !16875
  %conv60 = zext i8 %53 to i32, !dbg !16874
  %and61 = and i32 %conv60, 1, !dbg !16876
  %cmp62 = icmp eq i32 %and61, 0, !dbg !16877
  br i1 %cmp62, label %if.then64, label %if.end117, !dbg !16878

if.then64:                                        ; preds = %land.lhs.true58
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16879
  %v165 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i32 0, i32 0, !dbg !16882
  %55 = load %struct.VertRen*, %struct.VertRen** %v165, align 8, !dbg !16882
  %n66 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %55, i32 0, i32 1, !dbg !16883
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %n66, i64 0, i64 0, !dbg !16879
  %call68 = call zeroext i8 @is_zero_v3(float* %arraydecay67), !dbg !16884
  %tobool69 = icmp ne i8 %call68, 0, !dbg !16884
  br i1 %tobool69, label %if.then70, label %if.end76, !dbg !16885

if.then70:                                        ; preds = %if.then64
  %56 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16886
  %v171 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %56, i32 0, i32 0, !dbg !16887
  %57 = load %struct.VertRen*, %struct.VertRen** %v171, align 8, !dbg !16887
  %n72 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %57, i32 0, i32 1, !dbg !16888
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %n72, i64 0, i64 0, !dbg !16886
  %58 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16889
  %n74 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %58, i32 0, i32 4, !dbg !16890
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %n74, i64 0, i64 0, !dbg !16889
  call void @copy_v3_v3(float* %arraydecay73, float* %arraydecay75), !dbg !16891
  br label %if.end76, !dbg !16891

if.end76:                                         ; preds = %if.then70, %if.then64
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16892
  %v277 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %59, i32 0, i32 1, !dbg !16894
  %60 = load %struct.VertRen*, %struct.VertRen** %v277, align 8, !dbg !16894
  %n78 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %60, i32 0, i32 1, !dbg !16895
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %n78, i64 0, i64 0, !dbg !16892
  %call80 = call zeroext i8 @is_zero_v3(float* %arraydecay79), !dbg !16896
  %tobool81 = icmp ne i8 %call80, 0, !dbg !16896
  br i1 %tobool81, label %if.then82, label %if.end88, !dbg !16897

if.then82:                                        ; preds = %if.end76
  %61 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16898
  %v283 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %61, i32 0, i32 1, !dbg !16899
  %62 = load %struct.VertRen*, %struct.VertRen** %v283, align 8, !dbg !16899
  %n84 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %62, i32 0, i32 1, !dbg !16900
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %n84, i64 0, i64 0, !dbg !16898
  %63 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16901
  %n86 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %63, i32 0, i32 4, !dbg !16902
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %n86, i64 0, i64 0, !dbg !16901
  call void @copy_v3_v3(float* %arraydecay85, float* %arraydecay87), !dbg !16903
  br label %if.end88, !dbg !16903

if.end88:                                         ; preds = %if.then82, %if.end76
  %64 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16904
  %v389 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %64, i32 0, i32 2, !dbg !16906
  %65 = load %struct.VertRen*, %struct.VertRen** %v389, align 8, !dbg !16906
  %n90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %65, i32 0, i32 1, !dbg !16907
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %n90, i64 0, i64 0, !dbg !16904
  %call92 = call zeroext i8 @is_zero_v3(float* %arraydecay91), !dbg !16908
  %tobool93 = icmp ne i8 %call92, 0, !dbg !16908
  br i1 %tobool93, label %if.then94, label %if.end100, !dbg !16909

if.then94:                                        ; preds = %if.end88
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16910
  %v395 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 2, !dbg !16911
  %67 = load %struct.VertRen*, %struct.VertRen** %v395, align 8, !dbg !16911
  %n96 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %67, i32 0, i32 1, !dbg !16912
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %n96, i64 0, i64 0, !dbg !16910
  %68 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16913
  %n98 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %68, i32 0, i32 4, !dbg !16914
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %n98, i64 0, i64 0, !dbg !16913
  call void @copy_v3_v3(float* %arraydecay97, float* %arraydecay99), !dbg !16915
  br label %if.end100, !dbg !16915

if.end100:                                        ; preds = %if.then94, %if.end88
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16916
  %v4101 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %69, i32 0, i32 3, !dbg !16918
  %70 = load %struct.VertRen*, %struct.VertRen** %v4101, align 8, !dbg !16918
  %tobool102 = icmp ne %struct.VertRen* %70, null, !dbg !16916
  br i1 %tobool102, label %land.lhs.true103, label %if.end116, !dbg !16919

land.lhs.true103:                                 ; preds = %if.end100
  %71 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16920
  %v4104 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %71, i32 0, i32 3, !dbg !16921
  %72 = load %struct.VertRen*, %struct.VertRen** %v4104, align 8, !dbg !16921
  %n105 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %72, i32 0, i32 1, !dbg !16922
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %n105, i64 0, i64 0, !dbg !16920
  %call107 = call zeroext i8 @is_zero_v3(float* %arraydecay106), !dbg !16923
  %conv108 = zext i8 %call107 to i32, !dbg !16923
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !16923
  br i1 %tobool109, label %if.then110, label %if.end116, !dbg !16924

if.then110:                                       ; preds = %land.lhs.true103
  %73 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16925
  %v4111 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %73, i32 0, i32 3, !dbg !16926
  %74 = load %struct.VertRen*, %struct.VertRen** %v4111, align 8, !dbg !16926
  %n112 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %74, i32 0, i32 1, !dbg !16927
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %n112, i64 0, i64 0, !dbg !16925
  %75 = load %struct.VlakRen*, %struct.VlakRen** %vlr54, align 8, !dbg !16928
  %n114 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %75, i32 0, i32 4, !dbg !16929
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %n114, i64 0, i64 0, !dbg !16928
  call void @copy_v3_v3(float* %arraydecay113, float* %arraydecay115), !dbg !16930
  br label %if.end116, !dbg !16930

if.end116:                                        ; preds = %if.then110, %land.lhs.true103, %if.end100
  br label %if.end117, !dbg !16931

if.end117:                                        ; preds = %if.end116, %land.lhs.true58, %for.body53
  br label %for.inc118, !dbg !16932

for.inc118:                                       ; preds = %if.end117
  %76 = load i32, i32* %a, align 4, !dbg !16933
  %inc119 = add nsw i32 %76, 1, !dbg !16933
  store i32 %inc119, i32* %a, align 4, !dbg !16933
  br label %for.cond49, !dbg !16934, !llvm.loop !16935

for.end120:                                       ; preds = %for.cond49
  store i32 0, i32* %a, align 4, !dbg !16937
  br label %for.cond121, !dbg !16939

for.cond121:                                      ; preds = %for.inc155, %for.end120
  %77 = load i32, i32* %a, align 4, !dbg !16940
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16942
  %totvert122 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %78, i32 0, i32 10, !dbg !16943
  %79 = load i32, i32* %totvert122, align 8, !dbg !16943
  %cmp123 = icmp slt i32 %77, %79, !dbg !16944
  br i1 %cmp123, label %for.body125, label %for.end157, !dbg !16945

for.body125:                                      ; preds = %for.cond121
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver126, metadata !16946, metadata !DIExpression()), !dbg !16948
  %80 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16949
  %81 = load i32, i32* %a, align 4, !dbg !16950
  %call127 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %80, i32 %81), !dbg !16951
  store %struct.VertRen* %call127, %struct.VertRen** %ver126, align 8, !dbg !16948
  %82 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16952
  %n128 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %82, i32 0, i32 1, !dbg !16953
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %n128, i64 0, i64 0, !dbg !16952
  %call130 = call float @normalize_v3(float* %arraydecay129), !dbg !16954
  %83 = load i8, i8* %do_tangent.addr, align 1, !dbg !16955
  %tobool131 = icmp ne i8 %83, 0, !dbg !16955
  br i1 %tobool131, label %if.then132, label %if.end154, !dbg !16957

if.then132:                                       ; preds = %for.body125
  call void @llvm.dbg.declare(metadata float** %tav, metadata !16958, metadata !DIExpression()), !dbg !16960
  %84 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !16961
  %85 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16962
  %call133 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %84, %struct.VertRen* %85, i32 0), !dbg !16963
  store float* %call133, float** %tav, align 8, !dbg !16960
  %86 = load float*, float** %tav, align 8, !dbg !16964
  %tobool134 = icmp ne float* %86, null, !dbg !16964
  br i1 %tobool134, label %if.then135, label %if.end153, !dbg !16966

if.then135:                                       ; preds = %if.then132
  call void @llvm.dbg.declare(metadata float* %tdn, metadata !16967, metadata !DIExpression()), !dbg !16969
  %87 = load float*, float** %tav, align 8, !dbg !16970
  %88 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16971
  %n136 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %88, i32 0, i32 1, !dbg !16972
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %n136, i64 0, i64 0, !dbg !16971
  %call138 = call float @dot_v3v3(float* %87, float* %arraydecay137), !dbg !16973
  store float %call138, float* %tdn, align 4, !dbg !16969
  %89 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16974
  %n139 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %89, i32 0, i32 1, !dbg !16975
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %n139, i64 0, i64 0, !dbg !16974
  %90 = load float, float* %arrayidx140, align 4, !dbg !16974
  %91 = load float, float* %tdn, align 4, !dbg !16976
  %mul = fmul float %90, %91, !dbg !16977
  %92 = load float*, float** %tav, align 8, !dbg !16978
  %arrayidx141 = getelementptr inbounds float, float* %92, i64 0, !dbg !16978
  %93 = load float, float* %arrayidx141, align 4, !dbg !16979
  %sub = fsub float %93, %mul, !dbg !16979
  store float %sub, float* %arrayidx141, align 4, !dbg !16979
  %94 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16980
  %n142 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %94, i32 0, i32 1, !dbg !16981
  %arrayidx143 = getelementptr inbounds [3 x float], [3 x float]* %n142, i64 0, i64 1, !dbg !16980
  %95 = load float, float* %arrayidx143, align 4, !dbg !16980
  %96 = load float, float* %tdn, align 4, !dbg !16982
  %mul144 = fmul float %95, %96, !dbg !16983
  %97 = load float*, float** %tav, align 8, !dbg !16984
  %arrayidx145 = getelementptr inbounds float, float* %97, i64 1, !dbg !16984
  %98 = load float, float* %arrayidx145, align 4, !dbg !16985
  %sub146 = fsub float %98, %mul144, !dbg !16985
  store float %sub146, float* %arrayidx145, align 4, !dbg !16985
  %99 = load %struct.VertRen*, %struct.VertRen** %ver126, align 8, !dbg !16986
  %n147 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %99, i32 0, i32 1, !dbg !16987
  %arrayidx148 = getelementptr inbounds [3 x float], [3 x float]* %n147, i64 0, i64 2, !dbg !16986
  %100 = load float, float* %arrayidx148, align 4, !dbg !16986
  %101 = load float, float* %tdn, align 4, !dbg !16988
  %mul149 = fmul float %100, %101, !dbg !16989
  %102 = load float*, float** %tav, align 8, !dbg !16990
  %arrayidx150 = getelementptr inbounds float, float* %102, i64 2, !dbg !16990
  %103 = load float, float* %arrayidx150, align 4, !dbg !16991
  %sub151 = fsub float %103, %mul149, !dbg !16991
  store float %sub151, float* %arrayidx150, align 4, !dbg !16991
  %104 = load float*, float** %tav, align 8, !dbg !16992
  %call152 = call float @normalize_v3(float* %104), !dbg !16993
  br label %if.end153, !dbg !16994

if.end153:                                        ; preds = %if.then135, %if.then132
  br label %if.end154, !dbg !16995

if.end154:                                        ; preds = %if.end153, %for.body125
  br label %for.inc155, !dbg !16996

for.inc155:                                       ; preds = %if.end154
  %105 = load i32, i32* %a, align 4, !dbg !16997
  %inc156 = add nsw i32 %105, 1, !dbg !16997
  store i32 %inc156, i32* %a, align 4, !dbg !16997
  br label %for.cond121, !dbg !16998, !llvm.loop !16999

for.end157:                                       ; preds = %for.cond121
  %106 = load i8, i8* %do_nmap_tangent.addr, align 1, !dbg !17001
  %conv158 = zext i8 %106 to i32, !dbg !17001
  %cmp159 = icmp ne i32 %conv158, 0, !dbg !17003
  br i1 %cmp159, label %if.then161, label %if.end164, !dbg !17004

if.then161:                                       ; preds = %for.end157
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent* %mesh2tangent, metadata !17005, metadata !DIExpression()), !dbg !17007
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext* %sContext, metadata !17008, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceInterface* %sInterface, metadata !17046, metadata !DIExpression()), !dbg !17047
  %107 = bitcast %struct.SRenderMeshToTangent* %mesh2tangent to i8*, !dbg !17048
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 8, i1 false), !dbg !17048
  %108 = bitcast %struct.SMikkTSpaceContext* %sContext to i8*, !dbg !17049
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false), !dbg !17049
  %109 = bitcast %struct.SMikkTSpaceInterface* %sInterface to i8*, !dbg !17050
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 56, i1 false), !dbg !17050
  %110 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17051
  %obr162 = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %mesh2tangent, i32 0, i32 0, !dbg !17052
  store %struct.ObjectRen* %110, %struct.ObjectRen** %obr162, align 8, !dbg !17053
  %111 = bitcast %struct.SRenderMeshToTangent* %mesh2tangent to i8*, !dbg !17054
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %sContext, i32 0, i32 1, !dbg !17055
  store i8* %111, i8** %m_pUserData, align 8, !dbg !17056
  %m_pInterface = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %sContext, i32 0, i32 0, !dbg !17057
  store %struct.SMikkTSpaceInterface* %sInterface, %struct.SMikkTSpaceInterface** %m_pInterface, align 8, !dbg !17058
  %m_getNumFaces = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 0, !dbg !17059
  store i32 (%struct.SMikkTSpaceContext*)* @GetNumFaces, i32 (%struct.SMikkTSpaceContext*)** %m_getNumFaces, align 8, !dbg !17060
  %m_getNumVerticesOfFace = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 1, !dbg !17061
  store i32 (%struct.SMikkTSpaceContext*, i32)* @GetNumVertsOfFace, i32 (%struct.SMikkTSpaceContext*, i32)** %m_getNumVerticesOfFace, align 8, !dbg !17062
  %m_getPosition = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 2, !dbg !17063
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetPosition, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getPosition, align 8, !dbg !17064
  %m_getTexCoord = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 4, !dbg !17065
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetTextureCoordinate, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getTexCoord, align 8, !dbg !17066
  %m_getNormal = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 3, !dbg !17067
  store void (%struct.SMikkTSpaceContext*, float*, i32, i32)* @GetNormal, void (%struct.SMikkTSpaceContext*, float*, i32, i32)** %m_getNormal, align 8, !dbg !17068
  %m_setTSpaceBasic = getelementptr inbounds %struct.SMikkTSpaceInterface, %struct.SMikkTSpaceInterface* %sInterface, i32 0, i32 5, !dbg !17069
  store void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)* @SetTSpace, void (%struct.SMikkTSpaceContext*, float*, float, i32, i32)** %m_setTSpaceBasic, align 8, !dbg !17070
  %call163 = call i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext* %sContext), !dbg !17071
  br label %if.end164, !dbg !17072

if.end164:                                        ; preds = %if.then161, %for.end157
  ret void, !dbg !17073
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #4

declare dso_local %struct.GHash* @BLI_ghash_ptr_new(i8*) #4

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #4

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #4

declare dso_local void @psys_interpolate_uvs(%struct.MTFace*, i32, float*, float*) #4

declare dso_local void @psys_interpolate_mcol(%struct.MCol*, i32, float*, %struct.MCol*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @static_particle_wire(%struct.ObjectRen* %obr, %struct.Material* %ma, float* %vec, float* %vec1, i32 %first, i32 %line) #0 !dbg !4176 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %vec.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %first.addr = alloca i32, align 4
  %line.addr = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !17074, metadata !DIExpression()), !dbg !17075
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !17076, metadata !DIExpression()), !dbg !17077
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !17078, metadata !DIExpression()), !dbg !17079
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !17080, metadata !DIExpression()), !dbg !17081
  store i32 %first, i32* %first.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first.addr, metadata !17082, metadata !DIExpression()), !dbg !17083
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !17084, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !17086, metadata !DIExpression()), !dbg !17087
  %0 = load i32, i32* %line.addr, align 4, !dbg !17088
  %tobool = icmp ne i32 %0, 0, !dbg !17088
  br i1 %tobool, label %if.then, label %if.else, !dbg !17090

if.then:                                          ; preds = %entry
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17091
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17093
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 11, !dbg !17094
  %3 = load i32, i32* %totvlak, align 4, !dbg !17095
  %inc = add nsw i32 %3, 1, !dbg !17095
  store i32 %inc, i32* %totvlak, align 4, !dbg !17095
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %1, i32 %3), !dbg !17096
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !17097
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17098
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17099
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 10, !dbg !17100
  %6 = load i32, i32* %totvert, align 8, !dbg !17101
  %inc1 = add nsw i32 %6, 1, !dbg !17101
  store i32 %inc1, i32* %totvert, align 8, !dbg !17101
  %call2 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %4, i32 %6), !dbg !17102
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17103
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 0, !dbg !17104
  store %struct.VertRen* %call2, %struct.VertRen** %v1, align 8, !dbg !17105
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17106
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17107
  %totvert3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 10, !dbg !17108
  %10 = load i32, i32* %totvert3, align 8, !dbg !17109
  %inc4 = add nsw i32 %10, 1, !dbg !17109
  store i32 %inc4, i32* %totvert3, align 8, !dbg !17109
  %call5 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %8, i32 %10), !dbg !17110
  %11 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17111
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %11, i32 0, i32 1, !dbg !17112
  store %struct.VertRen* %call5, %struct.VertRen** %v2, align 8, !dbg !17113
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17114
  %v26 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i32 0, i32 1, !dbg !17115
  %13 = load %struct.VertRen*, %struct.VertRen** %v26, align 8, !dbg !17115
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17116
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 2, !dbg !17117
  store %struct.VertRen* %13, %struct.VertRen** %v3, align 8, !dbg !17118
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17119
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %15, i32 0, i32 3, !dbg !17120
  store %struct.VertRen* null, %struct.VertRen** %v4, align 8, !dbg !17121
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17122
  %v17 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 0, !dbg !17123
  %17 = load %struct.VertRen*, %struct.VertRen** %v17, align 8, !dbg !17123
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %17, i32 0, i32 0, !dbg !17124
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !17122
  %18 = load float*, float** %vec.addr, align 8, !dbg !17125
  call void @copy_v3_v3(float* %arraydecay, float* %18), !dbg !17126
  %19 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17127
  %v28 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %19, i32 0, i32 1, !dbg !17128
  %20 = load %struct.VertRen*, %struct.VertRen** %v28, align 8, !dbg !17128
  %co9 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %20, i32 0, i32 0, !dbg !17129
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !17127
  %21 = load float*, float** %vec1.addr, align 8, !dbg !17130
  call void @copy_v3_v3(float* %arraydecay10, float* %21), !dbg !17131
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17132
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 4, !dbg !17133
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !17132
  %23 = load float*, float** %vec.addr, align 8, !dbg !17134
  %24 = load float*, float** %vec1.addr, align 8, !dbg !17135
  call void @sub_v3_v3v3(float* %arraydecay11, float* %23, float* %24), !dbg !17136
  %25 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17137
  %n12 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %25, i32 0, i32 4, !dbg !17138
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %n12, i64 0, i64 0, !dbg !17137
  %call14 = call float @normalize_v3(float* %arraydecay13), !dbg !17139
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17140
  %v115 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 0, !dbg !17141
  %27 = load %struct.VertRen*, %struct.VertRen** %v115, align 8, !dbg !17141
  %n16 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %27, i32 0, i32 1, !dbg !17142
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %n16, i64 0, i64 0, !dbg !17140
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17143
  %n18 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %28, i32 0, i32 4, !dbg !17144
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %n18, i64 0, i64 0, !dbg !17143
  call void @copy_v3_v3(float* %arraydecay17, float* %arraydecay19), !dbg !17145
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17146
  %v220 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 1, !dbg !17147
  %30 = load %struct.VertRen*, %struct.VertRen** %v220, align 8, !dbg !17147
  %n21 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %30, i32 0, i32 1, !dbg !17148
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %n21, i64 0, i64 0, !dbg !17146
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17149
  %n23 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 4, !dbg !17150
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %n23, i64 0, i64 0, !dbg !17149
  call void @copy_v3_v3(float* %arraydecay22, float* %arraydecay24), !dbg !17151
  %32 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17152
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17153
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 5, !dbg !17154
  store %struct.Material* %32, %struct.Material** %mat, align 8, !dbg !17155
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17156
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 8, !dbg !17157
  store i8 1, i8* %ec, align 2, !dbg !17158
  br label %if.end58, !dbg !17159

if.else:                                          ; preds = %entry
  %35 = load i32, i32* %first.addr, align 4, !dbg !17160
  %tobool25 = icmp ne i32 %35, 0, !dbg !17160
  br i1 %tobool25, label %if.then26, label %if.else32, !dbg !17162

if.then26:                                        ; preds = %if.else
  %36 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17163
  %37 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17165
  %totvert27 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %37, i32 0, i32 10, !dbg !17166
  %38 = load i32, i32* %totvert27, align 8, !dbg !17167
  %inc28 = add nsw i32 %38, 1, !dbg !17167
  store i32 %inc28, i32* %totvert27, align 8, !dbg !17167
  %call29 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %36, i32 %38), !dbg !17168
  store %struct.VertRen* %call29, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17169
  %39 = load %struct.VertRen*, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17170
  %co30 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %39, i32 0, i32 0, !dbg !17171
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !17170
  %40 = load float*, float** %vec.addr, align 8, !dbg !17172
  call void @copy_v3_v3(float* %arraydecay31, float* %40), !dbg !17173
  br label %if.end, !dbg !17174

if.else32:                                        ; preds = %if.else
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17175
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17177
  %totvlak33 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %42, i32 0, i32 11, !dbg !17178
  %43 = load i32, i32* %totvlak33, align 4, !dbg !17179
  %inc34 = add nsw i32 %43, 1, !dbg !17179
  store i32 %inc34, i32* %totvlak33, align 4, !dbg !17179
  %call35 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %41, i32 %43), !dbg !17180
  store %struct.VlakRen* %call35, %struct.VlakRen** %vlr, align 8, !dbg !17181
  %44 = load %struct.VertRen*, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17182
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17183
  %v136 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 0, !dbg !17184
  store %struct.VertRen* %44, %struct.VertRen** %v136, align 8, !dbg !17185
  %46 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17186
  %47 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17187
  %totvert37 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %47, i32 0, i32 10, !dbg !17188
  %48 = load i32, i32* %totvert37, align 8, !dbg !17189
  %inc38 = add nsw i32 %48, 1, !dbg !17189
  store i32 %inc38, i32* %totvert37, align 8, !dbg !17189
  %call39 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %46, i32 %48), !dbg !17190
  %49 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17191
  %v240 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %49, i32 0, i32 1, !dbg !17192
  store %struct.VertRen* %call39, %struct.VertRen** %v240, align 8, !dbg !17193
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17194
  %v241 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %50, i32 0, i32 1, !dbg !17195
  %51 = load %struct.VertRen*, %struct.VertRen** %v241, align 8, !dbg !17195
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17196
  %v342 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 2, !dbg !17197
  store %struct.VertRen* %51, %struct.VertRen** %v342, align 8, !dbg !17198
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17199
  %v443 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 0, i32 3, !dbg !17200
  store %struct.VertRen* null, %struct.VertRen** %v443, align 8, !dbg !17201
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17202
  %v244 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i32 0, i32 1, !dbg !17203
  %55 = load %struct.VertRen*, %struct.VertRen** %v244, align 8, !dbg !17203
  store %struct.VertRen* %55, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17204
  %56 = load %struct.VertRen*, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17205
  %co45 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %56, i32 0, i32 0, !dbg !17206
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !17205
  %57 = load float*, float** %vec.addr, align 8, !dbg !17207
  call void @copy_v3_v3(float* %arraydecay46, float* %57), !dbg !17208
  %58 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17209
  %n47 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %58, i32 0, i32 4, !dbg !17210
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %n47, i64 0, i64 0, !dbg !17209
  %59 = load float*, float** %vec.addr, align 8, !dbg !17211
  %60 = load float*, float** %vec1.addr, align 8, !dbg !17212
  call void @sub_v3_v3v3(float* %arraydecay48, float* %59, float* %60), !dbg !17213
  %61 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17214
  %n49 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %61, i32 0, i32 4, !dbg !17215
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %n49, i64 0, i64 0, !dbg !17214
  %call51 = call float @normalize_v3(float* %arraydecay50), !dbg !17216
  %62 = load %struct.VertRen*, %struct.VertRen** @static_particle_wire.v1, align 8, !dbg !17217
  %n52 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %62, i32 0, i32 1, !dbg !17218
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %n52, i64 0, i64 0, !dbg !17217
  %63 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17219
  %n54 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %63, i32 0, i32 4, !dbg !17220
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %n54, i64 0, i64 0, !dbg !17219
  call void @copy_v3_v3(float* %arraydecay53, float* %arraydecay55), !dbg !17221
  %64 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17222
  %65 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17223
  %mat56 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %65, i32 0, i32 5, !dbg !17224
  store %struct.Material* %64, %struct.Material** %mat56, align 8, !dbg !17225
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17226
  %ec57 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 8, !dbg !17227
  store i8 1, i8* %ec57, align 2, !dbg !17228
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then26
  br label %if.end58

if.end58:                                         ; preds = %if.end, %if.then
  ret void, !dbg !17229
}

declare dso_local %struct.HaloRen* @RE_inithalo_particle(%struct.Render*, %struct.ObjectRen*, %struct.DerivedMesh*, %struct.Material*, float*, float*, float*, float*, float, float, i32, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @static_particle_strand(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Material* %ma, %struct.ParticleStrandData* %sd, float* %vec, float* %vec1) #0 !dbg !4183 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %sd.addr = alloca %struct.ParticleStrandData*, align 8
  %vec.addr = alloca float*, align 8
  %vec1.addr = alloca float*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %nor = alloca [3 x float], align 4
  %cross = alloca [3 x float], align 4
  %crosslen = alloca float, align 4
  %w = alloca float, align 4
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %width = alloca float, align 4
  %flag = alloca i32, align 4
  %i = alloca i32, align 4
  %fac = alloca float, align 4
  %snor = alloca float*, align 8
  %mtf = alloca %struct.MTFace*, align 8
  %mtf228 = alloca %struct.MTFace*, align 8
  %mc = alloca %struct.MCol*, align 8
  %dvec = alloca [3 x float], align 4
  %pvec = alloca [3 x float], align 4
  %snor480 = alloca float*, align 8
  %mtf492 = alloca %struct.MTFace*, align 8
  %mtf535 = alloca %struct.MTFace*, align 8
  %mc580 = alloca %struct.MCol*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !17230, metadata !DIExpression()), !dbg !17231
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !17232, metadata !DIExpression()), !dbg !17233
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !17234, metadata !DIExpression()), !dbg !17235
  store %struct.ParticleStrandData* %sd, %struct.ParticleStrandData** %sd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleStrandData** %sd.addr, metadata !17236, metadata !DIExpression()), !dbg !17237
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !17238, metadata !DIExpression()), !dbg !17239
  store float* %vec1, float** %vec1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec1.addr, metadata !17240, metadata !DIExpression()), !dbg !17241
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !17242, metadata !DIExpression()), !dbg !17243
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !17243
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !17244, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.declare(metadata [3 x float]* %cross, metadata !17246, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.declare(metadata float* %crosslen, metadata !17248, metadata !DIExpression()), !dbg !17249
  call void @llvm.dbg.declare(metadata float* %w, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.declare(metadata float* %dx, metadata !17252, metadata !DIExpression()), !dbg !17253
  call void @llvm.dbg.declare(metadata float* %dy, metadata !17254, metadata !DIExpression()), !dbg !17255
  call void @llvm.dbg.declare(metadata float* %width, metadata !17256, metadata !DIExpression()), !dbg !17257
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !17258, metadata !DIExpression()), !dbg !17259
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17260, metadata !DIExpression()), !dbg !17261
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17262
  %0 = load float*, float** %vec.addr, align 8, !dbg !17263
  %1 = load float*, float** %vec1.addr, align 8, !dbg !17264
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !17265
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17266
  %call = call float @normalize_v3(float* %arraydecay1), !dbg !17267
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17268
  %2 = load float*, float** %vec.addr, align 8, !dbg !17269
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17270
  call void @cross_v3_v3v3(float* %arraydecay2, float* %2, float* %arraydecay3), !dbg !17271
  %3 = load float*, float** %vec.addr, align 8, !dbg !17272
  %arrayidx = getelementptr inbounds float, float* %3, i64 2, !dbg !17272
  %4 = load float, float* %arrayidx, align 4, !dbg !17272
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17273
  %winmat = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 35, !dbg !17274
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 2, !dbg !17273
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 3, !dbg !17273
  %6 = load float, float* %arrayidx5, align 4, !dbg !17273
  %mul = fmul float %4, %6, !dbg !17275
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17276
  %winmat6 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 35, !dbg !17277
  %arrayidx7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat6, i64 0, i64 3, !dbg !17276
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 3, !dbg !17276
  %8 = load float, float* %arrayidx8, align 4, !dbg !17276
  %add = fadd float %mul, %8, !dbg !17278
  store float %add, float* %w, align 4, !dbg !17279
  %9 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17280
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %9, i32 0, i32 13, !dbg !17281
  %10 = load i32, i32* %winx, align 4, !dbg !17281
  %conv = sitofp i32 %10 to float, !dbg !17280
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17282
  %11 = load float, float* %arrayidx9, align 4, !dbg !17282
  %mul10 = fmul float %conv, %11, !dbg !17283
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17284
  %winmat11 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 35, !dbg !17285
  %arrayidx12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat11, i64 0, i64 0, !dbg !17284
  %arrayidx13 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx12, i64 0, i64 0, !dbg !17284
  %13 = load float, float* %arrayidx13, align 8, !dbg !17284
  %mul14 = fmul float %mul10, %13, !dbg !17286
  store float %mul14, float* %dx, align 4, !dbg !17287
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17288
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 14, !dbg !17289
  %15 = load i32, i32* %winy, align 8, !dbg !17289
  %conv15 = sitofp i32 %15 to float, !dbg !17288
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 1, !dbg !17290
  %16 = load float, float* %arrayidx16, align 4, !dbg !17290
  %mul17 = fmul float %conv15, %16, !dbg !17291
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17292
  %winmat18 = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 35, !dbg !17293
  %arrayidx19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat18, i64 0, i64 1, !dbg !17292
  %arrayidx20 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx19, i64 0, i64 1, !dbg !17292
  %18 = load float, float* %arrayidx20, align 4, !dbg !17292
  %mul21 = fmul float %mul17, %18, !dbg !17294
  store float %mul21, float* %dy, align 4, !dbg !17295
  %19 = load float, float* %dx, align 4, !dbg !17296
  %20 = load float, float* %dx, align 4, !dbg !17297
  %mul22 = fmul float %19, %20, !dbg !17298
  %21 = load float, float* %dy, align 4, !dbg !17299
  %22 = load float, float* %dy, align 4, !dbg !17300
  %mul23 = fmul float %21, %22, !dbg !17301
  %add24 = fadd float %mul22, %mul23, !dbg !17302
  %call25 = call float @sqrtf(float %add24) #5, !dbg !17303
  %23 = load float, float* %w, align 4, !dbg !17304
  %div = fdiv float %call25, %23, !dbg !17305
  store float %div, float* %w, align 4, !dbg !17306
  %24 = load float, float* %w, align 4, !dbg !17307
  %cmp = fcmp une float %24, 0.000000e+00, !dbg !17309
  br i1 %cmp, label %if.then, label %if.end70, !dbg !17310

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %fac, metadata !17311, metadata !DIExpression()), !dbg !17313
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17314
  %strand_ease = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 65, !dbg !17316
  %26 = load float, float* %strand_ease, align 4, !dbg !17316
  %cmp27 = fcmp une float %26, 0.000000e+00, !dbg !17317
  br i1 %cmp27, label %if.then29, label %if.else47, !dbg !17318

if.then29:                                        ; preds = %if.then
  %27 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17319
  %strand_ease30 = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 65, !dbg !17322
  %28 = load float, float* %strand_ease30, align 4, !dbg !17322
  %cmp31 = fcmp olt float %28, 0.000000e+00, !dbg !17323
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !17324

if.then33:                                        ; preds = %if.then29
  %29 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17325
  %time = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %29, i32 0, i32 4, !dbg !17326
  %30 = load float, float* %time, align 8, !dbg !17326
  %conv34 = fpext float %30 to double, !dbg !17325
  %31 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17327
  %strand_ease35 = getelementptr inbounds %struct.Material, %struct.Material* %31, i32 0, i32 65, !dbg !17328
  %32 = load float, float* %strand_ease35, align 4, !dbg !17328
  %add36 = fadd float 1.000000e+00, %32, !dbg !17329
  %conv37 = fpext float %add36 to double, !dbg !17330
  %call38 = call double @pow(double %conv34, double %conv37) #5, !dbg !17331
  %conv39 = fptrunc double %call38 to float, !dbg !17331
  store float %conv39, float* %fac, align 4, !dbg !17332
  br label %if.end, !dbg !17333

if.else:                                          ; preds = %if.then29
  %33 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17334
  %time40 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %33, i32 0, i32 4, !dbg !17335
  %34 = load float, float* %time40, align 8, !dbg !17335
  %conv41 = fpext float %34 to double, !dbg !17334
  %35 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17336
  %strand_ease42 = getelementptr inbounds %struct.Material, %struct.Material* %35, i32 0, i32 65, !dbg !17337
  %36 = load float, float* %strand_ease42, align 4, !dbg !17337
  %sub = fsub float 1.000000e+00, %36, !dbg !17338
  %div43 = fdiv float 1.000000e+00, %sub, !dbg !17339
  %conv44 = fpext float %div43 to double, !dbg !17340
  %call45 = call double @pow(double %conv41, double %conv44) #5, !dbg !17341
  %conv46 = fptrunc double %call45 to float, !dbg !17341
  store float %conv46, float* %fac, align 4, !dbg !17342
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then33
  br label %if.end49, !dbg !17343

if.else47:                                        ; preds = %if.then
  %37 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17344
  %time48 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %37, i32 0, i32 4, !dbg !17345
  %38 = load float, float* %time48, align 8, !dbg !17345
  store float %38, float* %fac, align 4, !dbg !17346
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.end
  %39 = load float, float* %fac, align 4, !dbg !17347
  %sub50 = fsub float 1.000000e+00, %39, !dbg !17348
  %40 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17349
  %strand_sta = getelementptr inbounds %struct.Material, %struct.Material* %40, i32 0, i32 63, !dbg !17350
  %41 = load float, float* %strand_sta, align 4, !dbg !17350
  %mul51 = fmul float %sub50, %41, !dbg !17351
  %42 = load float, float* %fac, align 4, !dbg !17352
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17353
  %strand_end = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 64, !dbg !17354
  %44 = load float, float* %strand_end, align 8, !dbg !17354
  %mul52 = fmul float %42, %44, !dbg !17355
  %add53 = fadd float %mul51, %mul52, !dbg !17356
  store float %add53, float* %width, align 4, !dbg !17357
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17358
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 51, !dbg !17360
  %46 = load i32, i32* %mode, align 4, !dbg !17360
  %and = and i32 %46, 1073741824, !dbg !17361
  %tobool = icmp ne i32 %and, 0, !dbg !17361
  br i1 %tobool, label %if.then54, label %if.else66, !dbg !17362

if.then54:                                        ; preds = %if.end49
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17363
  %call56 = call float @len_v3(float* %arraydecay55), !dbg !17365
  store float %call56, float* %crosslen, align 4, !dbg !17366
  %47 = load float, float* %crosslen, align 4, !dbg !17367
  %mul57 = fmul float 2.000000e+00, %47, !dbg !17368
  %48 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17369
  %strand_min = getelementptr inbounds %struct.Material, %struct.Material* %48, i32 0, i32 67, !dbg !17370
  %49 = load float, float* %strand_min, align 4, !dbg !17370
  %mul58 = fmul float %mul57, %49, !dbg !17371
  %50 = load float, float* %w, align 4, !dbg !17372
  %div59 = fdiv float %mul58, %50, !dbg !17373
  store float %div59, float* %w, align 4, !dbg !17374
  %51 = load float, float* %width, align 4, !dbg !17375
  %52 = load float, float* %w, align 4, !dbg !17377
  %cmp60 = fcmp olt float %51, %52, !dbg !17378
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !17379

if.then62:                                        ; preds = %if.then54
  %53 = load float, float* %w, align 4, !dbg !17380
  store float %53, float* %width, align 4, !dbg !17381
  br label %if.end63, !dbg !17382

if.end63:                                         ; preds = %if.then62, %if.then54
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17383
  %54 = load float, float* %crosslen, align 4, !dbg !17384
  %div65 = fdiv float 5.000000e-01, %54, !dbg !17385
  call void @mul_v3_fl(float* %arraydecay64, float %div65), !dbg !17386
  br label %if.end68, !dbg !17387

if.else66:                                        ; preds = %if.end49
  %55 = load float, float* %w, align 4, !dbg !17388
  %56 = load float, float* %width, align 4, !dbg !17389
  %div67 = fdiv float %56, %55, !dbg !17389
  store float %div67, float* %width, align 4, !dbg !17389
  br label %if.end68

if.end68:                                         ; preds = %if.else66, %if.end63
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17390
  %57 = load float, float* %width, align 4, !dbg !17391
  call void @mul_v3_fl(float* %arraydecay69, float %57), !dbg !17392
  br label %if.end70, !dbg !17393

if.end70:                                         ; preds = %if.end68, %entry
  %58 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17394
  %mode71 = getelementptr inbounds %struct.Material, %struct.Material* %58, i32 0, i32 51, !dbg !17396
  %59 = load i32, i32* %mode71, align 4, !dbg !17396
  %and72 = and i32 %59, 16777216, !dbg !17397
  %tobool73 = icmp ne i32 %and72, 0, !dbg !17397
  br i1 %tobool73, label %if.then74, label %if.else75, !dbg !17398

if.then74:                                        ; preds = %if.end70
  store i32 65, i32* %flag, align 4, !dbg !17399
  br label %if.end76, !dbg !17400

if.else75:                                        ; preds = %if.end70
  store i32 1, i32* %flag, align 4, !dbg !17401
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  %60 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17402
  %strand_sta77 = getelementptr inbounds %struct.Material, %struct.Material* %60, i32 0, i32 63, !dbg !17404
  %61 = load float, float* %strand_sta77, align 4, !dbg !17404
  %cmp78 = fcmp oeq float %61, 1.000000e+00, !dbg !17405
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !17406

if.then80:                                        ; preds = %if.end76
  %62 = load i32, i32* %flag, align 4, !dbg !17407
  %or = or i32 %62, 4, !dbg !17407
  store i32 %or, i32* %flag, align 4, !dbg !17407
  br label %if.end81, !dbg !17408

if.end81:                                         ; preds = %if.then80, %if.end76
  %63 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17409
  %line = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %63, i32 0, i32 11, !dbg !17411
  %64 = load i32, i32* %line, align 4, !dbg !17411
  %tobool82 = icmp ne i32 %64, 0, !dbg !17409
  br i1 %tobool82, label %if.then83, label %if.else281, !dbg !17412

if.then83:                                        ; preds = %if.end81
  %65 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17413
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17415
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 11, !dbg !17416
  %67 = load i32, i32* %totvlak, align 4, !dbg !17417
  %inc = add nsw i32 %67, 1, !dbg !17417
  store i32 %inc, i32* %totvlak, align 4, !dbg !17417
  %call84 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %65, i32 %67), !dbg !17418
  store %struct.VlakRen* %call84, %struct.VlakRen** %vlr, align 8, !dbg !17419
  %68 = load i32, i32* %flag, align 4, !dbg !17420
  %conv85 = trunc i32 %68 to i8, !dbg !17420
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17421
  %flag86 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %69, i32 0, i32 7, !dbg !17422
  store i8 %conv85, i8* %flag86, align 1, !dbg !17423
  %70 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17424
  %71 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17425
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %71, i32 0, i32 10, !dbg !17426
  %72 = load i32, i32* %totvert, align 8, !dbg !17427
  %inc87 = add nsw i32 %72, 1, !dbg !17427
  store i32 %inc87, i32* %totvert, align 8, !dbg !17427
  %call88 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %70, i32 %72), !dbg !17428
  %73 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17429
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %73, i32 0, i32 0, !dbg !17430
  store %struct.VertRen* %call88, %struct.VertRen** %v1, align 8, !dbg !17431
  %74 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17432
  %75 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17433
  %totvert89 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %75, i32 0, i32 10, !dbg !17434
  %76 = load i32, i32* %totvert89, align 8, !dbg !17435
  %inc90 = add nsw i32 %76, 1, !dbg !17435
  store i32 %inc90, i32* %totvert89, align 8, !dbg !17435
  %call91 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %74, i32 %76), !dbg !17436
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17437
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %77, i32 0, i32 1, !dbg !17438
  store %struct.VertRen* %call91, %struct.VertRen** %v2, align 8, !dbg !17439
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17440
  %79 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17441
  %totvert92 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %79, i32 0, i32 10, !dbg !17442
  %80 = load i32, i32* %totvert92, align 8, !dbg !17443
  %inc93 = add nsw i32 %80, 1, !dbg !17443
  store i32 %inc93, i32* %totvert92, align 8, !dbg !17443
  %call94 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %78, i32 %80), !dbg !17444
  %81 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17445
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %81, i32 0, i32 2, !dbg !17446
  store %struct.VertRen* %call94, %struct.VertRen** %v3, align 8, !dbg !17447
  %82 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17448
  %83 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17449
  %totvert95 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %83, i32 0, i32 10, !dbg !17450
  %84 = load i32, i32* %totvert95, align 8, !dbg !17451
  %inc96 = add nsw i32 %84, 1, !dbg !17451
  store i32 %inc96, i32* %totvert95, align 8, !dbg !17451
  %call97 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %82, i32 %84), !dbg !17452
  %85 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17453
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %85, i32 0, i32 3, !dbg !17454
  store %struct.VertRen* %call97, %struct.VertRen** %v4, align 8, !dbg !17455
  %86 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17456
  %v198 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %86, i32 0, i32 0, !dbg !17457
  %87 = load %struct.VertRen*, %struct.VertRen** %v198, align 8, !dbg !17457
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %87, i32 0, i32 0, !dbg !17458
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !17456
  %88 = load float*, float** %vec.addr, align 8, !dbg !17459
  call void @copy_v3_v3(float* %arraydecay99, float* %88), !dbg !17460
  %89 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17461
  %v1100 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %89, i32 0, i32 0, !dbg !17462
  %90 = load %struct.VertRen*, %struct.VertRen** %v1100, align 8, !dbg !17462
  %co101 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %90, i32 0, i32 0, !dbg !17463
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %co101, i64 0, i64 0, !dbg !17461
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17464
  call void @add_v3_v3(float* %arraydecay102, float* %arraydecay103), !dbg !17465
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17466
  %v1104 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %91, i32 0, i32 0, !dbg !17467
  %92 = load %struct.VertRen*, %struct.VertRen** %v1104, align 8, !dbg !17467
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %92, i32 0, i32 1, !dbg !17468
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !17466
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17469
  call void @copy_v3_v3(float* %arraydecay105, float* %arraydecay106), !dbg !17470
  %93 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17471
  %orco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %93, i32 0, i32 1, !dbg !17472
  %94 = load float*, float** %orco, align 8, !dbg !17472
  %95 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17473
  %v1107 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %95, i32 0, i32 0, !dbg !17474
  %96 = load %struct.VertRen*, %struct.VertRen** %v1107, align 8, !dbg !17474
  %orco108 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %96, i32 0, i32 2, !dbg !17475
  store float* %94, float** %orco108, align 8, !dbg !17476
  %97 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17477
  %v1109 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %97, i32 0, i32 0, !dbg !17478
  %98 = load %struct.VertRen*, %struct.VertRen** %v1109, align 8, !dbg !17478
  %accum = getelementptr inbounds %struct.VertRen, %struct.VertRen* %98, i32 0, i32 4, !dbg !17479
  store float -1.000000e+00, float* %accum, align 4, !dbg !17480
  %99 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17481
  %v2110 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %99, i32 0, i32 1, !dbg !17482
  %100 = load %struct.VertRen*, %struct.VertRen** %v2110, align 8, !dbg !17482
  %co111 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %100, i32 0, i32 0, !dbg !17483
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !17481
  %101 = load float*, float** %vec.addr, align 8, !dbg !17484
  call void @copy_v3_v3(float* %arraydecay112, float* %101), !dbg !17485
  %102 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17486
  %v2113 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %102, i32 0, i32 1, !dbg !17487
  %103 = load %struct.VertRen*, %struct.VertRen** %v2113, align 8, !dbg !17487
  %co114 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %103, i32 0, i32 0, !dbg !17488
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %co114, i64 0, i64 0, !dbg !17486
  %104 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17489
  %v2116 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %104, i32 0, i32 1, !dbg !17490
  %105 = load %struct.VertRen*, %struct.VertRen** %v2116, align 8, !dbg !17490
  %co117 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %105, i32 0, i32 0, !dbg !17491
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %co117, i64 0, i64 0, !dbg !17489
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17492
  call void @sub_v3_v3v3(float* %arraydecay115, float* %arraydecay118, float* %arraydecay119), !dbg !17493
  %106 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17494
  %v2120 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %106, i32 0, i32 1, !dbg !17495
  %107 = load %struct.VertRen*, %struct.VertRen** %v2120, align 8, !dbg !17495
  %n121 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %107, i32 0, i32 1, !dbg !17496
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %n121, i64 0, i64 0, !dbg !17494
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17497
  call void @copy_v3_v3(float* %arraydecay122, float* %arraydecay123), !dbg !17498
  %108 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17499
  %orco124 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %108, i32 0, i32 1, !dbg !17500
  %109 = load float*, float** %orco124, align 8, !dbg !17500
  %110 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17501
  %v2125 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %110, i32 0, i32 1, !dbg !17502
  %111 = load %struct.VertRen*, %struct.VertRen** %v2125, align 8, !dbg !17502
  %orco126 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %111, i32 0, i32 2, !dbg !17503
  store float* %109, float** %orco126, align 8, !dbg !17504
  %112 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17505
  %v1127 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %112, i32 0, i32 0, !dbg !17506
  %113 = load %struct.VertRen*, %struct.VertRen** %v1127, align 8, !dbg !17506
  %accum128 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %113, i32 0, i32 4, !dbg !17507
  %114 = load float, float* %accum128, align 4, !dbg !17507
  %115 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17508
  %v2129 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %115, i32 0, i32 1, !dbg !17509
  %116 = load %struct.VertRen*, %struct.VertRen** %v2129, align 8, !dbg !17509
  %accum130 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %116, i32 0, i32 4, !dbg !17510
  store float %114, float* %accum130, align 4, !dbg !17511
  %117 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17512
  %v4131 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %117, i32 0, i32 3, !dbg !17513
  %118 = load %struct.VertRen*, %struct.VertRen** %v4131, align 8, !dbg !17513
  %co132 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %118, i32 0, i32 0, !dbg !17514
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co132, i64 0, i64 0, !dbg !17512
  %119 = load float*, float** %vec1.addr, align 8, !dbg !17515
  call void @copy_v3_v3(float* %arraydecay133, float* %119), !dbg !17516
  %120 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17517
  %v4134 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %120, i32 0, i32 3, !dbg !17518
  %121 = load %struct.VertRen*, %struct.VertRen** %v4134, align 8, !dbg !17518
  %co135 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %121, i32 0, i32 0, !dbg !17519
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %co135, i64 0, i64 0, !dbg !17517
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17520
  call void @add_v3_v3(float* %arraydecay136, float* %arraydecay137), !dbg !17521
  %122 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17522
  %v4138 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %122, i32 0, i32 3, !dbg !17523
  %123 = load %struct.VertRen*, %struct.VertRen** %v4138, align 8, !dbg !17523
  %n139 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %123, i32 0, i32 1, !dbg !17524
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %n139, i64 0, i64 0, !dbg !17522
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17525
  call void @copy_v3_v3(float* %arraydecay140, float* %arraydecay141), !dbg !17526
  %124 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17527
  %orco142 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %124, i32 0, i32 1, !dbg !17528
  %125 = load float*, float** %orco142, align 8, !dbg !17528
  %126 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17529
  %v4143 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %126, i32 0, i32 3, !dbg !17530
  %127 = load %struct.VertRen*, %struct.VertRen** %v4143, align 8, !dbg !17530
  %orco144 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %127, i32 0, i32 2, !dbg !17531
  store float* %125, float** %orco144, align 8, !dbg !17532
  %128 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17533
  %v4145 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %128, i32 0, i32 3, !dbg !17534
  %129 = load %struct.VertRen*, %struct.VertRen** %v4145, align 8, !dbg !17534
  %accum146 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %129, i32 0, i32 4, !dbg !17535
  store float 1.000000e+00, float* %accum146, align 4, !dbg !17536
  %130 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17537
  %v3147 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %130, i32 0, i32 2, !dbg !17538
  %131 = load %struct.VertRen*, %struct.VertRen** %v3147, align 8, !dbg !17538
  %co148 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %131, i32 0, i32 0, !dbg !17539
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %co148, i64 0, i64 0, !dbg !17537
  %132 = load float*, float** %vec1.addr, align 8, !dbg !17540
  call void @copy_v3_v3(float* %arraydecay149, float* %132), !dbg !17541
  %133 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17542
  %v3150 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %133, i32 0, i32 2, !dbg !17543
  %134 = load %struct.VertRen*, %struct.VertRen** %v3150, align 8, !dbg !17543
  %co151 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %134, i32 0, i32 0, !dbg !17544
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %co151, i64 0, i64 0, !dbg !17542
  %135 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17545
  %v3153 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %135, i32 0, i32 2, !dbg !17546
  %136 = load %struct.VertRen*, %struct.VertRen** %v3153, align 8, !dbg !17546
  %co154 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %136, i32 0, i32 0, !dbg !17547
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %co154, i64 0, i64 0, !dbg !17545
  %arraydecay156 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17548
  call void @sub_v3_v3v3(float* %arraydecay152, float* %arraydecay155, float* %arraydecay156), !dbg !17549
  %137 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17550
  %v3157 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %137, i32 0, i32 2, !dbg !17551
  %138 = load %struct.VertRen*, %struct.VertRen** %v3157, align 8, !dbg !17551
  %n158 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %138, i32 0, i32 1, !dbg !17552
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %n158, i64 0, i64 0, !dbg !17550
  %arraydecay160 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17553
  call void @copy_v3_v3(float* %arraydecay159, float* %arraydecay160), !dbg !17554
  %139 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17555
  %orco161 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %139, i32 0, i32 1, !dbg !17556
  %140 = load float*, float** %orco161, align 8, !dbg !17556
  %141 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17557
  %v3162 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %141, i32 0, i32 2, !dbg !17558
  %142 = load %struct.VertRen*, %struct.VertRen** %v3162, align 8, !dbg !17558
  %orco163 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %142, i32 0, i32 2, !dbg !17559
  store float* %140, float** %orco163, align 8, !dbg !17560
  %143 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17561
  %v4164 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %143, i32 0, i32 3, !dbg !17562
  %144 = load %struct.VertRen*, %struct.VertRen** %v4164, align 8, !dbg !17562
  %accum165 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %144, i32 0, i32 4, !dbg !17563
  %145 = load float, float* %accum165, align 4, !dbg !17563
  %146 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17564
  %v3166 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %146, i32 0, i32 2, !dbg !17565
  %147 = load %struct.VertRen*, %struct.VertRen** %v3166, align 8, !dbg !17565
  %accum167 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %147, i32 0, i32 4, !dbg !17566
  store float %145, float* %accum167, align 4, !dbg !17567
  %148 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17568
  %n168 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %148, i32 0, i32 4, !dbg !17569
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %n168, i64 0, i64 0, !dbg !17568
  %149 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17570
  %v4170 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %149, i32 0, i32 3, !dbg !17571
  %150 = load %struct.VertRen*, %struct.VertRen** %v4170, align 8, !dbg !17571
  %co171 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %150, i32 0, i32 0, !dbg !17572
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %co171, i64 0, i64 0, !dbg !17570
  %151 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17573
  %v3173 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %151, i32 0, i32 2, !dbg !17574
  %152 = load %struct.VertRen*, %struct.VertRen** %v3173, align 8, !dbg !17574
  %co174 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %152, i32 0, i32 0, !dbg !17575
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %co174, i64 0, i64 0, !dbg !17573
  %153 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17576
  %v2176 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %153, i32 0, i32 1, !dbg !17577
  %154 = load %struct.VertRen*, %struct.VertRen** %v2176, align 8, !dbg !17577
  %co177 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %154, i32 0, i32 0, !dbg !17578
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %co177, i64 0, i64 0, !dbg !17576
  %155 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17579
  %v1179 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %155, i32 0, i32 0, !dbg !17580
  %156 = load %struct.VertRen*, %struct.VertRen** %v1179, align 8, !dbg !17580
  %co180 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %156, i32 0, i32 0, !dbg !17581
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %co180, i64 0, i64 0, !dbg !17579
  %call182 = call float @normal_quad_v3(float* %arraydecay169, float* %arraydecay172, float* %arraydecay175, float* %arraydecay178, float* %arraydecay181), !dbg !17582
  %157 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !17583
  %158 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17584
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %158, i32 0, i32 5, !dbg !17585
  store %struct.Material* %157, %struct.Material** %mat, align 8, !dbg !17586
  %159 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17587
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %159, i32 0, i32 8, !dbg !17588
  store i8 2, i8* %ec, align 2, !dbg !17589
  %160 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17590
  %surfnor = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %160, i32 0, i32 3, !dbg !17592
  %161 = load float*, float** %surfnor, align 8, !dbg !17592
  %tobool183 = icmp ne float* %161, null, !dbg !17590
  br i1 %tobool183, label %if.then184, label %if.end187, !dbg !17593

if.then184:                                       ; preds = %if.then83
  call void @llvm.dbg.declare(metadata float** %snor, metadata !17594, metadata !DIExpression()), !dbg !17596
  %162 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17597
  %163 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17598
  %call185 = call float* @RE_vlakren_get_surfnor(%struct.ObjectRen* %162, %struct.VlakRen* %163, i32 1), !dbg !17599
  store float* %call185, float** %snor, align 8, !dbg !17596
  %164 = load float*, float** %snor, align 8, !dbg !17600
  %165 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17601
  %surfnor186 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %165, i32 0, i32 3, !dbg !17602
  %166 = load float*, float** %surfnor186, align 8, !dbg !17602
  call void @copy_v3_v3(float* %164, float* %166), !dbg !17603
  br label %if.end187, !dbg !17604

if.end187:                                        ; preds = %if.then184, %if.then83
  %167 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17605
  %uvco = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %167, i32 0, i32 2, !dbg !17607
  %168 = load float*, float** %uvco, align 8, !dbg !17607
  %tobool188 = icmp ne float* %168, null, !dbg !17605
  br i1 %tobool188, label %if.then189, label %if.end256, !dbg !17608

if.then189:                                       ; preds = %if.end187
  store i32 0, i32* %i, align 4, !dbg !17609
  br label %for.cond, !dbg !17612

for.cond:                                         ; preds = %for.inc, %if.then189
  %169 = load i32, i32* %i, align 4, !dbg !17613
  %170 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17615
  %totuv = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %170, i32 0, i32 8, !dbg !17616
  %171 = load i32, i32* %totuv, align 8, !dbg !17616
  %cmp190 = icmp slt i32 %169, %171, !dbg !17617
  br i1 %cmp190, label %for.body, label %for.end, !dbg !17618

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf, metadata !17619, metadata !DIExpression()), !dbg !17621
  %172 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17622
  %173 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17623
  %174 = load i32, i32* %i, align 4, !dbg !17624
  %call192 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %172, %struct.VlakRen* %173, i32 %174, i8** null, i32 1), !dbg !17625
  store %struct.MTFace* %call192, %struct.MTFace** %mtf, align 8, !dbg !17626
  %175 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17627
  %uvco193 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %175, i32 0, i32 2, !dbg !17628
  %176 = load float*, float** %uvco193, align 8, !dbg !17628
  %177 = load i32, i32* %i, align 4, !dbg !17629
  %mul194 = mul nsw i32 2, %177, !dbg !17630
  %idx.ext = sext i32 %mul194 to i64, !dbg !17631
  %add.ptr = getelementptr inbounds float, float* %176, i64 %idx.ext, !dbg !17631
  %arrayidx195 = getelementptr inbounds float, float* %add.ptr, i64 0, !dbg !17632
  %178 = load float, float* %arrayidx195, align 4, !dbg !17632
  %179 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17633
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %179, i32 0, i32 0, !dbg !17634
  %arrayidx196 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 3, !dbg !17633
  %arrayidx197 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx196, i64 0, i64 0, !dbg !17633
  store float %178, float* %arrayidx197, align 8, !dbg !17635
  %180 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17636
  %uv198 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %180, i32 0, i32 0, !dbg !17637
  %arrayidx199 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv198, i64 0, i64 2, !dbg !17636
  %arrayidx200 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx199, i64 0, i64 0, !dbg !17636
  store float %178, float* %arrayidx200, align 8, !dbg !17638
  %181 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17639
  %uv201 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %181, i32 0, i32 0, !dbg !17640
  %arrayidx202 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv201, i64 0, i64 1, !dbg !17639
  %arrayidx203 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx202, i64 0, i64 0, !dbg !17639
  store float %178, float* %arrayidx203, align 8, !dbg !17641
  %182 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17642
  %uv204 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %182, i32 0, i32 0, !dbg !17643
  %arrayidx205 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv204, i64 0, i64 0, !dbg !17642
  %arrayidx206 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx205, i64 0, i64 0, !dbg !17642
  store float %178, float* %arrayidx206, align 8, !dbg !17644
  %183 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17645
  %uvco207 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %183, i32 0, i32 2, !dbg !17646
  %184 = load float*, float** %uvco207, align 8, !dbg !17646
  %185 = load i32, i32* %i, align 4, !dbg !17647
  %mul208 = mul nsw i32 2, %185, !dbg !17648
  %idx.ext209 = sext i32 %mul208 to i64, !dbg !17649
  %add.ptr210 = getelementptr inbounds float, float* %184, i64 %idx.ext209, !dbg !17649
  %arrayidx211 = getelementptr inbounds float, float* %add.ptr210, i64 1, !dbg !17650
  %186 = load float, float* %arrayidx211, align 4, !dbg !17650
  %187 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17651
  %uv212 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %187, i32 0, i32 0, !dbg !17652
  %arrayidx213 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv212, i64 0, i64 3, !dbg !17651
  %arrayidx214 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx213, i64 0, i64 1, !dbg !17651
  store float %186, float* %arrayidx214, align 4, !dbg !17653
  %188 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17654
  %uv215 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %188, i32 0, i32 0, !dbg !17655
  %arrayidx216 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv215, i64 0, i64 2, !dbg !17654
  %arrayidx217 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx216, i64 0, i64 1, !dbg !17654
  store float %186, float* %arrayidx217, align 4, !dbg !17656
  %189 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17657
  %uv218 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %189, i32 0, i32 0, !dbg !17658
  %arrayidx219 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv218, i64 0, i64 1, !dbg !17657
  %arrayidx220 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx219, i64 0, i64 1, !dbg !17657
  store float %186, float* %arrayidx220, align 4, !dbg !17659
  %190 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !17660
  %uv221 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %190, i32 0, i32 0, !dbg !17661
  %arrayidx222 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv221, i64 0, i64 0, !dbg !17660
  %arrayidx223 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx222, i64 0, i64 1, !dbg !17660
  store float %186, float* %arrayidx223, align 4, !dbg !17662
  br label %for.inc, !dbg !17663

for.inc:                                          ; preds = %for.body
  %191 = load i32, i32* %i, align 4, !dbg !17664
  %inc224 = add nsw i32 %191, 1, !dbg !17664
  store i32 %inc224, i32* %i, align 4, !dbg !17664
  br label %for.cond, !dbg !17665, !llvm.loop !17666

for.end:                                          ; preds = %for.cond
  %192 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17668
  %override_uv = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %192, i32 0, i32 13, !dbg !17670
  %193 = load i32, i32* %override_uv, align 4, !dbg !17670
  %cmp225 = icmp sge i32 %193, 0, !dbg !17671
  br i1 %cmp225, label %if.then227, label %if.end255, !dbg !17672

if.then227:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf228, metadata !17673, metadata !DIExpression()), !dbg !17675
  %194 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17676
  %195 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17677
  %196 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17678
  %override_uv229 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %196, i32 0, i32 13, !dbg !17679
  %197 = load i32, i32* %override_uv229, align 4, !dbg !17679
  %call230 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %194, %struct.VlakRen* %195, i32 %197, i8** null, i32 0), !dbg !17680
  store %struct.MTFace* %call230, %struct.MTFace** %mtf228, align 8, !dbg !17681
  %198 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17682
  %uv231 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %198, i32 0, i32 0, !dbg !17683
  %arrayidx232 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv231, i64 0, i64 3, !dbg !17682
  %arrayidx233 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx232, i64 0, i64 0, !dbg !17682
  store float 0.000000e+00, float* %arrayidx233, align 8, !dbg !17684
  %199 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17685
  %uv234 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %199, i32 0, i32 0, !dbg !17686
  %arrayidx235 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv234, i64 0, i64 0, !dbg !17685
  %arrayidx236 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx235, i64 0, i64 0, !dbg !17685
  store float 0.000000e+00, float* %arrayidx236, align 8, !dbg !17687
  %200 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17688
  %uv237 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %200, i32 0, i32 0, !dbg !17689
  %arrayidx238 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv237, i64 0, i64 2, !dbg !17688
  %arrayidx239 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx238, i64 0, i64 0, !dbg !17688
  store float 1.000000e+00, float* %arrayidx239, align 8, !dbg !17690
  %201 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17691
  %uv240 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %201, i32 0, i32 0, !dbg !17692
  %arrayidx241 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv240, i64 0, i64 1, !dbg !17691
  %arrayidx242 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx241, i64 0, i64 0, !dbg !17691
  store float 1.000000e+00, float* %arrayidx242, align 8, !dbg !17693
  %202 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17694
  %uv243 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %202, i32 0, i32 0, !dbg !17695
  %arrayidx244 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv243, i64 0, i64 1, !dbg !17694
  %arrayidx245 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx244, i64 0, i64 1, !dbg !17694
  store float 0.000000e+00, float* %arrayidx245, align 4, !dbg !17696
  %203 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17697
  %uv246 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %203, i32 0, i32 0, !dbg !17698
  %arrayidx247 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv246, i64 0, i64 0, !dbg !17697
  %arrayidx248 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx247, i64 0, i64 1, !dbg !17697
  store float 0.000000e+00, float* %arrayidx248, align 4, !dbg !17699
  %204 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17700
  %uv249 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %204, i32 0, i32 0, !dbg !17701
  %arrayidx250 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv249, i64 0, i64 3, !dbg !17700
  %arrayidx251 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx250, i64 0, i64 1, !dbg !17700
  store float 1.000000e+00, float* %arrayidx251, align 4, !dbg !17702
  %205 = load %struct.MTFace*, %struct.MTFace** %mtf228, align 8, !dbg !17703
  %uv252 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %205, i32 0, i32 0, !dbg !17704
  %arrayidx253 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv252, i64 0, i64 2, !dbg !17703
  %arrayidx254 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx253, i64 0, i64 1, !dbg !17703
  store float 1.000000e+00, float* %arrayidx254, align 4, !dbg !17705
  br label %if.end255, !dbg !17706

if.end255:                                        ; preds = %if.then227, %for.end
  br label %if.end256, !dbg !17707

if.end256:                                        ; preds = %if.end255, %if.end187
  %206 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17708
  %mcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %206, i32 0, i32 0, !dbg !17710
  %207 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !17710
  %tobool257 = icmp ne %struct.MCol* %207, null, !dbg !17708
  br i1 %tobool257, label %if.then258, label %if.end280, !dbg !17711

if.then258:                                       ; preds = %if.end256
  store i32 0, i32* %i, align 4, !dbg !17712
  br label %for.cond259, !dbg !17715

for.cond259:                                      ; preds = %for.inc277, %if.then258
  %208 = load i32, i32* %i, align 4, !dbg !17716
  %209 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17718
  %totcol = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %209, i32 0, i32 9, !dbg !17719
  %210 = load i32, i32* %totcol, align 4, !dbg !17719
  %cmp260 = icmp slt i32 %208, %210, !dbg !17720
  br i1 %cmp260, label %for.body262, label %for.end279, !dbg !17721

for.body262:                                      ; preds = %for.cond259
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !17722, metadata !DIExpression()), !dbg !17724
  %211 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17725
  %212 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17726
  %213 = load i32, i32* %i, align 4, !dbg !17727
  %call263 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %211, %struct.VlakRen* %212, i32 %213, i8** null, i32 1), !dbg !17728
  store %struct.MCol* %call263, %struct.MCol** %mc, align 8, !dbg !17729
  %214 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17730
  %arrayidx264 = getelementptr inbounds %struct.MCol, %struct.MCol* %214, i64 0, !dbg !17730
  %215 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17731
  %arrayidx265 = getelementptr inbounds %struct.MCol, %struct.MCol* %215, i64 1, !dbg !17731
  %216 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17732
  %arrayidx266 = getelementptr inbounds %struct.MCol, %struct.MCol* %216, i64 2, !dbg !17732
  %217 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17733
  %arrayidx267 = getelementptr inbounds %struct.MCol, %struct.MCol* %217, i64 3, !dbg !17733
  %218 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17734
  %mcol268 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %218, i32 0, i32 0, !dbg !17735
  %219 = load %struct.MCol*, %struct.MCol** %mcol268, align 8, !dbg !17735
  %220 = load i32, i32* %i, align 4, !dbg !17736
  %idxprom = sext i32 %220 to i64, !dbg !17734
  %arrayidx269 = getelementptr inbounds %struct.MCol, %struct.MCol* %219, i64 %idxprom, !dbg !17734
  %221 = bitcast %struct.MCol* %arrayidx267 to i8*, !dbg !17734
  %222 = bitcast %struct.MCol* %arrayidx269 to i8*, !dbg !17734
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %221, i8* align 1 %222, i64 4, i1 false), !dbg !17734
  %223 = bitcast %struct.MCol* %arrayidx266 to i8*, !dbg !17737
  %224 = bitcast %struct.MCol* %arrayidx267 to i8*, !dbg !17737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %223, i8* align 1 %224, i64 4, i1 false), !dbg !17737
  %225 = bitcast %struct.MCol* %arrayidx265 to i8*, !dbg !17738
  %226 = bitcast %struct.MCol* %arrayidx266 to i8*, !dbg !17738
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %225, i8* align 1 %226, i64 4, i1 false), !dbg !17738
  %227 = bitcast %struct.MCol* %arrayidx264 to i8*, !dbg !17739
  %228 = bitcast %struct.MCol* %arrayidx265 to i8*, !dbg !17739
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %227, i8* align 1 %228, i64 4, i1 false), !dbg !17739
  %229 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17740
  %arrayidx270 = getelementptr inbounds %struct.MCol, %struct.MCol* %229, i64 0, !dbg !17740
  %230 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17741
  %arrayidx271 = getelementptr inbounds %struct.MCol, %struct.MCol* %230, i64 1, !dbg !17741
  %231 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17742
  %arrayidx272 = getelementptr inbounds %struct.MCol, %struct.MCol* %231, i64 2, !dbg !17742
  %232 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !17743
  %arrayidx273 = getelementptr inbounds %struct.MCol, %struct.MCol* %232, i64 3, !dbg !17743
  %233 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17744
  %mcol274 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %233, i32 0, i32 0, !dbg !17745
  %234 = load %struct.MCol*, %struct.MCol** %mcol274, align 8, !dbg !17745
  %235 = load i32, i32* %i, align 4, !dbg !17746
  %idxprom275 = sext i32 %235 to i64, !dbg !17744
  %arrayidx276 = getelementptr inbounds %struct.MCol, %struct.MCol* %234, i64 %idxprom275, !dbg !17744
  %236 = bitcast %struct.MCol* %arrayidx273 to i8*, !dbg !17744
  %237 = bitcast %struct.MCol* %arrayidx276 to i8*, !dbg !17744
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %236, i8* align 1 %237, i64 4, i1 false), !dbg !17744
  %238 = bitcast %struct.MCol* %arrayidx272 to i8*, !dbg !17747
  %239 = bitcast %struct.MCol* %arrayidx273 to i8*, !dbg !17747
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %238, i8* align 1 %239, i64 4, i1 false), !dbg !17747
  %240 = bitcast %struct.MCol* %arrayidx271 to i8*, !dbg !17748
  %241 = bitcast %struct.MCol* %arrayidx272 to i8*, !dbg !17748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %240, i8* align 1 %241, i64 4, i1 false), !dbg !17748
  %242 = bitcast %struct.MCol* %arrayidx270 to i8*, !dbg !17749
  %243 = bitcast %struct.MCol* %arrayidx271 to i8*, !dbg !17749
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %242, i8* align 1 %243, i64 4, i1 false), !dbg !17749
  br label %for.inc277, !dbg !17750

for.inc277:                                       ; preds = %for.body262
  %244 = load i32, i32* %i, align 4, !dbg !17751
  %inc278 = add nsw i32 %244, 1, !dbg !17751
  store i32 %inc278, i32* %i, align 4, !dbg !17751
  br label %for.cond259, !dbg !17752, !llvm.loop !17753

for.end279:                                       ; preds = %for.cond259
  br label %if.end280, !dbg !17755

if.end280:                                        ; preds = %for.end279, %if.end256
  br label %if.end601, !dbg !17756

if.else281:                                       ; preds = %if.end81
  %245 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17757
  %first = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %245, i32 0, i32 10, !dbg !17759
  %246 = load i32, i32* %first, align 8, !dbg !17759
  %tobool282 = icmp ne i32 %246, 0, !dbg !17757
  br i1 %tobool282, label %if.then283, label %if.else319, !dbg !17760

if.then283:                                       ; preds = %if.else281
  %247 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17761
  %adapt = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %247, i32 0, i32 12, !dbg !17764
  %248 = load i32, i32* %adapt, align 8, !dbg !17764
  %tobool284 = icmp ne i32 %248, 0, !dbg !17761
  br i1 %tobool284, label %if.then285, label %if.end287, !dbg !17765

if.then285:                                       ; preds = %if.then283
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17766
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.anor, i64 0, i64 0), float* %arraydecay286), !dbg !17768
  %249 = load float*, float** %vec.addr, align 8, !dbg !17769
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.avec, i64 0, i64 0), float* %249), !dbg !17770
  store i32 1, i32* @static_particle_strand.second, align 4, !dbg !17771
  br label %if.end287, !dbg !17772

if.end287:                                        ; preds = %if.then285, %if.then283
  %250 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17773
  %251 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17774
  %totvert288 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %251, i32 0, i32 10, !dbg !17775
  %252 = load i32, i32* %totvert288, align 8, !dbg !17776
  %inc289 = add nsw i32 %252, 1, !dbg !17776
  store i32 %inc289, i32* %totvert288, align 8, !dbg !17776
  %call290 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %250, i32 %252), !dbg !17777
  store %struct.VertRen* %call290, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17778
  %253 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17779
  %254 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17780
  %totvert291 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %254, i32 0, i32 10, !dbg !17781
  %255 = load i32, i32* %totvert291, align 8, !dbg !17782
  %inc292 = add nsw i32 %255, 1, !dbg !17782
  store i32 %inc292, i32* %totvert291, align 8, !dbg !17782
  %call293 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %253, i32 %255), !dbg !17783
  store %struct.VertRen* %call293, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17784
  %256 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17785
  %co294 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %256, i32 0, i32 0, !dbg !17786
  %arraydecay295 = getelementptr inbounds [3 x float], [3 x float]* %co294, i64 0, i64 0, !dbg !17785
  %257 = load float*, float** %vec.addr, align 8, !dbg !17787
  call void @copy_v3_v3(float* %arraydecay295, float* %257), !dbg !17788
  %258 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17789
  %co296 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %258, i32 0, i32 0, !dbg !17790
  %arraydecay297 = getelementptr inbounds [3 x float], [3 x float]* %co296, i64 0, i64 0, !dbg !17789
  %arraydecay298 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17791
  call void @add_v3_v3(float* %arraydecay297, float* %arraydecay298), !dbg !17792
  %259 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17793
  %n299 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %259, i32 0, i32 1, !dbg !17794
  %arraydecay300 = getelementptr inbounds [3 x float], [3 x float]* %n299, i64 0, i64 0, !dbg !17793
  %arraydecay301 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17795
  call void @copy_v3_v3(float* %arraydecay300, float* %arraydecay301), !dbg !17796
  %260 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17797
  %orco302 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %260, i32 0, i32 1, !dbg !17798
  %261 = load float*, float** %orco302, align 8, !dbg !17798
  %262 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17799
  %orco303 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %262, i32 0, i32 2, !dbg !17800
  store float* %261, float** %orco303, align 8, !dbg !17801
  %263 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17802
  %accum304 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %263, i32 0, i32 4, !dbg !17803
  store float -1.000000e+00, float* %accum304, align 4, !dbg !17804
  %264 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17805
  %co305 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %264, i32 0, i32 0, !dbg !17806
  %arraydecay306 = getelementptr inbounds [3 x float], [3 x float]* %co305, i64 0, i64 0, !dbg !17805
  %265 = load float*, float** %vec.addr, align 8, !dbg !17807
  call void @copy_v3_v3(float* %arraydecay306, float* %265), !dbg !17808
  %266 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17809
  %co307 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %266, i32 0, i32 0, !dbg !17810
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %co307, i64 0, i64 0, !dbg !17809
  %267 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17811
  %co309 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %267, i32 0, i32 0, !dbg !17812
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %co309, i64 0, i64 0, !dbg !17811
  %arraydecay311 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !17813
  call void @sub_v3_v3v3(float* %arraydecay308, float* %arraydecay310, float* %arraydecay311), !dbg !17814
  %268 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17815
  %n312 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %268, i32 0, i32 1, !dbg !17816
  %arraydecay313 = getelementptr inbounds [3 x float], [3 x float]* %n312, i64 0, i64 0, !dbg !17815
  %arraydecay314 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17817
  call void @copy_v3_v3(float* %arraydecay313, float* %arraydecay314), !dbg !17818
  %269 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17819
  %orco315 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %269, i32 0, i32 1, !dbg !17820
  %270 = load float*, float** %orco315, align 8, !dbg !17820
  %271 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17821
  %orco316 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %271, i32 0, i32 2, !dbg !17822
  store float* %270, float** %orco316, align 8, !dbg !17823
  %272 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17824
  %accum317 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %272, i32 0, i32 4, !dbg !17825
  %273 = load float, float* %accum317, align 4, !dbg !17825
  %274 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17826
  %accum318 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %274, i32 0, i32 4, !dbg !17827
  store float %273, float* %accum318, align 4, !dbg !17828
  br label %if.end600, !dbg !17829

if.else319:                                       ; preds = %if.else281
  %275 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17830
  %adapt320 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %275, i32 0, i32 12, !dbg !17833
  %276 = load i32, i32* %adapt320, align 8, !dbg !17833
  %cmp321 = icmp eq i32 %276, 0, !dbg !17834
  br i1 %cmp321, label %if.then324, label %lor.lhs.false, !dbg !17835

lor.lhs.false:                                    ; preds = %if.else319
  %277 = load i32, i32* @static_particle_strand.second, align 4, !dbg !17836
  %tobool323 = icmp ne i32 %277, 0, !dbg !17836
  br i1 %tobool323, label %if.then324, label %if.else347, !dbg !17837

if.then324:                                       ; preds = %lor.lhs.false, %if.else319
  %278 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17838
  %279 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17840
  %totvlak325 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %279, i32 0, i32 11, !dbg !17841
  %280 = load i32, i32* %totvlak325, align 4, !dbg !17842
  %inc326 = add nsw i32 %280, 1, !dbg !17842
  store i32 %inc326, i32* %totvlak325, align 4, !dbg !17842
  %call327 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %278, i32 %280), !dbg !17843
  store %struct.VlakRen* %call327, %struct.VlakRen** %vlr, align 8, !dbg !17844
  %281 = load i32, i32* %flag, align 4, !dbg !17845
  %conv328 = trunc i32 %281 to i8, !dbg !17845
  %282 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17846
  %flag329 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %282, i32 0, i32 7, !dbg !17847
  store i8 %conv328, i8* %flag329, align 1, !dbg !17848
  %283 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17849
  %284 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17850
  %v1330 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %284, i32 0, i32 0, !dbg !17851
  store %struct.VertRen* %283, %struct.VertRen** %v1330, align 8, !dbg !17852
  %285 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17853
  %286 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17854
  %v2331 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %286, i32 0, i32 1, !dbg !17855
  store %struct.VertRen* %285, %struct.VertRen** %v2331, align 8, !dbg !17856
  %287 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17857
  %288 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17858
  %totvert332 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %288, i32 0, i32 10, !dbg !17859
  %289 = load i32, i32* %totvert332, align 8, !dbg !17860
  %inc333 = add nsw i32 %289, 1, !dbg !17860
  store i32 %inc333, i32* %totvert332, align 8, !dbg !17860
  %call334 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %287, i32 %289), !dbg !17861
  %290 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17862
  %v3335 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %290, i32 0, i32 2, !dbg !17863
  store %struct.VertRen* %call334, %struct.VertRen** %v3335, align 8, !dbg !17864
  %291 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17865
  %292 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17866
  %totvert336 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %292, i32 0, i32 10, !dbg !17867
  %293 = load i32, i32* %totvert336, align 8, !dbg !17868
  %inc337 = add nsw i32 %293, 1, !dbg !17868
  store i32 %inc337, i32* %totvert336, align 8, !dbg !17868
  %call338 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %291, i32 %293), !dbg !17869
  %294 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17870
  %v4339 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %294, i32 0, i32 3, !dbg !17871
  store %struct.VertRen* %call338, %struct.VertRen** %v4339, align 8, !dbg !17872
  %295 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17873
  %v4340 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %295, i32 0, i32 3, !dbg !17874
  %296 = load %struct.VertRen*, %struct.VertRen** %v4340, align 8, !dbg !17874
  store %struct.VertRen* %296, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17875
  %297 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17876
  %v3341 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %297, i32 0, i32 2, !dbg !17877
  %298 = load %struct.VertRen*, %struct.VertRen** %v3341, align 8, !dbg !17877
  store %struct.VertRen* %298, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17878
  %299 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17879
  %adapt342 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %299, i32 0, i32 12, !dbg !17881
  %300 = load i32, i32* %adapt342, align 8, !dbg !17881
  %tobool343 = icmp ne i32 %300, 0, !dbg !17879
  br i1 %tobool343, label %if.then344, label %if.end346, !dbg !17882

if.then344:                                       ; preds = %if.then324
  store i32 0, i32* @static_particle_strand.second, align 4, !dbg !17883
  %arraydecay345 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17885
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.anor, i64 0, i64 0), float* %arraydecay345), !dbg !17886
  %301 = load float*, float** %vec.addr, align 8, !dbg !17887
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.avec, i64 0, i64 0), float* %301), !dbg !17888
  br label %if.end346, !dbg !17889

if.end346:                                        ; preds = %if.then344, %if.then324
  br label %if.end419, !dbg !17890

if.else347:                                       ; preds = %lor.lhs.false
  %302 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17891
  %adapt348 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %302, i32 0, i32 12, !dbg !17893
  %303 = load i32, i32* %adapt348, align 8, !dbg !17893
  %tobool349 = icmp ne i32 %303, 0, !dbg !17891
  br i1 %tobool349, label %if.then350, label %if.end418, !dbg !17894

if.then350:                                       ; preds = %if.else347
  call void @llvm.dbg.declare(metadata [3 x float]* %dvec, metadata !17895, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.declare(metadata [3 x float]* %pvec, metadata !17898, metadata !DIExpression()), !dbg !17899
  %arraydecay351 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17900
  %304 = load float*, float** %vec.addr, align 8, !dbg !17901
  call void @sub_v3_v3v3(float* %arraydecay351, float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.avec, i64 0, i64 0), float* %304), !dbg !17902
  %arraydecay352 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !17903
  %arraydecay353 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17904
  %305 = load float*, float** %vec.addr, align 8, !dbg !17905
  call void @project_v3_v3v3(float* %arraydecay352, float* %arraydecay353, float* %305), !dbg !17906
  %arraydecay354 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17907
  %arraydecay355 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17908
  %arraydecay356 = getelementptr inbounds [3 x float], [3 x float]* %pvec, i64 0, i64 0, !dbg !17909
  call void @sub_v3_v3v3(float* %arraydecay354, float* %arraydecay355, float* %arraydecay356), !dbg !17910
  %306 = load float*, float** %vec.addr, align 8, !dbg !17911
  %arrayidx357 = getelementptr inbounds float, float* %306, i64 2, !dbg !17911
  %307 = load float, float* %arrayidx357, align 4, !dbg !17911
  %308 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17912
  %winmat358 = getelementptr inbounds %struct.Render, %struct.Render* %308, i32 0, i32 35, !dbg !17913
  %arrayidx359 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat358, i64 0, i64 2, !dbg !17912
  %arrayidx360 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx359, i64 0, i64 3, !dbg !17912
  %309 = load float, float* %arrayidx360, align 4, !dbg !17912
  %mul361 = fmul float %307, %309, !dbg !17914
  %310 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17915
  %winmat362 = getelementptr inbounds %struct.Render, %struct.Render* %310, i32 0, i32 35, !dbg !17916
  %arrayidx363 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat362, i64 0, i64 3, !dbg !17915
  %arrayidx364 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx363, i64 0, i64 3, !dbg !17915
  %311 = load float, float* %arrayidx364, align 4, !dbg !17915
  %add365 = fadd float %mul361, %311, !dbg !17917
  store float %add365, float* %w, align 4, !dbg !17918
  %312 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17919
  %winx366 = getelementptr inbounds %struct.Render, %struct.Render* %312, i32 0, i32 13, !dbg !17920
  %313 = load i32, i32* %winx366, align 4, !dbg !17920
  %conv367 = sitofp i32 %313 to float, !dbg !17919
  %arrayidx368 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 0, !dbg !17921
  %314 = load float, float* %arrayidx368, align 4, !dbg !17921
  %mul369 = fmul float %conv367, %314, !dbg !17922
  %315 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17923
  %winmat370 = getelementptr inbounds %struct.Render, %struct.Render* %315, i32 0, i32 35, !dbg !17924
  %arrayidx371 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat370, i64 0, i64 0, !dbg !17923
  %arrayidx372 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx371, i64 0, i64 0, !dbg !17923
  %316 = load float, float* %arrayidx372, align 8, !dbg !17923
  %mul373 = fmul float %mul369, %316, !dbg !17925
  %317 = load float, float* %w, align 4, !dbg !17926
  %div374 = fdiv float %mul373, %317, !dbg !17927
  store float %div374, float* %dx, align 4, !dbg !17928
  %318 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17929
  %winy375 = getelementptr inbounds %struct.Render, %struct.Render* %318, i32 0, i32 14, !dbg !17930
  %319 = load i32, i32* %winy375, align 8, !dbg !17930
  %conv376 = sitofp i32 %319 to float, !dbg !17929
  %arrayidx377 = getelementptr inbounds [3 x float], [3 x float]* %dvec, i64 0, i64 1, !dbg !17931
  %320 = load float, float* %arrayidx377, align 4, !dbg !17931
  %mul378 = fmul float %conv376, %320, !dbg !17932
  %321 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !17933
  %winmat379 = getelementptr inbounds %struct.Render, %struct.Render* %321, i32 0, i32 35, !dbg !17934
  %arrayidx380 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat379, i64 0, i64 1, !dbg !17933
  %arrayidx381 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx380, i64 0, i64 1, !dbg !17933
  %322 = load float, float* %arrayidx381, align 4, !dbg !17933
  %mul382 = fmul float %mul378, %322, !dbg !17935
  %323 = load float, float* %w, align 4, !dbg !17936
  %div383 = fdiv float %mul382, %323, !dbg !17937
  store float %div383, float* %dy, align 4, !dbg !17938
  %324 = load float, float* %dx, align 4, !dbg !17939
  %325 = load float, float* %dx, align 4, !dbg !17940
  %mul384 = fmul float %324, %325, !dbg !17941
  %326 = load float, float* %dy, align 4, !dbg !17942
  %327 = load float, float* %dy, align 4, !dbg !17943
  %mul385 = fmul float %326, %327, !dbg !17944
  %add386 = fadd float %mul384, %mul385, !dbg !17945
  %call387 = call float @sqrtf(float %add386) #5, !dbg !17946
  store float %call387, float* %w, align 4, !dbg !17947
  %arraydecay388 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !17948
  %call389 = call float @dot_v3v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.anor, i64 0, i64 0), float* %arraydecay388), !dbg !17950
  %328 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17951
  %adapt_angle = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %328, i32 0, i32 5, !dbg !17952
  %329 = load float, float* %adapt_angle, align 4, !dbg !17952
  %cmp390 = fcmp olt float %call389, %329, !dbg !17953
  br i1 %cmp390, label %land.lhs.true, label %if.else413, !dbg !17954

land.lhs.true:                                    ; preds = %if.then350
  %330 = load float, float* %w, align 4, !dbg !17955
  %331 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !17956
  %adapt_pix = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %331, i32 0, i32 6, !dbg !17957
  %332 = load float, float* %adapt_pix, align 8, !dbg !17957
  %cmp392 = fcmp ogt float %330, %332, !dbg !17958
  br i1 %cmp392, label %if.then394, label %if.else413, !dbg !17959

if.then394:                                       ; preds = %land.lhs.true
  %333 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17960
  %334 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17962
  %totvlak395 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %334, i32 0, i32 11, !dbg !17963
  %335 = load i32, i32* %totvlak395, align 4, !dbg !17964
  %inc396 = add nsw i32 %335, 1, !dbg !17964
  store i32 %inc396, i32* %totvlak395, align 4, !dbg !17964
  %call397 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %333, i32 %335), !dbg !17965
  store %struct.VlakRen* %call397, %struct.VlakRen** %vlr, align 8, !dbg !17966
  %336 = load i32, i32* %flag, align 4, !dbg !17967
  %conv398 = trunc i32 %336 to i8, !dbg !17967
  %337 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17968
  %flag399 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %337, i32 0, i32 7, !dbg !17969
  store i8 %conv398, i8* %flag399, align 1, !dbg !17970
  %338 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17971
  %339 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17972
  %v1400 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %339, i32 0, i32 0, !dbg !17973
  store %struct.VertRen* %338, %struct.VertRen** %v1400, align 8, !dbg !17974
  %340 = load %struct.VertRen*, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !17975
  %341 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17976
  %v2401 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %341, i32 0, i32 1, !dbg !17977
  store %struct.VertRen* %340, %struct.VertRen** %v2401, align 8, !dbg !17978
  %342 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17979
  %343 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17980
  %totvert402 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %343, i32 0, i32 10, !dbg !17981
  %344 = load i32, i32* %totvert402, align 8, !dbg !17982
  %inc403 = add nsw i32 %344, 1, !dbg !17982
  store i32 %inc403, i32* %totvert402, align 8, !dbg !17982
  %call404 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %342, i32 %344), !dbg !17983
  %345 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17984
  %v3405 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %345, i32 0, i32 2, !dbg !17985
  store %struct.VertRen* %call404, %struct.VertRen** %v3405, align 8, !dbg !17986
  %346 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17987
  %347 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !17988
  %totvert406 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %347, i32 0, i32 10, !dbg !17989
  %348 = load i32, i32* %totvert406, align 8, !dbg !17990
  %inc407 = add nsw i32 %348, 1, !dbg !17990
  store i32 %inc407, i32* %totvert406, align 8, !dbg !17990
  %call408 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %346, i32 %348), !dbg !17991
  %349 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17992
  %v4409 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %349, i32 0, i32 3, !dbg !17993
  store %struct.VertRen* %call408, %struct.VertRen** %v4409, align 8, !dbg !17994
  %350 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17995
  %v4410 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %350, i32 0, i32 3, !dbg !17996
  %351 = load %struct.VertRen*, %struct.VertRen** %v4410, align 8, !dbg !17996
  store %struct.VertRen* %351, %struct.VertRen** @static_particle_strand.v1, align 8, !dbg !17997
  %352 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !17998
  %v3411 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %352, i32 0, i32 2, !dbg !17999
  %353 = load %struct.VertRen*, %struct.VertRen** %v3411, align 8, !dbg !17999
  store %struct.VertRen* %353, %struct.VertRen** @static_particle_strand.v2, align 8, !dbg !18000
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18001
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.anor, i64 0, i64 0), float* %arraydecay412), !dbg !18002
  %354 = load float*, float** %vec.addr, align 8, !dbg !18003
  call void @copy_v3_v3(float* getelementptr inbounds ([3 x float], [3 x float]* @static_particle_strand.avec, i64 0, i64 0), float* %354), !dbg !18004
  br label %if.end417, !dbg !18005

if.else413:                                       ; preds = %land.lhs.true, %if.then350
  %355 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18006
  %356 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18008
  %totvlak414 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %356, i32 0, i32 11, !dbg !18009
  %357 = load i32, i32* %totvlak414, align 4, !dbg !18009
  %sub415 = sub nsw i32 %357, 1, !dbg !18010
  %call416 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %355, i32 %sub415), !dbg !18011
  store %struct.VlakRen* %call416, %struct.VlakRen** %vlr, align 8, !dbg !18012
  br label %if.end417

if.end417:                                        ; preds = %if.else413, %if.then394
  br label %if.end418, !dbg !18013

if.end418:                                        ; preds = %if.end417, %if.else347
  br label %if.end419

if.end419:                                        ; preds = %if.end418, %if.end346
  %358 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18014
  %v4420 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %358, i32 0, i32 3, !dbg !18015
  %359 = load %struct.VertRen*, %struct.VertRen** %v4420, align 8, !dbg !18015
  %co421 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %359, i32 0, i32 0, !dbg !18016
  %arraydecay422 = getelementptr inbounds [3 x float], [3 x float]* %co421, i64 0, i64 0, !dbg !18014
  %360 = load float*, float** %vec.addr, align 8, !dbg !18017
  call void @copy_v3_v3(float* %arraydecay422, float* %360), !dbg !18018
  %361 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18019
  %v4423 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %361, i32 0, i32 3, !dbg !18020
  %362 = load %struct.VertRen*, %struct.VertRen** %v4423, align 8, !dbg !18020
  %co424 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %362, i32 0, i32 0, !dbg !18021
  %arraydecay425 = getelementptr inbounds [3 x float], [3 x float]* %co424, i64 0, i64 0, !dbg !18019
  %arraydecay426 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !18022
  call void @add_v3_v3(float* %arraydecay425, float* %arraydecay426), !dbg !18023
  %363 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18024
  %v4427 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %363, i32 0, i32 3, !dbg !18025
  %364 = load %struct.VertRen*, %struct.VertRen** %v4427, align 8, !dbg !18025
  %n428 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %364, i32 0, i32 1, !dbg !18026
  %arraydecay429 = getelementptr inbounds [3 x float], [3 x float]* %n428, i64 0, i64 0, !dbg !18024
  %arraydecay430 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18027
  call void @copy_v3_v3(float* %arraydecay429, float* %arraydecay430), !dbg !18028
  %365 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18029
  %orco431 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %365, i32 0, i32 1, !dbg !18030
  %366 = load float*, float** %orco431, align 8, !dbg !18030
  %367 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18031
  %v4432 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %367, i32 0, i32 3, !dbg !18032
  %368 = load %struct.VertRen*, %struct.VertRen** %v4432, align 8, !dbg !18032
  %orco433 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %368, i32 0, i32 2, !dbg !18033
  store float* %366, float** %orco433, align 8, !dbg !18034
  %369 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18035
  %time434 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %369, i32 0, i32 4, !dbg !18036
  %370 = load float, float* %time434, align 8, !dbg !18036
  %mul435 = fmul float 2.000000e+00, %370, !dbg !18037
  %add436 = fadd float -1.000000e+00, %mul435, !dbg !18038
  %371 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18039
  %v4437 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %371, i32 0, i32 3, !dbg !18040
  %372 = load %struct.VertRen*, %struct.VertRen** %v4437, align 8, !dbg !18040
  %accum438 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %372, i32 0, i32 4, !dbg !18041
  store float %add436, float* %accum438, align 4, !dbg !18042
  %373 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18043
  %v3439 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %373, i32 0, i32 2, !dbg !18044
  %374 = load %struct.VertRen*, %struct.VertRen** %v3439, align 8, !dbg !18044
  %co440 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %374, i32 0, i32 0, !dbg !18045
  %arraydecay441 = getelementptr inbounds [3 x float], [3 x float]* %co440, i64 0, i64 0, !dbg !18043
  %375 = load float*, float** %vec.addr, align 8, !dbg !18046
  call void @copy_v3_v3(float* %arraydecay441, float* %375), !dbg !18047
  %376 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18048
  %v3442 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %376, i32 0, i32 2, !dbg !18049
  %377 = load %struct.VertRen*, %struct.VertRen** %v3442, align 8, !dbg !18049
  %co443 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %377, i32 0, i32 0, !dbg !18050
  %arraydecay444 = getelementptr inbounds [3 x float], [3 x float]* %co443, i64 0, i64 0, !dbg !18048
  %378 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18051
  %v3445 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %378, i32 0, i32 2, !dbg !18052
  %379 = load %struct.VertRen*, %struct.VertRen** %v3445, align 8, !dbg !18052
  %co446 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %379, i32 0, i32 0, !dbg !18053
  %arraydecay447 = getelementptr inbounds [3 x float], [3 x float]* %co446, i64 0, i64 0, !dbg !18051
  %arraydecay448 = getelementptr inbounds [3 x float], [3 x float]* %cross, i64 0, i64 0, !dbg !18054
  call void @sub_v3_v3v3(float* %arraydecay444, float* %arraydecay447, float* %arraydecay448), !dbg !18055
  %380 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18056
  %v3449 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %380, i32 0, i32 2, !dbg !18057
  %381 = load %struct.VertRen*, %struct.VertRen** %v3449, align 8, !dbg !18057
  %n450 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %381, i32 0, i32 1, !dbg !18058
  %arraydecay451 = getelementptr inbounds [3 x float], [3 x float]* %n450, i64 0, i64 0, !dbg !18056
  %arraydecay452 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !18059
  call void @copy_v3_v3(float* %arraydecay451, float* %arraydecay452), !dbg !18060
  %382 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18061
  %orco453 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %382, i32 0, i32 1, !dbg !18062
  %383 = load float*, float** %orco453, align 8, !dbg !18062
  %384 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18063
  %v3454 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %384, i32 0, i32 2, !dbg !18064
  %385 = load %struct.VertRen*, %struct.VertRen** %v3454, align 8, !dbg !18064
  %orco455 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %385, i32 0, i32 2, !dbg !18065
  store float* %383, float** %orco455, align 8, !dbg !18066
  %386 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18067
  %v4456 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %386, i32 0, i32 3, !dbg !18068
  %387 = load %struct.VertRen*, %struct.VertRen** %v4456, align 8, !dbg !18068
  %accum457 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %387, i32 0, i32 4, !dbg !18069
  %388 = load float, float* %accum457, align 4, !dbg !18069
  %389 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18070
  %v3458 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %389, i32 0, i32 2, !dbg !18071
  %390 = load %struct.VertRen*, %struct.VertRen** %v3458, align 8, !dbg !18071
  %accum459 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %390, i32 0, i32 4, !dbg !18072
  store float %388, float* %accum459, align 4, !dbg !18073
  %391 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18074
  %n460 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %391, i32 0, i32 4, !dbg !18075
  %arraydecay461 = getelementptr inbounds [3 x float], [3 x float]* %n460, i64 0, i64 0, !dbg !18074
  %392 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18076
  %v4462 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %392, i32 0, i32 3, !dbg !18077
  %393 = load %struct.VertRen*, %struct.VertRen** %v4462, align 8, !dbg !18077
  %co463 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %393, i32 0, i32 0, !dbg !18078
  %arraydecay464 = getelementptr inbounds [3 x float], [3 x float]* %co463, i64 0, i64 0, !dbg !18076
  %394 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18079
  %v3465 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %394, i32 0, i32 2, !dbg !18080
  %395 = load %struct.VertRen*, %struct.VertRen** %v3465, align 8, !dbg !18080
  %co466 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %395, i32 0, i32 0, !dbg !18081
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %co466, i64 0, i64 0, !dbg !18079
  %396 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18082
  %v2468 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %396, i32 0, i32 1, !dbg !18083
  %397 = load %struct.VertRen*, %struct.VertRen** %v2468, align 8, !dbg !18083
  %co469 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %397, i32 0, i32 0, !dbg !18084
  %arraydecay470 = getelementptr inbounds [3 x float], [3 x float]* %co469, i64 0, i64 0, !dbg !18082
  %398 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18085
  %v1471 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %398, i32 0, i32 0, !dbg !18086
  %399 = load %struct.VertRen*, %struct.VertRen** %v1471, align 8, !dbg !18086
  %co472 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %399, i32 0, i32 0, !dbg !18087
  %arraydecay473 = getelementptr inbounds [3 x float], [3 x float]* %co472, i64 0, i64 0, !dbg !18085
  %call474 = call float @normal_quad_v3(float* %arraydecay461, float* %arraydecay464, float* %arraydecay467, float* %arraydecay470, float* %arraydecay473), !dbg !18088
  %400 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !18089
  %401 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18090
  %mat475 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %401, i32 0, i32 5, !dbg !18091
  store %struct.Material* %400, %struct.Material** %mat475, align 8, !dbg !18092
  %402 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18093
  %ec476 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %402, i32 0, i32 8, !dbg !18094
  store i8 2, i8* %ec476, align 2, !dbg !18095
  %403 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18096
  %surfnor477 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %403, i32 0, i32 3, !dbg !18098
  %404 = load float*, float** %surfnor477, align 8, !dbg !18098
  %tobool478 = icmp ne float* %404, null, !dbg !18096
  br i1 %tobool478, label %if.then479, label %if.end483, !dbg !18099

if.then479:                                       ; preds = %if.end419
  call void @llvm.dbg.declare(metadata float** %snor480, metadata !18100, metadata !DIExpression()), !dbg !18102
  %405 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18103
  %406 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18104
  %call481 = call float* @RE_vlakren_get_surfnor(%struct.ObjectRen* %405, %struct.VlakRen* %406, i32 1), !dbg !18105
  store float* %call481, float** %snor480, align 8, !dbg !18102
  %407 = load float*, float** %snor480, align 8, !dbg !18106
  %408 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18107
  %surfnor482 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %408, i32 0, i32 3, !dbg !18108
  %409 = load float*, float** %surfnor482, align 8, !dbg !18108
  call void @copy_v3_v3(float* %407, float* %409), !dbg !18109
  br label %if.end483, !dbg !18110

if.end483:                                        ; preds = %if.then479, %if.end419
  %410 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18111
  %uvco484 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %410, i32 0, i32 2, !dbg !18113
  %411 = load float*, float** %uvco484, align 8, !dbg !18113
  %tobool485 = icmp ne float* %411, null, !dbg !18111
  br i1 %tobool485, label %if.then486, label %if.end571, !dbg !18114

if.then486:                                       ; preds = %if.end483
  store i32 0, i32* %i, align 4, !dbg !18115
  br label %for.cond487, !dbg !18118

for.cond487:                                      ; preds = %for.inc528, %if.then486
  %412 = load i32, i32* %i, align 4, !dbg !18119
  %413 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18121
  %totuv488 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %413, i32 0, i32 8, !dbg !18122
  %414 = load i32, i32* %totuv488, align 8, !dbg !18122
  %cmp489 = icmp slt i32 %412, %414, !dbg !18123
  br i1 %cmp489, label %for.body491, label %for.end530, !dbg !18124

for.body491:                                      ; preds = %for.cond487
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf492, metadata !18125, metadata !DIExpression()), !dbg !18127
  %415 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18128
  %416 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18129
  %417 = load i32, i32* %i, align 4, !dbg !18130
  %call493 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %415, %struct.VlakRen* %416, i32 %417, i8** null, i32 1), !dbg !18131
  store %struct.MTFace* %call493, %struct.MTFace** %mtf492, align 8, !dbg !18132
  %418 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18133
  %uvco494 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %418, i32 0, i32 2, !dbg !18134
  %419 = load float*, float** %uvco494, align 8, !dbg !18134
  %420 = load i32, i32* %i, align 4, !dbg !18135
  %mul495 = mul nsw i32 2, %420, !dbg !18136
  %idx.ext496 = sext i32 %mul495 to i64, !dbg !18137
  %add.ptr497 = getelementptr inbounds float, float* %419, i64 %idx.ext496, !dbg !18137
  %arrayidx498 = getelementptr inbounds float, float* %add.ptr497, i64 0, !dbg !18138
  %421 = load float, float* %arrayidx498, align 4, !dbg !18138
  %422 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18139
  %uv499 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %422, i32 0, i32 0, !dbg !18140
  %arrayidx500 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv499, i64 0, i64 3, !dbg !18139
  %arrayidx501 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx500, i64 0, i64 0, !dbg !18139
  store float %421, float* %arrayidx501, align 8, !dbg !18141
  %423 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18142
  %uv502 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %423, i32 0, i32 0, !dbg !18143
  %arrayidx503 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv502, i64 0, i64 2, !dbg !18142
  %arrayidx504 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx503, i64 0, i64 0, !dbg !18142
  store float %421, float* %arrayidx504, align 8, !dbg !18144
  %424 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18145
  %uv505 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %424, i32 0, i32 0, !dbg !18146
  %arrayidx506 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv505, i64 0, i64 1, !dbg !18145
  %arrayidx507 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx506, i64 0, i64 0, !dbg !18145
  store float %421, float* %arrayidx507, align 8, !dbg !18147
  %425 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18148
  %uv508 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %425, i32 0, i32 0, !dbg !18149
  %arrayidx509 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv508, i64 0, i64 0, !dbg !18148
  %arrayidx510 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx509, i64 0, i64 0, !dbg !18148
  store float %421, float* %arrayidx510, align 8, !dbg !18150
  %426 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18151
  %uvco511 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %426, i32 0, i32 2, !dbg !18152
  %427 = load float*, float** %uvco511, align 8, !dbg !18152
  %428 = load i32, i32* %i, align 4, !dbg !18153
  %mul512 = mul nsw i32 2, %428, !dbg !18154
  %idx.ext513 = sext i32 %mul512 to i64, !dbg !18155
  %add.ptr514 = getelementptr inbounds float, float* %427, i64 %idx.ext513, !dbg !18155
  %arrayidx515 = getelementptr inbounds float, float* %add.ptr514, i64 1, !dbg !18156
  %429 = load float, float* %arrayidx515, align 4, !dbg !18156
  %430 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18157
  %uv516 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %430, i32 0, i32 0, !dbg !18158
  %arrayidx517 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv516, i64 0, i64 3, !dbg !18157
  %arrayidx518 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx517, i64 0, i64 1, !dbg !18157
  store float %429, float* %arrayidx518, align 4, !dbg !18159
  %431 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18160
  %uv519 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %431, i32 0, i32 0, !dbg !18161
  %arrayidx520 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv519, i64 0, i64 2, !dbg !18160
  %arrayidx521 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx520, i64 0, i64 1, !dbg !18160
  store float %429, float* %arrayidx521, align 4, !dbg !18162
  %432 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18163
  %uv522 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %432, i32 0, i32 0, !dbg !18164
  %arrayidx523 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv522, i64 0, i64 1, !dbg !18163
  %arrayidx524 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx523, i64 0, i64 1, !dbg !18163
  store float %429, float* %arrayidx524, align 4, !dbg !18165
  %433 = load %struct.MTFace*, %struct.MTFace** %mtf492, align 8, !dbg !18166
  %uv525 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %433, i32 0, i32 0, !dbg !18167
  %arrayidx526 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv525, i64 0, i64 0, !dbg !18166
  %arrayidx527 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx526, i64 0, i64 1, !dbg !18166
  store float %429, float* %arrayidx527, align 4, !dbg !18168
  br label %for.inc528, !dbg !18169

for.inc528:                                       ; preds = %for.body491
  %434 = load i32, i32* %i, align 4, !dbg !18170
  %inc529 = add nsw i32 %434, 1, !dbg !18170
  store i32 %inc529, i32* %i, align 4, !dbg !18170
  br label %for.cond487, !dbg !18171, !llvm.loop !18172

for.end530:                                       ; preds = %for.cond487
  %435 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18174
  %override_uv531 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %435, i32 0, i32 13, !dbg !18176
  %436 = load i32, i32* %override_uv531, align 4, !dbg !18176
  %cmp532 = icmp sge i32 %436, 0, !dbg !18177
  br i1 %cmp532, label %if.then534, label %if.end570, !dbg !18178

if.then534:                                       ; preds = %for.end530
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf535, metadata !18179, metadata !DIExpression()), !dbg !18181
  %437 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18182
  %438 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18183
  %439 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18184
  %override_uv536 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %439, i32 0, i32 13, !dbg !18185
  %440 = load i32, i32* %override_uv536, align 4, !dbg !18185
  %call537 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %437, %struct.VlakRen* %438, i32 %440, i8** null, i32 0), !dbg !18186
  store %struct.MTFace* %call537, %struct.MTFace** %mtf535, align 8, !dbg !18187
  %441 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18188
  %uv538 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %441, i32 0, i32 0, !dbg !18189
  %arrayidx539 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv538, i64 0, i64 3, !dbg !18188
  %arrayidx540 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx539, i64 0, i64 0, !dbg !18188
  store float 0.000000e+00, float* %arrayidx540, align 8, !dbg !18190
  %442 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18191
  %uv541 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %442, i32 0, i32 0, !dbg !18192
  %arrayidx542 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv541, i64 0, i64 0, !dbg !18191
  %arrayidx543 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx542, i64 0, i64 0, !dbg !18191
  store float 0.000000e+00, float* %arrayidx543, align 8, !dbg !18193
  %443 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18194
  %uv544 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %443, i32 0, i32 0, !dbg !18195
  %arrayidx545 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv544, i64 0, i64 2, !dbg !18194
  %arrayidx546 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx545, i64 0, i64 0, !dbg !18194
  store float 1.000000e+00, float* %arrayidx546, align 8, !dbg !18196
  %444 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18197
  %uv547 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %444, i32 0, i32 0, !dbg !18198
  %arrayidx548 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv547, i64 0, i64 1, !dbg !18197
  %arrayidx549 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx548, i64 0, i64 0, !dbg !18197
  store float 1.000000e+00, float* %arrayidx549, align 8, !dbg !18199
  %445 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18200
  %v1550 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %445, i32 0, i32 0, !dbg !18201
  %446 = load %struct.VertRen*, %struct.VertRen** %v1550, align 8, !dbg !18201
  %accum551 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %446, i32 0, i32 4, !dbg !18202
  %447 = load float, float* %accum551, align 4, !dbg !18202
  %add552 = fadd float %447, 1.000000e+00, !dbg !18203
  %div553 = fdiv float %add552, 2.000000e+00, !dbg !18204
  %448 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18205
  %uv554 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %448, i32 0, i32 0, !dbg !18206
  %arrayidx555 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv554, i64 0, i64 1, !dbg !18205
  %arrayidx556 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx555, i64 0, i64 1, !dbg !18205
  store float %div553, float* %arrayidx556, align 4, !dbg !18207
  %449 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18208
  %uv557 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %449, i32 0, i32 0, !dbg !18209
  %arrayidx558 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv557, i64 0, i64 0, !dbg !18208
  %arrayidx559 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx558, i64 0, i64 1, !dbg !18208
  store float %div553, float* %arrayidx559, align 4, !dbg !18210
  %450 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18211
  %v3560 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %450, i32 0, i32 2, !dbg !18212
  %451 = load %struct.VertRen*, %struct.VertRen** %v3560, align 8, !dbg !18212
  %accum561 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %451, i32 0, i32 4, !dbg !18213
  %452 = load float, float* %accum561, align 4, !dbg !18213
  %add562 = fadd float %452, 1.000000e+00, !dbg !18214
  %div563 = fdiv float %add562, 2.000000e+00, !dbg !18215
  %453 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18216
  %uv564 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %453, i32 0, i32 0, !dbg !18217
  %arrayidx565 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv564, i64 0, i64 3, !dbg !18216
  %arrayidx566 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx565, i64 0, i64 1, !dbg !18216
  store float %div563, float* %arrayidx566, align 4, !dbg !18218
  %454 = load %struct.MTFace*, %struct.MTFace** %mtf535, align 8, !dbg !18219
  %uv567 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %454, i32 0, i32 0, !dbg !18220
  %arrayidx568 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv567, i64 0, i64 2, !dbg !18219
  %arrayidx569 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx568, i64 0, i64 1, !dbg !18219
  store float %div563, float* %arrayidx569, align 4, !dbg !18221
  br label %if.end570, !dbg !18222

if.end570:                                        ; preds = %if.then534, %for.end530
  br label %if.end571, !dbg !18223

if.end571:                                        ; preds = %if.end570, %if.end483
  %455 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18224
  %mcol572 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %455, i32 0, i32 0, !dbg !18226
  %456 = load %struct.MCol*, %struct.MCol** %mcol572, align 8, !dbg !18226
  %tobool573 = icmp ne %struct.MCol* %456, null, !dbg !18224
  br i1 %tobool573, label %if.then574, label %if.end599, !dbg !18227

if.then574:                                       ; preds = %if.end571
  store i32 0, i32* %i, align 4, !dbg !18228
  br label %for.cond575, !dbg !18231

for.cond575:                                      ; preds = %for.inc596, %if.then574
  %457 = load i32, i32* %i, align 4, !dbg !18232
  %458 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18234
  %totcol576 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %458, i32 0, i32 9, !dbg !18235
  %459 = load i32, i32* %totcol576, align 4, !dbg !18235
  %cmp577 = icmp slt i32 %457, %459, !dbg !18236
  br i1 %cmp577, label %for.body579, label %for.end598, !dbg !18237

for.body579:                                      ; preds = %for.cond575
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc580, metadata !18238, metadata !DIExpression()), !dbg !18240
  %460 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18241
  %461 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18242
  %462 = load i32, i32* %i, align 4, !dbg !18243
  %call581 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %460, %struct.VlakRen* %461, i32 %462, i8** null, i32 1), !dbg !18244
  store %struct.MCol* %call581, %struct.MCol** %mc580, align 8, !dbg !18245
  %463 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18246
  %arrayidx582 = getelementptr inbounds %struct.MCol, %struct.MCol* %463, i64 0, !dbg !18246
  %464 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18247
  %arrayidx583 = getelementptr inbounds %struct.MCol, %struct.MCol* %464, i64 1, !dbg !18247
  %465 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18248
  %arrayidx584 = getelementptr inbounds %struct.MCol, %struct.MCol* %465, i64 2, !dbg !18248
  %466 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18249
  %arrayidx585 = getelementptr inbounds %struct.MCol, %struct.MCol* %466, i64 3, !dbg !18249
  %467 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18250
  %mcol586 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %467, i32 0, i32 0, !dbg !18251
  %468 = load %struct.MCol*, %struct.MCol** %mcol586, align 8, !dbg !18251
  %469 = load i32, i32* %i, align 4, !dbg !18252
  %idxprom587 = sext i32 %469 to i64, !dbg !18250
  %arrayidx588 = getelementptr inbounds %struct.MCol, %struct.MCol* %468, i64 %idxprom587, !dbg !18250
  %470 = bitcast %struct.MCol* %arrayidx585 to i8*, !dbg !18250
  %471 = bitcast %struct.MCol* %arrayidx588 to i8*, !dbg !18250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %470, i8* align 1 %471, i64 4, i1 false), !dbg !18250
  %472 = bitcast %struct.MCol* %arrayidx584 to i8*, !dbg !18253
  %473 = bitcast %struct.MCol* %arrayidx585 to i8*, !dbg !18253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %472, i8* align 1 %473, i64 4, i1 false), !dbg !18253
  %474 = bitcast %struct.MCol* %arrayidx583 to i8*, !dbg !18254
  %475 = bitcast %struct.MCol* %arrayidx584 to i8*, !dbg !18254
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %474, i8* align 1 %475, i64 4, i1 false), !dbg !18254
  %476 = bitcast %struct.MCol* %arrayidx582 to i8*, !dbg !18255
  %477 = bitcast %struct.MCol* %arrayidx583 to i8*, !dbg !18255
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %476, i8* align 1 %477, i64 4, i1 false), !dbg !18255
  %478 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18256
  %arrayidx589 = getelementptr inbounds %struct.MCol, %struct.MCol* %478, i64 0, !dbg !18256
  %479 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18257
  %arrayidx590 = getelementptr inbounds %struct.MCol, %struct.MCol* %479, i64 1, !dbg !18257
  %480 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18258
  %arrayidx591 = getelementptr inbounds %struct.MCol, %struct.MCol* %480, i64 2, !dbg !18258
  %481 = load %struct.MCol*, %struct.MCol** %mc580, align 8, !dbg !18259
  %arrayidx592 = getelementptr inbounds %struct.MCol, %struct.MCol* %481, i64 3, !dbg !18259
  %482 = load %struct.ParticleStrandData*, %struct.ParticleStrandData** %sd.addr, align 8, !dbg !18260
  %mcol593 = getelementptr inbounds %struct.ParticleStrandData, %struct.ParticleStrandData* %482, i32 0, i32 0, !dbg !18261
  %483 = load %struct.MCol*, %struct.MCol** %mcol593, align 8, !dbg !18261
  %484 = load i32, i32* %i, align 4, !dbg !18262
  %idxprom594 = sext i32 %484 to i64, !dbg !18260
  %arrayidx595 = getelementptr inbounds %struct.MCol, %struct.MCol* %483, i64 %idxprom594, !dbg !18260
  %485 = bitcast %struct.MCol* %arrayidx592 to i8*, !dbg !18260
  %486 = bitcast %struct.MCol* %arrayidx595 to i8*, !dbg !18260
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %485, i8* align 1 %486, i64 4, i1 false), !dbg !18260
  %487 = bitcast %struct.MCol* %arrayidx591 to i8*, !dbg !18263
  %488 = bitcast %struct.MCol* %arrayidx592 to i8*, !dbg !18263
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %487, i8* align 1 %488, i64 4, i1 false), !dbg !18263
  %489 = bitcast %struct.MCol* %arrayidx590 to i8*, !dbg !18264
  %490 = bitcast %struct.MCol* %arrayidx591 to i8*, !dbg !18264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %489, i8* align 1 %490, i64 4, i1 false), !dbg !18264
  %491 = bitcast %struct.MCol* %arrayidx589 to i8*, !dbg !18265
  %492 = bitcast %struct.MCol* %arrayidx590 to i8*, !dbg !18265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %491, i8* align 1 %492, i64 4, i1 false), !dbg !18265
  br label %for.inc596, !dbg !18266

for.inc596:                                       ; preds = %for.body579
  %493 = load i32, i32* %i, align 4, !dbg !18267
  %inc597 = add nsw i32 %493, 1, !dbg !18267
  store i32 %inc597, i32* %i, align 4, !dbg !18267
  br label %for.cond575, !dbg !18268, !llvm.loop !18269

for.end598:                                       ; preds = %for.cond575
  br label %if.end599, !dbg !18271

if.end599:                                        ; preds = %for.end598, %if.end571
  br label %if.end600

if.end600:                                        ; preds = %if.end599, %if.end287
  br label %if.end601

if.end601:                                        ; preds = %if.end600, %if.end280
  ret void, !dbg !18272
}

declare dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen*, i32) #4

declare dso_local %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !18273 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18274, metadata !DIExpression()), !dbg !18275
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18276, metadata !DIExpression()), !dbg !18277
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !18278, metadata !DIExpression()), !dbg !18279
  %0 = load float*, float** %a.addr, align 8, !dbg !18280
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !18280
  %1 = load float, float* %arrayidx, align 4, !dbg !18280
  %2 = load float*, float** %b.addr, align 8, !dbg !18281
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !18281
  %3 = load float, float* %arrayidx1, align 4, !dbg !18281
  %mul = fmul float %1, %3, !dbg !18282
  %4 = load float*, float** %a.addr, align 8, !dbg !18283
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !18283
  %5 = load float, float* %arrayidx2, align 4, !dbg !18283
  %6 = load float*, float** %b.addr, align 8, !dbg !18284
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18284
  %7 = load float, float* %arrayidx3, align 4, !dbg !18284
  %mul4 = fmul float %5, %7, !dbg !18285
  %sub = fsub float %mul, %mul4, !dbg !18286
  %8 = load float*, float** %r.addr, align 8, !dbg !18287
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !18287
  store float %sub, float* %arrayidx5, align 4, !dbg !18288
  %9 = load float*, float** %a.addr, align 8, !dbg !18289
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !18289
  %10 = load float, float* %arrayidx6, align 4, !dbg !18289
  %11 = load float*, float** %b.addr, align 8, !dbg !18290
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !18290
  %12 = load float, float* %arrayidx7, align 4, !dbg !18290
  %mul8 = fmul float %10, %12, !dbg !18291
  %13 = load float*, float** %a.addr, align 8, !dbg !18292
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !18292
  %14 = load float, float* %arrayidx9, align 4, !dbg !18292
  %15 = load float*, float** %b.addr, align 8, !dbg !18293
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !18293
  %16 = load float, float* %arrayidx10, align 4, !dbg !18293
  %mul11 = fmul float %14, %16, !dbg !18294
  %sub12 = fsub float %mul8, %mul11, !dbg !18295
  %17 = load float*, float** %r.addr, align 8, !dbg !18296
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !18296
  store float %sub12, float* %arrayidx13, align 4, !dbg !18297
  %18 = load float*, float** %a.addr, align 8, !dbg !18298
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !18298
  %19 = load float, float* %arrayidx14, align 4, !dbg !18298
  %20 = load float*, float** %b.addr, align 8, !dbg !18299
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !18299
  %21 = load float, float* %arrayidx15, align 4, !dbg !18299
  %mul16 = fmul float %19, %21, !dbg !18300
  %22 = load float*, float** %a.addr, align 8, !dbg !18301
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !18301
  %23 = load float, float* %arrayidx17, align 4, !dbg !18301
  %24 = load float*, float** %b.addr, align 8, !dbg !18302
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !18302
  %25 = load float, float* %arrayidx18, align 4, !dbg !18302
  %mul19 = fmul float %23, %25, !dbg !18303
  %sub20 = fsub float %mul16, %mul19, !dbg !18304
  %26 = load float*, float** %r.addr, align 8, !dbg !18305
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !18305
  store float %sub20, float* %arrayidx21, align 4, !dbg !18306
  ret void, !dbg !18307
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !18308 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18311, metadata !DIExpression()), !dbg !18312
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !18313, metadata !DIExpression()), !dbg !18314
  %0 = load float, float* %f.addr, align 4, !dbg !18315
  %1 = load float*, float** %r.addr, align 8, !dbg !18316
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !18316
  %2 = load float, float* %arrayidx, align 4, !dbg !18317
  %mul = fmul float %2, %0, !dbg !18317
  store float %mul, float* %arrayidx, align 4, !dbg !18317
  %3 = load float, float* %f.addr, align 4, !dbg !18318
  %4 = load float*, float** %r.addr, align 8, !dbg !18319
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !18319
  %5 = load float, float* %arrayidx1, align 4, !dbg !18320
  %mul2 = fmul float %5, %3, !dbg !18320
  store float %mul2, float* %arrayidx1, align 4, !dbg !18320
  %6 = load float, float* %f.addr, align 4, !dbg !18321
  %7 = load float*, float** %r.addr, align 8, !dbg !18322
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !18322
  %8 = load float, float* %arrayidx3, align 4, !dbg !18323
  %mul4 = fmul float %8, %6, !dbg !18323
  store float %mul4, float* %arrayidx3, align 4, !dbg !18323
  ret void, !dbg !18324
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !18325 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18326, metadata !DIExpression()), !dbg !18327
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18328, metadata !DIExpression()), !dbg !18329
  %0 = load float*, float** %a.addr, align 8, !dbg !18330
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18330
  %1 = load float, float* %arrayidx, align 4, !dbg !18330
  %2 = load float*, float** %r.addr, align 8, !dbg !18331
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18331
  %3 = load float, float* %arrayidx1, align 4, !dbg !18332
  %add = fadd float %3, %1, !dbg !18332
  store float %add, float* %arrayidx1, align 4, !dbg !18332
  %4 = load float*, float** %a.addr, align 8, !dbg !18333
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !18333
  %5 = load float, float* %arrayidx2, align 4, !dbg !18333
  %6 = load float*, float** %r.addr, align 8, !dbg !18334
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18334
  %7 = load float, float* %arrayidx3, align 4, !dbg !18335
  %add4 = fadd float %7, %5, !dbg !18335
  store float %add4, float* %arrayidx3, align 4, !dbg !18335
  %8 = load float*, float** %a.addr, align 8, !dbg !18336
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !18336
  %9 = load float, float* %arrayidx5, align 4, !dbg !18336
  %10 = load float*, float** %r.addr, align 8, !dbg !18337
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !18337
  %11 = load float, float* %arrayidx6, align 4, !dbg !18338
  %add7 = fadd float %11, %9, !dbg !18338
  store float %add7, float* %arrayidx6, align 4, !dbg !18338
  ret void, !dbg !18339
}

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #4

declare dso_local float* @RE_vlakren_get_surfnor(%struct.ObjectRen*, %struct.VlakRen*, i32) #4

declare dso_local %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen*, %struct.VlakRen*, i32, i8**, i32) #4

declare dso_local %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen*, %struct.VlakRen*, i32, i8**, i32) #4

declare dso_local void @project_v3_v3v3(float*, float*, float*) #4

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !18340 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18343, metadata !DIExpression()), !dbg !18344
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18345, metadata !DIExpression()), !dbg !18346
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !18347, metadata !DIExpression()), !dbg !18348
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !18349, metadata !DIExpression()), !dbg !18350
  %0 = load float*, float** %a.addr, align 8, !dbg !18351
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18351
  %1 = load float, float* %arrayidx, align 4, !dbg !18351
  %2 = load float*, float** %b.addr, align 8, !dbg !18352
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18352
  %3 = load float, float* %arrayidx1, align 4, !dbg !18352
  %4 = load float, float* %f.addr, align 4, !dbg !18353
  %mul = fmul float %3, %4, !dbg !18354
  %add = fadd float %1, %mul, !dbg !18355
  %5 = load float*, float** %r.addr, align 8, !dbg !18356
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !18356
  store float %add, float* %arrayidx2, align 4, !dbg !18357
  %6 = load float*, float** %a.addr, align 8, !dbg !18358
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18358
  %7 = load float, float* %arrayidx3, align 4, !dbg !18358
  %8 = load float*, float** %b.addr, align 8, !dbg !18359
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !18359
  %9 = load float, float* %arrayidx4, align 4, !dbg !18359
  %10 = load float, float* %f.addr, align 4, !dbg !18360
  %mul5 = fmul float %9, %10, !dbg !18361
  %add6 = fadd float %7, %mul5, !dbg !18362
  %11 = load float*, float** %r.addr, align 8, !dbg !18363
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !18363
  store float %add6, float* %arrayidx7, align 4, !dbg !18364
  %12 = load float*, float** %a.addr, align 8, !dbg !18365
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !18365
  %13 = load float, float* %arrayidx8, align 4, !dbg !18365
  %14 = load float*, float** %b.addr, align 8, !dbg !18366
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !18366
  %15 = load float, float* %arrayidx9, align 4, !dbg !18366
  %16 = load float, float* %f.addr, align 4, !dbg !18367
  %mul10 = fmul float %15, %16, !dbg !18368
  %add11 = fadd float %13, %mul10, !dbg !18369
  %17 = load float*, float** %r.addr, align 8, !dbg !18370
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !18370
  store float %add11, float* %arrayidx12, align 4, !dbg !18371
  ret void, !dbg !18372
}

; Function Attrs: noinline nounwind uwtable
define internal void @particle_billboard(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Material* %ma, %struct.ParticleBillboardData* %bb) #0 !dbg !18373 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %bb.addr = alloca %struct.ParticleBillboardData*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %mtf = alloca %struct.MTFace*, align 8
  %xvec = alloca [3 x float], align 4
  %yvec = alloca [3 x float], align 4
  %zvec = alloca [3 x float], align 4
  %bb_center = alloca [3 x float], align 4
  %totsplit = alloca i32, align 4
  %tile = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %uvx = alloca float, align 4
  %uvy = alloca float, align 4
  %uvdx = alloca float, align 4
  %uvdy = alloca float, align 4
  %time = alloca float, align 4
  %axis1 = alloca [3 x float], align 4
  %axis2 = alloca [3 x float], align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !18376, metadata !DIExpression()), !dbg !18377
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !18378, metadata !DIExpression()), !dbg !18379
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !18380, metadata !DIExpression()), !dbg !18381
  store %struct.ParticleBillboardData* %bb, %struct.ParticleBillboardData** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleBillboardData** %bb.addr, metadata !18382, metadata !DIExpression()), !dbg !18383
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !18384, metadata !DIExpression()), !dbg !18385
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf, metadata !18386, metadata !DIExpression()), !dbg !18387
  call void @llvm.dbg.declare(metadata [3 x float]* %xvec, metadata !18388, metadata !DIExpression()), !dbg !18389
  call void @llvm.dbg.declare(metadata [3 x float]* %yvec, metadata !18390, metadata !DIExpression()), !dbg !18391
  call void @llvm.dbg.declare(metadata [3 x float]* %zvec, metadata !18392, metadata !DIExpression()), !dbg !18393
  call void @llvm.dbg.declare(metadata [3 x float]* %bb_center, metadata !18394, metadata !DIExpression()), !dbg !18395
  call void @llvm.dbg.declare(metadata i32* %totsplit, metadata !18396, metadata !DIExpression()), !dbg !18397
  %0 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18398
  %uv_split = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %0, i32 0, i32 14, !dbg !18399
  %1 = load i16, i16* %uv_split, align 2, !dbg !18399
  %conv = sext i16 %1 to i32, !dbg !18398
  %2 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18400
  %uv_split1 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %2, i32 0, i32 14, !dbg !18401
  %3 = load i16, i16* %uv_split1, align 2, !dbg !18401
  %conv2 = sext i16 %3 to i32, !dbg !18400
  %mul = mul nsw i32 %conv, %conv2, !dbg !18402
  store i32 %mul, i32* %totsplit, align 4, !dbg !18397
  call void @llvm.dbg.declare(metadata i32* %tile, metadata !18403, metadata !DIExpression()), !dbg !18404
  call void @llvm.dbg.declare(metadata i32* %x, metadata !18405, metadata !DIExpression()), !dbg !18406
  call void @llvm.dbg.declare(metadata i32* %y, metadata !18407, metadata !DIExpression()), !dbg !18408
  call void @llvm.dbg.declare(metadata float* %uvx, metadata !18409, metadata !DIExpression()), !dbg !18410
  store float 0.000000e+00, float* %uvx, align 4, !dbg !18410
  call void @llvm.dbg.declare(metadata float* %uvy, metadata !18411, metadata !DIExpression()), !dbg !18412
  store float 0.000000e+00, float* %uvy, align 4, !dbg !18412
  call void @llvm.dbg.declare(metadata float* %uvdx, metadata !18413, metadata !DIExpression()), !dbg !18414
  store float 1.000000e+00, float* %uvdx, align 4, !dbg !18414
  call void @llvm.dbg.declare(metadata float* %uvdy, metadata !18415, metadata !DIExpression()), !dbg !18416
  store float 1.000000e+00, float* %uvdy, align 4, !dbg !18416
  call void @llvm.dbg.declare(metadata float* %time, metadata !18417, metadata !DIExpression()), !dbg !18418
  store float 0.000000e+00, float* %time, align 4, !dbg !18418
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18419
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18420
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %5, i32 0, i32 11, !dbg !18421
  %6 = load i32, i32* %totvlak, align 4, !dbg !18422
  %inc = add nsw i32 %6, 1, !dbg !18422
  store i32 %inc, i32* %totvlak, align 4, !dbg !18422
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %6), !dbg !18423
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !18424
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18425
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18426
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 10, !dbg !18427
  %9 = load i32, i32* %totvert, align 8, !dbg !18428
  %inc3 = add nsw i32 %9, 1, !dbg !18428
  store i32 %inc3, i32* %totvert, align 8, !dbg !18428
  %call4 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %7, i32 %9), !dbg !18429
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18430
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 0, !dbg !18431
  store %struct.VertRen* %call4, %struct.VertRen** %v1, align 8, !dbg !18432
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18433
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18434
  %totvert5 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %12, i32 0, i32 10, !dbg !18435
  %13 = load i32, i32* %totvert5, align 8, !dbg !18436
  %inc6 = add nsw i32 %13, 1, !dbg !18436
  store i32 %inc6, i32* %totvert5, align 8, !dbg !18436
  %call7 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %11, i32 %13), !dbg !18437
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18438
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 1, !dbg !18439
  store %struct.VertRen* %call7, %struct.VertRen** %v2, align 8, !dbg !18440
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18441
  %16 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18442
  %totvert8 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %16, i32 0, i32 10, !dbg !18443
  %17 = load i32, i32* %totvert8, align 8, !dbg !18444
  %inc9 = add nsw i32 %17, 1, !dbg !18444
  store i32 %inc9, i32* %totvert8, align 8, !dbg !18444
  %call10 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %15, i32 %17), !dbg !18445
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18446
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 2, !dbg !18447
  store %struct.VertRen* %call10, %struct.VertRen** %v3, align 8, !dbg !18448
  %19 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18449
  %20 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18450
  %totvert11 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %20, i32 0, i32 10, !dbg !18451
  %21 = load i32, i32* %totvert11, align 8, !dbg !18452
  %inc12 = add nsw i32 %21, 1, !dbg !18452
  store i32 %inc12, i32* %totvert11, align 8, !dbg !18452
  %call13 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %19, i32 %21), !dbg !18453
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18454
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 3, !dbg !18455
  store %struct.VertRen* %call13, %struct.VertRen** %v4, align 8, !dbg !18456
  %23 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18457
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %xvec, i64 0, i64 0, !dbg !18458
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %yvec, i64 0, i64 0, !dbg !18459
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !18460
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %bb_center, i64 0, i64 0, !dbg !18461
  call void @psys_make_billboard(%struct.ParticleBillboardData* %23, float* %arraydecay, float* %arraydecay14, float* %arraydecay15, float* %arraydecay16), !dbg !18462
  %24 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18463
  %v117 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %24, i32 0, i32 0, !dbg !18464
  %25 = load %struct.VertRen*, %struct.VertRen** %v117, align 8, !dbg !18464
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %25, i32 0, i32 0, !dbg !18465
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18463
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %bb_center, i64 0, i64 0, !dbg !18466
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %xvec, i64 0, i64 0, !dbg !18467
  call void @add_v3_v3v3(float* %arraydecay18, float* %arraydecay19, float* %arraydecay20), !dbg !18468
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18469
  %v121 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 0, !dbg !18470
  %27 = load %struct.VertRen*, %struct.VertRen** %v121, align 8, !dbg !18470
  %co22 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %27, i32 0, i32 0, !dbg !18471
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !18469
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %yvec, i64 0, i64 0, !dbg !18472
  call void @add_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !18473
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !18474
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 32, !dbg !18475
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !18474
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18476
  %v126 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 0, !dbg !18477
  %30 = load %struct.VertRen*, %struct.VertRen** %v126, align 8, !dbg !18477
  %co27 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %30, i32 0, i32 0, !dbg !18478
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !18476
  call void @mul_m4_v3([4 x float]* %arraydecay25, float* %arraydecay28), !dbg !18479
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18480
  %v229 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 1, !dbg !18481
  %32 = load %struct.VertRen*, %struct.VertRen** %v229, align 8, !dbg !18481
  %co30 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %32, i32 0, i32 0, !dbg !18482
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !18480
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %bb_center, i64 0, i64 0, !dbg !18483
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %xvec, i64 0, i64 0, !dbg !18484
  call void @sub_v3_v3v3(float* %arraydecay31, float* %arraydecay32, float* %arraydecay33), !dbg !18485
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18486
  %v234 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 1, !dbg !18487
  %34 = load %struct.VertRen*, %struct.VertRen** %v234, align 8, !dbg !18487
  %co35 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %34, i32 0, i32 0, !dbg !18488
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %co35, i64 0, i64 0, !dbg !18486
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %yvec, i64 0, i64 0, !dbg !18489
  call void @add_v3_v3(float* %arraydecay36, float* %arraydecay37), !dbg !18490
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !18491
  %viewmat38 = getelementptr inbounds %struct.Render, %struct.Render* %35, i32 0, i32 32, !dbg !18492
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat38, i64 0, i64 0, !dbg !18491
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18493
  %v240 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 1, !dbg !18494
  %37 = load %struct.VertRen*, %struct.VertRen** %v240, align 8, !dbg !18494
  %co41 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 0, !dbg !18495
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !18493
  call void @mul_m4_v3([4 x float]* %arraydecay39, float* %arraydecay42), !dbg !18496
  %38 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18497
  %v343 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %38, i32 0, i32 2, !dbg !18498
  %39 = load %struct.VertRen*, %struct.VertRen** %v343, align 8, !dbg !18498
  %co44 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %39, i32 0, i32 0, !dbg !18499
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %co44, i64 0, i64 0, !dbg !18497
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %bb_center, i64 0, i64 0, !dbg !18500
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %xvec, i64 0, i64 0, !dbg !18501
  call void @sub_v3_v3v3(float* %arraydecay45, float* %arraydecay46, float* %arraydecay47), !dbg !18502
  %40 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18503
  %v348 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %40, i32 0, i32 2, !dbg !18504
  %41 = load %struct.VertRen*, %struct.VertRen** %v348, align 8, !dbg !18504
  %co49 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %41, i32 0, i32 0, !dbg !18505
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %co49, i64 0, i64 0, !dbg !18503
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18506
  %v351 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %42, i32 0, i32 2, !dbg !18507
  %43 = load %struct.VertRen*, %struct.VertRen** %v351, align 8, !dbg !18507
  %co52 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 0, !dbg !18508
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !18506
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %yvec, i64 0, i64 0, !dbg !18509
  call void @sub_v3_v3v3(float* %arraydecay50, float* %arraydecay53, float* %arraydecay54), !dbg !18510
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !18511
  %viewmat55 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 32, !dbg !18512
  %arraydecay56 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat55, i64 0, i64 0, !dbg !18511
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18513
  %v357 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 2, !dbg !18514
  %46 = load %struct.VertRen*, %struct.VertRen** %v357, align 8, !dbg !18514
  %co58 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %46, i32 0, i32 0, !dbg !18515
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %co58, i64 0, i64 0, !dbg !18513
  call void @mul_m4_v3([4 x float]* %arraydecay56, float* %arraydecay59), !dbg !18516
  %47 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18517
  %v460 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %47, i32 0, i32 3, !dbg !18518
  %48 = load %struct.VertRen*, %struct.VertRen** %v460, align 8, !dbg !18518
  %co61 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %48, i32 0, i32 0, !dbg !18519
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %co61, i64 0, i64 0, !dbg !18517
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %bb_center, i64 0, i64 0, !dbg !18520
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %xvec, i64 0, i64 0, !dbg !18521
  call void @add_v3_v3v3(float* %arraydecay62, float* %arraydecay63, float* %arraydecay64), !dbg !18522
  %49 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18523
  %v465 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %49, i32 0, i32 3, !dbg !18524
  %50 = load %struct.VertRen*, %struct.VertRen** %v465, align 8, !dbg !18524
  %co66 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %50, i32 0, i32 0, !dbg !18525
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %co66, i64 0, i64 0, !dbg !18523
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %yvec, i64 0, i64 0, !dbg !18526
  call void @sub_v3_v3(float* %arraydecay67, float* %arraydecay68), !dbg !18527
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !18528
  %viewmat69 = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 32, !dbg !18529
  %arraydecay70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat69, i64 0, i64 0, !dbg !18528
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18530
  %v471 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 3, !dbg !18531
  %53 = load %struct.VertRen*, %struct.VertRen** %v471, align 8, !dbg !18531
  %co72 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %53, i32 0, i32 0, !dbg !18532
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %co72, i64 0, i64 0, !dbg !18530
  call void @mul_m4_v3([4 x float]* %arraydecay70, float* %arraydecay73), !dbg !18533
  %54 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18534
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %54, i32 0, i32 4, !dbg !18535
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !18534
  %55 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18536
  %v475 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %55, i32 0, i32 3, !dbg !18537
  %56 = load %struct.VertRen*, %struct.VertRen** %v475, align 8, !dbg !18537
  %co76 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %56, i32 0, i32 0, !dbg !18538
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %co76, i64 0, i64 0, !dbg !18536
  %57 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18539
  %v378 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %57, i32 0, i32 2, !dbg !18540
  %58 = load %struct.VertRen*, %struct.VertRen** %v378, align 8, !dbg !18540
  %co79 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %58, i32 0, i32 0, !dbg !18541
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %co79, i64 0, i64 0, !dbg !18539
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18542
  %v281 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %59, i32 0, i32 1, !dbg !18543
  %60 = load %struct.VertRen*, %struct.VertRen** %v281, align 8, !dbg !18543
  %co82 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %60, i32 0, i32 0, !dbg !18544
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co82, i64 0, i64 0, !dbg !18542
  %61 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18545
  %v184 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %61, i32 0, i32 0, !dbg !18546
  %62 = load %struct.VertRen*, %struct.VertRen** %v184, align 8, !dbg !18546
  %co85 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %62, i32 0, i32 0, !dbg !18547
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %co85, i64 0, i64 0, !dbg !18545
  %call87 = call float @normal_quad_v3(float* %arraydecay74, float* %arraydecay77, float* %arraydecay80, float* %arraydecay83, float* %arraydecay86), !dbg !18548
  %63 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18549
  %v188 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %63, i32 0, i32 0, !dbg !18550
  %64 = load %struct.VertRen*, %struct.VertRen** %v188, align 8, !dbg !18550
  %n89 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %64, i32 0, i32 1, !dbg !18551
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %n89, i64 0, i64 0, !dbg !18549
  %65 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18552
  %n91 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %65, i32 0, i32 4, !dbg !18553
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %n91, i64 0, i64 0, !dbg !18552
  call void @copy_v3_v3(float* %arraydecay90, float* %arraydecay92), !dbg !18554
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18555
  %v293 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 1, !dbg !18556
  %67 = load %struct.VertRen*, %struct.VertRen** %v293, align 8, !dbg !18556
  %n94 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %67, i32 0, i32 1, !dbg !18557
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %n94, i64 0, i64 0, !dbg !18555
  %68 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18558
  %n96 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %68, i32 0, i32 4, !dbg !18559
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %n96, i64 0, i64 0, !dbg !18558
  call void @copy_v3_v3(float* %arraydecay95, float* %arraydecay97), !dbg !18560
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18561
  %v398 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %69, i32 0, i32 2, !dbg !18562
  %70 = load %struct.VertRen*, %struct.VertRen** %v398, align 8, !dbg !18562
  %n99 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %70, i32 0, i32 1, !dbg !18563
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %n99, i64 0, i64 0, !dbg !18561
  %71 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18564
  %n101 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %71, i32 0, i32 4, !dbg !18565
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %n101, i64 0, i64 0, !dbg !18564
  call void @copy_v3_v3(float* %arraydecay100, float* %arraydecay102), !dbg !18566
  %72 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18567
  %v4103 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %72, i32 0, i32 3, !dbg !18568
  %73 = load %struct.VertRen*, %struct.VertRen** %v4103, align 8, !dbg !18568
  %n104 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %73, i32 0, i32 1, !dbg !18569
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %n104, i64 0, i64 0, !dbg !18567
  %74 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18570
  %n106 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %74, i32 0, i32 4, !dbg !18571
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %n106, i64 0, i64 0, !dbg !18570
  call void @copy_v3_v3(float* %arraydecay105, float* %arraydecay107), !dbg !18572
  %75 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !18573
  %76 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18574
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %76, i32 0, i32 5, !dbg !18575
  store %struct.Material* %75, %struct.Material** %mat, align 8, !dbg !18576
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18577
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %77, i32 0, i32 8, !dbg !18578
  store i8 2, i8* %ec, align 2, !dbg !18579
  %78 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18580
  %uv_split108 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %78, i32 0, i32 14, !dbg !18582
  %79 = load i16, i16* %uv_split108, align 2, !dbg !18582
  %conv109 = sext i16 %79 to i32, !dbg !18580
  %cmp = icmp sgt i32 %conv109, 1, !dbg !18583
  br i1 %cmp, label %if.then, label %if.end227, !dbg !18584

if.then:                                          ; preds = %entry
  %80 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18585
  %uv_split111 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %80, i32 0, i32 14, !dbg !18587
  %81 = load i16, i16* %uv_split111, align 2, !dbg !18587
  %conv112 = sitofp i16 %81 to float, !dbg !18588
  %div = fdiv float 1.000000e+00, %conv112, !dbg !18589
  store float %div, float* %uvdy, align 4, !dbg !18590
  store float %div, float* %uvdx, align 4, !dbg !18591
  %82 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18592
  %anim = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %82, i32 0, i32 15, !dbg !18592
  %83 = load i16, i16* %anim, align 4, !dbg !18592
  %conv113 = sext i16 %83 to i32, !dbg !18592
  %cmp114 = icmp eq i32 %conv113, 1, !dbg !18592
  br i1 %cmp114, label %if.then120, label %lor.lhs.false, !dbg !18592

lor.lhs.false:                                    ; preds = %if.then
  %84 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18592
  %anim116 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %84, i32 0, i32 15, !dbg !18592
  %85 = load i16, i16* %anim116, align 4, !dbg !18592
  %conv117 = sext i16 %85 to i32, !dbg !18592
  %cmp118 = icmp eq i32 %conv117, 3, !dbg !18592
  br i1 %cmp118, label %if.then120, label %if.else134, !dbg !18594

if.then120:                                       ; preds = %lor.lhs.false, %if.then
  %86 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18595
  %anim121 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %86, i32 0, i32 15, !dbg !18598
  %87 = load i16, i16* %anim121, align 4, !dbg !18598
  %conv122 = sext i16 %87 to i32, !dbg !18595
  %cmp123 = icmp eq i32 %conv122, 3, !dbg !18599
  br i1 %cmp123, label %if.then125, label %if.else, !dbg !18600

if.then125:                                       ; preds = %if.then120
  %88 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18601
  %time126 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %88, i32 0, i32 7, !dbg !18602
  %89 = load float, float* %time126, align 8, !dbg !18602
  %90 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18603
  %lifetime = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %90, i32 0, i32 12, !dbg !18604
  %91 = load i32, i32* %lifetime, align 4, !dbg !18604
  %conv127 = sitofp i32 %91 to float, !dbg !18603
  %mul128 = fmul float %89, %conv127, !dbg !18605
  %conv129 = fptosi float %mul128 to i32, !dbg !18606
  %92 = load i32, i32* %totsplit, align 4, !dbg !18607
  %rem = srem i32 %conv129, %92, !dbg !18608
  %conv130 = sitofp i32 %rem to float, !dbg !18609
  %93 = load i32, i32* %totsplit, align 4, !dbg !18610
  %conv131 = sitofp i32 %93 to float, !dbg !18611
  %div132 = fdiv float %conv130, %conv131, !dbg !18612
  store float %div132, float* %time, align 4, !dbg !18613
  br label %if.end, !dbg !18614

if.else:                                          ; preds = %if.then120
  %94 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18615
  %time133 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %94, i32 0, i32 7, !dbg !18616
  %95 = load float, float* %time133, align 8, !dbg !18616
  store float %95, float* %time, align 4, !dbg !18617
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then125
  br label %if.end185, !dbg !18618

if.else134:                                       ; preds = %lor.lhs.false
  %96 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18619
  %anim135 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %96, i32 0, i32 15, !dbg !18621
  %97 = load i16, i16* %anim135, align 4, !dbg !18621
  %conv136 = sext i16 %97 to i32, !dbg !18619
  %cmp137 = icmp eq i32 %conv136, 2, !dbg !18622
  br i1 %cmp137, label %if.then139, label %if.end184, !dbg !18623

if.then139:                                       ; preds = %if.else134
  %98 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18624
  %align = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %98, i32 0, i32 13, !dbg !18627
  %99 = load i16, i16* %align, align 8, !dbg !18627
  %conv140 = sext i16 %99 to i32, !dbg !18624
  %cmp141 = icmp eq i32 %conv140, 3, !dbg !18628
  br i1 %cmp141, label %if.then143, label %if.else148, !dbg !18629

if.then143:                                       ; preds = %if.then139
  %100 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18630
  %tilt = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %100, i32 0, i32 5, !dbg !18632
  %101 = load float, float* %tilt, align 8, !dbg !18632
  %add = fadd float %101, 1.000000e+00, !dbg !18633
  %div144 = fdiv float %add, 2.000000e+00, !dbg !18634
  %conv145 = fpext float %div144 to double, !dbg !18635
  %call146 = call double @fmod(double %conv145, double 1.000000e+00) #5, !dbg !18636
  %conv147 = fptrunc double %call146 to float, !dbg !18637
  store float %conv147, float* %time, align 4, !dbg !18638
  br label %if.end183, !dbg !18639

if.else148:                                       ; preds = %if.then139
  call void @llvm.dbg.declare(metadata [3 x float]* %axis1, metadata !18640, metadata !DIExpression()), !dbg !18642
  %102 = bitcast [3 x float]* %axis1 to i8*, !dbg !18642
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 12, i1 false), !dbg !18642
  call void @llvm.dbg.declare(metadata [3 x float]* %axis2, metadata !18643, metadata !DIExpression()), !dbg !18644
  %103 = bitcast [3 x float]* %axis2 to i8*, !dbg !18644
  call void @llvm.memset.p0i8.i64(i8* align 4 %103, i8 0, i64 12, i1 false), !dbg !18644
  %104 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18645
  %align149 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %104, i32 0, i32 13, !dbg !18646
  %105 = load i16, i16* %align149, align 8, !dbg !18646
  %conv150 = sext i16 %105 to i32, !dbg !18645
  %add151 = add nsw i32 %conv150, 1, !dbg !18647
  %rem152 = srem i32 %add151, 3, !dbg !18648
  %idxprom = sext i32 %rem152 to i64, !dbg !18649
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 %idxprom, !dbg !18649
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !18650
  %106 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18651
  %align153 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %106, i32 0, i32 13, !dbg !18652
  %107 = load i16, i16* %align153, align 8, !dbg !18652
  %conv154 = sext i16 %107 to i32, !dbg !18651
  %add155 = add nsw i32 %conv154, 2, !dbg !18653
  %rem156 = srem i32 %add155, 3, !dbg !18654
  %idxprom157 = sext i32 %rem156 to i64, !dbg !18655
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 %idxprom157, !dbg !18655
  store float 1.000000e+00, float* %arrayidx158, align 4, !dbg !18656
  %108 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18657
  %lock = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %108, i32 0, i32 9, !dbg !18659
  %109 = load i32, i32* %lock, align 8, !dbg !18659
  %cmp159 = icmp eq i32 %109, 0, !dbg !18660
  br i1 %cmp159, label %if.then161, label %if.end167, !dbg !18661

if.then161:                                       ; preds = %if.else148
  %110 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18662
  %align162 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %110, i32 0, i32 13, !dbg !18664
  %111 = load i16, i16* %align162, align 8, !dbg !18664
  %idxprom163 = sext i16 %111 to i64, !dbg !18665
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 %idxprom163, !dbg !18665
  store float 0.000000e+00, float* %arrayidx164, align 4, !dbg !18666
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !18667
  %call166 = call float @normalize_v3(float* %arraydecay165), !dbg !18668
  br label %if.end167, !dbg !18669

if.end167:                                        ; preds = %if.then161, %if.else148
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !18670
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %axis1, i64 0, i64 0, !dbg !18671
  %call170 = call float @dot_v3v3(float* %arraydecay168, float* %arraydecay169), !dbg !18672
  %call171 = call float @saacos(float %call170), !dbg !18673
  %div172 = fdiv float %call171, 0x400921FB60000000, !dbg !18674
  store float %div172, float* %time, align 4, !dbg !18675
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %zvec, i64 0, i64 0, !dbg !18676
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %axis2, i64 0, i64 0, !dbg !18678
  %call175 = call float @dot_v3v3(float* %arraydecay173, float* %arraydecay174), !dbg !18679
  %cmp176 = fcmp olt float %call175, 0.000000e+00, !dbg !18680
  br i1 %cmp176, label %if.then178, label %if.else180, !dbg !18681

if.then178:                                       ; preds = %if.end167
  %112 = load float, float* %time, align 4, !dbg !18682
  %div179 = fdiv float %112, 2.000000e+00, !dbg !18683
  %sub = fsub float 1.000000e+00, %div179, !dbg !18684
  store float %sub, float* %time, align 4, !dbg !18685
  br label %if.end182, !dbg !18686

if.else180:                                       ; preds = %if.end167
  %113 = load float, float* %time, align 4, !dbg !18687
  %div181 = fdiv float %113, 2.000000e+00, !dbg !18687
  store float %div181, float* %time, align 4, !dbg !18687
  br label %if.end182

if.end182:                                        ; preds = %if.else180, %if.then178
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then143
  br label %if.end184, !dbg !18688

if.end184:                                        ; preds = %if.end183, %if.else134
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.end
  %114 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18689
  %split_offset = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %114, i32 0, i32 16, !dbg !18691
  %115 = load i16, i16* %split_offset, align 2, !dbg !18691
  %conv186 = sext i16 %115 to i32, !dbg !18689
  %cmp187 = icmp eq i32 %conv186, 1, !dbg !18692
  br i1 %cmp187, label %if.then189, label %if.else197, !dbg !18693

if.then189:                                       ; preds = %if.end185
  %116 = load float, float* %time, align 4, !dbg !18694
  %117 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18695
  %num = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %117, i32 0, i32 10, !dbg !18696
  %118 = load i32, i32* %num, align 4, !dbg !18696
  %conv190 = sitofp i32 %118 to float, !dbg !18697
  %119 = load i32, i32* %totsplit, align 4, !dbg !18698
  %conv191 = sitofp i32 %119 to float, !dbg !18699
  %div192 = fdiv float %conv190, %conv191, !dbg !18700
  %add193 = fadd float %116, %div192, !dbg !18701
  %conv194 = fpext float %add193 to double, !dbg !18694
  %call195 = call double @fmod(double %conv194, double 1.000000e+00) #5, !dbg !18702
  %conv196 = fptrunc double %call195 to float, !dbg !18703
  store float %conv196, float* %time, align 4, !dbg !18704
  br label %if.end208, !dbg !18705

if.else197:                                       ; preds = %if.end185
  %120 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18706
  %split_offset198 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %120, i32 0, i32 16, !dbg !18708
  %121 = load i16, i16* %split_offset198, align 2, !dbg !18708
  %conv199 = sext i16 %121 to i32, !dbg !18706
  %cmp200 = icmp eq i32 %conv199, 2, !dbg !18709
  br i1 %cmp200, label %if.then202, label %if.end207, !dbg !18710

if.then202:                                       ; preds = %if.else197
  %122 = load float, float* %time, align 4, !dbg !18711
  %123 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18712
  %random = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %123, i32 0, i32 6, !dbg !18713
  %124 = load float, float* %random, align 4, !dbg !18713
  %add203 = fadd float %122, %124, !dbg !18714
  %conv204 = fpext float %add203 to double, !dbg !18711
  %call205 = call double @fmod(double %conv204, double 1.000000e+00) #5, !dbg !18715
  %conv206 = fptrunc double %call205 to float, !dbg !18716
  store float %conv206, float* %time, align 4, !dbg !18717
  br label %if.end207, !dbg !18718

if.end207:                                        ; preds = %if.then202, %if.else197
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then189
  %125 = load float, float* %time, align 4, !dbg !18719
  %add209 = fadd float %125, 0x3EB4000000000000, !dbg !18720
  %126 = load i32, i32* %totsplit, align 4, !dbg !18721
  %conv210 = sitofp i32 %126 to float, !dbg !18721
  %mul211 = fmul float %add209, %conv210, !dbg !18722
  %conv212 = fptosi float %mul211 to i32, !dbg !18723
  store i32 %conv212, i32* %tile, align 4, !dbg !18724
  %127 = load i32, i32* %tile, align 4, !dbg !18725
  %128 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18726
  %uv_split213 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %128, i32 0, i32 14, !dbg !18727
  %129 = load i16, i16* %uv_split213, align 2, !dbg !18727
  %conv214 = sext i16 %129 to i32, !dbg !18726
  %rem215 = srem i32 %127, %conv214, !dbg !18728
  store i32 %rem215, i32* %x, align 4, !dbg !18729
  %130 = load i32, i32* %tile, align 4, !dbg !18730
  %131 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18731
  %uv_split216 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %131, i32 0, i32 14, !dbg !18732
  %132 = load i16, i16* %uv_split216, align 2, !dbg !18732
  %conv217 = sext i16 %132 to i32, !dbg !18731
  %div218 = sdiv i32 %130, %conv217, !dbg !18733
  store i32 %div218, i32* %y, align 4, !dbg !18734
  %133 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18735
  %uv_split219 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %133, i32 0, i32 14, !dbg !18736
  %134 = load i16, i16* %uv_split219, align 2, !dbg !18736
  %conv220 = sext i16 %134 to i32, !dbg !18735
  %sub221 = sub nsw i32 %conv220, 1, !dbg !18737
  %135 = load i32, i32* %y, align 4, !dbg !18738
  %sub222 = sub nsw i32 %sub221, %135, !dbg !18739
  store i32 %sub222, i32* %y, align 4, !dbg !18740
  %136 = load float, float* %uvdx, align 4, !dbg !18741
  %137 = load i32, i32* %x, align 4, !dbg !18742
  %conv223 = sitofp i32 %137 to float, !dbg !18742
  %mul224 = fmul float %136, %conv223, !dbg !18743
  store float %mul224, float* %uvx, align 4, !dbg !18744
  %138 = load float, float* %uvdy, align 4, !dbg !18745
  %139 = load i32, i32* %y, align 4, !dbg !18746
  %conv225 = sitofp i32 %139 to float, !dbg !18746
  %mul226 = fmul float %138, %conv225, !dbg !18747
  store float %mul226, float* %uvy, align 4, !dbg !18748
  br label %if.end227, !dbg !18749

if.end227:                                        ; preds = %if.end208, %entry
  %140 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18750
  %uv = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %140, i32 0, i32 8, !dbg !18752
  %arrayidx228 = getelementptr inbounds [3 x i32], [3 x i32]* %uv, i64 0, i64 0, !dbg !18750
  %141 = load i32, i32* %arrayidx228, align 4, !dbg !18750
  %cmp229 = icmp sge i32 %141, 0, !dbg !18753
  br i1 %cmp229, label %if.then231, label %if.end259, !dbg !18754

if.then231:                                       ; preds = %if.end227
  %142 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18755
  %143 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18757
  %144 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18758
  %uv232 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %144, i32 0, i32 8, !dbg !18759
  %arrayidx233 = getelementptr inbounds [3 x i32], [3 x i32]* %uv232, i64 0, i64 0, !dbg !18758
  %145 = load i32, i32* %arrayidx233, align 4, !dbg !18758
  %call234 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %142, %struct.VlakRen* %143, i32 %145, i8** null, i32 1), !dbg !18760
  store %struct.MTFace* %call234, %struct.MTFace** %mtf, align 8, !dbg !18761
  %146 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18762
  %uv235 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %146, i32 0, i32 0, !dbg !18763
  %arrayidx236 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv235, i64 0, i64 0, !dbg !18762
  %arrayidx237 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx236, i64 0, i64 0, !dbg !18762
  store float 1.000000e+00, float* %arrayidx237, align 8, !dbg !18764
  %147 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18765
  %uv238 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %147, i32 0, i32 0, !dbg !18766
  %arrayidx239 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv238, i64 0, i64 0, !dbg !18765
  %arrayidx240 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx239, i64 0, i64 1, !dbg !18765
  store float 1.000000e+00, float* %arrayidx240, align 4, !dbg !18767
  %148 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18768
  %uv241 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %148, i32 0, i32 0, !dbg !18769
  %arrayidx242 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv241, i64 0, i64 1, !dbg !18768
  %arrayidx243 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx242, i64 0, i64 0, !dbg !18768
  store float 0.000000e+00, float* %arrayidx243, align 8, !dbg !18770
  %149 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18771
  %uv244 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %149, i32 0, i32 0, !dbg !18772
  %arrayidx245 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv244, i64 0, i64 1, !dbg !18771
  %arrayidx246 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx245, i64 0, i64 1, !dbg !18771
  store float 1.000000e+00, float* %arrayidx246, align 4, !dbg !18773
  %150 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18774
  %uv247 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %150, i32 0, i32 0, !dbg !18775
  %arrayidx248 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv247, i64 0, i64 2, !dbg !18774
  %arrayidx249 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx248, i64 0, i64 0, !dbg !18774
  store float 0.000000e+00, float* %arrayidx249, align 8, !dbg !18776
  %151 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18777
  %uv250 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %151, i32 0, i32 0, !dbg !18778
  %arrayidx251 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv250, i64 0, i64 2, !dbg !18777
  %arrayidx252 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx251, i64 0, i64 1, !dbg !18777
  store float 0.000000e+00, float* %arrayidx252, align 4, !dbg !18779
  %152 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18780
  %uv253 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %152, i32 0, i32 0, !dbg !18781
  %arrayidx254 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv253, i64 0, i64 3, !dbg !18780
  %arrayidx255 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx254, i64 0, i64 0, !dbg !18780
  store float 1.000000e+00, float* %arrayidx255, align 8, !dbg !18782
  %153 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18783
  %uv256 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %153, i32 0, i32 0, !dbg !18784
  %arrayidx257 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv256, i64 0, i64 3, !dbg !18783
  %arrayidx258 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx257, i64 0, i64 1, !dbg !18783
  store float 0.000000e+00, float* %arrayidx258, align 4, !dbg !18785
  br label %if.end259, !dbg !18786

if.end259:                                        ; preds = %if.then231, %if.end227
  %154 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18787
  %uv260 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %154, i32 0, i32 8, !dbg !18789
  %arrayidx261 = getelementptr inbounds [3 x i32], [3 x i32]* %uv260, i64 0, i64 1, !dbg !18787
  %155 = load i32, i32* %arrayidx261, align 4, !dbg !18787
  %cmp262 = icmp sge i32 %155, 0, !dbg !18790
  br i1 %cmp262, label %if.then264, label %if.end297, !dbg !18791

if.then264:                                       ; preds = %if.end259
  %156 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18792
  %157 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18794
  %158 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18795
  %uv265 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %158, i32 0, i32 8, !dbg !18796
  %arrayidx266 = getelementptr inbounds [3 x i32], [3 x i32]* %uv265, i64 0, i64 1, !dbg !18795
  %159 = load i32, i32* %arrayidx266, align 4, !dbg !18795
  %call267 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %156, %struct.VlakRen* %157, i32 %159, i8** null, i32 1), !dbg !18797
  store %struct.MTFace* %call267, %struct.MTFace** %mtf, align 8, !dbg !18798
  %160 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18799
  %time268 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %160, i32 0, i32 7, !dbg !18800
  %161 = load float, float* %time268, align 8, !dbg !18800
  %162 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18801
  %uv269 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %162, i32 0, i32 0, !dbg !18802
  %arrayidx270 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv269, i64 0, i64 3, !dbg !18801
  %arrayidx271 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx270, i64 0, i64 0, !dbg !18801
  store float %161, float* %arrayidx271, align 8, !dbg !18803
  %163 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18804
  %uv272 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %163, i32 0, i32 0, !dbg !18805
  %arrayidx273 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv272, i64 0, i64 2, !dbg !18804
  %arrayidx274 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx273, i64 0, i64 0, !dbg !18804
  store float %161, float* %arrayidx274, align 8, !dbg !18806
  %164 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18807
  %uv275 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %164, i32 0, i32 0, !dbg !18808
  %arrayidx276 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv275, i64 0, i64 1, !dbg !18807
  %arrayidx277 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx276, i64 0, i64 0, !dbg !18807
  store float %161, float* %arrayidx277, align 8, !dbg !18809
  %165 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18810
  %uv278 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %165, i32 0, i32 0, !dbg !18811
  %arrayidx279 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv278, i64 0, i64 0, !dbg !18810
  %arrayidx280 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx279, i64 0, i64 0, !dbg !18810
  store float %161, float* %arrayidx280, align 8, !dbg !18812
  %166 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18813
  %num281 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %166, i32 0, i32 10, !dbg !18814
  %167 = load i32, i32* %num281, align 4, !dbg !18814
  %conv282 = sitofp i32 %167 to float, !dbg !18815
  %168 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18816
  %totnum = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %168, i32 0, i32 11, !dbg !18817
  %169 = load i32, i32* %totnum, align 8, !dbg !18817
  %conv283 = sitofp i32 %169 to float, !dbg !18818
  %div284 = fdiv float %conv282, %conv283, !dbg !18819
  %170 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18820
  %uv285 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %170, i32 0, i32 0, !dbg !18821
  %arrayidx286 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv285, i64 0, i64 3, !dbg !18820
  %arrayidx287 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx286, i64 0, i64 1, !dbg !18820
  store float %div284, float* %arrayidx287, align 4, !dbg !18822
  %171 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18823
  %uv288 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %171, i32 0, i32 0, !dbg !18824
  %arrayidx289 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv288, i64 0, i64 2, !dbg !18823
  %arrayidx290 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx289, i64 0, i64 1, !dbg !18823
  store float %div284, float* %arrayidx290, align 4, !dbg !18825
  %172 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18826
  %uv291 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %172, i32 0, i32 0, !dbg !18827
  %arrayidx292 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv291, i64 0, i64 1, !dbg !18826
  %arrayidx293 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx292, i64 0, i64 1, !dbg !18826
  store float %div284, float* %arrayidx293, align 4, !dbg !18828
  %173 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18829
  %uv294 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %173, i32 0, i32 0, !dbg !18830
  %arrayidx295 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv294, i64 0, i64 0, !dbg !18829
  %arrayidx296 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx295, i64 0, i64 1, !dbg !18829
  store float %div284, float* %arrayidx296, align 4, !dbg !18831
  br label %if.end297, !dbg !18832

if.end297:                                        ; preds = %if.then264, %if.end259
  %174 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18833
  %uv_split298 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %174, i32 0, i32 14, !dbg !18835
  %175 = load i16, i16* %uv_split298, align 2, !dbg !18835
  %conv299 = sext i16 %175 to i32, !dbg !18833
  %cmp300 = icmp sgt i32 %conv299, 1, !dbg !18836
  br i1 %cmp300, label %land.lhs.true, label %if.end338, !dbg !18837

land.lhs.true:                                    ; preds = %if.end297
  %176 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18838
  %uv302 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %176, i32 0, i32 8, !dbg !18839
  %arrayidx303 = getelementptr inbounds [3 x i32], [3 x i32]* %uv302, i64 0, i64 2, !dbg !18838
  %177 = load i32, i32* %arrayidx303, align 4, !dbg !18838
  %cmp304 = icmp sge i32 %177, 0, !dbg !18840
  br i1 %cmp304, label %if.then306, label %if.end338, !dbg !18841

if.then306:                                       ; preds = %land.lhs.true
  %178 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18842
  %179 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !18844
  %180 = load %struct.ParticleBillboardData*, %struct.ParticleBillboardData** %bb.addr, align 8, !dbg !18845
  %uv307 = getelementptr inbounds %struct.ParticleBillboardData, %struct.ParticleBillboardData* %180, i32 0, i32 8, !dbg !18846
  %arrayidx308 = getelementptr inbounds [3 x i32], [3 x i32]* %uv307, i64 0, i64 2, !dbg !18845
  %181 = load i32, i32* %arrayidx308, align 4, !dbg !18845
  %call309 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %178, %struct.VlakRen* %179, i32 %181, i8** null, i32 1), !dbg !18847
  store %struct.MTFace* %call309, %struct.MTFace** %mtf, align 8, !dbg !18848
  %182 = load float, float* %uvx, align 4, !dbg !18849
  %183 = load float, float* %uvdx, align 4, !dbg !18850
  %add310 = fadd float %182, %183, !dbg !18851
  %184 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18852
  %uv311 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %184, i32 0, i32 0, !dbg !18853
  %arrayidx312 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv311, i64 0, i64 0, !dbg !18852
  %arrayidx313 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx312, i64 0, i64 0, !dbg !18852
  store float %add310, float* %arrayidx313, align 8, !dbg !18854
  %185 = load float, float* %uvy, align 4, !dbg !18855
  %186 = load float, float* %uvdy, align 4, !dbg !18856
  %add314 = fadd float %185, %186, !dbg !18857
  %187 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18858
  %uv315 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %187, i32 0, i32 0, !dbg !18859
  %arrayidx316 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv315, i64 0, i64 0, !dbg !18858
  %arrayidx317 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx316, i64 0, i64 1, !dbg !18858
  store float %add314, float* %arrayidx317, align 4, !dbg !18860
  %188 = load float, float* %uvx, align 4, !dbg !18861
  %189 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18862
  %uv318 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %189, i32 0, i32 0, !dbg !18863
  %arrayidx319 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv318, i64 0, i64 1, !dbg !18862
  %arrayidx320 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx319, i64 0, i64 0, !dbg !18862
  store float %188, float* %arrayidx320, align 8, !dbg !18864
  %190 = load float, float* %uvy, align 4, !dbg !18865
  %191 = load float, float* %uvdy, align 4, !dbg !18866
  %add321 = fadd float %190, %191, !dbg !18867
  %192 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18868
  %uv322 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %192, i32 0, i32 0, !dbg !18869
  %arrayidx323 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv322, i64 0, i64 1, !dbg !18868
  %arrayidx324 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx323, i64 0, i64 1, !dbg !18868
  store float %add321, float* %arrayidx324, align 4, !dbg !18870
  %193 = load float, float* %uvx, align 4, !dbg !18871
  %194 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18872
  %uv325 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %194, i32 0, i32 0, !dbg !18873
  %arrayidx326 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv325, i64 0, i64 2, !dbg !18872
  %arrayidx327 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx326, i64 0, i64 0, !dbg !18872
  store float %193, float* %arrayidx327, align 8, !dbg !18874
  %195 = load float, float* %uvy, align 4, !dbg !18875
  %196 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18876
  %uv328 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %196, i32 0, i32 0, !dbg !18877
  %arrayidx329 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv328, i64 0, i64 2, !dbg !18876
  %arrayidx330 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx329, i64 0, i64 1, !dbg !18876
  store float %195, float* %arrayidx330, align 4, !dbg !18878
  %197 = load float, float* %uvx, align 4, !dbg !18879
  %198 = load float, float* %uvdx, align 4, !dbg !18880
  %add331 = fadd float %197, %198, !dbg !18881
  %199 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18882
  %uv332 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %199, i32 0, i32 0, !dbg !18883
  %arrayidx333 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv332, i64 0, i64 3, !dbg !18882
  %arrayidx334 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx333, i64 0, i64 0, !dbg !18882
  store float %add331, float* %arrayidx334, align 8, !dbg !18884
  %200 = load float, float* %uvy, align 4, !dbg !18885
  %201 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !18886
  %uv335 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %201, i32 0, i32 0, !dbg !18887
  %arrayidx336 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv335, i64 0, i64 3, !dbg !18886
  %arrayidx337 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx336, i64 0, i64 1, !dbg !18886
  store float %200, float* %arrayidx337, align 4, !dbg !18888
  br label %if.end338, !dbg !18889

if.end338:                                        ; preds = %if.then306, %land.lhs.true, %if.end297
  ret void, !dbg !18890
}

declare dso_local void @psys_make_billboard(%struct.ParticleBillboardData*, float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !18891 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18892, metadata !DIExpression()), !dbg !18893
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18894, metadata !DIExpression()), !dbg !18895
  %0 = load float*, float** %a.addr, align 8, !dbg !18896
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18896
  %1 = load float, float* %arrayidx, align 4, !dbg !18896
  %2 = load float*, float** %r.addr, align 8, !dbg !18897
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18897
  %3 = load float, float* %arrayidx1, align 4, !dbg !18898
  %sub = fsub float %3, %1, !dbg !18898
  store float %sub, float* %arrayidx1, align 4, !dbg !18898
  %4 = load float*, float** %a.addr, align 8, !dbg !18899
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !18899
  %5 = load float, float* %arrayidx2, align 4, !dbg !18899
  %6 = load float*, float** %r.addr, align 8, !dbg !18900
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18900
  %7 = load float, float* %arrayidx3, align 4, !dbg !18901
  %sub4 = fsub float %7, %5, !dbg !18901
  store float %sub4, float* %arrayidx3, align 4, !dbg !18901
  %8 = load float*, float** %a.addr, align 8, !dbg !18902
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !18902
  %9 = load float, float* %arrayidx5, align 4, !dbg !18902
  %10 = load float*, float** %r.addr, align 8, !dbg !18903
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !18903
  %11 = load float, float* %arrayidx6, align 4, !dbg !18904
  %sub7 = fsub float %11, %9, !dbg !18904
  store float %sub7, float* %arrayidx6, align 4, !dbg !18904
  ret void, !dbg !18905
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #2

declare dso_local void @accumulate_vertex_normals(float*, float*, float*, float*, float*, float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @calc_tangent_vector(%struct.ObjectRen* %obr, %struct.VlakRen* %vlr, i32 %do_tangent) #0 !dbg !18906 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %do_tangent.addr = alloca i32, align 4
  %tface = alloca %struct.MTFace*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %tang = alloca [3 x float], align 4
  %tav = alloca float*, align 8
  %uv1 = alloca float*, align 8
  %uv2 = alloca float*, align 8
  %uv3 = alloca float*, align 8
  %uv4 = alloca float*, align 8
  %uv = alloca [4 x [2 x float]], align 16
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !18909, metadata !DIExpression()), !dbg !18910
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !18911, metadata !DIExpression()), !dbg !18912
  store i32 %do_tangent, i32* %do_tangent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %do_tangent.addr, metadata !18913, metadata !DIExpression()), !dbg !18914
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !18915, metadata !DIExpression()), !dbg !18916
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18917
  %1 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !18918
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !18919
  %actmtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 25, !dbg !18920
  %3 = load i32, i32* %actmtface, align 8, !dbg !18920
  %call = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %0, %struct.VlakRen* %1, i32 %3, i8** null, i32 0), !dbg !18921
  store %struct.MTFace* %call, %struct.MTFace** %tface, align 8, !dbg !18916
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !18922, metadata !DIExpression()), !dbg !18923
  %4 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !18924
  %v11 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %4, i32 0, i32 0, !dbg !18925
  %5 = load %struct.VertRen*, %struct.VertRen** %v11, align 8, !dbg !18925
  store %struct.VertRen* %5, %struct.VertRen** %v1, align 8, !dbg !18923
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !18926, metadata !DIExpression()), !dbg !18927
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !18928
  %v22 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %6, i32 0, i32 1, !dbg !18929
  %7 = load %struct.VertRen*, %struct.VertRen** %v22, align 8, !dbg !18929
  store %struct.VertRen* %7, %struct.VertRen** %v2, align 8, !dbg !18927
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !18930, metadata !DIExpression()), !dbg !18931
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !18932
  %v33 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 2, !dbg !18933
  %9 = load %struct.VertRen*, %struct.VertRen** %v33, align 8, !dbg !18933
  store %struct.VertRen* %9, %struct.VertRen** %v3, align 8, !dbg !18931
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !18934, metadata !DIExpression()), !dbg !18935
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !18936
  %v44 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 3, !dbg !18937
  %11 = load %struct.VertRen*, %struct.VertRen** %v44, align 8, !dbg !18937
  store %struct.VertRen* %11, %struct.VertRen** %v4, align 8, !dbg !18935
  call void @llvm.dbg.declare(metadata [3 x float]* %tang, metadata !18938, metadata !DIExpression()), !dbg !18939
  call void @llvm.dbg.declare(metadata float** %tav, metadata !18940, metadata !DIExpression()), !dbg !18941
  call void @llvm.dbg.declare(metadata float** %uv1, metadata !18942, metadata !DIExpression()), !dbg !18943
  call void @llvm.dbg.declare(metadata float** %uv2, metadata !18944, metadata !DIExpression()), !dbg !18945
  call void @llvm.dbg.declare(metadata float** %uv3, metadata !18946, metadata !DIExpression()), !dbg !18947
  call void @llvm.dbg.declare(metadata float** %uv4, metadata !18948, metadata !DIExpression()), !dbg !18949
  call void @llvm.dbg.declare(metadata [4 x [2 x float]]* %uv, metadata !18950, metadata !DIExpression()), !dbg !18951
  %12 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !18952
  %tobool = icmp ne %struct.MTFace* %12, null, !dbg !18952
  br i1 %tobool, label %if.then, label %if.else, !dbg !18954

if.then:                                          ; preds = %entry
  %13 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !18955
  %uv5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !18957
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv5, i64 0, i64 0, !dbg !18955
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !18955
  store float* %arraydecay, float** %uv1, align 8, !dbg !18958
  %14 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !18959
  %uv6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %14, i32 0, i32 0, !dbg !18960
  %arrayidx7 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv6, i64 0, i64 1, !dbg !18959
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx7, i64 0, i64 0, !dbg !18959
  store float* %arraydecay8, float** %uv2, align 8, !dbg !18961
  %15 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !18962
  %uv9 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 0, !dbg !18963
  %arrayidx10 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv9, i64 0, i64 2, !dbg !18962
  %arraydecay11 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx10, i64 0, i64 0, !dbg !18962
  store float* %arraydecay11, float** %uv3, align 8, !dbg !18964
  %16 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !18965
  %uv12 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %16, i32 0, i32 0, !dbg !18966
  %arrayidx13 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv12, i64 0, i64 3, !dbg !18965
  %arraydecay14 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx13, i64 0, i64 0, !dbg !18965
  store float* %arraydecay14, float** %uv4, align 8, !dbg !18967
  br label %if.end69, !dbg !18968

if.else:                                          ; preds = %entry
  %17 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !18969
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %17, i32 0, i32 2, !dbg !18971
  %18 = load float*, float** %orco, align 8, !dbg !18971
  %tobool15 = icmp ne float* %18, null, !dbg !18969
  br i1 %tobool15, label %if.then16, label %if.else67, !dbg !18972

if.then16:                                        ; preds = %if.else
  %arrayidx17 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !18973
  %arraydecay18 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx17, i64 0, i64 0, !dbg !18973
  store float* %arraydecay18, float** %uv1, align 8, !dbg !18975
  %arrayidx19 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 1, !dbg !18976
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !18976
  store float* %arraydecay20, float** %uv2, align 8, !dbg !18977
  %arrayidx21 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 2, !dbg !18978
  %arraydecay22 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx21, i64 0, i64 0, !dbg !18978
  store float* %arraydecay22, float** %uv3, align 8, !dbg !18979
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 3, !dbg !18980
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !18980
  store float* %arraydecay24, float** %uv4, align 8, !dbg !18981
  %arrayidx25 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !18982
  %arrayidx26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i64 0, i64 0, !dbg !18982
  %arrayidx27 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !18983
  %arrayidx28 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx27, i64 0, i64 1, !dbg !18983
  %19 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !18984
  %orco29 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 2, !dbg !18985
  %20 = load float*, float** %orco29, align 8, !dbg !18985
  %arrayidx30 = getelementptr inbounds float, float* %20, i64 0, !dbg !18984
  %21 = load float, float* %arrayidx30, align 4, !dbg !18984
  %22 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !18986
  %orco31 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %22, i32 0, i32 2, !dbg !18987
  %23 = load float*, float** %orco31, align 8, !dbg !18987
  %arrayidx32 = getelementptr inbounds float, float* %23, i64 1, !dbg !18986
  %24 = load float, float* %arrayidx32, align 4, !dbg !18986
  %25 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !18988
  %orco33 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %25, i32 0, i32 2, !dbg !18989
  %26 = load float*, float** %orco33, align 8, !dbg !18989
  %arrayidx34 = getelementptr inbounds float, float* %26, i64 2, !dbg !18988
  %27 = load float, float* %arrayidx34, align 4, !dbg !18988
  call void @map_to_sphere(float* %arrayidx26, float* %arrayidx28, float %21, float %24, float %27), !dbg !18990
  %arrayidx35 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 1, !dbg !18991
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx35, i64 0, i64 0, !dbg !18991
  %arrayidx37 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 1, !dbg !18992
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx37, i64 0, i64 1, !dbg !18992
  %28 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !18993
  %orco39 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %28, i32 0, i32 2, !dbg !18994
  %29 = load float*, float** %orco39, align 8, !dbg !18994
  %arrayidx40 = getelementptr inbounds float, float* %29, i64 0, !dbg !18993
  %30 = load float, float* %arrayidx40, align 4, !dbg !18993
  %31 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !18995
  %orco41 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %31, i32 0, i32 2, !dbg !18996
  %32 = load float*, float** %orco41, align 8, !dbg !18996
  %arrayidx42 = getelementptr inbounds float, float* %32, i64 1, !dbg !18995
  %33 = load float, float* %arrayidx42, align 4, !dbg !18995
  %34 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !18997
  %orco43 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %34, i32 0, i32 2, !dbg !18998
  %35 = load float*, float** %orco43, align 8, !dbg !18998
  %arrayidx44 = getelementptr inbounds float, float* %35, i64 2, !dbg !18997
  %36 = load float, float* %arrayidx44, align 4, !dbg !18997
  call void @map_to_sphere(float* %arrayidx36, float* %arrayidx38, float %30, float %33, float %36), !dbg !18999
  %arrayidx45 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 2, !dbg !19000
  %arrayidx46 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx45, i64 0, i64 0, !dbg !19000
  %arrayidx47 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 2, !dbg !19001
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx47, i64 0, i64 1, !dbg !19001
  %37 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19002
  %orco49 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 2, !dbg !19003
  %38 = load float*, float** %orco49, align 8, !dbg !19003
  %arrayidx50 = getelementptr inbounds float, float* %38, i64 0, !dbg !19002
  %39 = load float, float* %arrayidx50, align 4, !dbg !19002
  %40 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19004
  %orco51 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %40, i32 0, i32 2, !dbg !19005
  %41 = load float*, float** %orco51, align 8, !dbg !19005
  %arrayidx52 = getelementptr inbounds float, float* %41, i64 1, !dbg !19004
  %42 = load float, float* %arrayidx52, align 4, !dbg !19004
  %43 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19006
  %orco53 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 2, !dbg !19007
  %44 = load float*, float** %orco53, align 8, !dbg !19007
  %arrayidx54 = getelementptr inbounds float, float* %44, i64 2, !dbg !19006
  %45 = load float, float* %arrayidx54, align 4, !dbg !19006
  call void @map_to_sphere(float* %arrayidx46, float* %arrayidx48, float %39, float %42, float %45), !dbg !19008
  %46 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19009
  %tobool55 = icmp ne %struct.VertRen* %46, null, !dbg !19009
  br i1 %tobool55, label %if.then56, label %if.end, !dbg !19011

if.then56:                                        ; preds = %if.then16
  %arrayidx57 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 3, !dbg !19012
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx57, i64 0, i64 0, !dbg !19012
  %arrayidx59 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 3, !dbg !19013
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 1, !dbg !19013
  %47 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19014
  %orco61 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %47, i32 0, i32 2, !dbg !19015
  %48 = load float*, float** %orco61, align 8, !dbg !19015
  %arrayidx62 = getelementptr inbounds float, float* %48, i64 0, !dbg !19014
  %49 = load float, float* %arrayidx62, align 4, !dbg !19014
  %50 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19016
  %orco63 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %50, i32 0, i32 2, !dbg !19017
  %51 = load float*, float** %orco63, align 8, !dbg !19017
  %arrayidx64 = getelementptr inbounds float, float* %51, i64 1, !dbg !19016
  %52 = load float, float* %arrayidx64, align 4, !dbg !19016
  %53 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19018
  %orco65 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %53, i32 0, i32 2, !dbg !19019
  %54 = load float*, float** %orco65, align 8, !dbg !19019
  %arrayidx66 = getelementptr inbounds float, float* %54, i64 2, !dbg !19018
  %55 = load float, float* %arrayidx66, align 4, !dbg !19018
  call void @map_to_sphere(float* %arrayidx58, float* %arrayidx60, float %49, float %52, float %55), !dbg !19020
  br label %if.end, !dbg !19020

if.end:                                           ; preds = %if.then56, %if.then16
  br label %if.end68, !dbg !19021

if.else67:                                        ; preds = %if.else
  br label %if.end106, !dbg !19022

if.end68:                                         ; preds = %if.end
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then
  %56 = load float*, float** %uv1, align 8, !dbg !19023
  %57 = load float*, float** %uv2, align 8, !dbg !19024
  %58 = load float*, float** %uv3, align 8, !dbg !19025
  %59 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19026
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %59, i32 0, i32 0, !dbg !19027
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !19026
  %60 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !19028
  %co71 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %60, i32 0, i32 0, !dbg !19029
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co71, i64 0, i64 0, !dbg !19028
  %61 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19030
  %co73 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %61, i32 0, i32 0, !dbg !19031
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !19030
  %62 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !19032
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %62, i32 0, i32 4, !dbg !19033
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !19032
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19034
  call void @tangent_from_uv(float* %56, float* %57, float* %58, float* %arraydecay70, float* %arraydecay72, float* %arraydecay74, float* %arraydecay75, float* %arraydecay76), !dbg !19035
  %63 = load i32, i32* %do_tangent.addr, align 4, !dbg !19036
  %tobool77 = icmp ne i32 %63, 0, !dbg !19036
  br i1 %tobool77, label %if.then78, label %if.end85, !dbg !19038

if.then78:                                        ; preds = %if.end69
  %64 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19039
  %65 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19041
  %call79 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %64, %struct.VertRen* %65, i32 1), !dbg !19042
  store float* %call79, float** %tav, align 8, !dbg !19043
  %66 = load float*, float** %tav, align 8, !dbg !19044
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19045
  call void @add_v3_v3(float* %66, float* %arraydecay80), !dbg !19046
  %67 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19047
  %68 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !19048
  %call81 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %67, %struct.VertRen* %68, i32 1), !dbg !19049
  store float* %call81, float** %tav, align 8, !dbg !19050
  %69 = load float*, float** %tav, align 8, !dbg !19051
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19052
  call void @add_v3_v3(float* %69, float* %arraydecay82), !dbg !19053
  %70 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19054
  %71 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19055
  %call83 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %70, %struct.VertRen* %71, i32 1), !dbg !19056
  store float* %call83, float** %tav, align 8, !dbg !19057
  %72 = load float*, float** %tav, align 8, !dbg !19058
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19059
  call void @add_v3_v3(float* %72, float* %arraydecay84), !dbg !19060
  br label %if.end85, !dbg !19061

if.end85:                                         ; preds = %if.then78, %if.end69
  %73 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19062
  %tobool86 = icmp ne %struct.VertRen* %73, null, !dbg !19062
  br i1 %tobool86, label %if.then87, label %if.end106, !dbg !19064

if.then87:                                        ; preds = %if.end85
  %74 = load float*, float** %uv1, align 8, !dbg !19065
  %75 = load float*, float** %uv3, align 8, !dbg !19067
  %76 = load float*, float** %uv4, align 8, !dbg !19068
  %77 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19069
  %co88 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %77, i32 0, i32 0, !dbg !19070
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co88, i64 0, i64 0, !dbg !19069
  %78 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19071
  %co90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %78, i32 0, i32 0, !dbg !19072
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %co90, i64 0, i64 0, !dbg !19071
  %79 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19073
  %co92 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %79, i32 0, i32 0, !dbg !19074
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %co92, i64 0, i64 0, !dbg !19073
  %80 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !19075
  %n94 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %80, i32 0, i32 4, !dbg !19076
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %n94, i64 0, i64 0, !dbg !19075
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19077
  call void @tangent_from_uv(float* %74, float* %75, float* %76, float* %arraydecay89, float* %arraydecay91, float* %arraydecay93, float* %arraydecay95, float* %arraydecay96), !dbg !19078
  %81 = load i32, i32* %do_tangent.addr, align 4, !dbg !19079
  %tobool97 = icmp ne i32 %81, 0, !dbg !19079
  br i1 %tobool97, label %if.then98, label %if.end105, !dbg !19081

if.then98:                                        ; preds = %if.then87
  %82 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19082
  %83 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19084
  %call99 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %82, %struct.VertRen* %83, i32 1), !dbg !19085
  store float* %call99, float** %tav, align 8, !dbg !19086
  %84 = load float*, float** %tav, align 8, !dbg !19087
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19088
  call void @add_v3_v3(float* %84, float* %arraydecay100), !dbg !19089
  %85 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19090
  %86 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !19091
  %call101 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %85, %struct.VertRen* %86, i32 1), !dbg !19092
  store float* %call101, float** %tav, align 8, !dbg !19093
  %87 = load float*, float** %tav, align 8, !dbg !19094
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19095
  call void @add_v3_v3(float* %87, float* %arraydecay102), !dbg !19096
  %88 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19097
  %89 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19098
  %call103 = call float* @RE_vertren_get_tangent(%struct.ObjectRen* %88, %struct.VertRen* %89, i32 1), !dbg !19099
  store float* %call103, float** %tav, align 8, !dbg !19100
  %90 = load float*, float** %tav, align 8, !dbg !19101
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %tang, i64 0, i64 0, !dbg !19102
  call void @add_v3_v3(float* %90, float* %arraydecay104), !dbg !19103
  br label %if.end105, !dbg !19104

if.end105:                                        ; preds = %if.then98, %if.then87
  br label %if.end106, !dbg !19105

if.end106:                                        ; preds = %if.else67, %if.end105, %if.end85
  ret void, !dbg !19106
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_zero_v3(float* %v) #0 !dbg !19107 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !19110, metadata !DIExpression()), !dbg !19111
  %0 = load float*, float** %v.addr, align 8, !dbg !19112
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !19112
  %1 = load float, float* %arrayidx, align 4, !dbg !19112
  %cmp = fcmp oeq float %1, 0.000000e+00, !dbg !19113
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !19114

land.lhs.true:                                    ; preds = %entry
  %2 = load float*, float** %v.addr, align 8, !dbg !19115
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !19115
  %3 = load float, float* %arrayidx1, align 4, !dbg !19115
  %cmp2 = fcmp oeq float %3, 0.000000e+00, !dbg !19116
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !19117

land.rhs:                                         ; preds = %land.lhs.true
  %4 = load float*, float** %v.addr, align 8, !dbg !19118
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 2, !dbg !19118
  %5 = load float, float* %arrayidx3, align 4, !dbg !19118
  %cmp4 = fcmp oeq float %5, 0.000000e+00, !dbg !19119
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %6 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !19120
  %land.ext = zext i1 %6 to i32, !dbg !19117
  %conv = trunc i32 %land.ext to i8, !dbg !19121
  ret i8 %conv, !dbg !19122
}

declare dso_local float* @RE_vertren_get_tangent(%struct.ObjectRen*, %struct.VertRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetNumFaces(%struct.SMikkTSpaceContext* %pContext) #0 !dbg !19123 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19124, metadata !DIExpression()), !dbg !19125
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19126, metadata !DIExpression()), !dbg !19127
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19128
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19129
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19129
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19130
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19127
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19131
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19132
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19132
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 11, !dbg !19133
  %5 = load i32, i32* %totvlak, align 4, !dbg !19133
  ret i32 %5, !dbg !19134
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetNumVertsOfFace(%struct.SMikkTSpaceContext* %pContext, i32 %face_num) #0 !dbg !19135 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %face_num.addr = alloca i32, align 4
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19136, metadata !DIExpression()), !dbg !19137
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !19138, metadata !DIExpression()), !dbg !19139
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19140, metadata !DIExpression()), !dbg !19141
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19142
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19143
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19143
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19144
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19141
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19145, metadata !DIExpression()), !dbg !19146
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19147
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19148
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19148
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !19149
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %5), !dbg !19150
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !19146
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19151
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %6, i32 0, i32 3, !dbg !19152
  %7 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !19152
  %cmp = icmp ne %struct.VertRen* %7, null, !dbg !19153
  %8 = zext i1 %cmp to i64, !dbg !19151
  %cond = select i1 %cmp, i32 4, i32 3, !dbg !19151
  ret i32 %cond, !dbg !19154
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetPosition(%struct.SMikkTSpaceContext* %pContext, float* %r_co, i32 %face_num, i32 %vert_index) #0 !dbg !19155 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_co.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %co = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19156, metadata !DIExpression()), !dbg !19157
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !19158, metadata !DIExpression()), !dbg !19159
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !19160, metadata !DIExpression()), !dbg !19161
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !19162, metadata !DIExpression()), !dbg !19163
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19164, metadata !DIExpression()), !dbg !19165
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19166
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19167
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19167
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19168
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19165
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19169, metadata !DIExpression()), !dbg !19170
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19171
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19172
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19172
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !19173
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %5), !dbg !19174
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !19170
  call void @llvm.dbg.declare(metadata float** %co, metadata !19175, metadata !DIExpression()), !dbg !19176
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19177
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %6, i32 0, i32 0, !dbg !19178
  %7 = load i32, i32* %vert_index.addr, align 4, !dbg !19179
  %idxprom = sext i32 %7 to i64, !dbg !19180
  %arrayidx = getelementptr inbounds %struct.VertRen*, %struct.VertRen** %v1, i64 %idxprom, !dbg !19180
  %8 = load %struct.VertRen*, %struct.VertRen** %arrayidx, align 8, !dbg !19180
  %co1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %8, i32 0, i32 0, !dbg !19181
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !19180
  store float* %arraydecay, float** %co, align 8, !dbg !19176
  %9 = load float*, float** %r_co.addr, align 8, !dbg !19182
  %10 = load float*, float** %co, align 8, !dbg !19183
  call void @copy_v3_v3(float* %9, float* %10), !dbg !19184
  ret void, !dbg !19185
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetTextureCoordinate(%struct.SMikkTSpaceContext* %pContext, float* %r_uv, i32 %face_num, i32 %vert_index) #0 !dbg !19186 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_uv.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %coord = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19187, metadata !DIExpression()), !dbg !19188
  store float* %r_uv, float** %r_uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_uv.addr, metadata !19189, metadata !DIExpression()), !dbg !19190
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !19191, metadata !DIExpression()), !dbg !19192
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !19193, metadata !DIExpression()), !dbg !19194
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19195, metadata !DIExpression()), !dbg !19196
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19197
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19198
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19198
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19199
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19196
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19200, metadata !DIExpression()), !dbg !19201
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19202
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19203
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19203
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !19204
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %5), !dbg !19205
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !19201
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !19206, metadata !DIExpression()), !dbg !19207
  %6 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19208
  %obr1 = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %6, i32 0, i32 0, !dbg !19209
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !19209
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19210
  %9 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19211
  %obr2 = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %9, i32 0, i32 0, !dbg !19212
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr2, align 8, !dbg !19212
  %actmtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 25, !dbg !19213
  %11 = load i32, i32* %actmtface, align 8, !dbg !19213
  %call3 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %7, %struct.VlakRen* %8, i32 %11, i8** null, i32 0), !dbg !19214
  store %struct.MTFace* %call3, %struct.MTFace** %tface, align 8, !dbg !19207
  call void @llvm.dbg.declare(metadata float** %coord, metadata !19215, metadata !DIExpression()), !dbg !19216
  %12 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !19217
  %cmp = icmp ne %struct.MTFace* %12, null, !dbg !19219
  br i1 %cmp, label %if.then, label %if.else, !dbg !19220

if.then:                                          ; preds = %entry
  %13 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !19221
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !19223
  %14 = load i32, i32* %vert_index.addr, align 4, !dbg !19224
  %idxprom = sext i32 %14 to i64, !dbg !19221
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom, !dbg !19221
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !19221
  store float* %arraydecay, float** %coord, align 8, !dbg !19225
  %15 = load float*, float** %r_uv.addr, align 8, !dbg !19226
  %16 = load float*, float** %coord, align 8, !dbg !19227
  call void @copy_v2_v2(float* %15, float* %16), !dbg !19228
  br label %if.end13, !dbg !19229

if.else:                                          ; preds = %entry
  %17 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19230
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %17, i32 0, i32 0, !dbg !19232
  %18 = load i32, i32* %vert_index.addr, align 4, !dbg !19233
  %idxprom4 = sext i32 %18 to i64, !dbg !19234
  %arrayidx5 = getelementptr inbounds %struct.VertRen*, %struct.VertRen** %v1, i64 %idxprom4, !dbg !19234
  %19 = load %struct.VertRen*, %struct.VertRen** %arrayidx5, align 8, !dbg !19234
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 2, !dbg !19235
  %20 = load float*, float** %orco, align 8, !dbg !19235
  store float* %20, float** %coord, align 8, !dbg !19236
  %tobool = icmp ne float* %20, null, !dbg !19236
  br i1 %tobool, label %if.then6, label %if.else12, !dbg !19237

if.then6:                                         ; preds = %if.else
  %21 = load float*, float** %r_uv.addr, align 8, !dbg !19238
  %arrayidx7 = getelementptr inbounds float, float* %21, i64 0, !dbg !19238
  %22 = load float*, float** %r_uv.addr, align 8, !dbg !19240
  %arrayidx8 = getelementptr inbounds float, float* %22, i64 1, !dbg !19240
  %23 = load float*, float** %coord, align 8, !dbg !19241
  %arrayidx9 = getelementptr inbounds float, float* %23, i64 0, !dbg !19241
  %24 = load float, float* %arrayidx9, align 4, !dbg !19241
  %25 = load float*, float** %coord, align 8, !dbg !19242
  %arrayidx10 = getelementptr inbounds float, float* %25, i64 1, !dbg !19242
  %26 = load float, float* %arrayidx10, align 4, !dbg !19242
  %27 = load float*, float** %coord, align 8, !dbg !19243
  %arrayidx11 = getelementptr inbounds float, float* %27, i64 2, !dbg !19243
  %28 = load float, float* %arrayidx11, align 4, !dbg !19243
  call void @map_to_sphere(float* %arrayidx7, float* %arrayidx8, float %24, float %26, float %28), !dbg !19244
  br label %if.end, !dbg !19245

if.else12:                                        ; preds = %if.else
  %29 = load float*, float** %r_uv.addr, align 8, !dbg !19246
  call void @zero_v2(float* %29), !dbg !19248
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then6
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  ret void, !dbg !19249
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetNormal(%struct.SMikkTSpaceContext* %pContext, float* %r_no, i32 %face_num, i32 %vert_index) #0 !dbg !19250 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %r_no.addr = alloca float*, align 8
  %face_num.addr = alloca i32, align 4
  %vert_index.addr = alloca i32, align 4
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %n = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19251, metadata !DIExpression()), !dbg !19252
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !19253, metadata !DIExpression()), !dbg !19254
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !19255, metadata !DIExpression()), !dbg !19256
  store i32 %vert_index, i32* %vert_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert_index.addr, metadata !19257, metadata !DIExpression()), !dbg !19258
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19259, metadata !DIExpression()), !dbg !19260
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19261
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19262
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19262
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19263
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19260
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19264, metadata !DIExpression()), !dbg !19265
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19266
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19267
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19267
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !19268
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %5), !dbg !19269
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !19265
  %6 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19270
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %6, i32 0, i32 7, !dbg !19272
  %7 = load i8, i8* %flag, align 1, !dbg !19272
  %conv = zext i8 %7 to i32, !dbg !19270
  %and = and i32 %conv, 1, !dbg !19273
  %tobool = icmp ne i32 %and, 0, !dbg !19273
  br i1 %tobool, label %if.then, label %if.else, !dbg !19274

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float** %n, metadata !19275, metadata !DIExpression()), !dbg !19277
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19278
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 0, !dbg !19279
  %9 = load i32, i32* %vert_index.addr, align 4, !dbg !19280
  %idxprom = sext i32 %9 to i64, !dbg !19281
  %arrayidx = getelementptr inbounds %struct.VertRen*, %struct.VertRen** %v1, i64 %idxprom, !dbg !19281
  %10 = load %struct.VertRen*, %struct.VertRen** %arrayidx, align 8, !dbg !19281
  %n1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %10, i32 0, i32 1, !dbg !19282
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !19281
  store float* %arraydecay, float** %n, align 8, !dbg !19277
  %11 = load float*, float** %r_no.addr, align 8, !dbg !19283
  %12 = load float*, float** %n, align 8, !dbg !19284
  call void @copy_v3_v3(float* %11, float* %12), !dbg !19285
  br label %if.end, !dbg !19286

if.else:                                          ; preds = %entry
  %13 = load float*, float** %r_no.addr, align 8, !dbg !19287
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19289
  %n2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 4, !dbg !19290
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !19289
  call void @negate_v3_v3(float* %13, float* %arraydecay3), !dbg !19291
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !19292
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetTSpace(%struct.SMikkTSpaceContext* %pContext, float* %fvTangent, float %fSign, i32 %face_num, i32 %iVert) #0 !dbg !19293 {
entry:
  %pContext.addr = alloca %struct.SMikkTSpaceContext*, align 8
  %fvTangent.addr = alloca float*, align 8
  %fSign.addr = alloca float, align 4
  %face_num.addr = alloca i32, align 4
  %iVert.addr = alloca i32, align 4
  %pMesh = alloca %struct.SRenderMeshToTangent*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ftang = alloca float*, align 8
  store %struct.SMikkTSpaceContext* %pContext, %struct.SMikkTSpaceContext** %pContext.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SMikkTSpaceContext** %pContext.addr, metadata !19294, metadata !DIExpression()), !dbg !19295
  store float* %fvTangent, float** %fvTangent.addr, align 8
  call void @llvm.dbg.declare(metadata float** %fvTangent.addr, metadata !19296, metadata !DIExpression()), !dbg !19297
  store float %fSign, float* %fSign.addr, align 4
  call void @llvm.dbg.declare(metadata float* %fSign.addr, metadata !19298, metadata !DIExpression()), !dbg !19299
  store i32 %face_num, i32* %face_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %face_num.addr, metadata !19300, metadata !DIExpression()), !dbg !19301
  store i32 %iVert, i32* %iVert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iVert.addr, metadata !19302, metadata !DIExpression()), !dbg !19303
  call void @llvm.dbg.declare(metadata %struct.SRenderMeshToTangent** %pMesh, metadata !19304, metadata !DIExpression()), !dbg !19305
  %0 = load %struct.SMikkTSpaceContext*, %struct.SMikkTSpaceContext** %pContext.addr, align 8, !dbg !19306
  %m_pUserData = getelementptr inbounds %struct.SMikkTSpaceContext, %struct.SMikkTSpaceContext* %0, i32 0, i32 1, !dbg !19307
  %1 = load i8*, i8** %m_pUserData, align 8, !dbg !19307
  %2 = bitcast i8* %1 to %struct.SRenderMeshToTangent*, !dbg !19308
  store %struct.SRenderMeshToTangent* %2, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19305
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19309, metadata !DIExpression()), !dbg !19310
  %3 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19311
  %obr = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %3, i32 0, i32 0, !dbg !19312
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !19312
  %5 = load i32, i32* %face_num.addr, align 4, !dbg !19313
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %5), !dbg !19314
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !19310
  call void @llvm.dbg.declare(metadata float** %ftang, metadata !19315, metadata !DIExpression()), !dbg !19316
  %6 = load %struct.SRenderMeshToTangent*, %struct.SRenderMeshToTangent** %pMesh, align 8, !dbg !19317
  %obr1 = getelementptr inbounds %struct.SRenderMeshToTangent, %struct.SRenderMeshToTangent* %6, i32 0, i32 0, !dbg !19318
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !19318
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19319
  %call2 = call float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen* %7, %struct.VlakRen* %8, i32 1), !dbg !19320
  store float* %call2, float** %ftang, align 8, !dbg !19316
  %9 = load float*, float** %ftang, align 8, !dbg !19321
  %cmp = icmp ne float* %9, null, !dbg !19323
  br i1 %cmp, label %if.then, label %if.end, !dbg !19324

if.then:                                          ; preds = %entry
  %10 = load float*, float** %ftang, align 8, !dbg !19325
  %11 = load i32, i32* %iVert.addr, align 4, !dbg !19327
  %mul = mul nsw i32 %11, 4, !dbg !19328
  %add = add nsw i32 %mul, 0, !dbg !19329
  %idxprom = sext i32 %add to i64, !dbg !19325
  %arrayidx = getelementptr inbounds float, float* %10, i64 %idxprom, !dbg !19325
  %12 = load float*, float** %fvTangent.addr, align 8, !dbg !19330
  call void @copy_v3_v3(float* %arrayidx, float* %12), !dbg !19331
  %13 = load float, float* %fSign.addr, align 4, !dbg !19332
  %14 = load float*, float** %ftang, align 8, !dbg !19333
  %15 = load i32, i32* %iVert.addr, align 4, !dbg !19334
  %mul3 = mul nsw i32 %15, 4, !dbg !19335
  %add4 = add nsw i32 %mul3, 3, !dbg !19336
  %idxprom5 = sext i32 %add4 to i64, !dbg !19333
  %arrayidx6 = getelementptr inbounds float, float* %14, i64 %idxprom5, !dbg !19333
  store float %13, float* %arrayidx6, align 4, !dbg !19337
  br label %if.end, !dbg !19338

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19339
}

declare dso_local i32 @genTangSpaceDefault(%struct.SMikkTSpaceContext*) #4

declare dso_local void @map_to_sphere(float*, float*, float, float, float) #4

declare dso_local void @tangent_from_uv(float*, float*, float*, float*, float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !19340 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !19341, metadata !DIExpression()), !dbg !19342
  %0 = load float*, float** %r.addr, align 8, !dbg !19343
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !19343
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !19344
  %1 = load float*, float** %r.addr, align 8, !dbg !19345
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !19345
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !19346
  ret void, !dbg !19347
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !19348 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !19349, metadata !DIExpression()), !dbg !19350
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !19351, metadata !DIExpression()), !dbg !19352
  %0 = load float*, float** %a.addr, align 8, !dbg !19353
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !19353
  %1 = load float, float* %arrayidx, align 4, !dbg !19353
  %fneg = fneg float %1, !dbg !19354
  %2 = load float*, float** %r.addr, align 8, !dbg !19355
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !19355
  store float %fneg, float* %arrayidx1, align 4, !dbg !19356
  %3 = load float*, float** %a.addr, align 8, !dbg !19357
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !19357
  %4 = load float, float* %arrayidx2, align 4, !dbg !19357
  %fneg3 = fneg float %4, !dbg !19358
  %5 = load float*, float** %r.addr, align 8, !dbg !19359
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !19359
  store float %fneg3, float* %arrayidx4, align 4, !dbg !19360
  %6 = load float*, float** %a.addr, align 8, !dbg !19361
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !19361
  %7 = load float, float* %arrayidx5, align 4, !dbg !19361
  %fneg6 = fneg float %7, !dbg !19362
  %8 = load float*, float** %r.addr, align 8, !dbg !19363
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !19363
  store float %fneg6, float* %arrayidx7, align 4, !dbg !19364
  ret void, !dbg !19365
}

declare dso_local float* @RE_vlakren_get_nmap_tangent(%struct.ObjectRen*, %struct.VlakRen*, i32) #4

declare dso_local void @BKE_displist_make_curveTypes_forRender(%struct.Scene*, %struct.Object*, %struct.ListBase*, %struct.DerivedMesh**, i8 zeroext, i8 zeroext) #4

declare dso_local zeroext i8 @is_negative_m4([4 x float]*) #4

declare dso_local void @transpose_m4([4 x float]*) #4

declare dso_local float* @BKE_displist_make_orco(%struct.Scene*, %struct.Object*, %struct.DerivedMesh*, i8 zeroext, i8 zeroext) #4

; Function Attrs: noinline nounwind uwtable
define internal void @init_render_dm(%struct.DerivedMesh* %dm, %struct.Render* %re, %struct.ObjectRen* %obr, i32 %timeoffset, float* %orco, [4 x float]* %mat) #0 !dbg !19366 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %timeoffset.addr = alloca i32, align 4
  %orco.addr = alloca float*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %ob = alloca %struct.Object*, align 8
  %a = alloca i32, align 4
  %end = alloca i32, align 4
  %totvert = alloca i32, align 4
  %vertofs = alloca i32, align 4
  %mat_iter = alloca i16, align 2
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %ma = alloca %struct.Material*, align 8
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %v4 = alloca i32, align 4
  %flag = alloca i32, align 4
  %len = alloca float, align 4
  %layer = alloca %struct.CustomDataLayer*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mtf = alloca %struct.MTFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mc = alloca %struct.MCol*, align 8
  %index = alloca i32, align 4
  %mtfn = alloca i32, align 4
  %mcn = alloca i32, align 4
  %name = alloca i8*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !19369, metadata !DIExpression()), !dbg !19370
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !19371, metadata !DIExpression()), !dbg !19372
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !19373, metadata !DIExpression()), !dbg !19374
  store i32 %timeoffset, i32* %timeoffset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeoffset.addr, metadata !19375, metadata !DIExpression()), !dbg !19376
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !19377, metadata !DIExpression()), !dbg !19378
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !19379, metadata !DIExpression()), !dbg !19380
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !19381, metadata !DIExpression()), !dbg !19382
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19383
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !19384
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !19384
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !19382
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19385, metadata !DIExpression()), !dbg !19386
  call void @llvm.dbg.declare(metadata i32* %end, metadata !19387, metadata !DIExpression()), !dbg !19388
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !19389, metadata !DIExpression()), !dbg !19390
  call void @llvm.dbg.declare(metadata i32* %vertofs, metadata !19391, metadata !DIExpression()), !dbg !19392
  call void @llvm.dbg.declare(metadata i16* %mat_iter, metadata !19393, metadata !DIExpression()), !dbg !19394
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !19395, metadata !DIExpression()), !dbg !19396
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19397, metadata !DIExpression()), !dbg !19398
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !19399, metadata !DIExpression()), !dbg !19400
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !19400
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !19401, metadata !DIExpression()), !dbg !19402
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !19403, metadata !DIExpression()), !dbg !19404
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19405
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 31, !dbg !19406
  %3 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !19406
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19407
  %call = call %struct.MVert* %3(%struct.DerivedMesh* %4), !dbg !19405
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !19408
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19409
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %5, i32 0, i32 23, !dbg !19410
  %6 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !19410
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19411
  %call2 = call i32 %6(%struct.DerivedMesh* %7), !dbg !19409
  store i32 %call2, i32* %totvert, align 4, !dbg !19412
  store i32 0, i32* %a, align 4, !dbg !19413
  br label %for.cond, !dbg !19415

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %a, align 4, !dbg !19416
  %9 = load i32, i32* %totvert, align 4, !dbg !19418
  %cmp = icmp slt i32 %8, %9, !dbg !19419
  br i1 %cmp, label %for.body, label %for.end, !dbg !19420

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19421
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19423
  %totvert3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 10, !dbg !19424
  %12 = load i32, i32* %totvert3, align 8, !dbg !19425
  %inc = add nsw i32 %12, 1, !dbg !19425
  store i32 %inc, i32* %totvert3, align 8, !dbg !19425
  %call4 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %10, i32 %12), !dbg !19426
  store %struct.VertRen* %call4, %struct.VertRen** %ver, align 8, !dbg !19427
  %13 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19428
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %13, i32 0, i32 0, !dbg !19429
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !19428
  %14 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !19430
  %co5 = getelementptr inbounds %struct.MVert, %struct.MVert* %14, i32 0, i32 0, !dbg !19431
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !19430
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !19432
  %15 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !19433
  %16 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19434
  %co7 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %16, i32 0, i32 0, !dbg !19435
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %co7, i64 0, i64 0, !dbg !19434
  call void @mul_m4_v3([4 x float]* %15, float* %arraydecay8), !dbg !19436
  %17 = load float*, float** %orco.addr, align 8, !dbg !19437
  %tobool = icmp ne float* %17, null, !dbg !19437
  br i1 %tobool, label %if.then, label %if.end, !dbg !19439

if.then:                                          ; preds = %for.body
  %18 = load float*, float** %orco.addr, align 8, !dbg !19440
  %19 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19442
  %orco9 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 2, !dbg !19443
  store float* %18, float** %orco9, align 8, !dbg !19444
  %20 = load float*, float** %orco.addr, align 8, !dbg !19445
  %add.ptr = getelementptr inbounds float, float* %20, i64 3, !dbg !19445
  store float* %add.ptr, float** %orco.addr, align 8, !dbg !19445
  br label %if.end, !dbg !19446

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !19447

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %a, align 4, !dbg !19448
  %inc10 = add nsw i32 %21, 1, !dbg !19448
  store i32 %inc10, i32* %a, align 4, !dbg !19448
  %22 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !19449
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %22, i32 1, !dbg !19449
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert, align 8, !dbg !19449
  br label %for.cond, !dbg !19450, !llvm.loop !19451

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %timeoffset.addr, align 4, !dbg !19453
  %tobool11 = icmp ne i32 %23, 0, !dbg !19453
  br i1 %tobool11, label %if.end145, label %if.then12, !dbg !19455

if.then12:                                        ; preds = %for.end
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19456
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19458
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %25, i32 0, i32 2, !dbg !19459
  call void @RE_set_customdata_names(%struct.ObjectRen* %24, %struct.CustomData* %faceData), !dbg !19460
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19461
  %totvert13 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 10, !dbg !19462
  %27 = load i32, i32* %totvert13, align 8, !dbg !19462
  %28 = load i32, i32* %totvert, align 4, !dbg !19463
  %sub = sub nsw i32 %27, %28, !dbg !19464
  store i32 %sub, i32* %vertofs, align 4, !dbg !19465
  store i16 0, i16* %mat_iter, align 2, !dbg !19466
  br label %for.cond14, !dbg !19468

for.cond14:                                       ; preds = %for.inc142, %if.then12
  %29 = load i16, i16* %mat_iter, align 2, !dbg !19469
  %conv = sext i16 %29 to i32, !dbg !19469
  %30 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19471
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %30, i32 0, i32 31, !dbg !19472
  %31 = load i32, i32* %totcol, align 8, !dbg !19472
  %cmp15 = icmp slt i32 %conv, %31, !dbg !19473
  br i1 %cmp15, label %lor.end, label %lor.rhs, !dbg !19474

lor.rhs:                                          ; preds = %for.cond14
  %32 = load i16, i16* %mat_iter, align 2, !dbg !19475
  %conv17 = sext i16 %32 to i32, !dbg !19475
  %cmp18 = icmp eq i32 %conv17, 0, !dbg !19476
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !19477

land.rhs:                                         ; preds = %lor.rhs
  %33 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19478
  %totcol20 = getelementptr inbounds %struct.Object, %struct.Object* %33, i32 0, i32 31, !dbg !19479
  %34 = load i32, i32* %totcol20, align 8, !dbg !19479
  %cmp21 = icmp eq i32 %34, 0, !dbg !19480
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %35 = phi i1 [ false, %lor.rhs ], [ %cmp21, %land.rhs ], !dbg !19481
  br label %lor.end, !dbg !19474

lor.end:                                          ; preds = %land.end, %for.cond14
  %36 = phi i1 [ true, %for.cond14 ], [ %35, %land.end ]
  br i1 %36, label %for.body23, label %for.end144, !dbg !19482

for.body23:                                       ; preds = %lor.end
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !19483
  %38 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !19485
  %39 = load i16, i16* %mat_iter, align 2, !dbg !19486
  %conv24 = sext i16 %39 to i32, !dbg !19486
  %add = add nsw i32 %conv24, 1, !dbg !19487
  %conv25 = trunc i32 %add to i16, !dbg !19486
  %call26 = call %struct.Material* @give_render_material(%struct.Render* %37, %struct.Object* %38, i16 signext %conv25), !dbg !19488
  store %struct.Material* %call26, %struct.Material** %ma, align 8, !dbg !19489
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19490
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %40, i32 0, i32 25, !dbg !19491
  %41 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !19491
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19492
  %call27 = call i32 %41(%struct.DerivedMesh* %42), !dbg !19490
  store i32 %call27, i32* %end, align 4, !dbg !19493
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19494
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %43, i32 0, i32 33, !dbg !19495
  %44 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !19495
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19496
  %call28 = call %struct.MFace* %44(%struct.DerivedMesh* %45), !dbg !19494
  store %struct.MFace* %call28, %struct.MFace** %mface, align 8, !dbg !19497
  store i32 0, i32* %a, align 4, !dbg !19498
  br label %for.cond29, !dbg !19500

for.cond29:                                       ; preds = %for.inc138, %for.body23
  %46 = load i32, i32* %a, align 4, !dbg !19501
  %47 = load i32, i32* %end, align 4, !dbg !19503
  %cmp30 = icmp slt i32 %46, %47, !dbg !19504
  br i1 %cmp30, label %for.body32, label %for.end141, !dbg !19505

for.body32:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !19506, metadata !DIExpression()), !dbg !19508
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !19509, metadata !DIExpression()), !dbg !19510
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !19511, metadata !DIExpression()), !dbg !19512
  call void @llvm.dbg.declare(metadata i32* %v4, metadata !19513, metadata !DIExpression()), !dbg !19514
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !19515, metadata !DIExpression()), !dbg !19516
  %48 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19517
  %mat_nr = getelementptr inbounds %struct.MFace, %struct.MFace* %48, i32 0, i32 4, !dbg !19519
  %49 = load i16, i16* %mat_nr, align 4, !dbg !19519
  %conv33 = sext i16 %49 to i32, !dbg !19517
  %50 = load i16, i16* %mat_iter, align 2, !dbg !19520
  %conv34 = sext i16 %50 to i32, !dbg !19520
  %cmp35 = icmp eq i32 %conv33, %conv34, !dbg !19521
  br i1 %cmp35, label %if.then37, label %if.end137, !dbg !19522

if.then37:                                        ; preds = %for.body32
  call void @llvm.dbg.declare(metadata float* %len, metadata !19523, metadata !DIExpression()), !dbg !19525
  %51 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19526
  %v138 = getelementptr inbounds %struct.MFace, %struct.MFace* %51, i32 0, i32 0, !dbg !19527
  %52 = load i32, i32* %v138, align 4, !dbg !19527
  store i32 %52, i32* %v1, align 4, !dbg !19528
  %53 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19529
  %v239 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i32 0, i32 1, !dbg !19530
  %54 = load i32, i32* %v239, align 4, !dbg !19530
  store i32 %54, i32* %v2, align 4, !dbg !19531
  %55 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19532
  %v340 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 2, !dbg !19533
  %56 = load i32, i32* %v340, align 4, !dbg !19533
  store i32 %56, i32* %v3, align 4, !dbg !19534
  %57 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19535
  %v441 = getelementptr inbounds %struct.MFace, %struct.MFace* %57, i32 0, i32 3, !dbg !19536
  %58 = load i32, i32* %v441, align 4, !dbg !19536
  store i32 %58, i32* %v4, align 4, !dbg !19537
  %59 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19538
  %flag42 = getelementptr inbounds %struct.MFace, %struct.MFace* %59, i32 0, i32 6, !dbg !19539
  %60 = load i8, i8* %flag42, align 1, !dbg !19539
  %conv43 = zext i8 %60 to i32, !dbg !19538
  %and = and i32 %conv43, 1, !dbg !19540
  store i32 %and, i32* %flag, align 4, !dbg !19541
  %61 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19542
  %62 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19543
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %62, i32 0, i32 11, !dbg !19544
  %63 = load i32, i32* %totvlak, align 4, !dbg !19545
  %inc44 = add nsw i32 %63, 1, !dbg !19545
  store i32 %inc44, i32* %totvlak, align 4, !dbg !19545
  %call45 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %61, i32 %63), !dbg !19546
  store %struct.VlakRen* %call45, %struct.VlakRen** %vlr, align 8, !dbg !19547
  %64 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19548
  %65 = load i32, i32* %vertofs, align 4, !dbg !19549
  %66 = load i32, i32* %v1, align 4, !dbg !19550
  %add46 = add nsw i32 %65, %66, !dbg !19551
  %call47 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %64, i32 %add46), !dbg !19552
  %67 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19553
  %v148 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %67, i32 0, i32 0, !dbg !19554
  store %struct.VertRen* %call47, %struct.VertRen** %v148, align 8, !dbg !19555
  %68 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19556
  %69 = load i32, i32* %vertofs, align 4, !dbg !19557
  %70 = load i32, i32* %v2, align 4, !dbg !19558
  %add49 = add nsw i32 %69, %70, !dbg !19559
  %call50 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %68, i32 %add49), !dbg !19560
  %71 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19561
  %v251 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %71, i32 0, i32 1, !dbg !19562
  store %struct.VertRen* %call50, %struct.VertRen** %v251, align 8, !dbg !19563
  %72 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19564
  %73 = load i32, i32* %vertofs, align 4, !dbg !19565
  %74 = load i32, i32* %v3, align 4, !dbg !19566
  %add52 = add nsw i32 %73, %74, !dbg !19567
  %call53 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %72, i32 %add52), !dbg !19568
  %75 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19569
  %v354 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %75, i32 0, i32 2, !dbg !19570
  store %struct.VertRen* %call53, %struct.VertRen** %v354, align 8, !dbg !19571
  %76 = load i32, i32* %v4, align 4, !dbg !19572
  %tobool55 = icmp ne i32 %76, 0, !dbg !19572
  br i1 %tobool55, label %if.then56, label %if.else, !dbg !19574

if.then56:                                        ; preds = %if.then37
  %77 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19575
  %78 = load i32, i32* %vertofs, align 4, !dbg !19576
  %79 = load i32, i32* %v4, align 4, !dbg !19577
  %add57 = add nsw i32 %78, %79, !dbg !19578
  %call58 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %77, i32 %add57), !dbg !19579
  %80 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19580
  %v459 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %80, i32 0, i32 3, !dbg !19581
  store %struct.VertRen* %call58, %struct.VertRen** %v459, align 8, !dbg !19582
  br label %if.end61, !dbg !19580

if.else:                                          ; preds = %if.then37
  %81 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19583
  %v460 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %81, i32 0, i32 3, !dbg !19584
  store %struct.VertRen* null, %struct.VertRen** %v460, align 8, !dbg !19585
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then56
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19586
  %v462 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %82, i32 0, i32 3, !dbg !19588
  %83 = load %struct.VertRen*, %struct.VertRen** %v462, align 8, !dbg !19588
  %tobool63 = icmp ne %struct.VertRen* %83, null, !dbg !19586
  br i1 %tobool63, label %if.then64, label %if.else79, !dbg !19589

if.then64:                                        ; preds = %if.end61
  %84 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19590
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %84, i32 0, i32 4, !dbg !19591
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !19590
  %85 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19592
  %v466 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %85, i32 0, i32 3, !dbg !19593
  %86 = load %struct.VertRen*, %struct.VertRen** %v466, align 8, !dbg !19593
  %co67 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %86, i32 0, i32 0, !dbg !19594
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %co67, i64 0, i64 0, !dbg !19592
  %87 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19595
  %v369 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %87, i32 0, i32 2, !dbg !19596
  %88 = load %struct.VertRen*, %struct.VertRen** %v369, align 8, !dbg !19596
  %co70 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %88, i32 0, i32 0, !dbg !19597
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %co70, i64 0, i64 0, !dbg !19595
  %89 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19598
  %v272 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %89, i32 0, i32 1, !dbg !19599
  %90 = load %struct.VertRen*, %struct.VertRen** %v272, align 8, !dbg !19599
  %co73 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %90, i32 0, i32 0, !dbg !19600
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !19598
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19601
  %v175 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %91, i32 0, i32 0, !dbg !19602
  %92 = load %struct.VertRen*, %struct.VertRen** %v175, align 8, !dbg !19602
  %co76 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %92, i32 0, i32 0, !dbg !19603
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %co76, i64 0, i64 0, !dbg !19601
  %call78 = call float @normal_quad_v3(float* %arraydecay65, float* %arraydecay68, float* %arraydecay71, float* %arraydecay74, float* %arraydecay77), !dbg !19604
  store float %call78, float* %len, align 4, !dbg !19605
  br label %if.end92, !dbg !19606

if.else79:                                        ; preds = %if.end61
  %93 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19607
  %n80 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %93, i32 0, i32 4, !dbg !19608
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %n80, i64 0, i64 0, !dbg !19607
  %94 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19609
  %v382 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %94, i32 0, i32 2, !dbg !19610
  %95 = load %struct.VertRen*, %struct.VertRen** %v382, align 8, !dbg !19610
  %co83 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %95, i32 0, i32 0, !dbg !19611
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %co83, i64 0, i64 0, !dbg !19609
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19612
  %v285 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %96, i32 0, i32 1, !dbg !19613
  %97 = load %struct.VertRen*, %struct.VertRen** %v285, align 8, !dbg !19613
  %co86 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %97, i32 0, i32 0, !dbg !19614
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %co86, i64 0, i64 0, !dbg !19612
  %98 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19615
  %v188 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %98, i32 0, i32 0, !dbg !19616
  %99 = load %struct.VertRen*, %struct.VertRen** %v188, align 8, !dbg !19616
  %co89 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %99, i32 0, i32 0, !dbg !19617
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %co89, i64 0, i64 0, !dbg !19615
  %call91 = call float @normal_tri_v3(float* %arraydecay81, float* %arraydecay84, float* %arraydecay87, float* %arraydecay90), !dbg !19618
  store float %call91, float* %len, align 4, !dbg !19619
  br label %if.end92

if.end92:                                         ; preds = %if.else79, %if.then64
  %100 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !19620
  %101 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19621
  %mat93 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %101, i32 0, i32 5, !dbg !19622
  store %struct.Material* %100, %struct.Material** %mat93, align 8, !dbg !19623
  %102 = load i32, i32* %flag, align 4, !dbg !19624
  %conv94 = trunc i32 %102 to i8, !dbg !19624
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19625
  %flag95 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 7, !dbg !19626
  store i8 %conv94, i8* %flag95, align 1, !dbg !19627
  %104 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19628
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %104, i32 0, i32 8, !dbg !19629
  store i8 0, i8* %ec, align 2, !dbg !19630
  %105 = load float, float* %len, align 4, !dbg !19631
  %cmp96 = fcmp oeq float %105, 0.000000e+00, !dbg !19633
  br i1 %cmp96, label %if.then98, label %if.else100, !dbg !19634

if.then98:                                        ; preds = %if.end92
  %106 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19635
  %totvlak99 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %106, i32 0, i32 11, !dbg !19636
  %107 = load i32, i32* %totvlak99, align 4, !dbg !19637
  %dec = add nsw i32 %107, -1, !dbg !19637
  store i32 %dec, i32* %totvlak99, align 4, !dbg !19637
  br label %if.end136, !dbg !19635

if.else100:                                       ; preds = %if.end92
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !19638, metadata !DIExpression()), !dbg !19640
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !19641, metadata !DIExpression()), !dbg !19642
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf, metadata !19643, metadata !DIExpression()), !dbg !19644
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !19645, metadata !DIExpression()), !dbg !19646
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !19647, metadata !DIExpression()), !dbg !19648
  call void @llvm.dbg.declare(metadata i32* %index, metadata !19649, metadata !DIExpression()), !dbg !19650
  call void @llvm.dbg.declare(metadata i32* %mtfn, metadata !19651, metadata !DIExpression()), !dbg !19652
  store i32 0, i32* %mtfn, align 4, !dbg !19652
  call void @llvm.dbg.declare(metadata i32* %mcn, metadata !19653, metadata !DIExpression()), !dbg !19654
  store i32 0, i32* %mcn, align 4, !dbg !19654
  call void @llvm.dbg.declare(metadata i8** %name, metadata !19655, metadata !DIExpression()), !dbg !19656
  store i32 0, i32* %index, align 4, !dbg !19657
  br label %for.cond101, !dbg !19659

for.cond101:                                      ; preds = %for.inc133, %if.else100
  %108 = load i32, i32* %index, align 4, !dbg !19660
  %109 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19662
  %faceData102 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %109, i32 0, i32 2, !dbg !19663
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData102, i32 0, i32 2, !dbg !19664
  %110 = load i32, i32* %totlayer, align 4, !dbg !19664
  %cmp103 = icmp slt i32 %108, %110, !dbg !19665
  br i1 %cmp103, label %for.body105, label %for.end135, !dbg !19666

for.body105:                                      ; preds = %for.cond101
  %111 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !19667
  %faceData106 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %111, i32 0, i32 2, !dbg !19669
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData106, i32 0, i32 0, !dbg !19670
  %112 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !19670
  %113 = load i32, i32* %index, align 4, !dbg !19671
  %idxprom = sext i32 %113 to i64, !dbg !19667
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %112, i64 %idxprom, !dbg !19667
  store %struct.CustomDataLayer* %arrayidx, %struct.CustomDataLayer** %layer, align 8, !dbg !19672
  %114 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !19673
  %name107 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %114, i32 0, i32 8, !dbg !19674
  %arraydecay108 = getelementptr inbounds [64 x i8], [64 x i8]* %name107, i64 0, i64 0, !dbg !19673
  store i8* %arraydecay108, i8** %name, align 8, !dbg !19675
  %115 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !19676
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %115, i32 0, i32 0, !dbg !19678
  %116 = load i32, i32* %type, align 8, !dbg !19678
  %cmp109 = icmp eq i32 %116, 5, !dbg !19679
  br i1 %cmp109, label %land.lhs.true, label %if.else118, !dbg !19680

land.lhs.true:                                    ; preds = %for.body105
  %117 = load i32, i32* %mtfn, align 4, !dbg !19681
  %cmp111 = icmp slt i32 %117, 8, !dbg !19682
  br i1 %cmp111, label %if.then113, label %if.else118, !dbg !19683

if.then113:                                       ; preds = %land.lhs.true
  %118 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19684
  %119 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19686
  %120 = load i32, i32* %mtfn, align 4, !dbg !19687
  %inc114 = add nsw i32 %120, 1, !dbg !19687
  store i32 %inc114, i32* %mtfn, align 4, !dbg !19687
  %call115 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %118, %struct.VlakRen* %119, i32 %120, i8** %name, i32 1), !dbg !19688
  store %struct.MTFace* %call115, %struct.MTFace** %mtf, align 8, !dbg !19689
  %121 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !19690
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %121, i32 0, i32 9, !dbg !19691
  %122 = load i8*, i8** %data, align 8, !dbg !19691
  %123 = bitcast i8* %122 to %struct.MTFace*, !dbg !19692
  store %struct.MTFace* %123, %struct.MTFace** %mtface, align 8, !dbg !19693
  %124 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !19694
  %125 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !19695
  %126 = load i32, i32* %a, align 4, !dbg !19696
  %idxprom116 = sext i32 %126 to i64, !dbg !19695
  %arrayidx117 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %125, i64 %idxprom116, !dbg !19695
  %127 = bitcast %struct.MTFace* %124 to i8*, !dbg !19695
  %128 = bitcast %struct.MTFace* %arrayidx117 to i8*, !dbg !19695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 48, i1 false), !dbg !19695
  br label %if.end132, !dbg !19697

if.else118:                                       ; preds = %land.lhs.true, %for.body105
  %129 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !19698
  %type119 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %129, i32 0, i32 0, !dbg !19700
  %130 = load i32, i32* %type119, align 8, !dbg !19700
  %cmp120 = icmp eq i32 %130, 6, !dbg !19701
  br i1 %cmp120, label %land.lhs.true122, label %if.end131, !dbg !19702

land.lhs.true122:                                 ; preds = %if.else118
  %131 = load i32, i32* %mcn, align 4, !dbg !19703
  %cmp123 = icmp slt i32 %131, 8, !dbg !19704
  br i1 %cmp123, label %if.then125, label %if.end131, !dbg !19705

if.then125:                                       ; preds = %land.lhs.true122
  %132 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19706
  %133 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !19708
  %134 = load i32, i32* %mcn, align 4, !dbg !19709
  %inc126 = add nsw i32 %134, 1, !dbg !19709
  store i32 %inc126, i32* %mcn, align 4, !dbg !19709
  %call127 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %132, %struct.VlakRen* %133, i32 %134, i8** %name, i32 1), !dbg !19710
  store %struct.MCol* %call127, %struct.MCol** %mc, align 8, !dbg !19711
  %135 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !19712
  %data128 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %135, i32 0, i32 9, !dbg !19713
  %136 = load i8*, i8** %data128, align 8, !dbg !19713
  %137 = bitcast i8* %136 to %struct.MCol*, !dbg !19714
  store %struct.MCol* %137, %struct.MCol** %mcol, align 8, !dbg !19715
  %138 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !19716
  %139 = bitcast %struct.MCol* %138 to i8*, !dbg !19717
  %140 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !19718
  %141 = load i32, i32* %a, align 4, !dbg !19719
  %mul = mul nsw i32 %141, 4, !dbg !19720
  %idxprom129 = sext i32 %mul to i64, !dbg !19718
  %arrayidx130 = getelementptr inbounds %struct.MCol, %struct.MCol* %140, i64 %idxprom129, !dbg !19718
  %142 = bitcast %struct.MCol* %arrayidx130 to i8*, !dbg !19717
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %139, i8* align 1 %142, i64 16, i1 false), !dbg !19717
  br label %if.end131, !dbg !19721

if.end131:                                        ; preds = %if.then125, %land.lhs.true122, %if.else118
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then113
  br label %for.inc133, !dbg !19722

for.inc133:                                       ; preds = %if.end132
  %143 = load i32, i32* %index, align 4, !dbg !19723
  %inc134 = add nsw i32 %143, 1, !dbg !19723
  store i32 %inc134, i32* %index, align 4, !dbg !19723
  br label %for.cond101, !dbg !19724, !llvm.loop !19725

for.end135:                                       ; preds = %for.cond101
  br label %if.end136

if.end136:                                        ; preds = %for.end135, %if.then98
  br label %if.end137, !dbg !19727

if.end137:                                        ; preds = %if.end136, %for.body32
  br label %for.inc138, !dbg !19728

for.inc138:                                       ; preds = %if.end137
  %144 = load i32, i32* %a, align 4, !dbg !19729
  %inc139 = add nsw i32 %144, 1, !dbg !19729
  store i32 %inc139, i32* %a, align 4, !dbg !19729
  %145 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !19730
  %incdec.ptr140 = getelementptr inbounds %struct.MFace, %struct.MFace* %145, i32 1, !dbg !19730
  store %struct.MFace* %incdec.ptr140, %struct.MFace** %mface, align 8, !dbg !19730
  br label %for.cond29, !dbg !19731, !llvm.loop !19732

for.end141:                                       ; preds = %for.cond29
  br label %for.inc142, !dbg !19734

for.inc142:                                       ; preds = %for.end141
  %146 = load i16, i16* %mat_iter, align 2, !dbg !19735
  %inc143 = add i16 %146, 1, !dbg !19735
  store i16 %inc143, i16* %mat_iter, align 2, !dbg !19735
  br label %for.cond14, !dbg !19736, !llvm.loop !19737

for.end144:                                       ; preds = %lor.end
  %147 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !19739
  %148 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19740
  call void @calc_vertexnormals(%struct.Render* %147, %struct.ObjectRen* %148, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !19741
  br label %if.end145, !dbg !19742

if.end145:                                        ; preds = %for.end144, %for.end
  ret void, !dbg !19743
}

declare dso_local float* @BKE_curve_make_orco(%struct.Scene*, %struct.Object*, i32*) #4

declare dso_local float @area_tri_v3(float*, float*, float*) #4

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @dl_surf_to_renderdata(%struct.ObjectRen* %obr, %struct.DispList* %dl, %struct.Material** %matar, float* %orco, [4 x float]* %mat) #0 !dbg !19744 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dl.addr = alloca %struct.DispList*, align 8
  %matar.addr = alloca %struct.Material**, align 8
  %orco.addr = alloca float*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %vlr1 = alloca %struct.VlakRen*, align 8
  %vlr2 = alloca %struct.VlakRen*, align 8
  %vlr3 = alloca %struct.VlakRen*, align 8
  %data = alloca float*, align 8
  %n1 = alloca [3 x float], align 4
  %u = alloca i32, align 4
  %v = alloca i32, align 4
  %orcoret = alloca i32, align 4
  %p1 = alloca i32, align 4
  %p2 = alloca i32, align 4
  %p3 = alloca i32, align 4
  %p4 = alloca i32, align 4
  %a = alloca i32, align 4
  %sizeu = alloca i32, align 4
  %nsizeu = alloca i32, align 4
  %sizev = alloca i32, align 4
  %nsizev = alloca i32, align 4
  %startvert = alloca i32, align 4
  %startvlak = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !19747, metadata !DIExpression()), !dbg !19748
  store %struct.DispList* %dl, %struct.DispList** %dl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DispList** %dl.addr, metadata !19749, metadata !DIExpression()), !dbg !19750
  store %struct.Material** %matar, %struct.Material*** %matar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material*** %matar.addr, metadata !19751, metadata !DIExpression()), !dbg !19752
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !19753, metadata !DIExpression()), !dbg !19754
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !19755, metadata !DIExpression()), !dbg !19756
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !19757, metadata !DIExpression()), !dbg !19758
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !19759, metadata !DIExpression()), !dbg !19760
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !19761, metadata !DIExpression()), !dbg !19762
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !19763, metadata !DIExpression()), !dbg !19764
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !19765, metadata !DIExpression()), !dbg !19766
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !19767, metadata !DIExpression()), !dbg !19768
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr1, metadata !19769, metadata !DIExpression()), !dbg !19770
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr2, metadata !19771, metadata !DIExpression()), !dbg !19772
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr3, metadata !19773, metadata !DIExpression()), !dbg !19774
  call void @llvm.dbg.declare(metadata float** %data, metadata !19775, metadata !DIExpression()), !dbg !19776
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !19777, metadata !DIExpression()), !dbg !19778
  call void @llvm.dbg.declare(metadata i32* %u, metadata !19779, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.declare(metadata i32* %v, metadata !19781, metadata !DIExpression()), !dbg !19782
  call void @llvm.dbg.declare(metadata i32* %orcoret, metadata !19783, metadata !DIExpression()), !dbg !19784
  store i32 0, i32* %orcoret, align 4, !dbg !19784
  call void @llvm.dbg.declare(metadata i32* %p1, metadata !19785, metadata !DIExpression()), !dbg !19786
  call void @llvm.dbg.declare(metadata i32* %p2, metadata !19787, metadata !DIExpression()), !dbg !19788
  call void @llvm.dbg.declare(metadata i32* %p3, metadata !19789, metadata !DIExpression()), !dbg !19790
  call void @llvm.dbg.declare(metadata i32* %p4, metadata !19791, metadata !DIExpression()), !dbg !19792
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19793, metadata !DIExpression()), !dbg !19794
  call void @llvm.dbg.declare(metadata i32* %sizeu, metadata !19795, metadata !DIExpression()), !dbg !19796
  call void @llvm.dbg.declare(metadata i32* %nsizeu, metadata !19797, metadata !DIExpression()), !dbg !19798
  call void @llvm.dbg.declare(metadata i32* %sizev, metadata !19799, metadata !DIExpression()), !dbg !19800
  call void @llvm.dbg.declare(metadata i32* %nsizev, metadata !19801, metadata !DIExpression()), !dbg !19802
  call void @llvm.dbg.declare(metadata i32* %startvert, metadata !19803, metadata !DIExpression()), !dbg !19804
  call void @llvm.dbg.declare(metadata i32* %startvlak, metadata !19805, metadata !DIExpression()), !dbg !19806
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19807
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 10, !dbg !19808
  %1 = load i32, i32* %totvert, align 8, !dbg !19808
  store i32 %1, i32* %startvert, align 4, !dbg !19809
  %2 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19810
  %parts = getelementptr inbounds %struct.DispList, %struct.DispList* %2, i32 0, i32 4, !dbg !19811
  %3 = load i32, i32* %parts, align 4, !dbg !19811
  store i32 %3, i32* %sizeu, align 4, !dbg !19812
  store i32 %3, i32* %nsizeu, align 4, !dbg !19813
  %4 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19814
  %nr = getelementptr inbounds %struct.DispList, %struct.DispList* %4, i32 0, i32 5, !dbg !19815
  %5 = load i32, i32* %nr, align 8, !dbg !19815
  store i32 %5, i32* %sizev, align 4, !dbg !19816
  store i32 %5, i32* %nsizev, align 4, !dbg !19817
  %6 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19818
  %verts = getelementptr inbounds %struct.DispList, %struct.DispList* %6, i32 0, i32 8, !dbg !19819
  %7 = load float*, float** %verts, align 8, !dbg !19819
  store float* %7, float** %data, align 8, !dbg !19820
  store i32 0, i32* %u, align 4, !dbg !19821
  br label %for.cond, !dbg !19823

for.cond:                                         ; preds = %for.inc41, %entry
  %8 = load i32, i32* %u, align 4, !dbg !19824
  %9 = load i32, i32* %sizeu, align 4, !dbg !19826
  %cmp = icmp slt i32 %8, %9, !dbg !19827
  br i1 %cmp, label %for.body, label %for.end43, !dbg !19828

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19829
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19831
  %totvert1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %11, i32 0, i32 10, !dbg !19832
  %12 = load i32, i32* %totvert1, align 8, !dbg !19833
  %inc = add nsw i32 %12, 1, !dbg !19833
  store i32 %inc, i32* %totvert1, align 8, !dbg !19833
  %call = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %10, i32 %12), !dbg !19834
  store %struct.VertRen* %call, %struct.VertRen** %v1, align 8, !dbg !19835
  %13 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19836
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %13, i32 0, i32 0, !dbg !19837
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !19836
  %14 = load float*, float** %data, align 8, !dbg !19838
  call void @copy_v3_v3(float* %arraydecay, float* %14), !dbg !19839
  %15 = load float*, float** %data, align 8, !dbg !19840
  %add.ptr = getelementptr inbounds float, float* %15, i64 3, !dbg !19840
  store float* %add.ptr, float** %data, align 8, !dbg !19840
  %16 = load float*, float** %orco.addr, align 8, !dbg !19841
  %tobool = icmp ne float* %16, null, !dbg !19841
  br i1 %tobool, label %if.then, label %if.end, !dbg !19843

if.then:                                          ; preds = %for.body
  %17 = load float*, float** %orco.addr, align 8, !dbg !19844
  %18 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19846
  %orco2 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %18, i32 0, i32 2, !dbg !19847
  store float* %17, float** %orco2, align 8, !dbg !19848
  %19 = load float*, float** %orco.addr, align 8, !dbg !19849
  %add.ptr3 = getelementptr inbounds float, float* %19, i64 3, !dbg !19849
  store float* %add.ptr3, float** %orco.addr, align 8, !dbg !19849
  %20 = load i32, i32* %orcoret, align 4, !dbg !19850
  %inc4 = add nsw i32 %20, 1, !dbg !19850
  store i32 %inc4, i32* %orcoret, align 4, !dbg !19850
  br label %if.end, !dbg !19851

if.end:                                           ; preds = %if.then, %for.body
  %21 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !19852
  %22 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19853
  %co5 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %22, i32 0, i32 0, !dbg !19854
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !19853
  call void @mul_m4_v3([4 x float]* %21, float* %arraydecay6), !dbg !19855
  store i32 1, i32* %v, align 4, !dbg !19856
  br label %for.cond7, !dbg !19858

for.cond7:                                        ; preds = %for.inc, %if.end
  %23 = load i32, i32* %v, align 4, !dbg !19859
  %24 = load i32, i32* %sizev, align 4, !dbg !19861
  %cmp8 = icmp slt i32 %23, %24, !dbg !19862
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !19863

for.body9:                                        ; preds = %for.cond7
  %25 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19864
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19866
  %totvert10 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %26, i32 0, i32 10, !dbg !19867
  %27 = load i32, i32* %totvert10, align 8, !dbg !19868
  %inc11 = add nsw i32 %27, 1, !dbg !19868
  store i32 %inc11, i32* %totvert10, align 8, !dbg !19868
  %call12 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %25, i32 %27), !dbg !19869
  store %struct.VertRen* %call12, %struct.VertRen** %ver, align 8, !dbg !19870
  %28 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19871
  %co13 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %28, i32 0, i32 0, !dbg !19872
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 0, !dbg !19871
  %29 = load float*, float** %data, align 8, !dbg !19873
  call void @copy_v3_v3(float* %arraydecay14, float* %29), !dbg !19874
  %30 = load float*, float** %data, align 8, !dbg !19875
  %add.ptr15 = getelementptr inbounds float, float* %30, i64 3, !dbg !19875
  store float* %add.ptr15, float** %data, align 8, !dbg !19875
  %31 = load float*, float** %orco.addr, align 8, !dbg !19876
  %tobool16 = icmp ne float* %31, null, !dbg !19876
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !19878

if.then17:                                        ; preds = %for.body9
  %32 = load float*, float** %orco.addr, align 8, !dbg !19879
  %33 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19881
  %orco18 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %33, i32 0, i32 2, !dbg !19882
  store float* %32, float** %orco18, align 8, !dbg !19883
  %34 = load float*, float** %orco.addr, align 8, !dbg !19884
  %add.ptr19 = getelementptr inbounds float, float* %34, i64 3, !dbg !19884
  store float* %add.ptr19, float** %orco.addr, align 8, !dbg !19884
  %35 = load i32, i32* %orcoret, align 4, !dbg !19885
  %inc20 = add nsw i32 %35, 1, !dbg !19885
  store i32 %inc20, i32* %orcoret, align 4, !dbg !19885
  br label %if.end21, !dbg !19886

if.end21:                                         ; preds = %if.then17, %for.body9
  %36 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !19887
  %37 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19888
  %co22 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %37, i32 0, i32 0, !dbg !19889
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !19888
  call void @mul_m4_v3([4 x float]* %36, float* %arraydecay23), !dbg !19890
  br label %for.inc, !dbg !19891

for.inc:                                          ; preds = %if.end21
  %38 = load i32, i32* %v, align 4, !dbg !19892
  %inc24 = add nsw i32 %38, 1, !dbg !19892
  store i32 %inc24, i32* %v, align 4, !dbg !19892
  br label %for.cond7, !dbg !19893, !llvm.loop !19894

for.end:                                          ; preds = %for.cond7
  %39 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19896
  %flag = getelementptr inbounds %struct.DispList, %struct.DispList* %39, i32 0, i32 3, !dbg !19898
  %40 = load i16, i16* %flag, align 2, !dbg !19898
  %conv = sext i16 %40 to i32, !dbg !19896
  %and = and i32 %conv, 1, !dbg !19899
  %tobool25 = icmp ne i32 %and, 0, !dbg !19899
  br i1 %tobool25, label %if.then26, label %if.end40, !dbg !19900

if.then26:                                        ; preds = %for.end
  %41 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19901
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19903
  %totvert27 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %42, i32 0, i32 10, !dbg !19904
  %43 = load i32, i32* %totvert27, align 8, !dbg !19905
  %inc28 = add nsw i32 %43, 1, !dbg !19905
  store i32 %inc28, i32* %totvert27, align 8, !dbg !19905
  %call29 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %41, i32 %43), !dbg !19906
  store %struct.VertRen* %call29, %struct.VertRen** %ver, align 8, !dbg !19907
  %44 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19908
  %co30 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %44, i32 0, i32 0, !dbg !19909
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %co30, i64 0, i64 0, !dbg !19908
  %45 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19910
  %co32 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %45, i32 0, i32 0, !dbg !19911
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 0, !dbg !19910
  call void @copy_v3_v3(float* %arraydecay31, float* %arraydecay33), !dbg !19912
  %46 = load float*, float** %orco.addr, align 8, !dbg !19913
  %tobool34 = icmp ne float* %46, null, !dbg !19913
  br i1 %tobool34, label %if.then35, label %if.end39, !dbg !19915

if.then35:                                        ; preds = %if.then26
  %47 = load float*, float** %orco.addr, align 8, !dbg !19916
  %48 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19918
  %orco36 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %48, i32 0, i32 2, !dbg !19919
  store float* %47, float** %orco36, align 8, !dbg !19920
  %49 = load float*, float** %orco.addr, align 8, !dbg !19921
  %add.ptr37 = getelementptr inbounds float, float* %49, i64 3, !dbg !19921
  store float* %add.ptr37, float** %orco.addr, align 8, !dbg !19921
  %50 = load i32, i32* %orcoret, align 4, !dbg !19922
  %inc38 = add nsw i32 %50, 1, !dbg !19922
  store i32 %inc38, i32* %orcoret, align 4, !dbg !19922
  br label %if.end39, !dbg !19923

if.end39:                                         ; preds = %if.then35, %if.then26
  br label %if.end40, !dbg !19924

if.end40:                                         ; preds = %if.end39, %for.end
  br label %for.inc41, !dbg !19925

for.inc41:                                        ; preds = %if.end40
  %51 = load i32, i32* %u, align 4, !dbg !19926
  %inc42 = add nsw i32 %51, 1, !dbg !19926
  store i32 %inc42, i32* %u, align 4, !dbg !19926
  br label %for.cond, !dbg !19927, !llvm.loop !19928

for.end43:                                        ; preds = %for.cond
  %52 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19930
  %flag44 = getelementptr inbounds %struct.DispList, %struct.DispList* %52, i32 0, i32 3, !dbg !19932
  %53 = load i16, i16* %flag44, align 2, !dbg !19932
  %conv45 = sext i16 %53 to i32, !dbg !19930
  %and46 = and i32 %conv45, 1, !dbg !19933
  %tobool47 = icmp ne i32 %and46, 0, !dbg !19933
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !19934

if.then48:                                        ; preds = %for.end43
  %54 = load i32, i32* %nsizev, align 4, !dbg !19935
  %inc49 = add nsw i32 %54, 1, !dbg !19935
  store i32 %inc49, i32* %nsizev, align 4, !dbg !19935
  br label %if.end50, !dbg !19936

if.end50:                                         ; preds = %if.then48, %for.end43
  %55 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19937
  %flag51 = getelementptr inbounds %struct.DispList, %struct.DispList* %55, i32 0, i32 3, !dbg !19939
  %56 = load i16, i16* %flag51, align 2, !dbg !19939
  %conv52 = sext i16 %56 to i32, !dbg !19937
  %and53 = and i32 %conv52, 2, !dbg !19940
  %tobool54 = icmp ne i32 %and53, 0, !dbg !19940
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !19941

if.then55:                                        ; preds = %if.end50
  %57 = load i32, i32* %nsizeu, align 4, !dbg !19942
  %inc56 = add nsw i32 %57, 1, !dbg !19942
  store i32 %inc56, i32* %nsizeu, align 4, !dbg !19942
  br label %if.end57, !dbg !19943

if.end57:                                         ; preds = %if.then55, %if.end50
  %58 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !19944
  %flag58 = getelementptr inbounds %struct.DispList, %struct.DispList* %58, i32 0, i32 3, !dbg !19946
  %59 = load i16, i16* %flag58, align 2, !dbg !19946
  %conv59 = sext i16 %59 to i32, !dbg !19944
  %and60 = and i32 %conv59, 2, !dbg !19947
  %tobool61 = icmp ne i32 %and60, 0, !dbg !19947
  br i1 %tobool61, label %if.then62, label %if.end84, !dbg !19948

if.then62:                                        ; preds = %if.end57
  store i32 0, i32* %v, align 4, !dbg !19949
  br label %for.cond63, !dbg !19952

for.cond63:                                       ; preds = %for.inc81, %if.then62
  %60 = load i32, i32* %v, align 4, !dbg !19953
  %61 = load i32, i32* %nsizev, align 4, !dbg !19955
  %cmp64 = icmp slt i32 %60, %61, !dbg !19956
  br i1 %cmp64, label %for.body66, label %for.end83, !dbg !19957

for.body66:                                       ; preds = %for.cond63
  %62 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19958
  %63 = load i32, i32* %startvert, align 4, !dbg !19960
  %64 = load i32, i32* %v, align 4, !dbg !19961
  %add = add nsw i32 %63, %64, !dbg !19962
  %call67 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %62, i32 %add), !dbg !19963
  store %struct.VertRen* %call67, %struct.VertRen** %v1, align 8, !dbg !19964
  %65 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19965
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19966
  %totvert68 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 10, !dbg !19967
  %67 = load i32, i32* %totvert68, align 8, !dbg !19968
  %inc69 = add nsw i32 %67, 1, !dbg !19968
  store i32 %inc69, i32* %totvert68, align 8, !dbg !19968
  %call70 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %65, i32 %67), !dbg !19969
  store %struct.VertRen* %call70, %struct.VertRen** %ver, align 8, !dbg !19970
  %68 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19971
  %co71 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %68, i32 0, i32 0, !dbg !19972
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co71, i64 0, i64 0, !dbg !19971
  %69 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !19973
  %co73 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %69, i32 0, i32 0, !dbg !19974
  %arraydecay74 = getelementptr inbounds [3 x float], [3 x float]* %co73, i64 0, i64 0, !dbg !19973
  call void @copy_v3_v3(float* %arraydecay72, float* %arraydecay74), !dbg !19975
  %70 = load float*, float** %orco.addr, align 8, !dbg !19976
  %tobool75 = icmp ne float* %70, null, !dbg !19976
  br i1 %tobool75, label %if.then76, label %if.end80, !dbg !19978

if.then76:                                        ; preds = %for.body66
  %71 = load float*, float** %orco.addr, align 8, !dbg !19979
  %72 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !19981
  %orco77 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %72, i32 0, i32 2, !dbg !19982
  store float* %71, float** %orco77, align 8, !dbg !19983
  %73 = load float*, float** %orco.addr, align 8, !dbg !19984
  %add.ptr78 = getelementptr inbounds float, float* %73, i64 3, !dbg !19984
  store float* %add.ptr78, float** %orco.addr, align 8, !dbg !19984
  %74 = load i32, i32* %orcoret, align 4, !dbg !19985
  %inc79 = add nsw i32 %74, 1, !dbg !19985
  store i32 %inc79, i32* %orcoret, align 4, !dbg !19985
  br label %if.end80, !dbg !19986

if.end80:                                         ; preds = %if.then76, %for.body66
  br label %for.inc81, !dbg !19987

for.inc81:                                        ; preds = %if.end80
  %75 = load i32, i32* %v, align 4, !dbg !19988
  %inc82 = add nsw i32 %75, 1, !dbg !19988
  store i32 %inc82, i32* %v, align 4, !dbg !19988
  br label %for.cond63, !dbg !19989, !llvm.loop !19990

for.end83:                                        ; preds = %for.cond63
  br label %if.end84, !dbg !19992

if.end84:                                         ; preds = %for.end83, %if.end57
  %76 = load i32, i32* %nsizeu, align 4, !dbg !19993
  store i32 %76, i32* %sizeu, align 4, !dbg !19994
  %77 = load i32, i32* %nsizev, align 4, !dbg !19995
  store i32 %77, i32* %sizev, align 4, !dbg !19996
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !19997
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %78, i32 0, i32 11, !dbg !19998
  %79 = load i32, i32* %totvlak, align 4, !dbg !19998
  store i32 %79, i32* %startvlak, align 4, !dbg !19999
  store i32 0, i32* %u, align 4, !dbg !20000
  br label %for.cond85, !dbg !20002

for.cond85:                                       ; preds = %for.inc147, %if.end84
  %80 = load i32, i32* %u, align 4, !dbg !20003
  %81 = load i32, i32* %sizeu, align 4, !dbg !20005
  %sub = sub nsw i32 %81, 1, !dbg !20006
  %cmp86 = icmp slt i32 %80, %sub, !dbg !20007
  br i1 %cmp86, label %for.body88, label %for.end149, !dbg !20008

for.body88:                                       ; preds = %for.cond85
  %82 = load i32, i32* %startvert, align 4, !dbg !20009
  %83 = load i32, i32* %u, align 4, !dbg !20011
  %84 = load i32, i32* %sizev, align 4, !dbg !20012
  %mul = mul nsw i32 %83, %84, !dbg !20013
  %add89 = add nsw i32 %82, %mul, !dbg !20014
  store i32 %add89, i32* %p1, align 4, !dbg !20015
  %85 = load i32, i32* %p1, align 4, !dbg !20016
  %add90 = add nsw i32 %85, 1, !dbg !20017
  store i32 %add90, i32* %p2, align 4, !dbg !20018
  %86 = load i32, i32* %p2, align 4, !dbg !20019
  %87 = load i32, i32* %sizev, align 4, !dbg !20020
  %add91 = add nsw i32 %86, %87, !dbg !20021
  store i32 %add91, i32* %p3, align 4, !dbg !20022
  %88 = load i32, i32* %p3, align 4, !dbg !20023
  %sub92 = sub nsw i32 %88, 1, !dbg !20024
  store i32 %sub92, i32* %p4, align 4, !dbg !20025
  store i32 0, i32* %v, align 4, !dbg !20026
  br label %for.cond93, !dbg !20028

for.cond93:                                       ; preds = %for.inc144, %for.body88
  %89 = load i32, i32* %v, align 4, !dbg !20029
  %90 = load i32, i32* %sizev, align 4, !dbg !20031
  %sub94 = sub nsw i32 %90, 1, !dbg !20032
  %cmp95 = icmp slt i32 %89, %sub94, !dbg !20033
  br i1 %cmp95, label %for.body97, label %for.end146, !dbg !20034

for.body97:                                       ; preds = %for.cond93
  %91 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20035
  %92 = load i32, i32* %p1, align 4, !dbg !20037
  %call98 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %91, i32 %92), !dbg !20038
  store %struct.VertRen* %call98, %struct.VertRen** %v1, align 8, !dbg !20039
  %93 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20040
  %94 = load i32, i32* %p2, align 4, !dbg !20041
  %call99 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %93, i32 %94), !dbg !20042
  store %struct.VertRen* %call99, %struct.VertRen** %v2, align 8, !dbg !20043
  %95 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20044
  %96 = load i32, i32* %p3, align 4, !dbg !20045
  %call100 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %95, i32 %96), !dbg !20046
  store %struct.VertRen* %call100, %struct.VertRen** %v3, align 8, !dbg !20047
  %97 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20048
  %98 = load i32, i32* %p4, align 4, !dbg !20049
  %call101 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %97, i32 %98), !dbg !20050
  store %struct.VertRen* %call101, %struct.VertRen** %v4, align 8, !dbg !20051
  %99 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20052
  %100 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20053
  %totvlak102 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %100, i32 0, i32 11, !dbg !20054
  %101 = load i32, i32* %totvlak102, align 4, !dbg !20055
  %inc103 = add nsw i32 %101, 1, !dbg !20055
  store i32 %inc103, i32* %totvlak102, align 4, !dbg !20055
  %call104 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %99, i32 %101), !dbg !20056
  store %struct.VlakRen* %call104, %struct.VlakRen** %vlr, align 8, !dbg !20057
  %102 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !20058
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20059
  %v1105 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 0, !dbg !20060
  store %struct.VertRen* %102, %struct.VertRen** %v1105, align 8, !dbg !20061
  %104 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !20062
  %105 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20063
  %v2106 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %105, i32 0, i32 1, !dbg !20064
  store %struct.VertRen* %104, %struct.VertRen** %v2106, align 8, !dbg !20065
  %106 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !20066
  %107 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20067
  %v3107 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %107, i32 0, i32 2, !dbg !20068
  store %struct.VertRen* %106, %struct.VertRen** %v3107, align 8, !dbg !20069
  %108 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !20070
  %109 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20071
  %v4108 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %109, i32 0, i32 3, !dbg !20072
  store %struct.VertRen* %108, %struct.VertRen** %v4108, align 8, !dbg !20073
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20074
  %110 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20075
  %v4110 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %110, i32 0, i32 3, !dbg !20076
  %111 = load %struct.VertRen*, %struct.VertRen** %v4110, align 8, !dbg !20076
  %co111 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %111, i32 0, i32 0, !dbg !20077
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %co111, i64 0, i64 0, !dbg !20075
  %112 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20078
  %v3113 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %112, i32 0, i32 2, !dbg !20079
  %113 = load %struct.VertRen*, %struct.VertRen** %v3113, align 8, !dbg !20079
  %co114 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %113, i32 0, i32 0, !dbg !20080
  %arraydecay115 = getelementptr inbounds [3 x float], [3 x float]* %co114, i64 0, i64 0, !dbg !20078
  %114 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20081
  %v2116 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %114, i32 0, i32 1, !dbg !20082
  %115 = load %struct.VertRen*, %struct.VertRen** %v2116, align 8, !dbg !20082
  %co117 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %115, i32 0, i32 0, !dbg !20083
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %co117, i64 0, i64 0, !dbg !20081
  %116 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20084
  %v1119 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %116, i32 0, i32 0, !dbg !20085
  %117 = load %struct.VertRen*, %struct.VertRen** %v1119, align 8, !dbg !20085
  %co120 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %117, i32 0, i32 0, !dbg !20086
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %co120, i64 0, i64 0, !dbg !20084
  %call122 = call float @normal_quad_v3(float* %arraydecay109, float* %arraydecay112, float* %arraydecay115, float* %arraydecay118, float* %arraydecay121), !dbg !20087
  %118 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20088
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %118, i32 0, i32 4, !dbg !20089
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !20088
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20090
  call void @copy_v3_v3(float* %arraydecay123, float* %arraydecay124), !dbg !20091
  %119 = load %struct.Material**, %struct.Material*** %matar.addr, align 8, !dbg !20092
  %120 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20093
  %col = getelementptr inbounds %struct.DispList, %struct.DispList* %120, i32 0, i32 6, !dbg !20094
  %121 = load i16, i16* %col, align 4, !dbg !20094
  %idxprom = sext i16 %121 to i64, !dbg !20092
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %119, i64 %idxprom, !dbg !20092
  %122 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !20092
  %123 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20095
  %mat125 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %123, i32 0, i32 5, !dbg !20096
  store %struct.Material* %122, %struct.Material** %mat125, align 8, !dbg !20097
  %124 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20098
  %ec = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %124, i32 0, i32 8, !dbg !20099
  store i8 3, i8* %ec, align 2, !dbg !20100
  %125 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20101
  %rt = getelementptr inbounds %struct.DispList, %struct.DispList* %125, i32 0, i32 7, !dbg !20102
  %126 = load i16, i16* %rt, align 2, !dbg !20102
  %conv126 = trunc i16 %126 to i8, !dbg !20101
  %127 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20103
  %flag127 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %127, i32 0, i32 7, !dbg !20104
  store i8 %conv126, i8* %flag127, align 1, !dbg !20105
  %128 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !20106
  %n128 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %128, i32 0, i32 1, !dbg !20107
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %n128, i64 0, i64 0, !dbg !20106
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20108
  call void @add_v3_v3(float* %arraydecay129, float* %arraydecay130), !dbg !20109
  %129 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !20110
  %n131 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %129, i32 0, i32 1, !dbg !20111
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %n131, i64 0, i64 0, !dbg !20110
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20112
  call void @add_v3_v3(float* %arraydecay132, float* %arraydecay133), !dbg !20113
  %130 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !20114
  %n134 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %130, i32 0, i32 1, !dbg !20115
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %n134, i64 0, i64 0, !dbg !20114
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20116
  call void @add_v3_v3(float* %arraydecay135, float* %arraydecay136), !dbg !20117
  %131 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !20118
  %n137 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %131, i32 0, i32 1, !dbg !20119
  %arraydecay138 = getelementptr inbounds [3 x float], [3 x float]* %n137, i64 0, i64 0, !dbg !20118
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20120
  call void @add_v3_v3(float* %arraydecay138, float* %arraydecay139), !dbg !20121
  %132 = load i32, i32* %p1, align 4, !dbg !20122
  %inc140 = add nsw i32 %132, 1, !dbg !20122
  store i32 %inc140, i32* %p1, align 4, !dbg !20122
  %133 = load i32, i32* %p2, align 4, !dbg !20123
  %inc141 = add nsw i32 %133, 1, !dbg !20123
  store i32 %inc141, i32* %p2, align 4, !dbg !20123
  %134 = load i32, i32* %p3, align 4, !dbg !20124
  %inc142 = add nsw i32 %134, 1, !dbg !20124
  store i32 %inc142, i32* %p3, align 4, !dbg !20124
  %135 = load i32, i32* %p4, align 4, !dbg !20125
  %inc143 = add nsw i32 %135, 1, !dbg !20125
  store i32 %inc143, i32* %p4, align 4, !dbg !20125
  br label %for.inc144, !dbg !20126

for.inc144:                                       ; preds = %for.body97
  %136 = load i32, i32* %v, align 4, !dbg !20127
  %inc145 = add nsw i32 %136, 1, !dbg !20127
  store i32 %inc145, i32* %v, align 4, !dbg !20127
  br label %for.cond93, !dbg !20128, !llvm.loop !20129

for.end146:                                       ; preds = %for.cond93
  br label %for.inc147, !dbg !20131

for.inc147:                                       ; preds = %for.end146
  %137 = load i32, i32* %u, align 4, !dbg !20132
  %inc148 = add nsw i32 %137, 1, !dbg !20132
  store i32 %inc148, i32* %u, align 4, !dbg !20132
  br label %for.cond85, !dbg !20133, !llvm.loop !20134

for.end149:                                       ; preds = %for.cond85
  %138 = load i32, i32* %sizeu, align 4, !dbg !20136
  %dec = add nsw i32 %138, -1, !dbg !20136
  store i32 %dec, i32* %sizeu, align 4, !dbg !20136
  %139 = load i32, i32* %sizev, align 4, !dbg !20137
  %dec150 = add nsw i32 %139, -1, !dbg !20137
  store i32 %dec150, i32* %sizev, align 4, !dbg !20137
  %140 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20138
  %flag151 = getelementptr inbounds %struct.DispList, %struct.DispList* %140, i32 0, i32 3, !dbg !20140
  %141 = load i16, i16* %flag151, align 2, !dbg !20140
  %conv152 = sext i16 %141 to i32, !dbg !20138
  %and153 = and i32 %conv152, 2, !dbg !20141
  %tobool154 = icmp ne i32 %and153, 0, !dbg !20141
  br i1 %tobool154, label %if.then155, label %if.end192, !dbg !20142

if.then155:                                       ; preds = %for.end149
  store i32 0, i32* %v, align 4, !dbg !20143
  br label %for.cond156, !dbg !20146

for.cond156:                                      ; preds = %for.inc189, %if.then155
  %142 = load i32, i32* %v, align 4, !dbg !20147
  %143 = load i32, i32* %sizev, align 4, !dbg !20149
  %cmp157 = icmp slt i32 %142, %143, !dbg !20150
  br i1 %cmp157, label %for.body159, label %for.end191, !dbg !20151

for.body159:                                      ; preds = %for.cond156
  %144 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20152
  %145 = load i32, i32* %startvlak, align 4, !dbg !20154
  %146 = load i32, i32* %sizeu, align 4, !dbg !20154
  %sub160 = sub nsw i32 %146, 1, !dbg !20154
  %147 = load i32, i32* %sizev, align 4, !dbg !20154
  %mul161 = mul nsw i32 %sub160, %147, !dbg !20154
  %add162 = add nsw i32 %145, %mul161, !dbg !20154
  %148 = load i32, i32* %v, align 4, !dbg !20154
  %add163 = add nsw i32 %add162, %148, !dbg !20154
  %call164 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %144, i32 %add163), !dbg !20155
  store %struct.VlakRen* %call164, %struct.VlakRen** %vlr, align 8, !dbg !20156
  %149 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20157
  %150 = load i32, i32* %startvlak, align 4, !dbg !20158
  %151 = load i32, i32* %sizev, align 4, !dbg !20158
  %mul165 = mul nsw i32 0, %151, !dbg !20158
  %add166 = add nsw i32 %150, %mul165, !dbg !20158
  %152 = load i32, i32* %v, align 4, !dbg !20158
  %add167 = add nsw i32 %add166, %152, !dbg !20158
  %call168 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %149, i32 %add167), !dbg !20159
  store %struct.VlakRen* %call168, %struct.VlakRen** %vlr1, align 8, !dbg !20160
  %153 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20161
  %v1169 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %153, i32 0, i32 0, !dbg !20162
  %154 = load %struct.VertRen*, %struct.VertRen** %v1169, align 8, !dbg !20162
  %n170 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %154, i32 0, i32 1, !dbg !20163
  %arraydecay171 = getelementptr inbounds [3 x float], [3 x float]* %n170, i64 0, i64 0, !dbg !20161
  %155 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20164
  %n172 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %155, i32 0, i32 4, !dbg !20165
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %n172, i64 0, i64 0, !dbg !20164
  call void @add_v3_v3(float* %arraydecay171, float* %arraydecay173), !dbg !20166
  %156 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20167
  %v2174 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %156, i32 0, i32 1, !dbg !20168
  %157 = load %struct.VertRen*, %struct.VertRen** %v2174, align 8, !dbg !20168
  %n175 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %157, i32 0, i32 1, !dbg !20169
  %arraydecay176 = getelementptr inbounds [3 x float], [3 x float]* %n175, i64 0, i64 0, !dbg !20167
  %158 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20170
  %n177 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %158, i32 0, i32 4, !dbg !20171
  %arraydecay178 = getelementptr inbounds [3 x float], [3 x float]* %n177, i64 0, i64 0, !dbg !20170
  call void @add_v3_v3(float* %arraydecay176, float* %arraydecay178), !dbg !20172
  %159 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20173
  %v3179 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %159, i32 0, i32 2, !dbg !20174
  %160 = load %struct.VertRen*, %struct.VertRen** %v3179, align 8, !dbg !20174
  %n180 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %160, i32 0, i32 1, !dbg !20175
  %arraydecay181 = getelementptr inbounds [3 x float], [3 x float]* %n180, i64 0, i64 0, !dbg !20173
  %161 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20176
  %n182 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %161, i32 0, i32 4, !dbg !20177
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %n182, i64 0, i64 0, !dbg !20176
  call void @add_v3_v3(float* %arraydecay181, float* %arraydecay183), !dbg !20178
  %162 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20179
  %v4184 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %162, i32 0, i32 3, !dbg !20180
  %163 = load %struct.VertRen*, %struct.VertRen** %v4184, align 8, !dbg !20180
  %n185 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %163, i32 0, i32 1, !dbg !20181
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %n185, i64 0, i64 0, !dbg !20179
  %164 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20182
  %n187 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %164, i32 0, i32 4, !dbg !20183
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %n187, i64 0, i64 0, !dbg !20182
  call void @add_v3_v3(float* %arraydecay186, float* %arraydecay188), !dbg !20184
  br label %for.inc189, !dbg !20185

for.inc189:                                       ; preds = %for.body159
  %165 = load i32, i32* %v, align 4, !dbg !20186
  %inc190 = add nsw i32 %165, 1, !dbg !20186
  store i32 %inc190, i32* %v, align 4, !dbg !20186
  br label %for.cond156, !dbg !20187, !llvm.loop !20188

for.end191:                                       ; preds = %for.cond156
  br label %if.end192, !dbg !20190

if.end192:                                        ; preds = %for.end191, %for.end149
  %166 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20191
  %flag193 = getelementptr inbounds %struct.DispList, %struct.DispList* %166, i32 0, i32 3, !dbg !20193
  %167 = load i16, i16* %flag193, align 2, !dbg !20193
  %conv194 = sext i16 %167 to i32, !dbg !20191
  %and195 = and i32 %conv194, 1, !dbg !20194
  %tobool196 = icmp ne i32 %and195, 0, !dbg !20194
  br i1 %tobool196, label %if.then197, label %if.end234, !dbg !20195

if.then197:                                       ; preds = %if.end192
  store i32 0, i32* %u, align 4, !dbg !20196
  br label %for.cond198, !dbg !20199

for.cond198:                                      ; preds = %for.inc231, %if.then197
  %168 = load i32, i32* %u, align 4, !dbg !20200
  %169 = load i32, i32* %sizeu, align 4, !dbg !20202
  %cmp199 = icmp slt i32 %168, %169, !dbg !20203
  br i1 %cmp199, label %for.body201, label %for.end233, !dbg !20204

for.body201:                                      ; preds = %for.cond198
  %170 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20205
  %171 = load i32, i32* %startvlak, align 4, !dbg !20207
  %172 = load i32, i32* %u, align 4, !dbg !20207
  %173 = load i32, i32* %sizev, align 4, !dbg !20207
  %mul202 = mul nsw i32 %172, %173, !dbg !20207
  %add203 = add nsw i32 %171, %mul202, !dbg !20207
  %add204 = add nsw i32 %add203, 0, !dbg !20207
  %call205 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %170, i32 %add204), !dbg !20208
  store %struct.VlakRen* %call205, %struct.VlakRen** %vlr, align 8, !dbg !20209
  %174 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20210
  %175 = load i32, i32* %startvlak, align 4, !dbg !20211
  %176 = load i32, i32* %u, align 4, !dbg !20211
  %177 = load i32, i32* %sizev, align 4, !dbg !20211
  %mul206 = mul nsw i32 %176, %177, !dbg !20211
  %add207 = add nsw i32 %175, %mul206, !dbg !20211
  %178 = load i32, i32* %sizev, align 4, !dbg !20211
  %sub208 = sub nsw i32 %178, 1, !dbg !20211
  %add209 = add nsw i32 %add207, %sub208, !dbg !20211
  %call210 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %174, i32 %add209), !dbg !20212
  store %struct.VlakRen* %call210, %struct.VlakRen** %vlr1, align 8, !dbg !20213
  %179 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20214
  %v2211 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %179, i32 0, i32 1, !dbg !20215
  %180 = load %struct.VertRen*, %struct.VertRen** %v2211, align 8, !dbg !20215
  %n212 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %180, i32 0, i32 1, !dbg !20216
  %arraydecay213 = getelementptr inbounds [3 x float], [3 x float]* %n212, i64 0, i64 0, !dbg !20214
  %181 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20217
  %n214 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %181, i32 0, i32 4, !dbg !20218
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %n214, i64 0, i64 0, !dbg !20217
  call void @add_v3_v3(float* %arraydecay213, float* %arraydecay215), !dbg !20219
  %182 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20220
  %v3216 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %182, i32 0, i32 2, !dbg !20221
  %183 = load %struct.VertRen*, %struct.VertRen** %v3216, align 8, !dbg !20221
  %n217 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %183, i32 0, i32 1, !dbg !20222
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %n217, i64 0, i64 0, !dbg !20220
  %184 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20223
  %n219 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %184, i32 0, i32 4, !dbg !20224
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %n219, i64 0, i64 0, !dbg !20223
  call void @add_v3_v3(float* %arraydecay218, float* %arraydecay220), !dbg !20225
  %185 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20226
  %v1221 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %185, i32 0, i32 0, !dbg !20227
  %186 = load %struct.VertRen*, %struct.VertRen** %v1221, align 8, !dbg !20227
  %n222 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %186, i32 0, i32 1, !dbg !20228
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %n222, i64 0, i64 0, !dbg !20226
  %187 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20229
  %n224 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %187, i32 0, i32 4, !dbg !20230
  %arraydecay225 = getelementptr inbounds [3 x float], [3 x float]* %n224, i64 0, i64 0, !dbg !20229
  call void @add_v3_v3(float* %arraydecay223, float* %arraydecay225), !dbg !20231
  %188 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20232
  %v4226 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %188, i32 0, i32 3, !dbg !20233
  %189 = load %struct.VertRen*, %struct.VertRen** %v4226, align 8, !dbg !20233
  %n227 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %189, i32 0, i32 1, !dbg !20234
  %arraydecay228 = getelementptr inbounds [3 x float], [3 x float]* %n227, i64 0, i64 0, !dbg !20232
  %190 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20235
  %n229 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %190, i32 0, i32 4, !dbg !20236
  %arraydecay230 = getelementptr inbounds [3 x float], [3 x float]* %n229, i64 0, i64 0, !dbg !20235
  call void @add_v3_v3(float* %arraydecay228, float* %arraydecay230), !dbg !20237
  br label %for.inc231, !dbg !20238

for.inc231:                                       ; preds = %for.body201
  %191 = load i32, i32* %u, align 4, !dbg !20239
  %inc232 = add nsw i32 %191, 1, !dbg !20239
  store i32 %inc232, i32* %u, align 4, !dbg !20239
  br label %for.cond198, !dbg !20240, !llvm.loop !20241

for.end233:                                       ; preds = %for.cond198
  br label %if.end234, !dbg !20243

if.end234:                                        ; preds = %for.end233, %if.end192
  %192 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20244
  %flag235 = getelementptr inbounds %struct.DispList, %struct.DispList* %192, i32 0, i32 3, !dbg !20246
  %193 = load i16, i16* %flag235, align 2, !dbg !20246
  %conv236 = sext i16 %193 to i32, !dbg !20244
  %and237 = and i32 %conv236, 2, !dbg !20247
  %tobool238 = icmp ne i32 %and237, 0, !dbg !20247
  br i1 %tobool238, label %land.lhs.true, label %if.end291, !dbg !20248

land.lhs.true:                                    ; preds = %if.end234
  %194 = load %struct.DispList*, %struct.DispList** %dl.addr, align 8, !dbg !20249
  %flag239 = getelementptr inbounds %struct.DispList, %struct.DispList* %194, i32 0, i32 3, !dbg !20250
  %195 = load i16, i16* %flag239, align 2, !dbg !20250
  %conv240 = sext i16 %195 to i32, !dbg !20249
  %and241 = and i32 %conv240, 1, !dbg !20251
  %tobool242 = icmp ne i32 %and241, 0, !dbg !20251
  br i1 %tobool242, label %if.then243, label %if.end291, !dbg !20252

if.then243:                                       ; preds = %land.lhs.true
  %196 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20253
  %197 = load i32, i32* %startvlak, align 4, !dbg !20255
  %198 = load i32, i32* %sizeu, align 4, !dbg !20255
  %sub244 = sub nsw i32 %198, 1, !dbg !20255
  %199 = load i32, i32* %sizev, align 4, !dbg !20255
  %mul245 = mul nsw i32 %sub244, %199, !dbg !20255
  %add246 = add nsw i32 %197, %mul245, !dbg !20255
  %200 = load i32, i32* %sizev, align 4, !dbg !20255
  %sub247 = sub nsw i32 %200, 1, !dbg !20255
  %add248 = add nsw i32 %add246, %sub247, !dbg !20255
  %call249 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %196, i32 %add248), !dbg !20256
  store %struct.VlakRen* %call249, %struct.VlakRen** %vlr, align 8, !dbg !20257
  %201 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20258
  %202 = load i32, i32* %startvlak, align 4, !dbg !20259
  %203 = load i32, i32* %sizev, align 4, !dbg !20259
  %mul250 = mul nsw i32 0, %203, !dbg !20259
  %add251 = add nsw i32 %202, %mul250, !dbg !20259
  %add252 = add nsw i32 %add251, 0, !dbg !20259
  %call253 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %201, i32 %add252), !dbg !20260
  store %struct.VlakRen* %call253, %struct.VlakRen** %vlr1, align 8, !dbg !20261
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20262
  %204 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20263
  %n255 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %204, i32 0, i32 4, !dbg !20264
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %n255, i64 0, i64 0, !dbg !20263
  %205 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20265
  %n257 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %205, i32 0, i32 4, !dbg !20266
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %n257, i64 0, i64 0, !dbg !20265
  call void @add_v3_v3v3(float* %arraydecay254, float* %arraydecay256, float* %arraydecay258), !dbg !20267
  %206 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20268
  %207 = load i32, i32* %startvlak, align 4, !dbg !20269
  %208 = load i32, i32* %sizev, align 4, !dbg !20269
  %mul259 = mul nsw i32 0, %208, !dbg !20269
  %add260 = add nsw i32 %207, %mul259, !dbg !20269
  %209 = load i32, i32* %sizev, align 4, !dbg !20269
  %sub261 = sub nsw i32 %209, 1, !dbg !20269
  %add262 = add nsw i32 %add260, %sub261, !dbg !20269
  %call263 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %206, i32 %add262), !dbg !20270
  store %struct.VlakRen* %call263, %struct.VlakRen** %vlr2, align 8, !dbg !20271
  %arraydecay264 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20272
  %210 = load %struct.VlakRen*, %struct.VlakRen** %vlr2, align 8, !dbg !20273
  %n265 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %210, i32 0, i32 4, !dbg !20274
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %n265, i64 0, i64 0, !dbg !20273
  call void @add_v3_v3(float* %arraydecay264, float* %arraydecay266), !dbg !20275
  %211 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20276
  %212 = load i32, i32* %startvlak, align 4, !dbg !20277
  %213 = load i32, i32* %sizeu, align 4, !dbg !20277
  %sub267 = sub nsw i32 %213, 1, !dbg !20277
  %214 = load i32, i32* %sizev, align 4, !dbg !20277
  %mul268 = mul nsw i32 %sub267, %214, !dbg !20277
  %add269 = add nsw i32 %212, %mul268, !dbg !20277
  %add270 = add nsw i32 %add269, 0, !dbg !20277
  %call271 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %211, i32 %add270), !dbg !20278
  store %struct.VlakRen* %call271, %struct.VlakRen** %vlr3, align 8, !dbg !20279
  %arraydecay272 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20280
  %215 = load %struct.VlakRen*, %struct.VlakRen** %vlr3, align 8, !dbg !20281
  %n273 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %215, i32 0, i32 4, !dbg !20282
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %n273, i64 0, i64 0, !dbg !20281
  call void @add_v3_v3(float* %arraydecay272, float* %arraydecay274), !dbg !20283
  %216 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20284
  %v3275 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %216, i32 0, i32 2, !dbg !20285
  %217 = load %struct.VertRen*, %struct.VertRen** %v3275, align 8, !dbg !20285
  %n276 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %217, i32 0, i32 1, !dbg !20286
  %arraydecay277 = getelementptr inbounds [3 x float], [3 x float]* %n276, i64 0, i64 0, !dbg !20284
  %arraydecay278 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20287
  call void @copy_v3_v3(float* %arraydecay277, float* %arraydecay278), !dbg !20288
  %218 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !20289
  %v1279 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %218, i32 0, i32 0, !dbg !20290
  %219 = load %struct.VertRen*, %struct.VertRen** %v1279, align 8, !dbg !20290
  %n280 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %219, i32 0, i32 1, !dbg !20291
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %n280, i64 0, i64 0, !dbg !20289
  %arraydecay282 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20292
  call void @copy_v3_v3(float* %arraydecay281, float* %arraydecay282), !dbg !20293
  %220 = load %struct.VlakRen*, %struct.VlakRen** %vlr2, align 8, !dbg !20294
  %v2283 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %220, i32 0, i32 1, !dbg !20295
  %221 = load %struct.VertRen*, %struct.VertRen** %v2283, align 8, !dbg !20295
  %n284 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %221, i32 0, i32 1, !dbg !20296
  %arraydecay285 = getelementptr inbounds [3 x float], [3 x float]* %n284, i64 0, i64 0, !dbg !20294
  %arraydecay286 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20297
  call void @copy_v3_v3(float* %arraydecay285, float* %arraydecay286), !dbg !20298
  %222 = load %struct.VlakRen*, %struct.VlakRen** %vlr3, align 8, !dbg !20299
  %v4287 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %222, i32 0, i32 3, !dbg !20300
  %223 = load %struct.VertRen*, %struct.VertRen** %v4287, align 8, !dbg !20300
  %n288 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %223, i32 0, i32 1, !dbg !20301
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %n288, i64 0, i64 0, !dbg !20299
  %arraydecay290 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !20302
  call void @copy_v3_v3(float* %arraydecay289, float* %arraydecay290), !dbg !20303
  br label %if.end291, !dbg !20304

if.end291:                                        ; preds = %if.then243, %land.lhs.true, %if.end234
  %224 = load i32, i32* %startvert, align 4, !dbg !20305
  store i32 %224, i32* %a, align 4, !dbg !20307
  br label %for.cond292, !dbg !20308

for.cond292:                                      ; preds = %for.inc301, %if.end291
  %225 = load i32, i32* %a, align 4, !dbg !20309
  %226 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20311
  %totvert293 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %226, i32 0, i32 10, !dbg !20312
  %227 = load i32, i32* %totvert293, align 8, !dbg !20312
  %cmp294 = icmp slt i32 %225, %227, !dbg !20313
  br i1 %cmp294, label %for.body296, label %for.end303, !dbg !20314

for.body296:                                      ; preds = %for.cond292
  %228 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20315
  %229 = load i32, i32* %a, align 4, !dbg !20317
  %call297 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %228, i32 %229), !dbg !20318
  store %struct.VertRen* %call297, %struct.VertRen** %ver, align 8, !dbg !20319
  %230 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !20320
  %n298 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %230, i32 0, i32 1, !dbg !20321
  %arraydecay299 = getelementptr inbounds [3 x float], [3 x float]* %n298, i64 0, i64 0, !dbg !20320
  %call300 = call float @normalize_v3(float* %arraydecay299), !dbg !20322
  br label %for.inc301, !dbg !20323

for.inc301:                                       ; preds = %for.body296
  %231 = load i32, i32* %a, align 4, !dbg !20324
  %inc302 = add nsw i32 %231, 1, !dbg !20324
  store i32 %inc302, i32* %a, align 4, !dbg !20324
  br label %for.cond292, !dbg !20325, !llvm.loop !20326

for.end303:                                       ; preds = %for.cond292
  %232 = load i32, i32* %orcoret, align 4, !dbg !20328
  ret i32 %232, !dbg !20329
}

declare dso_local zeroext i8 @BKE_displist_surfindex_get(%struct.DispList*, i32, i32*, i32*, i32*, i32*, i32*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @split_v_renderfaces(%struct.ObjectRen* %obr, i32 %startvlak, i32 %UNUSED_startvert, i32 %UNUSED_usize, i32 %vsize, i32 %uIndex, i32 %UNUSED_cyclu, i32 %cyclv) #0 !dbg !20330 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %startvlak.addr = alloca i32, align 4
  %UNUSED_startvert.addr = alloca i32, align 4
  %UNUSED_usize.addr = alloca i32, align 4
  %vsize.addr = alloca i32, align 4
  %uIndex.addr = alloca i32, align 4
  %UNUSED_cyclu.addr = alloca i32, align 4
  %cyclv.addr = alloca i32, align 4
  %vLen = alloca i32, align 4
  %v = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  %vert = alloca %struct.VertRen*, align 8
  %vlr10 = alloca %struct.VlakRen*, align 8
  %vlr15 = alloca %struct.VlakRen*, align 8
  %vlr27 = alloca %struct.VlakRen*, align 8
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !20333, metadata !DIExpression()), !dbg !20334
  store i32 %startvlak, i32* %startvlak.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %startvlak.addr, metadata !20335, metadata !DIExpression()), !dbg !20336
  store i32 %UNUSED_startvert, i32* %UNUSED_startvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_startvert.addr, metadata !20337, metadata !DIExpression()), !dbg !20338
  store i32 %UNUSED_usize, i32* %UNUSED_usize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_usize.addr, metadata !20339, metadata !DIExpression()), !dbg !20340
  store i32 %vsize, i32* %vsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vsize.addr, metadata !20341, metadata !DIExpression()), !dbg !20342
  store i32 %uIndex, i32* %uIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uIndex.addr, metadata !20343, metadata !DIExpression()), !dbg !20344
  store i32 %UNUSED_cyclu, i32* %UNUSED_cyclu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_cyclu.addr, metadata !20345, metadata !DIExpression()), !dbg !20346
  store i32 %cyclv, i32* %cyclv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cyclv.addr, metadata !20347, metadata !DIExpression()), !dbg !20348
  call void @llvm.dbg.declare(metadata i32* %vLen, metadata !20349, metadata !DIExpression()), !dbg !20350
  %0 = load i32, i32* %vsize.addr, align 4, !dbg !20351
  %sub = sub nsw i32 %0, 1, !dbg !20352
  %1 = load i32, i32* %cyclv.addr, align 4, !dbg !20353
  %tobool = icmp ne i32 %1, 0, !dbg !20354
  %lnot = xor i1 %tobool, true, !dbg !20354
  %lnot1 = xor i1 %lnot, true, !dbg !20355
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !20355
  %add = add nsw i32 %sub, %lnot.ext, !dbg !20356
  store i32 %add, i32* %vLen, align 4, !dbg !20350
  call void @llvm.dbg.declare(metadata i32* %v, metadata !20357, metadata !DIExpression()), !dbg !20358
  store i32 0, i32* %v, align 4, !dbg !20359
  br label %for.cond, !dbg !20361

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %v, align 4, !dbg !20362
  %3 = load i32, i32* %vLen, align 4, !dbg !20364
  %cmp = icmp slt i32 %2, %3, !dbg !20365
  br i1 %cmp, label %for.body, label %for.end, !dbg !20366

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !20367, metadata !DIExpression()), !dbg !20369
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20370
  %5 = load i32, i32* %startvlak.addr, align 4, !dbg !20371
  %6 = load i32, i32* %vLen, align 4, !dbg !20372
  %7 = load i32, i32* %uIndex.addr, align 4, !dbg !20373
  %mul = mul nsw i32 %6, %7, !dbg !20374
  %add2 = add nsw i32 %5, %mul, !dbg !20375
  %8 = load i32, i32* %v, align 4, !dbg !20376
  %add3 = add nsw i32 %add2, %8, !dbg !20377
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %add3), !dbg !20378
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !20369
  call void @llvm.dbg.declare(metadata %struct.VertRen** %vert, metadata !20379, metadata !DIExpression()), !dbg !20380
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20381
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20382
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 1, !dbg !20383
  %11 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !20383
  %call4 = call %struct.VertRen* @RE_vertren_copy(%struct.ObjectRen* %9, %struct.VertRen* %11), !dbg !20384
  store %struct.VertRen* %call4, %struct.VertRen** %vert, align 8, !dbg !20380
  %12 = load i32, i32* %cyclv.addr, align 4, !dbg !20385
  %tobool5 = icmp ne i32 %12, 0, !dbg !20385
  br i1 %tobool5, label %if.then, label %if.else22, !dbg !20387

if.then:                                          ; preds = %for.body
  %13 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !20388
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20390
  %v26 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 1, !dbg !20391
  store %struct.VertRen* %13, %struct.VertRen** %v26, align 8, !dbg !20392
  %15 = load i32, i32* %v, align 4, !dbg !20393
  %16 = load i32, i32* %vLen, align 4, !dbg !20395
  %sub7 = sub nsw i32 %16, 1, !dbg !20396
  %cmp8 = icmp eq i32 %15, %sub7, !dbg !20397
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !20398

if.then9:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr10, metadata !20399, metadata !DIExpression()), !dbg !20401
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20402
  %18 = load i32, i32* %startvlak.addr, align 4, !dbg !20403
  %19 = load i32, i32* %vLen, align 4, !dbg !20404
  %20 = load i32, i32* %uIndex.addr, align 4, !dbg !20405
  %mul11 = mul nsw i32 %19, %20, !dbg !20406
  %add12 = add nsw i32 %18, %mul11, !dbg !20407
  %add13 = add nsw i32 %add12, 0, !dbg !20408
  %call14 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %17, i32 %add13), !dbg !20409
  store %struct.VlakRen* %call14, %struct.VlakRen** %vlr10, align 8, !dbg !20401
  %21 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !20410
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr10, align 8, !dbg !20411
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 0, !dbg !20412
  store %struct.VertRen* %21, %struct.VertRen** %v1, align 8, !dbg !20413
  br label %if.end, !dbg !20414

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr15, metadata !20415, metadata !DIExpression()), !dbg !20417
  %23 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20418
  %24 = load i32, i32* %startvlak.addr, align 4, !dbg !20419
  %25 = load i32, i32* %vLen, align 4, !dbg !20420
  %26 = load i32, i32* %uIndex.addr, align 4, !dbg !20421
  %mul16 = mul nsw i32 %25, %26, !dbg !20422
  %add17 = add nsw i32 %24, %mul16, !dbg !20423
  %27 = load i32, i32* %v, align 4, !dbg !20424
  %add18 = add nsw i32 %add17, %27, !dbg !20425
  %add19 = add nsw i32 %add18, 1, !dbg !20426
  %call20 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %23, i32 %add19), !dbg !20427
  store %struct.VlakRen* %call20, %struct.VlakRen** %vlr15, align 8, !dbg !20417
  %28 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !20428
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr15, align 8, !dbg !20429
  %v121 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 0, !dbg !20430
  store %struct.VertRen* %28, %struct.VertRen** %v121, align 8, !dbg !20431
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then9
  br label %if.end41, !dbg !20432

if.else22:                                        ; preds = %for.body
  %30 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !20433
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20435
  %v223 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 1, !dbg !20436
  store %struct.VertRen* %30, %struct.VertRen** %v223, align 8, !dbg !20437
  %32 = load i32, i32* %v, align 4, !dbg !20438
  %33 = load i32, i32* %vLen, align 4, !dbg !20440
  %sub24 = sub nsw i32 %33, 1, !dbg !20441
  %cmp25 = icmp slt i32 %32, %sub24, !dbg !20442
  br i1 %cmp25, label %if.then26, label %if.end34, !dbg !20443

if.then26:                                        ; preds = %if.else22
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr27, metadata !20444, metadata !DIExpression()), !dbg !20446
  %34 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20447
  %35 = load i32, i32* %startvlak.addr, align 4, !dbg !20448
  %36 = load i32, i32* %vLen, align 4, !dbg !20449
  %37 = load i32, i32* %uIndex.addr, align 4, !dbg !20450
  %mul28 = mul nsw i32 %36, %37, !dbg !20451
  %add29 = add nsw i32 %35, %mul28, !dbg !20452
  %38 = load i32, i32* %v, align 4, !dbg !20453
  %add30 = add nsw i32 %add29, %38, !dbg !20454
  %add31 = add nsw i32 %add30, 1, !dbg !20455
  %call32 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %34, i32 %add31), !dbg !20456
  store %struct.VlakRen* %call32, %struct.VlakRen** %vlr27, align 8, !dbg !20446
  %39 = load %struct.VertRen*, %struct.VertRen** %vert, align 8, !dbg !20457
  %40 = load %struct.VlakRen*, %struct.VlakRen** %vlr27, align 8, !dbg !20458
  %v133 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %40, i32 0, i32 0, !dbg !20459
  store %struct.VertRen* %39, %struct.VertRen** %v133, align 8, !dbg !20460
  br label %if.end34, !dbg !20461

if.end34:                                         ; preds = %if.then26, %if.else22
  %41 = load i32, i32* %v, align 4, !dbg !20462
  %cmp35 = icmp eq i32 %41, 0, !dbg !20464
  br i1 %cmp35, label %if.then36, label %if.end40, !dbg !20465

if.then36:                                        ; preds = %if.end34
  %42 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20466
  %43 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20468
  %v137 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %43, i32 0, i32 0, !dbg !20469
  %44 = load %struct.VertRen*, %struct.VertRen** %v137, align 8, !dbg !20469
  %call38 = call %struct.VertRen* @RE_vertren_copy(%struct.ObjectRen* %42, %struct.VertRen* %44), !dbg !20470
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !20471
  %v139 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 0, !dbg !20472
  store %struct.VertRen* %call38, %struct.VertRen** %v139, align 8, !dbg !20473
  br label %if.end40, !dbg !20474

if.end40:                                         ; preds = %if.then36, %if.end34
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end
  br label %for.inc, !dbg !20475

for.inc:                                          ; preds = %if.end41
  %46 = load i32, i32* %v, align 4, !dbg !20476
  %inc = add nsw i32 %46, 1, !dbg !20476
  store i32 %inc, i32* %v, align 4, !dbg !20476
  br label %for.cond, !dbg !20477, !llvm.loop !20478

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20480
}

declare dso_local void @BKE_displist_free(%struct.ListBase*) #4

declare dso_local %struct.VertRen* @RE_vertren_copy(%struct.ObjectRen*, %struct.VertRen*) #4

declare dso_local void @BKE_displist_make_surf(%struct.Scene*, %struct.Object*, %struct.ListBase*, %struct.DerivedMesh**, i8 zeroext, i8 zeroext, i8 zeroext) #4

declare dso_local float* @BKE_curve_surf_make_orco(%struct.Object*) #4

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @test_for_displace(%struct.Render* %re, %struct.Object* %ob) #0 !dbg !20481 {
entry:
  %retval = alloca i16, align 2
  %re.addr = alloca %struct.Render*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %ma = alloca %struct.Material*, align 8
  %i = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !20484, metadata !DIExpression()), !dbg !20485
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !20486, metadata !DIExpression()), !dbg !20487
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !20488, metadata !DIExpression()), !dbg !20489
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20490, metadata !DIExpression()), !dbg !20491
  store i32 1, i32* %i, align 4, !dbg !20492
  br label %for.cond, !dbg !20494

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !20495
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !20497
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 31, !dbg !20498
  %2 = load i32, i32* %totcol, align 8, !dbg !20498
  %cmp = icmp sle i32 %0, %2, !dbg !20499
  br i1 %cmp, label %for.body, label %for.end, !dbg !20500

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !20501
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !20503
  %5 = load i32, i32* %i, align 4, !dbg !20504
  %conv = trunc i32 %5 to i16, !dbg !20504
  %call = call %struct.Material* @give_render_material(%struct.Render* %3, %struct.Object* %4, i16 signext %conv), !dbg !20505
  store %struct.Material* %call, %struct.Material** %ma, align 8, !dbg !20506
  %6 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !20507
  %tobool = icmp ne %struct.Material* %6, null, !dbg !20507
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20509

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !20510
  %mapto = getelementptr inbounds %struct.Material, %struct.Material* %7, i32 0, i32 91, !dbg !20511
  %8 = load i16, i16* %mapto, align 2, !dbg !20511
  %conv1 = sext i16 %8 to i32, !dbg !20510
  %and = and i32 %conv1, 4096, !dbg !20512
  %tobool2 = icmp ne i32 %and, 0, !dbg !20512
  br i1 %tobool2, label %if.then, label %if.end, !dbg !20513

if.then:                                          ; preds = %land.lhs.true
  store i16 1, i16* %retval, align 2, !dbg !20514
  br label %return, !dbg !20514

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !20515

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !20516
  %inc = add nsw i32 %9, 1, !dbg !20516
  store i32 %inc, i32* %i, align 4, !dbg !20516
  br label %for.cond, !dbg !20517, !llvm.loop !20518

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %retval, align 2, !dbg !20520
  br label %return, !dbg !20520

return:                                           ; preds = %for.end, %if.then
  %10 = load i16, i16* %retval, align 2, !dbg !20521
  ret i16 %10, !dbg !20521
}

; Function Attrs: noinline nounwind uwtable
define internal void @make_render_halos(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.Mesh* %UNUSED_me, i32 %totvert, %struct.MVert* %mvert, %struct.Material* %ma, float* %orco) #0 !dbg !20522 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %UNUSED_me.addr = alloca %struct.Mesh*, align 8
  %totvert.addr = alloca i32, align 4
  %mvert.addr = alloca %struct.MVert*, align 8
  %ma.addr = alloca %struct.Material*, align 8
  %orco.addr = alloca float*, align 8
  %ob = alloca %struct.Object*, align 8
  %har = alloca %struct.HaloRen*, align 8
  %xn = alloca float, align 4
  %yn = alloca float, align 4
  %zn = alloca float, align 4
  %nor = alloca [3 x float], align 4
  %view = alloca [3 x float], align 4
  %vec = alloca [3 x float], align 4
  %hasize = alloca float, align 4
  %mat = alloca [4 x [4 x float]], align 16
  %imat = alloca [3 x [3 x float]], align 16
  %a = alloca i32, align 4
  %ok = alloca i32, align 4
  %seed = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !20525, metadata !DIExpression()), !dbg !20526
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !20527, metadata !DIExpression()), !dbg !20528
  store %struct.Mesh* %UNUSED_me, %struct.Mesh** %UNUSED_me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %UNUSED_me.addr, metadata !20529, metadata !DIExpression()), !dbg !20530
  store i32 %totvert, i32* %totvert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totvert.addr, metadata !20531, metadata !DIExpression()), !dbg !20532
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !20533, metadata !DIExpression()), !dbg !20534
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !20535, metadata !DIExpression()), !dbg !20536
  store float* %orco, float** %orco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %orco.addr, metadata !20537, metadata !DIExpression()), !dbg !20538
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !20539, metadata !DIExpression()), !dbg !20540
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20541
  %ob1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 2, !dbg !20542
  %1 = load %struct.Object*, %struct.Object** %ob1, align 8, !dbg !20542
  store %struct.Object* %1, %struct.Object** %ob, align 8, !dbg !20540
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har, metadata !20543, metadata !DIExpression()), !dbg !20544
  call void @llvm.dbg.declare(metadata float* %xn, metadata !20545, metadata !DIExpression()), !dbg !20546
  call void @llvm.dbg.declare(metadata float* %yn, metadata !20547, metadata !DIExpression()), !dbg !20548
  call void @llvm.dbg.declare(metadata float* %zn, metadata !20549, metadata !DIExpression()), !dbg !20550
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !20551, metadata !DIExpression()), !dbg !20552
  call void @llvm.dbg.declare(metadata [3 x float]* %view, metadata !20553, metadata !DIExpression()), !dbg !20554
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !20555, metadata !DIExpression()), !dbg !20556
  call void @llvm.dbg.declare(metadata float* %hasize, metadata !20557, metadata !DIExpression()), !dbg !20558
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %mat, metadata !20559, metadata !DIExpression()), !dbg !20560
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat, metadata !20561, metadata !DIExpression()), !dbg !20562
  call void @llvm.dbg.declare(metadata i32* %a, metadata !20563, metadata !DIExpression()), !dbg !20564
  call void @llvm.dbg.declare(metadata i32* %ok, metadata !20565, metadata !DIExpression()), !dbg !20566
  call void @llvm.dbg.declare(metadata i32* %seed, metadata !20567, metadata !DIExpression()), !dbg !20568
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !20569
  %seed1 = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 39, !dbg !20570
  %3 = load i8, i8* %seed1, align 2, !dbg !20570
  %conv = zext i8 %3 to i32, !dbg !20569
  store i32 %conv, i32* %seed, align 4, !dbg !20568
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !20571
  %4 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !20572
  %viewmat = getelementptr inbounds %struct.Render, %struct.Render* %4, i32 0, i32 32, !dbg !20573
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewmat, i64 0, i64 0, !dbg !20572
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !20574
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 47, !dbg !20575
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !20574
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !20576
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !20577
  %6 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !20578
  %imat5 = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 50, !dbg !20579
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat5, i64 0, i64 0, !dbg !20578
  call void @copy_m3_m4([3 x float]* %arraydecay4, [4 x float]* %arraydecay6), !dbg !20580
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !20581
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 4, !dbg !20582
  %8 = load i16, i16* %flag, align 8, !dbg !20583
  %conv7 = sext i16 %8 to i32, !dbg !20583
  %or = or i32 %conv7, 2, !dbg !20583
  %conv8 = trunc i32 %or to i16, !dbg !20583
  store i16 %conv8, i16* %flag, align 8, !dbg !20583
  store i32 0, i32* %a, align 4, !dbg !20584
  br label %for.cond, !dbg !20586

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %a, align 4, !dbg !20587
  %10 = load i32, i32* %totvert.addr, align 4, !dbg !20589
  %cmp = icmp slt i32 %9, %10, !dbg !20590
  br i1 %cmp, label %for.body, label %for.end, !dbg !20591

for.body:                                         ; preds = %for.cond
  store i32 1, i32* %ok, align 4, !dbg !20592
  %11 = load i32, i32* %ok, align 4, !dbg !20594
  %tobool = icmp ne i32 %11, 0, !dbg !20594
  br i1 %tobool, label %if.then, label %if.end88, !dbg !20596

if.then:                                          ; preds = %for.body
  %12 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !20597
  %hasize10 = getelementptr inbounds %struct.Material, %struct.Material* %12, i32 0, i32 59, !dbg !20599
  %13 = load float, float* %hasize10, align 4, !dbg !20599
  store float %13, float* %hasize, align 4, !dbg !20600
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !20601
  %14 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20602
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %14, i32 0, i32 0, !dbg !20603
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !20602
  call void @copy_v3_v3(float* %arraydecay11, float* %arraydecay12), !dbg !20604
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !20605
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !20606
  call void @mul_m4_v3([4 x float]* %arraydecay13, float* %arraydecay14), !dbg !20607
  %15 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !20608
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 51, !dbg !20610
  %16 = load i32, i32* %mode, align 4, !dbg !20610
  %and = and i32 %16, 8192, !dbg !20611
  %tobool15 = icmp ne i32 %and, 0, !dbg !20611
  br i1 %tobool15, label %if.then16, label %if.end73, !dbg !20612

if.then16:                                        ; preds = %if.then
  %17 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20613
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i32 0, i32 1, !dbg !20615
  %arrayidx = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !20613
  %18 = load i16, i16* %arrayidx, align 4, !dbg !20613
  %conv17 = sitofp i16 %18 to float, !dbg !20613
  store float %conv17, float* %xn, align 4, !dbg !20616
  %19 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20617
  %no18 = getelementptr inbounds %struct.MVert, %struct.MVert* %19, i32 0, i32 1, !dbg !20618
  %arrayidx19 = getelementptr inbounds [3 x i16], [3 x i16]* %no18, i64 0, i64 1, !dbg !20617
  %20 = load i16, i16* %arrayidx19, align 2, !dbg !20617
  %conv20 = sitofp i16 %20 to float, !dbg !20617
  store float %conv20, float* %yn, align 4, !dbg !20619
  %21 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20620
  %no21 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i32 0, i32 1, !dbg !20621
  %arrayidx22 = getelementptr inbounds [3 x i16], [3 x i16]* %no21, i64 0, i64 2, !dbg !20620
  %22 = load i16, i16* %arrayidx22, align 4, !dbg !20620
  %conv23 = sitofp i16 %22 to float, !dbg !20620
  store float %conv23, float* %zn, align 4, !dbg !20622
  %arrayidx24 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !20623
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !20623
  %23 = load float, float* %arrayidx25, align 16, !dbg !20623
  %24 = load float, float* %xn, align 4, !dbg !20624
  %mul = fmul float %23, %24, !dbg !20625
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !20626
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 1, !dbg !20626
  %25 = load float, float* %arrayidx27, align 4, !dbg !20626
  %26 = load float, float* %yn, align 4, !dbg !20627
  %mul28 = fmul float %25, %26, !dbg !20628
  %add = fadd float %mul, %mul28, !dbg !20629
  %arrayidx29 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 0, !dbg !20630
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 2, !dbg !20630
  %27 = load float, float* %arrayidx30, align 8, !dbg !20630
  %28 = load float, float* %zn, align 4, !dbg !20631
  %mul31 = fmul float %27, %28, !dbg !20632
  %add32 = fadd float %add, %mul31, !dbg !20633
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !20634
  store float %add32, float* %arrayidx33, align 4, !dbg !20635
  %arrayidx34 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !20636
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !20636
  %29 = load float, float* %arrayidx35, align 4, !dbg !20636
  %30 = load float, float* %xn, align 4, !dbg !20637
  %mul36 = fmul float %29, %30, !dbg !20638
  %arrayidx37 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !20639
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx37, i64 0, i64 1, !dbg !20639
  %31 = load float, float* %arrayidx38, align 4, !dbg !20639
  %32 = load float, float* %yn, align 4, !dbg !20640
  %mul39 = fmul float %31, %32, !dbg !20641
  %add40 = fadd float %mul36, %mul39, !dbg !20642
  %arrayidx41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 1, !dbg !20643
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx41, i64 0, i64 2, !dbg !20643
  %33 = load float, float* %arrayidx42, align 4, !dbg !20643
  %34 = load float, float* %zn, align 4, !dbg !20644
  %mul43 = fmul float %33, %34, !dbg !20645
  %add44 = fadd float %add40, %mul43, !dbg !20646
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !20647
  store float %add44, float* %arrayidx45, align 4, !dbg !20648
  %arrayidx46 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !20649
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !20649
  %35 = load float, float* %arrayidx47, align 8, !dbg !20649
  %36 = load float, float* %xn, align 4, !dbg !20650
  %mul48 = fmul float %35, %36, !dbg !20651
  %arrayidx49 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !20652
  %arrayidx50 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx49, i64 0, i64 1, !dbg !20652
  %37 = load float, float* %arrayidx50, align 4, !dbg !20652
  %38 = load float, float* %yn, align 4, !dbg !20653
  %mul51 = fmul float %37, %38, !dbg !20654
  %add52 = fadd float %mul48, %mul51, !dbg !20655
  %arrayidx53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat, i64 0, i64 2, !dbg !20656
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 2, !dbg !20656
  %39 = load float, float* %arrayidx54, align 8, !dbg !20656
  %40 = load float, float* %zn, align 4, !dbg !20657
  %mul55 = fmul float %39, %40, !dbg !20658
  %add56 = fadd float %add52, %mul55, !dbg !20659
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !20660
  store float %add56, float* %arrayidx57, align 4, !dbg !20661
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !20662
  %call = call float @normalize_v3(float* %arraydecay58), !dbg !20663
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !20664
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !20665
  call void @copy_v3_v3(float* %arraydecay59, float* %arraydecay60), !dbg !20666
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !20667
  %call62 = call float @normalize_v3(float* %arraydecay61), !dbg !20668
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !20669
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !20670
  %call65 = call float @dot_v3v3(float* %arraydecay63, float* %arraydecay64), !dbg !20671
  store float %call65, float* %zn, align 4, !dbg !20672
  %41 = load float, float* %zn, align 4, !dbg !20673
  %cmp66 = fcmp oge float %41, 0.000000e+00, !dbg !20675
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !20676

if.then68:                                        ; preds = %if.then16
  store float 0.000000e+00, float* %hasize, align 4, !dbg !20677
  br label %if.end, !dbg !20678

if.else:                                          ; preds = %if.then16
  %42 = load float, float* %zn, align 4, !dbg !20679
  %43 = load float, float* %zn, align 4, !dbg !20680
  %mul69 = fmul float %42, %43, !dbg !20681
  %44 = load float, float* %zn, align 4, !dbg !20682
  %mul70 = fmul float %mul69, %44, !dbg !20683
  %45 = load float, float* %zn, align 4, !dbg !20684
  %mul71 = fmul float %mul70, %45, !dbg !20685
  %46 = load float, float* %hasize, align 4, !dbg !20686
  %mul72 = fmul float %46, %mul71, !dbg !20686
  store float %mul72, float* %hasize, align 4, !dbg !20686
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then68
  br label %if.end73, !dbg !20687

if.end73:                                         ; preds = %if.end, %if.then
  %47 = load float*, float** %orco.addr, align 8, !dbg !20688
  %tobool74 = icmp ne float* %47, null, !dbg !20688
  br i1 %tobool74, label %if.then75, label %if.else78, !dbg !20690

if.then75:                                        ; preds = %if.end73
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !20691
  %49 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20692
  %50 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !20693
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !20694
  %51 = load float*, float** %orco.addr, align 8, !dbg !20695
  %52 = load float, float* %hasize, align 4, !dbg !20696
  %53 = load i32, i32* %seed, align 4, !dbg !20697
  %call77 = call %struct.HaloRen* @RE_inithalo(%struct.Render* %48, %struct.ObjectRen* %49, %struct.Material* %50, float* %arraydecay76, float* null, float* %51, float %52, float 0.000000e+00, i32 %53), !dbg !20698
  store %struct.HaloRen* %call77, %struct.HaloRen** %har, align 8, !dbg !20699
  br label %if.end83, !dbg !20700

if.else78:                                        ; preds = %if.end73
  %54 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !20701
  %55 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !20702
  %56 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !20703
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !20704
  %57 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20705
  %co80 = getelementptr inbounds %struct.MVert, %struct.MVert* %57, i32 0, i32 0, !dbg !20706
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %co80, i64 0, i64 0, !dbg !20705
  %58 = load float, float* %hasize, align 4, !dbg !20707
  %59 = load i32, i32* %seed, align 4, !dbg !20708
  %call82 = call %struct.HaloRen* @RE_inithalo(%struct.Render* %54, %struct.ObjectRen* %55, %struct.Material* %56, float* %arraydecay79, float* null, float* %arraydecay81, float %58, float 0.000000e+00, i32 %59), !dbg !20709
  store %struct.HaloRen* %call82, %struct.HaloRen** %har, align 8, !dbg !20710
  br label %if.end83

if.end83:                                         ; preds = %if.else78, %if.then75
  %60 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !20711
  %tobool84 = icmp ne %struct.HaloRen* %60, null, !dbg !20711
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !20713

if.then85:                                        ; preds = %if.end83
  %61 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !20714
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %61, i32 0, i32 52, !dbg !20715
  %62 = load i32, i32* %lay, align 8, !dbg !20715
  %63 = load %struct.HaloRen*, %struct.HaloRen** %har, align 8, !dbg !20716
  %lay86 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %63, i32 0, i32 28, !dbg !20717
  store i32 %62, i32* %lay86, align 8, !dbg !20718
  br label %if.end87, !dbg !20716

if.end87:                                         ; preds = %if.then85, %if.end83
  br label %if.end88, !dbg !20719

if.end88:                                         ; preds = %if.end87, %for.body
  %64 = load float*, float** %orco.addr, align 8, !dbg !20720
  %tobool89 = icmp ne float* %64, null, !dbg !20720
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !20722

if.then90:                                        ; preds = %if.end88
  %65 = load float*, float** %orco.addr, align 8, !dbg !20723
  %add.ptr = getelementptr inbounds float, float* %65, i64 3, !dbg !20723
  store float* %add.ptr, float** %orco.addr, align 8, !dbg !20723
  br label %if.end91, !dbg !20724

if.end91:                                         ; preds = %if.then90, %if.end88
  %66 = load i32, i32* %seed, align 4, !dbg !20725
  %inc = add nsw i32 %66, 1, !dbg !20725
  store i32 %inc, i32* %seed, align 4, !dbg !20725
  br label %for.inc, !dbg !20726

for.inc:                                          ; preds = %if.end91
  %67 = load i32, i32* %a, align 4, !dbg !20727
  %inc92 = add nsw i32 %67, 1, !dbg !20727
  store i32 %inc92, i32* %a, align 4, !dbg !20727
  %68 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !20728
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %68, i32 1, !dbg !20728
  store %struct.MVert* %incdec.ptr, %struct.MVert** %mvert.addr, align 8, !dbg !20728
  br label %for.cond, !dbg !20729, !llvm.loop !20730

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20732
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !20733 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !20736, metadata !DIExpression()), !dbg !20737
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !20738, metadata !DIExpression()), !dbg !20739
  %0 = load i16*, i16** %in.addr, align 8, !dbg !20740
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !20740
  %1 = load i16, i16* %arrayidx, align 2, !dbg !20740
  %conv = sext i16 %1 to i32, !dbg !20740
  %conv1 = sitofp i32 %conv to float, !dbg !20740
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !20741
  %2 = load float*, float** %out.addr, align 8, !dbg !20742
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !20742
  store float %mul, float* %arrayidx2, align 4, !dbg !20743
  %3 = load i16*, i16** %in.addr, align 8, !dbg !20744
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !20744
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !20744
  %conv4 = sext i16 %4 to i32, !dbg !20744
  %conv5 = sitofp i32 %conv4 to float, !dbg !20744
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !20745
  %5 = load float*, float** %out.addr, align 8, !dbg !20746
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !20746
  store float %mul6, float* %arrayidx7, align 4, !dbg !20747
  %6 = load i16*, i16** %in.addr, align 8, !dbg !20748
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !20748
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !20748
  %conv9 = sext i16 %7 to i32, !dbg !20748
  %conv10 = sitofp i32 %conv9 to float, !dbg !20748
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !20749
  %8 = load float*, float** %out.addr, align 8, !dbg !20750
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !20750
  store float %mul11, float* %arrayidx12, align 4, !dbg !20751
  ret void, !dbg !20752
}

declare dso_local void @mul_transposed_m3_v3([3 x float]*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !20753 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20754, metadata !DIExpression()), !dbg !20755
  %0 = load float*, float** %r.addr, align 8, !dbg !20756
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20756
  %1 = load float, float* %arrayidx, align 4, !dbg !20756
  %fneg = fneg float %1, !dbg !20757
  %2 = load float*, float** %r.addr, align 8, !dbg !20758
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20758
  store float %fneg, float* %arrayidx1, align 4, !dbg !20759
  %3 = load float*, float** %r.addr, align 8, !dbg !20760
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !20760
  %4 = load float, float* %arrayidx2, align 4, !dbg !20760
  %fneg3 = fneg float %4, !dbg !20761
  %5 = load float*, float** %r.addr, align 8, !dbg !20762
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !20762
  store float %fneg3, float* %arrayidx4, align 4, !dbg !20763
  %6 = load float*, float** %r.addr, align 8, !dbg !20764
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !20764
  %7 = load float, float* %arrayidx5, align 4, !dbg !20764
  %fneg6 = fneg float %7, !dbg !20765
  %8 = load float*, float** %r.addr, align 8, !dbg !20766
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !20766
  store float %fneg6, float* %arrayidx7, align 4, !dbg !20767
  ret void, !dbg !20768
}

declare dso_local i32* @RE_vertren_get_origindex(%struct.ObjectRen*, %struct.VertRen*, i32) #4

declare dso_local void @DM_add_tangent_layer(%struct.DerivedMesh*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !20769 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !20770, metadata !DIExpression()), !dbg !20771
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !20772, metadata !DIExpression()), !dbg !20773
  %0 = load float*, float** %a.addr, align 8, !dbg !20774
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !20774
  %1 = load float, float* %arrayidx, align 4, !dbg !20774
  %2 = load float*, float** %r.addr, align 8, !dbg !20775
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !20775
  store float %1, float* %arrayidx1, align 4, !dbg !20776
  %3 = load float*, float** %a.addr, align 8, !dbg !20777
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !20777
  %4 = load float, float* %arrayidx2, align 4, !dbg !20777
  %5 = load float*, float** %r.addr, align 8, !dbg !20778
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !20778
  store float %4, float* %arrayidx3, align 4, !dbg !20779
  %6 = load float*, float** %a.addr, align 8, !dbg !20780
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !20780
  %7 = load float, float* %arrayidx4, align 4, !dbg !20780
  %8 = load float*, float** %r.addr, align 8, !dbg !20781
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !20781
  store float %7, float* %arrayidx5, align 4, !dbg !20782
  %9 = load float*, float** %a.addr, align 8, !dbg !20783
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !20783
  %10 = load float, float* %arrayidx6, align 4, !dbg !20783
  %11 = load float*, float** %r.addr, align 8, !dbg !20784
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !20784
  store float %10, float* %arrayidx7, align 4, !dbg !20785
  ret void, !dbg !20786
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3_short(i16* %r, i16* %a) #0 !dbg !20787 {
entry:
  %r.addr = alloca i16*, align 8
  %a.addr = alloca i16*, align 8
  store i16* %r, i16** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %r.addr, metadata !20790, metadata !DIExpression()), !dbg !20791
  store i16* %a, i16** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %a.addr, metadata !20792, metadata !DIExpression()), !dbg !20793
  %0 = load i16*, i16** %a.addr, align 8, !dbg !20794
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !20794
  %1 = load i16, i16* %arrayidx, align 2, !dbg !20794
  %2 = load i16*, i16** %r.addr, align 8, !dbg !20795
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !20795
  store i16 %1, i16* %arrayidx1, align 2, !dbg !20796
  %3 = load i16*, i16** %a.addr, align 8, !dbg !20797
  %arrayidx2 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !20797
  %4 = load i16, i16* %arrayidx2, align 2, !dbg !20797
  %5 = load i16*, i16** %r.addr, align 8, !dbg !20798
  %arrayidx3 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !20798
  store i16 %4, i16* %arrayidx3, align 2, !dbg !20799
  %6 = load i16*, i16** %a.addr, align 8, !dbg !20800
  %arrayidx4 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !20800
  %7 = load i16, i16* %arrayidx4, align 2, !dbg !20800
  %8 = load i16*, i16** %r.addr, align 8, !dbg !20801
  %arrayidx5 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !20801
  store i16 %7, i16* %arrayidx5, align 2, !dbg !20802
  ret void, !dbg !20803
}

declare dso_local i32* @RE_vlakren_get_origindex(%struct.ObjectRen*, %struct.VlakRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal %struct.edgesort* @make_mesh_edge_lookup(%struct.DerivedMesh* %dm, i32* %totedgesort) #0 !dbg !20804 {
entry:
  %retval = alloca %struct.edgesort*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %totedgesort.addr = alloca i32*, align 8
  %mf = alloca %struct.MFace*, align 8
  %mface = alloca %struct.MFace*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %edsort = alloca %struct.edgesort*, align 8
  %ed = alloca %struct.edgesort*, align 8
  %mcol = alloca i32*, align 8
  %a = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !20807, metadata !DIExpression()), !dbg !20808
  store i32* %totedgesort, i32** %totedgesort.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %totedgesort.addr, metadata !20809, metadata !DIExpression()), !dbg !20810
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !20811, metadata !DIExpression()), !dbg !20812
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !20813, metadata !DIExpression()), !dbg !20814
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !20815, metadata !DIExpression()), !dbg !20816
  store %struct.MTFace* null, %struct.MTFace** %tface, align 8, !dbg !20816
  call void @llvm.dbg.declare(metadata %struct.edgesort** %edsort, metadata !20817, metadata !DIExpression()), !dbg !20818
  call void @llvm.dbg.declare(metadata %struct.edgesort** %ed, metadata !20819, metadata !DIExpression()), !dbg !20820
  call void @llvm.dbg.declare(metadata i32** %mcol, metadata !20821, metadata !DIExpression()), !dbg !20822
  store i32* null, i32** %mcol, align 8, !dbg !20822
  call void @llvm.dbg.declare(metadata i32* %a, metadata !20823, metadata !DIExpression()), !dbg !20824
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !20825, metadata !DIExpression()), !dbg !20826
  store i32 0, i32* %totedge, align 4, !dbg !20826
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !20827, metadata !DIExpression()), !dbg !20828
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20829
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 33, !dbg !20830
  %1 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !20830
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20831
  %call = call %struct.MFace* %1(%struct.DerivedMesh* %2), !dbg !20829
  store %struct.MFace* %call, %struct.MFace** %mface, align 8, !dbg !20832
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20833
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 25, !dbg !20834
  %4 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !20834
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20835
  %call1 = call i32 %4(%struct.DerivedMesh* %5), !dbg !20833
  store i32 %call1, i32* %totface, align 4, !dbg !20836
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20837
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 52, !dbg !20838
  %7 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !20838
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20839
  %call2 = call i8* %7(%struct.DerivedMesh* %8, i32 5), !dbg !20837
  %9 = bitcast i8* %call2 to %struct.MTFace*, !dbg !20837
  store %struct.MTFace* %9, %struct.MTFace** %tface, align 8, !dbg !20840
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20841
  %getTessFaceDataArray3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !20842
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray3, align 8, !dbg !20842
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !20843
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 6), !dbg !20841
  %13 = bitcast i8* %call4 to i32*, !dbg !20841
  store i32* %13, i32** %mcol, align 8, !dbg !20844
  %14 = load i32*, i32** %mcol, align 8, !dbg !20845
  %cmp = icmp eq i32* %14, null, !dbg !20847
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !20848

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !20849
  %cmp5 = icmp eq %struct.MTFace* %15, null, !dbg !20850
  br i1 %cmp5, label %if.then, label %if.end, !dbg !20851

if.then:                                          ; preds = %land.lhs.true
  store %struct.edgesort* null, %struct.edgesort** %retval, align 8, !dbg !20852
  br label %return, !dbg !20852

if.end:                                           ; preds = %land.lhs.true, %entry
  %16 = load i32, i32* %totface, align 4, !dbg !20853
  store i32 %16, i32* %a, align 4, !dbg !20855
  %17 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !20856
  store %struct.MFace* %17, %struct.MFace** %mf, align 8, !dbg !20857
  br label %for.cond, !dbg !20858

for.cond:                                         ; preds = %for.inc, %if.end
  %18 = load i32, i32* %a, align 4, !dbg !20859
  %cmp6 = icmp sgt i32 %18, 0, !dbg !20861
  br i1 %cmp6, label %for.body, label %for.end, !dbg !20862

for.body:                                         ; preds = %for.cond
  %19 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20863
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !20865
  %20 = load i32, i32* %v4, align 4, !dbg !20865
  %tobool = icmp ne i32 %20, 0, !dbg !20863
  %21 = zext i1 %tobool to i64, !dbg !20863
  %cond = select i1 %tobool, i32 4, i32 3, !dbg !20863
  %22 = load i32, i32* %totedge, align 4, !dbg !20866
  %add = add nsw i32 %22, %cond, !dbg !20866
  store i32 %add, i32* %totedge, align 4, !dbg !20866
  br label %for.inc, !dbg !20867

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %a, align 4, !dbg !20868
  %dec = add nsw i32 %23, -1, !dbg !20868
  store i32 %dec, i32* %a, align 4, !dbg !20868
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20869
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 1, !dbg !20869
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !20869
  br label %for.cond, !dbg !20870, !llvm.loop !20871

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %totedge, align 4, !dbg !20873
  %cmp7 = icmp eq i32 %25, 0, !dbg !20875
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !20876

if.then8:                                         ; preds = %for.end
  store %struct.edgesort* null, %struct.edgesort** %retval, align 8, !dbg !20877
  br label %return, !dbg !20877

if.end9:                                          ; preds = %for.end
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !20878
  %27 = load i32, i32* %totedge, align 4, !dbg !20879
  %conv = sext i32 %27 to i64, !dbg !20879
  %mul = mul i64 %conv, 20, !dbg !20880
  %call10 = call i8* %26(i64 %mul, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)), !dbg !20878
  %28 = bitcast i8* %call10 to %struct.edgesort*, !dbg !20878
  store %struct.edgesort* %28, %struct.edgesort** %edsort, align 8, !dbg !20881
  store %struct.edgesort* %28, %struct.edgesort** %ed, align 8, !dbg !20882
  store i32 0, i32* %a, align 4, !dbg !20883
  %29 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !20885
  store %struct.MFace* %29, %struct.MFace** %mf, align 8, !dbg !20886
  br label %for.cond11, !dbg !20887

for.cond11:                                       ; preds = %for.inc31, %if.end9
  %30 = load i32, i32* %a, align 4, !dbg !20888
  %31 = load i32, i32* %totface, align 4, !dbg !20890
  %cmp12 = icmp slt i32 %30, %31, !dbg !20891
  br i1 %cmp12, label %for.body14, label %for.end33, !dbg !20892

for.body14:                                       ; preds = %for.cond11
  %32 = load %struct.edgesort*, %struct.edgesort** %ed, align 8, !dbg !20893
  %incdec.ptr15 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %32, i32 1, !dbg !20893
  store %struct.edgesort* %incdec.ptr15, %struct.edgesort** %ed, align 8, !dbg !20893
  %33 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20895
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %33, i32 0, i32 0, !dbg !20896
  %34 = load i32, i32* %v1, align 4, !dbg !20896
  %35 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20897
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 1, !dbg !20898
  %36 = load i32, i32* %v2, align 4, !dbg !20898
  %37 = load i32, i32* %a, align 4, !dbg !20899
  call void @to_edgesort(%struct.edgesort* %32, i32 0, i32 1, i32 %34, i32 %36, i32 %37), !dbg !20900
  %38 = load %struct.edgesort*, %struct.edgesort** %ed, align 8, !dbg !20901
  %incdec.ptr16 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %38, i32 1, !dbg !20901
  store %struct.edgesort* %incdec.ptr16, %struct.edgesort** %ed, align 8, !dbg !20901
  %39 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20902
  %v217 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 1, !dbg !20903
  %40 = load i32, i32* %v217, align 4, !dbg !20903
  %41 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20904
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %41, i32 0, i32 2, !dbg !20905
  %42 = load i32, i32* %v3, align 4, !dbg !20905
  %43 = load i32, i32* %a, align 4, !dbg !20906
  call void @to_edgesort(%struct.edgesort* %38, i32 1, i32 2, i32 %40, i32 %42, i32 %43), !dbg !20907
  %44 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20908
  %v418 = getelementptr inbounds %struct.MFace, %struct.MFace* %44, i32 0, i32 3, !dbg !20910
  %45 = load i32, i32* %v418, align 4, !dbg !20910
  %tobool19 = icmp ne i32 %45, 0, !dbg !20908
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !20911

if.then20:                                        ; preds = %for.body14
  %46 = load %struct.edgesort*, %struct.edgesort** %ed, align 8, !dbg !20912
  %incdec.ptr21 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %46, i32 1, !dbg !20912
  store %struct.edgesort* %incdec.ptr21, %struct.edgesort** %ed, align 8, !dbg !20912
  %47 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20914
  %v322 = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i32 0, i32 2, !dbg !20915
  %48 = load i32, i32* %v322, align 4, !dbg !20915
  %49 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20916
  %v423 = getelementptr inbounds %struct.MFace, %struct.MFace* %49, i32 0, i32 3, !dbg !20917
  %50 = load i32, i32* %v423, align 4, !dbg !20917
  %51 = load i32, i32* %a, align 4, !dbg !20918
  call void @to_edgesort(%struct.edgesort* %46, i32 2, i32 3, i32 %48, i32 %50, i32 %51), !dbg !20919
  %52 = load %struct.edgesort*, %struct.edgesort** %ed, align 8, !dbg !20920
  %incdec.ptr24 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %52, i32 1, !dbg !20920
  store %struct.edgesort* %incdec.ptr24, %struct.edgesort** %ed, align 8, !dbg !20920
  %53 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20921
  %v425 = getelementptr inbounds %struct.MFace, %struct.MFace* %53, i32 0, i32 3, !dbg !20922
  %54 = load i32, i32* %v425, align 4, !dbg !20922
  %55 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20923
  %v126 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 0, !dbg !20924
  %56 = load i32, i32* %v126, align 4, !dbg !20924
  %57 = load i32, i32* %a, align 4, !dbg !20925
  call void @to_edgesort(%struct.edgesort* %52, i32 3, i32 0, i32 %54, i32 %56, i32 %57), !dbg !20926
  br label %if.end30, !dbg !20927

if.else:                                          ; preds = %for.body14
  %58 = load %struct.edgesort*, %struct.edgesort** %ed, align 8, !dbg !20928
  %incdec.ptr27 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %58, i32 1, !dbg !20928
  store %struct.edgesort* %incdec.ptr27, %struct.edgesort** %ed, align 8, !dbg !20928
  %59 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20930
  %v328 = getelementptr inbounds %struct.MFace, %struct.MFace* %59, i32 0, i32 2, !dbg !20931
  %60 = load i32, i32* %v328, align 4, !dbg !20931
  %61 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20932
  %v129 = getelementptr inbounds %struct.MFace, %struct.MFace* %61, i32 0, i32 0, !dbg !20933
  %62 = load i32, i32* %v129, align 4, !dbg !20933
  %63 = load i32, i32* %a, align 4, !dbg !20934
  call void @to_edgesort(%struct.edgesort* %58, i32 2, i32 3, i32 %60, i32 %62, i32 %63), !dbg !20935
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.then20
  br label %for.inc31, !dbg !20936

for.inc31:                                        ; preds = %if.end30
  %64 = load i32, i32* %a, align 4, !dbg !20937
  %inc = add nsw i32 %64, 1, !dbg !20937
  store i32 %inc, i32* %a, align 4, !dbg !20937
  %65 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !20938
  %incdec.ptr32 = getelementptr inbounds %struct.MFace, %struct.MFace* %65, i32 1, !dbg !20938
  store %struct.MFace* %incdec.ptr32, %struct.MFace** %mf, align 8, !dbg !20938
  br label %for.cond11, !dbg !20939, !llvm.loop !20940

for.end33:                                        ; preds = %for.cond11
  %66 = load %struct.edgesort*, %struct.edgesort** %edsort, align 8, !dbg !20942
  %67 = bitcast %struct.edgesort* %66 to i8*, !dbg !20942
  %68 = load i32, i32* %totedge, align 4, !dbg !20943
  %conv34 = sext i32 %68 to i64, !dbg !20943
  call void @qsort(i8* %67, i64 %conv34, i64 20, i32 (i8*, i8*)* @vergedgesort), !dbg !20944
  %69 = load i32, i32* %totedge, align 4, !dbg !20945
  %70 = load i32*, i32** %totedgesort.addr, align 8, !dbg !20946
  store i32 %69, i32* %70, align 4, !dbg !20947
  %71 = load %struct.edgesort*, %struct.edgesort** %edsort, align 8, !dbg !20948
  store %struct.edgesort* %71, %struct.edgesort** %retval, align 8, !dbg !20949
  br label %return, !dbg !20949

return:                                           ; preds = %for.end33, %if.then8, %if.then
  %72 = load %struct.edgesort*, %struct.edgesort** %retval, align 8, !dbg !20950
  ret %struct.edgesort* %72, !dbg !20950
}

; Function Attrs: noinline nounwind uwtable
define internal void @use_mesh_edge_lookup(%struct.ObjectRen* %obr, %struct.DerivedMesh* %dm, %struct.MEdge* %medge, %struct.VlakRen* %vlr, %struct.edgesort* %edgetable, i32 %totedge) #0 !dbg !20951 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %edgetable.addr = alloca %struct.edgesort*, align 8
  %totedge.addr = alloca i32, align 4
  %ed = alloca %struct.edgesort, align 4
  %edp = alloca %struct.edgesort*, align 8
  %layer = alloca %struct.CustomDataLayer*, align 8
  %mtface = alloca %struct.MTFace*, align 8
  %mtf = alloca %struct.MTFace*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mc = alloca %struct.MCol*, align 8
  %index = alloca i32, align 4
  %mtfn = alloca i32, align 4
  %mcn = alloca i32, align 4
  %name = alloca i8*, align 8
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !20954, metadata !DIExpression()), !dbg !20955
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !20956, metadata !DIExpression()), !dbg !20957
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !20958, metadata !DIExpression()), !dbg !20959
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !20960, metadata !DIExpression()), !dbg !20961
  store %struct.edgesort* %edgetable, %struct.edgesort** %edgetable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edgesort** %edgetable.addr, metadata !20962, metadata !DIExpression()), !dbg !20963
  store i32 %totedge, i32* %totedge.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totedge.addr, metadata !20964, metadata !DIExpression()), !dbg !20965
  call void @llvm.dbg.declare(metadata %struct.edgesort* %ed, metadata !20966, metadata !DIExpression()), !dbg !20967
  call void @llvm.dbg.declare(metadata %struct.edgesort** %edp, metadata !20968, metadata !DIExpression()), !dbg !20969
  call void @llvm.dbg.declare(metadata %struct.CustomDataLayer** %layer, metadata !20970, metadata !DIExpression()), !dbg !20971
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtface, metadata !20972, metadata !DIExpression()), !dbg !20973
  call void @llvm.dbg.declare(metadata %struct.MTFace** %mtf, metadata !20974, metadata !DIExpression()), !dbg !20975
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !20976, metadata !DIExpression()), !dbg !20977
  call void @llvm.dbg.declare(metadata %struct.MCol** %mc, metadata !20978, metadata !DIExpression()), !dbg !20979
  call void @llvm.dbg.declare(metadata i32* %index, metadata !20980, metadata !DIExpression()), !dbg !20981
  call void @llvm.dbg.declare(metadata i32* %mtfn, metadata !20982, metadata !DIExpression()), !dbg !20983
  call void @llvm.dbg.declare(metadata i32* %mcn, metadata !20984, metadata !DIExpression()), !dbg !20985
  call void @llvm.dbg.declare(metadata i8** %name, metadata !20986, metadata !DIExpression()), !dbg !20987
  %0 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !20988
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %0, i32 0, i32 0, !dbg !20990
  %1 = load i32, i32* %v1, align 4, !dbg !20990
  %2 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !20991
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %2, i32 0, i32 1, !dbg !20992
  %3 = load i32, i32* %v2, align 4, !dbg !20992
  %cmp = icmp ult i32 %1, %3, !dbg !20993
  br i1 %cmp, label %if.then, label %if.else, !dbg !20994

if.then:                                          ; preds = %entry
  %4 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !20995
  %v11 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %4, i32 0, i32 0, !dbg !20997
  %5 = load i32, i32* %v11, align 4, !dbg !20997
  %v12 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %ed, i32 0, i32 0, !dbg !20998
  store i32 %5, i32* %v12, align 4, !dbg !20999
  %6 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !21000
  %v23 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %6, i32 0, i32 1, !dbg !21001
  %7 = load i32, i32* %v23, align 4, !dbg !21001
  %v24 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %ed, i32 0, i32 1, !dbg !21002
  store i32 %7, i32* %v24, align 4, !dbg !21003
  br label %if.end, !dbg !21004

if.else:                                          ; preds = %entry
  %8 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !21005
  %v25 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %8, i32 0, i32 1, !dbg !21007
  %9 = load i32, i32* %v25, align 4, !dbg !21007
  %v16 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %ed, i32 0, i32 0, !dbg !21008
  store i32 %9, i32* %v16, align 4, !dbg !21009
  %10 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !21010
  %v17 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %10, i32 0, i32 0, !dbg !21011
  %11 = load i32, i32* %v17, align 4, !dbg !21011
  %v28 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %ed, i32 0, i32 1, !dbg !21012
  store i32 %11, i32* %v28, align 4, !dbg !21013
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = bitcast %struct.edgesort* %ed to i8*, !dbg !21014
  %13 = load %struct.edgesort*, %struct.edgesort** %edgetable.addr, align 8, !dbg !21015
  %14 = bitcast %struct.edgesort* %13 to i8*, !dbg !21015
  %15 = load i32, i32* %totedge.addr, align 4, !dbg !21016
  %conv = sext i32 %15 to i64, !dbg !21016
  %call = call i8* @bsearch(i8* %12, i8* %14, i64 %conv, i64 20, i32 (i8*, i8*)* @vergedgesort), !dbg !21017
  %16 = bitcast i8* %call to %struct.edgesort*, !dbg !21017
  store %struct.edgesort* %16, %struct.edgesort** %edp, align 8, !dbg !21018
  %17 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21019
  %tobool = icmp ne %struct.edgesort* %17, null, !dbg !21019
  br i1 %tobool, label %if.then9, label %if.end74, !dbg !21021

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %mcn, align 4, !dbg !21022
  store i32 0, i32* %mtfn, align 4, !dbg !21024
  store i32 0, i32* %index, align 4, !dbg !21025
  br label %for.cond, !dbg !21027

for.cond:                                         ; preds = %for.inc, %if.then9
  %18 = load i32, i32* %index, align 4, !dbg !21028
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !21030
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 2, !dbg !21031
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData, i32 0, i32 2, !dbg !21032
  %20 = load i32, i32* %totlayer, align 4, !dbg !21032
  %cmp10 = icmp slt i32 %18, %20, !dbg !21033
  br i1 %cmp10, label %for.body, label %for.end, !dbg !21034

for.body:                                         ; preds = %for.cond
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !21035
  %faceData12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 2, !dbg !21037
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData12, i32 0, i32 0, !dbg !21038
  %22 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !21038
  %23 = load i32, i32* %index, align 4, !dbg !21039
  %idxprom = sext i32 %23 to i64, !dbg !21035
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %22, i64 %idxprom, !dbg !21035
  store %struct.CustomDataLayer* %arrayidx, %struct.CustomDataLayer** %layer, align 8, !dbg !21040
  %24 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !21041
  %name13 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %24, i32 0, i32 8, !dbg !21042
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name13, i64 0, i64 0, !dbg !21041
  store i8* %arraydecay, i8** %name, align 8, !dbg !21043
  %25 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !21044
  %type = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %25, i32 0, i32 0, !dbg !21046
  %26 = load i32, i32* %type, align 8, !dbg !21046
  %cmp14 = icmp eq i32 %26, 5, !dbg !21047
  br i1 %cmp14, label %land.lhs.true, label %if.else47, !dbg !21048

land.lhs.true:                                    ; preds = %for.body
  %27 = load i32, i32* %mtfn, align 4, !dbg !21049
  %cmp16 = icmp slt i32 %27, 8, !dbg !21050
  br i1 %cmp16, label %if.then18, label %if.else47, !dbg !21051

if.then18:                                        ; preds = %land.lhs.true
  %28 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !21052
  %data = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %28, i32 0, i32 9, !dbg !21054
  %29 = load i8*, i8** %data, align 8, !dbg !21054
  %30 = bitcast i8* %29 to %struct.MTFace*, !dbg !21055
  %31 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21056
  %f = getelementptr inbounds %struct.edgesort, %struct.edgesort* %31, i32 0, i32 2, !dbg !21057
  %32 = load i32, i32* %f, align 4, !dbg !21057
  %idxprom19 = sext i32 %32 to i64, !dbg !21058
  %arrayidx20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %30, i64 %idxprom19, !dbg !21058
  store %struct.MTFace* %arrayidx20, %struct.MTFace** %mtface, align 8, !dbg !21059
  %33 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21060
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !21061
  %35 = load i32, i32* %mtfn, align 4, !dbg !21062
  %inc = add nsw i32 %35, 1, !dbg !21062
  store i32 %inc, i32* %mtfn, align 4, !dbg !21062
  %call21 = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %33, %struct.VlakRen* %34, i32 %35, i8** %name, i32 1), !dbg !21063
  store %struct.MTFace* %call21, %struct.MTFace** %mtf, align 8, !dbg !21064
  %36 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !21065
  %37 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !21066
  %38 = bitcast %struct.MTFace* %36 to i8*, !dbg !21067
  %39 = bitcast %struct.MTFace* %37 to i8*, !dbg !21067
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 48, i1 false), !dbg !21067
  %40 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !21068
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %40, i32 0, i32 0, !dbg !21069
  %arrayidx22 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !21068
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx22, i64 0, i64 0, !dbg !21070
  %41 = bitcast float* %arraydecay23 to i8*, !dbg !21070
  %42 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !21071
  %uv24 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %42, i32 0, i32 0, !dbg !21072
  %43 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21073
  %i1 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %43, i32 0, i32 3, !dbg !21074
  %44 = load i32, i32* %i1, align 4, !dbg !21074
  %idxprom25 = zext i32 %44 to i64, !dbg !21071
  %arrayidx26 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv24, i64 0, i64 %idxprom25, !dbg !21071
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx26, i64 0, i64 0, !dbg !21070
  %45 = bitcast float* %arraydecay27 to i8*, !dbg !21070
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %45, i64 8, i1 false), !dbg !21070
  %46 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !21075
  %uv28 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %46, i32 0, i32 0, !dbg !21076
  %arrayidx29 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv28, i64 0, i64 1, !dbg !21075
  %arraydecay30 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx29, i64 0, i64 0, !dbg !21077
  %47 = bitcast float* %arraydecay30 to i8*, !dbg !21077
  %48 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !21078
  %uv31 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %48, i32 0, i32 0, !dbg !21079
  %49 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21080
  %i2 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %49, i32 0, i32 4, !dbg !21081
  %50 = load i32, i32* %i2, align 4, !dbg !21081
  %idxprom32 = zext i32 %50 to i64, !dbg !21078
  %arrayidx33 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv31, i64 0, i64 %idxprom32, !dbg !21078
  %arraydecay34 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx33, i64 0, i64 0, !dbg !21077
  %51 = bitcast float* %arraydecay34 to i8*, !dbg !21077
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %51, i64 8, i1 false), !dbg !21077
  %52 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !21082
  %uv35 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %52, i32 0, i32 0, !dbg !21083
  %arrayidx36 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv35, i64 0, i64 2, !dbg !21082
  %arraydecay37 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx36, i64 0, i64 0, !dbg !21084
  %53 = bitcast float* %arraydecay37 to i8*, !dbg !21084
  %54 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !21085
  %uv38 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %54, i32 0, i32 0, !dbg !21086
  %arrayidx39 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv38, i64 0, i64 1, !dbg !21085
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx39, i64 0, i64 0, !dbg !21084
  %55 = bitcast float* %arraydecay40 to i8*, !dbg !21084
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %55, i64 8, i1 false), !dbg !21084
  %56 = load %struct.MTFace*, %struct.MTFace** %mtf, align 8, !dbg !21087
  %uv41 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %56, i32 0, i32 0, !dbg !21088
  %arrayidx42 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv41, i64 0, i64 3, !dbg !21087
  %arraydecay43 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx42, i64 0, i64 0, !dbg !21089
  %57 = bitcast float* %arraydecay43 to i8*, !dbg !21089
  %58 = load %struct.MTFace*, %struct.MTFace** %mtface, align 8, !dbg !21090
  %uv44 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %58, i32 0, i32 0, !dbg !21091
  %arrayidx45 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv44, i64 0, i64 1, !dbg !21090
  %arraydecay46 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx45, i64 0, i64 0, !dbg !21089
  %59 = bitcast float* %arraydecay46 to i8*, !dbg !21089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %59, i64 8, i1 false), !dbg !21089
  br label %if.end72, !dbg !21092

if.else47:                                        ; preds = %land.lhs.true, %for.body
  %60 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !21093
  %type48 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %60, i32 0, i32 0, !dbg !21095
  %61 = load i32, i32* %type48, align 8, !dbg !21095
  %cmp49 = icmp eq i32 %61, 6, !dbg !21096
  br i1 %cmp49, label %land.lhs.true51, label %if.end71, !dbg !21097

land.lhs.true51:                                  ; preds = %if.else47
  %62 = load i32, i32* %mcn, align 4, !dbg !21098
  %cmp52 = icmp slt i32 %62, 8, !dbg !21099
  br i1 %cmp52, label %if.then54, label %if.end71, !dbg !21100

if.then54:                                        ; preds = %land.lhs.true51
  %63 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layer, align 8, !dbg !21101
  %data55 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %63, i32 0, i32 9, !dbg !21103
  %64 = load i8*, i8** %data55, align 8, !dbg !21103
  %65 = bitcast i8* %64 to %struct.MCol*, !dbg !21104
  %66 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21105
  %f56 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %66, i32 0, i32 2, !dbg !21106
  %67 = load i32, i32* %f56, align 4, !dbg !21106
  %mul = mul nsw i32 %67, 4, !dbg !21107
  %idxprom57 = sext i32 %mul to i64, !dbg !21108
  %arrayidx58 = getelementptr inbounds %struct.MCol, %struct.MCol* %65, i64 %idxprom57, !dbg !21108
  store %struct.MCol* %arrayidx58, %struct.MCol** %mcol, align 8, !dbg !21109
  %68 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21110
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !21111
  %70 = load i32, i32* %mcn, align 4, !dbg !21112
  %inc59 = add nsw i32 %70, 1, !dbg !21112
  store i32 %inc59, i32* %mcn, align 4, !dbg !21112
  %call60 = call %struct.MCol* @RE_vlakren_get_mcol(%struct.ObjectRen* %68, %struct.VlakRen* %69, i32 %70, i8** %name, i32 1), !dbg !21113
  store %struct.MCol* %call60, %struct.MCol** %mc, align 8, !dbg !21114
  %71 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !21115
  %arrayidx61 = getelementptr inbounds %struct.MCol, %struct.MCol* %71, i64 0, !dbg !21115
  %72 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !21116
  %73 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21117
  %i162 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %73, i32 0, i32 3, !dbg !21118
  %74 = load i32, i32* %i162, align 4, !dbg !21118
  %idxprom63 = zext i32 %74 to i64, !dbg !21116
  %arrayidx64 = getelementptr inbounds %struct.MCol, %struct.MCol* %72, i64 %idxprom63, !dbg !21116
  %75 = bitcast %struct.MCol* %arrayidx61 to i8*, !dbg !21116
  %76 = bitcast %struct.MCol* %arrayidx64 to i8*, !dbg !21116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %76, i64 4, i1 false), !dbg !21116
  %77 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !21119
  %arrayidx65 = getelementptr inbounds %struct.MCol, %struct.MCol* %77, i64 1, !dbg !21119
  %78 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !21120
  %arrayidx66 = getelementptr inbounds %struct.MCol, %struct.MCol* %78, i64 2, !dbg !21120
  %79 = load %struct.MCol*, %struct.MCol** %mc, align 8, !dbg !21121
  %arrayidx67 = getelementptr inbounds %struct.MCol, %struct.MCol* %79, i64 3, !dbg !21121
  %80 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !21122
  %81 = load %struct.edgesort*, %struct.edgesort** %edp, align 8, !dbg !21123
  %i268 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %81, i32 0, i32 4, !dbg !21124
  %82 = load i32, i32* %i268, align 4, !dbg !21124
  %idxprom69 = zext i32 %82 to i64, !dbg !21122
  %arrayidx70 = getelementptr inbounds %struct.MCol, %struct.MCol* %80, i64 %idxprom69, !dbg !21122
  %83 = bitcast %struct.MCol* %arrayidx67 to i8*, !dbg !21122
  %84 = bitcast %struct.MCol* %arrayidx70 to i8*, !dbg !21122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %83, i8* align 1 %84, i64 4, i1 false), !dbg !21122
  %85 = bitcast %struct.MCol* %arrayidx66 to i8*, !dbg !21125
  %86 = bitcast %struct.MCol* %arrayidx67 to i8*, !dbg !21125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 4, i1 false), !dbg !21125
  %87 = bitcast %struct.MCol* %arrayidx65 to i8*, !dbg !21126
  %88 = bitcast %struct.MCol* %arrayidx66 to i8*, !dbg !21126
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %87, i8* align 1 %88, i64 4, i1 false), !dbg !21126
  br label %if.end71, !dbg !21127

if.end71:                                         ; preds = %if.then54, %land.lhs.true51, %if.else47
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then18
  br label %for.inc, !dbg !21128

for.inc:                                          ; preds = %if.end72
  %89 = load i32, i32* %index, align 4, !dbg !21129
  %inc73 = add nsw i32 %89, 1, !dbg !21129
  store i32 %inc73, i32* %index, align 4, !dbg !21129
  br label %for.cond, !dbg !21130, !llvm.loop !21131

for.end:                                          ; preds = %for.cond
  br label %if.end74, !dbg !21133

if.end74:                                         ; preds = %for.end, %if.end
  ret void, !dbg !21134
}

; Function Attrs: noinline nounwind uwtable
define internal void @calc_edge_stress(%struct.Render* %UNUSED_re, %struct.ObjectRen* %obr, %struct.Mesh* %me) #0 !dbg !21135 {
entry:
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %me.addr = alloca %struct.Mesh*, align 8
  %loc = alloca [3 x float], align 4
  %size = alloca [3 x float], align 4
  %accum = alloca float*, align 8
  %acc = alloca float*, align 8
  %accumoffs = alloca float*, align 8
  %stress = alloca float*, align 8
  %a = alloca i32, align 4
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %ver63 = alloca %struct.VertRen*, align 8
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !21138, metadata !DIExpression()), !dbg !21139
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !21140, metadata !DIExpression()), !dbg !21141
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !21142, metadata !DIExpression()), !dbg !21143
  call void @llvm.dbg.declare(metadata [3 x float]* %loc, metadata !21144, metadata !DIExpression()), !dbg !21145
  call void @llvm.dbg.declare(metadata [3 x float]* %size, metadata !21146, metadata !DIExpression()), !dbg !21147
  call void @llvm.dbg.declare(metadata float** %accum, metadata !21148, metadata !DIExpression()), !dbg !21149
  call void @llvm.dbg.declare(metadata float** %acc, metadata !21150, metadata !DIExpression()), !dbg !21151
  call void @llvm.dbg.declare(metadata float** %accumoffs, metadata !21152, metadata !DIExpression()), !dbg !21153
  call void @llvm.dbg.declare(metadata float** %stress, metadata !21154, metadata !DIExpression()), !dbg !21155
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21156, metadata !DIExpression()), !dbg !21157
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21158
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 10, !dbg !21160
  %1 = load i32, i32* %totvert, align 8, !dbg !21160
  %cmp = icmp eq i32 %1, 0, !dbg !21161
  br i1 %cmp, label %if.then, label %if.end, !dbg !21162

if.then:                                          ; preds = %entry
  br label %return, !dbg !21163

if.end:                                           ; preds = %entry
  %2 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !21164
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !21165
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !21166
  call void @BKE_mesh_texspace_get(%struct.Mesh* %2, float* %arraydecay, float* null, float* %arraydecay1), !dbg !21167
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21168
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21169
  %totvert2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 10, !dbg !21170
  %5 = load i32, i32* %totvert2, align 8, !dbg !21170
  %conv = sext i32 %5 to i64, !dbg !21169
  %mul = mul i64 8, %conv, !dbg !21171
  %call = call i8* %3(i64 %mul, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)), !dbg !21168
  %6 = bitcast i8* %call to float*, !dbg !21168
  store float* %6, float** %accum, align 8, !dbg !21172
  store i32 0, i32* %a, align 4, !dbg !21173
  br label %for.cond, !dbg !21175

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %a, align 4, !dbg !21176
  %8 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21178
  %totvert3 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %8, i32 0, i32 10, !dbg !21179
  %9 = load i32, i32* %totvert3, align 8, !dbg !21179
  %cmp4 = icmp slt i32 %7, %9, !dbg !21180
  br i1 %cmp4, label %for.body, label %for.end, !dbg !21181

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !21182, metadata !DIExpression()), !dbg !21184
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21185
  %11 = load i32, i32* %a, align 4, !dbg !21186
  %call6 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %10, i32 %11), !dbg !21187
  store %struct.VertRen* %call6, %struct.VertRen** %ver, align 8, !dbg !21184
  %12 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21188
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %12, i32 0, i32 2, !dbg !21190
  %13 = load float*, float** %orco, align 8, !dbg !21190
  %tobool = icmp ne float* %13, null, !dbg !21188
  br i1 %tobool, label %if.then7, label %if.end30, !dbg !21191

if.then7:                                         ; preds = %for.body
  %14 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21192
  %orco8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 2, !dbg !21194
  %15 = load float*, float** %orco8, align 8, !dbg !21194
  %arrayidx = getelementptr inbounds float, float* %15, i64 0, !dbg !21192
  %16 = load float, float* %arrayidx, align 4, !dbg !21192
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !21195
  %17 = load float, float* %arrayidx9, align 4, !dbg !21195
  %mul10 = fmul float %16, %17, !dbg !21196
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !21197
  %18 = load float, float* %arrayidx11, align 4, !dbg !21197
  %add = fadd float %mul10, %18, !dbg !21198
  %19 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21199
  %orco12 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 2, !dbg !21200
  %20 = load float*, float** %orco12, align 8, !dbg !21200
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 0, !dbg !21199
  store float %add, float* %arrayidx13, align 4, !dbg !21201
  %21 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21202
  %orco14 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %21, i32 0, i32 2, !dbg !21203
  %22 = load float*, float** %orco14, align 8, !dbg !21203
  %arrayidx15 = getelementptr inbounds float, float* %22, i64 1, !dbg !21202
  %23 = load float, float* %arrayidx15, align 4, !dbg !21202
  %arrayidx16 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !21204
  %24 = load float, float* %arrayidx16, align 4, !dbg !21204
  %mul17 = fmul float %23, %24, !dbg !21205
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !21206
  %25 = load float, float* %arrayidx18, align 4, !dbg !21206
  %add19 = fadd float %mul17, %25, !dbg !21207
  %26 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21208
  %orco20 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %26, i32 0, i32 2, !dbg !21209
  %27 = load float*, float** %orco20, align 8, !dbg !21209
  %arrayidx21 = getelementptr inbounds float, float* %27, i64 1, !dbg !21208
  store float %add19, float* %arrayidx21, align 4, !dbg !21210
  %28 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21211
  %orco22 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %28, i32 0, i32 2, !dbg !21212
  %29 = load float*, float** %orco22, align 8, !dbg !21212
  %arrayidx23 = getelementptr inbounds float, float* %29, i64 2, !dbg !21211
  %30 = load float, float* %arrayidx23, align 4, !dbg !21211
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !21213
  %31 = load float, float* %arrayidx24, align 4, !dbg !21213
  %mul25 = fmul float %30, %31, !dbg !21214
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !21215
  %32 = load float, float* %arrayidx26, align 4, !dbg !21215
  %add27 = fadd float %mul25, %32, !dbg !21216
  %33 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21217
  %orco28 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %33, i32 0, i32 2, !dbg !21218
  %34 = load float*, float** %orco28, align 8, !dbg !21218
  %arrayidx29 = getelementptr inbounds float, float* %34, i64 2, !dbg !21217
  store float %add27, float* %arrayidx29, align 4, !dbg !21219
  br label %if.end30, !dbg !21220

if.end30:                                         ; preds = %if.then7, %for.body
  br label %for.inc, !dbg !21221

for.inc:                                          ; preds = %if.end30
  %35 = load i32, i32* %a, align 4, !dbg !21222
  %inc = add nsw i32 %35, 1, !dbg !21222
  store i32 %inc, i32* %a, align 4, !dbg !21222
  br label %for.cond, !dbg !21223, !llvm.loop !21224

for.end:                                          ; preds = %for.cond
  %36 = load float*, float** %accum, align 8, !dbg !21226
  store float* %36, float** %accumoffs, align 8, !dbg !21227
  store i32 0, i32* %a, align 4, !dbg !21228
  br label %for.cond31, !dbg !21230

for.cond31:                                       ; preds = %for.inc55, %for.end
  %37 = load i32, i32* %a, align 4, !dbg !21231
  %38 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21233
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %38, i32 0, i32 11, !dbg !21234
  %39 = load i32, i32* %totvlak, align 4, !dbg !21234
  %cmp32 = icmp slt i32 %37, %39, !dbg !21235
  br i1 %cmp32, label %for.body34, label %for.end57, !dbg !21236

for.body34:                                       ; preds = %for.cond31
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !21237, metadata !DIExpression()), !dbg !21239
  %40 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21240
  %41 = load i32, i32* %a, align 4, !dbg !21241
  %call35 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %40, i32 %41), !dbg !21242
  store %struct.VlakRen* %call35, %struct.VlakRen** %vlr, align 8, !dbg !21239
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21243
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %42, i32 0, i32 0, !dbg !21245
  %43 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !21245
  %orco36 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 2, !dbg !21246
  %44 = load float*, float** %orco36, align 8, !dbg !21246
  %tobool37 = icmp ne float* %44, null, !dbg !21243
  br i1 %tobool37, label %land.lhs.true, label %if.end54, !dbg !21247

land.lhs.true:                                    ; preds = %for.body34
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21248
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 3, !dbg !21249
  %46 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !21249
  %tobool38 = icmp ne %struct.VertRen* %46, null, !dbg !21248
  br i1 %tobool38, label %if.then39, label %if.end54, !dbg !21250

if.then39:                                        ; preds = %land.lhs.true
  %47 = load float*, float** %accumoffs, align 8, !dbg !21251
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21253
  %v140 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %48, i32 0, i32 0, !dbg !21254
  %49 = load %struct.VertRen*, %struct.VertRen** %v140, align 8, !dbg !21254
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21255
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %50, i32 0, i32 1, !dbg !21256
  %51 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !21256
  call void @calc_edge_stress_add(float* %47, %struct.VertRen* %49, %struct.VertRen* %51), !dbg !21257
  %52 = load float*, float** %accumoffs, align 8, !dbg !21258
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21259
  %v241 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 0, i32 1, !dbg !21260
  %54 = load %struct.VertRen*, %struct.VertRen** %v241, align 8, !dbg !21260
  %55 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21261
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %55, i32 0, i32 2, !dbg !21262
  %56 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !21262
  call void @calc_edge_stress_add(float* %52, %struct.VertRen* %54, %struct.VertRen* %56), !dbg !21263
  %57 = load float*, float** %accumoffs, align 8, !dbg !21264
  %58 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21265
  %v342 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %58, i32 0, i32 2, !dbg !21266
  %59 = load %struct.VertRen*, %struct.VertRen** %v342, align 8, !dbg !21266
  %60 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21267
  %v143 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %60, i32 0, i32 0, !dbg !21268
  %61 = load %struct.VertRen*, %struct.VertRen** %v143, align 8, !dbg !21268
  call void @calc_edge_stress_add(float* %57, %struct.VertRen* %59, %struct.VertRen* %61), !dbg !21269
  %62 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21270
  %v444 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %62, i32 0, i32 3, !dbg !21272
  %63 = load %struct.VertRen*, %struct.VertRen** %v444, align 8, !dbg !21272
  %tobool45 = icmp ne %struct.VertRen* %63, null, !dbg !21270
  br i1 %tobool45, label %if.then46, label %if.end53, !dbg !21273

if.then46:                                        ; preds = %if.then39
  %64 = load float*, float** %accumoffs, align 8, !dbg !21274
  %65 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21276
  %v347 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %65, i32 0, i32 2, !dbg !21277
  %66 = load %struct.VertRen*, %struct.VertRen** %v347, align 8, !dbg !21277
  %67 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21278
  %v448 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %67, i32 0, i32 3, !dbg !21279
  %68 = load %struct.VertRen*, %struct.VertRen** %v448, align 8, !dbg !21279
  call void @calc_edge_stress_add(float* %64, %struct.VertRen* %66, %struct.VertRen* %68), !dbg !21280
  %69 = load float*, float** %accumoffs, align 8, !dbg !21281
  %70 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21282
  %v449 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %70, i32 0, i32 3, !dbg !21283
  %71 = load %struct.VertRen*, %struct.VertRen** %v449, align 8, !dbg !21283
  %72 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21284
  %v150 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %72, i32 0, i32 0, !dbg !21285
  %73 = load %struct.VertRen*, %struct.VertRen** %v150, align 8, !dbg !21285
  call void @calc_edge_stress_add(float* %69, %struct.VertRen* %71, %struct.VertRen* %73), !dbg !21286
  %74 = load float*, float** %accumoffs, align 8, !dbg !21287
  %75 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21288
  %v251 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %75, i32 0, i32 1, !dbg !21289
  %76 = load %struct.VertRen*, %struct.VertRen** %v251, align 8, !dbg !21289
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21290
  %v452 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %77, i32 0, i32 3, !dbg !21291
  %78 = load %struct.VertRen*, %struct.VertRen** %v452, align 8, !dbg !21291
  call void @calc_edge_stress_add(float* %74, %struct.VertRen* %76, %struct.VertRen* %78), !dbg !21292
  br label %if.end53, !dbg !21293

if.end53:                                         ; preds = %if.then46, %if.then39
  br label %if.end54, !dbg !21294

if.end54:                                         ; preds = %if.end53, %land.lhs.true, %for.body34
  br label %for.inc55, !dbg !21295

for.inc55:                                        ; preds = %if.end54
  %79 = load i32, i32* %a, align 4, !dbg !21296
  %inc56 = add nsw i32 %79, 1, !dbg !21296
  store i32 %inc56, i32* %a, align 4, !dbg !21296
  br label %for.cond31, !dbg !21297, !llvm.loop !21298

for.end57:                                        ; preds = %for.cond31
  store i32 0, i32* %a, align 4, !dbg !21300
  br label %for.cond58, !dbg !21302

for.cond58:                                       ; preds = %for.inc101, %for.end57
  %80 = load i32, i32* %a, align 4, !dbg !21303
  %81 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21305
  %totvert59 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %81, i32 0, i32 10, !dbg !21306
  %82 = load i32, i32* %totvert59, align 8, !dbg !21306
  %cmp60 = icmp slt i32 %80, %82, !dbg !21307
  br i1 %cmp60, label %for.body62, label %for.end103, !dbg !21308

for.body62:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver63, metadata !21309, metadata !DIExpression()), !dbg !21311
  %83 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21312
  %84 = load i32, i32* %a, align 4, !dbg !21313
  %call64 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %83, i32 %84), !dbg !21314
  store %struct.VertRen* %call64, %struct.VertRen** %ver63, align 8, !dbg !21311
  %85 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21315
  %orco65 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %85, i32 0, i32 2, !dbg !21317
  %86 = load float*, float** %orco65, align 8, !dbg !21317
  %tobool66 = icmp ne float* %86, null, !dbg !21315
  br i1 %tobool66, label %if.then67, label %if.end100, !dbg !21318

if.then67:                                        ; preds = %for.body62
  %87 = load float*, float** %accumoffs, align 8, !dbg !21319
  %88 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21321
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %88, i32 0, i32 5, !dbg !21322
  %89 = load i32, i32* %index, align 8, !dbg !21322
  %mul68 = mul nsw i32 2, %89, !dbg !21323
  %idx.ext = sext i32 %mul68 to i64, !dbg !21324
  %add.ptr = getelementptr inbounds float, float* %87, i64 %idx.ext, !dbg !21324
  store float* %add.ptr, float** %acc, align 8, !dbg !21325
  %90 = load float*, float** %acc, align 8, !dbg !21326
  %arrayidx69 = getelementptr inbounds float, float* %90, i64 1, !dbg !21326
  %91 = load float, float* %arrayidx69, align 4, !dbg !21326
  %cmp70 = fcmp une float %91, 0.000000e+00, !dbg !21328
  br i1 %cmp70, label %if.then72, label %if.end75, !dbg !21329

if.then72:                                        ; preds = %if.then67
  %92 = load float*, float** %acc, align 8, !dbg !21330
  %arrayidx73 = getelementptr inbounds float, float* %92, i64 1, !dbg !21330
  %93 = load float, float* %arrayidx73, align 4, !dbg !21330
  %94 = load float*, float** %acc, align 8, !dbg !21331
  %arrayidx74 = getelementptr inbounds float, float* %94, i64 0, !dbg !21331
  %95 = load float, float* %arrayidx74, align 4, !dbg !21332
  %div = fdiv float %95, %93, !dbg !21332
  store float %div, float* %arrayidx74, align 4, !dbg !21332
  br label %if.end75, !dbg !21331

if.end75:                                         ; preds = %if.then72, %if.then67
  %96 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21333
  %97 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21334
  %call76 = call float* @RE_vertren_get_stress(%struct.ObjectRen* %96, %struct.VertRen* %97, i32 1), !dbg !21335
  store float* %call76, float** %stress, align 8, !dbg !21336
  %98 = load float*, float** %acc, align 8, !dbg !21337
  %99 = load float, float* %98, align 4, !dbg !21338
  %100 = load float*, float** %stress, align 8, !dbg !21339
  store float %99, float* %100, align 4, !dbg !21340
  %101 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21341
  %orco77 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %101, i32 0, i32 2, !dbg !21342
  %102 = load float*, float** %orco77, align 8, !dbg !21342
  %arrayidx78 = getelementptr inbounds float, float* %102, i64 0, !dbg !21341
  %103 = load float, float* %arrayidx78, align 4, !dbg !21341
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !21343
  %104 = load float, float* %arrayidx79, align 4, !dbg !21343
  %sub = fsub float %103, %104, !dbg !21344
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !21345
  %105 = load float, float* %arrayidx80, align 4, !dbg !21345
  %div81 = fdiv float %sub, %105, !dbg !21346
  %106 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21347
  %orco82 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %106, i32 0, i32 2, !dbg !21348
  %107 = load float*, float** %orco82, align 8, !dbg !21348
  %arrayidx83 = getelementptr inbounds float, float* %107, i64 0, !dbg !21347
  store float %div81, float* %arrayidx83, align 4, !dbg !21349
  %108 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21350
  %orco84 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %108, i32 0, i32 2, !dbg !21351
  %109 = load float*, float** %orco84, align 8, !dbg !21351
  %arrayidx85 = getelementptr inbounds float, float* %109, i64 1, !dbg !21350
  %110 = load float, float* %arrayidx85, align 4, !dbg !21350
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 1, !dbg !21352
  %111 = load float, float* %arrayidx86, align 4, !dbg !21352
  %sub87 = fsub float %110, %111, !dbg !21353
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 1, !dbg !21354
  %112 = load float, float* %arrayidx88, align 4, !dbg !21354
  %div89 = fdiv float %sub87, %112, !dbg !21355
  %113 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21356
  %orco90 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %113, i32 0, i32 2, !dbg !21357
  %114 = load float*, float** %orco90, align 8, !dbg !21357
  %arrayidx91 = getelementptr inbounds float, float* %114, i64 1, !dbg !21356
  store float %div89, float* %arrayidx91, align 4, !dbg !21358
  %115 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21359
  %orco92 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %115, i32 0, i32 2, !dbg !21360
  %116 = load float*, float** %orco92, align 8, !dbg !21360
  %arrayidx93 = getelementptr inbounds float, float* %116, i64 2, !dbg !21359
  %117 = load float, float* %arrayidx93, align 4, !dbg !21359
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 2, !dbg !21361
  %118 = load float, float* %arrayidx94, align 4, !dbg !21361
  %sub95 = fsub float %117, %118, !dbg !21362
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 2, !dbg !21363
  %119 = load float, float* %arrayidx96, align 4, !dbg !21363
  %div97 = fdiv float %sub95, %119, !dbg !21364
  %120 = load %struct.VertRen*, %struct.VertRen** %ver63, align 8, !dbg !21365
  %orco98 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %120, i32 0, i32 2, !dbg !21366
  %121 = load float*, float** %orco98, align 8, !dbg !21366
  %arrayidx99 = getelementptr inbounds float, float* %121, i64 2, !dbg !21365
  store float %div97, float* %arrayidx99, align 4, !dbg !21367
  br label %if.end100, !dbg !21368

if.end100:                                        ; preds = %if.end75, %for.body62
  br label %for.inc101, !dbg !21369

for.inc101:                                       ; preds = %if.end100
  %122 = load i32, i32* %a, align 4, !dbg !21370
  %inc102 = add nsw i32 %122, 1, !dbg !21370
  store i32 %inc102, i32* %a, align 4, !dbg !21370
  br label %for.cond58, !dbg !21371, !llvm.loop !21372

for.end103:                                       ; preds = %for.cond58
  %123 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !21374
  %124 = load float*, float** %accum, align 8, !dbg !21375
  %125 = bitcast float* %124 to i8*, !dbg !21375
  call void %123(i8* %125), !dbg !21374
  br label %return, !dbg !21376

return:                                           ; preds = %for.end103, %if.then
  ret void, !dbg !21376
}

; Function Attrs: noinline nounwind uwtable
define internal void @displace(%struct.Render* %re, %struct.ObjectRen* %obr) #0 !dbg !21377 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vr = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %scale = alloca [3 x float], align 4
  %temp = alloca [3 x float], align 4
  %i = alloca i32, align 4
  %obt = alloca %struct.Object*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !21378, metadata !DIExpression()), !dbg !21379
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !21380, metadata !DIExpression()), !dbg !21381
  call void @llvm.dbg.declare(metadata %struct.VertRen** %vr, metadata !21382, metadata !DIExpression()), !dbg !21383
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !21384, metadata !DIExpression()), !dbg !21385
  call void @llvm.dbg.declare(metadata [3 x float]* %scale, metadata !21386, metadata !DIExpression()), !dbg !21387
  %0 = bitcast [3 x float]* %scale to i8*, !dbg !21387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast ([3 x float]* @__const.displace.scale to i8*), i64 12, i1 false), !dbg !21387
  call void @llvm.dbg.declare(metadata [3 x float]* %temp, metadata !21388, metadata !DIExpression()), !dbg !21389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21390, metadata !DIExpression()), !dbg !21391
  call void @llvm.dbg.declare(metadata %struct.Object** %obt, metadata !21392, metadata !DIExpression()), !dbg !21393
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21394
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 2, !dbg !21395
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !21395
  store %struct.Object* %2, %struct.Object** %obt, align 8, !dbg !21396
  br label %while.cond, !dbg !21397

while.cond:                                       ; preds = %while.body, %entry
  %3 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !21398
  %tobool = icmp ne %struct.Object* %3, null, !dbg !21397
  br i1 %tobool, label %while.body, label %while.end, !dbg !21397

while.body:                                       ; preds = %while.cond
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21399
  %4 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !21401
  %size = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 36, !dbg !21402
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !21401
  %5 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !21403
  %dscale = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 38, !dbg !21404
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %dscale, i64 0, i64 0, !dbg !21403
  call void @mul_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !21405
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 0, !dbg !21406
  %6 = load float, float* %arrayidx, align 4, !dbg !21406
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !21407
  %7 = load float, float* %arrayidx3, align 4, !dbg !21408
  %mul = fmul float %7, %6, !dbg !21408
  store float %mul, float* %arrayidx3, align 4, !dbg !21408
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 1, !dbg !21409
  %8 = load float, float* %arrayidx4, align 4, !dbg !21409
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !21410
  %9 = load float, float* %arrayidx5, align 4, !dbg !21411
  %mul6 = fmul float %9, %8, !dbg !21411
  store float %mul6, float* %arrayidx5, align 4, !dbg !21411
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %temp, i64 0, i64 2, !dbg !21412
  %10 = load float, float* %arrayidx7, align 4, !dbg !21412
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !21413
  %11 = load float, float* %arrayidx8, align 4, !dbg !21414
  %mul9 = fmul float %11, %10, !dbg !21414
  store float %mul9, float* %arrayidx8, align 4, !dbg !21414
  %12 = load %struct.Object*, %struct.Object** %obt, align 8, !dbg !21415
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 9, !dbg !21416
  %13 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !21416
  store %struct.Object* %13, %struct.Object** %obt, align 8, !dbg !21417
  br label %while.cond, !dbg !21397, !llvm.loop !21418

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %i, align 4, !dbg !21420
  br label %for.cond, !dbg !21422

for.cond:                                         ; preds = %for.inc, %while.end
  %14 = load i32, i32* %i, align 4, !dbg !21423
  %15 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21425
  %totvert = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %15, i32 0, i32 10, !dbg !21426
  %16 = load i32, i32* %totvert, align 8, !dbg !21426
  %cmp = icmp slt i32 %14, %16, !dbg !21427
  br i1 %cmp, label %for.body, label %for.end, !dbg !21428

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21429
  %18 = load i32, i32* %i, align 4, !dbg !21431
  %call = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %17, i32 %18), !dbg !21432
  store %struct.VertRen* %call, %struct.VertRen** %vr, align 8, !dbg !21433
  %19 = load %struct.VertRen*, %struct.VertRen** %vr, align 8, !dbg !21434
  %flag = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 3, !dbg !21435
  store i32 0, i32* %flag, align 8, !dbg !21436
  br label %for.inc, !dbg !21437

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !21438
  %inc = add nsw i32 %20, 1, !dbg !21438
  store i32 %inc, i32* %i, align 4, !dbg !21438
  br label %for.cond, !dbg !21439, !llvm.loop !21440

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !21442
  br label %for.cond10, !dbg !21444

for.cond10:                                       ; preds = %for.inc15, %for.end
  %21 = load i32, i32* %i, align 4, !dbg !21445
  %22 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21447
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %22, i32 0, i32 11, !dbg !21448
  %23 = load i32, i32* %totvlak, align 4, !dbg !21448
  %cmp11 = icmp slt i32 %21, %23, !dbg !21449
  br i1 %cmp11, label %for.body12, label %for.end17, !dbg !21450

for.body12:                                       ; preds = %for.cond10
  %24 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21451
  %25 = load i32, i32* %i, align 4, !dbg !21453
  %call13 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %24, i32 %25), !dbg !21454
  store %struct.VlakRen* %call13, %struct.VlakRen** %vlr, align 8, !dbg !21455
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !21456
  %27 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21457
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21458
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !21459
  call void @displace_render_face(%struct.Render* %26, %struct.ObjectRen* %27, %struct.VlakRen* %28, float* %arraydecay14), !dbg !21460
  br label %for.inc15, !dbg !21461

for.inc15:                                        ; preds = %for.body12
  %29 = load i32, i32* %i, align 4, !dbg !21462
  %inc16 = add nsw i32 %29, 1, !dbg !21462
  store i32 %inc16, i32* %i, align 4, !dbg !21462
  br label %for.cond10, !dbg !21463, !llvm.loop !21464

for.end17:                                        ; preds = %for.cond10
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !21466
  %31 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21467
  call void @calc_vertexnormals(%struct.Render* %30, %struct.ObjectRen* %31, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0), !dbg !21468
  ret void, !dbg !21469
}

; Function Attrs: noinline nounwind uwtable
define internal void @autosmooth(%struct.Render* %UNUSED_re, %struct.ObjectRen* %obr, [4 x float]* %mat, [4 x [3 x i16]]* %lnors) #0 !dbg !21470 {
entry:
  %UNUSED_re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %lnors.addr = alloca [4 x [3 x i16]]*, align 8
  %asverts = alloca %struct.ASvert*, align 8
  %ver = alloca %struct.VertRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  %totvert = alloca i32, align 4
  store %struct.Render* %UNUSED_re, %struct.Render** %UNUSED_re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %UNUSED_re.addr, metadata !21473, metadata !DIExpression()), !dbg !21474
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !21475, metadata !DIExpression()), !dbg !21476
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !21477, metadata !DIExpression()), !dbg !21478
  store [4 x [3 x i16]]* %lnors, [4 x [3 x i16]]** %lnors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors.addr, metadata !21479, metadata !DIExpression()), !dbg !21480
  call void @llvm.dbg.declare(metadata %struct.ASvert** %asverts, metadata !21481, metadata !DIExpression()), !dbg !21488
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver, metadata !21489, metadata !DIExpression()), !dbg !21490
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !21491, metadata !DIExpression()), !dbg !21492
  call void @llvm.dbg.declare(metadata i32* %a, metadata !21493, metadata !DIExpression()), !dbg !21494
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !21495, metadata !DIExpression()), !dbg !21496
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21497
  %totvert1 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 10, !dbg !21499
  %1 = load i32, i32* %totvert1, align 8, !dbg !21499
  %cmp = icmp eq i32 %1, 0, !dbg !21500
  br i1 %cmp, label %if.then, label %if.end, !dbg !21501

if.then:                                          ; preds = %entry
  br label %for.end113, !dbg !21502

if.end:                                           ; preds = %entry
  %2 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21503
  %totvert2 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %2, i32 0, i32 10, !dbg !21504
  %3 = load i32, i32* %totvert2, align 8, !dbg !21504
  store i32 %3, i32* %totvert, align 4, !dbg !21505
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !21506
  %5 = load i32, i32* %totvert, align 4, !dbg !21507
  %conv = sext i32 %5 to i64, !dbg !21507
  %mul = mul i64 24, %conv, !dbg !21508
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)), !dbg !21506
  %6 = bitcast i8* %call to %struct.ASvert*, !dbg !21506
  store %struct.ASvert* %6, %struct.ASvert** %asverts, align 8, !dbg !21509
  %7 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21510
  %tobool = icmp ne [4 x [3 x i16]]* %7, null, !dbg !21510
  br i1 %tobool, label %if.then3, label %if.end40, !dbg !21512

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %a, align 4, !dbg !21513
  br label %for.cond, !dbg !21516

for.cond:                                         ; preds = %for.inc, %if.then3
  %8 = load i32, i32* %a, align 4, !dbg !21517
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21519
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 11, !dbg !21520
  %10 = load i32, i32* %totvlak, align 4, !dbg !21520
  %cmp4 = icmp slt i32 %8, %10, !dbg !21521
  br i1 %cmp4, label %for.body, label %for.end, !dbg !21522

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21523
  %12 = load i32, i32* %a, align 4, !dbg !21525
  %call6 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %11, i32 %12), !dbg !21526
  store %struct.VlakRen* %call6, %struct.VlakRen** %vlr, align 8, !dbg !21527
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21528
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %13, i32 0, i32 1, !dbg !21530
  %14 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !21530
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21531
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %15, i32 0, i32 2, !dbg !21532
  %16 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !21532
  %cmp7 = icmp ne %struct.VertRen* %14, %16, !dbg !21533
  br i1 %cmp7, label %if.then9, label %if.end39, !dbg !21534

if.then9:                                         ; preds = %for.body
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21535
  %18 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21537
  %19 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21538
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %19, i32 0, i32 0, !dbg !21539
  %20 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !21539
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %20, i32 0, i32 5, !dbg !21540
  %21 = load i32, i32* %index, align 8, !dbg !21540
  %idx.ext = sext i32 %21 to i64, !dbg !21541
  %add.ptr = getelementptr inbounds %struct.ASvert, %struct.ASvert* %18, i64 %idx.ext, !dbg !21541
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21542
  %v110 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 0, !dbg !21543
  %23 = load %struct.VertRen*, %struct.VertRen** %v110, align 8, !dbg !21543
  %24 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21544
  %25 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21545
  %arrayidx = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %25, i64 0, !dbg !21545
  %arrayidx11 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx, i64 0, i64 0, !dbg !21545
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx11, i64 0, i64 0, !dbg !21545
  call void @as_addvert_lnor(%struct.ObjectRen* %17, %struct.ASvert* %add.ptr, %struct.VertRen* %23, %struct.VlakRen* %24, i16* %arraydecay), !dbg !21546
  %26 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21547
  %27 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21548
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21549
  %v212 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %28, i32 0, i32 1, !dbg !21550
  %29 = load %struct.VertRen*, %struct.VertRen** %v212, align 8, !dbg !21550
  %index13 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %29, i32 0, i32 5, !dbg !21551
  %30 = load i32, i32* %index13, align 8, !dbg !21551
  %idx.ext14 = sext i32 %30 to i64, !dbg !21552
  %add.ptr15 = getelementptr inbounds %struct.ASvert, %struct.ASvert* %27, i64 %idx.ext14, !dbg !21552
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21553
  %v216 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 1, !dbg !21554
  %32 = load %struct.VertRen*, %struct.VertRen** %v216, align 8, !dbg !21554
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21555
  %34 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21556
  %arrayidx17 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %34, i64 0, !dbg !21556
  %arrayidx18 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx17, i64 0, i64 1, !dbg !21556
  %arraydecay19 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx18, i64 0, i64 0, !dbg !21556
  call void @as_addvert_lnor(%struct.ObjectRen* %26, %struct.ASvert* %add.ptr15, %struct.VertRen* %32, %struct.VlakRen* %33, i16* %arraydecay19), !dbg !21557
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21558
  %36 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21559
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21560
  %v320 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %37, i32 0, i32 2, !dbg !21561
  %38 = load %struct.VertRen*, %struct.VertRen** %v320, align 8, !dbg !21561
  %index21 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %38, i32 0, i32 5, !dbg !21562
  %39 = load i32, i32* %index21, align 8, !dbg !21562
  %idx.ext22 = sext i32 %39 to i64, !dbg !21563
  %add.ptr23 = getelementptr inbounds %struct.ASvert, %struct.ASvert* %36, i64 %idx.ext22, !dbg !21563
  %40 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21564
  %v324 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %40, i32 0, i32 2, !dbg !21565
  %41 = load %struct.VertRen*, %struct.VertRen** %v324, align 8, !dbg !21565
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21566
  %43 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21567
  %arrayidx25 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %43, i64 0, !dbg !21567
  %arrayidx26 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx25, i64 0, i64 2, !dbg !21567
  %arraydecay27 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx26, i64 0, i64 0, !dbg !21567
  call void @as_addvert_lnor(%struct.ObjectRen* %35, %struct.ASvert* %add.ptr23, %struct.VertRen* %41, %struct.VlakRen* %42, i16* %arraydecay27), !dbg !21568
  %44 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21569
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %44, i32 0, i32 3, !dbg !21571
  %45 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !21571
  %tobool28 = icmp ne %struct.VertRen* %45, null, !dbg !21569
  br i1 %tobool28, label %if.then29, label %if.end38, !dbg !21572

if.then29:                                        ; preds = %if.then9
  %46 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21573
  %47 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21574
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21575
  %v430 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %48, i32 0, i32 3, !dbg !21576
  %49 = load %struct.VertRen*, %struct.VertRen** %v430, align 8, !dbg !21576
  %index31 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %49, i32 0, i32 5, !dbg !21577
  %50 = load i32, i32* %index31, align 8, !dbg !21577
  %idx.ext32 = sext i32 %50 to i64, !dbg !21578
  %add.ptr33 = getelementptr inbounds %struct.ASvert, %struct.ASvert* %47, i64 %idx.ext32, !dbg !21578
  %51 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21579
  %v434 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %51, i32 0, i32 3, !dbg !21580
  %52 = load %struct.VertRen*, %struct.VertRen** %v434, align 8, !dbg !21580
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21581
  %54 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21582
  %arrayidx35 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %54, i64 0, !dbg !21582
  %arrayidx36 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx35, i64 0, i64 3, !dbg !21582
  %arraydecay37 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx36, i64 0, i64 0, !dbg !21582
  call void @as_addvert_lnor(%struct.ObjectRen* %46, %struct.ASvert* %add.ptr33, %struct.VertRen* %52, %struct.VlakRen* %53, i16* %arraydecay37), !dbg !21583
  br label %if.end38, !dbg !21583

if.end38:                                         ; preds = %if.then29, %if.then9
  br label %if.end39, !dbg !21584

if.end39:                                         ; preds = %if.end38, %for.body
  br label %for.inc, !dbg !21585

for.inc:                                          ; preds = %if.end39
  %55 = load i32, i32* %a, align 4, !dbg !21586
  %inc = add nsw i32 %55, 1, !dbg !21586
  store i32 %inc, i32* %a, align 4, !dbg !21586
  %56 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21587
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %56, i32 1, !dbg !21587
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21587
  br label %for.cond, !dbg !21588, !llvm.loop !21589

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !21591

if.end40:                                         ; preds = %for.end, %if.end
  store i32 0, i32* %a, align 4, !dbg !21592
  br label %for.cond41, !dbg !21594

for.cond41:                                       ; preds = %for.inc46, %if.end40
  %57 = load i32, i32* %a, align 4, !dbg !21595
  %58 = load i32, i32* %totvert, align 4, !dbg !21597
  %cmp42 = icmp slt i32 %57, %58, !dbg !21598
  br i1 %cmp42, label %for.body44, label %for.end48, !dbg !21599

for.body44:                                       ; preds = %for.cond41
  %59 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21600
  %60 = load i32, i32* %a, align 4, !dbg !21602
  %idxprom = sext i32 %60 to i64, !dbg !21600
  %arrayidx45 = getelementptr inbounds %struct.ASvert, %struct.ASvert* %59, i64 %idxprom, !dbg !21600
  %faces = getelementptr inbounds %struct.ASvert, %struct.ASvert* %arrayidx45, i32 0, i32 1, !dbg !21603
  call void @BLI_freelistN(%struct.ListBase* %faces), !dbg !21604
  br label %for.inc46, !dbg !21605

for.inc46:                                        ; preds = %for.body44
  %61 = load i32, i32* %a, align 4, !dbg !21606
  %inc47 = add nsw i32 %61, 1, !dbg !21606
  store i32 %inc47, i32* %a, align 4, !dbg !21606
  br label %for.cond41, !dbg !21607, !llvm.loop !21608

for.end48:                                        ; preds = %for.cond41
  %62 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !21610
  %63 = load %struct.ASvert*, %struct.ASvert** %asverts, align 8, !dbg !21611
  %64 = bitcast %struct.ASvert* %63 to i8*, !dbg !21611
  call void %62(i8* %64), !dbg !21610
  store i32 0, i32* %a, align 4, !dbg !21612
  br label %for.cond49, !dbg !21614

for.cond49:                                       ; preds = %for.inc65, %for.end48
  %65 = load i32, i32* %a, align 4, !dbg !21615
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21617
  %totvert50 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 10, !dbg !21618
  %67 = load i32, i32* %totvert50, align 8, !dbg !21618
  %cmp51 = icmp slt i32 %65, %67, !dbg !21619
  br i1 %cmp51, label %for.body53, label %for.end67, !dbg !21620

for.body53:                                       ; preds = %for.cond49
  %68 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21621
  %69 = load i32, i32* %a, align 4, !dbg !21623
  %call54 = call %struct.VertRen* @RE_findOrAddVert(%struct.ObjectRen* %68, i32 %69), !dbg !21624
  store %struct.VertRen* %call54, %struct.VertRen** %ver, align 8, !dbg !21625
  %70 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !21626
  %71 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21627
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %71, i32 0, i32 0, !dbg !21628
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !21627
  call void @mul_m4_v3([4 x float]* %70, float* %arraydecay55), !dbg !21629
  %72 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors.addr, align 8, !dbg !21630
  %tobool56 = icmp ne [4 x [3 x i16]]* %72, null, !dbg !21630
  br i1 %tobool56, label %if.then57, label %if.end64, !dbg !21632

if.then57:                                        ; preds = %for.body53
  %73 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !21633
  %74 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21635
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %74, i32 0, i32 1, !dbg !21636
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !21635
  call void @mul_mat3_m4_v3([4 x float]* %73, float* %arraydecay58), !dbg !21637
  %75 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21638
  %n59 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %75, i32 0, i32 1, !dbg !21639
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %n59, i64 0, i64 0, !dbg !21638
  call void @negate_v3(float* %arraydecay60), !dbg !21640
  %76 = load %struct.VertRen*, %struct.VertRen** %ver, align 8, !dbg !21641
  %n61 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %76, i32 0, i32 1, !dbg !21642
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %n61, i64 0, i64 0, !dbg !21641
  %call63 = call float @normalize_v3(float* %arraydecay62), !dbg !21643
  br label %if.end64, !dbg !21644

if.end64:                                         ; preds = %if.then57, %for.body53
  br label %for.inc65, !dbg !21645

for.inc65:                                        ; preds = %if.end64
  %77 = load i32, i32* %a, align 4, !dbg !21646
  %inc66 = add nsw i32 %77, 1, !dbg !21646
  store i32 %inc66, i32* %a, align 4, !dbg !21646
  br label %for.cond49, !dbg !21647, !llvm.loop !21648

for.end67:                                        ; preds = %for.cond49
  store i32 0, i32* %a, align 4, !dbg !21650
  br label %for.cond68, !dbg !21652

for.cond68:                                       ; preds = %for.inc111, %for.end67
  %78 = load i32, i32* %a, align 4, !dbg !21653
  %79 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21655
  %totvlak69 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %79, i32 0, i32 11, !dbg !21656
  %80 = load i32, i32* %totvlak69, align 4, !dbg !21656
  %cmp70 = icmp slt i32 %78, %80, !dbg !21657
  br i1 %cmp70, label %for.body72, label %for.end113, !dbg !21658

for.body72:                                       ; preds = %for.cond68
  %81 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !21659
  %82 = load i32, i32* %a, align 4, !dbg !21661
  %call73 = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %81, i32 %82), !dbg !21662
  store %struct.VlakRen* %call73, %struct.VlakRen** %vlr, align 8, !dbg !21663
  %83 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21664
  %v274 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %83, i32 0, i32 1, !dbg !21666
  %84 = load %struct.VertRen*, %struct.VertRen** %v274, align 8, !dbg !21666
  %85 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21667
  %v375 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %85, i32 0, i32 2, !dbg !21668
  %86 = load %struct.VertRen*, %struct.VertRen** %v375, align 8, !dbg !21668
  %cmp76 = icmp ne %struct.VertRen* %84, %86, !dbg !21669
  br i1 %cmp76, label %if.then78, label %if.end110, !dbg !21670

if.then78:                                        ; preds = %for.body72
  %87 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21671
  %v479 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %87, i32 0, i32 3, !dbg !21674
  %88 = load %struct.VertRen*, %struct.VertRen** %v479, align 8, !dbg !21674
  %tobool80 = icmp ne %struct.VertRen* %88, null, !dbg !21671
  br i1 %tobool80, label %if.then81, label %if.else, !dbg !21675

if.then81:                                        ; preds = %if.then78
  %89 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21676
  %n82 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %89, i32 0, i32 4, !dbg !21677
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %n82, i64 0, i64 0, !dbg !21676
  %90 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21678
  %v484 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %90, i32 0, i32 3, !dbg !21679
  %91 = load %struct.VertRen*, %struct.VertRen** %v484, align 8, !dbg !21679
  %co85 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %91, i32 0, i32 0, !dbg !21680
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %co85, i64 0, i64 0, !dbg !21678
  %92 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21681
  %v387 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %92, i32 0, i32 2, !dbg !21682
  %93 = load %struct.VertRen*, %struct.VertRen** %v387, align 8, !dbg !21682
  %co88 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %93, i32 0, i32 0, !dbg !21683
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %co88, i64 0, i64 0, !dbg !21681
  %94 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21684
  %v290 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %94, i32 0, i32 1, !dbg !21685
  %95 = load %struct.VertRen*, %struct.VertRen** %v290, align 8, !dbg !21685
  %co91 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %95, i32 0, i32 0, !dbg !21686
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %co91, i64 0, i64 0, !dbg !21684
  %96 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21687
  %v193 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %96, i32 0, i32 0, !dbg !21688
  %97 = load %struct.VertRen*, %struct.VertRen** %v193, align 8, !dbg !21688
  %co94 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %97, i32 0, i32 0, !dbg !21689
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %co94, i64 0, i64 0, !dbg !21687
  %call96 = call float @normal_quad_v3(float* %arraydecay83, float* %arraydecay86, float* %arraydecay89, float* %arraydecay92, float* %arraydecay95), !dbg !21690
  br label %if.end109, !dbg !21690

if.else:                                          ; preds = %if.then78
  %98 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21691
  %n97 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %98, i32 0, i32 4, !dbg !21692
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %n97, i64 0, i64 0, !dbg !21691
  %99 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21693
  %v399 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %99, i32 0, i32 2, !dbg !21694
  %100 = load %struct.VertRen*, %struct.VertRen** %v399, align 8, !dbg !21694
  %co100 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %100, i32 0, i32 0, !dbg !21695
  %arraydecay101 = getelementptr inbounds [3 x float], [3 x float]* %co100, i64 0, i64 0, !dbg !21693
  %101 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21696
  %v2102 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %101, i32 0, i32 1, !dbg !21697
  %102 = load %struct.VertRen*, %struct.VertRen** %v2102, align 8, !dbg !21697
  %co103 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %102, i32 0, i32 0, !dbg !21698
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %co103, i64 0, i64 0, !dbg !21696
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !21699
  %v1105 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 0, !dbg !21700
  %104 = load %struct.VertRen*, %struct.VertRen** %v1105, align 8, !dbg !21700
  %co106 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %104, i32 0, i32 0, !dbg !21701
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %co106, i64 0, i64 0, !dbg !21699
  %call108 = call float @normal_tri_v3(float* %arraydecay98, float* %arraydecay101, float* %arraydecay104, float* %arraydecay107), !dbg !21702
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.then81
  br label %if.end110, !dbg !21703

if.end110:                                        ; preds = %if.end109, %for.body72
  br label %for.inc111, !dbg !21704

for.inc111:                                       ; preds = %if.end110
  %105 = load i32, i32* %a, align 4, !dbg !21705
  %inc112 = add nsw i32 %105, 1, !dbg !21705
  store i32 %inc112, i32* %a, align 4, !dbg !21705
  br label %for.cond68, !dbg !21706, !llvm.loop !21707

for.end113:                                       ; preds = %if.then, %for.cond68
  ret void, !dbg !21709
}

declare dso_local %struct.HaloRen* @RE_inithalo(%struct.Render*, %struct.ObjectRen*, %struct.Material*, float*, float*, float*, float, float, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @to_edgesort(%struct.edgesort* %ed, i32 %i1, i32 %i2, i32 %v1, i32 %v2, i32 %f) #0 !dbg !21710 {
entry:
  %ed.addr = alloca %struct.edgesort*, align 8
  %i1.addr = alloca i32, align 4
  %i2.addr = alloca i32, align 4
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %f.addr = alloca i32, align 4
  %sw_ap = alloca i32, align 4
  %sw_ap1 = alloca i32, align 4
  store %struct.edgesort* %ed, %struct.edgesort** %ed.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edgesort** %ed.addr, metadata !21713, metadata !DIExpression()), !dbg !21714
  store i32 %i1, i32* %i1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i1.addr, metadata !21715, metadata !DIExpression()), !dbg !21716
  store i32 %i2, i32* %i2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i2.addr, metadata !21717, metadata !DIExpression()), !dbg !21718
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !21719, metadata !DIExpression()), !dbg !21720
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !21721, metadata !DIExpression()), !dbg !21722
  store i32 %f, i32* %f.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %f.addr, metadata !21723, metadata !DIExpression()), !dbg !21724
  %0 = load i32, i32* %v1.addr, align 4, !dbg !21725
  %1 = load i32, i32* %v2.addr, align 4, !dbg !21727
  %cmp = icmp ugt i32 %0, %1, !dbg !21728
  br i1 %cmp, label %if.then, label %if.end, !dbg !21729

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %sw_ap, metadata !21730, metadata !DIExpression()), !dbg !21733
  %2 = load i32, i32* %v1.addr, align 4, !dbg !21733
  store i32 %2, i32* %sw_ap, align 4, !dbg !21733
  %3 = load i32, i32* %v2.addr, align 4, !dbg !21733
  store i32 %3, i32* %v1.addr, align 4, !dbg !21733
  %4 = load i32, i32* %sw_ap, align 4, !dbg !21733
  store i32 %4, i32* %v2.addr, align 4, !dbg !21733
  call void @llvm.dbg.declare(metadata i32* %sw_ap1, metadata !21734, metadata !DIExpression()), !dbg !21736
  %5 = load i32, i32* %i1.addr, align 4, !dbg !21736
  store i32 %5, i32* %sw_ap1, align 4, !dbg !21736
  %6 = load i32, i32* %i2.addr, align 4, !dbg !21736
  store i32 %6, i32* %i1.addr, align 4, !dbg !21736
  %7 = load i32, i32* %sw_ap1, align 4, !dbg !21736
  store i32 %7, i32* %i2.addr, align 4, !dbg !21736
  br label %if.end, !dbg !21737

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %v1.addr, align 4, !dbg !21738
  %9 = load %struct.edgesort*, %struct.edgesort** %ed.addr, align 8, !dbg !21739
  %v12 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %9, i32 0, i32 0, !dbg !21740
  store i32 %8, i32* %v12, align 4, !dbg !21741
  %10 = load i32, i32* %v2.addr, align 4, !dbg !21742
  %11 = load %struct.edgesort*, %struct.edgesort** %ed.addr, align 8, !dbg !21743
  %v23 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %11, i32 0, i32 1, !dbg !21744
  store i32 %10, i32* %v23, align 4, !dbg !21745
  %12 = load i32, i32* %i1.addr, align 4, !dbg !21746
  %13 = load %struct.edgesort*, %struct.edgesort** %ed.addr, align 8, !dbg !21747
  %i14 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %13, i32 0, i32 3, !dbg !21748
  store i32 %12, i32* %i14, align 4, !dbg !21749
  %14 = load i32, i32* %i2.addr, align 4, !dbg !21750
  %15 = load %struct.edgesort*, %struct.edgesort** %ed.addr, align 8, !dbg !21751
  %i25 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %15, i32 0, i32 4, !dbg !21752
  store i32 %14, i32* %i25, align 4, !dbg !21753
  %16 = load i32, i32* %f.addr, align 4, !dbg !21754
  %17 = load %struct.edgesort*, %struct.edgesort** %ed.addr, align 8, !dbg !21755
  %f6 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %17, i32 0, i32 2, !dbg !21756
  store i32 %16, i32* %f6, align 4, !dbg !21757
  ret void, !dbg !21758
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @vergedgesort(i8* %v1, i8* %v2) #0 !dbg !21759 {
entry:
  %retval = alloca i32, align 4
  %v1.addr = alloca i8*, align 8
  %v2.addr = alloca i8*, align 8
  %x1 = alloca %struct.edgesort*, align 8
  %x2 = alloca %struct.edgesort*, align 8
  store i8* %v1, i8** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v1.addr, metadata !21764, metadata !DIExpression()), !dbg !21765
  store i8* %v2, i8** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %v2.addr, metadata !21766, metadata !DIExpression()), !dbg !21767
  call void @llvm.dbg.declare(metadata %struct.edgesort** %x1, metadata !21768, metadata !DIExpression()), !dbg !21771
  %0 = load i8*, i8** %v1.addr, align 8, !dbg !21772
  %1 = bitcast i8* %0 to %struct.edgesort*, !dbg !21772
  store %struct.edgesort* %1, %struct.edgesort** %x1, align 8, !dbg !21771
  call void @llvm.dbg.declare(metadata %struct.edgesort** %x2, metadata !21773, metadata !DIExpression()), !dbg !21774
  %2 = load i8*, i8** %v2.addr, align 8, !dbg !21775
  %3 = bitcast i8* %2 to %struct.edgesort*, !dbg !21775
  store %struct.edgesort* %3, %struct.edgesort** %x2, align 8, !dbg !21774
  %4 = load %struct.edgesort*, %struct.edgesort** %x1, align 8, !dbg !21776
  %v11 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %4, i32 0, i32 0, !dbg !21778
  %5 = load i32, i32* %v11, align 4, !dbg !21778
  %6 = load %struct.edgesort*, %struct.edgesort** %x2, align 8, !dbg !21779
  %v12 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %6, i32 0, i32 0, !dbg !21780
  %7 = load i32, i32* %v12, align 4, !dbg !21780
  %cmp = icmp ugt i32 %5, %7, !dbg !21781
  br i1 %cmp, label %if.then, label %if.else, !dbg !21782

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !21783
  br label %return, !dbg !21783

if.else:                                          ; preds = %entry
  %8 = load %struct.edgesort*, %struct.edgesort** %x1, align 8, !dbg !21784
  %v13 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %8, i32 0, i32 0, !dbg !21786
  %9 = load i32, i32* %v13, align 4, !dbg !21786
  %10 = load %struct.edgesort*, %struct.edgesort** %x2, align 8, !dbg !21787
  %v14 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %10, i32 0, i32 0, !dbg !21788
  %11 = load i32, i32* %v14, align 4, !dbg !21788
  %cmp5 = icmp ult i32 %9, %11, !dbg !21789
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !21790

if.then6:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !21791
  br label %return, !dbg !21791

if.else7:                                         ; preds = %if.else
  %12 = load %struct.edgesort*, %struct.edgesort** %x1, align 8, !dbg !21792
  %v28 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %12, i32 0, i32 1, !dbg !21794
  %13 = load i32, i32* %v28, align 4, !dbg !21794
  %14 = load %struct.edgesort*, %struct.edgesort** %x2, align 8, !dbg !21795
  %v29 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %14, i32 0, i32 1, !dbg !21796
  %15 = load i32, i32* %v29, align 4, !dbg !21796
  %cmp10 = icmp ugt i32 %13, %15, !dbg !21797
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !21798

if.then11:                                        ; preds = %if.else7
  store i32 1, i32* %retval, align 4, !dbg !21799
  br label %return, !dbg !21799

if.else12:                                        ; preds = %if.else7
  %16 = load %struct.edgesort*, %struct.edgesort** %x1, align 8, !dbg !21800
  %v213 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %16, i32 0, i32 1, !dbg !21802
  %17 = load i32, i32* %v213, align 4, !dbg !21802
  %18 = load %struct.edgesort*, %struct.edgesort** %x2, align 8, !dbg !21803
  %v214 = getelementptr inbounds %struct.edgesort, %struct.edgesort* %18, i32 0, i32 1, !dbg !21804
  %19 = load i32, i32* %v214, align 4, !dbg !21804
  %cmp15 = icmp ult i32 %17, %19, !dbg !21805
  br i1 %cmp15, label %if.then16, label %if.end, !dbg !21806

if.then16:                                        ; preds = %if.else12
  store i32 -1, i32* %retval, align 4, !dbg !21807
  br label %return, !dbg !21807

if.end:                                           ; preds = %if.else12
  br label %if.end17

if.end17:                                         ; preds = %if.end
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  br label %if.end19

if.end19:                                         ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !21808
  br label %return, !dbg !21808

return:                                           ; preds = %if.end19, %if.then16, %if.then11, %if.then6, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !21809
  ret i32 %20, !dbg !21809
}

declare dso_local i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #4

declare dso_local void @BKE_mesh_texspace_get(%struct.Mesh*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @calc_edge_stress_add(float* %accum, %struct.VertRen* %v1, %struct.VertRen* %v2) #0 !dbg !21810 {
entry:
  %accum.addr = alloca float*, align 8
  %v1.addr = alloca %struct.VertRen*, align 8
  %v2.addr = alloca %struct.VertRen*, align 8
  %len = alloca float, align 4
  %acc = alloca float*, align 8
  store float* %accum, float** %accum.addr, align 8
  call void @llvm.dbg.declare(metadata float** %accum.addr, metadata !21813, metadata !DIExpression()), !dbg !21814
  store %struct.VertRen* %v1, %struct.VertRen** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1.addr, metadata !21815, metadata !DIExpression()), !dbg !21816
  store %struct.VertRen* %v2, %struct.VertRen** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2.addr, metadata !21817, metadata !DIExpression()), !dbg !21818
  call void @llvm.dbg.declare(metadata float* %len, metadata !21819, metadata !DIExpression()), !dbg !21820
  %0 = load %struct.VertRen*, %struct.VertRen** %v1.addr, align 8, !dbg !21821
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %0, i32 0, i32 0, !dbg !21822
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !21821
  %1 = load %struct.VertRen*, %struct.VertRen** %v2.addr, align 8, !dbg !21823
  %co1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %1, i32 0, i32 0, !dbg !21824
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !21823
  %call = call float @len_v3v3(float* %arraydecay, float* %arraydecay2), !dbg !21825
  %2 = load %struct.VertRen*, %struct.VertRen** %v1.addr, align 8, !dbg !21826
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %2, i32 0, i32 2, !dbg !21827
  %3 = load float*, float** %orco, align 8, !dbg !21827
  %4 = load %struct.VertRen*, %struct.VertRen** %v2.addr, align 8, !dbg !21828
  %orco3 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %4, i32 0, i32 2, !dbg !21829
  %5 = load float*, float** %orco3, align 8, !dbg !21829
  %call4 = call float @len_v3v3(float* %3, float* %5), !dbg !21830
  %div = fdiv float %call, %call4, !dbg !21831
  store float %div, float* %len, align 4, !dbg !21820
  call void @llvm.dbg.declare(metadata float** %acc, metadata !21832, metadata !DIExpression()), !dbg !21833
  %6 = load float*, float** %accum.addr, align 8, !dbg !21834
  %7 = load %struct.VertRen*, %struct.VertRen** %v1.addr, align 8, !dbg !21835
  %index = getelementptr inbounds %struct.VertRen, %struct.VertRen* %7, i32 0, i32 5, !dbg !21836
  %8 = load i32, i32* %index, align 8, !dbg !21836
  %mul = mul nsw i32 2, %8, !dbg !21837
  %idx.ext = sext i32 %mul to i64, !dbg !21838
  %add.ptr = getelementptr inbounds float, float* %6, i64 %idx.ext, !dbg !21838
  store float* %add.ptr, float** %acc, align 8, !dbg !21839
  %9 = load float, float* %len, align 4, !dbg !21840
  %10 = load float*, float** %acc, align 8, !dbg !21841
  %arrayidx = getelementptr inbounds float, float* %10, i64 0, !dbg !21841
  %11 = load float, float* %arrayidx, align 4, !dbg !21842
  %add = fadd float %11, %9, !dbg !21842
  store float %add, float* %arrayidx, align 4, !dbg !21842
  %12 = load float*, float** %acc, align 8, !dbg !21843
  %arrayidx5 = getelementptr inbounds float, float* %12, i64 1, !dbg !21843
  %13 = load float, float* %arrayidx5, align 4, !dbg !21844
  %add6 = fadd float %13, 1.000000e+00, !dbg !21844
  store float %add6, float* %arrayidx5, align 4, !dbg !21844
  %14 = load float*, float** %accum.addr, align 8, !dbg !21845
  %15 = load %struct.VertRen*, %struct.VertRen** %v2.addr, align 8, !dbg !21846
  %index7 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %15, i32 0, i32 5, !dbg !21847
  %16 = load i32, i32* %index7, align 8, !dbg !21847
  %mul8 = mul nsw i32 2, %16, !dbg !21848
  %idx.ext9 = sext i32 %mul8 to i64, !dbg !21849
  %add.ptr10 = getelementptr inbounds float, float* %14, i64 %idx.ext9, !dbg !21849
  store float* %add.ptr10, float** %acc, align 8, !dbg !21850
  %17 = load float, float* %len, align 4, !dbg !21851
  %18 = load float*, float** %acc, align 8, !dbg !21852
  %arrayidx11 = getelementptr inbounds float, float* %18, i64 0, !dbg !21852
  %19 = load float, float* %arrayidx11, align 4, !dbg !21853
  %add12 = fadd float %19, %17, !dbg !21853
  store float %add12, float* %arrayidx11, align 4, !dbg !21853
  %20 = load float*, float** %acc, align 8, !dbg !21854
  %arrayidx13 = getelementptr inbounds float, float* %20, i64 1, !dbg !21854
  %21 = load float, float* %arrayidx13, align 4, !dbg !21855
  %add14 = fadd float %21, 1.000000e+00, !dbg !21855
  store float %add14, float* %arrayidx13, align 4, !dbg !21855
  ret void, !dbg !21856
}

declare dso_local float* @RE_vertren_get_stress(%struct.ObjectRen*, %struct.VertRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3v3(float* %r, float* %v1, float* %v2) #0 !dbg !21857 {
entry:
  %r.addr = alloca float*, align 8
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !21858, metadata !DIExpression()), !dbg !21859
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !21860, metadata !DIExpression()), !dbg !21861
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !21862, metadata !DIExpression()), !dbg !21863
  %0 = load float*, float** %v1.addr, align 8, !dbg !21864
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !21864
  %1 = load float, float* %arrayidx, align 4, !dbg !21864
  %2 = load float*, float** %v2.addr, align 8, !dbg !21865
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !21865
  %3 = load float, float* %arrayidx1, align 4, !dbg !21865
  %mul = fmul float %1, %3, !dbg !21866
  %4 = load float*, float** %r.addr, align 8, !dbg !21867
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !21867
  store float %mul, float* %arrayidx2, align 4, !dbg !21868
  %5 = load float*, float** %v1.addr, align 8, !dbg !21869
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !21869
  %6 = load float, float* %arrayidx3, align 4, !dbg !21869
  %7 = load float*, float** %v2.addr, align 8, !dbg !21870
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !21870
  %8 = load float, float* %arrayidx4, align 4, !dbg !21870
  %mul5 = fmul float %6, %8, !dbg !21871
  %9 = load float*, float** %r.addr, align 8, !dbg !21872
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !21872
  store float %mul5, float* %arrayidx6, align 4, !dbg !21873
  %10 = load float*, float** %v1.addr, align 8, !dbg !21874
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !21874
  %11 = load float, float* %arrayidx7, align 4, !dbg !21874
  %12 = load float*, float** %v2.addr, align 8, !dbg !21875
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !21875
  %13 = load float, float* %arrayidx8, align 4, !dbg !21875
  %mul9 = fmul float %11, %13, !dbg !21876
  %14 = load float*, float** %r.addr, align 8, !dbg !21877
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !21877
  store float %mul9, float* %arrayidx10, align 4, !dbg !21878
  ret void, !dbg !21879
}

; Function Attrs: noinline nounwind uwtable
define internal void @displace_render_face(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.VlakRen* %vlr, float* %scale) #0 !dbg !21880 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %scale.addr = alloca float*, align 8
  %shi = alloca %struct.ShadeInput, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !21883, metadata !DIExpression()), !dbg !21884
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !21885, metadata !DIExpression()), !dbg !21886
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !21887, metadata !DIExpression()), !dbg !21888
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !21889, metadata !DIExpression()), !dbg !21890
  call void @llvm.dbg.declare(metadata %struct.ShadeInput* %shi, metadata !21891, metadata !DIExpression()), !dbg !22033
  %0 = bitcast %struct.ShadeInput* %shi to i8*, !dbg !22034
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 1472, i1 false), !dbg !22034
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22035
  %obr1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 4, !dbg !22036
  store %struct.ObjectRen* %1, %struct.ObjectRen** %obr1, align 8, !dbg !22037
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22038
  %vlr2 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 1, !dbg !22039
  store %struct.VlakRen* %2, %struct.VlakRen** %vlr2, align 8, !dbg !22040
  %3 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22041
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %3, i32 0, i32 5, !dbg !22042
  %4 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !22042
  %mat3 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 0, !dbg !22043
  store %struct.Material* %4, %struct.Material** %mat3, align 8, !dbg !22044
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %shi, i32 0, i32 114, !dbg !22045
  store i16 0, i16* %thread, align 2, !dbg !22046
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22047
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %5, i32 0, i32 0, !dbg !22049
  %6 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22049
  %flag = getelementptr inbounds %struct.VertRen, %struct.VertRen* %6, i32 0, i32 3, !dbg !22050
  %7 = load i32, i32* %flag, align 8, !dbg !22050
  %tobool = icmp ne i32 %7, 0, !dbg !22047
  br i1 %tobool, label %if.end, label %if.then, !dbg !22051

if.then:                                          ; preds = %entry
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22052
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22053
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22054
  %v14 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 0, !dbg !22055
  %11 = load %struct.VertRen*, %struct.VertRen** %v14, align 8, !dbg !22055
  %12 = load float*, float** %scale.addr, align 8, !dbg !22056
  call void @displace_render_vert(%struct.Render* %8, %struct.ObjectRen* %9, %struct.ShadeInput* %shi, %struct.VertRen* %11, i32 0, float* %12), !dbg !22057
  br label %if.end, !dbg !22057

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22058
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %13, i32 0, i32 1, !dbg !22060
  %14 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !22060
  %flag5 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 3, !dbg !22061
  %15 = load i32, i32* %flag5, align 8, !dbg !22061
  %tobool6 = icmp ne i32 %15, 0, !dbg !22058
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !22062

if.then7:                                         ; preds = %if.end
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22063
  %17 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22064
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22065
  %v28 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 1, !dbg !22066
  %19 = load %struct.VertRen*, %struct.VertRen** %v28, align 8, !dbg !22066
  %20 = load float*, float** %scale.addr, align 8, !dbg !22067
  call void @displace_render_vert(%struct.Render* %16, %struct.ObjectRen* %17, %struct.ShadeInput* %shi, %struct.VertRen* %19, i32 1, float* %20), !dbg !22068
  br label %if.end9, !dbg !22068

if.end9:                                          ; preds = %if.then7, %if.end
  %21 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22069
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %21, i32 0, i32 2, !dbg !22071
  %22 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !22071
  %flag10 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %22, i32 0, i32 3, !dbg !22072
  %23 = load i32, i32* %flag10, align 8, !dbg !22072
  %tobool11 = icmp ne i32 %23, 0, !dbg !22069
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !22073

if.then12:                                        ; preds = %if.end9
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22074
  %25 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22075
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22076
  %v313 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 2, !dbg !22077
  %27 = load %struct.VertRen*, %struct.VertRen** %v313, align 8, !dbg !22077
  %28 = load float*, float** %scale.addr, align 8, !dbg !22078
  call void @displace_render_vert(%struct.Render* %24, %struct.ObjectRen* %25, %struct.ShadeInput* %shi, %struct.VertRen* %27, i32 2, float* %28), !dbg !22079
  br label %if.end14, !dbg !22079

if.end14:                                         ; preds = %if.then12, %if.end9
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22080
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 3, !dbg !22082
  %30 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !22082
  %tobool15 = icmp ne %struct.VertRen* %30, null, !dbg !22080
  br i1 %tobool15, label %if.then16, label %if.end38, !dbg !22083

if.then16:                                        ; preds = %if.end14
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22084
  %v417 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 3, !dbg !22087
  %32 = load %struct.VertRen*, %struct.VertRen** %v417, align 8, !dbg !22087
  %flag18 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %32, i32 0, i32 3, !dbg !22088
  %33 = load i32, i32* %flag18, align 8, !dbg !22088
  %tobool19 = icmp ne i32 %33, 0, !dbg !22084
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !22089

if.then20:                                        ; preds = %if.then16
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22090
  %35 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22091
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22092
  %v421 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 3, !dbg !22093
  %37 = load %struct.VertRen*, %struct.VertRen** %v421, align 8, !dbg !22093
  %38 = load float*, float** %scale.addr, align 8, !dbg !22094
  call void @displace_render_vert(%struct.Render* %34, %struct.ObjectRen* %35, %struct.ShadeInput* %shi, %struct.VertRen* %37, i32 3, float* %38), !dbg !22095
  br label %if.end22, !dbg !22095

if.end22:                                         ; preds = %if.then20, %if.then16
  %39 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22096
  %v123 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %39, i32 0, i32 0, !dbg !22098
  %40 = load %struct.VertRen*, %struct.VertRen** %v123, align 8, !dbg !22098
  %accum = getelementptr inbounds %struct.VertRen, %struct.VertRen* %40, i32 0, i32 4, !dbg !22099
  %41 = load float, float* %accum, align 4, !dbg !22099
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22100
  %v324 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %42, i32 0, i32 2, !dbg !22101
  %43 = load %struct.VertRen*, %struct.VertRen** %v324, align 8, !dbg !22101
  %accum25 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 4, !dbg !22102
  %44 = load float, float* %accum25, align 4, !dbg !22102
  %sub = fsub float %41, %44, !dbg !22103
  %45 = call float @llvm.fabs.f32(float %sub), !dbg !22104
  %46 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22105
  %v226 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %46, i32 0, i32 1, !dbg !22106
  %47 = load %struct.VertRen*, %struct.VertRen** %v226, align 8, !dbg !22106
  %accum27 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %47, i32 0, i32 4, !dbg !22107
  %48 = load float, float* %accum27, align 4, !dbg !22107
  %49 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22108
  %v428 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %49, i32 0, i32 3, !dbg !22109
  %50 = load %struct.VertRen*, %struct.VertRen** %v428, align 8, !dbg !22109
  %accum29 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %50, i32 0, i32 4, !dbg !22110
  %51 = load float, float* %accum29, align 4, !dbg !22110
  %sub30 = fsub float %48, %51, !dbg !22111
  %52 = call float @llvm.fabs.f32(float %sub30), !dbg !22112
  %cmp = fcmp ogt float %45, %52, !dbg !22113
  br i1 %cmp, label %if.then31, label %if.else, !dbg !22114

if.then31:                                        ; preds = %if.end22
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22115
  %flag32 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 0, i32 7, !dbg !22116
  %54 = load i8, i8* %flag32, align 1, !dbg !22117
  %conv = zext i8 %54 to i32, !dbg !22117
  %or = or i32 %conv, 32, !dbg !22117
  %conv33 = trunc i32 %or to i8, !dbg !22117
  store i8 %conv33, i8* %flag32, align 1, !dbg !22117
  br label %if.end37, !dbg !22115

if.else:                                          ; preds = %if.end22
  %55 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22118
  %flag34 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %55, i32 0, i32 7, !dbg !22119
  %56 = load i8, i8* %flag34, align 1, !dbg !22120
  %conv35 = zext i8 %56 to i32, !dbg !22120
  %and = and i32 %conv35, -33, !dbg !22120
  %conv36 = trunc i32 %and to i8, !dbg !22120
  store i8 %conv36, i8* %flag34, align 1, !dbg !22120
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then31
  br label %if.end38, !dbg !22121

if.end38:                                         ; preds = %if.end37, %if.end14
  %57 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22122
  %v439 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %57, i32 0, i32 3, !dbg !22124
  %58 = load %struct.VertRen*, %struct.VertRen** %v439, align 8, !dbg !22124
  %tobool40 = icmp ne %struct.VertRen* %58, null, !dbg !22122
  br i1 %tobool40, label %if.then41, label %if.else53, !dbg !22125

if.then41:                                        ; preds = %if.end38
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22126
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %59, i32 0, i32 4, !dbg !22128
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22126
  %60 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22129
  %v442 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %60, i32 0, i32 3, !dbg !22130
  %61 = load %struct.VertRen*, %struct.VertRen** %v442, align 8, !dbg !22130
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %61, i32 0, i32 0, !dbg !22131
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !22129
  %62 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22132
  %v344 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %62, i32 0, i32 2, !dbg !22133
  %63 = load %struct.VertRen*, %struct.VertRen** %v344, align 8, !dbg !22133
  %co45 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %63, i32 0, i32 0, !dbg !22134
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !22132
  %64 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22135
  %v247 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %64, i32 0, i32 1, !dbg !22136
  %65 = load %struct.VertRen*, %struct.VertRen** %v247, align 8, !dbg !22136
  %co48 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %65, i32 0, i32 0, !dbg !22137
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !22135
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22138
  %v150 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 0, !dbg !22139
  %67 = load %struct.VertRen*, %struct.VertRen** %v150, align 8, !dbg !22139
  %co51 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %67, i32 0, i32 0, !dbg !22140
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !22138
  %call = call float @normal_quad_v3(float* %arraydecay, float* %arraydecay43, float* %arraydecay46, float* %arraydecay49, float* %arraydecay52), !dbg !22141
  br label %if.end66, !dbg !22142

if.else53:                                        ; preds = %if.end38
  %68 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22143
  %n54 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %68, i32 0, i32 4, !dbg !22145
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %n54, i64 0, i64 0, !dbg !22143
  %69 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22146
  %v356 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %69, i32 0, i32 2, !dbg !22147
  %70 = load %struct.VertRen*, %struct.VertRen** %v356, align 8, !dbg !22147
  %co57 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %70, i32 0, i32 0, !dbg !22148
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co57, i64 0, i64 0, !dbg !22146
  %71 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22149
  %v259 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %71, i32 0, i32 1, !dbg !22150
  %72 = load %struct.VertRen*, %struct.VertRen** %v259, align 8, !dbg !22150
  %co60 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %72, i32 0, i32 0, !dbg !22151
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %co60, i64 0, i64 0, !dbg !22149
  %73 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22152
  %v162 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %73, i32 0, i32 0, !dbg !22153
  %74 = load %struct.VertRen*, %struct.VertRen** %v162, align 8, !dbg !22153
  %co63 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %74, i32 0, i32 0, !dbg !22154
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co63, i64 0, i64 0, !dbg !22152
  %call65 = call float @normal_tri_v3(float* %arraydecay55, float* %arraydecay58, float* %arraydecay61, float* %arraydecay64), !dbg !22155
  br label %if.end66

if.end66:                                         ; preds = %if.else53, %if.then41
  ret void, !dbg !22156
}

; Function Attrs: noinline nounwind uwtable
define internal void @displace_render_vert(%struct.Render* %re, %struct.ObjectRen* %obr, %struct.ShadeInput* %shi, %struct.VertRen* %vr, i32 %vindex, float* %scale) #0 !dbg !22157 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %vr.addr = alloca %struct.VertRen*, align 8
  %vindex.addr = alloca i32, align 4
  %scale.addr = alloca float*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %texco = alloca i16, align 2
  %sample = alloca float, align 4
  %displace = alloca [3 x float], align 4
  %name = alloca i8*, align 8
  %i = alloca i32, align 4
  %suv = alloca %struct.ShadeInputUV*, align 8
  %s = alloca float*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !22161, metadata !DIExpression()), !dbg !22162
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !22163, metadata !DIExpression()), !dbg !22164
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !22165, metadata !DIExpression()), !dbg !22166
  store %struct.VertRen* %vr, %struct.VertRen** %vr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %vr.addr, metadata !22167, metadata !DIExpression()), !dbg !22168
  store i32 %vindex, i32* %vindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vindex.addr, metadata !22169, metadata !DIExpression()), !dbg !22170
  store float* %scale, float** %scale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %scale.addr, metadata !22171, metadata !DIExpression()), !dbg !22172
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !22173, metadata !DIExpression()), !dbg !22174
  call void @llvm.dbg.declare(metadata i16* %texco, metadata !22175, metadata !DIExpression()), !dbg !22176
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22177
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 0, !dbg !22178
  %1 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !22178
  %texco1 = getelementptr inbounds %struct.Material, %struct.Material* %1, i32 0, i32 90, !dbg !22179
  %2 = load i16, i16* %texco1, align 4, !dbg !22179
  store i16 %2, i16* %texco, align 2, !dbg !22176
  call void @llvm.dbg.declare(metadata float* %sample, metadata !22180, metadata !DIExpression()), !dbg !22181
  store float 0.000000e+00, float* %sample, align 4, !dbg !22181
  call void @llvm.dbg.declare(metadata [3 x float]* %displace, metadata !22182, metadata !DIExpression()), !dbg !22183
  call void @llvm.dbg.declare(metadata i8** %name, metadata !22184, metadata !DIExpression()), !dbg !22185
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22186, metadata !DIExpression()), !dbg !22187
  %3 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22188
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %3, i32 0, i32 29, !dbg !22189
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !22188
  %4 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22190
  %co2 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %4, i32 0, i32 0, !dbg !22191
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co2, i64 0, i64 0, !dbg !22190
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !22192
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22193
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 16, !dbg !22194
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !22193
  %6 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22195
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %6, i32 0, i32 1, !dbg !22196
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22195
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay5), !dbg !22197
  %7 = load i16, i16* %texco, align 2, !dbg !22198
  %conv = sext i16 %7 to i32, !dbg !22198
  %and = and i32 %conv, 16, !dbg !22200
  %tobool = icmp ne i32 %and, 0, !dbg !22200
  br i1 %tobool, label %if.then, label %if.end, !dbg !22201

if.then:                                          ; preds = %entry
  %8 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22202
  %totuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %8, i32 0, i32 74, !dbg !22204
  store i32 0, i32* %totuv, align 8, !dbg !22205
  %9 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22206
  %actmtface = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %9, i32 0, i32 25, !dbg !22207
  %10 = load i32, i32* %actmtface, align 8, !dbg !22207
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22208
  %actuv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 76, !dbg !22209
  store i32 %10, i32* %actuv, align 8, !dbg !22210
  store i32 0, i32* %i, align 4, !dbg !22211
  br label %for.cond, !dbg !22213

for.cond:                                         ; preds = %for.inc, %if.then
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22214
  %13 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22216
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %13, i32 0, i32 1, !dbg !22217
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22217
  %15 = load i32, i32* %i, align 4, !dbg !22218
  %call = call %struct.MTFace* @RE_vlakren_get_tface(%struct.ObjectRen* %12, %struct.VlakRen* %14, i32 %15, i8** %name, i32 0), !dbg !22219
  store %struct.MTFace* %call, %struct.MTFace** %tface, align 8, !dbg !22220
  %tobool6 = icmp ne %struct.MTFace* %call, null, !dbg !22221
  br i1 %tobool6, label %for.body, label %for.end, !dbg !22221

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ShadeInputUV** %suv, metadata !22222, metadata !DIExpression()), !dbg !22225
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22226
  %uv = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 72, !dbg !22227
  %17 = load i32, i32* %i, align 4, !dbg !22228
  %idxprom = sext i32 %17 to i64, !dbg !22226
  %arrayidx = getelementptr inbounds [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputUV]* %uv, i64 0, i64 %idxprom, !dbg !22226
  store %struct.ShadeInputUV* %arrayidx, %struct.ShadeInputUV** %suv, align 8, !dbg !22225
  %18 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !22229
  %uv7 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 0, !dbg !22230
  %19 = load i32, i32* %vindex.addr, align 4, !dbg !22231
  %idxprom8 = sext i32 %19 to i64, !dbg !22229
  %arrayidx9 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv7, i64 0, i64 %idxprom8, !dbg !22229
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx9, i64 0, i64 0, !dbg !22229
  %20 = load float, float* %arrayidx10, align 8, !dbg !22229
  %mul = fmul float 2.000000e+00, %20, !dbg !22232
  %sub = fsub float %mul, 1.000000e+00, !dbg !22233
  %21 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !22234
  %uv11 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %21, i32 0, i32 2, !dbg !22235
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %uv11, i64 0, i64 0, !dbg !22234
  store float %sub, float* %arrayidx12, align 8, !dbg !22236
  %22 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !22237
  %uv13 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %22, i32 0, i32 0, !dbg !22238
  %23 = load i32, i32* %vindex.addr, align 4, !dbg !22239
  %idxprom14 = sext i32 %23 to i64, !dbg !22237
  %arrayidx15 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv13, i64 0, i64 %idxprom14, !dbg !22237
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx15, i64 0, i64 1, !dbg !22237
  %24 = load float, float* %arrayidx16, align 4, !dbg !22237
  %mul17 = fmul float 2.000000e+00, %24, !dbg !22240
  %sub18 = fsub float %mul17, 1.000000e+00, !dbg !22241
  %25 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !22242
  %uv19 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %25, i32 0, i32 2, !dbg !22243
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %uv19, i64 0, i64 1, !dbg !22242
  store float %sub18, float* %arrayidx20, align 4, !dbg !22244
  %26 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !22245
  %uv21 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %26, i32 0, i32 2, !dbg !22246
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %uv21, i64 0, i64 2, !dbg !22245
  store float 0.000000e+00, float* %arrayidx22, align 8, !dbg !22247
  %27 = load i8*, i8** %name, align 8, !dbg !22248
  %28 = load %struct.ShadeInputUV*, %struct.ShadeInputUV** %suv, align 8, !dbg !22249
  %name23 = getelementptr inbounds %struct.ShadeInputUV, %struct.ShadeInputUV* %28, i32 0, i32 3, !dbg !22250
  store i8* %27, i8** %name23, align 8, !dbg !22251
  %29 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22252
  %totuv24 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %29, i32 0, i32 74, !dbg !22253
  %30 = load i32, i32* %totuv24, align 8, !dbg !22254
  %inc = add nsw i32 %30, 1, !dbg !22254
  store i32 %inc, i32* %totuv24, align 8, !dbg !22254
  br label %for.inc, !dbg !22255

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !22256
  %inc25 = add nsw i32 %31, 1, !dbg !22256
  store i32 %inc25, i32* %i, align 4, !dbg !22256
  br label %for.cond, !dbg !22257, !llvm.loop !22258

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !22260

if.end:                                           ; preds = %for.end, %entry
  %32 = load i16, i16* %texco, align 2, !dbg !22261
  %conv26 = sext i16 %32 to i32, !dbg !22261
  %and27 = and i32 %conv26, 1, !dbg !22263
  %tobool28 = icmp ne i32 %and27, 0, !dbg !22263
  br i1 %tobool28, label %land.lhs.true, label %if.end33, !dbg !22264

land.lhs.true:                                    ; preds = %if.end
  %33 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22265
  %orco = getelementptr inbounds %struct.VertRen, %struct.VertRen* %33, i32 0, i32 2, !dbg !22266
  %34 = load float*, float** %orco, align 8, !dbg !22266
  %tobool29 = icmp ne float* %34, null, !dbg !22267
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !22268

if.then30:                                        ; preds = %land.lhs.true
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22269
  %lo = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 56, !dbg !22271
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %lo, i64 0, i64 0, !dbg !22269
  %36 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22272
  %orco32 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %36, i32 0, i32 2, !dbg !22273
  %37 = load float*, float** %orco32, align 8, !dbg !22273
  call void @copy_v3_v3(float* %arraydecay31, float* %37), !dbg !22274
  br label %if.end33, !dbg !22275

if.end33:                                         ; preds = %if.then30, %land.lhs.true, %if.end
  %38 = load i16, i16* %texco, align 2, !dbg !22276
  %conv34 = sext i16 %38 to i32, !dbg !22276
  %and35 = and i32 %conv34, 8, !dbg !22278
  %tobool36 = icmp ne i32 %and35, 0, !dbg !22278
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !22279

if.then37:                                        ; preds = %if.end33
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22280
  %gl = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 57, !dbg !22282
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %gl, i64 0, i64 0, !dbg !22280
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22283
  %co39 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %40, i32 0, i32 29, !dbg !22284
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !22283
  call void @copy_v3_v3(float* %arraydecay38, float* %arraydecay40), !dbg !22285
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22286
  %viewinv = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 33, !dbg !22287
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %viewinv, i64 0, i64 0, !dbg !22286
  %42 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22288
  %gl42 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %42, i32 0, i32 57, !dbg !22289
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %gl42, i64 0, i64 0, !dbg !22288
  call void @mul_m4_v3([4 x float]* %arraydecay41, float* %arraydecay43), !dbg !22290
  br label %if.end44, !dbg !22291

if.end44:                                         ; preds = %if.then37, %if.end33
  %43 = load i16, i16* %texco, align 2, !dbg !22292
  %conv45 = sext i16 %43 to i32, !dbg !22292
  %and46 = and i32 %conv45, 4, !dbg !22294
  %tobool47 = icmp ne i32 %and46, 0, !dbg !22294
  br i1 %tobool47, label %if.then48, label %if.end52, !dbg !22295

if.then48:                                        ; preds = %if.end44
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22296
  %orn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 59, !dbg !22298
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %orn, i64 0, i64 0, !dbg !22296
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22299
  %vn50 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 16, !dbg !22300
  %arraydecay51 = getelementptr inbounds [3 x float], [3 x float]* %vn50, i64 0, i64 0, !dbg !22299
  call void @copy_v3_v3(float* %arraydecay49, float* %arraydecay51), !dbg !22301
  br label %if.end52, !dbg !22302

if.end52:                                         ; preds = %if.then48, %if.end44
  %46 = load i16, i16* %texco, align 2, !dbg !22303
  %conv53 = sext i16 %46 to i32, !dbg !22303
  %and54 = and i32 %conv53, 2, !dbg !22305
  %tobool55 = icmp ne i32 %and54, 0, !dbg !22305
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !22306

if.then56:                                        ; preds = %if.end52
  br label %if.end57, !dbg !22307

if.end57:                                         ; preds = %if.then56, %if.end52
  %47 = load i16, i16* %texco, align 2, !dbg !22309
  %conv58 = sext i16 %47 to i32, !dbg !22309
  %and59 = and i32 %conv58, 16384, !dbg !22311
  %tobool60 = icmp ne i32 %and59, 0, !dbg !22311
  br i1 %tobool60, label %if.then61, label %if.end78, !dbg !22312

if.then61:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata float** %s, metadata !22313, metadata !DIExpression()), !dbg !22315
  %48 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22316
  %49 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22317
  %call62 = call float* @RE_vertren_get_stress(%struct.ObjectRen* %48, %struct.VertRen* %49, i32 0), !dbg !22318
  store float* %call62, float** %s, align 8, !dbg !22315
  %50 = load float*, float** %s, align 8, !dbg !22319
  %tobool63 = icmp ne float* %50, null, !dbg !22319
  br i1 %tobool63, label %if.then64, label %if.else75, !dbg !22321

if.then64:                                        ; preds = %if.then61
  %51 = load float*, float** %s, align 8, !dbg !22322
  %52 = load float, float* %51, align 4, !dbg !22324
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22325
  %stress = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 68, !dbg !22326
  store float %52, float* %stress, align 8, !dbg !22327
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22328
  %stress65 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 68, !dbg !22330
  %55 = load float, float* %stress65, align 8, !dbg !22330
  %cmp = fcmp olt float %55, 1.000000e+00, !dbg !22331
  br i1 %cmp, label %if.then67, label %if.else, !dbg !22332

if.then67:                                        ; preds = %if.then64
  %56 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22333
  %stress68 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %56, i32 0, i32 68, !dbg !22334
  %57 = load float, float* %stress68, align 8, !dbg !22335
  %sub69 = fsub float %57, 1.000000e+00, !dbg !22335
  store float %sub69, float* %stress68, align 8, !dbg !22335
  br label %if.end74, !dbg !22333

if.else:                                          ; preds = %if.then64
  %58 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22336
  %stress70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %58, i32 0, i32 68, !dbg !22337
  %59 = load float, float* %stress70, align 8, !dbg !22337
  %sub71 = fsub float %59, 1.000000e+00, !dbg !22338
  %60 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22339
  %stress72 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %60, i32 0, i32 68, !dbg !22340
  %61 = load float, float* %stress72, align 8, !dbg !22340
  %div = fdiv float %sub71, %61, !dbg !22341
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22342
  %stress73 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 68, !dbg !22343
  store float %div, float* %stress73, align 8, !dbg !22344
  br label %if.end74

if.end74:                                         ; preds = %if.else, %if.then67
  br label %if.end77, !dbg !22345

if.else75:                                        ; preds = %if.then61
  %63 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22346
  %stress76 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %63, i32 0, i32 68, !dbg !22347
  store float 0.000000e+00, float* %stress76, align 8, !dbg !22348
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.end74
  br label %if.end78, !dbg !22349

if.end78:                                         ; preds = %if.end77, %if.end57
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22350
  %displace79 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 63, !dbg !22351
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %displace79, i64 0, i64 2, !dbg !22350
  store float 0.000000e+00, float* %arrayidx80, align 8, !dbg !22352
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22353
  %displace81 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 63, !dbg !22354
  %arrayidx82 = getelementptr inbounds [3 x float], [3 x float]* %displace81, i64 0, i64 1, !dbg !22353
  store float 0.000000e+00, float* %arrayidx82, align 4, !dbg !22355
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22356
  %displace83 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 63, !dbg !22357
  %arrayidx84 = getelementptr inbounds [3 x float], [3 x float]* %displace83, i64 0, i64 0, !dbg !22356
  store float 0.000000e+00, float* %arrayidx84, align 8, !dbg !22358
  %67 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22359
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !22360
  call void @do_material_tex(%struct.ShadeInput* %67, %struct.Render* %68), !dbg !22361
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22362
  %displace85 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 63, !dbg !22363
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %displace85, i64 0, i64 0, !dbg !22362
  %70 = load float, float* %arrayidx86, align 8, !dbg !22362
  %71 = load float*, float** %scale.addr, align 8, !dbg !22364
  %arrayidx87 = getelementptr inbounds float, float* %71, i64 0, !dbg !22364
  %72 = load float, float* %arrayidx87, align 4, !dbg !22364
  %mul88 = fmul float %70, %72, !dbg !22365
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 0, !dbg !22366
  store float %mul88, float* %arrayidx89, align 4, !dbg !22367
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22368
  %displace90 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %73, i32 0, i32 63, !dbg !22369
  %arrayidx91 = getelementptr inbounds [3 x float], [3 x float]* %displace90, i64 0, i64 1, !dbg !22368
  %74 = load float, float* %arrayidx91, align 4, !dbg !22368
  %75 = load float*, float** %scale.addr, align 8, !dbg !22370
  %arrayidx92 = getelementptr inbounds float, float* %75, i64 1, !dbg !22370
  %76 = load float, float* %arrayidx92, align 4, !dbg !22370
  %mul93 = fmul float %74, %76, !dbg !22371
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 1, !dbg !22372
  store float %mul93, float* %arrayidx94, align 4, !dbg !22373
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22374
  %displace95 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 63, !dbg !22375
  %arrayidx96 = getelementptr inbounds [3 x float], [3 x float]* %displace95, i64 0, i64 2, !dbg !22374
  %78 = load float, float* %arrayidx96, align 8, !dbg !22374
  %79 = load float*, float** %scale.addr, align 8, !dbg !22376
  %arrayidx97 = getelementptr inbounds float, float* %79, i64 2, !dbg !22376
  %80 = load float, float* %arrayidx97, align 4, !dbg !22376
  %mul98 = fmul float %78, %80, !dbg !22377
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 2, !dbg !22378
  store float %mul98, float* %arrayidx99, align 4, !dbg !22379
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 0, !dbg !22380
  %81 = load float, float* %arrayidx100, align 4, !dbg !22380
  %82 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22381
  %co101 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %82, i32 0, i32 0, !dbg !22382
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %co101, i64 0, i64 0, !dbg !22381
  %83 = load float, float* %arrayidx102, align 8, !dbg !22383
  %add = fadd float %83, %81, !dbg !22383
  store float %add, float* %arrayidx102, align 8, !dbg !22383
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 1, !dbg !22384
  %84 = load float, float* %arrayidx103, align 4, !dbg !22384
  %85 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22385
  %co104 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %85, i32 0, i32 0, !dbg !22386
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %co104, i64 0, i64 1, !dbg !22385
  %86 = load float, float* %arrayidx105, align 4, !dbg !22387
  %add106 = fadd float %86, %84, !dbg !22387
  store float %add106, float* %arrayidx105, align 4, !dbg !22387
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %displace, i64 0, i64 2, !dbg !22388
  %87 = load float, float* %arrayidx107, align 4, !dbg !22388
  %88 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22389
  %co108 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %88, i32 0, i32 0, !dbg !22390
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %co108, i64 0, i64 2, !dbg !22389
  %89 = load float, float* %arrayidx109, align 8, !dbg !22391
  %add110 = fadd float %89, %87, !dbg !22391
  store float %add110, float* %arrayidx109, align 8, !dbg !22391
  %90 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22392
  %flag = getelementptr inbounds %struct.VertRen, %struct.VertRen* %90, i32 0, i32 3, !dbg !22393
  %91 = load i32, i32* %flag, align 8, !dbg !22394
  %or = or i32 %91, 1, !dbg !22394
  store i32 %or, i32* %flag, align 8, !dbg !22394
  %92 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22395
  %displace111 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %92, i32 0, i32 63, !dbg !22396
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %displace111, i64 0, i64 0, !dbg !22395
  %93 = load float, float* %arrayidx112, align 8, !dbg !22395
  %94 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22397
  %displace113 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %94, i32 0, i32 63, !dbg !22398
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %displace113, i64 0, i64 0, !dbg !22397
  %95 = load float, float* %arrayidx114, align 8, !dbg !22397
  %mul115 = fmul float %93, %95, !dbg !22399
  store float %mul115, float* %sample, align 4, !dbg !22400
  %96 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22401
  %displace116 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %96, i32 0, i32 63, !dbg !22402
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %displace116, i64 0, i64 1, !dbg !22401
  %97 = load float, float* %arrayidx117, align 4, !dbg !22401
  %98 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22403
  %displace118 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %98, i32 0, i32 63, !dbg !22404
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %displace118, i64 0, i64 1, !dbg !22403
  %99 = load float, float* %arrayidx119, align 4, !dbg !22403
  %mul120 = fmul float %97, %99, !dbg !22405
  %100 = load float, float* %sample, align 4, !dbg !22406
  %add121 = fadd float %100, %mul120, !dbg !22406
  store float %add121, float* %sample, align 4, !dbg !22406
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22407
  %displace122 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 63, !dbg !22408
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %displace122, i64 0, i64 2, !dbg !22407
  %102 = load float, float* %arrayidx123, align 8, !dbg !22407
  %103 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !22409
  %displace124 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %103, i32 0, i32 63, !dbg !22410
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %displace124, i64 0, i64 2, !dbg !22409
  %104 = load float, float* %arrayidx125, align 8, !dbg !22409
  %mul126 = fmul float %102, %104, !dbg !22411
  %105 = load float, float* %sample, align 4, !dbg !22412
  %add127 = fadd float %105, %mul126, !dbg !22412
  store float %add127, float* %sample, align 4, !dbg !22412
  %106 = load float, float* %sample, align 4, !dbg !22413
  %107 = load %struct.VertRen*, %struct.VertRen** %vr.addr, align 8, !dbg !22414
  %accum = getelementptr inbounds %struct.VertRen, %struct.VertRen* %107, i32 0, i32 4, !dbg !22415
  store float %106, float* %accum, align 4, !dbg !22416
  ret void, !dbg !22417
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @do_material_tex(%struct.ShadeInput*, %struct.Render*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @as_addvert_lnor(%struct.ObjectRen* %obr, %struct.ASvert* %asv, %struct.VertRen* %ver, %struct.VlakRen* %vlr, i16* %_lnor) #0 !dbg !22418 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %asv.addr = alloca %struct.ASvert*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %_lnor.addr = alloca i16*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %asf = alloca %struct.ASface*, align 8
  %asf_idx = alloca i32, align 4
  %lnor = alloca [3 x float], align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !22421, metadata !DIExpression()), !dbg !22422
  store %struct.ASvert* %asv, %struct.ASvert** %asv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ASvert** %asv.addr, metadata !22423, metadata !DIExpression()), !dbg !22424
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !22425, metadata !DIExpression()), !dbg !22426
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !22427, metadata !DIExpression()), !dbg !22428
  store i16* %_lnor, i16** %_lnor.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %_lnor.addr, metadata !22429, metadata !DIExpression()), !dbg !22430
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !22431, metadata !DIExpression()), !dbg !22432
  call void @llvm.dbg.declare(metadata %struct.ASface** %asf, metadata !22433, metadata !DIExpression()), !dbg !22445
  call void @llvm.dbg.declare(metadata i32* %asf_idx, metadata !22446, metadata !DIExpression()), !dbg !22447
  call void @llvm.dbg.declare(metadata [3 x float]* %lnor, metadata !22448, metadata !DIExpression()), !dbg !22449
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !22450
  %0 = load i16*, i16** %_lnor.addr, align 8, !dbg !22451
  call void @normal_short_to_float_v3(float* %arraydecay, i16* %0), !dbg !22452
  %1 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22453
  %2 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22454
  %3 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22455
  %call = call i32 @as_addvert(%struct.ASvert* %1, %struct.VertRen* %2, %struct.VlakRen* %3), !dbg !22456
  store i32 %call, i32* %asf_idx, align 4, !dbg !22457
  %4 = load i32, i32* %asf_idx, align 4, !dbg !22458
  %cmp = icmp slt i32 %4, 0, !dbg !22460
  br i1 %cmp, label %if.then, label %if.end, !dbg !22461

if.then:                                          ; preds = %entry
  br label %if.end28, !dbg !22462

if.end:                                           ; preds = %entry
  %5 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22464
  %faces = getelementptr inbounds %struct.ASvert, %struct.ASvert* %5, i32 0, i32 1, !dbg !22465
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces, i32 0, i32 1, !dbg !22466
  %6 = load i8*, i8** %last, align 8, !dbg !22466
  %7 = bitcast i8* %6 to %struct.ASface*, !dbg !22464
  store %struct.ASface* %7, %struct.ASface** %asf, align 8, !dbg !22467
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22468
  %9 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22469
  %10 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22470
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !22471
  %call2 = call %struct.VertRen* @as_findvertex_lnor(%struct.VlakRen* %8, %struct.VertRen* %9, %struct.ASvert* %10, float* %arraydecay1), !dbg !22472
  store %struct.VertRen* %call2, %struct.VertRen** %v1, align 8, !dbg !22473
  %11 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22474
  %cmp3 = icmp eq %struct.VertRen* %11, null, !dbg !22476
  br i1 %cmp3, label %if.then4, label %if.end8, !dbg !22477

if.then4:                                         ; preds = %if.end
  %12 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22478
  %13 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22480
  %call5 = call %struct.VertRen* @RE_vertren_copy(%struct.ObjectRen* %12, %struct.VertRen* %13), !dbg !22481
  store %struct.VertRen* %call5, %struct.VertRen** %v1, align 8, !dbg !22482
  %14 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22483
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 1, !dbg !22484
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22483
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %lnor, i64 0, i64 0, !dbg !22485
  call void @copy_v3_v3(float* %arraydecay6, float* %arraydecay7), !dbg !22486
  br label %if.end8, !dbg !22487

if.end8:                                          ; preds = %if.then4, %if.end
  %15 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22488
  %16 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22490
  %cmp9 = icmp ne %struct.VertRen* %15, %16, !dbg !22491
  br i1 %cmp9, label %if.then10, label %if.end28, !dbg !22492

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22493
  %18 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22495
  %nver = getelementptr inbounds %struct.ASface, %struct.ASface* %18, i32 0, i32 3, !dbg !22496
  %19 = load i32, i32* %asf_idx, align 4, !dbg !22497
  %idxprom = sext i32 %19 to i64, !dbg !22495
  %arrayidx = getelementptr inbounds [4 x %struct.VertRen*], [4 x %struct.VertRen*]* %nver, i64 0, i64 %idxprom, !dbg !22495
  store %struct.VertRen* %17, %struct.VertRen** %arrayidx, align 8, !dbg !22498
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22499
  %v111 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %20, i32 0, i32 0, !dbg !22501
  %21 = load %struct.VertRen*, %struct.VertRen** %v111, align 8, !dbg !22501
  %22 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22502
  %cmp12 = icmp eq %struct.VertRen* %21, %22, !dbg !22503
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !22504

if.then13:                                        ; preds = %if.then10
  %23 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22505
  %24 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22506
  %v114 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %24, i32 0, i32 0, !dbg !22507
  store %struct.VertRen* %23, %struct.VertRen** %v114, align 8, !dbg !22508
  br label %if.end15, !dbg !22506

if.end15:                                         ; preds = %if.then13, %if.then10
  %25 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22509
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %25, i32 0, i32 1, !dbg !22511
  %26 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !22511
  %27 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22512
  %cmp16 = icmp eq %struct.VertRen* %26, %27, !dbg !22513
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !22514

if.then17:                                        ; preds = %if.end15
  %28 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22515
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22516
  %v218 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 1, !dbg !22517
  store %struct.VertRen* %28, %struct.VertRen** %v218, align 8, !dbg !22518
  br label %if.end19, !dbg !22516

if.end19:                                         ; preds = %if.then17, %if.end15
  %30 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22519
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %30, i32 0, i32 2, !dbg !22521
  %31 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !22521
  %32 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22522
  %cmp20 = icmp eq %struct.VertRen* %31, %32, !dbg !22523
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !22524

if.then21:                                        ; preds = %if.end19
  %33 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22525
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22526
  %v322 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 2, !dbg !22527
  store %struct.VertRen* %33, %struct.VertRen** %v322, align 8, !dbg !22528
  br label %if.end23, !dbg !22526

if.end23:                                         ; preds = %if.then21, %if.end19
  %35 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22529
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %35, i32 0, i32 3, !dbg !22531
  %36 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !22531
  %37 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22532
  %cmp24 = icmp eq %struct.VertRen* %36, %37, !dbg !22533
  br i1 %cmp24, label %if.then25, label %if.end27, !dbg !22534

if.then25:                                        ; preds = %if.end23
  %38 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22535
  %39 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22536
  %v426 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %39, i32 0, i32 3, !dbg !22537
  store %struct.VertRen* %38, %struct.VertRen** %v426, align 8, !dbg !22538
  br label %if.end27, !dbg !22536

if.end27:                                         ; preds = %if.then25, %if.end23
  br label %if.end28, !dbg !22539

if.end28:                                         ; preds = %if.then, %if.end27, %if.end8
  ret void, !dbg !22540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @as_addvert(%struct.ASvert* %asv, %struct.VertRen* %v1, %struct.VlakRen* %vlr) #0 !dbg !22541 {
entry:
  %retval = alloca i32, align 4
  %asv.addr = alloca %struct.ASvert*, align 8
  %v1.addr = alloca %struct.VertRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %asf = alloca %struct.ASface*, align 8
  %a = alloca i32, align 4
  store %struct.ASvert* %asv, %struct.ASvert** %asv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ASvert** %asv.addr, metadata !22544, metadata !DIExpression()), !dbg !22545
  store %struct.VertRen* %v1, %struct.VertRen** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1.addr, metadata !22546, metadata !DIExpression()), !dbg !22547
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !22548, metadata !DIExpression()), !dbg !22549
  call void @llvm.dbg.declare(metadata %struct.ASface** %asf, metadata !22550, metadata !DIExpression()), !dbg !22551
  call void @llvm.dbg.declare(metadata i32* %a, metadata !22552, metadata !DIExpression()), !dbg !22553
  store i32 -1, i32* %a, align 4, !dbg !22553
  %0 = load %struct.VertRen*, %struct.VertRen** %v1.addr, align 8, !dbg !22554
  %cmp = icmp eq %struct.VertRen* %0, null, !dbg !22556
  br i1 %cmp, label %if.then, label %if.end, !dbg !22557

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %a, align 4, !dbg !22558
  store i32 %1, i32* %retval, align 4, !dbg !22559
  br label %return, !dbg !22559

if.end:                                           ; preds = %entry
  %2 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22560
  %faces = getelementptr inbounds %struct.ASvert, %struct.ASvert* %2, i32 0, i32 1, !dbg !22561
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces, i32 0, i32 1, !dbg !22562
  %3 = load i8*, i8** %last, align 8, !dbg !22562
  %4 = bitcast i8* %3 to %struct.ASface*, !dbg !22560
  store %struct.ASface* %4, %struct.ASface** %asf, align 8, !dbg !22563
  %5 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22564
  %tobool = icmp ne %struct.ASface* %5, null, !dbg !22564
  br i1 %tobool, label %if.then1, label %if.else, !dbg !22566

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %a, align 4, !dbg !22567
  br label %for.cond, !dbg !22570

for.cond:                                         ; preds = %for.inc, %if.then1
  %6 = load i32, i32* %a, align 4, !dbg !22571
  %cmp2 = icmp slt i32 %6, 4, !dbg !22573
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !22574

land.rhs:                                         ; preds = %for.cond
  %7 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22575
  %vlr3 = getelementptr inbounds %struct.ASface, %struct.ASface* %7, i32 0, i32 2, !dbg !22576
  %8 = load i32, i32* %a, align 4, !dbg !22577
  %idxprom = sext i32 %8 to i64, !dbg !22575
  %arrayidx = getelementptr inbounds [4 x %struct.VlakRen*], [4 x %struct.VlakRen*]* %vlr3, i64 0, i64 %idxprom, !dbg !22575
  %9 = load %struct.VlakRen*, %struct.VlakRen** %arrayidx, align 8, !dbg !22575
  %tobool4 = icmp ne %struct.VlakRen* %9, null, !dbg !22574
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %tobool4, %land.rhs ], !dbg !22578
  br i1 %10, label %for.body, label %for.end, !dbg !22579

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !22580

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %a, align 4, !dbg !22582
  %inc = add nsw i32 %11, 1, !dbg !22582
  store i32 %inc, i32* %a, align 4, !dbg !22582
  br label %for.cond, !dbg !22583, !llvm.loop !22584

for.end:                                          ; preds = %land.end
  br label %if.end5, !dbg !22586

if.else:                                          ; preds = %if.end
  store i32 4, i32* %a, align 4, !dbg !22587
  br label %if.end5

if.end5:                                          ; preds = %if.else, %for.end
  %12 = load i32, i32* %a, align 4, !dbg !22589
  %cmp6 = icmp eq i32 %12, 4, !dbg !22591
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !22592

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %a, align 4, !dbg !22593
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !22595
  %call = call i8* %13(i64 80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0)), !dbg !22595
  %14 = bitcast i8* %call to %struct.ASface*, !dbg !22595
  store %struct.ASface* %14, %struct.ASface** %asf, align 8, !dbg !22596
  %15 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22597
  %faces8 = getelementptr inbounds %struct.ASvert, %struct.ASvert* %15, i32 0, i32 1, !dbg !22598
  %16 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22599
  %17 = bitcast %struct.ASface* %16 to i8*, !dbg !22599
  call void @BLI_addtail(%struct.ListBase* %faces8, i8* %17), !dbg !22600
  br label %if.end9, !dbg !22601

if.end9:                                          ; preds = %if.then7, %if.end5
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22602
  %19 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22603
  %vlr10 = getelementptr inbounds %struct.ASface, %struct.ASface* %19, i32 0, i32 2, !dbg !22604
  %20 = load i32, i32* %a, align 4, !dbg !22605
  %idxprom11 = sext i32 %20 to i64, !dbg !22603
  %arrayidx12 = getelementptr inbounds [4 x %struct.VlakRen*], [4 x %struct.VlakRen*]* %vlr10, i64 0, i64 %idxprom11, !dbg !22603
  store %struct.VlakRen* %18, %struct.VlakRen** %arrayidx12, align 8, !dbg !22606
  %21 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22607
  %totface = getelementptr inbounds %struct.ASvert, %struct.ASvert* %21, i32 0, i32 0, !dbg !22608
  %22 = load i32, i32* %totface, align 8, !dbg !22609
  %inc13 = add nsw i32 %22, 1, !dbg !22609
  store i32 %inc13, i32* %totface, align 8, !dbg !22609
  %23 = load i32, i32* %a, align 4, !dbg !22610
  store i32 %23, i32* %retval, align 4, !dbg !22611
  br label %return, !dbg !22611

return:                                           ; preds = %if.end9, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !22612
  ret i32 %24, !dbg !22612
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VertRen* @as_findvertex_lnor(%struct.VlakRen* %vlr, %struct.VertRen* %ver, %struct.ASvert* %asv, float* %lnor) #0 !dbg !22613 {
entry:
  %retval = alloca %struct.VertRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %ver.addr = alloca %struct.VertRen*, align 8
  %asv.addr = alloca %struct.ASvert*, align 8
  %lnor.addr = alloca float*, align 8
  %asf = alloca %struct.ASface*, align 8
  %a = alloca i32, align 4
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !22616, metadata !DIExpression()), !dbg !22617
  store %struct.VertRen* %ver, %struct.VertRen** %ver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VertRen** %ver.addr, metadata !22618, metadata !DIExpression()), !dbg !22619
  store %struct.ASvert* %asv, %struct.ASvert** %asv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ASvert** %asv.addr, metadata !22620, metadata !DIExpression()), !dbg !22621
  store float* %lnor, float** %lnor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %lnor.addr, metadata !22622, metadata !DIExpression()), !dbg !22623
  call void @llvm.dbg.declare(metadata %struct.ASface** %asf, metadata !22624, metadata !DIExpression()), !dbg !22625
  call void @llvm.dbg.declare(metadata i32* %a, metadata !22626, metadata !DIExpression()), !dbg !22627
  %0 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22628
  %totface = getelementptr inbounds %struct.ASvert, %struct.ASvert* %0, i32 0, i32 0, !dbg !22630
  %1 = load i32, i32* %totface, align 8, !dbg !22630
  %cmp = icmp eq i32 %1, 1, !dbg !22631
  br i1 %cmp, label %if.then, label %if.end, !dbg !22632

if.then:                                          ; preds = %entry
  %2 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22633
  %n = getelementptr inbounds %struct.VertRen, %struct.VertRen* %2, i32 0, i32 1, !dbg !22635
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22633
  %3 = load float*, float** %lnor.addr, align 8, !dbg !22636
  call void @copy_v3_v3(float* %arraydecay, float* %3), !dbg !22637
  %4 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22638
  store %struct.VertRen* %4, %struct.VertRen** %retval, align 8, !dbg !22639
  br label %return, !dbg !22639

if.end:                                           ; preds = %entry
  %5 = load float*, float** %lnor.addr, align 8, !dbg !22640
  %6 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22642
  %n1 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %6, i32 0, i32 1, !dbg !22643
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !22642
  %call = call zeroext i8 @equals_v3v3(float* %5, float* %arraydecay2), !dbg !22644
  %tobool = icmp ne i8 %call, 0, !dbg !22644
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !22645

if.then3:                                         ; preds = %if.end
  %7 = load %struct.VertRen*, %struct.VertRen** %ver.addr, align 8, !dbg !22646
  store %struct.VertRen* %7, %struct.VertRen** %retval, align 8, !dbg !22648
  br label %return, !dbg !22648

if.end4:                                          ; preds = %if.end
  %8 = load %struct.ASvert*, %struct.ASvert** %asv.addr, align 8, !dbg !22649
  %faces = getelementptr inbounds %struct.ASvert, %struct.ASvert* %8, i32 0, i32 1, !dbg !22650
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %faces, i32 0, i32 0, !dbg !22651
  %9 = load i8*, i8** %first, align 8, !dbg !22651
  %10 = bitcast i8* %9 to %struct.ASface*, !dbg !22649
  store %struct.ASface* %10, %struct.ASface** %asf, align 8, !dbg !22652
  br label %while.cond, !dbg !22653

while.cond:                                       ; preds = %for.end, %if.end4
  %11 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22654
  %tobool5 = icmp ne %struct.ASface* %11, null, !dbg !22653
  br i1 %tobool5, label %while.body, label %while.end, !dbg !22653

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %a, align 4, !dbg !22655
  br label %for.cond, !dbg !22658

for.cond:                                         ; preds = %for.inc, %while.body
  %12 = load i32, i32* %a, align 4, !dbg !22659
  %cmp6 = icmp slt i32 %12, 4, !dbg !22661
  br i1 %cmp6, label %for.body, label %for.end, !dbg !22662

for.body:                                         ; preds = %for.cond
  %13 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22663
  %vlr7 = getelementptr inbounds %struct.ASface, %struct.ASface* %13, i32 0, i32 2, !dbg !22666
  %14 = load i32, i32* %a, align 4, !dbg !22667
  %idxprom = sext i32 %14 to i64, !dbg !22663
  %arrayidx = getelementptr inbounds [4 x %struct.VlakRen*], [4 x %struct.VlakRen*]* %vlr7, i64 0, i64 %idxprom, !dbg !22663
  %15 = load %struct.VlakRen*, %struct.VlakRen** %arrayidx, align 8, !dbg !22663
  %tobool8 = icmp ne %struct.VlakRen* %15, null, !dbg !22663
  br i1 %tobool8, label %land.lhs.true, label %if.end31, !dbg !22668

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22669
  %vlr9 = getelementptr inbounds %struct.ASface, %struct.ASface* %16, i32 0, i32 2, !dbg !22670
  %17 = load i32, i32* %a, align 4, !dbg !22671
  %idxprom10 = sext i32 %17 to i64, !dbg !22669
  %arrayidx11 = getelementptr inbounds [4 x %struct.VlakRen*], [4 x %struct.VlakRen*]* %vlr9, i64 0, i64 %idxprom10, !dbg !22669
  %18 = load %struct.VlakRen*, %struct.VlakRen** %arrayidx11, align 8, !dbg !22669
  %19 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !22672
  %cmp12 = icmp ne %struct.VlakRen* %18, %19, !dbg !22673
  br i1 %cmp12, label %if.then13, label %if.end31, !dbg !22674

if.then13:                                        ; preds = %land.lhs.true
  %20 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22675
  %nver = getelementptr inbounds %struct.ASface, %struct.ASface* %20, i32 0, i32 3, !dbg !22678
  %21 = load i32, i32* %a, align 4, !dbg !22679
  %idxprom14 = sext i32 %21 to i64, !dbg !22675
  %arrayidx15 = getelementptr inbounds [4 x %struct.VertRen*], [4 x %struct.VertRen*]* %nver, i64 0, i64 %idxprom14, !dbg !22675
  %22 = load %struct.VertRen*, %struct.VertRen** %arrayidx15, align 8, !dbg !22675
  %tobool16 = icmp ne %struct.VertRen* %22, null, !dbg !22675
  br i1 %tobool16, label %if.then17, label %if.end30, !dbg !22680

if.then17:                                        ; preds = %if.then13
  %23 = load float*, float** %lnor.addr, align 8, !dbg !22681
  %24 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22684
  %nver18 = getelementptr inbounds %struct.ASface, %struct.ASface* %24, i32 0, i32 3, !dbg !22685
  %25 = load i32, i32* %a, align 4, !dbg !22686
  %idxprom19 = sext i32 %25 to i64, !dbg !22684
  %arrayidx20 = getelementptr inbounds [4 x %struct.VertRen*], [4 x %struct.VertRen*]* %nver18, i64 0, i64 %idxprom19, !dbg !22684
  %26 = load %struct.VertRen*, %struct.VertRen** %arrayidx20, align 8, !dbg !22684
  %n21 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %26, i32 0, i32 1, !dbg !22687
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %n21, i64 0, i64 0, !dbg !22684
  %call23 = call zeroext i8 @equals_v3v3(float* %23, float* %arraydecay22), !dbg !22688
  %tobool24 = icmp ne i8 %call23, 0, !dbg !22688
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !22689

if.then25:                                        ; preds = %if.then17
  %27 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22690
  %nver26 = getelementptr inbounds %struct.ASface, %struct.ASface* %27, i32 0, i32 3, !dbg !22692
  %28 = load i32, i32* %a, align 4, !dbg !22693
  %idxprom27 = sext i32 %28 to i64, !dbg !22690
  %arrayidx28 = getelementptr inbounds [4 x %struct.VertRen*], [4 x %struct.VertRen*]* %nver26, i64 0, i64 %idxprom27, !dbg !22690
  %29 = load %struct.VertRen*, %struct.VertRen** %arrayidx28, align 8, !dbg !22690
  store %struct.VertRen* %29, %struct.VertRen** %retval, align 8, !dbg !22694
  br label %return, !dbg !22694

if.end29:                                         ; preds = %if.then17
  br label %if.end30, !dbg !22695

if.end30:                                         ; preds = %if.end29, %if.then13
  br label %if.end31, !dbg !22696

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %for.body
  br label %for.inc, !dbg !22697

for.inc:                                          ; preds = %if.end31
  %30 = load i32, i32* %a, align 4, !dbg !22698
  %inc = add nsw i32 %30, 1, !dbg !22698
  store i32 %inc, i32* %a, align 4, !dbg !22698
  br label %for.cond, !dbg !22699, !llvm.loop !22700

for.end:                                          ; preds = %for.cond
  %31 = load %struct.ASface*, %struct.ASface** %asf, align 8, !dbg !22702
  %next = getelementptr inbounds %struct.ASface, %struct.ASface* %31, i32 0, i32 0, !dbg !22703
  %32 = load %struct.ASface*, %struct.ASface** %next, align 8, !dbg !22703
  store %struct.ASface* %32, %struct.ASface** %asf, align 8, !dbg !22704
  br label %while.cond, !dbg !22653, !llvm.loop !22705

while.end:                                        ; preds = %while.cond
  store %struct.VertRen* null, %struct.VertRen** %retval, align 8, !dbg !22707
  br label %return, !dbg !22707

return:                                           ; preds = %while.end, %if.then25, %if.then3, %if.then
  %33 = load %struct.VertRen*, %struct.VertRen** %retval, align 8, !dbg !22708
  ret %struct.VertRen* %33, !dbg !22708
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @equals_v3v3(float* %v1, float* %v2) #0 !dbg !22709 {
entry:
  %v1.addr = alloca float*, align 8
  %v2.addr = alloca float*, align 8
  store float* %v1, float** %v1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v1.addr, metadata !22712, metadata !DIExpression()), !dbg !22713
  store float* %v2, float** %v2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v2.addr, metadata !22714, metadata !DIExpression()), !dbg !22715
  %0 = load float*, float** %v1.addr, align 8, !dbg !22716
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !22716
  %1 = load float, float* %arrayidx, align 4, !dbg !22716
  %2 = load float*, float** %v2.addr, align 8, !dbg !22717
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !22717
  %3 = load float, float* %arrayidx1, align 4, !dbg !22717
  %cmp = fcmp oeq float %1, %3, !dbg !22718
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !22719

land.lhs.true:                                    ; preds = %entry
  %4 = load float*, float** %v1.addr, align 8, !dbg !22720
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !22720
  %5 = load float, float* %arrayidx2, align 4, !dbg !22720
  %6 = load float*, float** %v2.addr, align 8, !dbg !22721
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !22721
  %7 = load float, float* %arrayidx3, align 4, !dbg !22721
  %cmp4 = fcmp oeq float %5, %7, !dbg !22722
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !22723

land.rhs:                                         ; preds = %land.lhs.true
  %8 = load float*, float** %v1.addr, align 8, !dbg !22724
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !22724
  %9 = load float, float* %arrayidx5, align 4, !dbg !22724
  %10 = load float*, float** %v2.addr, align 8, !dbg !22725
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !22725
  %11 = load float, float* %arrayidx6, align 4, !dbg !22725
  %cmp7 = fcmp oeq float %9, %11, !dbg !22726
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp7, %land.rhs ], !dbg !22727
  %land.ext = zext i1 %12 to i32, !dbg !22723
  %conv = trunc i32 %land.ext to i8, !dbg !22728
  ret i8 %conv, !dbg !22729
}

declare dso_local void @BKE_displist_make_mball_forRender(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*, %struct.ListBase*) #4

declare dso_local float* @BKE_mball_make_orco(%struct.Object*, %struct.ListBase*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @set_phong_threshold(%struct.ObjectRen* %obr) #0 !dbg !22730 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %thresh = alloca float, align 4
  %dot = alloca float, align 4
  %tot = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !22733, metadata !DIExpression()), !dbg !22734
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !22735, metadata !DIExpression()), !dbg !22736
  call void @llvm.dbg.declare(metadata float* %thresh, metadata !22737, metadata !DIExpression()), !dbg !22738
  store float 0.000000e+00, float* %thresh, align 4, !dbg !22738
  call void @llvm.dbg.declare(metadata float* %dot, metadata !22739, metadata !DIExpression()), !dbg !22740
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !22741, metadata !DIExpression()), !dbg !22742
  store i32 0, i32* %tot, align 4, !dbg !22742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22743, metadata !DIExpression()), !dbg !22744
  store i32 0, i32* %i, align 4, !dbg !22745
  br label %for.cond, !dbg !22747

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !22748
  %1 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22750
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %1, i32 0, i32 11, !dbg !22751
  %2 = load i32, i32* %totvlak, align 4, !dbg !22751
  %cmp = icmp slt i32 %0, %2, !dbg !22752
  br i1 %cmp, label %for.body, label %for.end, !dbg !22753

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22754
  %4 = load i32, i32* %i, align 4, !dbg !22756
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %3, i32 %4), !dbg !22757
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !22758
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22759
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %5, i32 0, i32 7, !dbg !22761
  %6 = load i8, i8* %flag, align 1, !dbg !22761
  %conv = zext i8 %6 to i32, !dbg !22759
  %and = and i32 %conv, 1, !dbg !22762
  %tobool = icmp ne i32 %and, 0, !dbg !22762
  br i1 %tobool, label %land.lhs.true, label %if.end72, !dbg !22763

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22764
  %flag1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 7, !dbg !22765
  %8 = load i8, i8* %flag1, align 1, !dbg !22765
  %conv2 = zext i8 %8 to i32, !dbg !22764
  %and3 = and i32 %conv2, 4, !dbg !22766
  %cmp4 = icmp eq i32 %and3, 0, !dbg !22767
  br i1 %cmp4, label %if.then, label %if.end72, !dbg !22768

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22769
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 4, !dbg !22771
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22769
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22772
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 0, !dbg !22773
  %11 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !22773
  %n6 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %11, i32 0, i32 1, !dbg !22774
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %n6, i64 0, i64 0, !dbg !22772
  %call8 = call float @dot_v3v3(float* %arraydecay, float* %arraydecay7), !dbg !22775
  store float %call8, float* %dot, align 4, !dbg !22776
  %12 = load float, float* %dot, align 4, !dbg !22777
  %cmp9 = fcmp olt float %12, 0.000000e+00, !dbg !22777
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !22777

cond.true:                                        ; preds = %if.then
  %13 = load float, float* %dot, align 4, !dbg !22777
  %fneg = fneg float %13, !dbg !22777
  br label %cond.end, !dbg !22777

cond.false:                                       ; preds = %if.then
  %14 = load float, float* %dot, align 4, !dbg !22777
  br label %cond.end, !dbg !22777

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %14, %cond.false ], !dbg !22777
  store float %cond, float* %dot, align 4, !dbg !22778
  %15 = load float, float* %dot, align 4, !dbg !22779
  %cmp11 = fcmp ogt float %15, 0x3FECCCCCC0000000, !dbg !22781
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !22782

if.then13:                                        ; preds = %cond.end
  %16 = load float, float* %dot, align 4, !dbg !22783
  %17 = load float, float* %thresh, align 4, !dbg !22785
  %add = fadd float %17, %16, !dbg !22785
  store float %add, float* %thresh, align 4, !dbg !22785
  %18 = load i32, i32* %tot, align 4, !dbg !22786
  %inc = add nsw i32 %18, 1, !dbg !22786
  store i32 %inc, i32* %tot, align 4, !dbg !22786
  br label %if.end, !dbg !22787

if.end:                                           ; preds = %if.then13, %cond.end
  %19 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22788
  %n14 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %19, i32 0, i32 4, !dbg !22789
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %n14, i64 0, i64 0, !dbg !22788
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22790
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %20, i32 0, i32 1, !dbg !22791
  %21 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !22791
  %n16 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %21, i32 0, i32 1, !dbg !22792
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %n16, i64 0, i64 0, !dbg !22790
  %call18 = call float @dot_v3v3(float* %arraydecay15, float* %arraydecay17), !dbg !22793
  store float %call18, float* %dot, align 4, !dbg !22794
  %22 = load float, float* %dot, align 4, !dbg !22795
  %cmp19 = fcmp olt float %22, 0.000000e+00, !dbg !22795
  br i1 %cmp19, label %cond.true21, label %cond.false23, !dbg !22795

cond.true21:                                      ; preds = %if.end
  %23 = load float, float* %dot, align 4, !dbg !22795
  %fneg22 = fneg float %23, !dbg !22795
  br label %cond.end24, !dbg !22795

cond.false23:                                     ; preds = %if.end
  %24 = load float, float* %dot, align 4, !dbg !22795
  br label %cond.end24, !dbg !22795

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi float [ %fneg22, %cond.true21 ], [ %24, %cond.false23 ], !dbg !22795
  store float %cond25, float* %dot, align 4, !dbg !22796
  %25 = load float, float* %dot, align 4, !dbg !22797
  %cmp26 = fcmp ogt float %25, 0x3FECCCCCC0000000, !dbg !22799
  br i1 %cmp26, label %if.then28, label %if.end31, !dbg !22800

if.then28:                                        ; preds = %cond.end24
  %26 = load float, float* %dot, align 4, !dbg !22801
  %27 = load float, float* %thresh, align 4, !dbg !22803
  %add29 = fadd float %27, %26, !dbg !22803
  store float %add29, float* %thresh, align 4, !dbg !22803
  %28 = load i32, i32* %tot, align 4, !dbg !22804
  %inc30 = add nsw i32 %28, 1, !dbg !22804
  store i32 %inc30, i32* %tot, align 4, !dbg !22804
  br label %if.end31, !dbg !22805

if.end31:                                         ; preds = %if.then28, %cond.end24
  %29 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22806
  %n32 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %29, i32 0, i32 4, !dbg !22807
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %n32, i64 0, i64 0, !dbg !22806
  %30 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22808
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %30, i32 0, i32 2, !dbg !22809
  %31 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !22809
  %n34 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %31, i32 0, i32 1, !dbg !22810
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %n34, i64 0, i64 0, !dbg !22808
  %call36 = call float @dot_v3v3(float* %arraydecay33, float* %arraydecay35), !dbg !22811
  store float %call36, float* %dot, align 4, !dbg !22812
  %32 = load float, float* %dot, align 4, !dbg !22813
  %cmp37 = fcmp olt float %32, 0.000000e+00, !dbg !22813
  br i1 %cmp37, label %cond.true39, label %cond.false41, !dbg !22813

cond.true39:                                      ; preds = %if.end31
  %33 = load float, float* %dot, align 4, !dbg !22813
  %fneg40 = fneg float %33, !dbg !22813
  br label %cond.end42, !dbg !22813

cond.false41:                                     ; preds = %if.end31
  %34 = load float, float* %dot, align 4, !dbg !22813
  br label %cond.end42, !dbg !22813

cond.end42:                                       ; preds = %cond.false41, %cond.true39
  %cond43 = phi float [ %fneg40, %cond.true39 ], [ %34, %cond.false41 ], !dbg !22813
  store float %cond43, float* %dot, align 4, !dbg !22814
  %35 = load float, float* %dot, align 4, !dbg !22815
  %cmp44 = fcmp ogt float %35, 0x3FECCCCCC0000000, !dbg !22817
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !22818

if.then46:                                        ; preds = %cond.end42
  %36 = load float, float* %dot, align 4, !dbg !22819
  %37 = load float, float* %thresh, align 4, !dbg !22821
  %add47 = fadd float %37, %36, !dbg !22821
  store float %add47, float* %thresh, align 4, !dbg !22821
  %38 = load i32, i32* %tot, align 4, !dbg !22822
  %inc48 = add nsw i32 %38, 1, !dbg !22822
  store i32 %inc48, i32* %tot, align 4, !dbg !22822
  br label %if.end49, !dbg !22823

if.end49:                                         ; preds = %if.then46, %cond.end42
  %39 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22824
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %39, i32 0, i32 3, !dbg !22826
  %40 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !22826
  %tobool50 = icmp ne %struct.VertRen* %40, null, !dbg !22824
  br i1 %tobool50, label %if.then51, label %if.end71, !dbg !22827

if.then51:                                        ; preds = %if.end49
  %41 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22828
  %n52 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %41, i32 0, i32 4, !dbg !22830
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %n52, i64 0, i64 0, !dbg !22828
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22831
  %v454 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %42, i32 0, i32 3, !dbg !22832
  %43 = load %struct.VertRen*, %struct.VertRen** %v454, align 8, !dbg !22832
  %n55 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %43, i32 0, i32 1, !dbg !22833
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %n55, i64 0, i64 0, !dbg !22831
  %call57 = call float @dot_v3v3(float* %arraydecay53, float* %arraydecay56), !dbg !22834
  store float %call57, float* %dot, align 4, !dbg !22835
  %44 = load float, float* %dot, align 4, !dbg !22836
  %cmp58 = fcmp olt float %44, 0.000000e+00, !dbg !22836
  br i1 %cmp58, label %cond.true60, label %cond.false62, !dbg !22836

cond.true60:                                      ; preds = %if.then51
  %45 = load float, float* %dot, align 4, !dbg !22836
  %fneg61 = fneg float %45, !dbg !22836
  br label %cond.end63, !dbg !22836

cond.false62:                                     ; preds = %if.then51
  %46 = load float, float* %dot, align 4, !dbg !22836
  br label %cond.end63, !dbg !22836

cond.end63:                                       ; preds = %cond.false62, %cond.true60
  %cond64 = phi float [ %fneg61, %cond.true60 ], [ %46, %cond.false62 ], !dbg !22836
  store float %cond64, float* %dot, align 4, !dbg !22837
  %47 = load float, float* %dot, align 4, !dbg !22838
  %cmp65 = fcmp ogt float %47, 0x3FECCCCCC0000000, !dbg !22840
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !22841

if.then67:                                        ; preds = %cond.end63
  %48 = load float, float* %dot, align 4, !dbg !22842
  %49 = load float, float* %thresh, align 4, !dbg !22844
  %add68 = fadd float %49, %48, !dbg !22844
  store float %add68, float* %thresh, align 4, !dbg !22844
  %50 = load i32, i32* %tot, align 4, !dbg !22845
  %inc69 = add nsw i32 %50, 1, !dbg !22845
  store i32 %inc69, i32* %tot, align 4, !dbg !22845
  br label %if.end70, !dbg !22846

if.end70:                                         ; preds = %if.then67, %cond.end63
  br label %if.end71, !dbg !22847

if.end71:                                         ; preds = %if.end70, %if.end49
  br label %if.end72, !dbg !22848

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %for.body
  br label %for.inc, !dbg !22849

for.inc:                                          ; preds = %if.end72
  %51 = load i32, i32* %i, align 4, !dbg !22850
  %inc73 = add nsw i32 %51, 1, !dbg !22850
  store i32 %inc73, i32* %i, align 4, !dbg !22850
  br label %for.cond, !dbg !22851, !llvm.loop !22852

for.end:                                          ; preds = %for.cond
  %52 = load i32, i32* %tot, align 4, !dbg !22854
  %tobool74 = icmp ne i32 %52, 0, !dbg !22854
  br i1 %tobool74, label %if.then75, label %if.end79, !dbg !22856

if.then75:                                        ; preds = %for.end
  %53 = load i32, i32* %tot, align 4, !dbg !22857
  %conv76 = sitofp i32 %53 to float, !dbg !22859
  %54 = load float, float* %thresh, align 4, !dbg !22860
  %div = fdiv float %54, %conv76, !dbg !22860
  store float %div, float* %thresh, align 4, !dbg !22860
  %55 = load float, float* %thresh, align 4, !dbg !22861
  %call77 = call float @saacos(float %55), !dbg !22862
  %sub = fsub float 0x3FF921FB60000000, %call77, !dbg !22863
  %call78 = call float @cosf(float %sub) #5, !dbg !22864
  %56 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22865
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %56, i32 0, i32 2, !dbg !22866
  %57 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !22866
  %smoothresh = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 116, !dbg !22867
  store float %call78, float* %smoothresh, align 4, !dbg !22868
  br label %if.end79, !dbg !22869

if.end79:                                         ; preds = %if.then75, %for.end
  ret void, !dbg !22870
}

; Function Attrs: noinline nounwind uwtable
define internal void @split_quads(%struct.ObjectRen* %obr, i32 %dir) #0 !dbg !22871 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %dir.addr = alloca i32, align 4
  %vlr = alloca %struct.VlakRen*, align 8
  %vlr1 = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !22874, metadata !DIExpression()), !dbg !22875
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !22876, metadata !DIExpression()), !dbg !22877
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !22878, metadata !DIExpression()), !dbg !22879
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr1, metadata !22880, metadata !DIExpression()), !dbg !22881
  call void @llvm.dbg.declare(metadata i32* %a, metadata !22882, metadata !DIExpression()), !dbg !22883
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22884
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 11, !dbg !22886
  %1 = load i32, i32* %totvlak, align 4, !dbg !22886
  %sub = sub nsw i32 %1, 1, !dbg !22887
  store i32 %sub, i32* %a, align 4, !dbg !22888
  br label %for.cond, !dbg !22889

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !22890
  %cmp = icmp sge i32 %2, 0, !dbg !22892
  br i1 %cmp, label %for.body, label %for.end, !dbg !22893

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22894
  %4 = load i32, i32* %a, align 4, !dbg !22896
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %3, i32 %4), !dbg !22897
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !22898
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22899
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %5, i32 0, i32 3, !dbg !22901
  %6 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !22901
  %tobool = icmp ne %struct.VertRen* %6, null, !dbg !22899
  br i1 %tobool, label %land.lhs.true, label %if.end80, !dbg !22902

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22903
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 7, !dbg !22904
  %8 = load i8, i8* %flag, align 1, !dbg !22904
  %conv = zext i8 %8 to i32, !dbg !22903
  %and = and i32 %conv, 4, !dbg !22905
  %cmp1 = icmp eq i32 %and, 0, !dbg !22906
  br i1 %cmp1, label %land.lhs.true3, label %if.end80, !dbg !22907

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22908
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 5, !dbg !22909
  %10 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !22909
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 2, !dbg !22910
  %11 = load i16, i16* %material_type, align 8, !dbg !22910
  %conv4 = sext i16 %11 to i32, !dbg !22908
  %cmp5 = icmp ne i32 %conv4, 3, !dbg !22911
  br i1 %cmp5, label %if.then, label %if.end80, !dbg !22912

if.then:                                          ; preds = %land.lhs.true3
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22913
  %v47 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i32 0, i32 3, !dbg !22916
  %13 = load %struct.VertRen*, %struct.VertRen** %v47, align 8, !dbg !22916
  %tobool8 = icmp ne %struct.VertRen* %13, null, !dbg !22913
  br i1 %tobool8, label %if.then9, label %if.else74, !dbg !22917

if.then9:                                         ; preds = %if.then
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !22918
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22920
  %call10 = call %struct.VlakRen* @RE_vlakren_copy(%struct.ObjectRen* %14, %struct.VlakRen* %15), !dbg !22921
  store %struct.VlakRen* %call10, %struct.VlakRen** %vlr1, align 8, !dbg !22922
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22923
  %flag11 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 7, !dbg !22924
  %17 = load i8, i8* %flag11, align 1, !dbg !22925
  %conv12 = zext i8 %17 to i32, !dbg !22925
  %or = or i32 %conv12, 16, !dbg !22925
  %conv13 = trunc i32 %or to i8, !dbg !22925
  store i8 %conv13, i8* %flag11, align 1, !dbg !22925
  %18 = load i32, i32* %dir.addr, align 4, !dbg !22926
  %cmp14 = icmp eq i32 %18, 2, !dbg !22928
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !22929

if.then16:                                        ; preds = %if.then9
  %19 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22930
  %flag17 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %19, i32 0, i32 7, !dbg !22931
  %20 = load i8, i8* %flag17, align 1, !dbg !22932
  %conv18 = zext i8 %20 to i32, !dbg !22932
  %or19 = or i32 %conv18, 32, !dbg !22932
  %conv20 = trunc i32 %or19 to i8, !dbg !22932
  store i8 %conv20, i8* %flag17, align 1, !dbg !22932
  br label %if.end, !dbg !22930

if.else:                                          ; preds = %if.then9
  %21 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22933
  %flag21 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %21, i32 0, i32 7, !dbg !22934
  %22 = load i8, i8* %flag21, align 1, !dbg !22935
  %conv22 = zext i8 %22 to i32, !dbg !22935
  %and23 = and i32 %conv22, -33, !dbg !22935
  %conv24 = trunc i32 %and23 to i8, !dbg !22935
  store i8 %conv24, i8* %flag21, align 1, !dbg !22935
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then16
  %23 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22936
  %flag25 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %23, i32 0, i32 7, !dbg !22938
  %24 = load i8, i8* %flag25, align 1, !dbg !22938
  %conv26 = zext i8 %24 to i32, !dbg !22936
  %and27 = and i32 %conv26, 32, !dbg !22939
  %tobool28 = icmp ne i32 %and27, 0, !dbg !22939
  br i1 %tobool28, label %if.then29, label %if.else39, !dbg !22940

if.then29:                                        ; preds = %if.end
  %25 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22941
  %v2 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %25, i32 0, i32 1, !dbg !22943
  %26 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !22943
  %27 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22944
  %v1 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %27, i32 0, i32 0, !dbg !22945
  store %struct.VertRen* %26, %struct.VertRen** %v1, align 8, !dbg !22946
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22947
  %v3 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %28, i32 0, i32 2, !dbg !22948
  %29 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !22948
  %30 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22949
  %v230 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %30, i32 0, i32 1, !dbg !22950
  store %struct.VertRen* %29, %struct.VertRen** %v230, align 8, !dbg !22951
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22952
  %v431 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 3, !dbg !22953
  %32 = load %struct.VertRen*, %struct.VertRen** %v431, align 8, !dbg !22953
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22954
  %v332 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 2, !dbg !22955
  store %struct.VertRen* %32, %struct.VertRen** %v332, align 8, !dbg !22956
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22957
  %v433 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 3, !dbg !22958
  %35 = load %struct.VertRen*, %struct.VertRen** %v433, align 8, !dbg !22958
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22959
  %v334 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 2, !dbg !22960
  store %struct.VertRen* %35, %struct.VertRen** %v334, align 8, !dbg !22961
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22962
  %flag35 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %37, i32 0, i32 7, !dbg !22963
  %38 = load i8, i8* %flag35, align 1, !dbg !22964
  %conv36 = zext i8 %38 to i32, !dbg !22964
  %or37 = or i32 %conv36, 32, !dbg !22964
  %conv38 = trunc i32 %or37 to i8, !dbg !22964
  store i8 %conv38, i8* %flag35, align 1, !dbg !22964
  br label %if.end50, !dbg !22965

if.else39:                                        ; preds = %if.end
  %39 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22966
  %v140 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %39, i32 0, i32 0, !dbg !22968
  %40 = load %struct.VertRen*, %struct.VertRen** %v140, align 8, !dbg !22968
  %41 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22969
  %v141 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %41, i32 0, i32 0, !dbg !22970
  store %struct.VertRen* %40, %struct.VertRen** %v141, align 8, !dbg !22971
  %42 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22972
  %v342 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %42, i32 0, i32 2, !dbg !22973
  %43 = load %struct.VertRen*, %struct.VertRen** %v342, align 8, !dbg !22973
  %44 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22974
  %v243 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %44, i32 0, i32 1, !dbg !22975
  store %struct.VertRen* %43, %struct.VertRen** %v243, align 8, !dbg !22976
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22977
  %v444 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 3, !dbg !22978
  %46 = load %struct.VertRen*, %struct.VertRen** %v444, align 8, !dbg !22978
  %47 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22979
  %v345 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %47, i32 0, i32 2, !dbg !22980
  store %struct.VertRen* %46, %struct.VertRen** %v345, align 8, !dbg !22981
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22982
  %flag46 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %48, i32 0, i32 7, !dbg !22983
  %49 = load i8, i8* %flag46, align 1, !dbg !22984
  %conv47 = zext i8 %49 to i32, !dbg !22984
  %and48 = and i32 %conv47, -33, !dbg !22984
  %conv49 = trunc i32 %and48 to i8, !dbg !22984
  store i8 %conv49, i8* %flag46, align 1, !dbg !22984
  br label %if.end50

if.end50:                                         ; preds = %if.else39, %if.then29
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !22985
  %v451 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %50, i32 0, i32 3, !dbg !22986
  store %struct.VertRen* null, %struct.VertRen** %v451, align 8, !dbg !22987
  %51 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22988
  %v452 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %51, i32 0, i32 3, !dbg !22989
  store %struct.VertRen* null, %struct.VertRen** %v452, align 8, !dbg !22990
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22991
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 4, !dbg !22992
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !22991
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22993
  %v353 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 0, i32 2, !dbg !22994
  %54 = load %struct.VertRen*, %struct.VertRen** %v353, align 8, !dbg !22994
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %54, i32 0, i32 0, !dbg !22995
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !22993
  %55 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22996
  %v255 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %55, i32 0, i32 1, !dbg !22997
  %56 = load %struct.VertRen*, %struct.VertRen** %v255, align 8, !dbg !22997
  %co56 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %56, i32 0, i32 0, !dbg !22998
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 0, !dbg !22996
  %57 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !22999
  %v158 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %57, i32 0, i32 0, !dbg !23000
  %58 = load %struct.VertRen*, %struct.VertRen** %v158, align 8, !dbg !23000
  %co59 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %58, i32 0, i32 0, !dbg !23001
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %co59, i64 0, i64 0, !dbg !22999
  %call61 = call float @normal_tri_v3(float* %arraydecay, float* %arraydecay54, float* %arraydecay57, float* %arraydecay60), !dbg !23002
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23003
  %n62 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %59, i32 0, i32 4, !dbg !23004
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %n62, i64 0, i64 0, !dbg !23003
  %60 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23005
  %v364 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %60, i32 0, i32 2, !dbg !23006
  %61 = load %struct.VertRen*, %struct.VertRen** %v364, align 8, !dbg !23006
  %co65 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %61, i32 0, i32 0, !dbg !23007
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %co65, i64 0, i64 0, !dbg !23005
  %62 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23008
  %v267 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %62, i32 0, i32 1, !dbg !23009
  %63 = load %struct.VertRen*, %struct.VertRen** %v267, align 8, !dbg !23009
  %co68 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %63, i32 0, i32 0, !dbg !23010
  %arraydecay69 = getelementptr inbounds [3 x float], [3 x float]* %co68, i64 0, i64 0, !dbg !23008
  %64 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23011
  %v170 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %64, i32 0, i32 0, !dbg !23012
  %65 = load %struct.VertRen*, %struct.VertRen** %v170, align 8, !dbg !23012
  %co71 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %65, i32 0, i32 0, !dbg !23013
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co71, i64 0, i64 0, !dbg !23011
  %call73 = call float @normal_tri_v3(float* %arraydecay63, float* %arraydecay66, float* %arraydecay69, float* %arraydecay72), !dbg !23014
  br label %if.end79, !dbg !23015

if.else74:                                        ; preds = %if.then
  %66 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23016
  %flag75 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %66, i32 0, i32 7, !dbg !23017
  %67 = load i8, i8* %flag75, align 1, !dbg !23018
  %conv76 = zext i8 %67 to i32, !dbg !23018
  %and77 = and i32 %conv76, -33, !dbg !23018
  %conv78 = trunc i32 %and77 to i8, !dbg !23018
  store i8 %conv78, i8* %flag75, align 1, !dbg !23018
  br label %if.end79

if.end79:                                         ; preds = %if.else74, %if.end50
  br label %if.end80, !dbg !23019

if.end80:                                         ; preds = %if.end79, %land.lhs.true3, %land.lhs.true, %for.body
  br label %for.inc, !dbg !23020

for.inc:                                          ; preds = %if.end80
  %68 = load i32, i32* %a, align 4, !dbg !23021
  %dec = add nsw i32 %68, -1, !dbg !23021
  store i32 %dec, i32* %a, align 4, !dbg !23021
  br label %for.cond, !dbg !23022, !llvm.loop !23023

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23025
}

declare dso_local zeroext i8 @BKE_object_is_animated(%struct.Scene*, %struct.Object*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @check_non_flat_quads(%struct.ObjectRen* %obr) #0 !dbg !23026 {
entry:
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %vlr1 = alloca %struct.VlakRen*, align 8
  %v1 = alloca %struct.VertRen*, align 8
  %v2 = alloca %struct.VertRen*, align 8
  %v3 = alloca %struct.VertRen*, align 8
  %v4 = alloca %struct.VertRen*, align 8
  %nor = alloca [3 x float], align 4
  %xn = alloca float, align 4
  %flen = alloca float, align 4
  %a = alloca i32, align 4
  %d1 = alloca float, align 4
  %d2 = alloca float, align 4
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !23027, metadata !DIExpression()), !dbg !23028
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !23029, metadata !DIExpression()), !dbg !23030
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr1, metadata !23031, metadata !DIExpression()), !dbg !23032
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v1, metadata !23033, metadata !DIExpression()), !dbg !23034
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v2, metadata !23035, metadata !DIExpression()), !dbg !23036
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v3, metadata !23037, metadata !DIExpression()), !dbg !23038
  call void @llvm.dbg.declare(metadata %struct.VertRen** %v4, metadata !23039, metadata !DIExpression()), !dbg !23040
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !23041, metadata !DIExpression()), !dbg !23042
  call void @llvm.dbg.declare(metadata float* %xn, metadata !23043, metadata !DIExpression()), !dbg !23044
  call void @llvm.dbg.declare(metadata float* %flen, metadata !23045, metadata !DIExpression()), !dbg !23046
  call void @llvm.dbg.declare(metadata i32* %a, metadata !23047, metadata !DIExpression()), !dbg !23048
  %0 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !23049
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %0, i32 0, i32 11, !dbg !23051
  %1 = load i32, i32* %totvlak, align 4, !dbg !23051
  %sub = sub nsw i32 %1, 1, !dbg !23052
  store i32 %sub, i32* %a, align 4, !dbg !23053
  br label %for.cond, !dbg !23054

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %a, align 4, !dbg !23055
  %cmp = icmp sge i32 %2, 0, !dbg !23057
  br i1 %cmp, label %for.body, label %for.end, !dbg !23058

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !23059
  %4 = load i32, i32* %a, align 4, !dbg !23061
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %3, i32 %4), !dbg !23062
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !23063
  %5 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23064
  %v41 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %5, i32 0, i32 3, !dbg !23066
  %6 = load %struct.VertRen*, %struct.VertRen** %v41, align 8, !dbg !23066
  %tobool = icmp ne %struct.VertRen* %6, null, !dbg !23064
  br i1 %tobool, label %land.lhs.true, label %if.end347, !dbg !23067

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23068
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 7, !dbg !23069
  %8 = load i8, i8* %flag, align 1, !dbg !23069
  %conv = zext i8 %8 to i32, !dbg !23068
  %and = and i32 %conv, 4, !dbg !23070
  %cmp2 = icmp eq i32 %and, 0, !dbg !23071
  br i1 %cmp2, label %land.lhs.true4, label %if.end347, !dbg !23072

land.lhs.true4:                                   ; preds = %land.lhs.true
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23073
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 5, !dbg !23074
  %10 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !23074
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 2, !dbg !23075
  %11 = load i16, i16* %material_type, align 8, !dbg !23075
  %conv5 = sext i16 %11 to i32, !dbg !23073
  %cmp6 = icmp ne i32 %conv5, 3, !dbg !23076
  br i1 %cmp6, label %if.then, label %if.end347, !dbg !23077

if.then:                                          ; preds = %land.lhs.true4
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23078
  %v18 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i32 0, i32 0, !dbg !23080
  %13 = load %struct.VertRen*, %struct.VertRen** %v18, align 8, !dbg !23080
  store %struct.VertRen* %13, %struct.VertRen** %v1, align 8, !dbg !23081
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23082
  %v29 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 1, !dbg !23083
  %15 = load %struct.VertRen*, %struct.VertRen** %v29, align 8, !dbg !23083
  store %struct.VertRen* %15, %struct.VertRen** %v2, align 8, !dbg !23084
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23085
  %v310 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 2, !dbg !23086
  %17 = load %struct.VertRen*, %struct.VertRen** %v310, align 8, !dbg !23086
  store %struct.VertRen* %17, %struct.VertRen** %v3, align 8, !dbg !23087
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23088
  %v411 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 3, !dbg !23089
  %19 = load %struct.VertRen*, %struct.VertRen** %v411, align 8, !dbg !23089
  store %struct.VertRen* %19, %struct.VertRen** %v4, align 8, !dbg !23090
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23091
  %20 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !23092
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %20, i32 0, i32 0, !dbg !23093
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !23092
  %21 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !23094
  %co13 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %21, i32 0, i32 0, !dbg !23095
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co13, i64 0, i64 0, !dbg !23094
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay12, float* %arraydecay14), !dbg !23096
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23097
  %22 = load float, float* %arrayidx, align 4, !dbg !23097
  %cmp15 = fcmp olt float %22, 0.000000e+00, !dbg !23097
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !23097

cond.true:                                        ; preds = %if.then
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23097
  %23 = load float, float* %arrayidx17, align 4, !dbg !23097
  %fneg = fneg float %23, !dbg !23097
  br label %cond.end, !dbg !23097

cond.false:                                       ; preds = %if.then
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23097
  %24 = load float, float* %arrayidx18, align 4, !dbg !23097
  br label %cond.end, !dbg !23097

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %24, %cond.false ], !dbg !23097
  %cmp19 = fcmp olt float %cond, 0x3EB4000000000000, !dbg !23099
  br i1 %cmp19, label %land.lhs.true21, label %if.else, !dbg !23100

land.lhs.true21:                                  ; preds = %cond.end
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23101
  %25 = load float, float* %arrayidx22, align 4, !dbg !23101
  %cmp23 = fcmp olt float %25, 0.000000e+00, !dbg !23101
  br i1 %cmp23, label %cond.true25, label %cond.false28, !dbg !23101

cond.true25:                                      ; preds = %land.lhs.true21
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23101
  %26 = load float, float* %arrayidx26, align 4, !dbg !23101
  %fneg27 = fneg float %26, !dbg !23101
  br label %cond.end30, !dbg !23101

cond.false28:                                     ; preds = %land.lhs.true21
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23101
  %27 = load float, float* %arrayidx29, align 4, !dbg !23101
  br label %cond.end30, !dbg !23101

cond.end30:                                       ; preds = %cond.false28, %cond.true25
  %cond31 = phi float [ %fneg27, %cond.true25 ], [ %27, %cond.false28 ], !dbg !23101
  %cmp32 = fcmp olt float %cond31, 0x3EB4000000000000, !dbg !23102
  br i1 %cmp32, label %land.lhs.true34, label %if.else, !dbg !23103

land.lhs.true34:                                  ; preds = %cond.end30
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23104
  %28 = load float, float* %arrayidx35, align 4, !dbg !23104
  %cmp36 = fcmp olt float %28, 0.000000e+00, !dbg !23104
  br i1 %cmp36, label %cond.true38, label %cond.false41, !dbg !23104

cond.true38:                                      ; preds = %land.lhs.true34
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23104
  %29 = load float, float* %arrayidx39, align 4, !dbg !23104
  %fneg40 = fneg float %29, !dbg !23104
  br label %cond.end43, !dbg !23104

cond.false41:                                     ; preds = %land.lhs.true34
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23104
  %30 = load float, float* %arrayidx42, align 4, !dbg !23104
  br label %cond.end43, !dbg !23104

cond.end43:                                       ; preds = %cond.false41, %cond.true38
  %cond44 = phi float [ %fneg40, %cond.true38 ], [ %30, %cond.false41 ], !dbg !23104
  %cmp45 = fcmp olt float %cond44, 0x3EB4000000000000, !dbg !23105
  br i1 %cmp45, label %if.then47, label %if.else, !dbg !23106

if.then47:                                        ; preds = %cond.end43
  %31 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !23107
  %32 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23109
  %v148 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %32, i32 0, i32 0, !dbg !23110
  store %struct.VertRen* %31, %struct.VertRen** %v148, align 8, !dbg !23111
  %33 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !23112
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23113
  %v249 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 1, !dbg !23114
  store %struct.VertRen* %33, %struct.VertRen** %v249, align 8, !dbg !23115
  %35 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !23116
  %36 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23117
  %v350 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %36, i32 0, i32 2, !dbg !23118
  store %struct.VertRen* %35, %struct.VertRen** %v350, align 8, !dbg !23119
  %37 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23120
  %v451 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %37, i32 0, i32 3, !dbg !23121
  store %struct.VertRen* null, %struct.VertRen** %v451, align 8, !dbg !23122
  br label %if.end193, !dbg !23123

if.else:                                          ; preds = %cond.end43, %cond.end30, %cond.end
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23124
  %38 = load %struct.VertRen*, %struct.VertRen** %v2, align 8, !dbg !23126
  %co53 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %38, i32 0, i32 0, !dbg !23127
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %co53, i64 0, i64 0, !dbg !23126
  %39 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !23128
  %co55 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %39, i32 0, i32 0, !dbg !23129
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !23128
  call void @sub_v3_v3v3(float* %arraydecay52, float* %arraydecay54, float* %arraydecay56), !dbg !23130
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23131
  %40 = load float, float* %arrayidx57, align 4, !dbg !23131
  %cmp58 = fcmp olt float %40, 0.000000e+00, !dbg !23131
  br i1 %cmp58, label %cond.true60, label %cond.false63, !dbg !23131

cond.true60:                                      ; preds = %if.else
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23131
  %41 = load float, float* %arrayidx61, align 4, !dbg !23131
  %fneg62 = fneg float %41, !dbg !23131
  br label %cond.end65, !dbg !23131

cond.false63:                                     ; preds = %if.else
  %arrayidx64 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23131
  %42 = load float, float* %arrayidx64, align 4, !dbg !23131
  br label %cond.end65, !dbg !23131

cond.end65:                                       ; preds = %cond.false63, %cond.true60
  %cond66 = phi float [ %fneg62, %cond.true60 ], [ %42, %cond.false63 ], !dbg !23131
  %cmp67 = fcmp olt float %cond66, 0x3EB4000000000000, !dbg !23133
  br i1 %cmp67, label %land.lhs.true69, label %if.else99, !dbg !23134

land.lhs.true69:                                  ; preds = %cond.end65
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23135
  %43 = load float, float* %arrayidx70, align 4, !dbg !23135
  %cmp71 = fcmp olt float %43, 0.000000e+00, !dbg !23135
  br i1 %cmp71, label %cond.true73, label %cond.false76, !dbg !23135

cond.true73:                                      ; preds = %land.lhs.true69
  %arrayidx74 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23135
  %44 = load float, float* %arrayidx74, align 4, !dbg !23135
  %fneg75 = fneg float %44, !dbg !23135
  br label %cond.end78, !dbg !23135

cond.false76:                                     ; preds = %land.lhs.true69
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23135
  %45 = load float, float* %arrayidx77, align 4, !dbg !23135
  br label %cond.end78, !dbg !23135

cond.end78:                                       ; preds = %cond.false76, %cond.true73
  %cond79 = phi float [ %fneg75, %cond.true73 ], [ %45, %cond.false76 ], !dbg !23135
  %cmp80 = fcmp olt float %cond79, 0x3EB4000000000000, !dbg !23136
  br i1 %cmp80, label %land.lhs.true82, label %if.else99, !dbg !23137

land.lhs.true82:                                  ; preds = %cond.end78
  %arrayidx83 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23138
  %46 = load float, float* %arrayidx83, align 4, !dbg !23138
  %cmp84 = fcmp olt float %46, 0.000000e+00, !dbg !23138
  br i1 %cmp84, label %cond.true86, label %cond.false89, !dbg !23138

cond.true86:                                      ; preds = %land.lhs.true82
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23138
  %47 = load float, float* %arrayidx87, align 4, !dbg !23138
  %fneg88 = fneg float %47, !dbg !23138
  br label %cond.end91, !dbg !23138

cond.false89:                                     ; preds = %land.lhs.true82
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23138
  %48 = load float, float* %arrayidx90, align 4, !dbg !23138
  br label %cond.end91, !dbg !23138

cond.end91:                                       ; preds = %cond.false89, %cond.true86
  %cond92 = phi float [ %fneg88, %cond.true86 ], [ %48, %cond.false89 ], !dbg !23138
  %cmp93 = fcmp olt float %cond92, 0x3EB4000000000000, !dbg !23139
  br i1 %cmp93, label %if.then95, label %if.else99, !dbg !23140

if.then95:                                        ; preds = %cond.end91
  %49 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !23141
  %50 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23143
  %v296 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %50, i32 0, i32 1, !dbg !23144
  store %struct.VertRen* %49, %struct.VertRen** %v296, align 8, !dbg !23145
  %51 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !23146
  %52 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23147
  %v397 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %52, i32 0, i32 2, !dbg !23148
  store %struct.VertRen* %51, %struct.VertRen** %v397, align 8, !dbg !23149
  %53 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23150
  %v498 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %53, i32 0, i32 3, !dbg !23151
  store %struct.VertRen* null, %struct.VertRen** %v498, align 8, !dbg !23152
  br label %if.end192, !dbg !23153

if.else99:                                        ; preds = %cond.end91, %cond.end78, %cond.end65
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23154
  %54 = load %struct.VertRen*, %struct.VertRen** %v3, align 8, !dbg !23156
  %co101 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %54, i32 0, i32 0, !dbg !23157
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %co101, i64 0, i64 0, !dbg !23156
  %55 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !23158
  %co103 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %55, i32 0, i32 0, !dbg !23159
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %co103, i64 0, i64 0, !dbg !23158
  call void @sub_v3_v3v3(float* %arraydecay100, float* %arraydecay102, float* %arraydecay104), !dbg !23160
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23161
  %56 = load float, float* %arrayidx105, align 4, !dbg !23161
  %cmp106 = fcmp olt float %56, 0.000000e+00, !dbg !23161
  br i1 %cmp106, label %cond.true108, label %cond.false111, !dbg !23161

cond.true108:                                     ; preds = %if.else99
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23161
  %57 = load float, float* %arrayidx109, align 4, !dbg !23161
  %fneg110 = fneg float %57, !dbg !23161
  br label %cond.end113, !dbg !23161

cond.false111:                                    ; preds = %if.else99
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23161
  %58 = load float, float* %arrayidx112, align 4, !dbg !23161
  br label %cond.end113, !dbg !23161

cond.end113:                                      ; preds = %cond.false111, %cond.true108
  %cond114 = phi float [ %fneg110, %cond.true108 ], [ %58, %cond.false111 ], !dbg !23161
  %cmp115 = fcmp olt float %cond114, 0x3EB4000000000000, !dbg !23163
  br i1 %cmp115, label %land.lhs.true117, label %if.else145, !dbg !23164

land.lhs.true117:                                 ; preds = %cond.end113
  %arrayidx118 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23165
  %59 = load float, float* %arrayidx118, align 4, !dbg !23165
  %cmp119 = fcmp olt float %59, 0.000000e+00, !dbg !23165
  br i1 %cmp119, label %cond.true121, label %cond.false124, !dbg !23165

cond.true121:                                     ; preds = %land.lhs.true117
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23165
  %60 = load float, float* %arrayidx122, align 4, !dbg !23165
  %fneg123 = fneg float %60, !dbg !23165
  br label %cond.end126, !dbg !23165

cond.false124:                                    ; preds = %land.lhs.true117
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23165
  %61 = load float, float* %arrayidx125, align 4, !dbg !23165
  br label %cond.end126, !dbg !23165

cond.end126:                                      ; preds = %cond.false124, %cond.true121
  %cond127 = phi float [ %fneg123, %cond.true121 ], [ %61, %cond.false124 ], !dbg !23165
  %cmp128 = fcmp olt float %cond127, 0x3EB4000000000000, !dbg !23166
  br i1 %cmp128, label %land.lhs.true130, label %if.else145, !dbg !23167

land.lhs.true130:                                 ; preds = %cond.end126
  %arrayidx131 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23168
  %62 = load float, float* %arrayidx131, align 4, !dbg !23168
  %cmp132 = fcmp olt float %62, 0.000000e+00, !dbg !23168
  br i1 %cmp132, label %cond.true134, label %cond.false137, !dbg !23168

cond.true134:                                     ; preds = %land.lhs.true130
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23168
  %63 = load float, float* %arrayidx135, align 4, !dbg !23168
  %fneg136 = fneg float %63, !dbg !23168
  br label %cond.end139, !dbg !23168

cond.false137:                                    ; preds = %land.lhs.true130
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23168
  %64 = load float, float* %arrayidx138, align 4, !dbg !23168
  br label %cond.end139, !dbg !23168

cond.end139:                                      ; preds = %cond.false137, %cond.true134
  %cond140 = phi float [ %fneg136, %cond.true134 ], [ %64, %cond.false137 ], !dbg !23168
  %cmp141 = fcmp olt float %cond140, 0x3EB4000000000000, !dbg !23169
  br i1 %cmp141, label %if.then143, label %if.else145, !dbg !23170

if.then143:                                       ; preds = %cond.end139
  %65 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23171
  %v4144 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %65, i32 0, i32 3, !dbg !23173
  store %struct.VertRen* null, %struct.VertRen** %v4144, align 8, !dbg !23174
  br label %if.end191, !dbg !23175

if.else145:                                       ; preds = %cond.end139, %cond.end126, %cond.end113
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23176
  %66 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !23178
  %co147 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %66, i32 0, i32 0, !dbg !23179
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %co147, i64 0, i64 0, !dbg !23178
  %67 = load %struct.VertRen*, %struct.VertRen** %v1, align 8, !dbg !23180
  %co149 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %67, i32 0, i32 0, !dbg !23181
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %co149, i64 0, i64 0, !dbg !23180
  call void @sub_v3_v3v3(float* %arraydecay146, float* %arraydecay148, float* %arraydecay150), !dbg !23182
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23183
  %68 = load float, float* %arrayidx151, align 4, !dbg !23183
  %cmp152 = fcmp olt float %68, 0.000000e+00, !dbg !23183
  br i1 %cmp152, label %cond.true154, label %cond.false157, !dbg !23183

cond.true154:                                     ; preds = %if.else145
  %arrayidx155 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23183
  %69 = load float, float* %arrayidx155, align 4, !dbg !23183
  %fneg156 = fneg float %69, !dbg !23183
  br label %cond.end159, !dbg !23183

cond.false157:                                    ; preds = %if.else145
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23183
  %70 = load float, float* %arrayidx158, align 4, !dbg !23183
  br label %cond.end159, !dbg !23183

cond.end159:                                      ; preds = %cond.false157, %cond.true154
  %cond160 = phi float [ %fneg156, %cond.true154 ], [ %70, %cond.false157 ], !dbg !23183
  %cmp161 = fcmp olt float %cond160, 0x3EB4000000000000, !dbg !23185
  br i1 %cmp161, label %land.lhs.true163, label %if.end, !dbg !23186

land.lhs.true163:                                 ; preds = %cond.end159
  %arrayidx164 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23187
  %71 = load float, float* %arrayidx164, align 4, !dbg !23187
  %cmp165 = fcmp olt float %71, 0.000000e+00, !dbg !23187
  br i1 %cmp165, label %cond.true167, label %cond.false170, !dbg !23187

cond.true167:                                     ; preds = %land.lhs.true163
  %arrayidx168 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23187
  %72 = load float, float* %arrayidx168, align 4, !dbg !23187
  %fneg169 = fneg float %72, !dbg !23187
  br label %cond.end172, !dbg !23187

cond.false170:                                    ; preds = %land.lhs.true163
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 1, !dbg !23187
  %73 = load float, float* %arrayidx171, align 4, !dbg !23187
  br label %cond.end172, !dbg !23187

cond.end172:                                      ; preds = %cond.false170, %cond.true167
  %cond173 = phi float [ %fneg169, %cond.true167 ], [ %73, %cond.false170 ], !dbg !23187
  %cmp174 = fcmp olt float %cond173, 0x3EB4000000000000, !dbg !23188
  br i1 %cmp174, label %land.lhs.true176, label %if.end, !dbg !23189

land.lhs.true176:                                 ; preds = %cond.end172
  %arrayidx177 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23190
  %74 = load float, float* %arrayidx177, align 4, !dbg !23190
  %cmp178 = fcmp olt float %74, 0.000000e+00, !dbg !23190
  br i1 %cmp178, label %cond.true180, label %cond.false183, !dbg !23190

cond.true180:                                     ; preds = %land.lhs.true176
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23190
  %75 = load float, float* %arrayidx181, align 4, !dbg !23190
  %fneg182 = fneg float %75, !dbg !23190
  br label %cond.end185, !dbg !23190

cond.false183:                                    ; preds = %land.lhs.true176
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 2, !dbg !23190
  %76 = load float, float* %arrayidx184, align 4, !dbg !23190
  br label %cond.end185, !dbg !23190

cond.end185:                                      ; preds = %cond.false183, %cond.true180
  %cond186 = phi float [ %fneg182, %cond.true180 ], [ %76, %cond.false183 ], !dbg !23190
  %cmp187 = fcmp olt float %cond186, 0x3EB4000000000000, !dbg !23191
  br i1 %cmp187, label %if.then189, label %if.end, !dbg !23192

if.then189:                                       ; preds = %cond.end185
  %77 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23193
  %v4190 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %77, i32 0, i32 3, !dbg !23195
  store %struct.VertRen* null, %struct.VertRen** %v4190, align 8, !dbg !23196
  br label %if.end, !dbg !23197

if.end:                                           ; preds = %if.then189, %cond.end185, %cond.end172, %cond.end159
  br label %if.end191

if.end191:                                        ; preds = %if.end, %if.then143
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then95
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then47
  %78 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23198
  %v4194 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %78, i32 0, i32 3, !dbg !23200
  %79 = load %struct.VertRen*, %struct.VertRen** %v4194, align 8, !dbg !23200
  %tobool195 = icmp ne %struct.VertRen* %79, null, !dbg !23198
  br i1 %tobool195, label %if.then196, label %if.end346, !dbg !23201

if.then196:                                       ; preds = %if.end193
  %arraydecay197 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23202
  %80 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23204
  %v4198 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %80, i32 0, i32 3, !dbg !23205
  %81 = load %struct.VertRen*, %struct.VertRen** %v4198, align 8, !dbg !23205
  %co199 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %81, i32 0, i32 0, !dbg !23206
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %co199, i64 0, i64 0, !dbg !23204
  %82 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23207
  %v3201 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %82, i32 0, i32 2, !dbg !23208
  %83 = load %struct.VertRen*, %struct.VertRen** %v3201, align 8, !dbg !23208
  %co202 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %83, i32 0, i32 0, !dbg !23209
  %arraydecay203 = getelementptr inbounds [3 x float], [3 x float]* %co202, i64 0, i64 0, !dbg !23207
  %84 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23210
  %v1204 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %84, i32 0, i32 0, !dbg !23211
  %85 = load %struct.VertRen*, %struct.VertRen** %v1204, align 8, !dbg !23211
  %co205 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %85, i32 0, i32 0, !dbg !23212
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %co205, i64 0, i64 0, !dbg !23210
  %call207 = call float @normal_tri_v3(float* %arraydecay197, float* %arraydecay200, float* %arraydecay203, float* %arraydecay206), !dbg !23213
  store float %call207, float* %flen, align 4, !dbg !23214
  %86 = load float, float* %flen, align 4, !dbg !23215
  %cmp208 = fcmp oeq float %86, 0.000000e+00, !dbg !23217
  br i1 %cmp208, label %if.then210, label %if.end222, !dbg !23218

if.then210:                                       ; preds = %if.then196
  %arraydecay211 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23219
  %87 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23220
  %v4212 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %87, i32 0, i32 3, !dbg !23221
  %88 = load %struct.VertRen*, %struct.VertRen** %v4212, align 8, !dbg !23221
  %co213 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %88, i32 0, i32 0, !dbg !23222
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %co213, i64 0, i64 0, !dbg !23220
  %89 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23223
  %v2215 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %89, i32 0, i32 1, !dbg !23224
  %90 = load %struct.VertRen*, %struct.VertRen** %v2215, align 8, !dbg !23224
  %co216 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %90, i32 0, i32 0, !dbg !23225
  %arraydecay217 = getelementptr inbounds [3 x float], [3 x float]* %co216, i64 0, i64 0, !dbg !23223
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23226
  %v1218 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %91, i32 0, i32 0, !dbg !23227
  %92 = load %struct.VertRen*, %struct.VertRen** %v1218, align 8, !dbg !23227
  %co219 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %92, i32 0, i32 0, !dbg !23228
  %arraydecay220 = getelementptr inbounds [3 x float], [3 x float]* %co219, i64 0, i64 0, !dbg !23226
  %call221 = call float @normal_tri_v3(float* %arraydecay211, float* %arraydecay214, float* %arraydecay217, float* %arraydecay220), !dbg !23229
  br label %if.end222, !dbg !23229

if.end222:                                        ; preds = %if.then210, %if.then196
  %arraydecay223 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23230
  %93 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23231
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %93, i32 0, i32 4, !dbg !23232
  %arraydecay224 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !23231
  %call225 = call float @dot_v3v3(float* %arraydecay223, float* %arraydecay224), !dbg !23233
  store float %call225, float* %xn, align 4, !dbg !23234
  %94 = load float, float* %xn, align 4, !dbg !23235
  %cmp226 = fcmp olt float %94, 0.000000e+00, !dbg !23235
  br i1 %cmp226, label %cond.true228, label %cond.false230, !dbg !23235

cond.true228:                                     ; preds = %if.end222
  %95 = load float, float* %xn, align 4, !dbg !23235
  %fneg229 = fneg float %95, !dbg !23235
  br label %cond.end231, !dbg !23235

cond.false230:                                    ; preds = %if.end222
  %96 = load float, float* %xn, align 4, !dbg !23235
  br label %cond.end231, !dbg !23235

cond.end231:                                      ; preds = %cond.false230, %cond.true228
  %cond232 = phi float [ %fneg229, %cond.true228 ], [ %96, %cond.false230 ], !dbg !23235
  %cmp233 = fcmp olt float %cond232, 0x3FEFFFF580000000, !dbg !23237
  br i1 %cmp233, label %if.then235, label %if.else340, !dbg !23238

if.then235:                                       ; preds = %cond.end231
  call void @llvm.dbg.declare(metadata float* %d1, metadata !23239, metadata !DIExpression()), !dbg !23241
  call void @llvm.dbg.declare(metadata float* %d2, metadata !23242, metadata !DIExpression()), !dbg !23243
  %97 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !23244
  %98 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23245
  %call236 = call %struct.VlakRen* @RE_vlakren_copy(%struct.ObjectRen* %97, %struct.VlakRen* %98), !dbg !23246
  store %struct.VlakRen* %call236, %struct.VlakRen** %vlr1, align 8, !dbg !23247
  %99 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23248
  %flag237 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %99, i32 0, i32 7, !dbg !23249
  %100 = load i8, i8* %flag237, align 1, !dbg !23250
  %conv238 = zext i8 %100 to i32, !dbg !23250
  %or = or i32 %conv238, 16, !dbg !23250
  %conv239 = trunc i32 %or to i8, !dbg !23250
  store i8 %conv239, i8* %flag237, align 1, !dbg !23250
  %arraydecay240 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23251
  %101 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23252
  %v1241 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %101, i32 0, i32 0, !dbg !23253
  %102 = load %struct.VertRen*, %struct.VertRen** %v1241, align 8, !dbg !23253
  %co242 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %102, i32 0, i32 0, !dbg !23254
  %arraydecay243 = getelementptr inbounds [3 x float], [3 x float]* %co242, i64 0, i64 0, !dbg !23252
  %103 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23255
  %v2244 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %103, i32 0, i32 1, !dbg !23256
  %104 = load %struct.VertRen*, %struct.VertRen** %v2244, align 8, !dbg !23256
  %co245 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %104, i32 0, i32 0, !dbg !23257
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %co245, i64 0, i64 0, !dbg !23255
  %105 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23258
  %v3247 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %105, i32 0, i32 2, !dbg !23259
  %106 = load %struct.VertRen*, %struct.VertRen** %v3247, align 8, !dbg !23259
  %co248 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %106, i32 0, i32 0, !dbg !23260
  %arraydecay249 = getelementptr inbounds [3 x float], [3 x float]* %co248, i64 0, i64 0, !dbg !23258
  %call250 = call float @normal_tri_v3(float* %arraydecay240, float* %arraydecay243, float* %arraydecay246, float* %arraydecay249), !dbg !23261
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23262
  %107 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23263
  %v1252 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %107, i32 0, i32 0, !dbg !23264
  %108 = load %struct.VertRen*, %struct.VertRen** %v1252, align 8, !dbg !23264
  %n253 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %108, i32 0, i32 1, !dbg !23265
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %n253, i64 0, i64 0, !dbg !23263
  %call255 = call float @dot_v3v3(float* %arraydecay251, float* %arraydecay254), !dbg !23266
  store float %call255, float* %d1, align 4, !dbg !23267
  %arraydecay256 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23268
  %109 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23269
  %v2257 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %109, i32 0, i32 1, !dbg !23270
  %110 = load %struct.VertRen*, %struct.VertRen** %v2257, align 8, !dbg !23270
  %co258 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %110, i32 0, i32 0, !dbg !23271
  %arraydecay259 = getelementptr inbounds [3 x float], [3 x float]* %co258, i64 0, i64 0, !dbg !23269
  %111 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23272
  %v3260 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %111, i32 0, i32 2, !dbg !23273
  %112 = load %struct.VertRen*, %struct.VertRen** %v3260, align 8, !dbg !23273
  %co261 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %112, i32 0, i32 0, !dbg !23274
  %arraydecay262 = getelementptr inbounds [3 x float], [3 x float]* %co261, i64 0, i64 0, !dbg !23272
  %113 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23275
  %v4263 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %113, i32 0, i32 3, !dbg !23276
  %114 = load %struct.VertRen*, %struct.VertRen** %v4263, align 8, !dbg !23276
  %co264 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %114, i32 0, i32 0, !dbg !23277
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %co264, i64 0, i64 0, !dbg !23275
  %call266 = call float @normal_tri_v3(float* %arraydecay256, float* %arraydecay259, float* %arraydecay262, float* %arraydecay265), !dbg !23278
  %arraydecay267 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !23279
  %115 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23280
  %v2268 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %115, i32 0, i32 1, !dbg !23281
  %116 = load %struct.VertRen*, %struct.VertRen** %v2268, align 8, !dbg !23281
  %n269 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %116, i32 0, i32 1, !dbg !23282
  %arraydecay270 = getelementptr inbounds [3 x float], [3 x float]* %n269, i64 0, i64 0, !dbg !23280
  %call271 = call float @dot_v3v3(float* %arraydecay267, float* %arraydecay270), !dbg !23283
  store float %call271, float* %d2, align 4, !dbg !23284
  %117 = load float, float* %d1, align 4, !dbg !23285
  %118 = call float @llvm.fabs.f32(float %117), !dbg !23287
  %119 = load float, float* %d2, align 4, !dbg !23288
  %120 = call float @llvm.fabs.f32(float %119), !dbg !23289
  %cmp272 = fcmp olt float %118, %120, !dbg !23290
  br i1 %cmp272, label %if.then274, label %if.else279, !dbg !23291

if.then274:                                       ; preds = %if.then235
  %121 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23292
  %flag275 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %121, i32 0, i32 7, !dbg !23293
  %122 = load i8, i8* %flag275, align 1, !dbg !23294
  %conv276 = zext i8 %122 to i32, !dbg !23294
  %or277 = or i32 %conv276, 32, !dbg !23294
  %conv278 = trunc i32 %or277 to i8, !dbg !23294
  store i8 %conv278, i8* %flag275, align 1, !dbg !23294
  br label %if.end284, !dbg !23292

if.else279:                                       ; preds = %if.then235
  %123 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23295
  %flag280 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %123, i32 0, i32 7, !dbg !23296
  %124 = load i8, i8* %flag280, align 1, !dbg !23297
  %conv281 = zext i8 %124 to i32, !dbg !23297
  %and282 = and i32 %conv281, -33, !dbg !23297
  %conv283 = trunc i32 %and282 to i8, !dbg !23297
  store i8 %conv283, i8* %flag280, align 1, !dbg !23297
  br label %if.end284

if.end284:                                        ; preds = %if.else279, %if.then274
  %125 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23298
  %flag285 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %125, i32 0, i32 7, !dbg !23300
  %126 = load i8, i8* %flag285, align 1, !dbg !23300
  %conv286 = zext i8 %126 to i32, !dbg !23298
  %and287 = and i32 %conv286, 32, !dbg !23301
  %tobool288 = icmp ne i32 %and287, 0, !dbg !23301
  br i1 %tobool288, label %if.then289, label %if.else302, !dbg !23302

if.then289:                                       ; preds = %if.end284
  %127 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23303
  %v2290 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %127, i32 0, i32 1, !dbg !23305
  %128 = load %struct.VertRen*, %struct.VertRen** %v2290, align 8, !dbg !23305
  %129 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23306
  %v1291 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %129, i32 0, i32 0, !dbg !23307
  store %struct.VertRen* %128, %struct.VertRen** %v1291, align 8, !dbg !23308
  %130 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23309
  %v3292 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %130, i32 0, i32 2, !dbg !23310
  %131 = load %struct.VertRen*, %struct.VertRen** %v3292, align 8, !dbg !23310
  %132 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23311
  %v2293 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %132, i32 0, i32 1, !dbg !23312
  store %struct.VertRen* %131, %struct.VertRen** %v2293, align 8, !dbg !23313
  %133 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23314
  %v4294 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %133, i32 0, i32 3, !dbg !23315
  %134 = load %struct.VertRen*, %struct.VertRen** %v4294, align 8, !dbg !23315
  %135 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23316
  %v3295 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %135, i32 0, i32 2, !dbg !23317
  store %struct.VertRen* %134, %struct.VertRen** %v3295, align 8, !dbg !23318
  %136 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23319
  %v4296 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %136, i32 0, i32 3, !dbg !23320
  %137 = load %struct.VertRen*, %struct.VertRen** %v4296, align 8, !dbg !23320
  %138 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23321
  %v3297 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %138, i32 0, i32 2, !dbg !23322
  store %struct.VertRen* %137, %struct.VertRen** %v3297, align 8, !dbg !23323
  %139 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23324
  %flag298 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %139, i32 0, i32 7, !dbg !23325
  %140 = load i8, i8* %flag298, align 1, !dbg !23326
  %conv299 = zext i8 %140 to i32, !dbg !23326
  %or300 = or i32 %conv299, 32, !dbg !23326
  %conv301 = trunc i32 %or300 to i8, !dbg !23326
  store i8 %conv301, i8* %flag298, align 1, !dbg !23326
  br label %if.end313, !dbg !23327

if.else302:                                       ; preds = %if.end284
  %141 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23328
  %v1303 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %141, i32 0, i32 0, !dbg !23330
  %142 = load %struct.VertRen*, %struct.VertRen** %v1303, align 8, !dbg !23330
  %143 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23331
  %v1304 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %143, i32 0, i32 0, !dbg !23332
  store %struct.VertRen* %142, %struct.VertRen** %v1304, align 8, !dbg !23333
  %144 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23334
  %v3305 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %144, i32 0, i32 2, !dbg !23335
  %145 = load %struct.VertRen*, %struct.VertRen** %v3305, align 8, !dbg !23335
  %146 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23336
  %v2306 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %146, i32 0, i32 1, !dbg !23337
  store %struct.VertRen* %145, %struct.VertRen** %v2306, align 8, !dbg !23338
  %147 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23339
  %v4307 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %147, i32 0, i32 3, !dbg !23340
  %148 = load %struct.VertRen*, %struct.VertRen** %v4307, align 8, !dbg !23340
  %149 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23341
  %v3308 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %149, i32 0, i32 2, !dbg !23342
  store %struct.VertRen* %148, %struct.VertRen** %v3308, align 8, !dbg !23343
  %150 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23344
  %flag309 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %150, i32 0, i32 7, !dbg !23345
  %151 = load i8, i8* %flag309, align 1, !dbg !23346
  %conv310 = zext i8 %151 to i32, !dbg !23346
  %and311 = and i32 %conv310, -33, !dbg !23346
  %conv312 = trunc i32 %and311 to i8, !dbg !23346
  store i8 %conv312, i8* %flag309, align 1, !dbg !23346
  br label %if.end313

if.end313:                                        ; preds = %if.else302, %if.then289
  %152 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23347
  %v4314 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %152, i32 0, i32 3, !dbg !23348
  store %struct.VertRen* null, %struct.VertRen** %v4314, align 8, !dbg !23349
  %153 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23350
  %v4315 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %153, i32 0, i32 3, !dbg !23351
  store %struct.VertRen* null, %struct.VertRen** %v4315, align 8, !dbg !23352
  %154 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23353
  %n316 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %154, i32 0, i32 4, !dbg !23354
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %n316, i64 0, i64 0, !dbg !23353
  %155 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23355
  %v3318 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %155, i32 0, i32 2, !dbg !23356
  %156 = load %struct.VertRen*, %struct.VertRen** %v3318, align 8, !dbg !23356
  %co319 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %156, i32 0, i32 0, !dbg !23357
  %arraydecay320 = getelementptr inbounds [3 x float], [3 x float]* %co319, i64 0, i64 0, !dbg !23355
  %157 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23358
  %v2321 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %157, i32 0, i32 1, !dbg !23359
  %158 = load %struct.VertRen*, %struct.VertRen** %v2321, align 8, !dbg !23359
  %co322 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %158, i32 0, i32 0, !dbg !23360
  %arraydecay323 = getelementptr inbounds [3 x float], [3 x float]* %co322, i64 0, i64 0, !dbg !23358
  %159 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23361
  %v1324 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %159, i32 0, i32 0, !dbg !23362
  %160 = load %struct.VertRen*, %struct.VertRen** %v1324, align 8, !dbg !23362
  %co325 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %160, i32 0, i32 0, !dbg !23363
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %co325, i64 0, i64 0, !dbg !23361
  %call327 = call float @normal_tri_v3(float* %arraydecay317, float* %arraydecay320, float* %arraydecay323, float* %arraydecay326), !dbg !23364
  %161 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23365
  %n328 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %161, i32 0, i32 4, !dbg !23366
  %arraydecay329 = getelementptr inbounds [3 x float], [3 x float]* %n328, i64 0, i64 0, !dbg !23365
  %162 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23367
  %v3330 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %162, i32 0, i32 2, !dbg !23368
  %163 = load %struct.VertRen*, %struct.VertRen** %v3330, align 8, !dbg !23368
  %co331 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %163, i32 0, i32 0, !dbg !23369
  %arraydecay332 = getelementptr inbounds [3 x float], [3 x float]* %co331, i64 0, i64 0, !dbg !23367
  %164 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23370
  %v2333 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %164, i32 0, i32 1, !dbg !23371
  %165 = load %struct.VertRen*, %struct.VertRen** %v2333, align 8, !dbg !23371
  %co334 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %165, i32 0, i32 0, !dbg !23372
  %arraydecay335 = getelementptr inbounds [3 x float], [3 x float]* %co334, i64 0, i64 0, !dbg !23370
  %166 = load %struct.VlakRen*, %struct.VlakRen** %vlr1, align 8, !dbg !23373
  %v1336 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %166, i32 0, i32 0, !dbg !23374
  %167 = load %struct.VertRen*, %struct.VertRen** %v1336, align 8, !dbg !23374
  %co337 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %167, i32 0, i32 0, !dbg !23375
  %arraydecay338 = getelementptr inbounds [3 x float], [3 x float]* %co337, i64 0, i64 0, !dbg !23373
  %call339 = call float @normal_tri_v3(float* %arraydecay329, float* %arraydecay332, float* %arraydecay335, float* %arraydecay338), !dbg !23376
  br label %if.end345, !dbg !23377

if.else340:                                       ; preds = %cond.end231
  %168 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23378
  %flag341 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %168, i32 0, i32 7, !dbg !23379
  %169 = load i8, i8* %flag341, align 1, !dbg !23380
  %conv342 = zext i8 %169 to i32, !dbg !23380
  %and343 = and i32 %conv342, -33, !dbg !23380
  %conv344 = trunc i32 %and343 to i8, !dbg !23380
  store i8 %conv344, i8* %flag341, align 1, !dbg !23380
  br label %if.end345

if.end345:                                        ; preds = %if.else340, %if.end313
  br label %if.end346, !dbg !23381

if.end346:                                        ; preds = %if.end345, %if.end193
  br label %if.end347, !dbg !23382

if.end347:                                        ; preds = %if.end346, %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc, !dbg !23383

for.inc:                                          ; preds = %if.end347
  %170 = load i32, i32* %a, align 4, !dbg !23384
  %dec = add nsw i32 %170, -1, !dbg !23384
  store i32 %dec, i32* %a, align 4, !dbg !23384
  br label %for.cond, !dbg !23385, !llvm.loop !23386

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23388
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_fullsample_trace_flag(%struct.Render* %re, %struct.ObjectRen* %obr) #0 !dbg !23389 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %obr.addr = alloca %struct.ObjectRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  %trace = alloca i32, align 4
  %mode = alloca i32, align 4
  %osa = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !23390, metadata !DIExpression()), !dbg !23391
  store %struct.ObjectRen* %obr, %struct.ObjectRen** %obr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr.addr, metadata !23392, metadata !DIExpression()), !dbg !23393
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !23394, metadata !DIExpression()), !dbg !23395
  call void @llvm.dbg.declare(metadata i32* %a, metadata !23396, metadata !DIExpression()), !dbg !23397
  call void @llvm.dbg.declare(metadata i32* %trace, metadata !23398, metadata !DIExpression()), !dbg !23399
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !23400, metadata !DIExpression()), !dbg !23401
  call void @llvm.dbg.declare(metadata i32* %osa, metadata !23402, metadata !DIExpression()), !dbg !23403
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23404
  %osa1 = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 5, !dbg !23405
  %1 = load i16, i16* %osa1, align 2, !dbg !23405
  %conv = sext i16 %1 to i32, !dbg !23404
  store i32 %conv, i32* %osa, align 4, !dbg !23406
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23407
  %r = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 45, !dbg !23408
  %mode2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 47, !dbg !23409
  %3 = load i32, i32* %mode2, align 8, !dbg !23409
  %and = and i32 %3, 65536, !dbg !23410
  store i32 %and, i32* %trace, align 4, !dbg !23411
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !23412
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %4, i32 0, i32 11, !dbg !23414
  %5 = load i32, i32* %totvlak, align 4, !dbg !23414
  %sub = sub nsw i32 %5, 1, !dbg !23415
  store i32 %sub, i32* %a, align 4, !dbg !23416
  br label %for.cond, !dbg !23417

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %a, align 4, !dbg !23418
  %cmp = icmp sge i32 %6, 0, !dbg !23420
  br i1 %cmp, label %for.body, label %for.end, !dbg !23421

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr.addr, align 8, !dbg !23422
  %8 = load i32, i32* %a, align 4, !dbg !23424
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %7, i32 %8), !dbg !23425
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !23426
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23427
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 5, !dbg !23428
  %10 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !23428
  %mode4 = getelementptr inbounds %struct.Material, %struct.Material* %10, i32 0, i32 51, !dbg !23429
  %11 = load i32, i32* %mode4, align 4, !dbg !23429
  store i32 %11, i32* %mode, align 4, !dbg !23430
  %12 = load i32, i32* %trace, align 4, !dbg !23431
  %tobool = icmp ne i32 %12, 0, !dbg !23431
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !23433

land.lhs.true:                                    ; preds = %for.body
  %13 = load i32, i32* %mode, align 4, !dbg !23434
  %and5 = and i32 %13, 1, !dbg !23435
  %tobool6 = icmp ne i32 %and5, 0, !dbg !23435
  br i1 %tobool6, label %if.then, label %if.end, !dbg !23436

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23437
  %flag = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 0, i32 7, !dbg !23438
  %15 = load i8, i8* %flag, align 1, !dbg !23439
  %conv7 = zext i8 %15 to i32, !dbg !23439
  %or = or i32 %conv7, 128, !dbg !23439
  %conv8 = trunc i32 %or to i8, !dbg !23439
  store i8 %conv8, i8* %flag, align 1, !dbg !23439
  br label %if.end, !dbg !23437

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %16 = load i32, i32* %osa, align 4, !dbg !23440
  %tobool9 = icmp ne i32 %16, 0, !dbg !23440
  br i1 %tobool9, label %if.then10, label %if.end56, !dbg !23442

if.then10:                                        ; preds = %if.end
  %17 = load i32, i32* %mode, align 4, !dbg !23443
  %and11 = and i32 %17, 8388608, !dbg !23446
  %tobool12 = icmp ne i32 %and11, 0, !dbg !23446
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !23447

if.then13:                                        ; preds = %if.then10
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23448
  %flag14 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 7, !dbg !23450
  %19 = load i8, i8* %flag14, align 1, !dbg !23451
  %conv15 = zext i8 %19 to i32, !dbg !23451
  %or16 = or i32 %conv15, 8, !dbg !23451
  %conv17 = trunc i32 %or16 to i8, !dbg !23451
  store i8 %conv17, i8* %flag14, align 1, !dbg !23451
  br label %if.end55, !dbg !23452

if.else:                                          ; preds = %if.then10
  %20 = load i32, i32* %trace, align 4, !dbg !23453
  %tobool18 = icmp ne i32 %20, 0, !dbg !23453
  br i1 %tobool18, label %if.then19, label %if.end54, !dbg !23455

if.then19:                                        ; preds = %if.else
  %21 = load i32, i32* %mode, align 4, !dbg !23456
  %and20 = and i32 %21, 4, !dbg !23459
  %tobool21 = icmp ne i32 %and20, 0, !dbg !23459
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !23460

if.then22:                                        ; preds = %if.then19
  br label %if.end53, !dbg !23461

if.else23:                                        ; preds = %if.then19
  %22 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23463
  %mat24 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %22, i32 0, i32 5, !dbg !23465
  %23 = load %struct.Material*, %struct.Material** %mat24, align 8, !dbg !23465
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %23, i32 0, i32 2, !dbg !23466
  %24 = load i16, i16* %material_type, align 8, !dbg !23466
  %conv25 = sext i16 %24 to i32, !dbg !23463
  %cmp26 = icmp eq i32 %conv25, 2, !dbg !23467
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !23468

if.then28:                                        ; preds = %if.else23
  br label %if.end52, !dbg !23469

if.else29:                                        ; preds = %if.else23
  %25 = load i32, i32* %mode, align 4, !dbg !23471
  %and30 = and i32 %25, 262144, !dbg !23473
  %tobool31 = icmp ne i32 %and30, 0, !dbg !23473
  br i1 %tobool31, label %if.then37, label %lor.lhs.false, !dbg !23474

lor.lhs.false:                                    ; preds = %if.else29
  %26 = load i32, i32* %mode, align 4, !dbg !23475
  %and32 = and i32 %26, 65536, !dbg !23476
  %tobool33 = icmp ne i32 %and32, 0, !dbg !23476
  br i1 %tobool33, label %land.lhs.true34, label %if.end51, !dbg !23477

land.lhs.true34:                                  ; preds = %lor.lhs.false
  %27 = load i32, i32* %mode, align 4, !dbg !23478
  %and35 = and i32 %27, 131072, !dbg !23479
  %tobool36 = icmp ne i32 %and35, 0, !dbg !23479
  br i1 %tobool36, label %if.then37, label %if.end51, !dbg !23480

if.then37:                                        ; preds = %land.lhs.true34, %if.else29
  %28 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23481
  %mat38 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %28, i32 0, i32 5, !dbg !23484
  %29 = load %struct.Material*, %struct.Material** %mat38, align 8, !dbg !23484
  %gloss_mir = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 41, !dbg !23485
  %30 = load float, float* %gloss_mir, align 4, !dbg !23485
  %cmp39 = fcmp oeq float %30, 1.000000e+00, !dbg !23486
  br i1 %cmp39, label %land.lhs.true41, label %if.end50, !dbg !23487

land.lhs.true41:                                  ; preds = %if.then37
  %31 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23488
  %mat42 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %31, i32 0, i32 5, !dbg !23489
  %32 = load %struct.Material*, %struct.Material** %mat42, align 8, !dbg !23489
  %gloss_tra = getelementptr inbounds %struct.Material, %struct.Material* %32, i32 0, i32 42, !dbg !23490
  %33 = load float, float* %gloss_tra, align 8, !dbg !23490
  %cmp43 = fcmp oeq float %33, 1.000000e+00, !dbg !23491
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !23492

if.then45:                                        ; preds = %land.lhs.true41
  %34 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !23493
  %flag46 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %34, i32 0, i32 7, !dbg !23494
  %35 = load i8, i8* %flag46, align 1, !dbg !23495
  %conv47 = zext i8 %35 to i32, !dbg !23495
  %or48 = or i32 %conv47, 8, !dbg !23495
  %conv49 = trunc i32 %or48 to i8, !dbg !23495
  store i8 %conv49, i8* %flag46, align 1, !dbg !23495
  br label %if.end50, !dbg !23493

if.end50:                                         ; preds = %if.then45, %land.lhs.true41, %if.then37
  br label %if.end51, !dbg !23496

if.end51:                                         ; preds = %if.end50, %land.lhs.true34, %lor.lhs.false
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then28
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then22
  br label %if.end54, !dbg !23497

if.end54:                                         ; preds = %if.end53, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then13
  br label %if.end56, !dbg !23498

if.end56:                                         ; preds = %if.end55, %if.end
  br label %for.inc, !dbg !23499

for.inc:                                          ; preds = %if.end56
  %36 = load i32, i32* %a, align 4, !dbg !23500
  %dec = add nsw i32 %36, -1, !dbg !23500
  store i32 %dec, i32* %a, align 4, !dbg !23500
  br label %for.cond, !dbg !23501, !llvm.loop !23502

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23504
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !23505 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !23508, metadata !DIExpression()), !dbg !23509
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !23510, metadata !DIExpression()), !dbg !23511
  %0 = load float, float* %a.addr, align 4, !dbg !23512
  %1 = load float, float* %b.addr, align 4, !dbg !23513
  %cmp = fcmp ogt float %0, %1, !dbg !23514
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !23515

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !23516
  br label %cond.end, !dbg !23515

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !23517
  br label %cond.end, !dbg !23515

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !23515
  ret float %cond, !dbg !23518
}

declare dso_local void @strand_minmax(%struct.StrandRen*, float*, float*, float) #4

declare dso_local %struct.VlakRen* @RE_vlakren_copy(%struct.ObjectRen*, %struct.VlakRen*) #4

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #4

; Function Attrs: noinline nounwind uwtable
define internal void @flag_render_node_material(%struct.Render* %re, %struct.bNodeTree* %ntree) #0 !dbg !23519 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %ntree.addr = alloca %struct.bNodeTree*, align 8
  %node = alloca %struct.bNode*, align 8
  %ma = alloca %struct.Material*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !23522, metadata !DIExpression()), !dbg !23523
  store %struct.bNodeTree* %ntree, %struct.bNodeTree** %ntree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bNodeTree** %ntree.addr, metadata !23524, metadata !DIExpression()), !dbg !23525
  call void @llvm.dbg.declare(metadata %struct.bNode** %node, metadata !23526, metadata !DIExpression()), !dbg !23527
  %0 = load %struct.bNodeTree*, %struct.bNodeTree** %ntree.addr, align 8, !dbg !23528
  %nodes = getelementptr inbounds %struct.bNodeTree, %struct.bNodeTree* %0, i32 0, i32 7, !dbg !23530
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %nodes, i32 0, i32 0, !dbg !23531
  %1 = load i8*, i8** %first, align 8, !dbg !23531
  %2 = bitcast i8* %1 to %struct.bNode*, !dbg !23528
  store %struct.bNode* %2, %struct.bNode** %node, align 8, !dbg !23532
  br label %for.cond, !dbg !23533

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23534
  %tobool = icmp ne %struct.bNode* %3, null, !dbg !23536
  br i1 %tobool, label %for.body, label %for.end, !dbg !23536

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23537
  %id = getelementptr inbounds %struct.bNode, %struct.bNode* %4, i32 0, i32 20, !dbg !23540
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !23540
  %tobool1 = icmp ne %struct.ID* %5, null, !dbg !23537
  br i1 %tobool1, label %if.then, label %if.end24, !dbg !23541

if.then:                                          ; preds = %for.body
  %6 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23542
  %id2 = getelementptr inbounds %struct.bNode, %struct.bNode* %6, i32 0, i32 20, !dbg !23542
  %7 = load %struct.ID*, %struct.ID** %id2, align 8, !dbg !23542
  %name = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 4, !dbg !23542
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !23542
  %8 = bitcast i8* %arraydecay to i16*, !dbg !23542
  %9 = load i16, i16* %8, align 8, !dbg !23542
  %conv = sext i16 %9 to i32, !dbg !23542
  %cmp = icmp eq i32 %conv, 16717, !dbg !23545
  br i1 %cmp, label %if.then4, label %if.else, !dbg !23546

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !23547, metadata !DIExpression()), !dbg !23549
  %10 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23550
  %id5 = getelementptr inbounds %struct.bNode, %struct.bNode* %10, i32 0, i32 20, !dbg !23551
  %11 = load %struct.ID*, %struct.ID** %id5, align 8, !dbg !23551
  %12 = bitcast %struct.ID* %11 to %struct.Material*, !dbg !23552
  store %struct.Material* %12, %struct.Material** %ma, align 8, !dbg !23549
  %13 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !23553
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 51, !dbg !23555
  %14 = load i32, i32* %mode, align 4, !dbg !23555
  %and = and i32 %14, 65536, !dbg !23556
  %tobool6 = icmp ne i32 %and, 0, !dbg !23556
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !23557

land.lhs.true:                                    ; preds = %if.then4
  %15 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !23558
  %mode7 = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 51, !dbg !23559
  %16 = load i32, i32* %mode7, align 4, !dbg !23559
  %and8 = and i32 %16, 64, !dbg !23560
  %tobool9 = icmp ne i32 %and8, 0, !dbg !23560
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !23561

if.then10:                                        ; preds = %land.lhs.true
  %17 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23562
  %flag = getelementptr inbounds %struct.Render, %struct.Render* %17, i32 0, i32 4, !dbg !23563
  %18 = load i16, i16* %flag, align 8, !dbg !23564
  %conv11 = sext i16 %18 to i32, !dbg !23564
  %or = or i32 %conv11, 1, !dbg !23564
  %conv12 = trunc i32 %or to i16, !dbg !23564
  store i16 %conv12, i16* %flag, align 8, !dbg !23564
  br label %if.end, !dbg !23562

if.end:                                           ; preds = %if.then10, %land.lhs.true, %if.then4
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !23565
  %flag13 = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 3, !dbg !23566
  %20 = load i16, i16* %flag13, align 2, !dbg !23567
  %conv14 = sext i16 %20 to i32, !dbg !23567
  %or15 = or i32 %conv14, 1, !dbg !23567
  %conv16 = trunc i32 %or15 to i16, !dbg !23567
  store i16 %conv16, i16* %flag13, align 2, !dbg !23567
  br label %if.end23, !dbg !23568

if.else:                                          ; preds = %if.then
  %21 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23569
  %type = getelementptr inbounds %struct.bNode, %struct.bNode* %21, i32 0, i32 8, !dbg !23571
  %22 = load i16, i16* %type, align 4, !dbg !23571
  %conv17 = sext i16 %22 to i32, !dbg !23569
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !23572
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !23573

if.then20:                                        ; preds = %if.else
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23574
  %24 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23575
  %id21 = getelementptr inbounds %struct.bNode, %struct.bNode* %24, i32 0, i32 20, !dbg !23576
  %25 = load %struct.ID*, %struct.ID** %id21, align 8, !dbg !23576
  %26 = bitcast %struct.ID* %25 to %struct.bNodeTree*, !dbg !23577
  call void @flag_render_node_material(%struct.Render* %23, %struct.bNodeTree* %26), !dbg !23578
  br label %if.end22, !dbg !23578

if.end22:                                         ; preds = %if.then20, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end
  br label %if.end24, !dbg !23579

if.end24:                                         ; preds = %if.end23, %for.body
  br label %for.inc, !dbg !23580

for.inc:                                          ; preds = %if.end24
  %27 = load %struct.bNode*, %struct.bNode** %node, align 8, !dbg !23581
  %next = getelementptr inbounds %struct.bNode, %struct.bNode* %27, i32 0, i32 0, !dbg !23582
  %28 = load %struct.bNode*, %struct.bNode** %next, align 8, !dbg !23582
  store %struct.bNode* %28, %struct.bNode** %node, align 8, !dbg !23583
  br label %for.cond, !dbg !23584, !llvm.loop !23585

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23587
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_material_mapto(%struct.Material* %ma) #0 !dbg !23588 {
entry:
  %ma.addr = alloca %struct.Material*, align 8
  %a = alloca i32, align 4
  store %struct.Material* %ma, %struct.Material** %ma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ma.addr, metadata !23591, metadata !DIExpression()), !dbg !23592
  call void @llvm.dbg.declare(metadata i32* %a, metadata !23593, metadata !DIExpression()), !dbg !23594
  %0 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23595
  %mapto_textured = getelementptr inbounds %struct.Material, %struct.Material* %0, i32 0, i32 125, !dbg !23596
  store i32 0, i32* %mapto_textured, align 8, !dbg !23597
  store i32 0, i32* %a, align 4, !dbg !23598
  br label %for.cond, !dbg !23600

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !23601
  %cmp = icmp slt i32 %1, 18, !dbg !23603
  br i1 %cmp, label %for.body, label %for.end, !dbg !23604

for.body:                                         ; preds = %for.cond
  %2 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23605
  %mtex = getelementptr inbounds %struct.Material, %struct.Material* %2, i32 0, i32 102, !dbg !23608
  %3 = load i32, i32* %a, align 4, !dbg !23609
  %idxprom = sext i32 %3 to i64, !dbg !23605
  %arrayidx = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex, i64 0, i64 %idxprom, !dbg !23605
  %4 = load %struct.MTex*, %struct.MTex** %arrayidx, align 8, !dbg !23605
  %tobool = icmp ne %struct.MTex* %4, null, !dbg !23605
  br i1 %tobool, label %land.lhs.true, label %if.end77, !dbg !23610

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23611
  %mtex1 = getelementptr inbounds %struct.Material, %struct.Material* %5, i32 0, i32 102, !dbg !23612
  %6 = load i32, i32* %a, align 4, !dbg !23613
  %idxprom2 = sext i32 %6 to i64, !dbg !23611
  %arrayidx3 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex1, i64 0, i64 %idxprom2, !dbg !23611
  %7 = load %struct.MTex*, %struct.MTex** %arrayidx3, align 8, !dbg !23611
  %tex = getelementptr inbounds %struct.MTex, %struct.MTex* %7, i32 0, i32 5, !dbg !23614
  %8 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !23614
  %tobool4 = icmp ne %struct.Tex* %8, null, !dbg !23611
  br i1 %tobool4, label %if.then, label %if.end77, !dbg !23615

if.then:                                          ; preds = %land.lhs.true
  %9 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23616
  %mtex5 = getelementptr inbounds %struct.Material, %struct.Material* %9, i32 0, i32 102, !dbg !23619
  %10 = load i32, i32* %a, align 4, !dbg !23620
  %idxprom6 = sext i32 %10 to i64, !dbg !23616
  %arrayidx7 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex5, i64 0, i64 %idxprom6, !dbg !23616
  %11 = load %struct.MTex*, %struct.MTex** %arrayidx7, align 8, !dbg !23616
  %mapto = getelementptr inbounds %struct.MTex, %struct.MTex* %11, i32 0, i32 1, !dbg !23621
  %12 = load i16, i16* %mapto, align 2, !dbg !23621
  %conv = sext i16 %12 to i32, !dbg !23616
  %and = and i32 %conv, 128, !dbg !23622
  %tobool8 = icmp ne i32 %and, 0, !dbg !23622
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !23623

if.then9:                                         ; preds = %if.then
  %13 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23624
  %mapto_textured10 = getelementptr inbounds %struct.Material, %struct.Material* %13, i32 0, i32 125, !dbg !23625
  %14 = load i32, i32* %mapto_textured10, align 8, !dbg !23626
  %or = or i32 %14, 128, !dbg !23626
  store i32 %or, i32* %mapto_textured10, align 8, !dbg !23626
  br label %if.end, !dbg !23624

if.end:                                           ; preds = %if.then9, %if.then
  %15 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23627
  %mtex11 = getelementptr inbounds %struct.Material, %struct.Material* %15, i32 0, i32 102, !dbg !23629
  %16 = load i32, i32* %a, align 4, !dbg !23630
  %idxprom12 = sext i32 %16 to i64, !dbg !23627
  %arrayidx13 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex11, i64 0, i64 %idxprom12, !dbg !23627
  %17 = load %struct.MTex*, %struct.MTex** %arrayidx13, align 8, !dbg !23627
  %mapto14 = getelementptr inbounds %struct.MTex, %struct.MTex* %17, i32 0, i32 1, !dbg !23631
  %18 = load i16, i16* %mapto14, align 2, !dbg !23631
  %conv15 = sext i16 %18 to i32, !dbg !23627
  %and16 = and i32 %conv15, 64, !dbg !23632
  %tobool17 = icmp ne i32 %and16, 0, !dbg !23632
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !23633

if.then18:                                        ; preds = %if.end
  %19 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23634
  %mapto_textured19 = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 125, !dbg !23635
  %20 = load i32, i32* %mapto_textured19, align 8, !dbg !23636
  %or20 = or i32 %20, 64, !dbg !23636
  store i32 %or20, i32* %mapto_textured19, align 8, !dbg !23636
  br label %if.end21, !dbg !23634

if.end21:                                         ; preds = %if.then18, %if.end
  %21 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23637
  %mtex22 = getelementptr inbounds %struct.Material, %struct.Material* %21, i32 0, i32 102, !dbg !23639
  %22 = load i32, i32* %a, align 4, !dbg !23640
  %idxprom23 = sext i32 %22 to i64, !dbg !23637
  %arrayidx24 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex22, i64 0, i64 %idxprom23, !dbg !23637
  %23 = load %struct.MTex*, %struct.MTex** %arrayidx24, align 8, !dbg !23637
  %mapto25 = getelementptr inbounds %struct.MTex, %struct.MTex* %23, i32 0, i32 1, !dbg !23641
  %24 = load i16, i16* %mapto25, align 2, !dbg !23641
  %conv26 = sext i16 %24 to i32, !dbg !23637
  %and27 = and i32 %conv26, 1, !dbg !23642
  %tobool28 = icmp ne i32 %and27, 0, !dbg !23642
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !23643

if.then29:                                        ; preds = %if.end21
  %25 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23644
  %mapto_textured30 = getelementptr inbounds %struct.Material, %struct.Material* %25, i32 0, i32 125, !dbg !23645
  %26 = load i32, i32* %mapto_textured30, align 8, !dbg !23646
  %or31 = or i32 %26, 1, !dbg !23646
  store i32 %or31, i32* %mapto_textured30, align 8, !dbg !23646
  br label %if.end32, !dbg !23644

if.end32:                                         ; preds = %if.then29, %if.end21
  %27 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23647
  %mtex33 = getelementptr inbounds %struct.Material, %struct.Material* %27, i32 0, i32 102, !dbg !23649
  %28 = load i32, i32* %a, align 4, !dbg !23650
  %idxprom34 = sext i32 %28 to i64, !dbg !23647
  %arrayidx35 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex33, i64 0, i64 %idxprom34, !dbg !23647
  %29 = load %struct.MTex*, %struct.MTex** %arrayidx35, align 8, !dbg !23647
  %mapto36 = getelementptr inbounds %struct.MTex, %struct.MTex* %29, i32 0, i32 1, !dbg !23651
  %30 = load i16, i16* %mapto36, align 2, !dbg !23651
  %conv37 = sext i16 %30 to i32, !dbg !23647
  %and38 = and i32 %conv37, 16, !dbg !23652
  %tobool39 = icmp ne i32 %and38, 0, !dbg !23652
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !23653

if.then40:                                        ; preds = %if.end32
  %31 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23654
  %mapto_textured41 = getelementptr inbounds %struct.Material, %struct.Material* %31, i32 0, i32 125, !dbg !23655
  %32 = load i32, i32* %mapto_textured41, align 8, !dbg !23656
  %or42 = or i32 %32, 16, !dbg !23656
  store i32 %or42, i32* %mapto_textured41, align 8, !dbg !23656
  br label %if.end43, !dbg !23654

if.end43:                                         ; preds = %if.then40, %if.end32
  %33 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23657
  %mtex44 = getelementptr inbounds %struct.Material, %struct.Material* %33, i32 0, i32 102, !dbg !23659
  %34 = load i32, i32* %a, align 4, !dbg !23660
  %idxprom45 = sext i32 %34 to i64, !dbg !23657
  %arrayidx46 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex44, i64 0, i64 %idxprom45, !dbg !23657
  %35 = load %struct.MTex*, %struct.MTex** %arrayidx46, align 8, !dbg !23657
  %mapto47 = getelementptr inbounds %struct.MTex, %struct.MTex* %35, i32 0, i32 1, !dbg !23661
  %36 = load i16, i16* %mapto47, align 2, !dbg !23661
  %conv48 = sext i16 %36 to i32, !dbg !23657
  %and49 = and i32 %conv48, 8, !dbg !23662
  %tobool50 = icmp ne i32 %and49, 0, !dbg !23662
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !23663

if.then51:                                        ; preds = %if.end43
  %37 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23664
  %mapto_textured52 = getelementptr inbounds %struct.Material, %struct.Material* %37, i32 0, i32 125, !dbg !23665
  %38 = load i32, i32* %mapto_textured52, align 8, !dbg !23666
  %or53 = or i32 %38, 8, !dbg !23666
  store i32 %or53, i32* %mapto_textured52, align 8, !dbg !23666
  br label %if.end54, !dbg !23664

if.end54:                                         ; preds = %if.then51, %if.end43
  %39 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23667
  %mtex55 = getelementptr inbounds %struct.Material, %struct.Material* %39, i32 0, i32 102, !dbg !23669
  %40 = load i32, i32* %a, align 4, !dbg !23670
  %idxprom56 = sext i32 %40 to i64, !dbg !23667
  %arrayidx57 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex55, i64 0, i64 %idxprom56, !dbg !23667
  %41 = load %struct.MTex*, %struct.MTex** %arrayidx57, align 8, !dbg !23667
  %mapto58 = getelementptr inbounds %struct.MTex, %struct.MTex* %41, i32 0, i32 1, !dbg !23671
  %42 = load i16, i16* %mapto58, align 2, !dbg !23671
  %conv59 = sext i16 %42 to i32, !dbg !23667
  %and60 = and i32 %conv59, 32, !dbg !23672
  %tobool61 = icmp ne i32 %and60, 0, !dbg !23672
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !23673

if.then62:                                        ; preds = %if.end54
  %43 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23674
  %mapto_textured63 = getelementptr inbounds %struct.Material, %struct.Material* %43, i32 0, i32 125, !dbg !23675
  %44 = load i32, i32* %mapto_textured63, align 8, !dbg !23676
  %or64 = or i32 %44, 32, !dbg !23676
  store i32 %or64, i32* %mapto_textured63, align 8, !dbg !23676
  br label %if.end65, !dbg !23674

if.end65:                                         ; preds = %if.then62, %if.end54
  %45 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23677
  %mtex66 = getelementptr inbounds %struct.Material, %struct.Material* %45, i32 0, i32 102, !dbg !23679
  %46 = load i32, i32* %a, align 4, !dbg !23680
  %idxprom67 = sext i32 %46 to i64, !dbg !23677
  %arrayidx68 = getelementptr inbounds [18 x %struct.MTex*], [18 x %struct.MTex*]* %mtex66, i64 0, i64 %idxprom67, !dbg !23677
  %47 = load %struct.MTex*, %struct.MTex** %arrayidx68, align 8, !dbg !23677
  %mapto69 = getelementptr inbounds %struct.MTex, %struct.MTex* %47, i32 0, i32 1, !dbg !23681
  %48 = load i16, i16* %mapto69, align 2, !dbg !23681
  %conv70 = sext i16 %48 to i32, !dbg !23677
  %and71 = and i32 %conv70, 4, !dbg !23682
  %tobool72 = icmp ne i32 %and71, 0, !dbg !23682
  br i1 %tobool72, label %if.then73, label %if.end76, !dbg !23683

if.then73:                                        ; preds = %if.end65
  %49 = load %struct.Material*, %struct.Material** %ma.addr, align 8, !dbg !23684
  %mapto_textured74 = getelementptr inbounds %struct.Material, %struct.Material* %49, i32 0, i32 125, !dbg !23685
  %50 = load i32, i32* %mapto_textured74, align 8, !dbg !23686
  %or75 = or i32 %50, 4, !dbg !23686
  store i32 %or75, i32* %mapto_textured74, align 8, !dbg !23686
  br label %if.end76, !dbg !23684

if.end76:                                         ; preds = %if.then73, %if.end65
  br label %if.end77, !dbg !23687

if.end77:                                         ; preds = %if.end76, %land.lhs.true, %for.body
  br label %for.inc, !dbg !23688

for.inc:                                          ; preds = %if.end77
  %51 = load i32, i32* %a, align 4, !dbg !23689
  %inc = add nsw i32 %51, 1, !dbg !23689
  store i32 %inc, i32* %a, align 4, !dbg !23689
  br label %for.cond, !dbg !23690, !llvm.loop !23691

for.end:                                          ; preds = %for.cond
  ret void, !dbg !23693
}

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @add_lightgroup(%struct.Render* %re, %struct.Group* %group, i32 %exclusive) #0 !dbg !23694 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %group.addr = alloca %struct.Group*, align 8
  %exclusive.addr = alloca i32, align 4
  %go = alloca %struct.GroupObject*, align 8
  %gol = alloca %struct.GroupObject*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !23697, metadata !DIExpression()), !dbg !23698
  store %struct.Group* %group, %struct.Group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Group** %group.addr, metadata !23699, metadata !DIExpression()), !dbg !23700
  store i32 %exclusive, i32* %exclusive.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %exclusive.addr, metadata !23701, metadata !DIExpression()), !dbg !23702
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !23703, metadata !DIExpression()), !dbg !23704
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %gol, metadata !23705, metadata !DIExpression()), !dbg !23706
  %0 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !23707
  %id = getelementptr inbounds %struct.Group, %struct.Group* %0, i32 0, i32 0, !dbg !23708
  %flag = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 5, !dbg !23709
  %1 = load i16, i16* %flag, align 2, !dbg !23710
  %conv = sext i16 %1 to i32, !dbg !23710
  %and = and i32 %conv, -1025, !dbg !23710
  %conv1 = trunc i32 %and to i16, !dbg !23710
  store i16 %conv1, i16* %flag, align 2, !dbg !23710
  %2 = load %struct.Group*, %struct.Group** %group.addr, align 8, !dbg !23711
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %2, i32 0, i32 1, !dbg !23713
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !23714
  %3 = load i8*, i8** %first, align 8, !dbg !23714
  %4 = bitcast i8* %3 to %struct.GroupObject*, !dbg !23711
  store %struct.GroupObject* %4, %struct.GroupObject** %go, align 8, !dbg !23715
  br label %for.cond, !dbg !23716

for.cond:                                         ; preds = %for.inc41, %entry
  %5 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23717
  %tobool = icmp ne %struct.GroupObject* %5, null, !dbg !23719
  br i1 %tobool, label %for.body, label %for.end43, !dbg !23719

for.body:                                         ; preds = %for.cond
  %6 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23720
  %lampren = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %6, i32 0, i32 3, !dbg !23722
  store i8* null, i8** %lampren, align 8, !dbg !23723
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23724
  %8 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23726
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %8, i32 0, i32 2, !dbg !23727
  %9 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !23727
  %call = call zeroext i8 @is_object_hidden(%struct.Render* %7, %struct.Object* %9), !dbg !23728
  %tobool2 = icmp ne i8 %call, 0, !dbg !23728
  br i1 %tobool2, label %if.then, label %if.end, !dbg !23729

if.then:                                          ; preds = %for.body
  br label %for.inc41, !dbg !23730

if.end:                                           ; preds = %for.body
  %10 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23731
  %ob3 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %10, i32 0, i32 2, !dbg !23733
  %11 = load %struct.Object*, %struct.Object** %ob3, align 8, !dbg !23733
  %lay = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 52, !dbg !23734
  %12 = load i32, i32* %lay, align 8, !dbg !23734
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23735
  %lay4 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 48, !dbg !23736
  %14 = load i32, i32* %lay4, align 8, !dbg !23736
  %and5 = and i32 %12, %14, !dbg !23737
  %tobool6 = icmp ne i32 %and5, 0, !dbg !23737
  br i1 %tobool6, label %if.then7, label %if.end40, !dbg !23738

if.then7:                                         ; preds = %if.end
  %15 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23739
  %ob8 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %15, i32 0, i32 2, !dbg !23742
  %16 = load %struct.Object*, %struct.Object** %ob8, align 8, !dbg !23742
  %tobool9 = icmp ne %struct.Object* %16, null, !dbg !23739
  br i1 %tobool9, label %land.lhs.true, label %if.end39, !dbg !23743

land.lhs.true:                                    ; preds = %if.then7
  %17 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23744
  %ob10 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %17, i32 0, i32 2, !dbg !23745
  %18 = load %struct.Object*, %struct.Object** %ob10, align 8, !dbg !23745
  %type = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 3, !dbg !23746
  %19 = load i16, i16* %type, align 8, !dbg !23746
  %conv11 = sext i16 %19 to i32, !dbg !23744
  %cmp = icmp eq i32 %conv11, 10, !dbg !23747
  br i1 %cmp, label %if.then13, label %if.end39, !dbg !23748

if.then13:                                        ; preds = %land.lhs.true
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23749
  %lights = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 66, !dbg !23752
  %first14 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %lights, i32 0, i32 0, !dbg !23753
  %21 = load i8*, i8** %first14, align 8, !dbg !23753
  %22 = bitcast i8* %21 to %struct.GroupObject*, !dbg !23749
  store %struct.GroupObject* %22, %struct.GroupObject** %gol, align 8, !dbg !23754
  br label %for.cond15, !dbg !23755

for.cond15:                                       ; preds = %for.inc, %if.then13
  %23 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23756
  %tobool16 = icmp ne %struct.GroupObject* %23, null, !dbg !23758
  br i1 %tobool16, label %for.body17, label %for.end, !dbg !23758

for.body17:                                       ; preds = %for.cond15
  %24 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23759
  %ob18 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %24, i32 0, i32 2, !dbg !23762
  %25 = load %struct.Object*, %struct.Object** %ob18, align 8, !dbg !23762
  %26 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23763
  %ob19 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %26, i32 0, i32 2, !dbg !23764
  %27 = load %struct.Object*, %struct.Object** %ob19, align 8, !dbg !23764
  %cmp20 = icmp eq %struct.Object* %25, %27, !dbg !23765
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !23766

if.then22:                                        ; preds = %for.body17
  %28 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23767
  %lampren23 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %28, i32 0, i32 3, !dbg !23769
  %29 = load i8*, i8** %lampren23, align 8, !dbg !23769
  %30 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23770
  %lampren24 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %30, i32 0, i32 3, !dbg !23771
  store i8* %29, i8** %lampren24, align 8, !dbg !23772
  br label %for.end, !dbg !23773

if.end25:                                         ; preds = %for.body17
  br label %for.inc, !dbg !23774

for.inc:                                          ; preds = %if.end25
  %31 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23775
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %31, i32 0, i32 0, !dbg !23776
  %32 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !23776
  store %struct.GroupObject* %32, %struct.GroupObject** %gol, align 8, !dbg !23777
  br label %for.cond15, !dbg !23778, !llvm.loop !23779

for.end:                                          ; preds = %if.then22, %for.cond15
  %33 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23781
  %lampren26 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %33, i32 0, i32 3, !dbg !23783
  %34 = load i8*, i8** %lampren26, align 8, !dbg !23783
  %cmp27 = icmp eq i8* %34, null, !dbg !23784
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !23785

if.then29:                                        ; preds = %for.end
  %35 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23786
  %36 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23787
  %ob30 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %36, i32 0, i32 2, !dbg !23788
  %37 = load %struct.Object*, %struct.Object** %ob30, align 8, !dbg !23788
  %call31 = call %struct.GroupObject* @add_render_lamp(%struct.Render* %35, %struct.Object* %37), !dbg !23789
  store %struct.GroupObject* %call31, %struct.GroupObject** %gol, align 8, !dbg !23790
  br label %if.end32, !dbg !23791

if.end32:                                         ; preds = %if.then29, %for.end
  %38 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23792
  %tobool33 = icmp ne %struct.GroupObject* %38, null, !dbg !23792
  br i1 %tobool33, label %land.lhs.true34, label %if.end38, !dbg !23794

land.lhs.true34:                                  ; preds = %if.end32
  %39 = load i32, i32* %exclusive.addr, align 4, !dbg !23795
  %tobool35 = icmp ne i32 %39, 0, !dbg !23795
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !23796

if.then36:                                        ; preds = %land.lhs.true34
  %40 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23797
  %lights37 = getelementptr inbounds %struct.Render, %struct.Render* %40, i32 0, i32 66, !dbg !23799
  %41 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23800
  %42 = bitcast %struct.GroupObject* %41 to i8*, !dbg !23800
  call void @BLI_remlink(%struct.ListBase* %lights37, i8* %42), !dbg !23801
  %43 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !23802
  %44 = load %struct.GroupObject*, %struct.GroupObject** %gol, align 8, !dbg !23803
  %45 = bitcast %struct.GroupObject* %44 to i8*, !dbg !23803
  call void %43(i8* %45), !dbg !23802
  br label %if.end38, !dbg !23804

if.end38:                                         ; preds = %if.then36, %land.lhs.true34, %if.end32
  br label %if.end39, !dbg !23805

if.end39:                                         ; preds = %if.end38, %land.lhs.true, %if.then7
  br label %if.end40, !dbg !23806

if.end40:                                         ; preds = %if.end39, %if.end
  br label %for.inc41, !dbg !23807

for.inc41:                                        ; preds = %if.end40, %if.then
  %46 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !23808
  %next42 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %46, i32 0, i32 0, !dbg !23809
  %47 = load %struct.GroupObject*, %struct.GroupObject** %next42, align 8, !dbg !23809
  store %struct.GroupObject* %47, %struct.GroupObject** %go, align 8, !dbg !23810
  br label %for.cond, !dbg !23811, !llvm.loop !23812

for.end43:                                        ; preds = %for.cond
  ret void, !dbg !23814
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define internal i32 @verghalo(i8* %a1, i8* %a2) #0 !dbg !23815 {
entry:
  %retval = alloca i32, align 4
  %a1.addr = alloca i8*, align 8
  %a2.addr = alloca i8*, align 8
  %har1 = alloca %struct.HaloRen*, align 8
  %har2 = alloca %struct.HaloRen*, align 8
  store i8* %a1, i8** %a1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a1.addr, metadata !23816, metadata !DIExpression()), !dbg !23817
  store i8* %a2, i8** %a2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a2.addr, metadata !23818, metadata !DIExpression()), !dbg !23819
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har1, metadata !23820, metadata !DIExpression()), !dbg !23821
  %0 = load i8*, i8** %a1.addr, align 8, !dbg !23822
  %1 = bitcast i8* %0 to %struct.HaloRen**, !dbg !23823
  %2 = load %struct.HaloRen*, %struct.HaloRen** %1, align 8, !dbg !23824
  store %struct.HaloRen* %2, %struct.HaloRen** %har1, align 8, !dbg !23821
  call void @llvm.dbg.declare(metadata %struct.HaloRen** %har2, metadata !23825, metadata !DIExpression()), !dbg !23826
  %3 = load i8*, i8** %a2.addr, align 8, !dbg !23827
  %4 = bitcast i8* %3 to %struct.HaloRen**, !dbg !23828
  %5 = load %struct.HaloRen*, %struct.HaloRen** %4, align 8, !dbg !23829
  store %struct.HaloRen* %5, %struct.HaloRen** %har2, align 8, !dbg !23826
  %6 = load %struct.HaloRen*, %struct.HaloRen** %har1, align 8, !dbg !23830
  %zs = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %6, i32 0, i32 15, !dbg !23832
  %7 = load i32, i32* %zs, align 8, !dbg !23832
  %8 = load %struct.HaloRen*, %struct.HaloRen** %har2, align 8, !dbg !23833
  %zs1 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %8, i32 0, i32 15, !dbg !23834
  %9 = load i32, i32* %zs1, align 8, !dbg !23834
  %cmp = icmp slt i32 %7, %9, !dbg !23835
  br i1 %cmp, label %if.then, label %if.else, !dbg !23836

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !23837
  br label %return, !dbg !23837

if.else:                                          ; preds = %entry
  %10 = load %struct.HaloRen*, %struct.HaloRen** %har1, align 8, !dbg !23838
  %zs2 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %10, i32 0, i32 15, !dbg !23840
  %11 = load i32, i32* %zs2, align 8, !dbg !23840
  %12 = load %struct.HaloRen*, %struct.HaloRen** %har2, align 8, !dbg !23841
  %zs3 = getelementptr inbounds %struct.HaloRen, %struct.HaloRen* %12, i32 0, i32 15, !dbg !23842
  %13 = load i32, i32* %zs3, align 8, !dbg !23842
  %cmp4 = icmp sgt i32 %11, %13, !dbg !23843
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !23844

if.then5:                                         ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !23845
  br label %return, !dbg !23845

if.end:                                           ; preds = %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !23846
  br label %return, !dbg !23846

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !23847
  ret i32 %14, !dbg !23847
}

declare dso_local i32 @point_inside_volume_objectinstance(%struct.Render*, %struct.ObjectInstanceRen*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_x(%struct.rctf* %rct) #0 !dbg !23848 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !23854, metadata !DIExpression()), !dbg !23855
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !23856
  %xmax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 1, !dbg !23857
  %1 = load float, float* %xmax, align 4, !dbg !23857
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !23858
  %xmin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 0, !dbg !23859
  %3 = load float, float* %xmin, align 4, !dbg !23859
  %sub = fsub float %1, %3, !dbg !23860
  ret float %sub, !dbg !23861
}

; Function Attrs: nounwind
declare dso_local double @atan(double) #2

; Function Attrs: noinline nounwind uwtable
define internal float @BLI_rctf_size_y(%struct.rctf* %rct) #0 !dbg !23862 {
entry:
  %rct.addr = alloca %struct.rctf*, align 8
  store %struct.rctf* %rct, %struct.rctf** %rct.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rct.addr, metadata !23863, metadata !DIExpression()), !dbg !23864
  %0 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !23865
  %ymax = getelementptr inbounds %struct.rctf, %struct.rctf* %0, i32 0, i32 3, !dbg !23866
  %1 = load float, float* %ymax, align 4, !dbg !23866
  %2 = load %struct.rctf*, %struct.rctf** %rct.addr, align 8, !dbg !23867
  %ymin = getelementptr inbounds %struct.rctf, %struct.rctf* %2, i32 0, i32 2, !dbg !23868
  %3 = load float, float* %ymin, align 4, !dbg !23868
  %sub = fsub float %1, %3, !dbg !23869
  ret float %sub, !dbg !23870
}

declare dso_local void @projectvert(float*, [4 x float]*, float*) #4

declare dso_local float* @RE_vertren_get_winspeed(%struct.ObjectInstanceRen*, %struct.VertRen*, i32) #4

; Function Attrs: noinline nounwind uwtable
define internal void @calculate_speedvector(float* %vectors, i32 %step, float %winsq, float %winroot, float* %co, float* %ho, float* %speed) #0 !dbg !23871 {
entry:
  %vectors.addr = alloca float*, align 8
  %step.addr = alloca i32, align 4
  %winsq.addr = alloca float, align 4
  %winroot.addr = alloca float, align 4
  %co.addr = alloca float*, align 8
  %ho.addr = alloca float*, align 8
  %speed.addr = alloca float*, align 8
  %zco = alloca [2 x float], align 4
  %len = alloca float, align 4
  store float* %vectors, float** %vectors.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vectors.addr, metadata !23874, metadata !DIExpression()), !dbg !23875
  store i32 %step, i32* %step.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %step.addr, metadata !23876, metadata !DIExpression()), !dbg !23877
  store float %winsq, float* %winsq.addr, align 4
  call void @llvm.dbg.declare(metadata float* %winsq.addr, metadata !23878, metadata !DIExpression()), !dbg !23879
  store float %winroot, float* %winroot.addr, align 4
  call void @llvm.dbg.declare(metadata float* %winroot.addr, metadata !23880, metadata !DIExpression()), !dbg !23881
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !23882, metadata !DIExpression()), !dbg !23883
  store float* %ho, float** %ho.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ho.addr, metadata !23884, metadata !DIExpression()), !dbg !23885
  store float* %speed, float** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata float** %speed.addr, metadata !23886, metadata !DIExpression()), !dbg !23887
  call void @llvm.dbg.declare(metadata [2 x float]* %zco, metadata !23888, metadata !DIExpression()), !dbg !23889
  call void @llvm.dbg.declare(metadata float* %len, metadata !23890, metadata !DIExpression()), !dbg !23891
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23892
  %0 = load float*, float** %co.addr, align 8, !dbg !23893
  %1 = load float*, float** %ho.addr, align 8, !dbg !23894
  call void @speedvector_project(%struct.Render* null, float* %arraydecay, float* %0, float* %1), !dbg !23895
  %2 = load float*, float** %vectors.addr, align 8, !dbg !23896
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !23896
  %3 = load float, float* %arrayidx, align 4, !dbg !23896
  %arrayidx1 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23897
  %4 = load float, float* %arrayidx1, align 4, !dbg !23897
  %sub = fsub float %3, %4, !dbg !23898
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23899
  store float %sub, float* %arrayidx2, align 4, !dbg !23900
  %5 = load float*, float** %vectors.addr, align 8, !dbg !23901
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !23901
  %6 = load float, float* %arrayidx3, align 4, !dbg !23901
  %arrayidx4 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23902
  %7 = load float, float* %arrayidx4, align 4, !dbg !23902
  %sub5 = fsub float %6, %7, !dbg !23903
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23904
  store float %sub5, float* %arrayidx6, align 4, !dbg !23905
  %arrayidx7 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23906
  %8 = load float, float* %arrayidx7, align 4, !dbg !23906
  %cmp = fcmp olt float %8, 0x3FB99999A0000000, !dbg !23908
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !23909

land.lhs.true:                                    ; preds = %entry
  %arrayidx8 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23910
  %9 = load float, float* %arrayidx8, align 4, !dbg !23910
  %cmp9 = fcmp ogt float %9, 0xBFB99999A0000000, !dbg !23911
  br i1 %cmp9, label %land.lhs.true10, label %if.end, !dbg !23912

land.lhs.true10:                                  ; preds = %land.lhs.true
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23913
  %10 = load float, float* %arrayidx11, align 4, !dbg !23913
  %cmp12 = fcmp olt float %10, 0x3FB99999A0000000, !dbg !23914
  br i1 %cmp12, label %land.lhs.true13, label %if.end, !dbg !23915

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23916
  %11 = load float, float* %arrayidx14, align 4, !dbg !23916
  %cmp15 = fcmp ogt float %11, 0xBFB99999A0000000, !dbg !23917
  br i1 %cmp15, label %if.then, label %if.end, !dbg !23918

if.then:                                          ; preds = %land.lhs.true13
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23919
  store float 0.000000e+00, float* %arrayidx16, align 4, !dbg !23921
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23922
  store float 0.000000e+00, float* %arrayidx17, align 4, !dbg !23923
  br label %if.end, !dbg !23924

if.end:                                           ; preds = %if.then, %land.lhs.true13, %land.lhs.true10, %land.lhs.true, %entry
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23925
  %12 = load float, float* %arrayidx18, align 4, !dbg !23925
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23926
  %13 = load float, float* %arrayidx19, align 4, !dbg !23926
  %mul = fmul float %12, %13, !dbg !23927
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23928
  %14 = load float, float* %arrayidx20, align 4, !dbg !23928
  %arrayidx21 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23929
  %15 = load float, float* %arrayidx21, align 4, !dbg !23929
  %mul22 = fmul float %14, %15, !dbg !23930
  %add = fadd float %mul, %mul22, !dbg !23931
  store float %add, float* %len, align 4, !dbg !23932
  %16 = load float, float* %len, align 4, !dbg !23933
  %17 = load float, float* %winsq.addr, align 4, !dbg !23935
  %cmp23 = fcmp ogt float %16, %17, !dbg !23936
  br i1 %cmp23, label %if.then24, label %if.end29, !dbg !23937

if.then24:                                        ; preds = %if.end
  %18 = load float, float* %winroot.addr, align 4, !dbg !23938
  %19 = load float, float* %len, align 4, !dbg !23940
  %call = call float @sqrtf(float %19) #5, !dbg !23941
  %div = fdiv float %18, %call, !dbg !23942
  store float %div, float* %len, align 4, !dbg !23943
  %20 = load float, float* %len, align 4, !dbg !23944
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23945
  %21 = load float, float* %arrayidx25, align 4, !dbg !23946
  %mul26 = fmul float %21, %20, !dbg !23946
  store float %mul26, float* %arrayidx25, align 4, !dbg !23946
  %22 = load float, float* %len, align 4, !dbg !23947
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23948
  %23 = load float, float* %arrayidx27, align 4, !dbg !23949
  %mul28 = fmul float %23, %22, !dbg !23949
  store float %mul28, float* %arrayidx27, align 4, !dbg !23949
  br label %if.end29, !dbg !23950

if.end29:                                         ; preds = %if.then24, %if.end
  %24 = load i32, i32* %step.addr, align 4, !dbg !23951
  %tobool = icmp ne i32 %24, 0, !dbg !23951
  br i1 %tobool, label %if.then30, label %if.else, !dbg !23953

if.then30:                                        ; preds = %if.end29
  %arrayidx31 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23954
  %25 = load float, float* %arrayidx31, align 4, !dbg !23954
  %fneg = fneg float %25, !dbg !23956
  %26 = load float*, float** %speed.addr, align 8, !dbg !23957
  %arrayidx32 = getelementptr inbounds float, float* %26, i64 2, !dbg !23957
  store float %fneg, float* %arrayidx32, align 4, !dbg !23958
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23959
  %27 = load float, float* %arrayidx33, align 4, !dbg !23959
  %fneg34 = fneg float %27, !dbg !23960
  %28 = load float*, float** %speed.addr, align 8, !dbg !23961
  %arrayidx35 = getelementptr inbounds float, float* %28, i64 3, !dbg !23961
  store float %fneg34, float* %arrayidx35, align 4, !dbg !23962
  br label %if.end40, !dbg !23963

if.else:                                          ; preds = %if.end29
  %arrayidx36 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 0, !dbg !23964
  %29 = load float, float* %arrayidx36, align 4, !dbg !23964
  %30 = load float*, float** %speed.addr, align 8, !dbg !23966
  %arrayidx37 = getelementptr inbounds float, float* %30, i64 0, !dbg !23966
  store float %29, float* %arrayidx37, align 4, !dbg !23967
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %zco, i64 0, i64 1, !dbg !23968
  %31 = load float, float* %arrayidx38, align 4, !dbg !23968
  %32 = load float*, float** %speed.addr, align 8, !dbg !23969
  %arrayidx39 = getelementptr inbounds float, float* %32, i64 1, !dbg !23969
  store float %31, float* %arrayidx39, align 4, !dbg !23970
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then30
  ret void, !dbg !23971
}

; Function Attrs: noinline nounwind uwtable
define internal float* @calculate_strandsurface_speedvectors(%struct.Render* %re, %struct.ObjectInstanceRen* %obi, %struct.StrandSurface* %mesh) #0 !dbg !23972 {
entry:
  %retval = alloca float*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %mesh.addr = alloca %struct.StrandSurface*, align 8
  %winsq = alloca float, align 4
  %winroot = alloca float, align 4
  %winspeed = alloca [4 x float]*, align 8
  %ho = alloca [4 x float], align 16
  %prevho = alloca [4 x float], align 16
  %nextho = alloca [4 x float], align 16
  %winmat = alloca [4 x [4 x float]], align 16
  %vec = alloca [2 x float], align 4
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !23975, metadata !DIExpression()), !dbg !23976
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !23977, metadata !DIExpression()), !dbg !23978
  store %struct.StrandSurface* %mesh, %struct.StrandSurface** %mesh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh.addr, metadata !23979, metadata !DIExpression()), !dbg !23980
  %0 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !23981
  %co = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %0, i32 0, i32 4, !dbg !23983
  %1 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !23983
  %tobool = icmp ne [3 x float]* %1, null, !dbg !23981
  br i1 %tobool, label %land.lhs.true, label %if.end65, !dbg !23984

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !23985
  %prevco = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %2, i32 0, i32 8, !dbg !23986
  %3 = load [3 x float]*, [3 x float]** %prevco, align 8, !dbg !23986
  %tobool1 = icmp ne [3 x float]* %3, null, !dbg !23985
  br i1 %tobool1, label %land.lhs.true2, label %if.end65, !dbg !23987

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !23988
  %nextco = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %4, i32 0, i32 9, !dbg !23989
  %5 = load [3 x float]*, [3 x float]** %nextco, align 8, !dbg !23989
  %tobool3 = icmp ne [3 x float]* %5, null, !dbg !23988
  br i1 %tobool3, label %if.then, label %if.end65, !dbg !23990

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata float* %winsq, metadata !23991, metadata !DIExpression()), !dbg !23993
  %6 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23994
  %winx = getelementptr inbounds %struct.Render, %struct.Render* %6, i32 0, i32 13, !dbg !23995
  %7 = load i32, i32* %winx, align 4, !dbg !23995
  %conv = sitofp i32 %7 to float, !dbg !23996
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !23997
  %winy = getelementptr inbounds %struct.Render, %struct.Render* %8, i32 0, i32 14, !dbg !23998
  %9 = load i32, i32* %winy, align 8, !dbg !23998
  %conv4 = sitofp i32 %9 to float, !dbg !23999
  %mul = fmul float %conv, %conv4, !dbg !24000
  store float %mul, float* %winsq, align 4, !dbg !23993
  call void @llvm.dbg.declare(metadata float* %winroot, metadata !24001, metadata !DIExpression()), !dbg !24002
  %10 = load float, float* %winsq, align 4, !dbg !24003
  %call = call float @sqrtf(float %10) #5, !dbg !24004
  store float %call, float* %winroot, align 4, !dbg !24002
  call void @llvm.dbg.declare(metadata [4 x float]** %winspeed, metadata !24005, metadata !DIExpression()), !dbg !24006
  call void @llvm.dbg.declare(metadata [4 x float]* %ho, metadata !24007, metadata !DIExpression()), !dbg !24008
  call void @llvm.dbg.declare(metadata [4 x float]* %prevho, metadata !24009, metadata !DIExpression()), !dbg !24010
  call void @llvm.dbg.declare(metadata [4 x float]* %nextho, metadata !24011, metadata !DIExpression()), !dbg !24012
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %winmat, metadata !24013, metadata !DIExpression()), !dbg !24014
  call void @llvm.dbg.declare(metadata [2 x float]* %vec, metadata !24015, metadata !DIExpression()), !dbg !24016
  call void @llvm.dbg.declare(metadata i32* %a, metadata !24017, metadata !DIExpression()), !dbg !24018
  %11 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !24019
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %11, i32 0, i32 11, !dbg !24021
  %12 = load i16, i16* %flag, align 8, !dbg !24021
  %conv5 = sext i16 %12 to i32, !dbg !24019
  %and = and i32 %conv5, 3, !dbg !24022
  %tobool6 = icmp ne i32 %and, 0, !dbg !24022
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !24023

if.then7:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !24024
  %13 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !24025
  %winmat8 = getelementptr inbounds %struct.Render, %struct.Render* %13, i32 0, i32 35, !dbg !24026
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat8, i64 0, i64 0, !dbg !24025
  %14 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !24027
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %14, i32 0, i32 8, !dbg !24028
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !24027
  call void @mul_m4_m4m4([4 x float]* %arraydecay, [4 x float]* %arraydecay9, [4 x float]* %arraydecay10), !dbg !24029
  br label %if.end, !dbg !24029

if.else:                                          ; preds = %if.then
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !24030
  %15 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !24031
  %winmat12 = getelementptr inbounds %struct.Render, %struct.Render* %15, i32 0, i32 35, !dbg !24032
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat12, i64 0, i64 0, !dbg !24031
  call void @copy_m4_m4([4 x float]* %arraydecay11, [4 x float]* %arraydecay13), !dbg !24033
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !24034
  %17 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24035
  %totvert = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %17, i32 0, i32 10, !dbg !24036
  %18 = load i32, i32* %totvert, align 8, !dbg !24036
  %conv14 = sext i32 %18 to i64, !dbg !24035
  %mul15 = mul i64 16, %conv14, !dbg !24037
  %call16 = call i8* %16(i64 %mul15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.30, i64 0, i64 0)), !dbg !24034
  %19 = bitcast i8* %call16 to [4 x float]*, !dbg !24034
  store [4 x float]* %19, [4 x float]** %winspeed, align 8, !dbg !24038
  store i32 0, i32* %a, align 4, !dbg !24039
  br label %for.cond, !dbg !24041

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %a, align 4, !dbg !24042
  %21 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24044
  %totvert17 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %21, i32 0, i32 10, !dbg !24045
  %22 = load i32, i32* %totvert17, align 8, !dbg !24045
  %cmp = icmp slt i32 %20, %22, !dbg !24046
  br i1 %cmp, label %for.body, label %for.end, !dbg !24047

for.body:                                         ; preds = %for.cond
  %23 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24048
  %co19 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %23, i32 0, i32 4, !dbg !24050
  %24 = load [3 x float]*, [3 x float]** %co19, align 8, !dbg !24050
  %25 = load i32, i32* %a, align 4, !dbg !24051
  %idxprom = sext i32 %25 to i64, !dbg !24048
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %24, i64 %idxprom, !dbg !24048
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !24048
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !24052
  %arraydecay22 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !24053
  call void @projectvert(float* %arraydecay20, [4 x float]* %arraydecay21, float* %arraydecay22), !dbg !24054
  %26 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24055
  %prevco23 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %26, i32 0, i32 8, !dbg !24056
  %27 = load [3 x float]*, [3 x float]** %prevco23, align 8, !dbg !24056
  %28 = load i32, i32* %a, align 4, !dbg !24057
  %idxprom24 = sext i32 %28 to i64, !dbg !24055
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom24, !dbg !24055
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx25, i64 0, i64 0, !dbg !24055
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !24058
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %prevho, i64 0, i64 0, !dbg !24059
  call void @projectvert(float* %arraydecay26, [4 x float]* %arraydecay27, float* %arraydecay28), !dbg !24060
  %arraydecay29 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !24061
  %29 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24062
  %prevco30 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %29, i32 0, i32 8, !dbg !24063
  %30 = load [3 x float]*, [3 x float]** %prevco30, align 8, !dbg !24063
  %31 = load i32, i32* %a, align 4, !dbg !24064
  %idxprom31 = sext i32 %31 to i64, !dbg !24062
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 %idxprom31, !dbg !24062
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 0, !dbg !24062
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %prevho, i64 0, i64 0, !dbg !24065
  call void @speedvector_project(%struct.Render* null, float* %arraydecay29, float* %arraydecay33, float* %arraydecay34), !dbg !24066
  %arraydecay35 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !24067
  %32 = load float, float* %winsq, align 4, !dbg !24068
  %33 = load float, float* %winroot, align 4, !dbg !24069
  %34 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24070
  %co36 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %34, i32 0, i32 4, !dbg !24071
  %35 = load [3 x float]*, [3 x float]** %co36, align 8, !dbg !24071
  %36 = load i32, i32* %a, align 4, !dbg !24072
  %idxprom37 = sext i32 %36 to i64, !dbg !24070
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %35, i64 %idxprom37, !dbg !24070
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !24070
  %arraydecay40 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !24073
  %37 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !24074
  %38 = load i32, i32* %a, align 4, !dbg !24075
  %idxprom41 = sext i32 %38 to i64, !dbg !24074
  %arrayidx42 = getelementptr inbounds [4 x float], [4 x float]* %37, i64 %idxprom41, !dbg !24074
  %arraydecay43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 0, !dbg !24074
  call void @calculate_speedvector(float* %arraydecay35, i32 0, float %32, float %33, float* %arraydecay39, float* %arraydecay40, float* %arraydecay43), !dbg !24076
  %39 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24077
  %nextco44 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %39, i32 0, i32 9, !dbg !24078
  %40 = load [3 x float]*, [3 x float]** %nextco44, align 8, !dbg !24078
  %41 = load i32, i32* %a, align 4, !dbg !24079
  %idxprom45 = sext i32 %41 to i64, !dbg !24077
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 %idxprom45, !dbg !24077
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !24077
  %arraydecay48 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %winmat, i64 0, i64 0, !dbg !24080
  %arraydecay49 = getelementptr inbounds [4 x float], [4 x float]* %nextho, i64 0, i64 0, !dbg !24081
  call void @projectvert(float* %arraydecay47, [4 x float]* %arraydecay48, float* %arraydecay49), !dbg !24082
  %arraydecay50 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !24083
  %42 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24084
  %nextco51 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %42, i32 0, i32 9, !dbg !24085
  %43 = load [3 x float]*, [3 x float]** %nextco51, align 8, !dbg !24085
  %44 = load i32, i32* %a, align 4, !dbg !24086
  %idxprom52 = sext i32 %44 to i64, !dbg !24084
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %43, i64 %idxprom52, !dbg !24084
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !24084
  %arraydecay55 = getelementptr inbounds [4 x float], [4 x float]* %nextho, i64 0, i64 0, !dbg !24087
  call void @speedvector_project(%struct.Render* null, float* %arraydecay50, float* %arraydecay54, float* %arraydecay55), !dbg !24088
  %arraydecay56 = getelementptr inbounds [2 x float], [2 x float]* %vec, i64 0, i64 0, !dbg !24089
  %45 = load float, float* %winsq, align 4, !dbg !24090
  %46 = load float, float* %winroot, align 4, !dbg !24091
  %47 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh.addr, align 8, !dbg !24092
  %co57 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %47, i32 0, i32 4, !dbg !24093
  %48 = load [3 x float]*, [3 x float]** %co57, align 8, !dbg !24093
  %49 = load i32, i32* %a, align 4, !dbg !24094
  %idxprom58 = sext i32 %49 to i64, !dbg !24092
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %48, i64 %idxprom58, !dbg !24092
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 0, !dbg !24092
  %arraydecay61 = getelementptr inbounds [4 x float], [4 x float]* %ho, i64 0, i64 0, !dbg !24095
  %50 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !24096
  %51 = load i32, i32* %a, align 4, !dbg !24097
  %idxprom62 = sext i32 %51 to i64, !dbg !24096
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %50, i64 %idxprom62, !dbg !24096
  %arraydecay64 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx63, i64 0, i64 0, !dbg !24096
  call void @calculate_speedvector(float* %arraydecay56, i32 1, float %45, float %46, float* %arraydecay60, float* %arraydecay61, float* %arraydecay64), !dbg !24098
  br label %for.inc, !dbg !24099

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %a, align 4, !dbg !24100
  %inc = add nsw i32 %52, 1, !dbg !24100
  store i32 %inc, i32* %a, align 4, !dbg !24100
  br label %for.cond, !dbg !24101, !llvm.loop !24102

for.end:                                          ; preds = %for.cond
  %53 = load [4 x float]*, [4 x float]** %winspeed, align 8, !dbg !24104
  %54 = bitcast [4 x float]* %53 to float*, !dbg !24105
  store float* %54, float** %retval, align 8, !dbg !24106
  br label %return, !dbg !24106

if.end65:                                         ; preds = %land.lhs.true2, %land.lhs.true, %entry
  store float* null, float** %retval, align 8, !dbg !24107
  br label %return, !dbg !24107

return:                                           ; preds = %if.end65, %for.end
  %55 = load float*, float** %retval, align 8, !dbg !24108
  ret float* %55, !dbg !24108
}

declare dso_local float* @RE_strandren_get_winspeed(%struct.ObjectInstanceRen*, %struct.StrandRen*, i32) #4

declare dso_local void @interp_weights_face_v3(float*, float*, float*, float*, float*, float*) #4

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v4(float* %r) #0 !dbg !24109 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !24110, metadata !DIExpression()), !dbg !24111
  %0 = load float*, float** %r.addr, align 8, !dbg !24112
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !24112
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !24113
  %1 = load float*, float** %r.addr, align 8, !dbg !24114
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !24114
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !24115
  %2 = load float*, float** %r.addr, align 8, !dbg !24116
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !24116
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !24117
  %3 = load float*, float** %r.addr, align 8, !dbg !24118
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 3, !dbg !24118
  store float 0.000000e+00, float* %arrayidx3, align 4, !dbg !24119
  ret void, !dbg !24120
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v4_v4fl(float* %r, float* %a, float %f) #0 !dbg !24121 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !24122, metadata !DIExpression()), !dbg !24123
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !24124, metadata !DIExpression()), !dbg !24125
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !24126, metadata !DIExpression()), !dbg !24127
  %0 = load float*, float** %a.addr, align 8, !dbg !24128
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !24128
  %1 = load float, float* %arrayidx, align 4, !dbg !24128
  %2 = load float, float* %f.addr, align 4, !dbg !24129
  %mul = fmul float %1, %2, !dbg !24130
  %3 = load float*, float** %r.addr, align 8, !dbg !24131
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !24131
  %4 = load float, float* %arrayidx1, align 4, !dbg !24132
  %add = fadd float %4, %mul, !dbg !24132
  store float %add, float* %arrayidx1, align 4, !dbg !24132
  %5 = load float*, float** %a.addr, align 8, !dbg !24133
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !24133
  %6 = load float, float* %arrayidx2, align 4, !dbg !24133
  %7 = load float, float* %f.addr, align 4, !dbg !24134
  %mul3 = fmul float %6, %7, !dbg !24135
  %8 = load float*, float** %r.addr, align 8, !dbg !24136
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !24136
  %9 = load float, float* %arrayidx4, align 4, !dbg !24137
  %add5 = fadd float %9, %mul3, !dbg !24137
  store float %add5, float* %arrayidx4, align 4, !dbg !24137
  %10 = load float*, float** %a.addr, align 8, !dbg !24138
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !24138
  %11 = load float, float* %arrayidx6, align 4, !dbg !24138
  %12 = load float, float* %f.addr, align 4, !dbg !24139
  %mul7 = fmul float %11, %12, !dbg !24140
  %13 = load float*, float** %r.addr, align 8, !dbg !24141
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !24141
  %14 = load float, float* %arrayidx8, align 4, !dbg !24142
  %add9 = fadd float %14, %mul7, !dbg !24142
  store float %add9, float* %arrayidx8, align 4, !dbg !24142
  %15 = load float*, float** %a.addr, align 8, !dbg !24143
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 3, !dbg !24143
  %16 = load float, float* %arrayidx10, align 4, !dbg !24143
  %17 = load float, float* %f.addr, align 4, !dbg !24144
  %mul11 = fmul float %16, %17, !dbg !24145
  %18 = load float*, float** %r.addr, align 8, !dbg !24146
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 3, !dbg !24146
  %19 = load float, float* %arrayidx12, align 4, !dbg !24147
  %add13 = fadd float %19, %mul11, !dbg !24147
  store float %add13, float* %arrayidx12, align 4, !dbg !24147
  ret void, !dbg !24148
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!3736}
!llvm.module.flags = !{!4225, !4226, !4227}
!llvm.ident = !{!4228}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "lastob", scope: !2, file: !3, line: 4518, type: !3236, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "set_dupli_tex_mat", scope: !3, file: !3, line: 4512, type: !4, scopeLine: 4513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/convertblender.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !3342, !3344, !2482}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !8, line: 58, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !10, line: 126, size: 49920, elements: !11)
!10 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11 = !{!12, !14, !15, !20, !22, !24, !25, !26, !27, !29, !2863, !2864, !2865, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2913, !2916, !2917, !2918, !2920, !2981, !2984, !2986, !2988, !2989, !2990, !2991, !2992, !2995, !2998, !3001, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3053, !3054, !3055, !3056, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3278, !3282, !3283, !3284, !3285, !3290, !3291, !3295, !3296, !3325, !3326, !3327, !3328, !3332, !3333, !3334, !3335, !3336, !3340, !3341}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9, file: !10, line: 128, baseType: !13, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9, file: !10, line: 128, baseType: !13, size: 64, offset: 64)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9, file: !10, line: 129, baseType: !16, size: 592, offset: 128)
!16 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 592, elements: !18)
!17 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!18 = !{!19}
!19 = !DISubrange(count: 74)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !9, file: !10, line: 130, baseType: !21, size: 32, offset: 736)
!21 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !10, line: 133, baseType: !23, size: 16, offset: 768)
!23 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !9, file: !10, line: 133, baseType: !23, size: 16, offset: 784)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !9, file: !10, line: 133, baseType: !23, size: 16, offset: 800)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !9, file: !10, line: 133, baseType: !23, size: 16, offset: 816)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !9, file: !10, line: 136, baseType: !28, size: 8, offset: 832)
!28 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !9, file: !10, line: 139, baseType: !30, size: 64, offset: 896)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !8, line: 148, baseType: !32)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !8, line: 110, size: 1152, elements: !33)
!33 = !{!34, !36, !37, !38, !39, !40, !41, !43, !46, !47, !56, !57, !58, !66, !68, !2859, !2860, !2861, !2862}
!34 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !32, file: !8, line: 111, baseType: !35, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !32, file: !8, line: 111, baseType: !35, size: 64, offset: 64)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !32, file: !8, line: 114, baseType: !21, size: 32, offset: 128)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !32, file: !8, line: 114, baseType: !21, size: 32, offset: 160)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !32, file: !8, line: 115, baseType: !23, size: 16, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !32, file: !8, line: 115, baseType: !23, size: 16, offset: 208)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !32, file: !8, line: 118, baseType: !42, size: 64, offset: 256)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !32, file: !8, line: 120, baseType: !44, size: 64, offset: 320)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !32, file: !8, line: 122, baseType: !44, size: 64, offset: 384)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !32, file: !8, line: 125, baseType: !48, size: 128, offset: 448)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !49, line: 89, baseType: !50)
!49 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!50 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !49, line: 86, size: 128, elements: !51)
!51 = !{!52, !53, !54, !55}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !50, file: !49, line: 87, baseType: !21, size: 32)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !50, file: !49, line: 87, baseType: !21, size: 32, offset: 32)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !50, file: !49, line: 88, baseType: !21, size: 32, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !50, file: !49, line: 88, baseType: !21, size: 32, offset: 96)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !32, file: !8, line: 127, baseType: !21, size: 32, offset: 576)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !32, file: !8, line: 127, baseType: !21, size: 32, offset: 608)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !32, file: !8, line: 130, baseType: !59, size: 128, offset: 640)
!59 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !60, line: 71, baseType: !61)
!60 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!61 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !60, line: 69, size: 128, elements: !62)
!62 = !{!63, !65}
!63 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !61, file: !60, line: 70, baseType: !64, size: 64)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !61, file: !60, line: 70, baseType: !64, size: 64, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !32, file: !8, line: 133, baseType: !67, size: 128, offset: 768)
!67 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !48)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !32, file: !8, line: 134, baseType: !69, size: 64, offset: 896)
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !71)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !8, line: 108, baseType: !72)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !8, line: 85, size: 1600, elements: !73)
!73 = !{!74, !76, !77, !78, !80, !81, !82, !83, !84, !85, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !72, file: !8, line: 86, baseType: !75, size: 64)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !72, size: 64)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !72, file: !8, line: 86, baseType: !75, size: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !72, file: !8, line: 89, baseType: !16, size: 592, offset: 128)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !72, file: !8, line: 90, baseType: !79, size: 32, offset: 736)
!79 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !72, file: !8, line: 90, baseType: !79, size: 32, offset: 768)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !72, file: !8, line: 90, baseType: !79, size: 32, offset: 800)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !72, file: !8, line: 91, baseType: !21, size: 32, offset: 832)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !72, file: !8, line: 91, baseType: !21, size: 32, offset: 864)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !72, file: !8, line: 91, baseType: !21, size: 32, offset: 896)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !72, file: !8, line: 93, baseType: !86, size: 64, offset: 960)
!86 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !87, size: 64)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !88, line: 93, size: 7552, elements: !89)
!88 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!89 = !{!90, !152, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !204, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !273, !274, !275, !276, !277, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2849}
!90 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !87, file: !88, line: 94, baseType: !91, size: 960)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !92, line: 130, baseType: !93)
!92 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !92, line: 117, size: 960, elements: !94)
!94 = !{!95, !96, !97, !99, !118, !122, !123, !124, !125, !126}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !93, file: !92, line: 118, baseType: !64, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !93, file: !92, line: 118, baseType: !64, size: 64, offset: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !93, file: !92, line: 119, baseType: !98, size: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !93, file: !92, line: 120, baseType: !100, size: 64, offset: 192)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !92, line: 136, size: 17600, elements: !102)
!102 = !{!103, !104, !106, !109, !113, !114, !115}
!103 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !101, file: !92, line: 137, baseType: !91, size: 960)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !101, file: !92, line: 138, baseType: !105, size: 64, offset: 960)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !101, file: !92, line: 139, baseType: !107, size: 64, offset: 1024)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !92, line: 43, flags: DIFlagFwdDecl)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !101, file: !92, line: 140, baseType: !110, size: 8192, offset: 1088)
!110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 8192, elements: !111)
!111 = !{!112}
!112 = !DISubrange(count: 1024)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !101, file: !92, line: 141, baseType: !110, size: 8192, offset: 9280)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !101, file: !92, line: 148, baseType: !100, size: 64, offset: 17472)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !101, file: !92, line: 150, baseType: !116, size: 64, offset: 17536)
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!117 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !92, line: 45, flags: DIFlagFwdDecl)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !93, file: !92, line: 121, baseType: !119, size: 528, offset: 256)
!119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 528, elements: !120)
!120 = !{!121}
!121 = !DISubrange(count: 66)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !93, file: !92, line: 126, baseType: !23, size: 16, offset: 784)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !93, file: !92, line: 127, baseType: !21, size: 32, offset: 800)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !93, file: !92, line: 128, baseType: !21, size: 32, offset: 832)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !93, file: !92, line: 128, baseType: !21, size: 32, offset: 864)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !93, file: !92, line: 129, baseType: !127, size: 64, offset: 896)
!127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 64)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !92, line: 75, baseType: !129)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !92, line: 62, size: 1024, elements: !130)
!130 = !{!131, !133, !134, !135, !136, !137, !141, !142, !150, !151}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !129, file: !92, line: 63, baseType: !132, size: 64)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !129, file: !92, line: 63, baseType: !132, size: 64, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !129, file: !92, line: 64, baseType: !17, size: 8, offset: 128)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !129, file: !92, line: 64, baseType: !17, size: 8, offset: 136)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !129, file: !92, line: 65, baseType: !23, size: 16, offset: 144)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !129, file: !92, line: 66, baseType: !138, size: 512, offset: 160)
!138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 512, elements: !139)
!139 = !{!140}
!140 = !DISubrange(count: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !129, file: !92, line: 67, baseType: !21, size: 32, offset: 672)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !129, file: !92, line: 69, baseType: !143, size: 256, offset: 704)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !92, line: 60, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !92, line: 48, size: 256, elements: !145)
!145 = !{!146, !147, !148, !149}
!146 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !144, file: !92, line: 49, baseType: !64, size: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !144, file: !92, line: 58, baseType: !59, size: 128, offset: 64)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !144, file: !92, line: 59, baseType: !21, size: 32, offset: 192)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !144, file: !92, line: 59, baseType: !21, size: 32, offset: 224)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !129, file: !92, line: 70, baseType: !21, size: 32, offset: 960)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !129, file: !92, line: 74, baseType: !21, size: 32, offset: 992)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !87, file: !88, line: 95, baseType: !153, size: 64, offset: 960)
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !88, line: 48, flags: DIFlagFwdDecl)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !87, file: !88, line: 97, baseType: !23, size: 16, offset: 1024)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !87, file: !88, line: 97, baseType: !23, size: 16, offset: 1040)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !87, file: !88, line: 99, baseType: !45, size: 32, offset: 1056)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !87, file: !88, line: 99, baseType: !45, size: 32, offset: 1088)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !87, file: !88, line: 99, baseType: !45, size: 32, offset: 1120)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !87, file: !88, line: 100, baseType: !45, size: 32, offset: 1152)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !87, file: !88, line: 100, baseType: !45, size: 32, offset: 1184)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !87, file: !88, line: 100, baseType: !45, size: 32, offset: 1216)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !87, file: !88, line: 101, baseType: !45, size: 32, offset: 1248)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !87, file: !88, line: 101, baseType: !45, size: 32, offset: 1280)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !87, file: !88, line: 101, baseType: !45, size: 32, offset: 1312)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !87, file: !88, line: 102, baseType: !45, size: 32, offset: 1344)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !87, file: !88, line: 102, baseType: !45, size: 32, offset: 1376)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !87, file: !88, line: 102, baseType: !45, size: 32, offset: 1408)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !87, file: !88, line: 103, baseType: !45, size: 32, offset: 1440)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !87, file: !88, line: 103, baseType: !45, size: 32, offset: 1472)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !87, file: !88, line: 103, baseType: !45, size: 32, offset: 1504)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !87, file: !88, line: 103, baseType: !45, size: 32, offset: 1536)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !87, file: !88, line: 103, baseType: !45, size: 32, offset: 1568)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !87, file: !88, line: 104, baseType: !45, size: 32, offset: 1600)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !87, file: !88, line: 104, baseType: !45, size: 32, offset: 1632)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !87, file: !88, line: 104, baseType: !45, size: 32, offset: 1664)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !87, file: !88, line: 104, baseType: !45, size: 32, offset: 1696)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !87, file: !88, line: 104, baseType: !45, size: 32, offset: 1728)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !87, file: !88, line: 105, baseType: !45, size: 32, offset: 1760)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !87, file: !88, line: 108, baseType: !181, size: 704, offset: 1792)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !88, line: 53, size: 704, elements: !182)
!182 = !{!183, !184, !185, !186, !187, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !181, file: !88, line: 54, baseType: !45, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !181, file: !88, line: 55, baseType: !45, size: 32, offset: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !181, file: !88, line: 56, baseType: !45, size: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !181, file: !88, line: 57, baseType: !45, size: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !181, file: !88, line: 59, baseType: !188, size: 96, offset: 128)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 96, elements: !189)
!189 = !{!190}
!190 = !DISubrange(count: 3)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !181, file: !88, line: 60, baseType: !188, size: 96, offset: 224)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !181, file: !88, line: 61, baseType: !188, size: 96, offset: 320)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !181, file: !88, line: 63, baseType: !45, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !181, file: !88, line: 64, baseType: !45, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !181, file: !88, line: 65, baseType: !45, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !181, file: !88, line: 67, baseType: !23, size: 16, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !181, file: !88, line: 68, baseType: !23, size: 16, offset: 528)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !181, file: !88, line: 69, baseType: !23, size: 16, offset: 544)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !181, file: !88, line: 70, baseType: !23, size: 16, offset: 560)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !181, file: !88, line: 72, baseType: !45, size: 32, offset: 576)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !181, file: !88, line: 73, baseType: !45, size: 32, offset: 608)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !181, file: !88, line: 74, baseType: !45, size: 32, offset: 640)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !181, file: !88, line: 75, baseType: !45, size: 32, offset: 672)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !87, file: !88, line: 109, baseType: !205, size: 128, offset: 2496)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !88, line: 79, size: 128, elements: !206)
!206 = !{!207, !208, !209, !210}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !205, file: !88, line: 80, baseType: !21, size: 32)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !205, file: !88, line: 81, baseType: !21, size: 32, offset: 32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !205, file: !88, line: 82, baseType: !21, size: 32, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !205, file: !88, line: 83, baseType: !21, size: 32, offset: 96)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !87, file: !88, line: 111, baseType: !45, size: 32, offset: 2624)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !87, file: !88, line: 111, baseType: !45, size: 32, offset: 2656)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !87, file: !88, line: 112, baseType: !45, size: 32, offset: 2688)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !87, file: !88, line: 112, baseType: !45, size: 32, offset: 2720)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !87, file: !88, line: 113, baseType: !45, size: 32, offset: 2752)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !87, file: !88, line: 114, baseType: !45, size: 32, offset: 2784)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !87, file: !88, line: 114, baseType: !45, size: 32, offset: 2816)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !87, file: !88, line: 115, baseType: !23, size: 16, offset: 2848)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !87, file: !88, line: 115, baseType: !23, size: 16, offset: 2864)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !87, file: !88, line: 116, baseType: !23, size: 16, offset: 2880)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !87, file: !88, line: 117, baseType: !17, size: 8, offset: 2896)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !87, file: !88, line: 117, baseType: !17, size: 8, offset: 2904)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !87, file: !88, line: 119, baseType: !45, size: 32, offset: 2912)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !87, file: !88, line: 119, baseType: !45, size: 32, offset: 2944)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !87, file: !88, line: 120, baseType: !23, size: 16, offset: 2976)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !87, file: !88, line: 120, baseType: !23, size: 16, offset: 2992)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !87, file: !88, line: 121, baseType: !45, size: 32, offset: 3008)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !87, file: !88, line: 121, baseType: !45, size: 32, offset: 3040)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !87, file: !88, line: 122, baseType: !45, size: 32, offset: 3072)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !87, file: !88, line: 123, baseType: !45, size: 32, offset: 3104)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !87, file: !88, line: 124, baseType: !23, size: 16, offset: 3136)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !87, file: !88, line: 125, baseType: !23, size: 16, offset: 3152)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !87, file: !88, line: 127, baseType: !21, size: 32, offset: 3168)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !87, file: !88, line: 127, baseType: !21, size: 32, offset: 3200)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !87, file: !88, line: 128, baseType: !21, size: 32, offset: 3232)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !87, file: !88, line: 128, baseType: !21, size: 32, offset: 3264)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !87, file: !88, line: 129, baseType: !23, size: 16, offset: 3296)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !87, file: !88, line: 129, baseType: !23, size: 16, offset: 3312)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !87, file: !88, line: 129, baseType: !23, size: 16, offset: 3328)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !87, file: !88, line: 129, baseType: !23, size: 16, offset: 3344)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !87, file: !88, line: 130, baseType: !45, size: 32, offset: 3360)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !87, file: !88, line: 130, baseType: !45, size: 32, offset: 3392)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !87, file: !88, line: 130, baseType: !45, size: 32, offset: 3424)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !87, file: !88, line: 130, baseType: !45, size: 32, offset: 3456)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !87, file: !88, line: 131, baseType: !45, size: 32, offset: 3488)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !87, file: !88, line: 131, baseType: !45, size: 32, offset: 3520)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !87, file: !88, line: 131, baseType: !45, size: 32, offset: 3552)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !87, file: !88, line: 131, baseType: !45, size: 32, offset: 3584)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !87, file: !88, line: 132, baseType: !45, size: 32, offset: 3616)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !87, file: !88, line: 132, baseType: !45, size: 32, offset: 3648)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !87, file: !88, line: 133, baseType: !138, size: 512, offset: 3680)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !87, file: !88, line: 135, baseType: !45, size: 32, offset: 4192)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !87, file: !88, line: 136, baseType: !45, size: 32, offset: 4224)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !87, file: !88, line: 137, baseType: !45, size: 32, offset: 4256)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !87, file: !88, line: 138, baseType: !21, size: 32, offset: 4288)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !87, file: !88, line: 141, baseType: !17, size: 8, offset: 4320)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !87, file: !88, line: 141, baseType: !17, size: 8, offset: 4328)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !87, file: !88, line: 141, baseType: !17, size: 8, offset: 4336)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !87, file: !88, line: 141, baseType: !17, size: 8, offset: 4344)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !87, file: !88, line: 142, baseType: !23, size: 16, offset: 4352)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !87, file: !88, line: 142, baseType: !23, size: 16, offset: 4368)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !87, file: !88, line: 142, baseType: !23, size: 16, offset: 4384)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !87, file: !88, line: 145, baseType: !17, size: 8, offset: 4400)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !87, file: !88, line: 145, baseType: !17, size: 8, offset: 4408)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !87, file: !88, line: 148, baseType: !23, size: 16, offset: 4416)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !87, file: !88, line: 148, baseType: !23, size: 16, offset: 4432)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !87, file: !88, line: 149, baseType: !45, size: 32, offset: 4448)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !87, file: !88, line: 149, baseType: !45, size: 32, offset: 4480)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !87, file: !88, line: 152, baseType: !270, size: 128, offset: 4512)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 128, elements: !271)
!271 = !{!272}
!272 = !DISubrange(count: 4)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !87, file: !88, line: 153, baseType: !45, size: 32, offset: 4640)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !87, file: !88, line: 154, baseType: !45, size: 32, offset: 4672)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !87, file: !88, line: 157, baseType: !23, size: 16, offset: 4704)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !87, file: !88, line: 157, baseType: !23, size: 16, offset: 4720)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !87, file: !88, line: 160, baseType: !278, size: 64, offset: 4736)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !280, line: 113, size: 6208, elements: !281)
!280 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!281 = !{!282, !283, !284, !285, !286, !287, !291}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !279, file: !280, line: 114, baseType: !23, size: 16)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !279, file: !280, line: 114, baseType: !23, size: 16, offset: 16)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !279, file: !280, line: 115, baseType: !17, size: 8, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !279, file: !280, line: 115, baseType: !17, size: 8, offset: 40)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !279, file: !280, line: 116, baseType: !17, size: 8, offset: 48)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !279, file: !280, line: 117, baseType: !288, size: 8, offset: 56)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 8, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 1)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !279, file: !280, line: 119, baseType: !292, size: 6144, offset: 64)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 6144, elements: !302)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !280, line: 109, baseType: !294)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !280, line: 106, size: 192, elements: !295)
!295 = !{!296, !297, !298, !299, !300, !301}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !294, file: !280, line: 107, baseType: !45, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !294, file: !280, line: 107, baseType: !45, size: 32, offset: 32)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !294, file: !280, line: 107, baseType: !45, size: 32, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !294, file: !280, line: 107, baseType: !45, size: 32, offset: 96)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !294, file: !280, line: 107, baseType: !45, size: 32, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !294, file: !280, line: 108, baseType: !21, size: 32, offset: 160)
!302 = !{!303}
!303 = !DISubrange(count: 32)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !87, file: !88, line: 161, baseType: !278, size: 64, offset: 4800)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !87, file: !88, line: 162, baseType: !17, size: 8, offset: 4864)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !87, file: !88, line: 162, baseType: !17, size: 8, offset: 4872)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !87, file: !88, line: 163, baseType: !17, size: 8, offset: 4880)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !87, file: !88, line: 163, baseType: !17, size: 8, offset: 4888)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !87, file: !88, line: 164, baseType: !23, size: 16, offset: 4896)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !87, file: !88, line: 164, baseType: !23, size: 16, offset: 4912)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !87, file: !88, line: 165, baseType: !45, size: 32, offset: 4928)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !87, file: !88, line: 165, baseType: !45, size: 32, offset: 4960)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !87, file: !88, line: 167, baseType: !314, size: 1152, offset: 4992)
!314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 1152, elements: !2807)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !280, line: 57, size: 2496, elements: !317)
!317 = !{!318, !319, !320, !321, !322, !2604, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !316, file: !280, line: 59, baseType: !23, size: 16)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !316, file: !280, line: 59, baseType: !23, size: 16, offset: 16)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !316, file: !280, line: 59, baseType: !23, size: 16, offset: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !316, file: !280, line: 59, baseType: !23, size: 16, offset: 48)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !316, file: !280, line: 60, baseType: !323, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !325, line: 115, size: 11392, elements: !326)
!325 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!326 = !{!327, !328, !329, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !346, !356, !370, !371, !413, !414, !418, !419, !435, !436, !437, !438, !439, !440, !441, !443, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !521, !522, !523, !524, !525, !526, !527, !528, !529, !532, !535, !544, !545, !546, !547, !548, !2193, !2215, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2566, !2569, !2572, !2573, !2592, !2593}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !324, file: !325, line: 116, baseType: !91, size: 960)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !324, file: !325, line: 117, baseType: !153, size: 64, offset: 960)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !324, file: !325, line: 119, baseType: !330, size: 64, offset: 1024)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !325, line: 57, flags: DIFlagFwdDecl)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !324, file: !325, line: 121, baseType: !23, size: 16, offset: 1088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !324, file: !325, line: 121, baseType: !23, size: 16, offset: 1104)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !324, file: !325, line: 122, baseType: !21, size: 32, offset: 1120)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !324, file: !325, line: 122, baseType: !21, size: 32, offset: 1152)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !324, file: !325, line: 122, baseType: !21, size: 32, offset: 1184)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !324, file: !325, line: 123, baseType: !138, size: 512, offset: 1216)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !324, file: !325, line: 124, baseType: !323, size: 64, offset: 1728)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !324, file: !325, line: 124, baseType: !323, size: 64, offset: 1792)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !324, file: !325, line: 127, baseType: !323, size: 64, offset: 1856)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !324, file: !325, line: 127, baseType: !323, size: 64, offset: 1920)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !324, file: !325, line: 127, baseType: !323, size: 64, offset: 1984)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !324, file: !325, line: 128, baseType: !344, size: 64, offset: 2048)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !88, line: 49, flags: DIFlagFwdDecl)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !324, file: !325, line: 130, baseType: !347, size: 64, offset: 2112)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !325, line: 97, size: 832, elements: !349)
!349 = !{!350, !354, !355}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !348, file: !325, line: 98, baseType: !351, size: 768)
!351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 768, elements: !352)
!352 = !{!353, !190}
!353 = !DISubrange(count: 8)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !348, file: !325, line: 99, baseType: !21, size: 32, offset: 768)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !348, file: !325, line: 99, baseType: !21, size: 32, offset: 800)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !324, file: !325, line: 131, baseType: !357, size: 64, offset: 2176)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !359, line: 486, size: 1600, elements: !360)
!359 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!360 = !{!361, !362, !363, !364, !365, !366, !367, !368, !369}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !358, file: !359, line: 487, baseType: !91, size: 960)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !358, file: !359, line: 489, baseType: !59, size: 128, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !358, file: !359, line: 490, baseType: !59, size: 128, offset: 1088)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !358, file: !359, line: 491, baseType: !59, size: 128, offset: 1216)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !358, file: !359, line: 492, baseType: !59, size: 128, offset: 1344)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !358, file: !359, line: 494, baseType: !21, size: 32, offset: 1472)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !358, file: !359, line: 495, baseType: !21, size: 32, offset: 1504)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !358, file: !359, line: 497, baseType: !21, size: 32, offset: 1536)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !358, file: !359, line: 498, baseType: !21, size: 32, offset: 1568)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !324, file: !325, line: 132, baseType: !357, size: 64, offset: 2240)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !324, file: !325, line: 133, baseType: !372, size: 64, offset: 2304)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !359, line: 334, size: 1728, elements: !374)
!374 = !{!375, !376, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !412}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !373, file: !359, line: 335, baseType: !59, size: 128)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !373, file: !359, line: 336, baseType: !377, size: 64, offset: 128)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !379, line: 51, flags: DIFlagFwdDecl)
!379 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!380 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !373, file: !359, line: 338, baseType: !23, size: 16, offset: 192)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !373, file: !359, line: 338, baseType: !23, size: 16, offset: 208)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !373, file: !359, line: 339, baseType: !79, size: 32, offset: 224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !373, file: !359, line: 340, baseType: !21, size: 32, offset: 256)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !373, file: !359, line: 342, baseType: !45, size: 32, offset: 288)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !373, file: !359, line: 343, baseType: !188, size: 96, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !373, file: !359, line: 344, baseType: !188, size: 96, offset: 416)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !373, file: !359, line: 347, baseType: !59, size: 128, offset: 512)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !373, file: !359, line: 349, baseType: !21, size: 32, offset: 640)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !373, file: !359, line: 350, baseType: !21, size: 32, offset: 672)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !373, file: !359, line: 351, baseType: !64, size: 64, offset: 704)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !373, file: !359, line: 352, baseType: !64, size: 64, offset: 768)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !373, file: !359, line: 354, baseType: !393, size: 384, offset: 832)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !359, line: 116, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !359, line: 94, size: 384, elements: !395)
!395 = !{!396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !394, file: !359, line: 96, baseType: !21, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !394, file: !359, line: 96, baseType: !21, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !394, file: !359, line: 97, baseType: !21, size: 32, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !394, file: !359, line: 97, baseType: !21, size: 32, offset: 96)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !394, file: !359, line: 99, baseType: !23, size: 16, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !394, file: !359, line: 100, baseType: !23, size: 16, offset: 144)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !394, file: !359, line: 102, baseType: !23, size: 16, offset: 160)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !394, file: !359, line: 105, baseType: !23, size: 16, offset: 176)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !394, file: !359, line: 108, baseType: !23, size: 16, offset: 192)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !394, file: !359, line: 109, baseType: !23, size: 16, offset: 208)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !394, file: !359, line: 111, baseType: !23, size: 16, offset: 224)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !394, file: !359, line: 112, baseType: !23, size: 16, offset: 240)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !394, file: !359, line: 114, baseType: !21, size: 32, offset: 256)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !394, file: !359, line: 114, baseType: !21, size: 32, offset: 288)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !394, file: !359, line: 115, baseType: !21, size: 32, offset: 320)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !394, file: !359, line: 115, baseType: !21, size: 32, offset: 352)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !373, file: !359, line: 355, baseType: !138, size: 512, offset: 1216)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !324, file: !325, line: 134, baseType: !64, size: 64, offset: 2368)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !324, file: !325, line: 136, baseType: !415, size: 64, offset: 2432)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !417, line: 61, flags: DIFlagFwdDecl)
!417 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!418 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !324, file: !325, line: 138, baseType: !393, size: 384, offset: 2496)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !324, file: !325, line: 139, baseType: !420, size: 64, offset: 2880)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !359, line: 80, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !359, line: 72, size: 192, elements: !423)
!423 = !{!424, !431, !432, !433, !434}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !422, file: !359, line: 73, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !359, line: 59, baseType: !427)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !359, line: 56, size: 128, elements: !428)
!428 = !{!429, !430}
!429 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !427, file: !359, line: 57, baseType: !188, size: 96)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !427, file: !359, line: 58, baseType: !21, size: 32, offset: 96)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !422, file: !359, line: 74, baseType: !21, size: 32, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !422, file: !359, line: 76, baseType: !21, size: 32, offset: 96)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !422, file: !359, line: 77, baseType: !21, size: 32, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !422, file: !359, line: 79, baseType: !21, size: 32, offset: 160)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !324, file: !325, line: 141, baseType: !59, size: 128, offset: 2944)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !324, file: !325, line: 142, baseType: !59, size: 128, offset: 3072)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !324, file: !325, line: 143, baseType: !59, size: 128, offset: 3200)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !324, file: !325, line: 144, baseType: !59, size: 128, offset: 3328)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !324, file: !325, line: 146, baseType: !21, size: 32, offset: 3456)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !324, file: !325, line: 147, baseType: !21, size: 32, offset: 3488)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !324, file: !325, line: 150, baseType: !442, size: 64, offset: 3520)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !324, file: !325, line: 151, baseType: !444, size: 64, offset: 3584)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !324, file: !325, line: 152, baseType: !21, size: 32, offset: 3648)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !324, file: !325, line: 153, baseType: !21, size: 32, offset: 3680)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !324, file: !325, line: 156, baseType: !188, size: 96, offset: 3712)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !324, file: !325, line: 156, baseType: !188, size: 96, offset: 3808)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !324, file: !325, line: 156, baseType: !188, size: 96, offset: 3904)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !324, file: !325, line: 157, baseType: !188, size: 96, offset: 4000)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !324, file: !325, line: 158, baseType: !188, size: 96, offset: 4096)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !324, file: !325, line: 159, baseType: !188, size: 96, offset: 4192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !324, file: !325, line: 160, baseType: !188, size: 96, offset: 4288)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !324, file: !325, line: 160, baseType: !188, size: 96, offset: 4384)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !324, file: !325, line: 161, baseType: !270, size: 128, offset: 4480)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !324, file: !325, line: 161, baseType: !270, size: 128, offset: 4608)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !324, file: !325, line: 162, baseType: !188, size: 96, offset: 4736)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !324, file: !325, line: 162, baseType: !188, size: 96, offset: 4832)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !324, file: !325, line: 163, baseType: !45, size: 32, offset: 4928)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !324, file: !325, line: 163, baseType: !45, size: 32, offset: 4960)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !324, file: !325, line: 164, baseType: !462, size: 512, offset: 4992)
!462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 512, elements: !463)
!463 = !{!272, !272}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !324, file: !325, line: 165, baseType: !462, size: 512, offset: 5504)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !324, file: !325, line: 166, baseType: !462, size: 512, offset: 6016)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !324, file: !325, line: 167, baseType: !462, size: 512, offset: 6528)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !324, file: !325, line: 176, baseType: !462, size: 512, offset: 7040)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !324, file: !325, line: 178, baseType: !79, size: 32, offset: 7552)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !324, file: !325, line: 180, baseType: !23, size: 16, offset: 7584)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !324, file: !325, line: 181, baseType: !23, size: 16, offset: 7600)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !324, file: !325, line: 183, baseType: !23, size: 16, offset: 7616)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !324, file: !325, line: 183, baseType: !23, size: 16, offset: 7632)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !324, file: !325, line: 184, baseType: !23, size: 16, offset: 7648)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !324, file: !325, line: 184, baseType: !23, size: 16, offset: 7664)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !324, file: !325, line: 185, baseType: !23, size: 16, offset: 7680)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !324, file: !325, line: 186, baseType: !23, size: 16, offset: 7696)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !324, file: !325, line: 187, baseType: !23, size: 16, offset: 7712)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !324, file: !325, line: 188, baseType: !17, size: 8, offset: 7728)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !324, file: !325, line: 189, baseType: !17, size: 8, offset: 7736)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !324, file: !325, line: 192, baseType: !21, size: 32, offset: 7744)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !324, file: !325, line: 192, baseType: !21, size: 32, offset: 7776)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !324, file: !325, line: 192, baseType: !21, size: 32, offset: 7808)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !324, file: !325, line: 192, baseType: !21, size: 32, offset: 7840)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !324, file: !325, line: 194, baseType: !21, size: 32, offset: 7872)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !324, file: !325, line: 202, baseType: !45, size: 32, offset: 7904)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !324, file: !325, line: 202, baseType: !45, size: 32, offset: 7936)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !324, file: !325, line: 202, baseType: !45, size: 32, offset: 7968)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !324, file: !325, line: 211, baseType: !45, size: 32, offset: 8000)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !324, file: !325, line: 212, baseType: !45, size: 32, offset: 8032)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !324, file: !325, line: 213, baseType: !45, size: 32, offset: 8064)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !324, file: !325, line: 214, baseType: !45, size: 32, offset: 8096)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !324, file: !325, line: 215, baseType: !45, size: 32, offset: 8128)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !324, file: !325, line: 216, baseType: !45, size: 32, offset: 8160)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !324, file: !325, line: 219, baseType: !45, size: 32, offset: 8192)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !324, file: !325, line: 220, baseType: !45, size: 32, offset: 8224)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !324, file: !325, line: 221, baseType: !45, size: 32, offset: 8256)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !324, file: !325, line: 224, baseType: !498, size: 16, offset: 8288)
!498 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !324, file: !325, line: 224, baseType: !498, size: 16, offset: 8304)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !324, file: !325, line: 226, baseType: !23, size: 16, offset: 8320)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !324, file: !325, line: 228, baseType: !17, size: 8, offset: 8336)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !324, file: !325, line: 229, baseType: !17, size: 8, offset: 8344)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !324, file: !325, line: 231, baseType: !23, size: 16, offset: 8352)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !324, file: !325, line: 232, baseType: !17, size: 8, offset: 8368)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !324, file: !325, line: 233, baseType: !17, size: 8, offset: 8376)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !324, file: !325, line: 234, baseType: !45, size: 32, offset: 8384)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !324, file: !325, line: 235, baseType: !45, size: 32, offset: 8416)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !324, file: !325, line: 237, baseType: !59, size: 128, offset: 8448)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !324, file: !325, line: 238, baseType: !59, size: 128, offset: 8576)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !324, file: !325, line: 239, baseType: !59, size: 128, offset: 8704)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !324, file: !325, line: 240, baseType: !59, size: 128, offset: 8832)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !324, file: !325, line: 242, baseType: !45, size: 32, offset: 8960)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !324, file: !325, line: 244, baseType: !23, size: 16, offset: 8992)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !324, file: !325, line: 245, baseType: !498, size: 16, offset: 9008)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !324, file: !325, line: 246, baseType: !270, size: 128, offset: 9024)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !324, file: !325, line: 248, baseType: !21, size: 32, offset: 9152)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !324, file: !325, line: 249, baseType: !21, size: 32, offset: 9184)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !324, file: !325, line: 251, baseType: !519, size: 64, offset: 9216)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !325, line: 251, flags: DIFlagFwdDecl)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !324, file: !325, line: 253, baseType: !17, size: 8, offset: 9280)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !324, file: !325, line: 254, baseType: !17, size: 8, offset: 9288)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !324, file: !325, line: 255, baseType: !23, size: 16, offset: 9296)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !324, file: !325, line: 256, baseType: !188, size: 96, offset: 9312)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !324, file: !325, line: 258, baseType: !59, size: 128, offset: 9408)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !324, file: !325, line: 259, baseType: !59, size: 128, offset: 9536)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !324, file: !325, line: 260, baseType: !59, size: 128, offset: 9664)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !324, file: !325, line: 261, baseType: !59, size: 128, offset: 9792)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !324, file: !325, line: 263, baseType: !530, size: 64, offset: 9920)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !325, line: 52, flags: DIFlagFwdDecl)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !324, file: !325, line: 264, baseType: !533, size: 64, offset: 9984)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !325, line: 53, flags: DIFlagFwdDecl)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !324, file: !325, line: 265, baseType: !536, size: 64, offset: 10048)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !538, line: 51, size: 1216, elements: !539)
!538 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!539 = !{!540, !541, !542, !543}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !537, file: !538, line: 52, baseType: !91, size: 960)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !537, file: !538, line: 54, baseType: !59, size: 128, offset: 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !537, file: !538, line: 59, baseType: !79, size: 32, offset: 1088)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !537, file: !538, line: 60, baseType: !188, size: 96, offset: 1120)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !324, file: !325, line: 267, baseType: !17, size: 8, offset: 10112)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !324, file: !325, line: 268, baseType: !17, size: 8, offset: 10120)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !324, file: !325, line: 269, baseType: !23, size: 16, offset: 10128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !324, file: !325, line: 270, baseType: !45, size: 32, offset: 10144)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !324, file: !325, line: 272, baseType: !549, size: 64, offset: 10176)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !551, line: 49, size: 10048, elements: !552)
!551 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_fluidsim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!552 = !{!553, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "fmd", scope: !550, file: !551, line: 50, baseType: !554, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimModifierData", file: !556, line: 729, size: 1024, elements: !557)
!556 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!557 = !{!558, !1925, !1926}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !555, file: !556, line: 730, baseType: !559, size: 896)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !556, line: 110, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !556, line: 99, size: 896, elements: !561)
!561 = !{!562, !564, !565, !566, !567, !568, !569, !570, !1924}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !560, file: !556, line: 100, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !560, file: !556, line: 100, baseType: !563, size: 64, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !560, file: !556, line: 102, baseType: !21, size: 32, offset: 128)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !560, file: !556, line: 102, baseType: !21, size: 32, offset: 160)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !560, file: !556, line: 103, baseType: !21, size: 32, offset: 192)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !560, file: !556, line: 103, baseType: !21, size: 32, offset: 224)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !560, file: !556, line: 104, baseType: !138, size: 512, offset: 256)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !560, file: !556, line: 107, baseType: !571, size: 64, offset: 768)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !417, line: 1216, size: 39680, elements: !573)
!573 = !{!574, !575, !576, !577, !1191, !1192, !1193, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1220, !1506, !1509, !1792, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1814, !1815, !1816, !1817, !1818, !1826, !1893, !1900, !1901, !1908, !1911, !1917, !1918, !1919, !1920, !1921}
!574 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !572, file: !417, line: 1217, baseType: !91, size: 960)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !572, file: !417, line: 1218, baseType: !153, size: 64, offset: 960)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !572, file: !417, line: 1220, baseType: !323, size: 64, offset: 1024)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !572, file: !417, line: 1221, baseType: !578, size: 64, offset: 1088)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !580, line: 52, size: 4224, elements: !581)
!580 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !659, !675}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !579, file: !580, line: 53, baseType: !91, size: 960)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !579, file: !580, line: 54, baseType: !153, size: 64, offset: 960)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !579, file: !580, line: 56, baseType: !23, size: 16, offset: 1024)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !579, file: !580, line: 56, baseType: !23, size: 16, offset: 1040)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !579, file: !580, line: 57, baseType: !23, size: 16, offset: 1056)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !579, file: !580, line: 57, baseType: !23, size: 16, offset: 1072)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !579, file: !580, line: 59, baseType: !45, size: 32, offset: 1088)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !579, file: !580, line: 59, baseType: !45, size: 32, offset: 1120)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !579, file: !580, line: 59, baseType: !45, size: 32, offset: 1152)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !579, file: !580, line: 60, baseType: !45, size: 32, offset: 1184)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !579, file: !580, line: 60, baseType: !45, size: 32, offset: 1216)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !579, file: !580, line: 60, baseType: !45, size: 32, offset: 1248)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !579, file: !580, line: 61, baseType: !45, size: 32, offset: 1280)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !579, file: !580, line: 61, baseType: !45, size: 32, offset: 1312)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !579, file: !580, line: 61, baseType: !45, size: 32, offset: 1344)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !579, file: !580, line: 68, baseType: !45, size: 32, offset: 1376)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !579, file: !580, line: 68, baseType: !45, size: 32, offset: 1408)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !579, file: !580, line: 68, baseType: !45, size: 32, offset: 1440)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !579, file: !580, line: 69, baseType: !45, size: 32, offset: 1472)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !579, file: !580, line: 69, baseType: !45, size: 32, offset: 1504)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !579, file: !580, line: 74, baseType: !45, size: 32, offset: 1536)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !579, file: !580, line: 79, baseType: !45, size: 32, offset: 1568)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !579, file: !580, line: 81, baseType: !23, size: 16, offset: 1600)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !579, file: !580, line: 91, baseType: !23, size: 16, offset: 1616)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !579, file: !580, line: 92, baseType: !23, size: 16, offset: 1632)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !579, file: !580, line: 93, baseType: !23, size: 16, offset: 1648)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !579, file: !580, line: 94, baseType: !23, size: 16, offset: 1664)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !579, file: !580, line: 94, baseType: !23, size: 16, offset: 1680)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !579, file: !580, line: 94, baseType: !23, size: 16, offset: 1696)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !579, file: !580, line: 94, baseType: !23, size: 16, offset: 1712)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !579, file: !580, line: 96, baseType: !45, size: 32, offset: 1728)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !579, file: !580, line: 96, baseType: !45, size: 32, offset: 1760)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !579, file: !580, line: 96, baseType: !45, size: 32, offset: 1792)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !579, file: !580, line: 96, baseType: !45, size: 32, offset: 1824)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !579, file: !580, line: 98, baseType: !45, size: 32, offset: 1856)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !579, file: !580, line: 98, baseType: !45, size: 32, offset: 1888)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !579, file: !580, line: 98, baseType: !45, size: 32, offset: 1920)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !579, file: !580, line: 98, baseType: !45, size: 32, offset: 1952)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !579, file: !580, line: 99, baseType: !45, size: 32, offset: 1984)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !579, file: !580, line: 99, baseType: !45, size: 32, offset: 2016)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !579, file: !580, line: 100, baseType: !45, size: 32, offset: 2048)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !579, file: !580, line: 100, baseType: !45, size: 32, offset: 2080)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !579, file: !580, line: 103, baseType: !23, size: 16, offset: 2112)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !579, file: !580, line: 103, baseType: !23, size: 16, offset: 2128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !579, file: !580, line: 103, baseType: !23, size: 16, offset: 2144)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !579, file: !580, line: 103, baseType: !23, size: 16, offset: 2160)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !579, file: !580, line: 106, baseType: !45, size: 32, offset: 2176)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !579, file: !580, line: 106, baseType: !45, size: 32, offset: 2208)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !579, file: !580, line: 106, baseType: !45, size: 32, offset: 2240)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !579, file: !580, line: 106, baseType: !45, size: 32, offset: 2272)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !579, file: !580, line: 107, baseType: !23, size: 16, offset: 2304)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !579, file: !580, line: 107, baseType: !23, size: 16, offset: 2320)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !579, file: !580, line: 107, baseType: !23, size: 16, offset: 2336)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !579, file: !580, line: 107, baseType: !23, size: 16, offset: 2352)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !579, file: !580, line: 108, baseType: !45, size: 32, offset: 2368)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !579, file: !580, line: 108, baseType: !45, size: 32, offset: 2400)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !579, file: !580, line: 109, baseType: !45, size: 32, offset: 2432)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !579, file: !580, line: 109, baseType: !45, size: 32, offset: 2464)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !579, file: !580, line: 110, baseType: !45, size: 32, offset: 2496)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !579, file: !580, line: 110, baseType: !45, size: 32, offset: 2528)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !579, file: !580, line: 110, baseType: !45, size: 32, offset: 2560)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !579, file: !580, line: 111, baseType: !23, size: 16, offset: 2592)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !579, file: !580, line: 111, baseType: !23, size: 16, offset: 2608)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !579, file: !580, line: 112, baseType: !23, size: 16, offset: 2624)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !579, file: !580, line: 112, baseType: !23, size: 16, offset: 2640)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !579, file: !580, line: 112, baseType: !23, size: 16, offset: 2656)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !579, file: !580, line: 115, baseType: !23, size: 16, offset: 2672)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !579, file: !580, line: 118, baseType: !44, size: 64, offset: 2688)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !579, file: !580, line: 118, baseType: !44, size: 64, offset: 2752)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !579, file: !580, line: 121, baseType: !344, size: 64, offset: 2816)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !579, file: !580, line: 122, baseType: !314, size: 1152, offset: 2880)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !579, file: !580, line: 123, baseType: !23, size: 16, offset: 4032)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !579, file: !580, line: 123, baseType: !23, size: 16, offset: 4048)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !579, file: !580, line: 123, baseType: !656, size: 32, offset: 4064)
!656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 32, elements: !657)
!657 = !{!658}
!658 = !DISubrange(count: 2)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !579, file: !580, line: 126, baseType: !660, size: 64, offset: 4096)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !92, line: 159, size: 448, elements: !662)
!662 = !{!663, !665, !666, !667, !668, !671}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !661, file: !92, line: 161, baseType: !664, size: 64)
!664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 64, elements: !657)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !661, file: !92, line: 162, baseType: !664, size: 64, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !661, file: !92, line: 163, baseType: !656, size: 32, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !661, file: !92, line: 164, baseType: !656, size: 32, offset: 160)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !661, file: !92, line: 165, baseType: !669, size: 128, offset: 192)
!669 = !DICompositeType(tag: DW_TAG_array_type, baseType: !670, size: 128, elements: !657)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !661, file: !92, line: 166, baseType: !672, size: 128, offset: 320)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !673, size: 128, elements: !657)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !92, line: 46, flags: DIFlagFwdDecl)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !579, file: !580, line: 129, baseType: !676, size: 64, offset: 4160)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !678, line: 328, size: 3456, elements: !679)
!678 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!679 = !{!680, !681, !682, !1139, !1140, !1141, !1142, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1169, !1170, !1171, !1174, !1178, !1182, !1186, !1187, !1188, !1189, !1190}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !677, file: !678, line: 329, baseType: !91, size: 960)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !677, file: !678, line: 330, baseType: !153, size: 64, offset: 960)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !677, file: !678, line: 332, baseType: !683, size: 64, offset: 1024)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !685, line: 283, size: 4096, elements: !686)
!685 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!686 = !{!687, !688, !689, !690, !694, !695, !699, !1108, !1116, !1120, !1126, !1130, !1131, !1132, !1133, !1137, !1138}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !684, file: !685, line: 284, baseType: !21, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !684, file: !685, line: 285, baseType: !138, size: 512, offset: 32)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !684, file: !685, line: 287, baseType: !138, size: 512, offset: 544)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !684, file: !685, line: 288, baseType: !691, size: 2048, offset: 1056)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 2048, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 256)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !684, file: !685, line: 289, baseType: !21, size: 32, offset: 3104)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !684, file: !685, line: 292, baseType: !696, size: 64, offset: 3136)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{null, !676}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !684, file: !685, line: 293, baseType: !700, size: 64, offset: 3200)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !676, !703}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !678, line: 167, size: 3712, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1100, !1101, !1102, !1103, !1104, !1105}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !704, file: !678, line: 168, baseType: !703, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !704, file: !678, line: 168, baseType: !703, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !704, file: !678, line: 168, baseType: !703, size: 64, offset: 128)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !704, file: !678, line: 170, baseType: !127, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !704, file: !678, line: 172, baseType: !711, size: 64, offset: 256)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !685, line: 144, size: 6016, elements: !713)
!713 = !{!714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !889, !890, !891, !905, !909, !913, !914, !984, !988, !992, !993, !994, !995, !999, !1000, !1004, !1008, !1012, !1016, !1020, !1024, !1028, !1029, !1036, !1038, !1047, !1056}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !712, file: !685, line: 145, baseType: !64, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !712, file: !685, line: 145, baseType: !64, size: 64, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !712, file: !685, line: 146, baseType: !23, size: 16, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !712, file: !685, line: 148, baseType: !138, size: 512, offset: 144)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !712, file: !685, line: 149, baseType: !21, size: 32, offset: 672)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !712, file: !685, line: 151, baseType: !138, size: 512, offset: 704)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !712, file: !685, line: 152, baseType: !691, size: 2048, offset: 1216)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !712, file: !685, line: 153, baseType: !21, size: 32, offset: 3264)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !712, file: !685, line: 155, baseType: !45, size: 32, offset: 3296)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !712, file: !685, line: 155, baseType: !45, size: 32, offset: 3328)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !712, file: !685, line: 155, baseType: !45, size: 32, offset: 3360)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !712, file: !685, line: 156, baseType: !45, size: 32, offset: 3392)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !712, file: !685, line: 156, baseType: !45, size: 32, offset: 3424)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !712, file: !685, line: 156, baseType: !45, size: 32, offset: 3456)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !712, file: !685, line: 157, baseType: !23, size: 16, offset: 3488)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !712, file: !685, line: 157, baseType: !23, size: 16, offset: 3504)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !712, file: !685, line: 157, baseType: !23, size: 16, offset: 3520)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !712, file: !685, line: 160, baseType: !732, size: 64, offset: 3584)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !685, line: 109, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !685, line: 98, size: 1408, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !888}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !734, file: !685, line: 99, baseType: !21, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !734, file: !685, line: 99, baseType: !21, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !685, line: 100, baseType: !138, size: 512, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !734, file: !685, line: 101, baseType: !45, size: 32, offset: 576)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !734, file: !685, line: 101, baseType: !45, size: 32, offset: 608)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !734, file: !685, line: 101, baseType: !45, size: 32, offset: 640)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !734, file: !685, line: 101, baseType: !45, size: 32, offset: 672)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !734, file: !685, line: 102, baseType: !45, size: 32, offset: 704)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !734, file: !685, line: 102, baseType: !45, size: 32, offset: 736)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !734, file: !685, line: 103, baseType: !21, size: 32, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !734, file: !685, line: 104, baseType: !21, size: 32, offset: 800)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !734, file: !685, line: 107, baseType: !748, size: 64, offset: 832)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !678, line: 87, size: 2816, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !873}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !749, file: !678, line: 88, baseType: !748, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !749, file: !678, line: 88, baseType: !748, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !749, file: !678, line: 88, baseType: !748, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !749, file: !678, line: 90, baseType: !127, size: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !749, file: !678, line: 92, baseType: !138, size: 512, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !749, file: !678, line: 94, baseType: !138, size: 512, offset: 768)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !749, file: !678, line: 99, baseType: !64, size: 64, offset: 1280)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !749, file: !678, line: 101, baseType: !23, size: 16, offset: 1344)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !749, file: !678, line: 101, baseType: !23, size: 16, offset: 1360)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !749, file: !678, line: 102, baseType: !23, size: 16, offset: 1376)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !749, file: !678, line: 103, baseType: !23, size: 16, offset: 1392)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !749, file: !678, line: 104, baseType: !763, size: 64, offset: 1408)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !685, line: 114, size: 1600, elements: !765)
!765 = !{!766, !767, !789, !793, !797, !801, !805, !809, !810, !814, !843, !844, !845}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !764, file: !685, line: 115, baseType: !138, size: 512)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !764, file: !685, line: 117, baseType: !768, size: 64, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{null, !771, !774, !776, !776, !787}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !773, line: 44, flags: DIFlagFwdDecl)
!773 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !685, line: 73, flags: DIFlagFwdDecl)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !773, line: 55, size: 192, elements: !778)
!778 = !{!779, !783, !786}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !777, file: !773, line: 58, baseType: !780, size: 64)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !777, file: !773, line: 56, size: 64, elements: !781)
!781 = !{!782}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !780, file: !773, line: 57, baseType: !64, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !777, file: !773, line: 60, baseType: !784, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !678, line: 335, flags: DIFlagFwdDecl)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !777, file: !773, line: 61, baseType: !64, size: 64, offset: 128)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !764, file: !685, line: 118, baseType: !790, size: 64, offset: 576)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{null, !771, !776, !776, !44}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !764, file: !685, line: 120, baseType: !794, size: 64, offset: 640)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DISubroutineType(types: !796)
!796 = !{null, !771, !774, !776}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !764, file: !685, line: 121, baseType: !798, size: 64, offset: 704)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DISubroutineType(types: !800)
!800 = !{null, !771, !776, !44}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !764, file: !685, line: 122, baseType: !802, size: 64, offset: 768)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{null, !676, !748, !784}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !764, file: !685, line: 123, baseType: !806, size: 64, offset: 832)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{null, !676, !748, !703, !748, !787}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !764, file: !685, line: 124, baseType: !806, size: 64, offset: 896)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !764, file: !685, line: 125, baseType: !811, size: 64, offset: 960)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{null, !676, !748, !703, !748}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !764, file: !685, line: 128, baseType: !815, size: 256, offset: 1024)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !773, line: 436, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !773, line: 430, size: 256, elements: !817)
!817 = !{!818, !819, !822, !838}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !816, file: !773, line: 431, baseType: !64, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !816, file: !773, line: 432, baseType: !820, size: 64, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !773, line: 417, baseType: !785)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !816, file: !773, line: 433, baseType: !823, size: 64, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !773, line: 408, baseType: !824)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!21, !771, !776, !827, !829}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !773, line: 38, flags: DIFlagFwdDecl)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !773, line: 348, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !773, line: 337, size: 256, elements: !832)
!832 = !{!833, !834, !835, !836, !837}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !831, file: !773, line: 339, baseType: !64, size: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !831, file: !773, line: 342, baseType: !827, size: 64, offset: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !831, file: !773, line: 345, baseType: !21, size: 32, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !831, file: !773, line: 347, baseType: !21, size: 32, offset: 160)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !831, file: !773, line: 347, baseType: !21, size: 32, offset: 192)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !816, file: !773, line: 434, baseType: !839, size: 64, offset: 192)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !773, line: 409, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{null, !64}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !764, file: !685, line: 129, baseType: !815, size: 256, offset: 1280)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !764, file: !685, line: 132, baseType: !21, size: 32, offset: 1536)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !764, file: !685, line: 132, baseType: !21, size: 32, offset: 1568)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !749, file: !678, line: 105, baseType: !138, size: 512, offset: 1472)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !749, file: !678, line: 107, baseType: !45, size: 32, offset: 1984)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !749, file: !678, line: 107, baseType: !45, size: 32, offset: 2016)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !749, file: !678, line: 109, baseType: !64, size: 64, offset: 2048)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !749, file: !678, line: 112, baseType: !23, size: 16, offset: 2112)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !749, file: !678, line: 114, baseType: !23, size: 16, offset: 2128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !749, file: !678, line: 115, baseType: !21, size: 32, offset: 2144)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !749, file: !678, line: 117, baseType: !64, size: 64, offset: 2176)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !749, file: !678, line: 122, baseType: !21, size: 32, offset: 2240)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !749, file: !678, line: 124, baseType: !21, size: 32, offset: 2272)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !749, file: !678, line: 126, baseType: !748, size: 64, offset: 2304)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !749, file: !678, line: 128, baseType: !858, size: 64, offset: 2368)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !678, line: 298, size: 448, elements: !860)
!860 = !{!861, !862, !863, !866, !867, !870, !871, !872}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !859, file: !678, line: 299, baseType: !858, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !859, file: !678, line: 299, baseType: !858, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !859, file: !678, line: 301, baseType: !864, size: 64, offset: 128)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !678, line: 218, baseType: !704)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !859, file: !678, line: 301, baseType: !864, size: 64, offset: 192)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !859, file: !678, line: 302, baseType: !868, size: 64, offset: 256)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !678, line: 132, baseType: !749)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !859, file: !678, line: 302, baseType: !868, size: 64, offset: 320)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !859, file: !678, line: 304, baseType: !21, size: 32, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !859, file: !678, line: 305, baseType: !21, size: 32, offset: 416)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !749, file: !678, line: 131, baseType: !874, size: 384, offset: 2432)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !678, line: 73, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !678, line: 62, size: 384, elements: !876)
!876 = !{!877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !875, file: !678, line: 63, baseType: !270, size: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !875, file: !678, line: 64, baseType: !45, size: 32, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !875, file: !678, line: 64, baseType: !45, size: 32, offset: 160)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !875, file: !678, line: 65, baseType: !64, size: 64, offset: 192)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !875, file: !678, line: 66, baseType: !23, size: 16, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !875, file: !678, line: 67, baseType: !23, size: 16, offset: 272)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !875, file: !678, line: 68, baseType: !23, size: 16, offset: 288)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !875, file: !678, line: 69, baseType: !23, size: 16, offset: 304)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !875, file: !678, line: 70, baseType: !23, size: 16, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !875, file: !678, line: 71, baseType: !23, size: 16, offset: 336)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !875, file: !678, line: 72, baseType: !656, size: 32, offset: 352)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !734, file: !685, line: 108, baseType: !138, size: 512, offset: 896)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !712, file: !685, line: 160, baseType: !732, size: 64, offset: 3648)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !712, file: !685, line: 162, baseType: !138, size: 512, offset: 3712)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !712, file: !685, line: 165, baseType: !892, size: 64, offset: 4224)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !895, !897, !899, !676, !703, !901}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !685, line: 81, flags: DIFlagFwdDecl)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !678, line: 43, flags: DIFlagFwdDecl)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !678, line: 274, baseType: !902)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !678, line: 271, size: 32, elements: !903)
!903 = !{!904}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !902, file: !678, line: 273, baseType: !79, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !712, file: !685, line: 168, baseType: !906, size: 64, offset: 4288)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{null, !895, !676, !703}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !712, file: !685, line: 171, baseType: !910, size: 64, offset: 4352)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{null, !774, !771, !776}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !712, file: !685, line: 173, baseType: !910, size: 64, offset: 4416)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !712, file: !685, line: 176, baseType: !915, size: 64, offset: 4480)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{null, !899, !918, !703, !21, !21}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !920, line: 70, size: 19840, elements: !921)
!920 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!921 = !{!922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !935, !936, !937, !938, !939, !941, !942, !943, !944, !948, !949, !950, !951, !952, !955, !956, !957, !958, !959, !962, !963, !965, !966, !967, !970, !971, !972, !975, !976, !977}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !919, file: !920, line: 71, baseType: !918, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !919, file: !920, line: 71, baseType: !918, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !919, file: !920, line: 74, baseType: !21, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !919, file: !920, line: 74, baseType: !21, size: 32, offset: 160)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !919, file: !920, line: 79, baseType: !28, size: 8, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !919, file: !920, line: 80, baseType: !21, size: 32, offset: 224)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !919, file: !920, line: 83, baseType: !21, size: 32, offset: 256)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !919, file: !920, line: 84, baseType: !21, size: 32, offset: 288)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !919, file: !920, line: 87, baseType: !670, size: 64, offset: 320)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !919, file: !920, line: 88, baseType: !44, size: 64, offset: 384)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !919, file: !920, line: 93, baseType: !933, size: 128, offset: 448)
!933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !934, size: 128, elements: !657)
!934 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !919, file: !920, line: 96, baseType: !21, size: 32, offset: 576)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !919, file: !920, line: 96, baseType: !21, size: 32, offset: 608)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !919, file: !920, line: 97, baseType: !21, size: 32, offset: 640)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !919, file: !920, line: 97, baseType: !21, size: 32, offset: 672)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !919, file: !920, line: 98, baseType: !940, size: 64, offset: 704)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !919, file: !920, line: 101, baseType: !42, size: 64, offset: 768)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !919, file: !920, line: 102, baseType: !44, size: 64, offset: 832)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !919, file: !920, line: 105, baseType: !45, size: 32, offset: 896)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !919, file: !920, line: 108, baseType: !945, size: 1280, offset: 960)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 1280, elements: !946)
!946 = !{!947}
!947 = !DISubrange(count: 20)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !919, file: !920, line: 109, baseType: !21, size: 32, offset: 2240)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !919, file: !920, line: 109, baseType: !21, size: 32, offset: 2272)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !919, file: !920, line: 112, baseType: !21, size: 32, offset: 2304)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !919, file: !920, line: 113, baseType: !21, size: 32, offset: 2336)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !919, file: !920, line: 114, baseType: !953, size: 64, offset: 2368)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !920, line: 50, flags: DIFlagFwdDecl)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !919, file: !920, line: 115, baseType: !64, size: 64, offset: 2432)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !919, file: !920, line: 118, baseType: !21, size: 32, offset: 2496)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !919, file: !920, line: 119, baseType: !110, size: 8192, offset: 2528)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !919, file: !920, line: 120, baseType: !110, size: 8192, offset: 10720)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !919, file: !920, line: 123, baseType: !960, size: 64, offset: 18944)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !920, line: 123, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !919, file: !920, line: 124, baseType: !21, size: 32, offset: 19008)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !919, file: !920, line: 127, baseType: !964, size: 64, offset: 19072)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !919, file: !920, line: 128, baseType: !79, size: 32, offset: 19136)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !919, file: !920, line: 129, baseType: !79, size: 32, offset: 19168)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !919, file: !920, line: 132, baseType: !968, size: 64, offset: 19200)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !417, line: 63, flags: DIFlagFwdDecl)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !919, file: !920, line: 133, baseType: !968, size: 64, offset: 19264)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !919, file: !920, line: 134, baseType: !670, size: 64, offset: 19328)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !919, file: !920, line: 135, baseType: !973, size: 64, offset: 19392)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !920, line: 135, flags: DIFlagFwdDecl)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !919, file: !920, line: 136, baseType: !21, size: 32, offset: 19456)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !919, file: !920, line: 137, baseType: !48, size: 128, offset: 19488)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !919, file: !920, line: 140, baseType: !978, size: 192, offset: 19648)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !920, line: 55, size: 192, elements: !979)
!979 = !{!980, !981, !982, !983}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !978, file: !920, line: 56, baseType: !79, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !978, file: !920, line: 57, baseType: !79, size: 32, offset: 32)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !978, file: !920, line: 58, baseType: !964, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !978, file: !920, line: 59, baseType: !79, size: 32, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !712, file: !685, line: 179, baseType: !985, size: 64, offset: 4544)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !676, !703, !444, !21}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !712, file: !685, line: 181, baseType: !989, size: 64, offset: 4608)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!21, !703, !21, !21}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !712, file: !685, line: 183, baseType: !989, size: 64, offset: 4672)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !712, file: !685, line: 185, baseType: !989, size: 64, offset: 4736)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !712, file: !685, line: 188, baseType: !700, size: 64, offset: 4800)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !712, file: !685, line: 190, baseType: !996, size: 64, offset: 4864)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{null, !676, !703, !98}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !712, file: !685, line: 193, baseType: !700, size: 64, offset: 4928)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !712, file: !685, line: 195, baseType: !1001, size: 64, offset: 4992)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{null, !703}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !712, file: !685, line: 197, baseType: !1005, size: 64, offset: 5056)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{null, !676, !703, !703}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !712, file: !685, line: 200, baseType: !1009, size: 64, offset: 5120)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{null, !895, !776}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !712, file: !685, line: 201, baseType: !1013, size: 64, offset: 5184)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !776}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !712, file: !685, line: 202, baseType: !1017, size: 64, offset: 5248)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !776, !703}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !712, file: !685, line: 205, baseType: !1021, size: 64, offset: 5312)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!21, !711, !676}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !712, file: !685, line: 207, baseType: !1025, size: 64, offset: 5376)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!21, !703, !676}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !712, file: !685, line: 210, baseType: !700, size: 64, offset: 5440)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !712, file: !685, line: 213, baseType: !1030, size: 64, offset: 5504)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !685, line: 135, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!64, !1034, !703, !901}
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !685, line: 62, flags: DIFlagFwdDecl)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !712, file: !685, line: 214, baseType: !1037, size: 64, offset: 5568)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !685, line: 136, baseType: !840)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !712, file: !685, line: 215, baseType: !1039, size: 64, offset: 5632)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !685, line: 137, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{null, !64, !21, !703, !1043, !1045, !1045}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !685, line: 63, flags: DIFlagFwdDecl)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !712, file: !685, line: 217, baseType: !1048, size: 64, offset: 5696)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !685, line: 138, baseType: !1049)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!21, !1052, !703, !1043, !1054, !1054}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !685, line: 64, flags: DIFlagFwdDecl)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !685, line: 66, flags: DIFlagFwdDecl)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !712, file: !685, line: 220, baseType: !815, size: 256, offset: 5760)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !704, file: !678, line: 173, baseType: !138, size: 512, offset: 320)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !704, file: !678, line: 175, baseType: !138, size: 512, offset: 832)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !704, file: !678, line: 176, baseType: !21, size: 32, offset: 1344)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !704, file: !678, line: 177, baseType: !23, size: 16, offset: 1376)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !704, file: !678, line: 177, baseType: !23, size: 16, offset: 1392)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !704, file: !678, line: 178, baseType: !23, size: 16, offset: 1408)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !704, file: !678, line: 178, baseType: !23, size: 16, offset: 1424)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !704, file: !678, line: 179, baseType: !23, size: 16, offset: 1440)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !704, file: !678, line: 179, baseType: !23, size: 16, offset: 1456)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !704, file: !678, line: 180, baseType: !23, size: 16, offset: 1472)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !704, file: !678, line: 181, baseType: !23, size: 16, offset: 1488)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !704, file: !678, line: 182, baseType: !188, size: 96, offset: 1504)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !704, file: !678, line: 184, baseType: !59, size: 128, offset: 1600)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !704, file: !678, line: 184, baseType: !59, size: 128, offset: 1728)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !704, file: !678, line: 185, baseType: !703, size: 64, offset: 1856)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !704, file: !678, line: 186, baseType: !98, size: 64, offset: 1920)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !704, file: !678, line: 187, baseType: !64, size: 64, offset: 1984)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !704, file: !678, line: 188, baseType: !703, size: 64, offset: 2048)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !704, file: !678, line: 189, baseType: !59, size: 128, offset: 2112)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !704, file: !678, line: 191, baseType: !45, size: 32, offset: 2240)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !704, file: !678, line: 191, baseType: !45, size: 32, offset: 2272)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !704, file: !678, line: 192, baseType: !45, size: 32, offset: 2304)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !704, file: !678, line: 192, baseType: !45, size: 32, offset: 2336)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !704, file: !678, line: 193, baseType: !45, size: 32, offset: 2368)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !704, file: !678, line: 194, baseType: !45, size: 32, offset: 2400)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !704, file: !678, line: 194, baseType: !45, size: 32, offset: 2432)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !704, file: !678, line: 196, baseType: !21, size: 32, offset: 2464)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !704, file: !678, line: 198, baseType: !138, size: 512, offset: 2496)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !704, file: !678, line: 199, baseType: !23, size: 16, offset: 3008)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !704, file: !678, line: 199, baseType: !23, size: 16, offset: 3024)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !704, file: !678, line: 200, baseType: !45, size: 32, offset: 3040)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !704, file: !678, line: 200, baseType: !45, size: 32, offset: 3072)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !704, file: !678, line: 202, baseType: !23, size: 16, offset: 3104)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !704, file: !678, line: 202, baseType: !23, size: 16, offset: 3120)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !704, file: !678, line: 203, baseType: !64, size: 64, offset: 3136)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !704, file: !678, line: 204, baseType: !1093, size: 128, offset: 3200)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !49, line: 95, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !49, line: 92, size: 128, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1094, file: !49, line: 93, baseType: !45, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1094, file: !49, line: 93, baseType: !45, size: 32, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1094, file: !49, line: 94, baseType: !45, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1094, file: !49, line: 94, baseType: !45, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !704, file: !678, line: 205, baseType: !1093, size: 128, offset: 3328)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !704, file: !678, line: 206, baseType: !1093, size: 128, offset: 3456)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !704, file: !678, line: 215, baseType: !23, size: 16, offset: 3584)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !704, file: !678, line: 215, baseType: !23, size: 16, offset: 3600)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !704, file: !678, line: 216, baseType: !21, size: 32, offset: 3616)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !704, file: !678, line: 217, baseType: !1106, size: 64, offset: 3648)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !678, line: 51, flags: DIFlagFwdDecl)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !684, file: !685, line: 294, baseType: !1109, size: 64, offset: 3264)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !571, !64, !1112}
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !685, line: 282, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{null, !64, !21, !787}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !684, file: !685, line: 296, baseType: !1117, size: 64, offset: 3328)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!21, !895, !683}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !684, file: !685, line: 298, baseType: !1121, size: 64, offset: 3392)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !895, !683, !1124, !1125, !1125}
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !684, file: !685, line: 302, baseType: !1127, size: 64, offset: 3456)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !676, !676}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !684, file: !685, line: 303, baseType: !1127, size: 64, offset: 3520)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !684, file: !685, line: 304, baseType: !1127, size: 64, offset: 3584)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !684, file: !685, line: 307, baseType: !696, size: 64, offset: 3648)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !684, file: !685, line: 309, baseType: !1134, size: 64, offset: 3712)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!21, !676, !858}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !684, file: !685, line: 311, baseType: !700, size: 64, offset: 3776)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !684, file: !685, line: 314, baseType: !815, size: 256, offset: 3840)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !677, file: !678, line: 333, baseType: !138, size: 512, offset: 1088)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !677, file: !678, line: 335, baseType: !784, size: 64, offset: 1600)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !677, file: !678, line: 337, baseType: !415, size: 64, offset: 1664)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !677, file: !678, line: 338, baseType: !1143, size: 64, offset: 1728)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 64, elements: !657)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !677, file: !678, line: 340, baseType: !59, size: 128, offset: 1792)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !677, file: !678, line: 340, baseType: !59, size: 128, offset: 1920)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !677, file: !678, line: 342, baseType: !21, size: 32, offset: 2048)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !677, file: !678, line: 342, baseType: !21, size: 32, offset: 2080)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !677, file: !678, line: 343, baseType: !21, size: 32, offset: 2112)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !677, file: !678, line: 345, baseType: !21, size: 32, offset: 2144)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !677, file: !678, line: 346, baseType: !21, size: 32, offset: 2176)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !677, file: !678, line: 347, baseType: !23, size: 16, offset: 2208)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !677, file: !678, line: 348, baseType: !23, size: 16, offset: 2224)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !677, file: !678, line: 349, baseType: !21, size: 32, offset: 2240)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !677, file: !678, line: 351, baseType: !21, size: 32, offset: 2272)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !677, file: !678, line: 353, baseType: !23, size: 16, offset: 2304)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !677, file: !678, line: 354, baseType: !23, size: 16, offset: 2320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !677, file: !678, line: 355, baseType: !21, size: 32, offset: 2336)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !677, file: !678, line: 357, baseType: !1093, size: 128, offset: 2368)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !677, file: !678, line: 363, baseType: !59, size: 128, offset: 2496)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !677, file: !678, line: 363, baseType: !59, size: 128, offset: 2624)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !677, file: !678, line: 368, baseType: !1162, size: 64, offset: 2752)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !685, line: 500, size: 64, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1163, file: !685, line: 502, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1168, line: 48, baseType: !378)
!1168 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !677, file: !678, line: 372, baseType: !901, size: 32, offset: 2816)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !677, file: !678, line: 373, baseType: !21, size: 32, offset: 2848)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !677, file: !678, line: 382, baseType: !1172, size: 64, offset: 2880)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !678, line: 46, flags: DIFlagFwdDecl)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !677, file: !678, line: 385, baseType: !1175, size: 64, offset: 2944)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{null, !64, !45}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !677, file: !678, line: 386, baseType: !1179, size: 64, offset: 3008)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{null, !64, !444}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !677, file: !678, line: 387, baseType: !1183, size: 64, offset: 3072)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!21, !64}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !677, file: !678, line: 388, baseType: !840, size: 64, offset: 3136)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !677, file: !678, line: 389, baseType: !64, size: 64, offset: 3200)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !677, file: !678, line: 389, baseType: !64, size: 64, offset: 3264)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !677, file: !678, line: 389, baseType: !64, size: 64, offset: 3328)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !677, file: !678, line: 389, baseType: !64, size: 64, offset: 3392)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !572, file: !417, line: 1223, baseType: !571, size: 64, offset: 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !572, file: !417, line: 1225, baseType: !59, size: 128, offset: 1216)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !572, file: !417, line: 1226, baseType: !1194, size: 64, offset: 1344)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !417, line: 69, size: 320, elements: !1196)
!1196 = !{!1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1195, file: !417, line: 70, baseType: !1194, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1195, file: !417, line: 70, baseType: !1194, size: 64, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1195, file: !417, line: 71, baseType: !79, size: 32, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1195, file: !417, line: 71, baseType: !79, size: 32, offset: 160)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1195, file: !417, line: 72, baseType: !21, size: 32, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1195, file: !417, line: 73, baseType: !23, size: 16, offset: 224)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1195, file: !417, line: 73, baseType: !23, size: 16, offset: 240)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1195, file: !417, line: 74, baseType: !323, size: 64, offset: 256)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !572, file: !417, line: 1227, baseType: !323, size: 64, offset: 1408)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !572, file: !417, line: 1229, baseType: !188, size: 96, offset: 1472)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !572, file: !417, line: 1230, baseType: !188, size: 96, offset: 1568)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !572, file: !417, line: 1231, baseType: !188, size: 96, offset: 1664)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !572, file: !417, line: 1231, baseType: !188, size: 96, offset: 1760)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !572, file: !417, line: 1233, baseType: !79, size: 32, offset: 1856)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !572, file: !417, line: 1234, baseType: !21, size: 32, offset: 1888)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !572, file: !417, line: 1235, baseType: !79, size: 32, offset: 1920)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !572, file: !417, line: 1237, baseType: !23, size: 16, offset: 1952)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !572, file: !417, line: 1239, baseType: !17, size: 8, offset: 1968)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !572, file: !417, line: 1240, baseType: !288, size: 8, offset: 1976)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !572, file: !417, line: 1242, baseType: !676, size: 64, offset: 1984)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !572, file: !417, line: 1244, baseType: !1218, size: 64, offset: 2048)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !417, line: 59, flags: DIFlagFwdDecl)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !572, file: !417, line: 1246, baseType: !1221, size: 64, offset: 2112)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !417, line: 1067, size: 5184, elements: !1223)
!1223 = !{!1224, !1263, !1264, !1279, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1301, !1380, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1489}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1222, file: !417, line: 1068, baseType: !1225, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !417, line: 934, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !417, line: 925, size: 576, elements: !1228)
!1228 = !{!1229, !1245, !1246, !1247, !1248, !1249, !1262}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1227, file: !417, line: 926, baseType: !1230, size: 320)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !417, line: 830, baseType: !1231)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !417, line: 813, size: 320, elements: !1232)
!1232 = !{!1233, !1236, !1239, !1240, !1242, !1243, !1244}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1231, file: !417, line: 814, baseType: !1234, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !417, line: 51, flags: DIFlagFwdDecl)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1231, file: !417, line: 815, baseType: !1237, size: 64, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !417, line: 815, flags: DIFlagFwdDecl)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1231, file: !417, line: 818, baseType: !64, size: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1231, file: !417, line: 819, baseType: !1241, size: 32, offset: 192)
!1241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 32, elements: !271)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1231, file: !417, line: 822, baseType: !21, size: 32, offset: 224)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1231, file: !417, line: 826, baseType: !21, size: 32, offset: 256)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1231, file: !417, line: 829, baseType: !21, size: 32, offset: 288)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1227, file: !417, line: 928, baseType: !23, size: 16, offset: 320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1227, file: !417, line: 928, baseType: !23, size: 16, offset: 336)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1227, file: !417, line: 929, baseType: !21, size: 32, offset: 352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1227, file: !417, line: 930, baseType: !670, size: 64, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1227, file: !417, line: 931, baseType: !1250, size: 64, offset: 448)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1252, line: 59, size: 128, elements: !1253)
!1252 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1253 = !{!1254, !1260, !1261}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1251, file: !1252, line: 60, baseType: !1255, size: 64)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !1252, line: 54, size: 64, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1256, file: !1252, line: 55, baseType: !21, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1256, file: !1252, line: 56, baseType: !45, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1251, file: !1252, line: 61, baseType: !21, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1251, file: !1252, line: 62, baseType: !21, size: 32, offset: 96)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1227, file: !417, line: 933, baseType: !64, size: 64, offset: 512)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1222, file: !417, line: 1069, baseType: !1225, size: 64, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1222, file: !417, line: 1070, baseType: !1265, size: 64, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !417, line: 916, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !417, line: 891, size: 704, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1273, !1274, !1275, !1276, !1277, !1278}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1267, file: !417, line: 892, baseType: !1230, size: 320)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1267, file: !417, line: 896, baseType: !21, size: 32, offset: 320)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1267, file: !417, line: 900, baseType: !1272, size: 96, offset: 352)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 96, elements: !189)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1267, file: !417, line: 903, baseType: !45, size: 32, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1267, file: !417, line: 906, baseType: !21, size: 32, offset: 480)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1267, file: !417, line: 909, baseType: !45, size: 32, offset: 512)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1267, file: !417, line: 912, baseType: !45, size: 32, offset: 544)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1267, file: !417, line: 914, baseType: !323, size: 64, offset: 576)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1267, file: !417, line: 915, baseType: !64, size: 64, offset: 640)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1222, file: !417, line: 1071, baseType: !1280, size: 64, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !417, line: 920, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !417, line: 918, size: 320, elements: !1283)
!1283 = !{!1284}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1282, file: !417, line: 919, baseType: !1230, size: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1222, file: !417, line: 1075, baseType: !45, size: 32, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1222, file: !417, line: 1077, baseType: !45, size: 32, offset: 288)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1222, file: !417, line: 1078, baseType: !45, size: 32, offset: 320)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1222, file: !417, line: 1079, baseType: !23, size: 16, offset: 352)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1222, file: !417, line: 1082, baseType: !23, size: 16, offset: 368)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1222, file: !417, line: 1085, baseType: !17, size: 8, offset: 384)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1222, file: !417, line: 1086, baseType: !17, size: 8, offset: 392)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1222, file: !417, line: 1087, baseType: !17, size: 8, offset: 400)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1222, file: !417, line: 1088, baseType: !17, size: 8, offset: 408)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1222, file: !417, line: 1090, baseType: !45, size: 32, offset: 416)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1222, file: !417, line: 1093, baseType: !23, size: 16, offset: 448)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1222, file: !417, line: 1096, baseType: !17, size: 8, offset: 464)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1222, file: !417, line: 1098, baseType: !1298, size: 40, offset: 472)
!1298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 40, elements: !1299)
!1299 = !{!1300}
!1300 = !DISubrange(count: 5)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1222, file: !417, line: 1101, baseType: !1302, size: 832, offset: 512)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !417, line: 836, size: 832, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1376, !1377, !1378, !1379}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1302, file: !417, line: 837, baseType: !1230, size: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1302, file: !417, line: 839, baseType: !23, size: 16, offset: 320)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1302, file: !417, line: 839, baseType: !23, size: 16, offset: 336)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1302, file: !417, line: 842, baseType: !23, size: 16, offset: 352)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1302, file: !417, line: 842, baseType: !23, size: 16, offset: 368)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1302, file: !417, line: 843, baseType: !656, size: 32, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1302, file: !417, line: 845, baseType: !21, size: 32, offset: 416)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1302, file: !417, line: 847, baseType: !64, size: 64, offset: 448)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1302, file: !417, line: 848, baseType: !1313, size: 64, offset: 512)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1315, line: 77, size: 15424, elements: !1316)
!1315 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1316 = !{!1317, !1318, !1319, !1322, !1323, !1326, !1327, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1365, !1366, !1370}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1314, file: !1315, line: 78, baseType: !91, size: 960)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1314, file: !1315, line: 80, baseType: !110, size: 8192, offset: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1314, file: !1315, line: 82, baseType: !1320, size: 64, offset: 9152)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1315, line: 43, flags: DIFlagFwdDecl)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1314, file: !1315, line: 83, baseType: !673, size: 64, offset: 9216)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1314, file: !1315, line: 86, baseType: !1324, size: 64, offset: 9280)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1315, line: 41, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1314, file: !1315, line: 87, baseType: !35, size: 64, offset: 9344)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1314, file: !1315, line: 89, baseType: !1328, size: 512, offset: 9408)
!1328 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 512, elements: !1329)
!1329 = !{!353}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1314, file: !1315, line: 90, baseType: !23, size: 16, offset: 9920)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1314, file: !1315, line: 90, baseType: !23, size: 16, offset: 9936)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1314, file: !1315, line: 92, baseType: !23, size: 16, offset: 9952)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1314, file: !1315, line: 92, baseType: !23, size: 16, offset: 9968)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1314, file: !1315, line: 93, baseType: !23, size: 16, offset: 9984)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1314, file: !1315, line: 93, baseType: !23, size: 16, offset: 10000)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1314, file: !1315, line: 94, baseType: !21, size: 32, offset: 10016)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1314, file: !1315, line: 97, baseType: !23, size: 16, offset: 10048)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1314, file: !1315, line: 97, baseType: !23, size: 16, offset: 10064)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1314, file: !1315, line: 98, baseType: !23, size: 16, offset: 10080)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1314, file: !1315, line: 98, baseType: !23, size: 16, offset: 10096)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1314, file: !1315, line: 99, baseType: !23, size: 16, offset: 10112)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1314, file: !1315, line: 99, baseType: !23, size: 16, offset: 10128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1314, file: !1315, line: 100, baseType: !79, size: 32, offset: 10144)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1314, file: !1315, line: 101, baseType: !670, size: 64, offset: 10176)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1314, file: !1315, line: 103, baseType: !116, size: 64, offset: 10240)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1314, file: !1315, line: 104, baseType: !660, size: 64, offset: 10304)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1314, file: !1315, line: 107, baseType: !45, size: 32, offset: 10368)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1314, file: !1315, line: 108, baseType: !21, size: 32, offset: 10400)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1314, file: !1315, line: 109, baseType: !23, size: 16, offset: 10432)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1314, file: !1315, line: 110, baseType: !23, size: 16, offset: 10448)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1314, file: !1315, line: 113, baseType: !21, size: 32, offset: 10464)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1314, file: !1315, line: 113, baseType: !21, size: 32, offset: 10496)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1314, file: !1315, line: 114, baseType: !17, size: 8, offset: 10528)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1314, file: !1315, line: 114, baseType: !17, size: 8, offset: 10536)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1314, file: !1315, line: 115, baseType: !23, size: 16, offset: 10544)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1314, file: !1315, line: 116, baseType: !270, size: 128, offset: 10560)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1314, file: !1315, line: 119, baseType: !45, size: 32, offset: 10688)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1314, file: !1315, line: 119, baseType: !45, size: 32, offset: 10720)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1314, file: !1315, line: 122, baseType: !1360, size: 512, offset: 10752)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1361, line: 182, baseType: !1362)
!1361 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1361, line: 180, size: 512, elements: !1363)
!1363 = !{!1364}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1361, line: 181, baseType: !138, size: 512)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1314, file: !1315, line: 123, baseType: !17, size: 8, offset: 11264)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1314, file: !1315, line: 125, baseType: !1367, size: 56, offset: 11272)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 56, elements: !1368)
!1368 = !{!1369}
!1369 = !DISubrange(count: 7)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1314, file: !1315, line: 126, baseType: !1371, size: 4096, offset: 11328)
!1371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1372, size: 4096, elements: !1329)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1315, line: 69, baseType: !1373)
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1315, line: 67, size: 512, elements: !1374)
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1373, file: !1315, line: 68, baseType: !138, size: 512)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1302, file: !417, line: 849, baseType: !1313, size: 64, offset: 576)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1302, file: !417, line: 850, baseType: !1313, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1302, file: !417, line: 851, baseType: !188, size: 96, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1302, file: !417, line: 852, baseType: !45, size: 32, offset: 800)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1222, file: !417, line: 1104, baseType: !1381, size: 1344, offset: 1344)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !417, line: 867, size: 1344, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1387, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1381, file: !417, line: 868, baseType: !23, size: 16)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1381, file: !417, line: 869, baseType: !23, size: 16, offset: 16)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1381, file: !417, line: 870, baseType: !23, size: 16, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1381, file: !417, line: 871, baseType: !23, size: 16, offset: 48)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1381, file: !417, line: 873, baseType: !1388, size: 896, offset: 64)
!1388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1389, size: 896, elements: !1368)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !417, line: 864, baseType: !1390)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !417, line: 859, size: 128, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1390, file: !417, line: 860, baseType: !23, size: 16)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1390, file: !417, line: 861, baseType: !23, size: 16, offset: 16)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1390, file: !417, line: 861, baseType: !23, size: 16, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1390, file: !417, line: 861, baseType: !23, size: 16, offset: 48)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1390, file: !417, line: 862, baseType: !21, size: 32, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1390, file: !417, line: 863, baseType: !45, size: 32, offset: 96)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1381, file: !417, line: 874, baseType: !64, size: 64, offset: 960)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1381, file: !417, line: 876, baseType: !45, size: 32, offset: 1024)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1381, file: !417, line: 876, baseType: !45, size: 32, offset: 1056)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1381, file: !417, line: 878, baseType: !21, size: 32, offset: 1088)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1381, file: !417, line: 879, baseType: !21, size: 32, offset: 1120)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1381, file: !417, line: 881, baseType: !21, size: 32, offset: 1152)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1381, file: !417, line: 881, baseType: !21, size: 32, offset: 1184)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1381, file: !417, line: 883, baseType: !571, size: 64, offset: 1216)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1381, file: !417, line: 884, baseType: !323, size: 64, offset: 1280)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1222, file: !417, line: 1107, baseType: !45, size: 32, offset: 2688)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1222, file: !417, line: 1110, baseType: !45, size: 32, offset: 2720)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1222, file: !417, line: 1113, baseType: !23, size: 16, offset: 2752)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1222, file: !417, line: 1113, baseType: !23, size: 16, offset: 2768)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1222, file: !417, line: 1116, baseType: !17, size: 8, offset: 2784)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1222, file: !417, line: 1117, baseType: !288, size: 8, offset: 2792)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1222, file: !417, line: 1120, baseType: !23, size: 16, offset: 2800)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1222, file: !417, line: 1121, baseType: !45, size: 32, offset: 2816)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1222, file: !417, line: 1122, baseType: !45, size: 32, offset: 2848)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1222, file: !417, line: 1123, baseType: !45, size: 32, offset: 2880)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1222, file: !417, line: 1124, baseType: !45, size: 32, offset: 2912)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1222, file: !417, line: 1125, baseType: !45, size: 32, offset: 2944)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1222, file: !417, line: 1126, baseType: !45, size: 32, offset: 2976)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1222, file: !417, line: 1127, baseType: !45, size: 32, offset: 3008)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1222, file: !417, line: 1128, baseType: !45, size: 32, offset: 3040)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1222, file: !417, line: 1129, baseType: !45, size: 32, offset: 3072)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1222, file: !417, line: 1130, baseType: !45, size: 32, offset: 3104)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1222, file: !417, line: 1131, baseType: !23, size: 16, offset: 3136)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1222, file: !417, line: 1132, baseType: !17, size: 8, offset: 3152)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1222, file: !417, line: 1133, baseType: !17, size: 8, offset: 3160)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1222, file: !417, line: 1134, baseType: !1428, size: 24, offset: 3168)
!1428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 24, elements: !189)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1222, file: !417, line: 1135, baseType: !17, size: 8, offset: 3192)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1222, file: !417, line: 1138, baseType: !323, size: 64, offset: 3200)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1222, file: !417, line: 1139, baseType: !17, size: 8, offset: 3264)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1222, file: !417, line: 1140, baseType: !17, size: 8, offset: 3272)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1222, file: !417, line: 1141, baseType: !17, size: 8, offset: 3280)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1222, file: !417, line: 1142, baseType: !17, size: 8, offset: 3288)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1222, file: !417, line: 1143, baseType: !17, size: 8, offset: 3296)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1222, file: !417, line: 1144, baseType: !1437, size: 64, offset: 3304)
!1437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 64, elements: !1329)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1222, file: !417, line: 1145, baseType: !1437, size: 64, offset: 3368)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1222, file: !417, line: 1148, baseType: !17, size: 8, offset: 3432)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1222, file: !417, line: 1149, baseType: !17, size: 8, offset: 3440)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1222, file: !417, line: 1152, baseType: !17, size: 8, offset: 3448)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1222, file: !417, line: 1152, baseType: !17, size: 8, offset: 3456)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1222, file: !417, line: 1153, baseType: !17, size: 8, offset: 3464)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1222, file: !417, line: 1154, baseType: !23, size: 16, offset: 3472)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1222, file: !417, line: 1154, baseType: !23, size: 16, offset: 3488)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1222, file: !417, line: 1155, baseType: !23, size: 16, offset: 3504)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1222, file: !417, line: 1155, baseType: !23, size: 16, offset: 3520)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1222, file: !417, line: 1156, baseType: !17, size: 8, offset: 3536)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1222, file: !417, line: 1157, baseType: !17, size: 8, offset: 3544)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1222, file: !417, line: 1159, baseType: !17, size: 8, offset: 3552)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1222, file: !417, line: 1160, baseType: !17, size: 8, offset: 3560)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1222, file: !417, line: 1161, baseType: !17, size: 8, offset: 3568)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1222, file: !417, line: 1162, baseType: !17, size: 8, offset: 3576)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1222, file: !417, line: 1165, baseType: !21, size: 32, offset: 3584)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1222, file: !417, line: 1166, baseType: !21, size: 32, offset: 3616)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1222, file: !417, line: 1167, baseType: !21, size: 32, offset: 3648)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1222, file: !417, line: 1168, baseType: !21, size: 32, offset: 3680)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1222, file: !417, line: 1171, baseType: !23, size: 16, offset: 3712)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1222, file: !417, line: 1171, baseType: !23, size: 16, offset: 3728)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1222, file: !417, line: 1172, baseType: !21, size: 32, offset: 3744)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1222, file: !417, line: 1173, baseType: !45, size: 32, offset: 3776)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1222, file: !417, line: 1174, baseType: !45, size: 32, offset: 3808)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1222, file: !417, line: 1177, baseType: !1464, size: 1024, offset: 3840)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !417, line: 963, size: 1024, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1464, file: !417, line: 965, baseType: !21, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1464, file: !417, line: 968, baseType: !45, size: 32, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1464, file: !417, line: 971, baseType: !45, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1464, file: !417, line: 974, baseType: !45, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1464, file: !417, line: 977, baseType: !188, size: 96, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1464, file: !417, line: 979, baseType: !188, size: 96, offset: 224)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1464, file: !417, line: 982, baseType: !21, size: 32, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1464, file: !417, line: 987, baseType: !1143, size: 64, offset: 352)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1464, file: !417, line: 989, baseType: !45, size: 32, offset: 416)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1464, file: !417, line: 994, baseType: !21, size: 32, offset: 448)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1464, file: !417, line: 995, baseType: !21, size: 32, offset: 480)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1464, file: !417, line: 997, baseType: !17, size: 8, offset: 512)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1464, file: !417, line: 998, baseType: !1367, size: 56, offset: 520)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1464, file: !417, line: 1000, baseType: !45, size: 32, offset: 576)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1464, file: !417, line: 1003, baseType: !1143, size: 64, offset: 608)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1464, file: !417, line: 1006, baseType: !21, size: 32, offset: 672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1464, file: !417, line: 1009, baseType: !45, size: 32, offset: 704)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1464, file: !417, line: 1012, baseType: !1143, size: 64, offset: 736)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1464, file: !417, line: 1015, baseType: !1143, size: 64, offset: 800)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1464, file: !417, line: 1018, baseType: !21, size: 32, offset: 864)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1464, file: !417, line: 1019, baseType: !968, size: 64, offset: 896)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1464, file: !417, line: 1023, baseType: !45, size: 32, offset: 960)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1464, file: !417, line: 1024, baseType: !21, size: 32, offset: 992)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1222, file: !417, line: 1179, baseType: !1490, size: 320, offset: 4864)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !417, line: 1043, size: 320, elements: !1491)
!1491 = !{!1492, !1493, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1490, file: !417, line: 1044, baseType: !17, size: 8)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1490, file: !417, line: 1045, baseType: !1494, size: 16, offset: 8)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 16, elements: !657)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1490, file: !417, line: 1048, baseType: !17, size: 8, offset: 24)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1490, file: !417, line: 1049, baseType: !45, size: 32, offset: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1490, file: !417, line: 1049, baseType: !45, size: 32, offset: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1490, file: !417, line: 1052, baseType: !45, size: 32, offset: 96)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1490, file: !417, line: 1052, baseType: !45, size: 32, offset: 128)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1490, file: !417, line: 1053, baseType: !17, size: 8, offset: 160)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1490, file: !417, line: 1054, baseType: !1428, size: 24, offset: 168)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1490, file: !417, line: 1057, baseType: !45, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1490, file: !417, line: 1057, baseType: !45, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1490, file: !417, line: 1060, baseType: !45, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1490, file: !417, line: 1060, baseType: !45, size: 32, offset: 288)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !572, file: !417, line: 1247, baseType: !1507, size: 64, offset: 2176)
!1507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!1508 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !417, line: 60, flags: DIFlagFwdDecl)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !572, file: !417, line: 1251, baseType: !1510, size: 31872, offset: 2240)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !417, line: 403, size: 31872, elements: !1511)
!1511 = !{!1512, !1587, !1607, !1616, !1636, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1770, !1771, !1772, !1774, !1790, !1791}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1510, file: !417, line: 404, baseType: !1513, size: 1984)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !417, line: 259, size: 1984, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1532, !1582}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1513, file: !417, line: 260, baseType: !17, size: 8)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1513, file: !417, line: 263, baseType: !17, size: 8, offset: 8)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1513, file: !417, line: 266, baseType: !17, size: 8, offset: 16)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1513, file: !417, line: 267, baseType: !17, size: 8, offset: 24)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1513, file: !417, line: 269, baseType: !17, size: 8, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1513, file: !417, line: 270, baseType: !17, size: 8, offset: 40)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1513, file: !417, line: 276, baseType: !17, size: 8, offset: 48)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1513, file: !417, line: 279, baseType: !17, size: 8, offset: 56)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1513, file: !417, line: 280, baseType: !23, size: 16, offset: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1513, file: !417, line: 280, baseType: !23, size: 16, offset: 80)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1513, file: !417, line: 281, baseType: !45, size: 32, offset: 96)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1513, file: !417, line: 284, baseType: !17, size: 8, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1513, file: !417, line: 285, baseType: !17, size: 8, offset: 136)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1513, file: !417, line: 287, baseType: !1529, size: 48, offset: 144)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 48, elements: !1530)
!1530 = !{!1531}
!1531 = !DISubrange(count: 6)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1513, file: !417, line: 290, baseType: !1533, size: 1280, offset: 192)
!1533 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1361, line: 174, baseType: !1534)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1361, line: 166, size: 1280, elements: !1535)
!1535 = !{!1536, !1537, !1538, !1539, !1540, !1541, !1542, !1581}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1534, file: !1361, line: 167, baseType: !21, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1534, file: !1361, line: 167, baseType: !21, size: 32, offset: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1534, file: !1361, line: 168, baseType: !138, size: 512, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1534, file: !1361, line: 169, baseType: !138, size: 512, offset: 576)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1534, file: !1361, line: 170, baseType: !45, size: 32, offset: 1088)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1534, file: !1361, line: 171, baseType: !45, size: 32, offset: 1120)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1534, file: !1361, line: 172, baseType: !1543, size: 64, offset: 1152)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1361, line: 72, size: 3072, elements: !1545)
!1545 = !{!1546, !1547, !1548, !1549, !1550, !1551, !1552, !1577, !1578, !1579, !1580}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1544, file: !1361, line: 73, baseType: !21, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1544, file: !1361, line: 73, baseType: !21, size: 32, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1544, file: !1361, line: 74, baseType: !21, size: 32, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1544, file: !1361, line: 75, baseType: !21, size: 32, offset: 96)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1544, file: !1361, line: 77, baseType: !1093, size: 128, offset: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1544, file: !1361, line: 77, baseType: !1093, size: 128, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1544, file: !1361, line: 79, baseType: !1553, size: 2304, offset: 384)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1554, size: 2304, elements: !271)
!1554 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1361, line: 67, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1361, line: 55, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1573, !1574, !1575, !1576}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1555, file: !1361, line: 56, baseType: !23, size: 16)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1555, file: !1361, line: 56, baseType: !23, size: 16, offset: 16)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1555, file: !1361, line: 58, baseType: !45, size: 32, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1555, file: !1361, line: 59, baseType: !45, size: 32, offset: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1555, file: !1361, line: 59, baseType: !45, size: 32, offset: 96)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1555, file: !1361, line: 60, baseType: !1143, size: 64, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1555, file: !1361, line: 60, baseType: !1143, size: 64, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1555, file: !1361, line: 61, baseType: !1565, size: 64, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1361, line: 47, baseType: !1567)
!1567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1361, line: 44, size: 96, elements: !1568)
!1568 = !{!1569, !1570, !1571, !1572}
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1567, file: !1361, line: 45, baseType: !45, size: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1567, file: !1361, line: 45, baseType: !45, size: 32, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1567, file: !1361, line: 46, baseType: !23, size: 16, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1567, file: !1361, line: 46, baseType: !23, size: 16, offset: 80)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1555, file: !1361, line: 62, baseType: !1565, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1555, file: !1361, line: 64, baseType: !1565, size: 64, offset: 384)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1555, file: !1361, line: 65, baseType: !1143, size: 64, offset: 448)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1555, file: !1361, line: 66, baseType: !1143, size: 64, offset: 512)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1544, file: !1361, line: 80, baseType: !188, size: 96, offset: 2688)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1544, file: !1361, line: 80, baseType: !188, size: 96, offset: 2784)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1544, file: !1361, line: 81, baseType: !188, size: 96, offset: 2880)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1544, file: !1361, line: 83, baseType: !188, size: 96, offset: 2976)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1534, file: !1361, line: 173, baseType: !64, size: 64, offset: 1216)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1513, file: !417, line: 291, baseType: !1583, size: 512, offset: 1472)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1361, line: 178, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1361, line: 176, size: 512, elements: !1585)
!1585 = !{!1586}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1584, file: !1361, line: 177, baseType: !138, size: 512)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1510, file: !417, line: 406, baseType: !1588, size: 64, offset: 1984)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !417, line: 80, size: 1472, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1589, file: !417, line: 81, baseType: !64, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1589, file: !417, line: 82, baseType: !64, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1589, file: !417, line: 83, baseType: !79, size: 32, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1589, file: !417, line: 84, baseType: !79, size: 32, offset: 160)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1589, file: !417, line: 86, baseType: !79, size: 32, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1589, file: !417, line: 87, baseType: !79, size: 32, offset: 224)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1589, file: !417, line: 88, baseType: !79, size: 32, offset: 256)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1589, file: !417, line: 89, baseType: !79, size: 32, offset: 288)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1589, file: !417, line: 90, baseType: !79, size: 32, offset: 320)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1589, file: !417, line: 91, baseType: !79, size: 32, offset: 352)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1589, file: !417, line: 92, baseType: !79, size: 32, offset: 384)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1589, file: !417, line: 93, baseType: !79, size: 32, offset: 416)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1589, file: !417, line: 95, baseType: !1604, size: 1024, offset: 448)
!1604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1024, elements: !1605)
!1605 = !{!1606}
!1606 = !DISubrange(count: 128)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1510, file: !417, line: 407, baseType: !1608, size: 64, offset: 2048)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !417, line: 98, size: 1216, elements: !1610)
!1610 = !{!1611, !1612, !1613, !1614, !1615}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1609, file: !417, line: 100, baseType: !64, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1609, file: !417, line: 101, baseType: !64, size: 64, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1609, file: !417, line: 103, baseType: !79, size: 32, offset: 128)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1609, file: !417, line: 104, baseType: !79, size: 32, offset: 160)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1609, file: !417, line: 106, baseType: !1604, size: 1024, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1510, file: !417, line: 408, baseType: !1617, size: 512, offset: 2112)
!1617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !417, line: 109, size: 512, elements: !1618)
!1618 = !{!1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635}
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1617, file: !417, line: 111, baseType: !21, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1617, file: !417, line: 112, baseType: !21, size: 32, offset: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1617, file: !417, line: 115, baseType: !21, size: 32, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1617, file: !417, line: 116, baseType: !21, size: 32, offset: 96)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1617, file: !417, line: 117, baseType: !21, size: 32, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1617, file: !417, line: 118, baseType: !21, size: 32, offset: 160)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1617, file: !417, line: 119, baseType: !21, size: 32, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1617, file: !417, line: 120, baseType: !21, size: 32, offset: 224)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1617, file: !417, line: 121, baseType: !21, size: 32, offset: 256)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1617, file: !417, line: 122, baseType: !21, size: 32, offset: 288)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1617, file: !417, line: 125, baseType: !21, size: 32, offset: 320)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1617, file: !417, line: 126, baseType: !21, size: 32, offset: 352)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1617, file: !417, line: 127, baseType: !23, size: 16, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1617, file: !417, line: 128, baseType: !23, size: 16, offset: 400)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1617, file: !417, line: 129, baseType: !21, size: 32, offset: 416)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1617, file: !417, line: 130, baseType: !21, size: 32, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1617, file: !417, line: 131, baseType: !21, size: 32, offset: 480)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1510, file: !417, line: 409, baseType: !1637, size: 576, offset: 2624)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !417, line: 134, size: 576, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1637, file: !417, line: 135, baseType: !21, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1637, file: !417, line: 136, baseType: !21, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1637, file: !417, line: 137, baseType: !21, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1637, file: !417, line: 138, baseType: !21, size: 32, offset: 96)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1637, file: !417, line: 139, baseType: !21, size: 32, offset: 128)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1637, file: !417, line: 140, baseType: !21, size: 32, offset: 160)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1637, file: !417, line: 141, baseType: !21, size: 32, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1637, file: !417, line: 142, baseType: !21, size: 32, offset: 224)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1637, file: !417, line: 143, baseType: !45, size: 32, offset: 256)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1637, file: !417, line: 144, baseType: !21, size: 32, offset: 288)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1637, file: !417, line: 145, baseType: !21, size: 32, offset: 320)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1637, file: !417, line: 147, baseType: !21, size: 32, offset: 352)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1637, file: !417, line: 148, baseType: !21, size: 32, offset: 384)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1637, file: !417, line: 149, baseType: !21, size: 32, offset: 416)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1637, file: !417, line: 150, baseType: !21, size: 32, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1637, file: !417, line: 151, baseType: !21, size: 32, offset: 480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1637, file: !417, line: 152, baseType: !127, size: 64, offset: 512)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1510, file: !417, line: 411, baseType: !21, size: 32, offset: 3200)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1510, file: !417, line: 411, baseType: !21, size: 32, offset: 3232)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1510, file: !417, line: 411, baseType: !21, size: 32, offset: 3264)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1510, file: !417, line: 412, baseType: !45, size: 32, offset: 3296)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1510, file: !417, line: 413, baseType: !21, size: 32, offset: 3328)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1510, file: !417, line: 413, baseType: !21, size: 32, offset: 3360)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1510, file: !417, line: 415, baseType: !21, size: 32, offset: 3392)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1510, file: !417, line: 415, baseType: !21, size: 32, offset: 3424)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1510, file: !417, line: 416, baseType: !23, size: 16, offset: 3456)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1510, file: !417, line: 416, baseType: !23, size: 16, offset: 3472)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1510, file: !417, line: 418, baseType: !45, size: 32, offset: 3488)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1510, file: !417, line: 418, baseType: !45, size: 32, offset: 3520)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1510, file: !417, line: 421, baseType: !45, size: 32, offset: 3552)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1510, file: !417, line: 421, baseType: !45, size: 32, offset: 3584)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1510, file: !417, line: 421, baseType: !45, size: 32, offset: 3616)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1510, file: !417, line: 425, baseType: !23, size: 16, offset: 3648)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1510, file: !417, line: 425, baseType: !23, size: 16, offset: 3664)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1510, file: !417, line: 425, baseType: !23, size: 16, offset: 3680)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1510, file: !417, line: 426, baseType: !23, size: 16, offset: 3696)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1510, file: !417, line: 428, baseType: !23, size: 16, offset: 3712)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1510, file: !417, line: 428, baseType: !23, size: 16, offset: 3728)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1510, file: !417, line: 431, baseType: !21, size: 32, offset: 3744)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1510, file: !417, line: 433, baseType: !23, size: 16, offset: 3776)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1510, file: !417, line: 435, baseType: !23, size: 16, offset: 3792)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1510, file: !417, line: 437, baseType: !23, size: 16, offset: 3808)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1510, file: !417, line: 439, baseType: !23, size: 16, offset: 3824)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1510, file: !417, line: 441, baseType: !23, size: 16, offset: 3840)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1510, file: !417, line: 443, baseType: !23, size: 16, offset: 3856)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1510, file: !417, line: 449, baseType: !21, size: 32, offset: 3872)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1510, file: !417, line: 453, baseType: !21, size: 32, offset: 3904)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1510, file: !417, line: 458, baseType: !23, size: 16, offset: 3936)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1510, file: !417, line: 462, baseType: !23, size: 16, offset: 3952)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1510, file: !417, line: 467, baseType: !21, size: 32, offset: 3968)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1510, file: !417, line: 467, baseType: !21, size: 32, offset: 4000)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1510, file: !417, line: 469, baseType: !23, size: 16, offset: 4032)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1510, file: !417, line: 469, baseType: !23, size: 16, offset: 4048)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1510, file: !417, line: 469, baseType: !23, size: 16, offset: 4064)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1510, file: !417, line: 469, baseType: !23, size: 16, offset: 4080)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1510, file: !417, line: 474, baseType: !23, size: 16, offset: 4096)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1510, file: !417, line: 475, baseType: !17, size: 8, offset: 4112)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1510, file: !417, line: 476, baseType: !17, size: 8, offset: 4120)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1510, file: !417, line: 481, baseType: !21, size: 32, offset: 4128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1510, file: !417, line: 486, baseType: !21, size: 32, offset: 4160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1510, file: !417, line: 491, baseType: !21, size: 32, offset: 4192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1510, file: !417, line: 496, baseType: !23, size: 16, offset: 4224)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1510, file: !417, line: 498, baseType: !23, size: 16, offset: 4240)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1510, file: !417, line: 501, baseType: !23, size: 16, offset: 4256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1510, file: !417, line: 502, baseType: !23, size: 16, offset: 4272)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1510, file: !417, line: 508, baseType: !23, size: 16, offset: 4288)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1510, file: !417, line: 513, baseType: !23, size: 16, offset: 4304)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1510, file: !417, line: 515, baseType: !23, size: 16, offset: 4320)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1510, file: !417, line: 515, baseType: !23, size: 16, offset: 4336)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1510, file: !417, line: 519, baseType: !1093, size: 128, offset: 4352)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1510, file: !417, line: 519, baseType: !1093, size: 128, offset: 4480)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1510, file: !417, line: 520, baseType: !48, size: 128, offset: 4608)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1510, file: !417, line: 523, baseType: !59, size: 128, offset: 4736)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1510, file: !417, line: 524, baseType: !23, size: 16, offset: 4864)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1510, file: !417, line: 527, baseType: !23, size: 16, offset: 4880)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1510, file: !417, line: 532, baseType: !45, size: 32, offset: 4896)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1510, file: !417, line: 532, baseType: !45, size: 32, offset: 4928)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1510, file: !417, line: 534, baseType: !45, size: 32, offset: 4960)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1510, file: !417, line: 538, baseType: !45, size: 32, offset: 4992)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1510, file: !417, line: 542, baseType: !21, size: 32, offset: 5024)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1510, file: !417, line: 545, baseType: !45, size: 32, offset: 5056)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1510, file: !417, line: 545, baseType: !45, size: 32, offset: 5088)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1510, file: !417, line: 545, baseType: !45, size: 32, offset: 5120)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1510, file: !417, line: 548, baseType: !45, size: 32, offset: 5152)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1510, file: !417, line: 551, baseType: !23, size: 16, offset: 5184)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1510, file: !417, line: 551, baseType: !23, size: 16, offset: 5200)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1510, file: !417, line: 551, baseType: !23, size: 16, offset: 5216)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1510, file: !417, line: 551, baseType: !23, size: 16, offset: 5232)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1510, file: !417, line: 552, baseType: !23, size: 16, offset: 5248)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1510, file: !417, line: 552, baseType: !23, size: 16, offset: 5264)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1510, file: !417, line: 553, baseType: !45, size: 32, offset: 5280)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1510, file: !417, line: 553, baseType: !45, size: 32, offset: 5312)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1510, file: !417, line: 554, baseType: !23, size: 16, offset: 5344)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1510, file: !417, line: 554, baseType: !23, size: 16, offset: 5360)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1510, file: !417, line: 555, baseType: !45, size: 32, offset: 5376)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1510, file: !417, line: 555, baseType: !45, size: 32, offset: 5408)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1510, file: !417, line: 558, baseType: !110, size: 8192, offset: 5440)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1510, file: !417, line: 561, baseType: !21, size: 32, offset: 13632)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1510, file: !417, line: 562, baseType: !23, size: 16, offset: 13664)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1510, file: !417, line: 562, baseType: !23, size: 16, offset: 13680)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1510, file: !417, line: 565, baseType: !1740, size: 6144, offset: 13696)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 6144, elements: !1741)
!1741 = !{!1742}
!1742 = !DISubrange(count: 768)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1510, file: !417, line: 568, baseType: !270, size: 128, offset: 19840)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1510, file: !417, line: 569, baseType: !270, size: 128, offset: 19968)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1510, file: !417, line: 572, baseType: !17, size: 8, offset: 20096)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1510, file: !417, line: 573, baseType: !17, size: 8, offset: 20104)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1510, file: !417, line: 574, baseType: !17, size: 8, offset: 20112)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1510, file: !417, line: 575, baseType: !1298, size: 40, offset: 20120)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1510, file: !417, line: 578, baseType: !21, size: 32, offset: 20160)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1510, file: !417, line: 579, baseType: !23, size: 16, offset: 20192)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1510, file: !417, line: 580, baseType: !23, size: 16, offset: 20208)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1510, file: !417, line: 581, baseType: !45, size: 32, offset: 20224)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1510, file: !417, line: 582, baseType: !45, size: 32, offset: 20256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1510, file: !417, line: 585, baseType: !23, size: 16, offset: 20288)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1510, file: !417, line: 585, baseType: !23, size: 16, offset: 20304)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1510, file: !417, line: 586, baseType: !45, size: 32, offset: 20320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1510, file: !417, line: 589, baseType: !23, size: 16, offset: 20352)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1510, file: !417, line: 589, baseType: !23, size: 16, offset: 20368)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1510, file: !417, line: 590, baseType: !21, size: 32, offset: 20384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1510, file: !417, line: 593, baseType: !23, size: 16, offset: 20416)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1510, file: !417, line: 593, baseType: !23, size: 16, offset: 20432)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1510, file: !417, line: 594, baseType: !23, size: 16, offset: 20448)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1510, file: !417, line: 594, baseType: !23, size: 16, offset: 20464)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1510, file: !417, line: 595, baseType: !45, size: 32, offset: 20480)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1510, file: !417, line: 596, baseType: !45, size: 32, offset: 20512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1510, file: !417, line: 597, baseType: !1767, size: 64, offset: 20544)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1769, line: 44, flags: DIFlagFwdDecl)
!1769 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1510, file: !417, line: 600, baseType: !21, size: 32, offset: 20608)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1510, file: !417, line: 601, baseType: !45, size: 32, offset: 20640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1510, file: !417, line: 604, baseType: !1773, size: 256, offset: 20672)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 256, elements: !302)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1510, file: !417, line: 607, baseType: !1775, size: 10880, offset: 20928)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !417, line: 364, size: 10880, elements: !1776)
!1776 = !{!1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1775, file: !417, line: 365, baseType: !1513, size: 1984)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1775, file: !417, line: 367, baseType: !110, size: 8192, offset: 1984)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1775, file: !417, line: 369, baseType: !23, size: 16, offset: 10176)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1775, file: !417, line: 369, baseType: !23, size: 16, offset: 10192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1775, file: !417, line: 370, baseType: !23, size: 16, offset: 10208)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1775, file: !417, line: 370, baseType: !23, size: 16, offset: 10224)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1775, file: !417, line: 372, baseType: !45, size: 32, offset: 10240)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1775, file: !417, line: 373, baseType: !45, size: 32, offset: 10272)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1775, file: !417, line: 375, baseType: !1428, size: 24, offset: 10304)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1775, file: !417, line: 376, baseType: !17, size: 8, offset: 10328)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1775, file: !417, line: 378, baseType: !17, size: 8, offset: 10336)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1775, file: !417, line: 379, baseType: !1428, size: 24, offset: 10344)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1775, file: !417, line: 381, baseType: !138, size: 512, offset: 10368)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1510, file: !417, line: 609, baseType: !21, size: 32, offset: 31808)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1510, file: !417, line: 610, baseType: !21, size: 32, offset: 31840)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !572, file: !417, line: 1252, baseType: !1793, size: 256, offset: 34112)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !417, line: 158, size: 256, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1793, file: !417, line: 159, baseType: !21, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1793, file: !417, line: 160, baseType: !45, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1793, file: !417, line: 161, baseType: !45, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1793, file: !417, line: 162, baseType: !45, size: 32, offset: 96)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1793, file: !417, line: 163, baseType: !21, size: 32, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1793, file: !417, line: 164, baseType: !23, size: 16, offset: 160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1793, file: !417, line: 165, baseType: !23, size: 16, offset: 176)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1793, file: !417, line: 166, baseType: !45, size: 32, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1793, file: !417, line: 167, baseType: !45, size: 32, offset: 224)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !572, file: !417, line: 1254, baseType: !59, size: 128, offset: 34368)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !572, file: !417, line: 1255, baseType: !59, size: 128, offset: 34496)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !572, file: !417, line: 1257, baseType: !64, size: 64, offset: 34624)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !572, file: !417, line: 1258, baseType: !64, size: 64, offset: 34688)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !572, file: !417, line: 1259, baseType: !64, size: 64, offset: 34752)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !572, file: !417, line: 1260, baseType: !64, size: 64, offset: 34816)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !572, file: !417, line: 1262, baseType: !64, size: 64, offset: 34880)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !572, file: !417, line: 1265, baseType: !1812, size: 64, offset: 34944)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !417, line: 1265, flags: DIFlagFwdDecl)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !572, file: !417, line: 1266, baseType: !23, size: 16, offset: 35008)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !572, file: !417, line: 1267, baseType: !23, size: 16, offset: 35024)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !572, file: !417, line: 1270, baseType: !21, size: 32, offset: 35040)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !572, file: !417, line: 1271, baseType: !59, size: 128, offset: 35072)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !572, file: !417, line: 1274, baseType: !1819, size: 128, offset: 35200)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !417, line: 650, size: 128, elements: !1820)
!1820 = !{!1821, !1822, !1823, !1824, !1825}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1819, file: !417, line: 651, baseType: !188, size: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1819, file: !417, line: 652, baseType: !17, size: 8, offset: 96)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1819, file: !417, line: 652, baseType: !17, size: 8, offset: 104)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1819, file: !417, line: 652, baseType: !17, size: 8, offset: 112)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1819, file: !417, line: 652, baseType: !17, size: 8, offset: 120)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !572, file: !417, line: 1275, baseType: !1827, size: 1472, offset: 35328)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !417, line: 676, size: 1472, elements: !1828)
!1828 = !{!1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1841, !1851, !1852, !1853, !1854, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1827, file: !417, line: 679, baseType: !1819, size: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1827, file: !417, line: 680, baseType: !23, size: 16, offset: 128)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1827, file: !417, line: 680, baseType: !23, size: 16, offset: 144)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1827, file: !417, line: 680, baseType: !23, size: 16, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1827, file: !417, line: 680, baseType: !23, size: 16, offset: 176)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1827, file: !417, line: 681, baseType: !23, size: 16, offset: 192)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1827, file: !417, line: 681, baseType: !23, size: 16, offset: 208)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1827, file: !417, line: 681, baseType: !23, size: 16, offset: 224)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1827, file: !417, line: 681, baseType: !23, size: 16, offset: 240)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1827, file: !417, line: 682, baseType: !23, size: 16, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1827, file: !417, line: 682, baseType: !1840, size: 48, offset: 272)
!1840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 48, elements: !189)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1827, file: !417, line: 685, baseType: !1842, size: 192, offset: 320)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !417, line: 633, size: 192, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1842, file: !417, line: 634, baseType: !23, size: 16)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1842, file: !417, line: 634, baseType: !23, size: 16, offset: 16)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1842, file: !417, line: 635, baseType: !23, size: 16, offset: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1842, file: !417, line: 635, baseType: !23, size: 16, offset: 48)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1842, file: !417, line: 636, baseType: !45, size: 32, offset: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1842, file: !417, line: 636, baseType: !45, size: 32, offset: 96)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1842, file: !417, line: 637, baseType: !1767, size: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1827, file: !417, line: 686, baseType: !23, size: 16, offset: 512)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1827, file: !417, line: 686, baseType: !23, size: 16, offset: 528)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1827, file: !417, line: 687, baseType: !45, size: 32, offset: 544)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1827, file: !417, line: 688, baseType: !1855, size: 448, offset: 576)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !417, line: 674, baseType: !1856)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !417, line: 659, size: 448, elements: !1857)
!1857 = !{!1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1856, file: !417, line: 660, baseType: !45, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1856, file: !417, line: 661, baseType: !45, size: 32, offset: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1856, file: !417, line: 662, baseType: !45, size: 32, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1856, file: !417, line: 663, baseType: !45, size: 32, offset: 96)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1856, file: !417, line: 664, baseType: !45, size: 32, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1856, file: !417, line: 665, baseType: !45, size: 32, offset: 160)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1856, file: !417, line: 666, baseType: !45, size: 32, offset: 192)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1856, file: !417, line: 667, baseType: !45, size: 32, offset: 224)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1856, file: !417, line: 668, baseType: !45, size: 32, offset: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1856, file: !417, line: 669, baseType: !45, size: 32, offset: 288)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1856, file: !417, line: 670, baseType: !21, size: 32, offset: 320)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1856, file: !417, line: 671, baseType: !45, size: 32, offset: 352)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1856, file: !417, line: 672, baseType: !45, size: 32, offset: 384)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1856, file: !417, line: 673, baseType: !23, size: 16, offset: 416)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1856, file: !417, line: 673, baseType: !23, size: 16, offset: 432)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1827, file: !417, line: 692, baseType: !45, size: 32, offset: 1024)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1827, file: !417, line: 697, baseType: !45, size: 32, offset: 1056)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1827, file: !417, line: 703, baseType: !21, size: 32, offset: 1088)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1827, file: !417, line: 704, baseType: !23, size: 16, offset: 1120)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1827, file: !417, line: 704, baseType: !23, size: 16, offset: 1136)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1827, file: !417, line: 705, baseType: !23, size: 16, offset: 1152)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1827, file: !417, line: 706, baseType: !23, size: 16, offset: 1168)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1827, file: !417, line: 707, baseType: !23, size: 16, offset: 1184)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1827, file: !417, line: 708, baseType: !23, size: 16, offset: 1200)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1827, file: !417, line: 709, baseType: !23, size: 16, offset: 1216)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1827, file: !417, line: 709, baseType: !23, size: 16, offset: 1232)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1827, file: !417, line: 709, baseType: !23, size: 16, offset: 1248)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1827, file: !417, line: 709, baseType: !23, size: 16, offset: 1264)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1827, file: !417, line: 710, baseType: !23, size: 16, offset: 1280)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1827, file: !417, line: 711, baseType: !23, size: 16, offset: 1296)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1827, file: !417, line: 712, baseType: !45, size: 32, offset: 1312)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1827, file: !417, line: 713, baseType: !45, size: 32, offset: 1344)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1827, file: !417, line: 713, baseType: !45, size: 32, offset: 1376)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1827, file: !417, line: 713, baseType: !45, size: 32, offset: 1408)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1827, file: !417, line: 713, baseType: !45, size: 32, offset: 1440)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !572, file: !417, line: 1278, baseType: !1894, size: 64, offset: 36800)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !417, line: 1197, size: 64, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1894, file: !417, line: 1199, baseType: !45, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1894, file: !417, line: 1200, baseType: !17, size: 8, offset: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1894, file: !417, line: 1201, baseType: !17, size: 8, offset: 40)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1894, file: !417, line: 1202, baseType: !23, size: 16, offset: 48)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !572, file: !417, line: 1281, baseType: !415, size: 64, offset: 36864)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !572, file: !417, line: 1284, baseType: !1902, size: 192, offset: 36928)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !417, line: 1208, size: 192, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1902, file: !417, line: 1209, baseType: !188, size: 96)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1902, file: !417, line: 1210, baseType: !21, size: 32, offset: 96)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1902, file: !417, line: 1210, baseType: !21, size: 32, offset: 128)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1902, file: !417, line: 1210, baseType: !21, size: 32, offset: 160)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !572, file: !417, line: 1287, baseType: !1909, size: 64, offset: 37120)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !417, line: 62, flags: DIFlagFwdDecl)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !572, file: !417, line: 1289, baseType: !1912, size: 64, offset: 37184)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1913, line: 27, baseType: !1914)
!1913 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1915, line: 45, baseType: !1916)
!1915 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1916 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !572, file: !417, line: 1290, baseType: !1912, size: 64, offset: 37248)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !572, file: !417, line: 1293, baseType: !1533, size: 1280, offset: 37312)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !572, file: !417, line: 1294, baseType: !1583, size: 512, offset: 38592)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !572, file: !417, line: 1295, baseType: !1360, size: 512, offset: 39104)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !572, file: !417, line: 1298, baseType: !1922, size: 64, offset: 39616)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !417, line: 1298, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !560, file: !556, line: 109, baseType: !444, size: 64, offset: 832)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "fss", scope: !555, file: !556, line: 732, baseType: !549, size: 64, offset: 896)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !555, file: !556, line: 733, baseType: !1927, size: 64, offset: 960)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !556, line: 564, flags: DIFlagFwdDecl)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !550, file: !551, line: 52, baseType: !21, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !550, file: !551, line: 53, baseType: !21, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !550, file: !551, line: 55, baseType: !23, size: 16, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "show_advancedoptions", scope: !550, file: !551, line: 57, baseType: !23, size: 16, offset: 144)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "resolutionxyz", scope: !550, file: !551, line: 61, baseType: !23, size: 16, offset: 160)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "previewresxyz", scope: !550, file: !551, line: 62, baseType: !23, size: 16, offset: 176)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "realsize", scope: !550, file: !551, line: 64, baseType: !45, size: 32, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "guiDisplayMode", scope: !550, file: !551, line: 66, baseType: !23, size: 16, offset: 224)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "renderDisplayMode", scope: !550, file: !551, line: 67, baseType: !23, size: 16, offset: 240)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "viscosityValue", scope: !550, file: !551, line: 70, baseType: !45, size: 32, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "viscosityMode", scope: !550, file: !551, line: 71, baseType: !23, size: 16, offset: 288)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "viscosityExponent", scope: !550, file: !551, line: 72, baseType: !23, size: 16, offset: 304)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !550, file: !551, line: 74, baseType: !188, size: 96, offset: 320)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "animStart", scope: !550, file: !551, line: 76, baseType: !45, size: 32, offset: 416)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "animEnd", scope: !550, file: !551, line: 76, baseType: !45, size: 32, offset: 448)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "bakeStart", scope: !550, file: !551, line: 78, baseType: !21, size: 32, offset: 480)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "bakeEnd", scope: !550, file: !551, line: 78, baseType: !21, size: 32, offset: 512)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "frameOffset", scope: !550, file: !551, line: 80, baseType: !21, size: 32, offset: 544)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !550, file: !551, line: 81, baseType: !21, size: 32, offset: 576)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "gstar", scope: !550, file: !551, line: 83, baseType: !45, size: 32, offset: 608)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "maxRefine", scope: !550, file: !551, line: 85, baseType: !21, size: 32, offset: 640)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "iniVelx", scope: !550, file: !551, line: 89, baseType: !45, size: 32, offset: 672)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "iniVely", scope: !550, file: !551, line: 89, baseType: !45, size: 32, offset: 704)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "iniVelz", scope: !550, file: !551, line: 89, baseType: !45, size: 32, offset: 736)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "orgMesh", scope: !550, file: !551, line: 92, baseType: !1954, size: 64, offset: 768)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !1956, line: 58, size: 11008, elements: !1957)
!1956 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1957 = !{!1958, !1959, !1960, !1961, !1962, !1965, !1966, !1972, !1981, !1991, !1997, !2003, !2011, !2022, !2035, !2048, !2056, !2065, !2066, !2074, !2075, !2078, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1955, file: !1956, line: 59, baseType: !91, size: 960)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1955, file: !1956, line: 60, baseType: !153, size: 64, offset: 960)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1955, file: !1956, line: 62, baseType: !347, size: 64, offset: 1024)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1955, file: !1956, line: 64, baseType: !344, size: 64, offset: 1088)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1955, file: !1956, line: 65, baseType: !1963, size: 64, offset: 1152)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !379, line: 45, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1955, file: !1956, line: 66, baseType: !442, size: 64, offset: 1216)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !1955, file: !1956, line: 67, baseType: !1967, size: 64, offset: 1280)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !1252, line: 154, size: 64, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1968, file: !1252, line: 155, baseType: !21, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1968, file: !1252, line: 156, baseType: !21, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !1955, file: !1956, line: 71, baseType: !1973, size: 64, offset: 1344)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 64)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !1252, line: 79, size: 96, elements: !1975)
!1975 = !{!1976, !1977, !1978, !1979, !1980}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1974, file: !1252, line: 81, baseType: !21, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1974, file: !1252, line: 82, baseType: !21, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1974, file: !1252, line: 83, baseType: !23, size: 16, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1974, file: !1252, line: 84, baseType: !17, size: 8, offset: 80)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1974, file: !1252, line: 84, baseType: !17, size: 8, offset: 88)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !1955, file: !1956, line: 72, baseType: !1982, size: 64, offset: 1408)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !1252, line: 93, size: 128, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988, !1989, !1990}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1983, file: !1252, line: 94, baseType: !1313, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1983, file: !1252, line: 95, baseType: !17, size: 8, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1983, file: !1252, line: 95, baseType: !17, size: 8, offset: 72)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1983, file: !1252, line: 96, baseType: !23, size: 16, offset: 80)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1983, file: !1252, line: 96, baseType: !23, size: 16, offset: 96)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1983, file: !1252, line: 96, baseType: !23, size: 16, offset: 112)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !1955, file: !1956, line: 73, baseType: !1992, size: 64, offset: 1472)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !1252, line: 88, size: 64, elements: !1994)
!1994 = !{!1995, !1996}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1993, file: !1252, line: 89, baseType: !79, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1993, file: !1252, line: 90, baseType: !79, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !1955, file: !1956, line: 74, baseType: !1998, size: 64, offset: 1536)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !1252, line: 109, size: 96, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1999, file: !1252, line: 110, baseType: !1143, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1999, file: !1252, line: 111, baseType: !21, size: 32, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !1955, file: !1956, line: 75, baseType: !2004, size: 64, offset: 1600)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !1252, line: 129, size: 32, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2005, file: !1252, line: 130, baseType: !17, size: 8)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2005, file: !1252, line: 130, baseType: !17, size: 8, offset: 8)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2005, file: !1252, line: 130, baseType: !17, size: 8, offset: 16)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2005, file: !1252, line: 130, baseType: !17, size: 8, offset: 24)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !1955, file: !1956, line: 80, baseType: !2012, size: 64, offset: 1664)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !1252, line: 42, size: 160, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2013, file: !1252, line: 43, baseType: !79, size: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2013, file: !1252, line: 43, baseType: !79, size: 32, offset: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2013, file: !1252, line: 43, baseType: !79, size: 32, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2013, file: !1252, line: 43, baseType: !79, size: 32, offset: 96)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2013, file: !1252, line: 44, baseType: !23, size: 16, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !2013, file: !1252, line: 45, baseType: !17, size: 8, offset: 144)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2013, file: !1252, line: 45, baseType: !17, size: 8, offset: 152)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !1955, file: !1956, line: 81, baseType: !2023, size: 64, offset: 1728)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !1252, line: 160, size: 384, elements: !2025)
!2025 = !{!2026, !2029, !2030, !2031, !2032, !2033, !2034}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2024, file: !1252, line: 161, baseType: !2027, size: 256)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 256, elements: !2028)
!2028 = !{!272, !658}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2024, file: !1252, line: 162, baseType: !1313, size: 64, offset: 256)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2024, file: !1252, line: 163, baseType: !17, size: 8, offset: 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2024, file: !1252, line: 163, baseType: !17, size: 8, offset: 328)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2024, file: !1252, line: 164, baseType: !23, size: 16, offset: 336)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2024, file: !1252, line: 164, baseType: !23, size: 16, offset: 352)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2024, file: !1252, line: 164, baseType: !23, size: 16, offset: 368)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !1955, file: !1956, line: 82, baseType: !2036, size: 64, offset: 1792)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !1956, line: 136, size: 512, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2043, !2044, !2045, !2046, !2047}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2037, file: !1956, line: 137, baseType: !64, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2037, file: !1956, line: 138, baseType: !2027, size: 256, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2037, file: !1956, line: 139, baseType: !2042, size: 128, offset: 320)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 128, elements: !271)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2037, file: !1956, line: 140, baseType: !17, size: 8, offset: 448)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2037, file: !1956, line: 140, baseType: !17, size: 8, offset: 456)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2037, file: !1956, line: 141, baseType: !23, size: 16, offset: 464)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2037, file: !1956, line: 141, baseType: !23, size: 16, offset: 480)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2037, file: !1956, line: 141, baseType: !23, size: 16, offset: 496)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !1955, file: !1956, line: 83, baseType: !2049, size: 64, offset: 1856)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !1252, line: 65, size: 160, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2050, file: !1252, line: 66, baseType: !188, size: 96)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2050, file: !1252, line: 67, baseType: !1840, size: 48, offset: 96)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2050, file: !1252, line: 68, baseType: !17, size: 8, offset: 144)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2050, file: !1252, line: 68, baseType: !17, size: 8, offset: 152)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !1955, file: !1956, line: 84, baseType: !2057, size: 64, offset: 1920)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !1252, line: 48, size: 96, elements: !2059)
!2059 = !{!2060, !2061, !2062, !2063, !2064}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2058, file: !1252, line: 49, baseType: !79, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2058, file: !1252, line: 49, baseType: !79, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !2058, file: !1252, line: 50, baseType: !17, size: 8, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2058, file: !1252, line: 50, baseType: !17, size: 8, offset: 72)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2058, file: !1252, line: 51, baseType: !23, size: 16, offset: 80)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !1955, file: !1956, line: 85, baseType: !1250, size: 64, offset: 1984)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !1955, file: !1956, line: 89, baseType: !2067, size: 64, offset: 2048)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !1252, line: 74, size: 32, elements: !2069)
!2069 = !{!2070, !2071, !2072, !2073}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2068, file: !1252, line: 75, baseType: !17, size: 8)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2068, file: !1252, line: 75, baseType: !17, size: 8, offset: 8)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2068, file: !1252, line: 75, baseType: !17, size: 8, offset: 16)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2068, file: !1252, line: 75, baseType: !17, size: 8, offset: 24)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !1955, file: !1956, line: 90, baseType: !1954, size: 64, offset: 2112)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !1955, file: !1956, line: 93, baseType: !2076, size: 64, offset: 2176)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !1956, line: 93, flags: DIFlagFwdDecl)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1955, file: !1956, line: 95, baseType: !2079, size: 1600, offset: 2240)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !2080, line: 64, size: 1600, elements: !2081)
!2080 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2081 = !{!2082, !2097, !2101, !2102, !2103, !2104, !2107}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2079, file: !2080, line: 65, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !2080, line: 53, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !2080, line: 42, size: 832, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2085, file: !2080, line: 43, baseType: !21, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2085, file: !2080, line: 44, baseType: !21, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2085, file: !2080, line: 45, baseType: !21, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2085, file: !2080, line: 46, baseType: !21, size: 32, offset: 96)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !2085, file: !2080, line: 47, baseType: !21, size: 32, offset: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !2085, file: !2080, line: 48, baseType: !21, size: 32, offset: 160)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !2085, file: !2080, line: 49, baseType: !21, size: 32, offset: 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2085, file: !2080, line: 50, baseType: !21, size: 32, offset: 224)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2085, file: !2080, line: 51, baseType: !138, size: 512, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2085, file: !2080, line: 52, baseType: !64, size: 64, offset: 768)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !2079, file: !2080, line: 66, baseType: !2098, size: 1312, offset: 64)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 1312, elements: !2099)
!2099 = !{!2100}
!2100 = !DISubrange(count: 41)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !2079, file: !2080, line: 69, baseType: !21, size: 32, offset: 1376)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !2079, file: !2080, line: 69, baseType: !21, size: 32, offset: 1408)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !2079, file: !2080, line: 70, baseType: !21, size: 32, offset: 1440)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2079, file: !2080, line: 71, baseType: !2105, size: 64, offset: 1472)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !2080, line: 71, flags: DIFlagFwdDecl)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !2079, file: !2080, line: 72, baseType: !2108, size: 64, offset: 1536)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !2080, line: 59, baseType: !2110)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !2080, line: 57, size: 8192, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !2110, file: !2080, line: 58, baseType: !110, size: 8192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1955, file: !1956, line: 95, baseType: !2079, size: 1600, offset: 3840)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !1955, file: !1956, line: 95, baseType: !2079, size: 1600, offset: 5440)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1955, file: !1956, line: 98, baseType: !2079, size: 1600, offset: 7040)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1955, file: !1956, line: 98, baseType: !2079, size: 1600, offset: 8640)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1955, file: !1956, line: 101, baseType: !21, size: 32, offset: 10240)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1955, file: !1956, line: 101, baseType: !21, size: 32, offset: 10272)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1955, file: !1956, line: 101, baseType: !21, size: 32, offset: 10304)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !1955, file: !1956, line: 101, baseType: !21, size: 32, offset: 10336)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !1955, file: !1956, line: 104, baseType: !21, size: 32, offset: 10368)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1955, file: !1956, line: 104, baseType: !21, size: 32, offset: 10400)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1955, file: !1956, line: 111, baseType: !21, size: 32, offset: 10432)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1955, file: !1956, line: 114, baseType: !188, size: 96, offset: 10464)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1955, file: !1956, line: 115, baseType: !188, size: 96, offset: 10560)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1955, file: !1956, line: 116, baseType: !188, size: 96, offset: 10656)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !1955, file: !1956, line: 118, baseType: !21, size: 32, offset: 10752)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !1955, file: !1956, line: 119, baseType: !23, size: 16, offset: 10784)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1955, file: !1956, line: 119, baseType: !23, size: 16, offset: 10800)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1955, file: !1956, line: 120, baseType: !45, size: 32, offset: 10816)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1955, file: !1956, line: 121, baseType: !21, size: 32, offset: 10848)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1955, file: !1956, line: 124, baseType: !17, size: 8, offset: 10880)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1955, file: !1956, line: 124, baseType: !17, size: 8, offset: 10888)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !1955, file: !1956, line: 126, baseType: !17, size: 8, offset: 10896)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !1955, file: !1956, line: 126, baseType: !17, size: 8, offset: 10904)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !1955, file: !1956, line: 127, baseType: !17, size: 8, offset: 10912)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1955, file: !1956, line: 128, baseType: !17, size: 8, offset: 10920)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1955, file: !1956, line: 130, baseType: !23, size: 16, offset: 10928)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !1955, file: !1956, line: 132, baseType: !2140, size: 64, offset: 10944)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !1252, line: 233, size: 3584, elements: !2142)
!2142 = !{!2143, !2144, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2157, !2158, !2160}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2141, file: !1252, line: 234, baseType: !59, size: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !2141, file: !1252, line: 235, baseType: !2145, size: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !1252, line: 69, baseType: !2050)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 192)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 200)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 208)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 216)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 224)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !2141, file: !1252, line: 237, baseType: !28, size: 8, offset: 232)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !2141, file: !1252, line: 238, baseType: !28, size: 8, offset: 240)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2141, file: !1252, line: 238, baseType: !28, size: 8, offset: 248)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2141, file: !1252, line: 241, baseType: !2156, size: 1600, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !2080, line: 73, baseType: !2079)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !2141, file: !1252, line: 242, baseType: !2156, size: 1600, offset: 1856)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !2141, file: !1252, line: 243, baseType: !2159, size: 64, offset: 3456)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !2141, file: !1252, line: 244, baseType: !444, size: 64, offset: 3520)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "meshBB", scope: !550, file: !551, line: 94, baseType: !1954, size: 64, offset: 832)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "surfdataPath", scope: !550, file: !551, line: 98, baseType: !110, size: 8192, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "bbStart", scope: !550, file: !551, line: 102, baseType: !188, size: 96, offset: 9088)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "bbSize", scope: !550, file: !551, line: 102, baseType: !188, size: 96, offset: 9184)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !550, file: !551, line: 105, baseType: !344, size: 64, offset: 9280)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "typeFlags", scope: !550, file: !551, line: 109, baseType: !23, size: 16, offset: 9344)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "domainNovecgen", scope: !550, file: !551, line: 111, baseType: !17, size: 8, offset: 9360)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "volumeInitType", scope: !550, file: !551, line: 111, baseType: !17, size: 8, offset: 9368)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "partSlipValue", scope: !550, file: !551, line: 114, baseType: !45, size: 32, offset: 9376)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "generateTracers", scope: !550, file: !551, line: 117, baseType: !21, size: 32, offset: 9408)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "generateParticles", scope: !550, file: !551, line: 119, baseType: !45, size: 32, offset: 9440)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "surfaceSmoothing", scope: !550, file: !551, line: 121, baseType: !45, size: 32, offset: 9472)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "surfaceSubdivs", scope: !550, file: !551, line: 123, baseType: !21, size: 32, offset: 9504)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !550, file: !551, line: 124, baseType: !21, size: 32, offset: 9536)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "particleInfSize", scope: !550, file: !551, line: 127, baseType: !45, size: 32, offset: 9568)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "particleInfAlpha", scope: !550, file: !551, line: 127, baseType: !45, size: 32, offset: 9600)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "farFieldSize", scope: !550, file: !551, line: 129, baseType: !45, size: 32, offset: 9632)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "meshVelocities", scope: !550, file: !551, line: 132, baseType: !2179, size: 64, offset: 9664)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FluidVertexVelocity", file: !551, line: 45, size: 96, elements: !2181)
!2181 = !{!2182}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !2180, file: !551, line: 46, baseType: !188, size: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !550, file: !551, line: 134, baseType: !21, size: 32, offset: 9728)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "cpsTimeStart", scope: !550, file: !551, line: 137, baseType: !45, size: 32, offset: 9760)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "cpsTimeEnd", scope: !550, file: !551, line: 138, baseType: !45, size: 32, offset: 9792)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cpsQuality", scope: !550, file: !551, line: 139, baseType: !45, size: 32, offset: 9824)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "attractforceStrength", scope: !550, file: !551, line: 141, baseType: !45, size: 32, offset: 9856)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "attractforceRadius", scope: !550, file: !551, line: 142, baseType: !45, size: 32, offset: 9888)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "velocityforceStrength", scope: !550, file: !551, line: 143, baseType: !45, size: 32, offset: 9920)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "velocityforceRadius", scope: !550, file: !551, line: 144, baseType: !45, size: 32, offset: 9952)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "lastgoodframe", scope: !550, file: !551, line: 146, baseType: !21, size: 32, offset: 9984)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "animRate", scope: !550, file: !551, line: 149, baseType: !45, size: 32, offset: 10016)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !324, file: !325, line: 275, baseType: !2194, size: 64, offset: 10240)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !2196, line: 49, size: 448, elements: !2197)
!2196 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2197 = !{!2198, !2199, !2200, !2201}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !2195, file: !2196, line: 50, baseType: !59, size: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !2195, file: !2196, line: 51, baseType: !59, size: 128, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !2195, file: !2196, line: 52, baseType: !59, size: 128, offset: 256)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !2195, file: !2196, line: 53, baseType: !2202, size: 64, offset: 384)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !379, line: 65, size: 128, elements: !2204)
!2204 = !{!2205, !2213, !2214}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2203, file: !379, line: 66, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !379, line: 56, size: 320, elements: !2208)
!2208 = !{!2209, !2210, !2211, !2212}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2207, file: !379, line: 57, baseType: !270, size: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2207, file: !379, line: 58, baseType: !270, size: 128, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2207, file: !379, line: 59, baseType: !45, size: 32, offset: 256)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2207, file: !379, line: 59, baseType: !45, size: 32, offset: 288)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2203, file: !379, line: 67, baseType: !21, size: 32, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !2203, file: !379, line: 68, baseType: !45, size: 32, offset: 96)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !324, file: !325, line: 277, baseType: !2216, size: 64, offset: 10304)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !2218, line: 178, size: 13504, elements: !2219)
!2218 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2238, !2241, !2248, !2249, !2256, !2257, !2258, !2259, !2265, !2270, !2271, !2275, !2276, !2277, !2278, !2279, !2283, !2287, !2291, !2295, !2299, !2303, !2307, !2311, !2315, !2319, !2323, !2327, !2331, !2332, !2333, !2334, !2335, !2336, !2340, !2341, !2342, !2343, !2347, !2348, !2349, !2350, !2351, !2356, !2357, !2358, !2359, !2360, !2364, !2365, !2366, !2367, !2368, !2375, !2386, !2390, !2396, !2406, !2410, !2425, !2432, !2439, !2443, !2447, !2451, !2456, !2457, !2458, !2465, !2471, !2472, !2473, !2477, !2478, !2487, !2514, !2518, !2526, !2530, !2534, !2538, !2546, !2556}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !2217, file: !2218, line: 180, baseType: !2156, size: 1600)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !2217, file: !2218, line: 180, baseType: !2156, size: 1600, offset: 1600)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !2217, file: !2218, line: 180, baseType: !2156, size: 1600, offset: 3200)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !2217, file: !2218, line: 180, baseType: !2156, size: 1600, offset: 4800)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !2217, file: !2218, line: 180, baseType: !2156, size: 1600, offset: 6400)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !2217, file: !2218, line: 181, baseType: !21, size: 32, offset: 8000)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !2217, file: !2218, line: 181, baseType: !21, size: 32, offset: 8032)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !2217, file: !2218, line: 181, baseType: !21, size: 32, offset: 8064)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !2217, file: !2218, line: 181, baseType: !21, size: 32, offset: 8096)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !2217, file: !2218, line: 181, baseType: !21, size: 32, offset: 8128)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !2217, file: !2218, line: 182, baseType: !21, size: 32, offset: 8160)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !2217, file: !2218, line: 183, baseType: !21, size: 32, offset: 8192)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !2217, file: !2218, line: 184, baseType: !2233, size: 64, offset: 8256)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !2234, line: 124, baseType: !2235)
!2234 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !2237, line: 118, flags: DIFlagFwdDecl)
!2237 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !2217, file: !2218, line: 185, baseType: !2239, size: 64, offset: 8320)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !2218, line: 97, flags: DIFlagFwdDecl)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2217, file: !2218, line: 186, baseType: !2242, size: 32, offset: 8384)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !2218, line: 132, baseType: !2243)
!2243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !2218, line: 128, baseType: !79, size: 32, elements: !2244)
!2244 = !{!2245, !2246, !2247}
!2245 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!2246 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!2247 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !2217, file: !2218, line: 187, baseType: !45, size: 32, offset: 8416)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !2217, file: !2218, line: 188, baseType: !2250, size: 32, offset: 8448)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !2218, line: 175, baseType: !2251)
!2251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !2218, line: 164, baseType: !79, size: 32, elements: !2252)
!2252 = !{!2253, !2254, !2255}
!2253 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!2254 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!2255 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !2217, file: !2218, line: 189, baseType: !21, size: 32, offset: 8480)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2217, file: !2218, line: 190, baseType: !442, size: 64, offset: 8512)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !2217, file: !2218, line: 193, baseType: !17, size: 8, offset: 8576)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !2217, file: !2218, line: 196, baseType: !2260, size: 64, offset: 8640)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{null, !2263}
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !2218, line: 177, baseType: !2217)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !2217, file: !2218, line: 199, baseType: !2266, size: 64, offset: 8704)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2263, !2269}
!2269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !2217, file: !2218, line: 202, baseType: !2260, size: 64, offset: 8768)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !2217, file: !2218, line: 207, baseType: !2272, size: 64, offset: 8832)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!21, !2263}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !2217, file: !2218, line: 208, baseType: !2272, size: 64, offset: 8896)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !2217, file: !2218, line: 209, baseType: !2272, size: 64, offset: 8960)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !2217, file: !2218, line: 210, baseType: !2272, size: 64, offset: 9024)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !2217, file: !2218, line: 211, baseType: !2272, size: 64, offset: 9088)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !2217, file: !2218, line: 218, baseType: !2280, size: 64, offset: 9152)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DISubroutineType(types: !2282)
!2282 = !{null, !2263, !21, !2049}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !2217, file: !2218, line: 219, baseType: !2284, size: 64, offset: 9216)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{null, !2263, !21, !2057}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !2217, file: !2218, line: 220, baseType: !2288, size: 64, offset: 9280)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{null, !2263, !21, !2012}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !2217, file: !2218, line: 227, baseType: !2292, size: 64, offset: 9344)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!2049, !2263}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !2217, file: !2218, line: 228, baseType: !2296, size: 64, offset: 9408)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!2057, !2263}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !2217, file: !2218, line: 229, baseType: !2300, size: 64, offset: 9472)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!2012, !2263}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !2217, file: !2218, line: 230, baseType: !2304, size: 64, offset: 9536)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!1992, !2263}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !2217, file: !2218, line: 231, baseType: !2308, size: 64, offset: 9600)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{!1973, !2263}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !2217, file: !2218, line: 236, baseType: !2312, size: 64, offset: 9664)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DISubroutineType(types: !2314)
!2314 = !{null, !2263, !2049}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !2217, file: !2218, line: 237, baseType: !2316, size: 64, offset: 9728)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{null, !2263, !2057}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !2217, file: !2218, line: 238, baseType: !2320, size: 64, offset: 9792)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !2263, !2012}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !2217, file: !2218, line: 239, baseType: !2324, size: 64, offset: 9856)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !2263, !1992}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !2217, file: !2218, line: 240, baseType: !2328, size: 64, offset: 9920)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DISubroutineType(types: !2330)
!2330 = !{null, !2263, !1973}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !2217, file: !2218, line: 245, baseType: !2292, size: 64, offset: 9984)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !2217, file: !2218, line: 246, baseType: !2296, size: 64, offset: 10048)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !2217, file: !2218, line: 247, baseType: !2300, size: 64, offset: 10112)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !2217, file: !2218, line: 248, baseType: !2304, size: 64, offset: 10176)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !2217, file: !2218, line: 249, baseType: !2308, size: 64, offset: 10240)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !2217, file: !2218, line: 255, baseType: !2337, size: 64, offset: 10304)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DISubroutineType(types: !2339)
!2339 = !{!64, !2263, !21, !21}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !2217, file: !2218, line: 256, baseType: !2337, size: 64, offset: 10368)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !2217, file: !2218, line: 257, baseType: !2337, size: 64, offset: 10432)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !2217, file: !2218, line: 258, baseType: !2337, size: 64, offset: 10496)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !2217, file: !2218, line: 264, baseType: !2344, size: 64, offset: 10560)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!64, !2263, !21}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !2217, file: !2218, line: 265, baseType: !2344, size: 64, offset: 10624)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !2217, file: !2218, line: 266, baseType: !2344, size: 64, offset: 10688)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !2217, file: !2218, line: 267, baseType: !2344, size: 64, offset: 10752)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !2217, file: !2218, line: 268, baseType: !2344, size: 64, offset: 10816)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !2217, file: !2218, line: 272, baseType: !2352, size: 64, offset: 10880)
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{!2355, !2263}
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !2217, file: !2218, line: 273, baseType: !2352, size: 64, offset: 10944)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !2217, file: !2218, line: 274, baseType: !2352, size: 64, offset: 11008)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !2217, file: !2218, line: 275, baseType: !2352, size: 64, offset: 11072)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !2217, file: !2218, line: 276, baseType: !2352, size: 64, offset: 11136)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !2217, file: !2218, line: 279, baseType: !2361, size: 64, offset: 11200)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{null, !2263, !21, !2355, !21}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !2217, file: !2218, line: 280, baseType: !2361, size: 64, offset: 11264)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !2217, file: !2218, line: 281, baseType: !2361, size: 64, offset: 11328)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !2217, file: !2218, line: 284, baseType: !2272, size: 64, offset: 11392)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !2217, file: !2218, line: 285, baseType: !2272, size: 64, offset: 11456)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !2217, file: !2218, line: 286, baseType: !2369, size: 64, offset: 11520)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!2372, !2263}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !2218, line: 82, flags: DIFlagFwdDecl)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !2217, file: !2218, line: 287, baseType: !2376, size: 64, offset: 11584)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!2379, !2263}
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !2218, line: 120, baseType: !2381)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !2218, line: 117, size: 256, elements: !2382)
!2382 = !{!2383, !2385}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2381, file: !2218, line: 118, baseType: !2384, size: 128)
!2384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 128, elements: !271)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !2381, file: !2218, line: 119, baseType: !2384, size: 128, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !2217, file: !2218, line: 288, baseType: !2387, size: 64, offset: 11648)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!42, !2263}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !2217, file: !2218, line: 289, baseType: !2391, size: 64, offset: 11712)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DISubroutineType(types: !2393)
!2393 = !{null, !2263, !2394}
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !2218, line: 83, flags: DIFlagFwdDecl)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !2217, file: !2218, line: 290, baseType: !2397, size: 64, offset: 11776)
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = !DISubroutineType(types: !2399)
!2399 = !{!2400, !2263}
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !2218, line: 126, baseType: !2402)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !2218, line: 123, size: 32, elements: !2403)
!2403 = !{!2404, !2405}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2402, file: !2218, line: 124, baseType: !23, size: 16)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2402, file: !2218, line: 125, baseType: !17, size: 8, offset: 16)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !2217, file: !2218, line: 291, baseType: !2407, size: 64, offset: 11840)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!940, !2263}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !2217, file: !2218, line: 299, baseType: !2411, size: 64, offset: 11904)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{null, !2263, !2414, !64, !2420}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !64, !21, !2417, !2417, !2418}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2419, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !23)
!2420 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !2218, line: 162, baseType: !2421)
!2421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !2218, line: 159, baseType: !79, size: 32, elements: !2422)
!2422 = !{!2423, !2424}
!2423 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!2424 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !2217, file: !2218, line: 309, baseType: !2426, size: 64, offset: 11968)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DISubroutineType(types: !2428)
!2428 = !{null, !2263, !2429, !64}
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{null, !64, !21, !2417, !2417}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !2217, file: !2218, line: 317, baseType: !2433, size: 64, offset: 12032)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{null, !2263, !2436, !64, !2420}
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{null, !64, !21, !21, !2417, !2417}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !2217, file: !2218, line: 327, baseType: !2440, size: 64, offset: 12096)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2441 = !DISubroutineType(types: !2442)
!2442 = !{null, !2263, !2429, !64, !2420}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !2217, file: !2218, line: 337, baseType: !2444, size: 64, offset: 12160)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{null, !2263, !44, !44}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !2217, file: !2218, line: 344, baseType: !2448, size: 64, offset: 12224)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{null, !2263, !21, !44}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !2217, file: !2218, line: 347, baseType: !2452, size: 64, offset: 12288)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{null, !2263, !2455}
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !2217, file: !2218, line: 350, baseType: !2448, size: 64, offset: 12352)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !2217, file: !2218, line: 351, baseType: !2448, size: 64, offset: 12416)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !2217, file: !2218, line: 355, baseType: !2459, size: 64, offset: 12480)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DISubroutineType(types: !2461)
!2461 = !{!2462, !323, !2263}
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2464)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !2218, line: 355, flags: DIFlagFwdDecl)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !2217, file: !2218, line: 359, baseType: !2466, size: 64, offset: 12544)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!2469, !323, !2263}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2470 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !2218, line: 100, flags: DIFlagFwdDecl)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !2217, file: !2218, line: 364, baseType: !2260, size: 64, offset: 12608)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !2217, file: !2218, line: 367, baseType: !2260, size: 64, offset: 12672)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !2217, file: !2218, line: 373, baseType: !2474, size: 64, offset: 12736)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{null, !2263, !28, !28}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !2217, file: !2218, line: 376, baseType: !2260, size: 64, offset: 12800)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !2217, file: !2218, line: 385, baseType: !2479, size: 64, offset: 12864)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{null, !2263, !2482, !28, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !2218, line: 146, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!21, !21, !64}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !2217, file: !2218, line: 391, baseType: !2488, size: 64, offset: 12928)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DISubroutineType(types: !2490)
!2490 = !{null, !2263, !2491, !2503, !64, !2507}
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !2218, line: 150, baseType: !2492)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!2495, !2023, !2502, !21}
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !2218, line: 143, baseType: !2496)
!2496 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !2218, line: 134, baseType: !79, size: 32, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501}
!2498 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!2499 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!2500 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!2501 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!2502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !2218, line: 147, baseType: !2504)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!21, !64, !21, !21}
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !2218, line: 157, baseType: !2508)
!2508 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !2218, line: 152, baseType: !79, size: 32, elements: !2509)
!2509 = !{!2510, !2511, !2512, !2513}
!2510 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!2511 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!2512 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!2513 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !2217, file: !2218, line: 400, baseType: !2515, size: 64, offset: 12992)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2516, size: 64)
!2516 = !DISubroutineType(types: !2517)
!2517 = !{null, !2263, !2483}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !2217, file: !2218, line: 415, baseType: !2519, size: 64, offset: 13056)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{null, !2263, !2522, !2483, !2503, !64, !2507}
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !2218, line: 149, baseType: !2523)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!2495, !64, !21}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !2217, file: !2218, line: 425, baseType: !2527, size: 64, offset: 13120)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{null, !2263, !2522, !2503, !64, !2507}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !2217, file: !2218, line: 435, baseType: !2531, size: 64, offset: 13184)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{null, !2263, !2483, !2522, !64}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !2217, file: !2218, line: 444, baseType: !2535, size: 64, offset: 13248)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !2263, !2522, !64}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !2217, file: !2218, line: 455, baseType: !2539, size: 64, offset: 13312)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{null, !2263, !2522, !2542, !64}
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !2218, line: 148, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !64, !21, !45}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !2217, file: !2218, line: 464, baseType: !2547, size: 64, offset: 13376)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DISubroutineType(types: !2549)
!2549 = !{null, !2263, !2550, !2553, !64}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{null, !64, !21, !64}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!28, !64, !21}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2217, file: !2218, line: 470, baseType: !2260, size: 64, offset: 13440)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !324, file: !325, line: 277, baseType: !2216, size: 64, offset: 10368)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !324, file: !325, line: 278, baseType: !1912, size: 64, offset: 10432)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !324, file: !325, line: 279, baseType: !1912, size: 64, offset: 10496)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !324, file: !325, line: 280, baseType: !79, size: 32, offset: 10560)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !324, file: !325, line: 281, baseType: !79, size: 32, offset: 10592)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !324, file: !325, line: 283, baseType: !59, size: 128, offset: 10624)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !324, file: !325, line: 284, baseType: !59, size: 128, offset: 10752)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !324, file: !325, line: 285, baseType: !2565, size: 64, offset: 10880)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !324, file: !325, line: 287, baseType: !2567, size: 64, offset: 10944)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !325, line: 59, flags: DIFlagFwdDecl)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !324, file: !325, line: 288, baseType: !2570, size: 64, offset: 11008)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !325, line: 288, flags: DIFlagFwdDecl)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !324, file: !325, line: 290, baseType: !1143, size: 64, offset: 11072)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !324, file: !325, line: 291, baseType: !2574, size: 64, offset: 11136)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1315, line: 65, baseType: !2576)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1315, line: 50, size: 320, elements: !2577)
!2577 = !{!2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2576, file: !1315, line: 51, baseType: !571, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2576, file: !1315, line: 53, baseType: !21, size: 32, offset: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2576, file: !1315, line: 54, baseType: !21, size: 32, offset: 96)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2576, file: !1315, line: 55, baseType: !21, size: 32, offset: 128)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2576, file: !1315, line: 55, baseType: !21, size: 32, offset: 160)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2576, file: !1315, line: 56, baseType: !17, size: 8, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !2576, file: !1315, line: 56, baseType: !17, size: 8, offset: 200)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2576, file: !1315, line: 57, baseType: !17, size: 8, offset: 208)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2576, file: !1315, line: 57, baseType: !17, size: 8, offset: 216)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !2576, file: !1315, line: 59, baseType: !23, size: 16, offset: 224)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !2576, file: !1315, line: 59, baseType: !23, size: 16, offset: 240)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2576, file: !1315, line: 59, baseType: !23, size: 16, offset: 256)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2576, file: !1315, line: 61, baseType: !23, size: 16, offset: 272)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2576, file: !1315, line: 63, baseType: !21, size: 32, offset: 288)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !324, file: !325, line: 293, baseType: !59, size: 128, offset: 11200)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !324, file: !325, line: 294, baseType: !2594, size: 64, offset: 11328)
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !325, line: 113, baseType: !2596)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !325, line: 108, size: 256, elements: !2597)
!2597 = !{!2598, !2600, !2601, !2602, !2603}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2596, file: !325, line: 109, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2596, file: !325, line: 109, baseType: !2599, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2596, file: !325, line: 110, baseType: !323, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2596, file: !325, line: 111, baseType: !21, size: 32, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2596, file: !325, line: 112, baseType: !45, size: 32, offset: 224)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !316, file: !280, line: 61, baseType: !2605, size: 64, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2606, size: 64)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !280, line: 202, size: 3328, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2688, !2689, !2718, !2738, !2746, !2747}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2606, file: !280, line: 203, baseType: !91, size: 960)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2606, file: !280, line: 204, baseType: !153, size: 64, offset: 960)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2606, file: !280, line: 206, baseType: !45, size: 32, offset: 1024)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2606, file: !280, line: 206, baseType: !45, size: 32, offset: 1056)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1088)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1120)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1152)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1184)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1216)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2606, file: !280, line: 207, baseType: !45, size: 32, offset: 1248)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2606, file: !280, line: 208, baseType: !45, size: 32, offset: 1280)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2606, file: !280, line: 208, baseType: !45, size: 32, offset: 1312)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2606, file: !280, line: 211, baseType: !45, size: 32, offset: 1344)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2606, file: !280, line: 211, baseType: !45, size: 32, offset: 1376)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2606, file: !280, line: 211, baseType: !45, size: 32, offset: 1408)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2606, file: !280, line: 211, baseType: !45, size: 32, offset: 1440)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2606, file: !280, line: 211, baseType: !45, size: 32, offset: 1472)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2606, file: !280, line: 214, baseType: !45, size: 32, offset: 1504)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2606, file: !280, line: 214, baseType: !45, size: 32, offset: 1536)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2606, file: !280, line: 217, baseType: !45, size: 32, offset: 1568)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2606, file: !280, line: 218, baseType: !45, size: 32, offset: 1600)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2606, file: !280, line: 219, baseType: !45, size: 32, offset: 1632)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2606, file: !280, line: 220, baseType: !45, size: 32, offset: 1664)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2606, file: !280, line: 221, baseType: !45, size: 32, offset: 1696)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2606, file: !280, line: 222, baseType: !23, size: 16, offset: 1728)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2606, file: !280, line: 222, baseType: !23, size: 16, offset: 1744)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2606, file: !280, line: 224, baseType: !23, size: 16, offset: 1760)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2606, file: !280, line: 224, baseType: !23, size: 16, offset: 1776)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2606, file: !280, line: 227, baseType: !23, size: 16, offset: 1792)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2606, file: !280, line: 227, baseType: !23, size: 16, offset: 1808)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2606, file: !280, line: 229, baseType: !23, size: 16, offset: 1824)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2606, file: !280, line: 229, baseType: !23, size: 16, offset: 1840)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2606, file: !280, line: 230, baseType: !23, size: 16, offset: 1856)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2606, file: !280, line: 230, baseType: !23, size: 16, offset: 1872)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2606, file: !280, line: 232, baseType: !45, size: 32, offset: 1888)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2606, file: !280, line: 232, baseType: !45, size: 32, offset: 1920)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2606, file: !280, line: 232, baseType: !45, size: 32, offset: 1952)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2606, file: !280, line: 232, baseType: !45, size: 32, offset: 1984)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2606, file: !280, line: 233, baseType: !21, size: 32, offset: 2016)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2606, file: !280, line: 234, baseType: !21, size: 32, offset: 2048)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2606, file: !280, line: 235, baseType: !23, size: 16, offset: 2080)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2606, file: !280, line: 235, baseType: !23, size: 16, offset: 2096)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2606, file: !280, line: 236, baseType: !23, size: 16, offset: 2112)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2606, file: !280, line: 239, baseType: !23, size: 16, offset: 2128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2606, file: !280, line: 240, baseType: !21, size: 32, offset: 2144)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2606, file: !280, line: 241, baseType: !21, size: 32, offset: 2176)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2606, file: !280, line: 241, baseType: !21, size: 32, offset: 2208)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2606, file: !280, line: 241, baseType: !21, size: 32, offset: 2240)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2606, file: !280, line: 243, baseType: !45, size: 32, offset: 2272)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2606, file: !280, line: 243, baseType: !45, size: 32, offset: 2304)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2606, file: !280, line: 244, baseType: !45, size: 32, offset: 2336)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2606, file: !280, line: 246, baseType: !2576, size: 320, offset: 2368)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2606, file: !280, line: 248, baseType: !676, size: 64, offset: 2688)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2606, file: !280, line: 249, baseType: !344, size: 64, offset: 2752)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2606, file: !280, line: 250, baseType: !1313, size: 64, offset: 2816)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2606, file: !280, line: 251, baseType: !278, size: 64, offset: 2880)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2606, file: !280, line: 252, baseType: !2665, size: 64, offset: 2944)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !280, line: 122, size: 1600, elements: !2667)
!2667 = !{!2668, !2669, !2670, !2672, !2673, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2666, file: !280, line: 123, baseType: !323, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2666, file: !280, line: 124, baseType: !1313, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2666, file: !280, line: 125, baseType: !2671, size: 384, offset: 128)
!2671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !918, size: 384, elements: !1530)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2666, file: !280, line: 126, baseType: !462, size: 512, offset: 512)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2666, file: !280, line: 127, baseType: !2674, size: 288, offset: 1024)
!2674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 288, elements: !2675)
!2675 = !{!190, !190}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2666, file: !280, line: 128, baseType: !23, size: 16, offset: 1312)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2666, file: !280, line: 128, baseType: !23, size: 16, offset: 1328)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2666, file: !280, line: 129, baseType: !45, size: 32, offset: 1344)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2666, file: !280, line: 129, baseType: !45, size: 32, offset: 1376)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2666, file: !280, line: 130, baseType: !45, size: 32, offset: 1408)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2666, file: !280, line: 131, baseType: !79, size: 32, offset: 1440)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2666, file: !280, line: 132, baseType: !23, size: 16, offset: 1472)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2666, file: !280, line: 132, baseType: !23, size: 16, offset: 1488)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2666, file: !280, line: 133, baseType: !21, size: 32, offset: 1504)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2666, file: !280, line: 133, baseType: !21, size: 32, offset: 1536)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2666, file: !280, line: 134, baseType: !23, size: 16, offset: 1568)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2666, file: !280, line: 134, baseType: !23, size: 16, offset: 1584)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2606, file: !280, line: 253, baseType: !660, size: 64, offset: 3008)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2606, file: !280, line: 254, baseType: !2690, size: 64, offset: 3072)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !280, line: 137, size: 832, elements: !2692)
!2692 = !{!2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2691, file: !280, line: 138, baseType: !23, size: 16)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2691, file: !280, line: 140, baseType: !23, size: 16, offset: 16)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2691, file: !280, line: 141, baseType: !45, size: 32, offset: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2691, file: !280, line: 142, baseType: !45, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2691, file: !280, line: 143, baseType: !23, size: 16, offset: 96)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2691, file: !280, line: 144, baseType: !23, size: 16, offset: 112)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2691, file: !280, line: 145, baseType: !21, size: 32, offset: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2691, file: !280, line: 147, baseType: !21, size: 32, offset: 160)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2691, file: !280, line: 149, baseType: !323, size: 64, offset: 192)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2691, file: !280, line: 150, baseType: !21, size: 32, offset: 256)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2691, file: !280, line: 151, baseType: !23, size: 16, offset: 288)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2691, file: !280, line: 152, baseType: !23, size: 16, offset: 304)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2691, file: !280, line: 154, baseType: !64, size: 64, offset: 320)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2691, file: !280, line: 155, baseType: !44, size: 64, offset: 384)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2691, file: !280, line: 157, baseType: !45, size: 32, offset: 448)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2691, file: !280, line: 158, baseType: !23, size: 16, offset: 480)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2691, file: !280, line: 159, baseType: !23, size: 16, offset: 496)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2691, file: !280, line: 160, baseType: !23, size: 16, offset: 512)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2691, file: !280, line: 161, baseType: !1840, size: 48, offset: 528)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2691, file: !280, line: 162, baseType: !45, size: 32, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2691, file: !280, line: 164, baseType: !45, size: 32, offset: 608)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2691, file: !280, line: 164, baseType: !45, size: 32, offset: 640)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2691, file: !280, line: 164, baseType: !45, size: 32, offset: 672)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2691, file: !280, line: 165, baseType: !278, size: 64, offset: 704)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2691, file: !280, line: 167, baseType: !1543, size: 64, offset: 768)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2606, file: !280, line: 255, baseType: !2719, size: 64, offset: 3136)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !280, line: 170, size: 8704, elements: !2721)
!2721 = !{!2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2720, file: !280, line: 171, baseType: !1272, size: 96)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2720, file: !280, line: 172, baseType: !21, size: 32, offset: 96)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2720, file: !280, line: 173, baseType: !23, size: 16, offset: 128)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2720, file: !280, line: 174, baseType: !23, size: 16, offset: 144)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2720, file: !280, line: 175, baseType: !23, size: 16, offset: 160)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2720, file: !280, line: 176, baseType: !23, size: 16, offset: 176)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2720, file: !280, line: 177, baseType: !23, size: 16, offset: 192)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2720, file: !280, line: 178, baseType: !23, size: 16, offset: 208)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2720, file: !280, line: 179, baseType: !21, size: 32, offset: 224)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2720, file: !280, line: 181, baseType: !323, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2720, file: !280, line: 182, baseType: !45, size: 32, offset: 320)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2720, file: !280, line: 183, baseType: !21, size: 32, offset: 352)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2720, file: !280, line: 184, baseType: !110, size: 8192, offset: 384)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2720, file: !280, line: 187, baseType: !44, size: 64, offset: 8576)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2720, file: !280, line: 188, baseType: !21, size: 32, offset: 8640)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2720, file: !280, line: 189, baseType: !21, size: 32, offset: 8672)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2606, file: !280, line: 256, baseType: !2739, size: 64, offset: 3200)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !280, line: 193, size: 640, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2740, file: !280, line: 194, baseType: !323, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2740, file: !280, line: 195, baseType: !138, size: 512, offset: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2740, file: !280, line: 197, baseType: !21, size: 32, offset: 576)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2740, file: !280, line: 198, baseType: !21, size: 32, offset: 608)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2606, file: !280, line: 258, baseType: !17, size: 8, offset: 3264)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2606, file: !280, line: 259, baseType: !1367, size: 56, offset: 3272)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !316, file: !280, line: 62, baseType: !138, size: 512, offset: 192)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !316, file: !280, line: 64, baseType: !17, size: 8, offset: 704)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !316, file: !280, line: 64, baseType: !17, size: 8, offset: 712)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !316, file: !280, line: 64, baseType: !17, size: 8, offset: 720)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !316, file: !280, line: 64, baseType: !17, size: 8, offset: 728)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !316, file: !280, line: 65, baseType: !188, size: 96, offset: 736)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !316, file: !280, line: 65, baseType: !188, size: 96, offset: 832)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !316, file: !280, line: 65, baseType: !45, size: 32, offset: 928)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !316, file: !280, line: 67, baseType: !23, size: 16, offset: 960)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !316, file: !280, line: 67, baseType: !23, size: 16, offset: 976)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !316, file: !280, line: 67, baseType: !23, size: 16, offset: 992)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !316, file: !280, line: 67, baseType: !23, size: 16, offset: 1008)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !316, file: !280, line: 68, baseType: !23, size: 16, offset: 1024)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !316, file: !280, line: 68, baseType: !23, size: 16, offset: 1040)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !316, file: !280, line: 69, baseType: !17, size: 8, offset: 1056)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !316, file: !280, line: 69, baseType: !1367, size: 56, offset: 1064)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !316, file: !280, line: 70, baseType: !45, size: 32, offset: 1120)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !316, file: !280, line: 70, baseType: !45, size: 32, offset: 1152)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !316, file: !280, line: 70, baseType: !45, size: 32, offset: 1184)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !316, file: !280, line: 70, baseType: !45, size: 32, offset: 1216)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !316, file: !280, line: 71, baseType: !45, size: 32, offset: 1248)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !316, file: !280, line: 71, baseType: !45, size: 32, offset: 1280)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !316, file: !280, line: 74, baseType: !45, size: 32, offset: 1312)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !316, file: !280, line: 74, baseType: !45, size: 32, offset: 1344)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !316, file: !280, line: 77, baseType: !45, size: 32, offset: 1376)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !316, file: !280, line: 77, baseType: !45, size: 32, offset: 1408)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !316, file: !280, line: 77, baseType: !45, size: 32, offset: 1440)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !316, file: !280, line: 78, baseType: !45, size: 32, offset: 1472)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !316, file: !280, line: 78, baseType: !45, size: 32, offset: 1504)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !316, file: !280, line: 78, baseType: !45, size: 32, offset: 1536)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !316, file: !280, line: 79, baseType: !45, size: 32, offset: 1568)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !316, file: !280, line: 79, baseType: !45, size: 32, offset: 1600)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !316, file: !280, line: 79, baseType: !45, size: 32, offset: 1632)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !316, file: !280, line: 79, baseType: !45, size: 32, offset: 1664)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !316, file: !280, line: 80, baseType: !45, size: 32, offset: 1696)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !316, file: !280, line: 80, baseType: !45, size: 32, offset: 1728)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !316, file: !280, line: 80, baseType: !45, size: 32, offset: 1760)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !316, file: !280, line: 81, baseType: !45, size: 32, offset: 1792)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !316, file: !280, line: 81, baseType: !45, size: 32, offset: 1824)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !316, file: !280, line: 81, baseType: !45, size: 32, offset: 1856)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !316, file: !280, line: 82, baseType: !45, size: 32, offset: 1888)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !316, file: !280, line: 82, baseType: !45, size: 32, offset: 1920)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !316, file: !280, line: 82, baseType: !45, size: 32, offset: 1952)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !316, file: !280, line: 85, baseType: !45, size: 32, offset: 1984)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !316, file: !280, line: 85, baseType: !45, size: 32, offset: 2016)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !316, file: !280, line: 85, baseType: !45, size: 32, offset: 2048)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !316, file: !280, line: 85, baseType: !45, size: 32, offset: 2080)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !316, file: !280, line: 86, baseType: !45, size: 32, offset: 2112)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !316, file: !280, line: 86, baseType: !45, size: 32, offset: 2144)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !316, file: !280, line: 86, baseType: !45, size: 32, offset: 2176)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !316, file: !280, line: 86, baseType: !45, size: 32, offset: 2208)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !316, file: !280, line: 87, baseType: !45, size: 32, offset: 2240)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !316, file: !280, line: 87, baseType: !45, size: 32, offset: 2272)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !316, file: !280, line: 87, baseType: !45, size: 32, offset: 2304)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !316, file: !280, line: 87, baseType: !45, size: 32, offset: 2336)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !316, file: !280, line: 90, baseType: !45, size: 32, offset: 2368)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !316, file: !280, line: 93, baseType: !45, size: 32, offset: 2400)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !316, file: !280, line: 93, baseType: !45, size: 32, offset: 2432)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !316, file: !280, line: 93, baseType: !45, size: 32, offset: 2464)
!2807 = !{!2808}
!2808 = !DISubrange(count: 18)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !87, file: !88, line: 168, baseType: !676, size: 64, offset: 6144)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !87, file: !88, line: 169, baseType: !344, size: 64, offset: 6208)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !87, file: !88, line: 170, baseType: !536, size: 64, offset: 6272)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !87, file: !88, line: 171, baseType: !660, size: 64, offset: 6336)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !87, file: !88, line: 174, baseType: !45, size: 32, offset: 6400)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !87, file: !88, line: 174, baseType: !45, size: 32, offset: 6432)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !87, file: !88, line: 174, baseType: !45, size: 32, offset: 6464)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !87, file: !88, line: 175, baseType: !45, size: 32, offset: 6496)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !87, file: !88, line: 175, baseType: !45, size: 32, offset: 6528)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !87, file: !88, line: 176, baseType: !23, size: 16, offset: 6560)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !87, file: !88, line: 176, baseType: !23, size: 16, offset: 6576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !87, file: !88, line: 179, baseType: !188, size: 96, offset: 6592)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !87, file: !88, line: 179, baseType: !188, size: 96, offset: 6688)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !87, file: !88, line: 180, baseType: !45, size: 32, offset: 6784)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !87, file: !88, line: 180, baseType: !45, size: 32, offset: 6816)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !87, file: !88, line: 180, baseType: !45, size: 32, offset: 6848)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !87, file: !88, line: 181, baseType: !45, size: 32, offset: 6880)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !87, file: !88, line: 181, baseType: !45, size: 32, offset: 6912)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !87, file: !88, line: 182, baseType: !45, size: 32, offset: 6944)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !87, file: !88, line: 182, baseType: !45, size: 32, offset: 6976)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !87, file: !88, line: 183, baseType: !23, size: 16, offset: 7008)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !87, file: !88, line: 183, baseType: !23, size: 16, offset: 7024)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !87, file: !88, line: 185, baseType: !21, size: 32, offset: 7040)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !87, file: !88, line: 186, baseType: !23, size: 16, offset: 7072)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !87, file: !88, line: 187, baseType: !23, size: 16, offset: 7088)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !87, file: !88, line: 190, baseType: !270, size: 128, offset: 7104)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !87, file: !88, line: 191, baseType: !23, size: 16, offset: 7232)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !87, file: !88, line: 192, baseType: !23, size: 16, offset: 7248)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !87, file: !88, line: 195, baseType: !23, size: 16, offset: 7264)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !87, file: !88, line: 196, baseType: !23, size: 16, offset: 7280)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !87, file: !88, line: 197, baseType: !23, size: 16, offset: 7296)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !87, file: !88, line: 198, baseType: !1840, size: 48, offset: 7312)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !87, file: !88, line: 200, baseType: !2842, size: 64, offset: 7360)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !88, line: 86, size: 192, elements: !2844)
!2844 = !{!2845, !2846, !2847, !2848}
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2843, file: !88, line: 87, baseType: !1313, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2843, file: !88, line: 88, baseType: !444, size: 64, offset: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2843, file: !88, line: 89, baseType: !21, size: 32, offset: 128)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2843, file: !88, line: 90, baseType: !21, size: 32, offset: 160)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !87, file: !88, line: 202, baseType: !59, size: 128, offset: 7424)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !72, file: !8, line: 94, baseType: !536, size: 64, offset: 1024)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !72, file: !8, line: 96, baseType: !44, size: 64, offset: 1088)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !72, file: !8, line: 97, baseType: !44, size: 64, offset: 1152)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !72, file: !8, line: 98, baseType: !44, size: 64, offset: 1216)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !72, file: !8, line: 99, baseType: !42, size: 64, offset: 1280)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !72, file: !8, line: 101, baseType: !21, size: 32, offset: 1344)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !72, file: !8, line: 101, baseType: !21, size: 32, offset: 1376)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !72, file: !8, line: 104, baseType: !64, size: 64, offset: 1408)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !72, file: !8, line: 106, baseType: !59, size: 128, offset: 1472)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !32, file: !8, line: 137, baseType: !21, size: 32, offset: 960)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !32, file: !8, line: 140, baseType: !21, size: 32, offset: 992)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !32, file: !8, line: 143, baseType: !21, size: 32, offset: 1024)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !32, file: !8, line: 146, baseType: !444, size: 64, offset: 1088)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !9, file: !10, line: 141, baseType: !30, size: 64, offset: 960)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !9, file: !10, line: 143, baseType: !59, size: 128, offset: 1024)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !9, file: !10, line: 147, baseType: !2866, size: 32, offset: 1152)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !2867, line: 148, baseType: !2868)
!2867 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !2869, line: 10, baseType: !2870)
!2869 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1913, line: 26, baseType: !2871)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1915, line: 42, baseType: !79)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !9, file: !10, line: 150, baseType: !21, size: 32, offset: 1184)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !9, file: !10, line: 150, baseType: !21, size: 32, offset: 1216)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !9, file: !10, line: 152, baseType: !48, size: 128, offset: 1248)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !9, file: !10, line: 153, baseType: !1093, size: 128, offset: 1376)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !9, file: !10, line: 154, baseType: !45, size: 32, offset: 1504)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !9, file: !10, line: 154, baseType: !45, size: 32, offset: 1536)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !9, file: !10, line: 155, baseType: !45, size: 32, offset: 1568)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !9, file: !10, line: 158, baseType: !21, size: 32, offset: 1600)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !9, file: !10, line: 158, baseType: !21, size: 32, offset: 1632)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !9, file: !10, line: 162, baseType: !21, size: 32, offset: 1664)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !9, file: !10, line: 162, baseType: !21, size: 32, offset: 1696)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !9, file: !10, line: 165, baseType: !45, size: 32, offset: 1728)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !9, file: !10, line: 167, baseType: !45, size: 32, offset: 1760)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !9, file: !10, line: 167, baseType: !45, size: 32, offset: 1792)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !9, file: !10, line: 167, baseType: !45, size: 32, offset: 1824)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !9, file: !10, line: 167, baseType: !45, size: 32, offset: 1856)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !9, file: !10, line: 167, baseType: !45, size: 32, offset: 1888)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !9, file: !10, line: 170, baseType: !188, size: 96, offset: 1920)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !9, file: !10, line: 171, baseType: !2674, size: 288, offset: 2016)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !9, file: !10, line: 172, baseType: !462, size: 512, offset: 2304)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !9, file: !10, line: 172, baseType: !462, size: 512, offset: 2816)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !9, file: !10, line: 173, baseType: !462, size: 512, offset: 3328)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !9, file: !10, line: 174, baseType: !462, size: 512, offset: 3840)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !9, file: !10, line: 177, baseType: !45, size: 32, offset: 4352)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !9, file: !10, line: 178, baseType: !45, size: 32, offset: 4384)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !9, file: !10, line: 181, baseType: !2898, size: 64, offset: 4416)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !10, line: 77, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !10, line: 72, size: 3776, elements: !2901)
!2901 = !{!2902, !2906, !2910, !2911, !2912}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !2900, file: !10, line: 73, baseType: !2903, size: 512)
!2903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 512, elements: !2904)
!2904 = !{!2905}
!2905 = !DISubrange(count: 16)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !2900, file: !10, line: 74, baseType: !2907, size: 576, offset: 512)
!2907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !44, size: 576, elements: !2908)
!2908 = !{!2909}
!2909 = !DISubrange(count: 9)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !2900, file: !10, line: 74, baseType: !2907, size: 576, offset: 1088)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !2900, file: !10, line: 75, baseType: !691, size: 2048, offset: 1664)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !2900, file: !10, line: 75, baseType: !444, size: 64, offset: 3712)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !9, file: !10, line: 182, baseType: !2914, size: 2048, offset: 4480)
!2914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 2048, elements: !2915)
!2915 = !{!303, !658}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !9, file: !10, line: 183, baseType: !2914, size: 2048, offset: 6528)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !9, file: !10, line: 184, baseType: !2565, size: 64, offset: 8576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !9, file: !10, line: 187, baseType: !2919, size: 32, offset: 8640)
!2919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 32, elements: !289)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !9, file: !10, line: 190, baseType: !2921, size: 64, offset: 8704)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2923, line: 53, size: 15232, elements: !2924)
!2923 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2978}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2922, file: !2923, line: 54, baseType: !2921, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2922, file: !2923, line: 54, baseType: !2921, size: 64, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2922, file: !2923, line: 55, baseType: !110, size: 8192, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2922, file: !2923, line: 56, baseType: !23, size: 16, offset: 8320)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2922, file: !2923, line: 56, baseType: !23, size: 16, offset: 8336)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2922, file: !2923, line: 57, baseType: !23, size: 16, offset: 8352)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2922, file: !2923, line: 57, baseType: !23, size: 16, offset: 8368)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2922, file: !2923, line: 58, baseType: !1912, size: 64, offset: 8384)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2922, file: !2923, line: 59, baseType: !2934, size: 128, offset: 8448)
!2934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 128, elements: !2904)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2922, file: !2923, line: 60, baseType: !23, size: 16, offset: 8576)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2922, file: !2923, line: 62, baseType: !100, size: 64, offset: 8640)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2922, file: !2923, line: 63, baseType: !59, size: 128, offset: 8704)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2922, file: !2923, line: 64, baseType: !59, size: 128, offset: 8832)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2922, file: !2923, line: 65, baseType: !59, size: 128, offset: 8960)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2922, file: !2923, line: 66, baseType: !59, size: 128, offset: 9088)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2922, file: !2923, line: 67, baseType: !59, size: 128, offset: 9216)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2922, file: !2923, line: 68, baseType: !59, size: 128, offset: 9344)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2922, file: !2923, line: 69, baseType: !59, size: 128, offset: 9472)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2922, file: !2923, line: 70, baseType: !59, size: 128, offset: 9600)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2922, file: !2923, line: 71, baseType: !59, size: 128, offset: 9728)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2922, file: !2923, line: 72, baseType: !59, size: 128, offset: 9856)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2922, file: !2923, line: 73, baseType: !59, size: 128, offset: 9984)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2922, file: !2923, line: 74, baseType: !59, size: 128, offset: 10112)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2922, file: !2923, line: 75, baseType: !59, size: 128, offset: 10240)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2922, file: !2923, line: 76, baseType: !59, size: 128, offset: 10368)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2922, file: !2923, line: 77, baseType: !59, size: 128, offset: 10496)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2922, file: !2923, line: 78, baseType: !59, size: 128, offset: 10624)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2922, file: !2923, line: 79, baseType: !59, size: 128, offset: 10752)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2922, file: !2923, line: 80, baseType: !59, size: 128, offset: 10880)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2922, file: !2923, line: 81, baseType: !59, size: 128, offset: 11008)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2922, file: !2923, line: 82, baseType: !59, size: 128, offset: 11136)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2922, file: !2923, line: 83, baseType: !59, size: 128, offset: 11264)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2922, file: !2923, line: 84, baseType: !59, size: 128, offset: 11392)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2922, file: !2923, line: 85, baseType: !59, size: 128, offset: 11520)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2922, file: !2923, line: 86, baseType: !59, size: 128, offset: 11648)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2922, file: !2923, line: 87, baseType: !59, size: 128, offset: 11776)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2922, file: !2923, line: 88, baseType: !59, size: 128, offset: 11904)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2922, file: !2923, line: 89, baseType: !59, size: 128, offset: 12032)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2922, file: !2923, line: 90, baseType: !59, size: 128, offset: 12160)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2922, file: !2923, line: 91, baseType: !59, size: 128, offset: 12288)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2922, file: !2923, line: 92, baseType: !59, size: 128, offset: 12416)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2922, file: !2923, line: 93, baseType: !59, size: 128, offset: 12544)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2922, file: !2923, line: 94, baseType: !59, size: 128, offset: 12672)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2922, file: !2923, line: 95, baseType: !59, size: 128, offset: 12800)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2922, file: !2923, line: 96, baseType: !59, size: 128, offset: 12928)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2922, file: !2923, line: 98, baseType: !691, size: 2048, offset: 13056)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2922, file: !2923, line: 101, baseType: !2973, size: 64, offset: 15104)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2975, line: 58, size: 32, elements: !2976)
!2975 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2976 = !{!2977}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2974, file: !2975, line: 59, baseType: !21, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2922, file: !2923, line: 103, baseType: !2979, size: 64, offset: 15168)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2923, line: 51, flags: DIFlagFwdDecl)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !9, file: !10, line: 191, baseType: !2982, size: 64, offset: 8768)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !417, line: 1299, baseType: !572)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9, file: !10, line: 192, baseType: !2985, size: 31872, offset: 8832)
!2985 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !417, line: 611, baseType: !1510)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !9, file: !10, line: 193, baseType: !2987, size: 4224, offset: 40704)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !580, line: 131, baseType: !579)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !9, file: !10, line: 194, baseType: !323, size: 64, offset: 44928)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !9, file: !10, line: 195, baseType: !79, size: 32, offset: 44992)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !9, file: !10, line: 195, baseType: !79, size: 32, offset: 45024)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !9, file: !10, line: 197, baseType: !59, size: 128, offset: 45056)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !9, file: !10, line: 200, baseType: !2993, size: 64, offset: 45184)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !10, line: 65, flags: DIFlagFwdDecl)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !9, file: !10, line: 203, baseType: !2996, size: 64, offset: 45248)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !10, line: 63, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !9, file: !10, line: 204, baseType: !2999, size: 64, offset: 45312)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !10, line: 64, flags: DIFlagFwdDecl)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !9, file: !10, line: 205, baseType: !3002, size: 64, offset: 45376)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !10, line: 205, flags: DIFlagFwdDecl)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !9, file: !10, line: 206, baseType: !45, size: 32, offset: 45440)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !9, file: !10, line: 209, baseType: !64, size: 64, offset: 45504)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !9, file: !10, line: 210, baseType: !59, size: 128, offset: 45568)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !9, file: !10, line: 213, baseType: !45, size: 32, offset: 45696)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !9, file: !10, line: 213, baseType: !45, size: 32, offset: 45728)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !9, file: !10, line: 216, baseType: !21, size: 32, offset: 45760)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !9, file: !10, line: 216, baseType: !21, size: 32, offset: 45792)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !9, file: !10, line: 216, baseType: !21, size: 32, offset: 45824)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !9, file: !10, line: 216, baseType: !21, size: 32, offset: 45856)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !9, file: !10, line: 216, baseType: !21, size: 32, offset: 45888)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !9, file: !10, line: 217, baseType: !3015, size: 64, offset: 45952)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !10, line: 413, size: 1024, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !3017, file: !10, line: 414, baseType: !23, size: 16)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !3017, file: !10, line: 414, baseType: !23, size: 16, offset: 16)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 96)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 128)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 160)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 192)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !3017, file: !10, line: 415, baseType: !45, size: 32, offset: 224)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3017, file: !10, line: 415, baseType: !188, size: 96, offset: 256)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3017, file: !10, line: 415, baseType: !188, size: 96, offset: 352)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !3017, file: !10, line: 416, baseType: !45, size: 32, offset: 448)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3017, file: !10, line: 416, baseType: !45, size: 32, offset: 480)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3017, file: !10, line: 416, baseType: !45, size: 32, offset: 512)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3017, file: !10, line: 416, baseType: !45, size: 32, offset: 544)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !3017, file: !10, line: 417, baseType: !21, size: 32, offset: 576)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !3017, file: !10, line: 417, baseType: !21, size: 32, offset: 608)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !3017, file: !10, line: 418, baseType: !21, size: 32, offset: 640)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !3017, file: !10, line: 419, baseType: !17, size: 8, offset: 672)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3017, file: !10, line: 419, baseType: !17, size: 8, offset: 680)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !3017, file: !10, line: 419, baseType: !17, size: 8, offset: 688)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !3017, file: !10, line: 419, baseType: !17, size: 8, offset: 696)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !3017, file: !10, line: 420, baseType: !17, size: 8, offset: 704)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !3017, file: !10, line: 420, baseType: !17, size: 8, offset: 712)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3017, file: !10, line: 420, baseType: !17, size: 8, offset: 720)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !3017, file: !10, line: 421, baseType: !23, size: 16, offset: 736)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !3017, file: !10, line: 422, baseType: !45, size: 32, offset: 768)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !3017, file: !10, line: 423, baseType: !21, size: 32, offset: 800)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3017, file: !10, line: 424, baseType: !79, size: 32, offset: 832)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3017, file: !10, line: 425, baseType: !86, size: 64, offset: 896)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3017, file: !10, line: 426, baseType: !3050, size: 64, offset: 960)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !3052, line: 47, flags: DIFlagFwdDecl)
!3052 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !9, file: !10, line: 219, baseType: !59, size: 128, offset: 46016)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !9, file: !10, line: 220, baseType: !59, size: 128, offset: 46144)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !9, file: !10, line: 222, baseType: !59, size: 128, offset: 46272)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !9, file: !10, line: 224, baseType: !3057, size: 64, offset: 46400)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !10, line: 345, size: 2304, elements: !3059)
!3059 = !{!3060, !3061, !3062, !3235, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3259, !3260, !3261, !3262}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3058, file: !10, line: 346, baseType: !3057, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3058, file: !10, line: 346, baseType: !3057, size: 64, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3058, file: !10, line: 348, baseType: !3063, size: 64, offset: 128)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !10, line: 343, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !10, line: 315, size: 2240, elements: !3066)
!3066 = !{!3067, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3109, !3145, !3222, !3223, !3224, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3065, file: !10, line: 316, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3065, file: !10, line: 316, baseType: !3068, size: 64, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3065, file: !10, line: 317, baseType: !323, size: 64, offset: 128)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3065, file: !10, line: 317, baseType: !323, size: 64, offset: 192)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !3065, file: !10, line: 318, baseType: !571, size: 64, offset: 256)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3065, file: !10, line: 319, baseType: !21, size: 32, offset: 320)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !3065, file: !10, line: 319, baseType: !21, size: 32, offset: 352)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3065, file: !10, line: 319, baseType: !21, size: 32, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3065, file: !10, line: 319, baseType: !21, size: 32, offset: 416)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !3065, file: !10, line: 321, baseType: !3078, size: 192, offset: 448)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 192, elements: !3079)
!3079 = !{!658, !190}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3065, file: !10, line: 323, baseType: !21, size: 32, offset: 640)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !3065, file: !10, line: 323, baseType: !21, size: 32, offset: 672)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3065, file: !10, line: 323, baseType: !21, size: 32, offset: 704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3065, file: !10, line: 323, baseType: !21, size: 32, offset: 736)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !3065, file: !10, line: 324, baseType: !21, size: 32, offset: 768)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !3065, file: !10, line: 324, baseType: !21, size: 32, offset: 800)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !3065, file: !10, line: 324, baseType: !21, size: 32, offset: 832)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !3065, file: !10, line: 324, baseType: !21, size: 32, offset: 864)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !3065, file: !10, line: 325, baseType: !3089, size: 64, offset: 896)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !3091, line: 60, size: 448, elements: !3092)
!3091 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3092 = !{!3093, !3103, !3104, !3105, !3106, !3107, !3108}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3090, file: !3091, line: 61, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !10, line: 372, size: 384, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100, !3101, !3102}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3095, file: !10, line: 373, baseType: !188, size: 96)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3095, file: !10, line: 374, baseType: !188, size: 96, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !3095, file: !10, line: 375, baseType: !44, size: 64, offset: 192)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3095, file: !10, line: 376, baseType: !79, size: 32, offset: 256)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !3095, file: !10, line: 378, baseType: !45, size: 32, offset: 288)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3095, file: !10, line: 379, baseType: !21, size: 32, offset: 320)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !3090, file: !3091, line: 62, baseType: !44, size: 64, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3090, file: !3091, line: 63, baseType: !44, size: 64, offset: 128)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !3090, file: !3091, line: 64, baseType: !44, size: 64, offset: 192)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !3090, file: !3091, line: 65, baseType: !44, size: 64, offset: 256)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3090, file: !3091, line: 66, baseType: !44, size: 64, offset: 320)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !3090, file: !3091, line: 68, baseType: !42, size: 64, offset: 384)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !3065, file: !10, line: 326, baseType: !3110, size: 64, offset: 960)
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !3091, line: 71, size: 512, elements: !3112)
!3112 = !{!3113, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !3111, file: !3091, line: 72, baseType: !3114, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !10, line: 400, size: 512, elements: !3116)
!3116 = !{!3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3115, file: !10, line: 401, baseType: !3094, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3115, file: !10, line: 401, baseType: !3094, size: 64, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3115, file: !10, line: 401, baseType: !3094, size: 64, offset: 128)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3115, file: !10, line: 401, baseType: !3094, size: 64, offset: 192)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !3115, file: !10, line: 402, baseType: !188, size: 96, offset: 256)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3115, file: !10, line: 403, baseType: !86, size: 64, offset: 384)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !3115, file: !10, line: 404, baseType: !17, size: 8, offset: 448)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3115, file: !10, line: 405, baseType: !17, size: 8, offset: 456)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !3115, file: !10, line: 405, baseType: !17, size: 8, offset: 464)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3115, file: !10, line: 410, baseType: !21, size: 32, offset: 480)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3111, file: !3091, line: 73, baseType: !2023, size: 64, offset: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3111, file: !3091, line: 74, baseType: !2067, size: 64, offset: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !3111, file: !3091, line: 76, baseType: !42, size: 64, offset: 192)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !3111, file: !3091, line: 77, baseType: !21, size: 32, offset: 256)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !3111, file: !3091, line: 77, baseType: !21, size: 32, offset: 288)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3111, file: !3091, line: 78, baseType: !44, size: 64, offset: 320)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !3111, file: !3091, line: 79, baseType: !44, size: 64, offset: 384)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !3111, file: !3091, line: 80, baseType: !3135, size: 64, offset: 448)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !10, line: 394, size: 448, elements: !3138)
!3138 = !{!3139, !3140, !3141, !3142, !3143, !3144}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !3137, file: !10, line: 395, baseType: !188, size: 96)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !3137, file: !10, line: 395, baseType: !188, size: 96, offset: 96)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !3137, file: !10, line: 396, baseType: !188, size: 96, offset: 192)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !3137, file: !10, line: 396, baseType: !188, size: 96, offset: 288)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !3137, file: !10, line: 396, baseType: !45, size: 32, offset: 384)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3137, file: !10, line: 397, baseType: !21, size: 32, offset: 416)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !3065, file: !10, line: 327, baseType: !3146, size: 64, offset: 1024)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !3091, line: 83, size: 512, elements: !3148)
!3148 = !{!3149, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !3147, file: !3091, line: 84, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !10, line: 475, size: 384, elements: !3152)
!3152 = !{!3153, !3160, !3209, !3210, !3211, !3212, !3213}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3151, file: !10, line: 476, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !10, line: 434, baseType: !3156)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !10, line: 431, size: 128, elements: !3157)
!3157 = !{!3158, !3159}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3156, file: !10, line: 432, baseType: !188, size: 96)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !3156, file: !10, line: 433, baseType: !45, size: 32, offset: 96)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !3151, file: !10, line: 477, baseType: !3161, size: 64, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !10, line: 473, baseType: !3163)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !10, line: 455, size: 1344, elements: !3164)
!3164 = !{!3165, !3167, !3168, !3170, !3177, !3178, !3179, !3180, !3181, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3163, file: !10, line: 456, baseType: !3166, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3163, file: !10, line: 456, baseType: !3166, size: 64, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3163, file: !10, line: 457, baseType: !3169, size: 64, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !3163, file: !10, line: 458, baseType: !3171, size: 64, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !10, line: 450, size: 256, elements: !3173)
!3173 = !{!3174, !3175, !3176}
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3172, file: !10, line: 451, baseType: !21, size: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3172, file: !10, line: 451, baseType: !21, size: 32, offset: 32)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !3172, file: !10, line: 452, baseType: !3078, size: 192, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3163, file: !10, line: 459, baseType: !21, size: 32, offset: 256)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !3163, file: !10, line: 459, baseType: !21, size: 32, offset: 288)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3163, file: !10, line: 461, baseType: !3068, size: 64, offset: 320)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !3163, file: !10, line: 462, baseType: !86, size: 64, offset: 384)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !3163, file: !10, line: 463, baseType: !3182, size: 64, offset: 448)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !10, line: 436, size: 2880, elements: !3184)
!3184 = !{!3185, !3186, !3187, !3188, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3183, file: !10, line: 437, baseType: !3182, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3183, file: !10, line: 437, baseType: !3182, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !3183, file: !10, line: 438, baseType: !3064, size: 2240, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3183, file: !10, line: 439, baseType: !3189, size: 64, offset: 2368)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3183, file: !10, line: 440, baseType: !2455, size: 64, offset: 2432)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !3183, file: !10, line: 442, baseType: !2455, size: 64, offset: 2496)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !3183, file: !10, line: 443, baseType: !2455, size: 64, offset: 2560)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !3183, file: !10, line: 444, baseType: !2455, size: 64, offset: 2624)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !3183, file: !10, line: 446, baseType: !2455, size: 64, offset: 2688)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !3183, file: !10, line: 446, baseType: !2455, size: 64, offset: 2752)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3183, file: !10, line: 447, baseType: !21, size: 32, offset: 2816)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3183, file: !10, line: 447, baseType: !21, size: 32, offset: 2848)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3163, file: !10, line: 464, baseType: !79, size: 32, offset: 512)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !3163, file: !10, line: 465, baseType: !21, size: 32, offset: 544)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3163, file: !10, line: 466, baseType: !21, size: 32, offset: 576)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !3163, file: !10, line: 466, baseType: !21, size: 32, offset: 608)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !3163, file: !10, line: 467, baseType: !45, size: 32, offset: 640)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !3163, file: !10, line: 467, baseType: !45, size: 32, offset: 672)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !3163, file: !10, line: 467, baseType: !45, size: 32, offset: 704)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !3163, file: !10, line: 469, baseType: !45, size: 32, offset: 736)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !3163, file: !10, line: 471, baseType: !462, size: 512, offset: 768)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3163, file: !10, line: 472, baseType: !21, size: 32, offset: 1280)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3163, file: !10, line: 472, baseType: !21, size: 32, offset: 1312)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3151, file: !10, line: 478, baseType: !21, size: 32, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3151, file: !10, line: 478, baseType: !21, size: 32, offset: 160)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !3151, file: !10, line: 479, baseType: !21, size: 32, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3151, file: !10, line: 479, baseType: !21, size: 32, offset: 224)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !3151, file: !10, line: 480, baseType: !188, size: 96, offset: 256)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !3147, file: !3091, line: 85, baseType: !44, size: 64, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !3147, file: !3091, line: 86, baseType: !44, size: 64, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !3147, file: !3091, line: 87, baseType: !44, size: 64, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3147, file: !3091, line: 88, baseType: !42, size: 64, offset: 256)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3147, file: !3091, line: 89, baseType: !2067, size: 64, offset: 320)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3147, file: !3091, line: 90, baseType: !44, size: 64, offset: 384)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !3147, file: !3091, line: 91, baseType: !21, size: 32, offset: 448)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !3147, file: !3091, line: 91, baseType: !21, size: 32, offset: 480)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !3065, file: !10, line: 328, baseType: !3015, size: 64, offset: 1088)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !3065, file: !10, line: 329, baseType: !3166, size: 64, offset: 1152)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3065, file: !10, line: 331, baseType: !3225, size: 64, offset: 1216)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3065, file: !10, line: 332, baseType: !3225, size: 64, offset: 1280)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !3065, file: !10, line: 333, baseType: !21, size: 32, offset: 1344)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !3065, file: !10, line: 333, baseType: !21, size: 32, offset: 1376)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !3065, file: !10, line: 333, baseType: !21, size: 32, offset: 1408)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !3065, file: !10, line: 335, baseType: !462, size: 512, offset: 1440)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3065, file: !10, line: 338, baseType: !2996, size: 64, offset: 1984)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !3065, file: !10, line: 339, baseType: !2999, size: 64, offset: 2048)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !3065, file: !10, line: 340, baseType: !3002, size: 64, offset: 2112)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !3065, file: !10, line: 341, baseType: !3057, size: 64, offset: 2176)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3058, file: !10, line: 349, baseType: !3236, size: 64, offset: 192)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !325, line: 295, baseType: !324)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3058, file: !10, line: 349, baseType: !3236, size: 64, offset: 256)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3058, file: !10, line: 350, baseType: !21, size: 32, offset: 320)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !3058, file: !10, line: 350, baseType: !21, size: 32, offset: 352)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3058, file: !10, line: 350, baseType: !21, size: 32, offset: 384)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3058, file: !10, line: 352, baseType: !462, size: 512, offset: 416)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3058, file: !10, line: 352, baseType: !462, size: 512, offset: 928)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !3058, file: !10, line: 353, baseType: !2674, size: 288, offset: 1440)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3058, file: !10, line: 354, baseType: !23, size: 16, offset: 1728)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !3058, file: !10, line: 356, baseType: !188, size: 96, offset: 1760)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !3058, file: !10, line: 356, baseType: !1143, size: 64, offset: 1856)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !3058, file: !10, line: 357, baseType: !2482, size: 64, offset: 1920)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !3058, file: !10, line: 359, baseType: !3250, size: 64, offset: 1984)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !10, line: 513, size: 448, elements: !3252)
!3252 = !{!3253, !3254, !3255, !3256, !3257, !3258}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3251, file: !10, line: 514, baseType: !1272, size: 96)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !3251, file: !10, line: 515, baseType: !44, size: 64, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !3251, file: !10, line: 515, baseType: !44, size: 64, offset: 192)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !3251, file: !10, line: 516, baseType: !44, size: 64, offset: 256)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !3251, file: !10, line: 517, baseType: !44, size: 64, offset: 320)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !3251, file: !10, line: 518, baseType: !44, size: 64, offset: 384)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !3058, file: !10, line: 361, baseType: !44, size: 64, offset: 2048)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !3058, file: !10, line: 362, baseType: !21, size: 32, offset: 2112)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !3058, file: !10, line: 365, baseType: !2996, size: 64, offset: 2176)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !3058, file: !10, line: 366, baseType: !21, size: 32, offset: 2240)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !9, file: !10, line: 225, baseType: !59, size: 128, offset: 46464)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !9, file: !10, line: 226, baseType: !21, size: 32, offset: 46592)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !9, file: !10, line: 228, baseType: !1313, size: 64, offset: 46656)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !9, file: !10, line: 230, baseType: !377, size: 64, offset: 46720)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !9, file: !10, line: 232, baseType: !377, size: 64, offset: 46784)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !9, file: !10, line: 233, baseType: !2565, size: 64, offset: 46848)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !9, file: !10, line: 234, baseType: !86, size: 64, offset: 46912)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !9, file: !10, line: 236, baseType: !59, size: 128, offset: 46976)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !9, file: !10, line: 238, baseType: !323, size: 64, offset: 47104)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !9, file: !10, line: 239, baseType: !59, size: 128, offset: 47168)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !9, file: !10, line: 240, baseType: !59, size: 128, offset: 47296)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !9, file: !10, line: 250, baseType: !3275, size: 64, offset: 47424)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !3277, line: 52, flags: DIFlagFwdDecl)
!3277 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !9, file: !10, line: 253, baseType: !3279, size: 64, offset: 47488)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{null, !64, !30}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !9, file: !10, line: 254, baseType: !64, size: 64, offset: 47552)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !9, file: !10, line: 255, baseType: !3279, size: 64, offset: 47616)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !9, file: !10, line: 256, baseType: !64, size: 64, offset: 47680)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !9, file: !10, line: 257, baseType: !3286, size: 64, offset: 47744)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{null, !64, !30, !3289}
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !9, file: !10, line: 258, baseType: !64, size: 64, offset: 47808)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !9, file: !10, line: 259, baseType: !3292, size: 64, offset: 47872)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = !DISubroutineType(types: !3294)
!3294 = !{null, !64, !571}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !9, file: !10, line: 260, baseType: !64, size: 64, offset: 47936)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !9, file: !10, line: 262, baseType: !3297, size: 64, offset: 48000)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DISubroutineType(types: !3299)
!3299 = !{null, !64, !3300}
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !8, line: 160, baseType: !3302)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !8, line: 151, size: 1216, elements: !3303)
!3303 = !{!3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3302, file: !8, line: 152, baseType: !21, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 32)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 96)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 128)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 160)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3302, file: !8, line: 153, baseType: !21, size: 32, offset: 192)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 224)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 240)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 256)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 272)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 288)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !3302, file: !8, line: 154, baseType: !23, size: 16, offset: 304)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !3302, file: !8, line: 155, baseType: !28, size: 8, offset: 320)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !3302, file: !8, line: 156, baseType: !934, size: 64, offset: 384)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !3302, file: !8, line: 156, baseType: !934, size: 64, offset: 448)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !3302, file: !8, line: 157, baseType: !787, size: 64, offset: 512)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !3302, file: !8, line: 157, baseType: !787, size: 64, offset: 576)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !3302, file: !8, line: 158, baseType: !138, size: 512, offset: 640)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !3302, file: !8, line: 159, baseType: !45, size: 32, offset: 1152)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !3302, file: !8, line: 159, baseType: !45, size: 32, offset: 1184)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !9, file: !10, line: 263, baseType: !64, size: 64, offset: 48064)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !9, file: !10, line: 264, baseType: !1175, size: 64, offset: 48128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !9, file: !10, line: 265, baseType: !64, size: 64, offset: 48192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !9, file: !10, line: 267, baseType: !3329, size: 64, offset: 48256)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !64, !21}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !9, file: !10, line: 268, baseType: !64, size: 64, offset: 48320)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !9, file: !10, line: 269, baseType: !1183, size: 64, offset: 48384)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !9, file: !10, line: 270, baseType: !64, size: 64, offset: 48448)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !9, file: !10, line: 272, baseType: !3301, size: 1216, offset: 48512)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !9, file: !10, line: 274, baseType: !3337, size: 64, offset: 49728)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !3339, line: 44, flags: DIFlagFwdDecl)
!3339 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_anim.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !9, file: !10, line: 276, baseType: !3050, size: 64, offset: 49792)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !9, file: !10, line: 277, baseType: !2973, size: 64, offset: 49856)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !10, line: 368, baseType: !3058)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliObject", file: !325, line: 331, baseType: !3346)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliObject", file: !325, line: 316, size: 1216, elements: !3347)
!3347 = !{!3348, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3360}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3346, file: !325, line: 317, baseType: !3349, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3346, file: !325, line: 317, baseType: !3349, size: 64, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !3346, file: !325, line: 318, baseType: !323, size: 64, offset: 128)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3346, file: !325, line: 319, baseType: !462, size: 512, offset: 192)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !3346, file: !325, line: 320, baseType: !188, size: 96, offset: 704)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3346, file: !325, line: 320, baseType: !1143, size: 64, offset: 800)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3346, file: !325, line: 322, baseType: !23, size: 16, offset: 864)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "no_draw", scope: !3346, file: !325, line: 323, baseType: !17, size: 8, offset: 880)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "animated", scope: !3346, file: !325, line: 323, baseType: !17, size: 8, offset: 888)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "persistent_id", scope: !3346, file: !325, line: 327, baseType: !3359, size: 256, offset: 896)
!3359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21, size: 256, elements: !1329)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "particle_system", scope: !3346, file: !325, line: 330, baseType: !3361, size: 64, offset: 1152)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !3363, line: 253, size: 5248, elements: !3364)
!3363 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3364 = !{!3365, !3366, !3367, !3554, !3611, !3623, !3626, !3630, !3642, !3643, !3644, !3645, !3662, !3663, !3664, !3665, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3690, !3694, !3695, !3696, !3697, !3698, !3699, !3701, !3709, !3710, !3711, !3714, !3717, !3734, !3735}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3362, file: !3363, line: 257, baseType: !3361, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3362, file: !3363, line: 257, baseType: !3361, size: 64, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3362, file: !3363, line: 259, baseType: !3368, size: 64, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !3363, line: 251, baseType: !3370)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !3363, line: 153, size: 6400, elements: !3371)
!3371 = !{!3372, !3373, !3374, !3402, !3423, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3370, file: !3363, line: 154, baseType: !91, size: 960)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3370, file: !3363, line: 155, baseType: !153, size: 64, offset: 960)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !3370, file: !3363, line: 157, baseType: !3375, size: 64, offset: 1024)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !3377, line: 189, size: 832, elements: !3378)
!3377 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3378 = !{!3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !3376, file: !3377, line: 190, baseType: !21, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !3376, file: !3377, line: 190, baseType: !21, size: 32, offset: 32)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !3376, file: !3377, line: 192, baseType: !45, size: 32, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !3376, file: !3377, line: 192, baseType: !45, size: 32, offset: 96)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !3376, file: !3377, line: 193, baseType: !45, size: 32, offset: 128)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !3376, file: !3377, line: 193, baseType: !45, size: 32, offset: 160)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3376, file: !3377, line: 195, baseType: !45, size: 32, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !3376, file: !3377, line: 195, baseType: !45, size: 32, offset: 224)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !3376, file: !3377, line: 196, baseType: !45, size: 32, offset: 256)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !3376, file: !3377, line: 196, baseType: !45, size: 32, offset: 288)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3376, file: !3377, line: 196, baseType: !45, size: 32, offset: 320)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !3376, file: !3377, line: 199, baseType: !45, size: 32, offset: 352)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !3376, file: !3377, line: 199, baseType: !45, size: 32, offset: 384)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !3376, file: !3377, line: 200, baseType: !45, size: 32, offset: 416)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !3376, file: !3377, line: 200, baseType: !45, size: 32, offset: 448)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !3376, file: !3377, line: 201, baseType: !45, size: 32, offset: 480)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !3376, file: !3377, line: 204, baseType: !45, size: 32, offset: 512)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !3376, file: !3377, line: 204, baseType: !45, size: 32, offset: 544)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !3376, file: !3377, line: 205, baseType: !45, size: 32, offset: 576)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !3376, file: !3377, line: 205, baseType: !45, size: 32, offset: 608)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !3376, file: !3377, line: 206, baseType: !45, size: 32, offset: 640)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !3376, file: !3377, line: 207, baseType: !45, size: 32, offset: 672)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !3376, file: !3377, line: 209, baseType: !61, size: 128, offset: 704)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !3370, file: !3363, line: 158, baseType: !3403, size: 64, offset: 1088)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !3363, line: 127, size: 544, elements: !3405)
!3405 = !{!3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3404, file: !3363, line: 129, baseType: !45, size: 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !3404, file: !3363, line: 129, baseType: !45, size: 32, offset: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !3404, file: !3363, line: 129, baseType: !45, size: 32, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !3404, file: !3363, line: 130, baseType: !45, size: 32, offset: 96)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !3404, file: !3363, line: 130, baseType: !45, size: 32, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !3404, file: !3363, line: 131, baseType: !45, size: 32, offset: 160)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !3404, file: !3363, line: 131, baseType: !45, size: 32, offset: 192)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !3404, file: !3363, line: 132, baseType: !45, size: 32, offset: 224)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !3404, file: !3363, line: 132, baseType: !45, size: 32, offset: 256)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !3404, file: !3363, line: 133, baseType: !45, size: 32, offset: 288)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !3404, file: !3363, line: 133, baseType: !45, size: 32, offset: 320)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !3404, file: !3363, line: 133, baseType: !45, size: 32, offset: 352)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !3404, file: !3363, line: 134, baseType: !45, size: 32, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3404, file: !3363, line: 135, baseType: !21, size: 32, offset: 416)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !3404, file: !3363, line: 135, baseType: !21, size: 32, offset: 448)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !3404, file: !3363, line: 136, baseType: !23, size: 16, offset: 480)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3404, file: !3363, line: 137, baseType: !1840, size: 48, offset: 496)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !3370, file: !3363, line: 160, baseType: !3424, size: 64, offset: 1152)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !3363, line: 160, flags: DIFlagFwdDecl)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3370, file: !3363, line: 162, baseType: !21, size: 32, offset: 1216)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3370, file: !3363, line: 162, baseType: !21, size: 32, offset: 1248)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3370, file: !3363, line: 163, baseType: !23, size: 16, offset: 1280)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !3370, file: !3363, line: 163, baseType: !23, size: 16, offset: 1296)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !3370, file: !3363, line: 163, baseType: !23, size: 16, offset: 1312)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !3370, file: !3363, line: 163, baseType: !23, size: 16, offset: 1328)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !3370, file: !3363, line: 165, baseType: !23, size: 16, offset: 1344)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !3370, file: !3363, line: 165, baseType: !23, size: 16, offset: 1360)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !3370, file: !3363, line: 165, baseType: !23, size: 16, offset: 1376)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !3370, file: !3363, line: 165, baseType: !23, size: 16, offset: 1392)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !3370, file: !3363, line: 166, baseType: !21, size: 32, offset: 1408)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3370, file: !3363, line: 166, baseType: !21, size: 32, offset: 1440)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !3370, file: !3363, line: 167, baseType: !23, size: 16, offset: 1472)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !3370, file: !3363, line: 167, baseType: !23, size: 16, offset: 1488)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !3370, file: !3363, line: 167, baseType: !23, size: 16, offset: 1504)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3370, file: !3363, line: 167, baseType: !23, size: 16, offset: 1520)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !3370, file: !3363, line: 168, baseType: !23, size: 16, offset: 1536)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !3370, file: !3363, line: 168, baseType: !23, size: 16, offset: 1552)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !3370, file: !3363, line: 168, baseType: !23, size: 16, offset: 1568)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !3370, file: !3363, line: 170, baseType: !23, size: 16, offset: 1584)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !3370, file: !3363, line: 170, baseType: !23, size: 16, offset: 1600)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !3370, file: !3363, line: 171, baseType: !23, size: 16, offset: 1616)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !3370, file: !3363, line: 171, baseType: !23, size: 16, offset: 1632)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !3370, file: !3363, line: 174, baseType: !23, size: 16, offset: 1648)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !3370, file: !3363, line: 174, baseType: !23, size: 16, offset: 1664)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !3370, file: !3363, line: 176, baseType: !23, size: 16, offset: 1680)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !3370, file: !3363, line: 176, baseType: !23, size: 16, offset: 1696)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !3370, file: !3363, line: 176, baseType: !23, size: 16, offset: 1712)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !3370, file: !3363, line: 176, baseType: !23, size: 16, offset: 1728)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !3370, file: !3363, line: 177, baseType: !23, size: 16, offset: 1744)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !3370, file: !3363, line: 178, baseType: !23, size: 16, offset: 1760)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !3370, file: !3363, line: 178, baseType: !23, size: 16, offset: 1776)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !3370, file: !3363, line: 181, baseType: !23, size: 16, offset: 1792)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !3370, file: !3363, line: 181, baseType: !23, size: 16, offset: 1808)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !3370, file: !3363, line: 181, baseType: !23, size: 16, offset: 1824)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !3370, file: !3363, line: 181, baseType: !23, size: 16, offset: 1840)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !3370, file: !3363, line: 182, baseType: !45, size: 32, offset: 1856)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !3370, file: !3363, line: 182, baseType: !45, size: 32, offset: 1888)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !3370, file: !3363, line: 182, baseType: !1143, size: 64, offset: 1920)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !3370, file: !3363, line: 182, baseType: !1143, size: 64, offset: 1984)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !3370, file: !3363, line: 182, baseType: !45, size: 32, offset: 2048)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !3370, file: !3363, line: 182, baseType: !45, size: 32, offset: 2080)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !3370, file: !3363, line: 185, baseType: !45, size: 32, offset: 2112)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !3370, file: !3363, line: 188, baseType: !23, size: 16, offset: 2144)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !3370, file: !3363, line: 188, baseType: !23, size: 16, offset: 2160)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !3370, file: !3363, line: 189, baseType: !45, size: 32, offset: 2176)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !3370, file: !3363, line: 189, baseType: !45, size: 32, offset: 2208)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !3370, file: !3363, line: 190, baseType: !45, size: 32, offset: 2240)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !3370, file: !3363, line: 193, baseType: !45, size: 32, offset: 2272)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3370, file: !3363, line: 193, baseType: !45, size: 32, offset: 2304)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3370, file: !3363, line: 193, baseType: !45, size: 32, offset: 2336)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !3370, file: !3363, line: 193, baseType: !45, size: 32, offset: 2368)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !3370, file: !3363, line: 194, baseType: !45, size: 32, offset: 2400)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !3370, file: !3363, line: 194, baseType: !45, size: 32, offset: 2432)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !3370, file: !3363, line: 195, baseType: !45, size: 32, offset: 2464)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !3370, file: !3363, line: 195, baseType: !45, size: 32, offset: 2496)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !3370, file: !3363, line: 195, baseType: !45, size: 32, offset: 2528)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !3370, file: !3363, line: 195, baseType: !3484, size: 32, offset: 2560)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 32, elements: !289)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3370, file: !3363, line: 196, baseType: !21, size: 32, offset: 2592)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !3370, file: !3363, line: 196, baseType: !21, size: 32, offset: 2624)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !3370, file: !3363, line: 196, baseType: !21, size: 32, offset: 2656)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !3370, file: !3363, line: 196, baseType: !21, size: 32, offset: 2688)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !3370, file: !3363, line: 197, baseType: !23, size: 16, offset: 2720)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !3370, file: !3363, line: 197, baseType: !1840, size: 48, offset: 2736)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2784)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2816)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2848)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2880)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2912)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2944)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !3370, file: !3363, line: 200, baseType: !45, size: 32, offset: 2976)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !3370, file: !3363, line: 201, baseType: !188, size: 96, offset: 3008)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !3370, file: !3363, line: 202, baseType: !45, size: 32, offset: 3104)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !3370, file: !3363, line: 202, baseType: !45, size: 32, offset: 3136)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !3370, file: !3363, line: 202, baseType: !45, size: 32, offset: 3168)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !3370, file: !3363, line: 202, baseType: !45, size: 32, offset: 3200)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !3370, file: !3363, line: 204, baseType: !45, size: 32, offset: 3232)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3370, file: !3363, line: 204, baseType: !45, size: 32, offset: 3264)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !3370, file: !3363, line: 204, baseType: !45, size: 32, offset: 3296)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3370, file: !3363, line: 206, baseType: !188, size: 96, offset: 3328)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !3370, file: !3363, line: 206, baseType: !45, size: 32, offset: 3424)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !3370, file: !3363, line: 206, baseType: !45, size: 32, offset: 3456)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !3370, file: !3363, line: 206, baseType: !45, size: 32, offset: 3488)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !3370, file: !3363, line: 208, baseType: !45, size: 32, offset: 3520)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !3370, file: !3363, line: 210, baseType: !21, size: 32, offset: 3552)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !3370, file: !3363, line: 210, baseType: !21, size: 32, offset: 3584)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !3370, file: !3363, line: 211, baseType: !45, size: 32, offset: 3616)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !3370, file: !3363, line: 211, baseType: !45, size: 32, offset: 3648)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !3370, file: !3363, line: 211, baseType: !45, size: 32, offset: 3680)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !3370, file: !3363, line: 212, baseType: !45, size: 32, offset: 3712)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !3370, file: !3363, line: 212, baseType: !45, size: 32, offset: 3744)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !3370, file: !3363, line: 214, baseType: !45, size: 32, offset: 3776)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !3370, file: !3363, line: 214, baseType: !45, size: 32, offset: 3808)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !3370, file: !3363, line: 216, baseType: !45, size: 32, offset: 3840)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !3370, file: !3363, line: 216, baseType: !45, size: 32, offset: 3872)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !3370, file: !3363, line: 216, baseType: !45, size: 32, offset: 3904)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !3370, file: !3363, line: 216, baseType: !45, size: 32, offset: 3936)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !3370, file: !3363, line: 217, baseType: !45, size: 32, offset: 3968)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !3370, file: !3363, line: 219, baseType: !45, size: 32, offset: 4000)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !3370, file: !3363, line: 219, baseType: !45, size: 32, offset: 4032)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !3370, file: !3363, line: 220, baseType: !45, size: 32, offset: 4064)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !3370, file: !3363, line: 220, baseType: !45, size: 32, offset: 4096)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !3370, file: !3363, line: 220, baseType: !45, size: 32, offset: 4128)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !3370, file: !3363, line: 221, baseType: !45, size: 32, offset: 4160)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !3370, file: !3363, line: 221, baseType: !45, size: 32, offset: 4192)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !3370, file: !3363, line: 223, baseType: !45, size: 32, offset: 4224)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !3370, file: !3363, line: 223, baseType: !45, size: 32, offset: 4256)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !3370, file: !3363, line: 225, baseType: !45, size: 32, offset: 4288)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !3370, file: !3363, line: 226, baseType: !45, size: 32, offset: 4320)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !3370, file: !3363, line: 226, baseType: !45, size: 32, offset: 4352)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !3370, file: !3363, line: 228, baseType: !45, size: 32, offset: 4384)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !3370, file: !3363, line: 230, baseType: !1143, size: 64, offset: 4416)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !3370, file: !3363, line: 231, baseType: !45, size: 32, offset: 4480)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !3370, file: !3363, line: 231, baseType: !45, size: 32, offset: 4512)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !3370, file: !3363, line: 232, baseType: !21, size: 32, offset: 4544)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !3370, file: !3363, line: 234, baseType: !21, size: 32, offset: 4576)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3370, file: !3363, line: 236, baseType: !314, size: 1152, offset: 4608)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !3370, file: !3363, line: 238, baseType: !536, size: 64, offset: 5760)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !3370, file: !3363, line: 239, baseType: !61, size: 128, offset: 5824)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !3370, file: !3363, line: 240, baseType: !536, size: 64, offset: 5952)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !3370, file: !3363, line: 241, baseType: !323, size: 64, offset: 6016)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !3370, file: !3363, line: 242, baseType: !323, size: 64, offset: 6080)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3370, file: !3363, line: 243, baseType: !344, size: 64, offset: 6144)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !3370, file: !3363, line: 244, baseType: !530, size: 64, offset: 6208)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !3370, file: !3363, line: 245, baseType: !530, size: 64, offset: 6272)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !3370, file: !3363, line: 248, baseType: !23, size: 16, offset: 6336)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3370, file: !3363, line: 249, baseType: !1840, size: 48, offset: 6352)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !3362, file: !3363, line: 261, baseType: !3555, size: 64, offset: 192)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !3363, line: 125, baseType: !3557)
!3557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !3363, line: 95, size: 1600, elements: !3558)
!3558 = !{!3559, !3568, !3569, !3579, !3581, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3557, file: !3363, line: 96, baseType: !3560, size: 448)
!3560 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !3363, line: 55, baseType: !3561)
!3561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !3363, line: 49, size: 448, elements: !3562)
!3562 = !{!3563, !3564, !3565, !3566, !3567}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3561, file: !3363, line: 50, baseType: !188, size: 96)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3561, file: !3363, line: 51, baseType: !188, size: 96, offset: 96)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3561, file: !3363, line: 52, baseType: !270, size: 128, offset: 192)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !3561, file: !3363, line: 53, baseType: !188, size: 96, offset: 320)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3561, file: !3363, line: 54, baseType: !45, size: 32, offset: 416)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !3557, file: !3363, line: 98, baseType: !3560, size: 448, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !3557, file: !3363, line: 100, baseType: !3570, size: 64, offset: 896)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !3363, line: 47, baseType: !3572)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !3363, line: 41, size: 192, elements: !3573)
!3573 = !{!3574, !3575, !3576, !3577, !3578}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3572, file: !3363, line: 42, baseType: !188, size: 96)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3572, file: !3363, line: 43, baseType: !45, size: 32, offset: 96)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3572, file: !3363, line: 44, baseType: !45, size: 32, offset: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3572, file: !3363, line: 45, baseType: !23, size: 16, offset: 160)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3572, file: !3363, line: 46, baseType: !23, size: 16, offset: 176)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3557, file: !3363, line: 102, baseType: !3580, size: 64, offset: 960)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !3557, file: !3363, line: 104, baseType: !3582, size: 64, offset: 1024)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !3363, line: 63, baseType: !3584)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !3363, line: 57, size: 448, elements: !3585)
!3585 = !{!3586, !3587, !3594, !3595, !3596}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !3584, file: !3363, line: 58, baseType: !323, size: 64)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3584, file: !3363, line: 59, baseType: !3588, size: 160, offset: 64)
!3588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !3377, line: 109, size: 160, elements: !3589)
!3589 = !{!3590, !3591, !3592, !3593}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !3588, file: !3377, line: 110, baseType: !45, size: 32)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !3588, file: !3377, line: 110, baseType: !188, size: 96, offset: 32)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !3588, file: !3377, line: 111, baseType: !23, size: 16, offset: 128)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3588, file: !3377, line: 111, baseType: !23, size: 16, offset: 144)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3584, file: !3363, line: 60, baseType: !188, size: 96, offset: 224)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !3584, file: !3363, line: 61, baseType: !188, size: 96, offset: 320)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3584, file: !3363, line: 62, baseType: !45, size: 32, offset: 416)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !3557, file: !3363, line: 106, baseType: !21, size: 32, offset: 1088)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3557, file: !3363, line: 108, baseType: !45, size: 32, offset: 1120)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !3557, file: !3363, line: 108, baseType: !45, size: 32, offset: 1152)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !3557, file: !3363, line: 109, baseType: !45, size: 32, offset: 1184)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3557, file: !3363, line: 111, baseType: !21, size: 32, offset: 1216)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !3557, file: !3363, line: 112, baseType: !21, size: 32, offset: 1248)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3557, file: !3363, line: 114, baseType: !270, size: 128, offset: 1280)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3557, file: !3363, line: 114, baseType: !45, size: 32, offset: 1408)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3557, file: !3363, line: 117, baseType: !45, size: 32, offset: 1440)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !3557, file: !3363, line: 119, baseType: !45, size: 32, offset: 1472)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3557, file: !3363, line: 120, baseType: !21, size: 32, offset: 1504)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !3557, file: !3363, line: 122, baseType: !21, size: 32, offset: 1536)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3557, file: !3363, line: 123, baseType: !23, size: 16, offset: 1568)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !3557, file: !3363, line: 124, baseType: !23, size: 16, offset: 1584)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3362, file: !3363, line: 262, baseType: !3612, size: 64, offset: 256)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !3363, line: 77, baseType: !3614)
!3614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !3363, line: 71, size: 512, elements: !3615)
!3615 = !{!3616, !3617, !3618, !3619, !3620, !3621, !3622}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3614, file: !3363, line: 72, baseType: !21, size: 32)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3614, file: !3363, line: 72, baseType: !21, size: 32, offset: 32)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !3614, file: !3363, line: 73, baseType: !2384, size: 128, offset: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3614, file: !3363, line: 74, baseType: !270, size: 128, offset: 192)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !3614, file: !3363, line: 75, baseType: !270, size: 128, offset: 320)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !3614, file: !3363, line: 75, baseType: !45, size: 32, offset: 448)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3614, file: !3363, line: 76, baseType: !45, size: 32, offset: 480)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !3362, file: !3363, line: 264, baseType: !3624, size: 64, offset: 320)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !3363, line: 264, flags: DIFlagFwdDecl)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !3362, file: !3363, line: 265, baseType: !3627, size: 64, offset: 384)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{null, !3624}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !3362, file: !3363, line: 267, baseType: !3631, size: 64, offset: 448)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !3634, line: 123, size: 480, elements: !3635)
!3634 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3635 = !{!3636, !3637, !3638, !3639, !3640, !3641}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3633, file: !3634, line: 124, baseType: !188, size: 96)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !3633, file: !3634, line: 125, baseType: !188, size: 96, offset: 96)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3633, file: !3634, line: 126, baseType: !270, size: 128, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3633, file: !3634, line: 127, baseType: !188, size: 96, offset: 320)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3633, file: !3634, line: 128, baseType: !45, size: 32, offset: 416)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !3633, file: !3634, line: 129, baseType: !21, size: 32, offset: 448)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !3362, file: !3363, line: 268, baseType: !3631, size: 64, offset: 512)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !3362, file: !3363, line: 269, baseType: !59, size: 128, offset: 576)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !3362, file: !3363, line: 269, baseType: !59, size: 128, offset: 704)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !3362, file: !3363, line: 271, baseType: !3646, size: 64, offset: 832)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !556, line: 557, size: 1344, elements: !3648)
!3648 = !{!3649, !3650, !3651, !3654, !3657, !3660, !3661}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !3647, file: !556, line: 558, baseType: !559, size: 896)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3647, file: !556, line: 560, baseType: !571, size: 64, offset: 896)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !3647, file: !556, line: 561, baseType: !3652, size: 64, offset: 960)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !556, line: 561, flags: DIFlagFwdDecl)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !3647, file: !556, line: 562, baseType: !3655, size: 64, offset: 1024)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !556, line: 562, flags: DIFlagFwdDecl)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !3647, file: !556, line: 563, baseType: !3658, size: 64, offset: 1088)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !556, line: 563, flags: DIFlagFwdDecl)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !3647, file: !556, line: 564, baseType: !1927, size: 64, offset: 1152)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3647, file: !556, line: 565, baseType: !61, size: 128, offset: 1216)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !3362, file: !3363, line: 272, baseType: !2216, size: 64, offset: 896)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !3362, file: !3363, line: 272, baseType: !2216, size: 64, offset: 960)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !3362, file: !3363, line: 274, baseType: !323, size: 64, offset: 1024)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !3362, file: !3363, line: 276, baseType: !3666, size: 64, offset: 1088)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !3363, line: 276, flags: DIFlagFwdDecl)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3362, file: !3363, line: 278, baseType: !323, size: 64, offset: 1152)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !3362, file: !3363, line: 280, baseType: !61, size: 128, offset: 1216)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3362, file: !3363, line: 282, baseType: !138, size: 512, offset: 1344)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3362, file: !3363, line: 284, baseType: !462, size: 512, offset: 1856)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !3362, file: !3363, line: 285, baseType: !45, size: 32, offset: 2368)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !3362, file: !3363, line: 285, baseType: !45, size: 32, offset: 2400)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !3362, file: !3363, line: 285, baseType: !45, size: 32, offset: 2432)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3362, file: !3363, line: 286, baseType: !21, size: 32, offset: 2464)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !3362, file: !3363, line: 286, baseType: !21, size: 32, offset: 2496)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2528)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2560)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2592)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2624)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2656)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !3362, file: !3363, line: 287, baseType: !21, size: 32, offset: 2688)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !3362, file: !3363, line: 288, baseType: !23, size: 16, offset: 2720)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !3362, file: !3363, line: 288, baseType: !23, size: 16, offset: 2736)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !3362, file: !3363, line: 288, baseType: !23, size: 16, offset: 2752)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !3362, file: !3363, line: 288, baseType: !23, size: 16, offset: 2768)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !3362, file: !3363, line: 290, baseType: !3688, size: 1536, offset: 2784)
!3688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 1536, elements: !3689)
!3689 = !{!190, !140}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !3362, file: !3363, line: 293, baseType: !3691, size: 192, offset: 4320)
!3691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 192, elements: !3692)
!3692 = !{!3693}
!3693 = !DISubrange(count: 12)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !3362, file: !3363, line: 293, baseType: !23, size: 16, offset: 4512)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !3362, file: !3363, line: 293, baseType: !23, size: 16, offset: 4528)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !3362, file: !3363, line: 296, baseType: !64, size: 64, offset: 4544)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !3362, file: !3363, line: 299, baseType: !1927, size: 64, offset: 4608)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !3362, file: !3363, line: 300, baseType: !61, size: 128, offset: 4672)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !3362, file: !3363, line: 302, baseType: !3700, size: 64, offset: 4800)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !3362, file: !3363, line: 304, baseType: !3702, size: 64, offset: 4864)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !3363, line: 68, baseType: !3704)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !3363, line: 65, size: 128, elements: !3705)
!3705 = !{!3706, !3707, !3708}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !3704, file: !3363, line: 66, baseType: !45, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !3704, file: !3363, line: 67, baseType: !664, size: 64, offset: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !3704, file: !3363, line: 67, baseType: !79, size: 32, offset: 96)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !3362, file: !3363, line: 305, baseType: !21, size: 32, offset: 4928)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !3362, file: !3363, line: 305, baseType: !21, size: 32, offset: 4960)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !3362, file: !3363, line: 307, baseType: !3712, size: 64, offset: 4992)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !3363, line: 307, flags: DIFlagFwdDecl)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !3362, file: !3363, line: 308, baseType: !3715, size: 64, offset: 5056)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !556, line: 583, flags: DIFlagFwdDecl)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !3362, file: !3363, line: 310, baseType: !3718, size: 64, offset: 5120)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !3634, line: 237, size: 704, elements: !3720)
!3720 = !{!3721, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3719, file: !3634, line: 238, baseType: !44, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !3719, file: !3634, line: 238, baseType: !44, size: 64, offset: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !3719, file: !3634, line: 239, baseType: !44, size: 64, offset: 128)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !3719, file: !3634, line: 239, baseType: !44, size: 64, offset: 192)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !3719, file: !3634, line: 240, baseType: !44, size: 64, offset: 256)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !3719, file: !3634, line: 240, baseType: !44, size: 64, offset: 320)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !3719, file: !3634, line: 241, baseType: !44, size: 64, offset: 384)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !3719, file: !3634, line: 241, baseType: !44, size: 64, offset: 448)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !3719, file: !3634, line: 242, baseType: !44, size: 64, offset: 512)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !3719, file: !3634, line: 243, baseType: !21, size: 32, offset: 576)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3719, file: !3634, line: 243, baseType: !21, size: 32, offset: 608)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !3719, file: !3634, line: 244, baseType: !21, size: 32, offset: 640)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !3719, file: !3634, line: 244, baseType: !21, size: 32, offset: 672)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !3362, file: !3363, line: 312, baseType: !45, size: 32, offset: 5184)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !3362, file: !3363, line: 313, baseType: !45, size: 32, offset: 5216)
!3736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !3737, retainedTypes: !3971, globals: !4165, splitDebugInlining: false, nameTableKind: None)
!3737 = !{!2243, !2251, !2421, !2496, !2508, !3738, !3750, !3756, !3808, !3823, !3836, !3841, !3884, !3894, !3904, !3911, !3915, !3923, !3928, !3937}
!3738 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3739, line: 123, baseType: !79, size: 32, elements: !3740)
!3739 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3740 = !{!3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749}
!3741 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!3742 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!3743 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!3744 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!3745 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!3746 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!3747 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!3748 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!3749 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!3750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !325, line: 519, baseType: !79, size: 32, elements: !3751)
!3751 = !{!3752, !3753, !3754, !3755}
!3752 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!3753 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!3754 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!3755 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!3756 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !556, line: 35, baseType: !79, size: 32, elements: !3757)
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807}
!3758 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!3759 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!3760 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!3761 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!3762 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!3763 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!3764 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!3765 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!3766 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!3767 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!3768 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!3769 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!3770 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!3771 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!3772 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!3773 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!3774 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!3775 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!3776 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!3777 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!3778 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!3779 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!3780 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!3781 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!3782 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!3783 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!3784 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!3785 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!3786 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!3787 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!3788 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!3789 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!3790 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!3791 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!3792 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!3793 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!3794 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!3795 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!3796 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!3797 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!3798 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!3799 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!3800 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!3801 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!3802 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!3803 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!3804 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!3805 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!3806 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!3807 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!3808 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !325, line: 394, baseType: !79, size: 32, elements: !3809)
!3809 = !{!3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822}
!3810 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!3811 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!3812 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!3813 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!3814 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!3815 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!3816 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!3817 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!3818 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!3819 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!3820 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!3821 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!3822 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!3823 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !325, line: 339, baseType: !79, size: 32, elements: !3824)
!3824 = !{!3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835}
!3825 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!3826 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!3827 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!3828 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!3829 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!3830 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!3831 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!3832 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!3833 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!3834 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!3835 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!3836 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !325, line: 619, baseType: !79, size: 32, elements: !3837)
!3837 = !{!3838, !3839, !3840}
!3838 = !DIEnumerator(name: "OB_RESTRICT_VIEW", value: 1, isUnsigned: true)
!3839 = !DIEnumerator(name: "OB_RESTRICT_SELECT", value: 2, isUnsigned: true)
!3840 = !DIEnumerator(name: "OB_RESTRICT_RENDER", value: 4, isUnsigned: true)
!3841 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2080, line: 76, baseType: !79, size: 32, elements: !3842)
!3842 = !{!3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883}
!3843 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!3844 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!3845 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!3846 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!3847 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!3848 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!3849 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!3850 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!3851 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!3852 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!3853 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!3854 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!3855 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!3856 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!3857 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!3858 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!3859 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!3860 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!3861 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!3862 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!3863 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!3864 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!3865 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!3866 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!3867 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!3868 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!3869 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!3870 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!3871 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!3872 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!3873 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!3874 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!3875 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!3876 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!3877 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!3878 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!3879 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!3880 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!3881 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!3882 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!3883 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!3884 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ObjectMode", file: !325, line: 666, baseType: !79, size: 32, elements: !3885)
!3885 = !{!3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893}
!3886 = !DIEnumerator(name: "OB_MODE_OBJECT", value: 0, isUnsigned: true)
!3887 = !DIEnumerator(name: "OB_MODE_EDIT", value: 1, isUnsigned: true)
!3888 = !DIEnumerator(name: "OB_MODE_SCULPT", value: 2, isUnsigned: true)
!3889 = !DIEnumerator(name: "OB_MODE_VERTEX_PAINT", value: 4, isUnsigned: true)
!3890 = !DIEnumerator(name: "OB_MODE_WEIGHT_PAINT", value: 8, isUnsigned: true)
!3891 = !DIEnumerator(name: "OB_MODE_TEXTURE_PAINT", value: 16, isUnsigned: true)
!3892 = !DIEnumerator(name: "OB_MODE_PARTICLE_EDIT", value: 32, isUnsigned: true)
!3893 = !DIEnumerator(name: "OB_MODE_POSE", value: 64, isUnsigned: true)
!3894 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !556, line: 88, baseType: !21, size: 32, elements: !3895)
!3895 = !{!3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903}
!3896 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!3897 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!3898 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!3899 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!3900 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!3901 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!3902 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!3903 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!3904 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1252, line: 332, baseType: !79, size: 32, elements: !3905)
!3905 = !{!3906, !3907, !3908, !3909, !3910}
!3906 = !DIEnumerator(name: "ME_V1V2", value: 1, isUnsigned: true)
!3907 = !DIEnumerator(name: "ME_V2V3", value: 2, isUnsigned: true)
!3908 = !DIEnumerator(name: "ME_V3V1", value: 4, isUnsigned: true)
!3909 = !DIEnumerator(name: "ME_V3V4", value: 4, isUnsigned: true)
!3910 = !DIEnumerator(name: "ME_V4V1", value: 8, isUnsigned: true)
!3911 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1252, line: 341, baseType: !79, size: 32, elements: !3912)
!3912 = !{!3913, !3914}
!3913 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!3914 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!3915 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1252, line: 313, baseType: !79, size: 32, elements: !3916)
!3916 = !{!3917, !3918, !3919, !3920, !3921, !3922}
!3917 = !DIEnumerator(name: "ME_EDGEDRAW", value: 2, isUnsigned: true)
!3918 = !DIEnumerator(name: "ME_SEAM", value: 4, isUnsigned: true)
!3919 = !DIEnumerator(name: "ME_EDGERENDER", value: 32, isUnsigned: true)
!3920 = !DIEnumerator(name: "ME_LOOSEEDGE", value: 128, isUnsigned: true)
!3921 = !DIEnumerator(name: "ME_EDGE_TMP_TAG", value: 256, isUnsigned: true)
!3922 = !DIEnumerator(name: "ME_SHARP", value: 512, isUnsigned: true)
!3923 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !556, line: 674, baseType: !79, size: 32, elements: !3924)
!3924 = !{!3925, !3926, !3927}
!3925 = !DIEnumerator(name: "eParticleSystemFlag_Pars", value: 1, isUnsigned: true)
!3926 = !DIEnumerator(name: "eParticleSystemFlag_psys_updated", value: 2, isUnsigned: true)
!3927 = !DIEnumerator(name: "eParticleSystemFlag_file_loaded", value: 4, isUnsigned: true)
!3928 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !325, line: 432, baseType: !79, size: 32, elements: !3929)
!3929 = !{!3930, !3931, !3932, !3933, !3934, !3935, !3936}
!3930 = !DIEnumerator(name: "OB_BOUNDBOX", value: 1, isUnsigned: true)
!3931 = !DIEnumerator(name: "OB_WIRE", value: 2, isUnsigned: true)
!3932 = !DIEnumerator(name: "OB_SOLID", value: 3, isUnsigned: true)
!3933 = !DIEnumerator(name: "OB_MATERIAL", value: 4, isUnsigned: true)
!3934 = !DIEnumerator(name: "OB_TEXTURE", value: 5, isUnsigned: true)
!3935 = !DIEnumerator(name: "OB_RENDER", value: 6, isUnsigned: true)
!3936 = !DIEnumerator(name: "OB_PAINT", value: 100, isUnsigned: true)
!3937 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !417, line: 213, baseType: !21, size: 32, elements: !3938)
!3938 = !{!3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970}
!3939 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!3940 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!3941 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!3942 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!3943 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!3944 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!3945 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!3946 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!3947 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!3948 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!3949 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!3950 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!3951 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!3952 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!3953 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!3954 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!3955 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!3956 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!3957 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!3958 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!3959 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!3960 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!3961 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!3962 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!3963 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!3964 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!3965 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!3966 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!3967 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!3968 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!3969 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!3970 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!3971 = !{!45, !64, !3972, !3974, !4037, !4076, !21, !934, !4145, !4147, !4149, !2417, !4154, !2159, !2418, !444, !4157, !4159, !4161, !2482, !44}
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_typedef, name: "FluidsimModifierData", file: !556, line: 734, baseType: !555)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampRen", file: !10, line: 615, baseType: !3976)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampRen", file: !10, line: 540, size: 5376, elements: !3977)
!3977 = !{!3978, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4031, !4032, !4033, !4034, !4035, !4036, !4075, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4140, !4142, !4143, !4144}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3976, file: !10, line: 541, baseType: !3979, size: 64)
!3979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3976, file: !10, line: 541, baseType: !3979, size: 64, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !3976, file: !10, line: 543, baseType: !45, size: 32, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !3976, file: !10, line: 543, baseType: !45, size: 32, offset: 160)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3976, file: !10, line: 543, baseType: !45, size: 32, offset: 192)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3976, file: !10, line: 544, baseType: !188, size: 96, offset: 224)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3976, file: !10, line: 545, baseType: !23, size: 16, offset: 320)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3976, file: !10, line: 546, baseType: !21, size: 32, offset: 352)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3976, file: !10, line: 547, baseType: !45, size: 32, offset: 384)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3976, file: !10, line: 547, baseType: !45, size: 32, offset: 416)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3976, file: !10, line: 547, baseType: !45, size: 32, offset: 448)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3976, file: !10, line: 547, baseType: !45, size: 32, offset: 480)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !3976, file: !10, line: 548, baseType: !45, size: 32, offset: 512)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !3976, file: !10, line: 548, baseType: !45, size: 32, offset: 544)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !3976, file: !10, line: 548, baseType: !45, size: 32, offset: 576)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !3976, file: !10, line: 549, baseType: !45, size: 32, offset: 608)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !3976, file: !10, line: 549, baseType: !45, size: 32, offset: 640)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !3976, file: !10, line: 550, baseType: !21, size: 32, offset: 672)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "spotsi", scope: !3976, file: !10, line: 551, baseType: !45, size: 32, offset: 704)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "spotbl", scope: !3976, file: !10, line: 551, baseType: !45, size: 32, offset: 736)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3976, file: !10, line: 552, baseType: !188, size: 96, offset: 768)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "xsp", scope: !3976, file: !10, line: 553, baseType: !45, size: 32, offset: 864)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "ysp", scope: !3976, file: !10, line: 553, baseType: !45, size: 32, offset: 896)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "distkw", scope: !3976, file: !10, line: 553, baseType: !45, size: 32, offset: 928)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "inpr", scope: !3976, file: !10, line: 553, baseType: !45, size: 32, offset: 960)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "halokw", scope: !3976, file: !10, line: 554, baseType: !45, size: 32, offset: 992)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "halo", scope: !3976, file: !10, line: 554, baseType: !45, size: 32, offset: 1024)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !3976, file: !10, line: 556, baseType: !23, size: 16, offset: 1056)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "ld1", scope: !3976, file: !10, line: 557, baseType: !45, size: 32, offset: 1088)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "ld2", scope: !3976, file: !10, line: 557, baseType: !45, size: 32, offset: 1120)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !3976, file: !10, line: 558, baseType: !1543, size: 64, offset: 1152)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !3976, file: !10, line: 562, baseType: !23, size: 16, offset: 1216)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !3976, file: !10, line: 564, baseType: !23, size: 16, offset: 1232)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3976, file: !10, line: 566, baseType: !45, size: 32, offset: 1248)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !3976, file: !10, line: 568, baseType: !23, size: 16, offset: 1280)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !3976, file: !10, line: 568, baseType: !23, size: 16, offset: 1296)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !3976, file: !10, line: 570, baseType: !23, size: 16, offset: 1312)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !3976, file: !10, line: 572, baseType: !23, size: 16, offset: 1328)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !3976, file: !10, line: 574, baseType: !23, size: 16, offset: 1344)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !3976, file: !10, line: 576, baseType: !45, size: 32, offset: 1376)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !3976, file: !10, line: 578, baseType: !45, size: 32, offset: 1408)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !3976, file: !10, line: 580, baseType: !45, size: 32, offset: 1440)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !3976, file: !10, line: 582, baseType: !45, size: 32, offset: 1472)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1504)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1520)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1536)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1552)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1568)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1584)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "ray_totsamp", scope: !3976, file: !10, line: 584, baseType: !23, size: 16, offset: 1600)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "xold", scope: !3976, file: !10, line: 585, baseType: !4030, size: 16, offset: 1616)
!4030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 16, elements: !289)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "yold", scope: !3976, file: !10, line: 585, baseType: !4030, size: 16, offset: 1632)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !3976, file: !10, line: 586, baseType: !45, size: 32, offset: 1664)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !3976, file: !10, line: 586, baseType: !45, size: 32, offset: 1696)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !3976, file: !10, line: 586, baseType: !45, size: 32, offset: 1728)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !3976, file: !10, line: 587, baseType: !45, size: 32, offset: 1760)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "sunsky", scope: !3976, file: !10, line: 590, baseType: !4037, size: 64, offset: 1792)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SunSky", file: !4039, line: 32, size: 1792, elements: !4040)
!4039 = !DIFile(filename: "blender/source/blender/render/intern/include/sunsky.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4040 = !{!4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "effect_type", scope: !4038, file: !4039, line: 33, baseType: !23, size: 16)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !4038, file: !4039, line: 33, baseType: !23, size: 16, offset: 16)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !4038, file: !4039, line: 33, baseType: !23, size: 16, offset: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "turbidity", scope: !4038, file: !4039, line: 34, baseType: !45, size: 32, offset: 64)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "theta", scope: !4038, file: !4039, line: 35, baseType: !45, size: 32, offset: 96)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "phi", scope: !4038, file: !4039, line: 35, baseType: !45, size: 32, offset: 128)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "toSun", scope: !4038, file: !4039, line: 37, baseType: !188, size: 96, offset: 160)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "sunSolidAngle", scope: !4038, file: !4039, line: 40, baseType: !45, size: 32, offset: 256)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_Y", scope: !4038, file: !4039, line: 42, baseType: !45, size: 32, offset: 288)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_x", scope: !4038, file: !4039, line: 42, baseType: !45, size: 32, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "zenith_y", scope: !4038, file: !4039, line: 42, baseType: !45, size: 32, offset: 352)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "perez_Y", scope: !4038, file: !4039, line: 44, baseType: !4053, size: 160, offset: 384)
!4053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 160, elements: !1299)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "perez_x", scope: !4038, file: !4039, line: 44, baseType: !4053, size: 160, offset: 544)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "perez_y", scope: !4038, file: !4039, line: 44, baseType: !4053, size: 160, offset: 704)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !4038, file: !4039, line: 47, baseType: !45, size: 32, offset: 864)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !4038, file: !4039, line: 48, baseType: !45, size: 32, offset: 896)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !4038, file: !4039, line: 49, baseType: !45, size: 32, offset: 928)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !4038, file: !4039, line: 50, baseType: !45, size: 32, offset: 960)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !4038, file: !4039, line: 51, baseType: !45, size: 32, offset: 992)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !4038, file: !4039, line: 52, baseType: !45, size: 32, offset: 1024)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !4038, file: !4039, line: 53, baseType: !45, size: 32, offset: 1056)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "atm_HGg", scope: !4038, file: !4039, line: 55, baseType: !45, size: 32, offset: 1088)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "atm_SunIntensity", scope: !4038, file: !4039, line: 57, baseType: !45, size: 32, offset: 1120)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "atm_InscatteringMultiplier", scope: !4038, file: !4039, line: 58, baseType: !45, size: 32, offset: 1152)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "atm_ExtinctionMultiplier", scope: !4038, file: !4039, line: 59, baseType: !45, size: 32, offset: 1184)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRayMultiplier", scope: !4038, file: !4039, line: 60, baseType: !45, size: 32, offset: 1216)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMieMultiplier", scope: !4038, file: !4039, line: 61, baseType: !45, size: 32, offset: 1248)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "atm_DistanceMultiplier", scope: !4038, file: !4039, line: 62, baseType: !45, size: 32, offset: 1280)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRay", scope: !4038, file: !4039, line: 64, baseType: !188, size: 96, offset: 1312)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashRay", scope: !4038, file: !4039, line: 65, baseType: !188, size: 96, offset: 1408)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaMie", scope: !4038, file: !4039, line: 66, baseType: !188, size: 96, offset: 1504)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaDashMie", scope: !4038, file: !4039, line: 67, baseType: !188, size: 96, offset: 1600)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "atm_BetaRM", scope: !4038, file: !4039, line: 68, baseType: !188, size: 96, offset: 1696)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "shb", scope: !3976, file: !10, line: 592, baseType: !4076, size: 64, offset: 1856)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadBuf", file: !10, line: 297, size: 2240, elements: !4078)
!4078 = !{!4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !4077, file: !10, line: 299, baseType: !23, size: 16)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !4077, file: !10, line: 299, baseType: !23, size: 16, offset: 16)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "totbuf", scope: !4077, file: !10, line: 299, baseType: !23, size: 16, offset: 32)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "persmat", scope: !4077, file: !10, line: 300, baseType: !462, size: 512, offset: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !4077, file: !10, line: 301, baseType: !462, size: 512, offset: 576)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !4077, file: !10, line: 302, baseType: !462, size: 512, offset: 1088)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !4077, file: !10, line: 303, baseType: !44, size: 64, offset: 1600)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4077, file: !10, line: 303, baseType: !44, size: 64, offset: 1664)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4077, file: !10, line: 304, baseType: !45, size: 32, offset: 1728)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !4077, file: !10, line: 304, baseType: !45, size: 32, offset: 1760)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "pixsize", scope: !4077, file: !10, line: 304, baseType: !45, size: 32, offset: 1792)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4077, file: !10, line: 304, baseType: !45, size: 32, offset: 1824)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !4077, file: !10, line: 304, baseType: !45, size: 32, offset: 1856)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4077, file: !10, line: 305, baseType: !1272, size: 96, offset: 1888)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4077, file: !10, line: 306, baseType: !21, size: 32, offset: 1984)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !4077, file: !10, line: 306, baseType: !21, size: 32, offset: 2016)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !4077, file: !10, line: 307, baseType: !59, size: 128, offset: 2048)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "isb_result", scope: !4077, file: !10, line: 310, baseType: !4097, size: 64, offset: 2176)
!4097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4098, size: 64, elements: !289)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBData", file: !4100, line: 106, size: 320, elements: !4101)
!4100 = !DIFile(filename: "blender/source/blender/render/intern/include/shadbuf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4101 = !{!4102, !4103, !4114, !4115, !4116, !4117, !4118}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "shadfacs", scope: !4099, file: !4100, line: 107, baseType: !2159, size: 64)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "shadfaca", scope: !4099, file: !4100, line: 108, baseType: !4104, size: 64, offset: 64)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISBShadfacA", file: !4100, line: 103, baseType: !4107)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ISBShadfacA", file: !4100, line: 98, size: 192, elements: !4108)
!4108 = !{!4109, !4111, !4112, !4113}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4107, file: !4100, line: 99, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !4107, file: !4100, line: 100, baseType: !21, size: 32, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !4107, file: !4100, line: 101, baseType: !21, size: 32, offset: 96)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !4107, file: !4100, line: 102, baseType: !45, size: 32, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "memarena", scope: !4099, file: !4100, line: 109, baseType: !3275, size: 64, offset: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "minx", scope: !4099, file: !4100, line: 110, baseType: !21, size: 32, offset: 192)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !4099, file: !4100, line: 110, baseType: !21, size: 32, offset: 224)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !4099, file: !4100, line: 110, baseType: !21, size: 32, offset: 256)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !4099, file: !4100, line: 110, baseType: !21, size: 32, offset: 288)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !3976, file: !10, line: 593, baseType: !44, size: 64, offset: 1920)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !3976, file: !10, line: 595, baseType: !2674, size: 288, offset: 1984)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "spottexfac", scope: !3976, file: !10, line: 596, baseType: !45, size: 32, offset: 2272)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "sh_invcampos", scope: !3976, file: !10, line: 597, baseType: !188, size: 96, offset: 2304)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "sh_zfac", scope: !3976, file: !10, line: 597, baseType: !45, size: 32, offset: 2400)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "lampmat", scope: !3976, file: !10, line: 599, baseType: !462, size: 512, offset: 2432)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3976, file: !10, line: 601, baseType: !2674, size: 288, offset: 2944)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !3976, file: !10, line: 602, baseType: !351, size: 768, offset: 3232)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "areasize", scope: !3976, file: !10, line: 602, baseType: !45, size: 32, offset: 4000)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "shadsamp", scope: !3976, file: !10, line: 605, baseType: !4129, size: 64, offset: 4032)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSample", file: !10, line: 538, baseType: !4131)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSample", file: !10, line: 536, size: 2560, elements: !4132)
!4132 = !{!4133}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4131, file: !10, line: 537, baseType: !4134, size: 2560)
!4134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4135, size: 2560, elements: !2904)
!4135 = !DIDerivedType(tag: DW_TAG_typedef, name: "LampShadowSubSample", file: !10, line: 534, baseType: !4136)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LampShadowSubSample", file: !10, line: 531, size: 160, elements: !4137)
!4137 = !{!4138, !4139}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !4136, file: !10, line: 532, baseType: !21, size: 32)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !4136, file: !10, line: 533, baseType: !270, size: 128, offset: 32)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "last_hit", scope: !3976, file: !10, line: 608, baseType: !4141, size: 64, offset: 4096)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2996, size: 64, elements: !289)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !3976, file: !10, line: 610, baseType: !314, size: 1152, offset: 4160)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "thread_assigned", scope: !3976, file: !10, line: 613, baseType: !21, size: 32, offset: 5312)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "thread_ready", scope: !3976, file: !10, line: 614, baseType: !21, size: 32, offset: 5344)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !1252, line: 165, baseType: !2024)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !1252, line: 76, baseType: !2068)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRenderMeshToTangent", file: !3, line: 308, baseType: !4151)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 305, size: 64, elements: !4152)
!4152 = !{!4153}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !4151, file: !3, line: 306, baseType: !3063, size: 64)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2419, size: 192, elements: !4156)
!4156 = !{!272, !190}
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !88, line: 203, baseType: !87)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeTree", file: !678, line: 391, baseType: !677)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4164)
!4164 = !DIDerivedType(tag: DW_TAG_typedef, name: "HaloRen", file: !10, line: 427, baseType: !3017)
!4165 = !{!0, !4166, !4168, !4174, !4181, !4204, !4206, !4208, !4210, !4212, !4217, !4219, !4221, !4223}
!4166 = !DIGlobalVariableExpression(var: !4167, expr: !DIExpression())
!4167 = distinct !DIGlobalVariable(name: "needtexmat", scope: !2, file: !3, line: 4519, type: !21, isLocal: true, isDefinition: true)
!4168 = !DIGlobalVariableExpression(var: !4169, expr: !DIExpression())
!4169 = distinct !DIGlobalVariable(name: "lasttime", scope: !4170, file: !3, line: 4681, type: !934, isLocal: true, isDefinition: true)
!4170 = distinct !DISubprogram(name: "init_render_object", scope: !3, file: !3, line: 4679, type: !4171, scopeLine: 4680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !6, !3236, !3236, !3344, !2482, !21}
!4173 = !{}
!4174 = !DIGlobalVariableExpression(var: !4175, expr: !DIExpression())
!4175 = distinct !DIGlobalVariable(name: "v1", scope: !4176, file: !3, line: 1006, type: !4179, isLocal: true, isDefinition: true)
!4176 = distinct !DISubprogram(name: "static_particle_wire", scope: !3, file: !3, line: 1003, type: !4177, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{null, !3063, !4157, !2417, !2417, !21, !21}
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_typedef, name: "VertRen", file: !10, line: 380, baseType: !3095)
!4181 = !DIGlobalVariableExpression(var: !4182, expr: !DIExpression())
!4182 = distinct !DIGlobalVariable(name: "v1", scope: !4183, file: !3, line: 750, type: !4179, isLocal: true, isDefinition: true)
!4183 = distinct !DISubprogram(name: "static_particle_strand", scope: !3, file: !3, line: 748, type: !4184, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{null, !6, !3063, !4157, !4186, !2417, !2417}
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleStrandData", file: !3, line: 746, baseType: !4188)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleStrandData", file: !3, line: 739, size: 576, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4188, file: !3, line: 740, baseType: !2067, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !4188, file: !3, line: 741, baseType: !44, size: 64, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "uvco", scope: !4188, file: !3, line: 741, baseType: !44, size: 64, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !4188, file: !3, line: 741, baseType: !44, size: 64, offset: 192)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4188, file: !3, line: 742, baseType: !45, size: 32, offset: 256)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !4188, file: !3, line: 742, baseType: !45, size: 32, offset: 288)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !4188, file: !3, line: 742, baseType: !45, size: 32, offset: 320)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4188, file: !3, line: 742, baseType: !45, size: 32, offset: 352)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !4188, file: !3, line: 743, baseType: !21, size: 32, offset: 384)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !4188, file: !3, line: 743, baseType: !21, size: 32, offset: 416)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4188, file: !3, line: 744, baseType: !21, size: 32, offset: 448)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !4188, file: !3, line: 744, baseType: !21, size: 32, offset: 480)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "adapt", scope: !4188, file: !3, line: 744, baseType: !21, size: 32, offset: 512)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "override_uv", scope: !4188, file: !3, line: 744, baseType: !21, size: 32, offset: 544)
!4204 = !DIGlobalVariableExpression(var: !4205, expr: !DIExpression())
!4205 = distinct !DIGlobalVariable(name: "v2", scope: !4183, file: !3, line: 750, type: !4179, isLocal: true, isDefinition: true)
!4206 = !DIGlobalVariableExpression(var: !4207, expr: !DIExpression())
!4207 = distinct !DIGlobalVariable(name: "anor", scope: !4183, file: !3, line: 753, type: !188, isLocal: true, isDefinition: true)
!4208 = !DIGlobalVariableExpression(var: !4209, expr: !DIExpression())
!4209 = distinct !DIGlobalVariable(name: "avec", scope: !4183, file: !3, line: 753, type: !188, isLocal: true, isDefinition: true)
!4210 = !DIGlobalVariableExpression(var: !4211, expr: !DIExpression())
!4211 = distinct !DIGlobalVariable(name: "second", scope: !4183, file: !3, line: 755, type: !21, isLocal: true, isDefinition: true)
!4212 = !DIGlobalVariableExpression(var: !4213, expr: !DIExpression())
!4213 = distinct !DIGlobalVariable(name: "pixelphix", scope: !4214, file: !3, line: 5360, type: !45, isLocal: true, isDefinition: true)
!4214 = distinct !DISubprogram(name: "speedvector_project", scope: !3, file: !3, line: 5358, type: !4215, scopeLine: 5359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !6, !44, !2417, !2417}
!4217 = !DIGlobalVariableExpression(var: !4218, expr: !DIExpression())
!4218 = distinct !DIGlobalVariable(name: "pixelphiy", scope: !4214, file: !3, line: 5360, type: !45, isLocal: true, isDefinition: true)
!4219 = !DIGlobalVariableExpression(var: !4220, expr: !DIExpression())
!4220 = distinct !DIGlobalVariable(name: "zmulx", scope: !4214, file: !3, line: 5360, type: !45, isLocal: true, isDefinition: true)
!4221 = !DIGlobalVariableExpression(var: !4222, expr: !DIExpression())
!4222 = distinct !DIGlobalVariable(name: "zmuly", scope: !4214, file: !3, line: 5360, type: !45, isLocal: true, isDefinition: true)
!4223 = !DIGlobalVariableExpression(var: !4224, expr: !DIExpression())
!4224 = distinct !DIGlobalVariable(name: "pano", scope: !4214, file: !3, line: 5361, type: !21, isLocal: true, isDefinition: true)
!4225 = !{i32 7, !"Dwarf Version", i32 4}
!4226 = !{i32 2, !"Debug Info Version", i32 3}
!4227 = !{i32 1, !"wchar_size", i32 4}
!4228 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!4229 = distinct !DISubprogram(name: "area_lamp_vectors", scope: !3, file: !3, line: 3589, type: !4230, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{null, !3974}
!4232 = !DILocalVariable(name: "lar", arg: 1, scope: !4229, file: !3, line: 3589, type: !3974)
!4233 = !DILocation(line: 3589, column: 33, scope: !4229)
!4234 = !DILocalVariable(name: "xsize", scope: !4229, file: !3, line: 3591, type: !45)
!4235 = !DILocation(line: 3591, column: 8, scope: !4229)
!4236 = !DILocation(line: 3591, column: 20, scope: !4229)
!4237 = !DILocation(line: 3591, column: 25, scope: !4229)
!4238 = !DILocation(line: 3591, column: 19, scope: !4229)
!4239 = !DILocalVariable(name: "ysize", scope: !4229, file: !3, line: 3591, type: !45)
!4240 = !DILocation(line: 3591, column: 36, scope: !4229)
!4241 = !DILocation(line: 3591, column: 48, scope: !4229)
!4242 = !DILocation(line: 3591, column: 53, scope: !4229)
!4243 = !DILocation(line: 3591, column: 47, scope: !4229)
!4244 = !DILocalVariable(name: "multifac", scope: !4229, file: !3, line: 3591, type: !45)
!4245 = !DILocation(line: 3591, column: 65, scope: !4229)
!4246 = !DILocation(line: 3594, column: 30, scope: !4229)
!4247 = !DILocation(line: 3594, column: 35, scope: !4229)
!4248 = !DILocation(line: 3594, column: 23, scope: !4229)
!4249 = !DILocation(line: 3594, column: 17, scope: !4229)
!4250 = !DILocation(line: 3594, column: 16, scope: !4229)
!4251 = !DILocation(line: 3594, column: 10, scope: !4229)
!4252 = !DILocation(line: 3595, column: 11, scope: !4229)
!4253 = !DILocation(line: 3595, column: 8, scope: !4229)
!4254 = !DILocation(line: 3596, column: 11, scope: !4229)
!4255 = !DILocation(line: 3596, column: 8, scope: !4229)
!4256 = !DILocation(line: 3599, column: 19, scope: !4229)
!4257 = !DILocation(line: 3599, column: 24, scope: !4229)
!4258 = !DILocation(line: 3599, column: 32, scope: !4229)
!4259 = !DILocation(line: 3599, column: 38, scope: !4229)
!4260 = !DILocation(line: 3599, column: 43, scope: !4229)
!4261 = !DILocation(line: 3599, column: 37, scope: !4229)
!4262 = !DILocation(line: 3599, column: 30, scope: !4229)
!4263 = !DILocation(line: 3599, column: 55, scope: !4229)
!4264 = !DILocation(line: 3599, column: 61, scope: !4229)
!4265 = !DILocation(line: 3599, column: 66, scope: !4229)
!4266 = !DILocation(line: 3599, column: 60, scope: !4229)
!4267 = !DILocation(line: 3599, column: 53, scope: !4229)
!4268 = !DILocation(line: 3599, column: 2, scope: !4229)
!4269 = !DILocation(line: 3599, column: 7, scope: !4229)
!4270 = !DILocation(line: 3599, column: 17, scope: !4229)
!4271 = !DILocation(line: 3600, column: 19, scope: !4229)
!4272 = !DILocation(line: 3600, column: 24, scope: !4229)
!4273 = !DILocation(line: 3600, column: 32, scope: !4229)
!4274 = !DILocation(line: 3600, column: 38, scope: !4229)
!4275 = !DILocation(line: 3600, column: 43, scope: !4229)
!4276 = !DILocation(line: 3600, column: 37, scope: !4229)
!4277 = !DILocation(line: 3600, column: 30, scope: !4229)
!4278 = !DILocation(line: 3600, column: 55, scope: !4229)
!4279 = !DILocation(line: 3600, column: 61, scope: !4229)
!4280 = !DILocation(line: 3600, column: 66, scope: !4229)
!4281 = !DILocation(line: 3600, column: 60, scope: !4229)
!4282 = !DILocation(line: 3600, column: 53, scope: !4229)
!4283 = !DILocation(line: 3600, column: 2, scope: !4229)
!4284 = !DILocation(line: 3600, column: 7, scope: !4229)
!4285 = !DILocation(line: 3600, column: 17, scope: !4229)
!4286 = !DILocation(line: 3601, column: 19, scope: !4229)
!4287 = !DILocation(line: 3601, column: 24, scope: !4229)
!4288 = !DILocation(line: 3601, column: 32, scope: !4229)
!4289 = !DILocation(line: 3601, column: 38, scope: !4229)
!4290 = !DILocation(line: 3601, column: 43, scope: !4229)
!4291 = !DILocation(line: 3601, column: 37, scope: !4229)
!4292 = !DILocation(line: 3601, column: 30, scope: !4229)
!4293 = !DILocation(line: 3601, column: 55, scope: !4229)
!4294 = !DILocation(line: 3601, column: 61, scope: !4229)
!4295 = !DILocation(line: 3601, column: 66, scope: !4229)
!4296 = !DILocation(line: 3601, column: 60, scope: !4229)
!4297 = !DILocation(line: 3601, column: 53, scope: !4229)
!4298 = !DILocation(line: 3601, column: 2, scope: !4229)
!4299 = !DILocation(line: 3601, column: 7, scope: !4229)
!4300 = !DILocation(line: 3601, column: 17, scope: !4229)
!4301 = !DILocation(line: 3604, column: 19, scope: !4229)
!4302 = !DILocation(line: 3604, column: 24, scope: !4229)
!4303 = !DILocation(line: 3604, column: 32, scope: !4229)
!4304 = !DILocation(line: 3604, column: 38, scope: !4229)
!4305 = !DILocation(line: 3604, column: 43, scope: !4229)
!4306 = !DILocation(line: 3604, column: 37, scope: !4229)
!4307 = !DILocation(line: 3604, column: 30, scope: !4229)
!4308 = !DILocation(line: 3604, column: 55, scope: !4229)
!4309 = !DILocation(line: 3604, column: 61, scope: !4229)
!4310 = !DILocation(line: 3604, column: 66, scope: !4229)
!4311 = !DILocation(line: 3604, column: 60, scope: !4229)
!4312 = !DILocation(line: 3604, column: 53, scope: !4229)
!4313 = !DILocation(line: 3604, column: 2, scope: !4229)
!4314 = !DILocation(line: 3604, column: 7, scope: !4229)
!4315 = !DILocation(line: 3604, column: 17, scope: !4229)
!4316 = !DILocation(line: 3605, column: 19, scope: !4229)
!4317 = !DILocation(line: 3605, column: 24, scope: !4229)
!4318 = !DILocation(line: 3605, column: 32, scope: !4229)
!4319 = !DILocation(line: 3605, column: 38, scope: !4229)
!4320 = !DILocation(line: 3605, column: 43, scope: !4229)
!4321 = !DILocation(line: 3605, column: 37, scope: !4229)
!4322 = !DILocation(line: 3605, column: 30, scope: !4229)
!4323 = !DILocation(line: 3605, column: 55, scope: !4229)
!4324 = !DILocation(line: 3605, column: 61, scope: !4229)
!4325 = !DILocation(line: 3605, column: 66, scope: !4229)
!4326 = !DILocation(line: 3605, column: 60, scope: !4229)
!4327 = !DILocation(line: 3605, column: 53, scope: !4229)
!4328 = !DILocation(line: 3605, column: 2, scope: !4229)
!4329 = !DILocation(line: 3605, column: 7, scope: !4229)
!4330 = !DILocation(line: 3605, column: 17, scope: !4229)
!4331 = !DILocation(line: 3606, column: 19, scope: !4229)
!4332 = !DILocation(line: 3606, column: 24, scope: !4229)
!4333 = !DILocation(line: 3606, column: 32, scope: !4229)
!4334 = !DILocation(line: 3606, column: 38, scope: !4229)
!4335 = !DILocation(line: 3606, column: 43, scope: !4229)
!4336 = !DILocation(line: 3606, column: 37, scope: !4229)
!4337 = !DILocation(line: 3606, column: 30, scope: !4229)
!4338 = !DILocation(line: 3606, column: 55, scope: !4229)
!4339 = !DILocation(line: 3606, column: 61, scope: !4229)
!4340 = !DILocation(line: 3606, column: 66, scope: !4229)
!4341 = !DILocation(line: 3606, column: 60, scope: !4229)
!4342 = !DILocation(line: 3606, column: 53, scope: !4229)
!4343 = !DILocation(line: 3606, column: 2, scope: !4229)
!4344 = !DILocation(line: 3606, column: 7, scope: !4229)
!4345 = !DILocation(line: 3606, column: 17, scope: !4229)
!4346 = !DILocation(line: 3609, column: 19, scope: !4229)
!4347 = !DILocation(line: 3609, column: 24, scope: !4229)
!4348 = !DILocation(line: 3609, column: 32, scope: !4229)
!4349 = !DILocation(line: 3609, column: 38, scope: !4229)
!4350 = !DILocation(line: 3609, column: 43, scope: !4229)
!4351 = !DILocation(line: 3609, column: 37, scope: !4229)
!4352 = !DILocation(line: 3609, column: 30, scope: !4229)
!4353 = !DILocation(line: 3609, column: 55, scope: !4229)
!4354 = !DILocation(line: 3609, column: 61, scope: !4229)
!4355 = !DILocation(line: 3609, column: 66, scope: !4229)
!4356 = !DILocation(line: 3609, column: 60, scope: !4229)
!4357 = !DILocation(line: 3609, column: 53, scope: !4229)
!4358 = !DILocation(line: 3609, column: 2, scope: !4229)
!4359 = !DILocation(line: 3609, column: 7, scope: !4229)
!4360 = !DILocation(line: 3609, column: 17, scope: !4229)
!4361 = !DILocation(line: 3610, column: 19, scope: !4229)
!4362 = !DILocation(line: 3610, column: 24, scope: !4229)
!4363 = !DILocation(line: 3610, column: 32, scope: !4229)
!4364 = !DILocation(line: 3610, column: 38, scope: !4229)
!4365 = !DILocation(line: 3610, column: 43, scope: !4229)
!4366 = !DILocation(line: 3610, column: 37, scope: !4229)
!4367 = !DILocation(line: 3610, column: 30, scope: !4229)
!4368 = !DILocation(line: 3610, column: 55, scope: !4229)
!4369 = !DILocation(line: 3610, column: 61, scope: !4229)
!4370 = !DILocation(line: 3610, column: 66, scope: !4229)
!4371 = !DILocation(line: 3610, column: 60, scope: !4229)
!4372 = !DILocation(line: 3610, column: 53, scope: !4229)
!4373 = !DILocation(line: 3610, column: 2, scope: !4229)
!4374 = !DILocation(line: 3610, column: 7, scope: !4229)
!4375 = !DILocation(line: 3610, column: 17, scope: !4229)
!4376 = !DILocation(line: 3611, column: 19, scope: !4229)
!4377 = !DILocation(line: 3611, column: 24, scope: !4229)
!4378 = !DILocation(line: 3611, column: 32, scope: !4229)
!4379 = !DILocation(line: 3611, column: 38, scope: !4229)
!4380 = !DILocation(line: 3611, column: 43, scope: !4229)
!4381 = !DILocation(line: 3611, column: 37, scope: !4229)
!4382 = !DILocation(line: 3611, column: 30, scope: !4229)
!4383 = !DILocation(line: 3611, column: 55, scope: !4229)
!4384 = !DILocation(line: 3611, column: 61, scope: !4229)
!4385 = !DILocation(line: 3611, column: 66, scope: !4229)
!4386 = !DILocation(line: 3611, column: 60, scope: !4229)
!4387 = !DILocation(line: 3611, column: 53, scope: !4229)
!4388 = !DILocation(line: 3611, column: 2, scope: !4229)
!4389 = !DILocation(line: 3611, column: 7, scope: !4229)
!4390 = !DILocation(line: 3611, column: 17, scope: !4229)
!4391 = !DILocation(line: 3614, column: 19, scope: !4229)
!4392 = !DILocation(line: 3614, column: 24, scope: !4229)
!4393 = !DILocation(line: 3614, column: 32, scope: !4229)
!4394 = !DILocation(line: 3614, column: 38, scope: !4229)
!4395 = !DILocation(line: 3614, column: 43, scope: !4229)
!4396 = !DILocation(line: 3614, column: 37, scope: !4229)
!4397 = !DILocation(line: 3614, column: 30, scope: !4229)
!4398 = !DILocation(line: 3614, column: 55, scope: !4229)
!4399 = !DILocation(line: 3614, column: 61, scope: !4229)
!4400 = !DILocation(line: 3614, column: 66, scope: !4229)
!4401 = !DILocation(line: 3614, column: 60, scope: !4229)
!4402 = !DILocation(line: 3614, column: 53, scope: !4229)
!4403 = !DILocation(line: 3614, column: 2, scope: !4229)
!4404 = !DILocation(line: 3614, column: 7, scope: !4229)
!4405 = !DILocation(line: 3614, column: 17, scope: !4229)
!4406 = !DILocation(line: 3615, column: 19, scope: !4229)
!4407 = !DILocation(line: 3615, column: 24, scope: !4229)
!4408 = !DILocation(line: 3615, column: 32, scope: !4229)
!4409 = !DILocation(line: 3615, column: 38, scope: !4229)
!4410 = !DILocation(line: 3615, column: 43, scope: !4229)
!4411 = !DILocation(line: 3615, column: 37, scope: !4229)
!4412 = !DILocation(line: 3615, column: 30, scope: !4229)
!4413 = !DILocation(line: 3615, column: 55, scope: !4229)
!4414 = !DILocation(line: 3615, column: 61, scope: !4229)
!4415 = !DILocation(line: 3615, column: 66, scope: !4229)
!4416 = !DILocation(line: 3615, column: 60, scope: !4229)
!4417 = !DILocation(line: 3615, column: 53, scope: !4229)
!4418 = !DILocation(line: 3615, column: 2, scope: !4229)
!4419 = !DILocation(line: 3615, column: 7, scope: !4229)
!4420 = !DILocation(line: 3615, column: 17, scope: !4229)
!4421 = !DILocation(line: 3616, column: 19, scope: !4229)
!4422 = !DILocation(line: 3616, column: 24, scope: !4229)
!4423 = !DILocation(line: 3616, column: 32, scope: !4229)
!4424 = !DILocation(line: 3616, column: 38, scope: !4229)
!4425 = !DILocation(line: 3616, column: 43, scope: !4229)
!4426 = !DILocation(line: 3616, column: 37, scope: !4229)
!4427 = !DILocation(line: 3616, column: 30, scope: !4229)
!4428 = !DILocation(line: 3616, column: 55, scope: !4229)
!4429 = !DILocation(line: 3616, column: 61, scope: !4229)
!4430 = !DILocation(line: 3616, column: 66, scope: !4229)
!4431 = !DILocation(line: 3616, column: 60, scope: !4229)
!4432 = !DILocation(line: 3616, column: 53, scope: !4229)
!4433 = !DILocation(line: 3616, column: 2, scope: !4229)
!4434 = !DILocation(line: 3616, column: 7, scope: !4229)
!4435 = !DILocation(line: 3616, column: 17, scope: !4229)
!4436 = !DILocation(line: 3618, column: 17, scope: !4229)
!4437 = !DILocation(line: 3618, column: 22, scope: !4229)
!4438 = !DILocation(line: 3618, column: 27, scope: !4229)
!4439 = !DILocation(line: 3618, column: 32, scope: !4229)
!4440 = !DILocation(line: 3618, column: 26, scope: !4229)
!4441 = !DILocation(line: 3618, column: 43, scope: !4229)
!4442 = !DILocation(line: 3618, column: 42, scope: !4229)
!4443 = !DILocation(line: 3618, column: 49, scope: !4229)
!4444 = !DILocation(line: 3618, column: 48, scope: !4229)
!4445 = !DILocation(line: 3618, column: 36, scope: !4229)
!4446 = !DILocation(line: 3618, column: 2, scope: !4229)
!4447 = !DILocation(line: 3618, column: 7, scope: !4229)
!4448 = !DILocation(line: 3618, column: 15, scope: !4229)
!4449 = !DILocation(line: 3619, column: 1, scope: !4229)
!4450 = distinct !DISubprogram(name: "init_render_world", scope: !3, file: !3, line: 3996, type: !4451, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{null, !6}
!4453 = !DILocalVariable(name: "re", arg: 1, scope: !4450, file: !3, line: 3996, type: !6)
!4454 = !DILocation(line: 3996, column: 32, scope: !4450)
!4455 = !DILocalVariable(name: "wrld_prev", scope: !4450, file: !3, line: 3998, type: !4456)
!4456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !64, size: 128, elements: !657)
!4457 = !DILocation(line: 3998, column: 8, scope: !4450)
!4458 = !DILocation(line: 3998, column: 23, scope: !4450)
!4459 = !DILocation(line: 3999, column: 6, scope: !4450)
!4460 = !DILocation(line: 3999, column: 10, scope: !4450)
!4461 = !DILocation(line: 3999, column: 15, scope: !4450)
!4462 = !DILocation(line: 4000, column: 6, scope: !4450)
!4463 = !DILocation(line: 4000, column: 10, scope: !4450)
!4464 = !DILocation(line: 4000, column: 15, scope: !4450)
!4465 = !DILocalVariable(name: "a", scope: !4450, file: !3, line: 4003, type: !21)
!4466 = !DILocation(line: 4003, column: 6, scope: !4450)
!4467 = !DILocation(line: 4005, column: 6, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 4005, column: 6)
!4469 = !DILocation(line: 4005, column: 10, scope: !4468)
!4470 = !DILocation(line: 4005, column: 16, scope: !4468)
!4471 = !DILocation(line: 4005, column: 19, scope: !4468)
!4472 = !DILocation(line: 4005, column: 23, scope: !4468)
!4473 = !DILocation(line: 4005, column: 30, scope: !4468)
!4474 = !DILocation(line: 4005, column: 6, scope: !4450)
!4475 = !DILocation(line: 4006, column: 3, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 4005, column: 37)
!4477 = !DILocation(line: 4006, column: 7, scope: !4476)
!4478 = !DILocation(line: 4006, column: 16, scope: !4476)
!4479 = !DILocation(line: 4006, column: 20, scope: !4476)
!4480 = !DILocation(line: 4006, column: 27, scope: !4476)
!4481 = !DILocation(line: 4006, column: 14, scope: !4476)
!4482 = !DILocation(line: 4008, column: 14, scope: !4476)
!4483 = !DILocation(line: 4008, column: 18, scope: !4476)
!4484 = !DILocation(line: 4008, column: 25, scope: !4476)
!4485 = !DILocation(line: 4008, column: 29, scope: !4476)
!4486 = !DILocation(line: 4008, column: 3, scope: !4476)
!4487 = !DILocation(line: 4009, column: 16, scope: !4476)
!4488 = !DILocation(line: 4009, column: 20, scope: !4476)
!4489 = !DILocation(line: 4009, column: 3, scope: !4476)
!4490 = !DILocation(line: 4010, column: 14, scope: !4476)
!4491 = !DILocation(line: 4010, column: 18, scope: !4476)
!4492 = !DILocation(line: 4010, column: 24, scope: !4476)
!4493 = !DILocation(line: 4010, column: 28, scope: !4476)
!4494 = !DILocation(line: 4010, column: 3, scope: !4476)
!4495 = !DILocation(line: 4012, column: 9, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 4012, column: 3)
!4497 = !DILocation(line: 4012, column: 8, scope: !4496)
!4498 = !DILocation(line: 4012, column: 13, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 4012, column: 3)
!4500 = !DILocation(line: 4012, column: 14, scope: !4499)
!4501 = !DILocation(line: 4012, column: 3, scope: !4496)
!4502 = !DILocation(line: 4013, column: 8, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 4013, column: 8)
!4504 = !DILocation(line: 4013, column: 12, scope: !4503)
!4505 = !DILocation(line: 4013, column: 17, scope: !4503)
!4506 = !DILocation(line: 4013, column: 22, scope: !4503)
!4507 = !DILocation(line: 4013, column: 25, scope: !4503)
!4508 = !DILocation(line: 4013, column: 28, scope: !4503)
!4509 = !DILocation(line: 4013, column: 32, scope: !4503)
!4510 = !DILocation(line: 4013, column: 37, scope: !4503)
!4511 = !DILocation(line: 4013, column: 42, scope: !4503)
!4512 = !DILocation(line: 4013, column: 46, scope: !4503)
!4513 = !DILocation(line: 4013, column: 8, scope: !4499)
!4514 = !DILocation(line: 4013, column: 51, scope: !4503)
!4515 = !DILocation(line: 4013, column: 55, scope: !4503)
!4516 = !DILocation(line: 4013, column: 60, scope: !4503)
!4517 = !DILocation(line: 4013, column: 68, scope: !4503)
!4518 = !DILocation(line: 4012, column: 26, scope: !4499)
!4519 = !DILocation(line: 4012, column: 3, scope: !4499)
!4520 = distinct !{!4520, !4501, !4521}
!4521 = !DILocation(line: 4013, column: 71, scope: !4496)
!4522 = !DILocation(line: 4016, column: 7, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 4016, column: 7)
!4524 = !DILocation(line: 4016, column: 11, scope: !4523)
!4525 = !DILocation(line: 4016, column: 7, scope: !4476)
!4526 = !DILocation(line: 4017, column: 4, scope: !4523)
!4527 = !DILocation(line: 4017, column: 11, scope: !4523)
!4528 = !DILocation(line: 4017, column: 15, scope: !4523)
!4529 = !DILocation(line: 4017, column: 20, scope: !4523)
!4530 = !DILocation(line: 4017, column: 27, scope: !4523)
!4531 = !DILocation(line: 4017, column: 31, scope: !4523)
!4532 = !DILocation(line: 4017, column: 36, scope: !4523)
!4533 = !DILocation(line: 4017, column: 26, scope: !4523)
!4534 = !DILocation(line: 4017, column: 45, scope: !4523)
!4535 = !DILocation(line: 4017, column: 49, scope: !4523)
!4536 = !DILocation(line: 4017, column: 43, scope: !4523)
!4537 = !DILocation(line: 4018, column: 5, scope: !4523)
!4538 = !DILocation(line: 4018, column: 9, scope: !4523)
!4539 = !DILocation(line: 4018, column: 14, scope: !4523)
!4540 = !DILocation(line: 4018, column: 20, scope: !4523)
!4541 = distinct !{!4541, !4526, !4540}
!4542 = !DILocation(line: 4019, column: 9, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4476, file: !3, line: 4019, column: 7)
!4544 = !DILocation(line: 4019, column: 13, scope: !4543)
!4545 = !DILocation(line: 4019, column: 15, scope: !4543)
!4546 = !DILocation(line: 4019, column: 20, scope: !4543)
!4547 = !DILocation(line: 4019, column: 34, scope: !4543)
!4548 = !DILocation(line: 4019, column: 38, scope: !4543)
!4549 = !DILocation(line: 4019, column: 42, scope: !4543)
!4550 = !DILocation(line: 4019, column: 47, scope: !4543)
!4551 = !DILocation(line: 4019, column: 64, scope: !4543)
!4552 = !DILocation(line: 4019, column: 7, scope: !4476)
!4553 = !DILocation(line: 4020, column: 4, scope: !4543)
!4554 = !DILocation(line: 4020, column: 8, scope: !4543)
!4555 = !DILocation(line: 4020, column: 13, scope: !4543)
!4556 = !DILocation(line: 4020, column: 18, scope: !4543)
!4557 = !DILocation(line: 4021, column: 2, scope: !4476)
!4558 = !DILocation(line: 4023, column: 11, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 4022, column: 7)
!4560 = !DILocation(line: 4023, column: 15, scope: !4559)
!4561 = !DILocation(line: 4023, column: 3, scope: !4559)
!4562 = !DILocation(line: 4024, column: 3, scope: !4559)
!4563 = !DILocation(line: 4024, column: 7, scope: !4559)
!4564 = !DILocation(line: 4024, column: 12, scope: !4559)
!4565 = !DILocation(line: 4024, column: 15, scope: !4559)
!4566 = !DILocation(line: 4025, column: 3, scope: !4559)
!4567 = !DILocation(line: 4025, column: 7, scope: !4559)
!4568 = !DILocation(line: 4025, column: 12, scope: !4559)
!4569 = !DILocation(line: 4025, column: 17, scope: !4559)
!4570 = !DILocation(line: 4028, column: 21, scope: !4559)
!4571 = !DILocation(line: 4028, column: 25, scope: !4559)
!4572 = !DILocation(line: 4028, column: 3, scope: !4559)
!4573 = !DILocation(line: 4028, column: 7, scope: !4559)
!4574 = !DILocation(line: 4028, column: 12, scope: !4559)
!4575 = !DILocation(line: 4028, column: 19, scope: !4559)
!4576 = !DILocation(line: 4029, column: 22, scope: !4559)
!4577 = !DILocation(line: 4029, column: 26, scope: !4559)
!4578 = !DILocation(line: 4029, column: 34, scope: !4559)
!4579 = !DILocation(line: 4029, column: 38, scope: !4559)
!4580 = !DILocation(line: 4029, column: 33, scope: !4559)
!4581 = !DILocation(line: 4029, column: 3, scope: !4559)
!4582 = !DILocation(line: 4029, column: 7, scope: !4559)
!4583 = !DILocation(line: 4029, column: 12, scope: !4559)
!4584 = !DILocation(line: 4029, column: 20, scope: !4559)
!4585 = !DILocation(line: 4030, column: 3, scope: !4559)
!4586 = !DILocation(line: 4030, column: 7, scope: !4559)
!4587 = !DILocation(line: 4030, column: 12, scope: !4559)
!4588 = !DILocation(line: 4030, column: 16, scope: !4559)
!4589 = !DILocation(line: 4033, column: 37, scope: !4450)
!4590 = !DILocation(line: 4033, column: 41, scope: !4450)
!4591 = !DILocation(line: 4033, column: 46, scope: !4450)
!4592 = !DILocation(line: 4033, column: 36, scope: !4450)
!4593 = !DILocation(line: 4033, column: 50, scope: !4450)
!4594 = !DILocation(line: 4033, column: 26, scope: !4450)
!4595 = !DILocation(line: 4033, column: 24, scope: !4450)
!4596 = !DILocation(line: 4033, column: 2, scope: !4450)
!4597 = !DILocation(line: 4033, column: 6, scope: !4450)
!4598 = !DILocation(line: 4033, column: 11, scope: !4450)
!4599 = !DILocation(line: 4033, column: 17, scope: !4450)
!4600 = !DILocation(line: 4034, column: 25, scope: !4450)
!4601 = !DILocation(line: 4034, column: 29, scope: !4450)
!4602 = !DILocation(line: 4034, column: 34, scope: !4450)
!4603 = !DILocation(line: 4034, column: 40, scope: !4450)
!4604 = !DILocation(line: 4034, column: 47, scope: !4450)
!4605 = !DILocation(line: 4034, column: 51, scope: !4450)
!4606 = !DILocation(line: 4034, column: 56, scope: !4450)
!4607 = !DILocation(line: 4034, column: 46, scope: !4450)
!4608 = !DILocation(line: 4034, column: 19, scope: !4450)
!4609 = !DILocation(line: 4034, column: 66, scope: !4450)
!4610 = !DILocation(line: 4034, column: 70, scope: !4450)
!4611 = !DILocation(line: 4034, column: 75, scope: !4450)
!4612 = !DILocation(line: 4034, column: 64, scope: !4450)
!4613 = !DILocation(line: 4034, column: 2, scope: !4450)
!4614 = !DILocation(line: 4034, column: 6, scope: !4450)
!4615 = !DILocation(line: 4034, column: 11, scope: !4450)
!4616 = !DILocation(line: 4034, column: 17, scope: !4450)
!4617 = !DILocation(line: 4037, column: 22, scope: !4450)
!4618 = !DILocation(line: 4037, column: 2, scope: !4450)
!4619 = !DILocation(line: 4037, column: 6, scope: !4450)
!4620 = !DILocation(line: 4037, column: 11, scope: !4450)
!4621 = !DILocation(line: 4037, column: 20, scope: !4450)
!4622 = !DILocation(line: 4038, column: 22, scope: !4450)
!4623 = !DILocation(line: 4038, column: 2, scope: !4450)
!4624 = !DILocation(line: 4038, column: 6, scope: !4450)
!4625 = !DILocation(line: 4038, column: 11, scope: !4450)
!4626 = !DILocation(line: 4038, column: 20, scope: !4450)
!4627 = !DILocation(line: 4039, column: 1, scope: !4450)
!4628 = distinct !DISubprogram(name: "copy_v3_v3", scope: !4629, file: !4629, line: 64, type: !4630, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4629 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4630 = !DISubroutineType(types: !4631)
!4631 = !{null, !44, !2417}
!4632 = !DILocalVariable(name: "r", arg: 1, scope: !4628, file: !4629, line: 64, type: !44)
!4633 = !DILocation(line: 64, column: 31, scope: !4628)
!4634 = !DILocalVariable(name: "a", arg: 2, scope: !4628, file: !4629, line: 64, type: !2417)
!4635 = !DILocation(line: 64, column: 49, scope: !4628)
!4636 = !DILocation(line: 66, column: 9, scope: !4628)
!4637 = !DILocation(line: 66, column: 2, scope: !4628)
!4638 = !DILocation(line: 66, column: 7, scope: !4628)
!4639 = !DILocation(line: 67, column: 9, scope: !4628)
!4640 = !DILocation(line: 67, column: 2, scope: !4628)
!4641 = !DILocation(line: 67, column: 7, scope: !4628)
!4642 = !DILocation(line: 68, column: 9, scope: !4628)
!4643 = !DILocation(line: 68, column: 2, scope: !4628)
!4644 = !DILocation(line: 68, column: 7, scope: !4628)
!4645 = !DILocation(line: 69, column: 1, scope: !4628)
!4646 = distinct !DISubprogram(name: "normalize_v3", scope: !4629, file: !4629, line: 830, type: !4647, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!45, !44}
!4649 = !DILocalVariable(name: "n", arg: 1, scope: !4646, file: !4629, line: 830, type: !44)
!4650 = !DILocation(line: 830, column: 34, scope: !4646)
!4651 = !DILocation(line: 832, column: 25, scope: !4646)
!4652 = !DILocation(line: 832, column: 28, scope: !4646)
!4653 = !DILocation(line: 832, column: 9, scope: !4646)
!4654 = !DILocation(line: 832, column: 2, scope: !4646)
!4655 = distinct !DISubprogram(name: "RE_Database_Free", scope: !3, file: !3, line: 4709, type: !4451, scopeLine: 4710, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4656 = !DILocalVariable(name: "re", arg: 1, scope: !4655, file: !3, line: 4709, type: !6)
!4657 = !DILocation(line: 4709, column: 31, scope: !4655)
!4658 = !DILocalVariable(name: "lar", scope: !4655, file: !3, line: 4711, type: !3974)
!4659 = !DILocation(line: 4711, column: 11, scope: !4655)
!4660 = !DILocation(line: 4714, column: 7, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4714, column: 6)
!4662 = !DILocation(line: 4714, column: 11, scope: !4661)
!4663 = !DILocation(line: 4714, column: 13, scope: !4661)
!4664 = !DILocation(line: 4714, column: 6, scope: !4655)
!4665 = !DILocation(line: 4715, column: 3, scope: !4661)
!4666 = !DILocation(line: 4718, column: 9, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4718, column: 6)
!4668 = !DILocation(line: 4718, column: 15, scope: !4667)
!4669 = !DILocation(line: 4718, column: 26, scope: !4667)
!4670 = !DILocation(line: 4718, column: 32, scope: !4667)
!4671 = !DILocation(line: 4718, column: 29, scope: !4667)
!4672 = !DILocation(line: 4718, column: 6, scope: !4655)
!4673 = !DILocation(line: 4719, column: 8, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 4719, column: 7)
!4675 = distinct !DILexicalBlock(scope: !4667, file: !3, line: 4718, column: 47)
!4676 = !DILocation(line: 4719, column: 12, scope: !4674)
!4677 = !DILocation(line: 4719, column: 14, scope: !4674)
!4678 = !DILocation(line: 4719, column: 22, scope: !4674)
!4679 = !DILocation(line: 4719, column: 60, scope: !4674)
!4680 = !DILocation(line: 4719, column: 7, scope: !4675)
!4681 = !DILocation(line: 4720, column: 4, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 4719, column: 65)
!4683 = !DILocation(line: 4721, column: 4, scope: !4682)
!4684 = !DILocation(line: 4722, column: 3, scope: !4682)
!4685 = !DILocation(line: 4723, column: 2, scope: !4675)
!4686 = !DILocation(line: 4727, column: 12, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4727, column: 2)
!4688 = !DILocation(line: 4727, column: 16, scope: !4687)
!4689 = !DILocation(line: 4727, column: 24, scope: !4687)
!4690 = !DILocation(line: 4727, column: 10, scope: !4687)
!4691 = !DILocation(line: 4727, column: 7, scope: !4687)
!4692 = !DILocation(line: 4727, column: 31, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 4727, column: 2)
!4694 = !DILocation(line: 4727, column: 2, scope: !4687)
!4695 = !DILocation(line: 4728, column: 17, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 4727, column: 52)
!4697 = !DILocation(line: 4728, column: 3, scope: !4696)
!4698 = !DILocation(line: 4729, column: 7, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 4729, column: 7)
!4700 = !DILocation(line: 4729, column: 12, scope: !4699)
!4701 = !DILocation(line: 4729, column: 7, scope: !4696)
!4702 = !DILocation(line: 4729, column: 20, scope: !4699)
!4703 = !DILocation(line: 4729, column: 30, scope: !4699)
!4704 = !DILocation(line: 4729, column: 35, scope: !4699)
!4705 = !DILocation(line: 4730, column: 7, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 4730, column: 7)
!4707 = !DILocation(line: 4730, column: 12, scope: !4706)
!4708 = !DILocation(line: 4730, column: 7, scope: !4696)
!4709 = !DILocation(line: 4730, column: 22, scope: !4706)
!4710 = !DILocation(line: 4730, column: 32, scope: !4706)
!4711 = !DILocation(line: 4730, column: 37, scope: !4706)
!4712 = !DILocation(line: 4731, column: 7, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 4731, column: 7)
!4714 = !DILocation(line: 4731, column: 12, scope: !4713)
!4715 = !DILocation(line: 4731, column: 7, scope: !4696)
!4716 = !DILocation(line: 4731, column: 20, scope: !4713)
!4717 = !DILocation(line: 4731, column: 30, scope: !4713)
!4718 = !DILocation(line: 4731, column: 35, scope: !4713)
!4719 = !DILocation(line: 4732, column: 21, scope: !4696)
!4720 = !DILocation(line: 4732, column: 26, scope: !4696)
!4721 = !DILocation(line: 4732, column: 3, scope: !4696)
!4722 = !DILocation(line: 4733, column: 2, scope: !4696)
!4723 = !DILocation(line: 4727, column: 41, scope: !4693)
!4724 = !DILocation(line: 4727, column: 46, scope: !4693)
!4725 = !DILocation(line: 4727, column: 39, scope: !4693)
!4726 = !DILocation(line: 4727, column: 2, scope: !4693)
!4727 = distinct !{!4727, !4694, !4728}
!4728 = !DILocation(line: 4733, column: 2, scope: !4687)
!4729 = !DILocation(line: 4735, column: 23, scope: !4655)
!4730 = !DILocation(line: 4735, column: 2, scope: !4655)
!4731 = !DILocation(line: 4737, column: 17, scope: !4655)
!4732 = !DILocation(line: 4737, column: 21, scope: !4655)
!4733 = !DILocation(line: 4737, column: 2, scope: !4655)
!4734 = !DILocation(line: 4738, column: 17, scope: !4655)
!4735 = !DILocation(line: 4738, column: 21, scope: !4655)
!4736 = !DILocation(line: 4738, column: 2, scope: !4655)
!4737 = !DILocation(line: 4740, column: 25, scope: !4655)
!4738 = !DILocation(line: 4740, column: 2, scope: !4655)
!4739 = !DILocation(line: 4743, column: 22, scope: !4655)
!4740 = !DILocation(line: 4743, column: 2, scope: !4655)
!4741 = !DILocation(line: 4745, column: 6, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4745, column: 6)
!4743 = !DILocation(line: 4745, column: 10, scope: !4742)
!4744 = !DILocation(line: 4745, column: 6, scope: !4655)
!4745 = !DILocation(line: 4746, column: 24, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 4745, column: 16)
!4747 = !DILocation(line: 4746, column: 28, scope: !4746)
!4748 = !DILocation(line: 4746, column: 3, scope: !4746)
!4749 = !DILocation(line: 4747, column: 23, scope: !4746)
!4750 = !DILocation(line: 4747, column: 3, scope: !4746)
!4751 = !DILocation(line: 4748, column: 23, scope: !4746)
!4752 = !DILocation(line: 4748, column: 3, scope: !4746)
!4753 = !DILocation(line: 4749, column: 2, scope: !4746)
!4754 = !DILocation(line: 4751, column: 29, scope: !4655)
!4755 = !DILocation(line: 4751, column: 2, scope: !4655)
!4756 = !DILocation(line: 4753, column: 6, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4753, column: 6)
!4758 = !DILocation(line: 4753, column: 10, scope: !4757)
!4759 = !DILocation(line: 4753, column: 15, scope: !4757)
!4760 = !DILocation(line: 4753, column: 6, scope: !4655)
!4761 = !DILocation(line: 4754, column: 3, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 4753, column: 25)
!4763 = !DILocation(line: 4754, column: 13, scope: !4762)
!4764 = !DILocation(line: 4754, column: 17, scope: !4762)
!4765 = !DILocation(line: 4754, column: 22, scope: !4762)
!4766 = !DILocation(line: 4755, column: 3, scope: !4762)
!4767 = !DILocation(line: 4755, column: 7, scope: !4762)
!4768 = !DILocation(line: 4755, column: 12, scope: !4762)
!4769 = !DILocation(line: 4755, column: 20, scope: !4762)
!4770 = !DILocation(line: 4756, column: 7, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 4756, column: 7)
!4772 = !DILocation(line: 4756, column: 11, scope: !4771)
!4773 = !DILocation(line: 4756, column: 17, scope: !4771)
!4774 = !DILocation(line: 4756, column: 20, scope: !4771)
!4775 = !DILocation(line: 4756, column: 24, scope: !4771)
!4776 = !DILocation(line: 4756, column: 31, scope: !4771)
!4777 = !DILocation(line: 4756, column: 7, scope: !4762)
!4778 = !DILocation(line: 4757, column: 4, scope: !4771)
!4779 = !DILocation(line: 4757, column: 8, scope: !4771)
!4780 = !DILocation(line: 4757, column: 15, scope: !4771)
!4781 = !DILocation(line: 4757, column: 22, scope: !4771)
!4782 = !DILocation(line: 4757, column: 30, scope: !4771)
!4783 = !DILocation(line: 4758, column: 2, scope: !4762)
!4784 = !DILocation(line: 4759, column: 6, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4759, column: 6)
!4786 = !DILocation(line: 4759, column: 10, scope: !4785)
!4787 = !DILocation(line: 4759, column: 15, scope: !4785)
!4788 = !DILocation(line: 4759, column: 6, scope: !4655)
!4789 = !DILocation(line: 4760, column: 3, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 4759, column: 25)
!4791 = !DILocation(line: 4760, column: 13, scope: !4790)
!4792 = !DILocation(line: 4760, column: 17, scope: !4790)
!4793 = !DILocation(line: 4760, column: 22, scope: !4790)
!4794 = !DILocation(line: 4761, column: 3, scope: !4790)
!4795 = !DILocation(line: 4761, column: 7, scope: !4790)
!4796 = !DILocation(line: 4761, column: 12, scope: !4790)
!4797 = !DILocation(line: 4761, column: 20, scope: !4790)
!4798 = !DILocation(line: 4762, column: 7, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 4762, column: 7)
!4800 = !DILocation(line: 4762, column: 11, scope: !4799)
!4801 = !DILocation(line: 4762, column: 17, scope: !4799)
!4802 = !DILocation(line: 4762, column: 20, scope: !4799)
!4803 = !DILocation(line: 4762, column: 24, scope: !4799)
!4804 = !DILocation(line: 4762, column: 31, scope: !4799)
!4805 = !DILocation(line: 4762, column: 7, scope: !4790)
!4806 = !DILocation(line: 4763, column: 4, scope: !4799)
!4807 = !DILocation(line: 4763, column: 8, scope: !4799)
!4808 = !DILocation(line: 4763, column: 15, scope: !4799)
!4809 = !DILocation(line: 4763, column: 22, scope: !4799)
!4810 = !DILocation(line: 4763, column: 30, scope: !4799)
!4811 = !DILocation(line: 4764, column: 2, scope: !4790)
!4812 = !DILocation(line: 4765, column: 6, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4765, column: 6)
!4814 = !DILocation(line: 4765, column: 10, scope: !4813)
!4815 = !DILocation(line: 4765, column: 12, scope: !4813)
!4816 = !DILocation(line: 4765, column: 17, scope: !4813)
!4817 = !DILocation(line: 4765, column: 6, scope: !4655)
!4818 = !DILocation(line: 4766, column: 26, scope: !4813)
!4819 = !DILocation(line: 4766, column: 3, scope: !4813)
!4820 = !DILocation(line: 4768, column: 6, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4768, column: 6)
!4822 = !DILocation(line: 4768, column: 10, scope: !4821)
!4823 = !DILocation(line: 4768, column: 12, scope: !4821)
!4824 = !DILocation(line: 4768, column: 17, scope: !4821)
!4825 = !DILocation(line: 4768, column: 6, scope: !4655)
!4826 = !DILocation(line: 4768, column: 43, scope: !4821)
!4827 = !DILocation(line: 4768, column: 31, scope: !4821)
!4828 = !DILocation(line: 4770, column: 11, scope: !4655)
!4829 = !DILocation(line: 4770, column: 2, scope: !4655)
!4830 = !DILocation(line: 4771, column: 11, scope: !4655)
!4831 = !DILocation(line: 4771, column: 2, scope: !4655)
!4832 = !DILocation(line: 4772, column: 22, scope: !4655)
!4833 = !DILocation(line: 4772, column: 2, scope: !4655)
!4834 = !DILocation(line: 4774, column: 52, scope: !4655)
!4835 = !DILocation(line: 4774, column: 56, scope: !4655)
!4836 = !DILocation(line: 4774, column: 63, scope: !4655)
!4837 = !DILocation(line: 4774, column: 40, scope: !4655)
!4838 = !DILocation(line: 4774, column: 44, scope: !4655)
!4839 = !DILocation(line: 4774, column: 51, scope: !4655)
!4840 = !DILocation(line: 4774, column: 26, scope: !4655)
!4841 = !DILocation(line: 4774, column: 30, scope: !4655)
!4842 = !DILocation(line: 4774, column: 39, scope: !4655)
!4843 = !DILocation(line: 4774, column: 14, scope: !4655)
!4844 = !DILocation(line: 4774, column: 18, scope: !4655)
!4845 = !DILocation(line: 4774, column: 25, scope: !4655)
!4846 = !DILocation(line: 4774, column: 2, scope: !4655)
!4847 = !DILocation(line: 4774, column: 6, scope: !4655)
!4848 = !DILocation(line: 4774, column: 13, scope: !4655)
!4849 = !DILocation(line: 4775, column: 2, scope: !4655)
!4850 = !DILocation(line: 4775, column: 6, scope: !4655)
!4851 = !DILocation(line: 4775, column: 8, scope: !4655)
!4852 = !DILocation(line: 4775, column: 20, scope: !4655)
!4853 = !DILocation(line: 4777, column: 2, scope: !4655)
!4854 = !DILocation(line: 4777, column: 6, scope: !4655)
!4855 = !DILocation(line: 4777, column: 13, scope: !4655)
!4856 = !DILocation(line: 4779, column: 6, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4779, column: 6)
!4858 = !DILocation(line: 4779, column: 10, scope: !4857)
!4859 = !DILocation(line: 4779, column: 6, scope: !4655)
!4860 = !DILocation(line: 4780, column: 7, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 4780, column: 7)
!4862 = !DILocation(line: 4780, column: 11, scope: !4861)
!4863 = !DILocation(line: 4780, column: 18, scope: !4861)
!4864 = !DILocation(line: 4780, column: 20, scope: !4861)
!4865 = !DILocation(line: 4780, column: 28, scope: !4861)
!4866 = !DILocation(line: 4780, column: 7, scope: !4857)
!4867 = !DILocation(line: 4781, column: 9, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 4781, column: 8)
!4869 = !DILocation(line: 4781, column: 13, scope: !4868)
!4870 = !DILocation(line: 4781, column: 15, scope: !4868)
!4871 = !DILocation(line: 4781, column: 23, scope: !4868)
!4872 = !DILocation(line: 4781, column: 61, scope: !4868)
!4873 = !DILocation(line: 4781, column: 8, scope: !4861)
!4874 = !DILocation(line: 4782, column: 5, scope: !4868)
!4875 = !DILocation(line: 4781, column: 63, scope: !4868)
!4876 = !DILocation(line: 4780, column: 30, scope: !4861)
!4877 = !DILocation(line: 4784, column: 6, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 4784, column: 6)
!4879 = !DILocation(line: 4784, column: 10, scope: !4878)
!4880 = !DILocation(line: 4784, column: 6, scope: !4655)
!4881 = !DILocation(line: 4785, column: 21, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 4784, column: 20)
!4883 = !DILocation(line: 4785, column: 25, scope: !4882)
!4884 = !DILocation(line: 4785, column: 3, scope: !4882)
!4885 = !DILocation(line: 4786, column: 3, scope: !4882)
!4886 = !DILocation(line: 4786, column: 7, scope: !4882)
!4887 = !DILocation(line: 4786, column: 16, scope: !4882)
!4888 = !DILocation(line: 4787, column: 2, scope: !4882)
!4889 = !DILocation(line: 4788, column: 1, scope: !4655)
!4890 = distinct !DISubprogram(name: "free_mesh_orco_hash", scope: !3, file: !3, line: 657, type: !4451, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4891 = !DILocalVariable(name: "re", arg: 1, scope: !4890, file: !3, line: 657, type: !6)
!4892 = !DILocation(line: 657, column: 41, scope: !4890)
!4893 = !DILocation(line: 659, column: 6, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 659, column: 6)
!4895 = !DILocation(line: 659, column: 10, scope: !4894)
!4896 = !DILocation(line: 659, column: 6, scope: !4890)
!4897 = !DILocation(line: 660, column: 18, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 659, column: 21)
!4899 = !DILocation(line: 660, column: 22, scope: !4898)
!4900 = !DILocation(line: 660, column: 39, scope: !4898)
!4901 = !DILocation(line: 660, column: 3, scope: !4898)
!4902 = !DILocation(line: 661, column: 3, scope: !4898)
!4903 = !DILocation(line: 661, column: 7, scope: !4898)
!4904 = !DILocation(line: 661, column: 17, scope: !4898)
!4905 = !DILocation(line: 662, column: 2, scope: !4898)
!4906 = !DILocation(line: 663, column: 1, scope: !4890)
!4907 = distinct !DISubprogram(name: "free_camera_inside_volumes", scope: !3, file: !3, line: 3010, type: !4451, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4908 = !DILocalVariable(name: "re", arg: 1, scope: !4907, file: !3, line: 3010, type: !6)
!4909 = !DILocation(line: 3010, column: 48, scope: !4907)
!4910 = !DILocation(line: 3012, column: 17, scope: !4907)
!4911 = !DILocation(line: 3012, column: 21, scope: !4907)
!4912 = !DILocation(line: 3012, column: 2, scope: !4907)
!4913 = !DILocation(line: 3013, column: 1, scope: !4907)
!4914 = distinct !DISubprogram(name: "RE_Database_FromScene", scope: !3, file: !3, line: 5111, type: !4915, scopeLine: 5112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{null, !6, !4917, !2982, !79, !21}
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2923, line: 104, baseType: !2922)
!4919 = !DILocalVariable(name: "re", arg: 1, scope: !4914, file: !3, line: 5111, type: !6)
!4920 = !DILocation(line: 5111, column: 36, scope: !4914)
!4921 = !DILocalVariable(name: "bmain", arg: 2, scope: !4914, file: !3, line: 5111, type: !4917)
!4922 = !DILocation(line: 5111, column: 46, scope: !4914)
!4923 = !DILocalVariable(name: "scene", arg: 3, scope: !4914, file: !3, line: 5111, type: !2982)
!4924 = !DILocation(line: 5111, column: 60, scope: !4914)
!4925 = !DILocalVariable(name: "lay", arg: 4, scope: !4914, file: !3, line: 5111, type: !79)
!4926 = !DILocation(line: 5111, column: 80, scope: !4914)
!4927 = !DILocalVariable(name: "use_camera_view", arg: 5, scope: !4914, file: !3, line: 5111, type: !21)
!4928 = !DILocation(line: 5111, column: 89, scope: !4914)
!4929 = !DILocalVariable(name: "sce", scope: !4914, file: !3, line: 5113, type: !2982)
!4930 = !DILocation(line: 5113, column: 9, scope: !4914)
!4931 = !DILocalVariable(name: "camera", scope: !4914, file: !3, line: 5114, type: !3236)
!4932 = !DILocation(line: 5114, column: 10, scope: !4914)
!4933 = !DILocalVariable(name: "mat", scope: !4914, file: !3, line: 5115, type: !462)
!4934 = !DILocation(line: 5115, column: 8, scope: !4914)
!4935 = !DILocalVariable(name: "amb", scope: !4914, file: !3, line: 5116, type: !188)
!4936 = !DILocation(line: 5116, column: 8, scope: !4914)
!4937 = !DILocation(line: 5118, column: 12, scope: !4914)
!4938 = !DILocation(line: 5118, column: 2, scope: !4914)
!4939 = !DILocation(line: 5118, column: 6, scope: !4914)
!4940 = !DILocation(line: 5118, column: 10, scope: !4914)
!4941 = !DILocation(line: 5119, column: 13, scope: !4914)
!4942 = !DILocation(line: 5119, column: 2, scope: !4914)
!4943 = !DILocation(line: 5119, column: 6, scope: !4914)
!4944 = !DILocation(line: 5119, column: 11, scope: !4914)
!4945 = !DILocation(line: 5120, column: 11, scope: !4914)
!4946 = !DILocation(line: 5120, column: 2, scope: !4914)
!4947 = !DILocation(line: 5120, column: 6, scope: !4914)
!4948 = !DILocation(line: 5120, column: 9, scope: !4914)
!4949 = !DILocation(line: 5122, column: 6, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5122, column: 6)
!4951 = !DILocation(line: 5122, column: 10, scope: !4950)
!4952 = !DILocation(line: 5122, column: 12, scope: !4950)
!4953 = !DILocation(line: 5122, column: 20, scope: !4950)
!4954 = !DILocation(line: 5122, column: 6, scope: !4914)
!4955 = !DILocation(line: 5123, column: 69, scope: !4950)
!4956 = !DILocation(line: 5123, column: 28, scope: !4950)
!4957 = !DILocation(line: 5123, column: 3, scope: !4950)
!4958 = !DILocation(line: 5123, column: 7, scope: !4950)
!4959 = !DILocation(line: 5123, column: 26, scope: !4950)
!4960 = !DILocation(line: 5126, column: 23, scope: !4914)
!4961 = !DILocation(line: 5126, column: 10, scope: !4914)
!4962 = !DILocation(line: 5126, column: 8, scope: !4914)
!4963 = !DILocation(line: 5129, column: 2, scope: !4914)
!4964 = !DILocation(line: 5129, column: 6, scope: !4914)
!4965 = !DILocation(line: 5129, column: 8, scope: !4914)
!4966 = !DILocation(line: 5129, column: 15, scope: !4914)
!4967 = !DILocation(line: 5130, column: 14, scope: !4914)
!4968 = !DILocation(line: 5130, column: 21, scope: !4914)
!4969 = !DILocation(line: 5130, column: 23, scope: !4914)
!4970 = !DILocation(line: 5130, column: 2, scope: !4914)
!4971 = !DILocation(line: 5130, column: 6, scope: !4914)
!4972 = !DILocation(line: 5130, column: 8, scope: !4914)
!4973 = !DILocation(line: 5130, column: 12, scope: !4914)
!4974 = !DILocation(line: 5131, column: 14, scope: !4914)
!4975 = !DILocation(line: 5131, column: 18, scope: !4914)
!4976 = !DILocation(line: 5131, column: 20, scope: !4914)
!4977 = !DILocation(line: 5131, column: 32, scope: !4914)
!4978 = !DILocation(line: 5131, column: 39, scope: !4914)
!4979 = !DILocation(line: 5131, column: 42, scope: !4914)
!4980 = !DILocation(line: 5131, column: 47, scope: !4914)
!4981 = !DILocation(line: 5131, column: 2, scope: !4914)
!4982 = !DILocation(line: 5135, column: 17, scope: !4914)
!4983 = !DILocation(line: 5135, column: 2, scope: !4914)
!4984 = !DILocation(line: 5135, column: 6, scope: !4914)
!4985 = !DILocation(line: 5135, column: 15, scope: !4914)
!4986 = !DILocation(line: 5136, column: 52, scope: !4914)
!4987 = !DILocation(line: 5136, column: 56, scope: !4914)
!4988 = !DILocation(line: 5136, column: 63, scope: !4914)
!4989 = !DILocation(line: 5136, column: 40, scope: !4914)
!4990 = !DILocation(line: 5136, column: 44, scope: !4914)
!4991 = !DILocation(line: 5136, column: 51, scope: !4914)
!4992 = !DILocation(line: 5136, column: 26, scope: !4914)
!4993 = !DILocation(line: 5136, column: 30, scope: !4914)
!4994 = !DILocation(line: 5136, column: 39, scope: !4914)
!4995 = !DILocation(line: 5136, column: 14, scope: !4914)
!4996 = !DILocation(line: 5136, column: 18, scope: !4914)
!4997 = !DILocation(line: 5136, column: 25, scope: !4914)
!4998 = !DILocation(line: 5136, column: 2, scope: !4914)
!4999 = !DILocation(line: 5136, column: 6, scope: !4914)
!5000 = !DILocation(line: 5136, column: 13, scope: !4914)
!5001 = !DILocation(line: 5137, column: 20, scope: !4914)
!5002 = !DILocation(line: 5137, column: 24, scope: !4914)
!5003 = !DILocation(line: 5137, column: 31, scope: !4914)
!5004 = !DILocation(line: 5137, column: 35, scope: !4914)
!5005 = !DILocation(line: 5137, column: 2, scope: !4914)
!5006 = !DILocation(line: 5137, column: 6, scope: !4914)
!5007 = !DILocation(line: 5137, column: 13, scope: !4914)
!5008 = !DILocation(line: 5137, column: 18, scope: !4914)
!5009 = !DILocation(line: 5138, column: 21, scope: !4914)
!5010 = !DILocation(line: 5138, column: 25, scope: !4914)
!5011 = !DILocation(line: 5138, column: 33, scope: !4914)
!5012 = !DILocation(line: 5138, column: 37, scope: !4914)
!5013 = !DILocation(line: 5138, column: 2, scope: !4914)
!5014 = !DILocation(line: 5138, column: 6, scope: !4914)
!5015 = !DILocation(line: 5138, column: 14, scope: !4914)
!5016 = !DILocation(line: 5138, column: 19, scope: !4914)
!5017 = !DILocation(line: 5140, column: 12, scope: !4914)
!5018 = !DILocation(line: 5141, column: 2, scope: !4914)
!5019 = !DILocation(line: 5141, column: 6, scope: !4914)
!5020 = !DILocation(line: 5141, column: 8, scope: !4914)
!5021 = !DILocation(line: 5141, column: 18, scope: !4914)
!5022 = !DILocation(line: 5144, column: 6, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5144, column: 6)
!5024 = !DILocation(line: 5144, column: 10, scope: !5023)
!5025 = !DILocation(line: 5144, column: 14, scope: !5023)
!5026 = !DILocation(line: 5144, column: 6, scope: !4914)
!5027 = !DILocation(line: 5145, column: 7, scope: !5023)
!5028 = !DILocation(line: 5145, column: 3, scope: !5023)
!5029 = !DILocation(line: 5148, column: 7, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5148, column: 6)
!5031 = !DILocation(line: 5148, column: 11, scope: !5030)
!5032 = !DILocation(line: 5148, column: 13, scope: !5030)
!5033 = !DILocation(line: 5148, column: 21, scope: !5030)
!5034 = !DILocation(line: 5148, column: 77, scope: !5030)
!5035 = !DILocation(line: 5148, column: 6, scope: !4914)
!5036 = !DILocation(line: 5149, column: 33, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 5148, column: 82)
!5038 = !DILocation(line: 5149, column: 37, scope: !5037)
!5039 = !DILocation(line: 5149, column: 47, scope: !5037)
!5040 = !DILocation(line: 5149, column: 51, scope: !5037)
!5041 = !DILocation(line: 5149, column: 57, scope: !5037)
!5042 = !DILocation(line: 5149, column: 61, scope: !5037)
!5043 = !DILocation(line: 5149, column: 68, scope: !5037)
!5044 = !DILocation(line: 5149, column: 3, scope: !5037)
!5045 = !DILocation(line: 5150, column: 33, scope: !5037)
!5046 = !DILocation(line: 5150, column: 38, scope: !5037)
!5047 = !DILocation(line: 5150, column: 42, scope: !5037)
!5048 = !DILocation(line: 5150, column: 49, scope: !5037)
!5049 = !DILocation(line: 5150, column: 3, scope: !5037)
!5050 = !DILocation(line: 5151, column: 2, scope: !5037)
!5051 = !DILocation(line: 5154, column: 6, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5154, column: 6)
!5053 = !DILocation(line: 5154, column: 22, scope: !5052)
!5054 = !DILocation(line: 5154, column: 25, scope: !5052)
!5055 = !DILocation(line: 5154, column: 6, scope: !4914)
!5056 = !DILocation(line: 5158, column: 16, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 5154, column: 33)
!5058 = !DILocation(line: 5158, column: 20, scope: !5057)
!5059 = !DILocation(line: 5158, column: 3, scope: !5057)
!5060 = !DILocation(line: 5160, column: 19, scope: !5057)
!5061 = !DILocation(line: 5160, column: 24, scope: !5057)
!5062 = !DILocation(line: 5160, column: 32, scope: !5057)
!5063 = !DILocation(line: 5160, column: 3, scope: !5057)
!5064 = !DILocation(line: 5161, column: 13, scope: !5057)
!5065 = !DILocation(line: 5161, column: 3, scope: !5057)
!5066 = !DILocation(line: 5162, column: 14, scope: !5057)
!5067 = !DILocation(line: 5162, column: 18, scope: !5057)
!5068 = !DILocation(line: 5162, column: 3, scope: !5057)
!5069 = !DILocation(line: 5165, column: 24, scope: !5057)
!5070 = !DILocation(line: 5165, column: 28, scope: !5057)
!5071 = !DILocation(line: 5165, column: 35, scope: !5057)
!5072 = !DILocation(line: 5165, column: 43, scope: !5057)
!5073 = !DILocation(line: 5165, column: 3, scope: !5057)
!5074 = !DILocation(line: 5166, column: 2, scope: !5057)
!5075 = !DILocation(line: 5169, column: 13, scope: !4914)
!5076 = !DILocation(line: 5169, column: 17, scope: !4914)
!5077 = !DILocation(line: 5169, column: 31, scope: !4914)
!5078 = !DILocation(line: 5169, column: 35, scope: !4914)
!5079 = !DILocation(line: 5169, column: 2, scope: !4914)
!5080 = !DILocation(line: 5171, column: 20, scope: !4914)
!5081 = !DILocation(line: 5171, column: 2, scope: !4914)
!5082 = !DILocation(line: 5172, column: 6, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5172, column: 6)
!5084 = !DILocation(line: 5172, column: 10, scope: !5083)
!5085 = !DILocation(line: 5172, column: 12, scope: !5083)
!5086 = !DILocation(line: 5172, column: 17, scope: !5083)
!5087 = !DILocation(line: 5172, column: 6, scope: !4914)
!5088 = !DILocation(line: 5173, column: 26, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 5172, column: 31)
!5090 = !DILocation(line: 5173, column: 3, scope: !5089)
!5091 = !DILocation(line: 5175, column: 7, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 5175, column: 7)
!5093 = !DILocation(line: 5175, column: 11, scope: !5092)
!5094 = !DILocation(line: 5175, column: 16, scope: !5092)
!5095 = !DILocation(line: 5175, column: 21, scope: !5092)
!5096 = !DILocation(line: 5175, column: 7, scope: !5089)
!5097 = !DILocation(line: 5176, column: 8, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 5176, column: 8)
!5099 = !DILocation(line: 5176, column: 12, scope: !5098)
!5100 = !DILocation(line: 5176, column: 17, scope: !5098)
!5101 = !DILocation(line: 5176, column: 32, scope: !5098)
!5102 = !DILocation(line: 5176, column: 8, scope: !5092)
!5103 = !DILocation(line: 5177, column: 21, scope: !5098)
!5104 = !DILocation(line: 5177, column: 25, scope: !5098)
!5105 = !DILocation(line: 5177, column: 5, scope: !5098)
!5106 = !DILocation(line: 5176, column: 35, scope: !5098)
!5107 = !DILocation(line: 5178, column: 2, scope: !5089)
!5108 = !DILocation(line: 5181, column: 23, scope: !4914)
!5109 = !DILocation(line: 5181, column: 2, scope: !4914)
!5110 = !DILocation(line: 5182, column: 13, scope: !4914)
!5111 = !DILocation(line: 5182, column: 19, scope: !4914)
!5112 = !DILocation(line: 5182, column: 23, scope: !4914)
!5113 = !DILocation(line: 5182, column: 28, scope: !4914)
!5114 = !DILocation(line: 5182, column: 2, scope: !4914)
!5115 = !DILocation(line: 5183, column: 24, scope: !4914)
!5116 = !DILocation(line: 5183, column: 28, scope: !4914)
!5117 = !DILocation(line: 5183, column: 34, scope: !4914)
!5118 = !DILocation(line: 5183, column: 38, scope: !4914)
!5119 = !DILocation(line: 5183, column: 40, scope: !4914)
!5120 = !DILocation(line: 5183, column: 46, scope: !4914)
!5121 = !DILocation(line: 5183, column: 2, scope: !4914)
!5122 = !DILocation(line: 5184, column: 2, scope: !4914)
!5123 = !DILocation(line: 5187, column: 24, scope: !4914)
!5124 = !DILocation(line: 5187, column: 28, scope: !4914)
!5125 = !DILocation(line: 5187, column: 2, scope: !4914)
!5126 = !DILocation(line: 5189, column: 7, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 5189, column: 6)
!5128 = !DILocation(line: 5189, column: 11, scope: !5127)
!5129 = !DILocation(line: 5189, column: 22, scope: !5127)
!5130 = !DILocation(line: 5189, column: 26, scope: !5127)
!5131 = !DILocation(line: 5189, column: 6, scope: !4914)
!5132 = !DILocation(line: 5190, column: 28, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5127, file: !3, line: 5189, column: 32)
!5134 = !DILocation(line: 5190, column: 3, scope: !5133)
!5135 = !DILocation(line: 5191, column: 13, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5133, file: !3, line: 5191, column: 3)
!5137 = !DILocation(line: 5191, column: 17, scope: !5136)
!5138 = !DILocation(line: 5191, column: 11, scope: !5136)
!5139 = !DILocation(line: 5191, column: 8, scope: !5136)
!5140 = !DILocation(line: 5191, column: 24, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 5191, column: 3)
!5142 = !DILocation(line: 5191, column: 3, scope: !5136)
!5143 = !DILocation(line: 5192, column: 32, scope: !5141)
!5144 = !DILocation(line: 5192, column: 36, scope: !5141)
!5145 = !DILocation(line: 5192, column: 4, scope: !5141)
!5146 = !DILocation(line: 5191, column: 34, scope: !5141)
!5147 = !DILocation(line: 5191, column: 39, scope: !5141)
!5148 = !DILocation(line: 5191, column: 32, scope: !5141)
!5149 = !DILocation(line: 5191, column: 3, scope: !5141)
!5150 = distinct !{!5150, !5142, !5151}
!5151 = !DILocation(line: 5192, column: 39, scope: !5136)
!5152 = !DILocation(line: 5195, column: 18, scope: !5133)
!5153 = !DILocation(line: 5195, column: 22, scope: !5133)
!5154 = !DILocation(line: 5195, column: 3, scope: !5133)
!5155 = !DILocation(line: 5195, column: 7, scope: !5133)
!5156 = !DILocation(line: 5195, column: 9, scope: !5133)
!5157 = !DILocation(line: 5195, column: 16, scope: !5133)
!5158 = !DILocation(line: 5196, column: 18, scope: !5133)
!5159 = !DILocation(line: 5196, column: 22, scope: !5133)
!5160 = !DILocation(line: 5196, column: 3, scope: !5133)
!5161 = !DILocation(line: 5196, column: 7, scope: !5133)
!5162 = !DILocation(line: 5196, column: 9, scope: !5133)
!5163 = !DILocation(line: 5196, column: 16, scope: !5133)
!5164 = !DILocation(line: 5197, column: 20, scope: !5133)
!5165 = !DILocation(line: 5197, column: 24, scope: !5133)
!5166 = !DILocation(line: 5197, column: 3, scope: !5133)
!5167 = !DILocation(line: 5197, column: 7, scope: !5133)
!5168 = !DILocation(line: 5197, column: 9, scope: !5133)
!5169 = !DILocation(line: 5197, column: 18, scope: !5133)
!5170 = !DILocation(line: 5198, column: 18, scope: !5133)
!5171 = !DILocation(line: 5198, column: 22, scope: !5133)
!5172 = !DILocation(line: 5198, column: 3, scope: !5133)
!5173 = !DILocation(line: 5198, column: 7, scope: !5133)
!5174 = !DILocation(line: 5198, column: 9, scope: !5133)
!5175 = !DILocation(line: 5198, column: 16, scope: !5133)
!5176 = !DILocation(line: 5199, column: 18, scope: !5133)
!5177 = !DILocation(line: 5199, column: 22, scope: !5133)
!5178 = !DILocation(line: 5199, column: 3, scope: !5133)
!5179 = !DILocation(line: 5199, column: 7, scope: !5133)
!5180 = !DILocation(line: 5199, column: 9, scope: !5133)
!5181 = !DILocation(line: 5199, column: 16, scope: !5133)
!5182 = !DILocation(line: 5200, column: 3, scope: !5133)
!5183 = !DILocation(line: 5200, column: 7, scope: !5133)
!5184 = !DILocation(line: 5200, column: 18, scope: !5133)
!5185 = !DILocation(line: 5200, column: 22, scope: !5133)
!5186 = !DILocation(line: 5200, column: 28, scope: !5133)
!5187 = !DILocation(line: 5200, column: 32, scope: !5133)
!5188 = !DILocation(line: 5201, column: 2, scope: !5133)
!5189 = !DILocation(line: 5203, column: 12, scope: !4914)
!5190 = !DILocation(line: 5204, column: 1, scope: !4914)
!5191 = distinct !DISubprogram(name: "database_init_objects", scope: !3, file: !3, line: 4925, type: !5192, scopeLine: 4926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{null, !6, !79, !21, !21, !3236, !21}
!5194 = !DILocalVariable(name: "re", arg: 1, scope: !5191, file: !3, line: 4925, type: !6)
!5195 = !DILocation(line: 4925, column: 43, scope: !5191)
!5196 = !DILocalVariable(name: "renderlay", arg: 2, scope: !5191, file: !3, line: 4925, type: !79)
!5197 = !DILocation(line: 4925, column: 60, scope: !5191)
!5198 = !DILocalVariable(name: "nolamps", arg: 3, scope: !5191, file: !3, line: 4925, type: !21)
!5199 = !DILocation(line: 4925, column: 75, scope: !5191)
!5200 = !DILocalVariable(name: "onlyselected", arg: 4, scope: !5191, file: !3, line: 4925, type: !21)
!5201 = !DILocation(line: 4925, column: 88, scope: !5191)
!5202 = !DILocalVariable(name: "actob", arg: 5, scope: !5191, file: !3, line: 4925, type: !3236)
!5203 = !DILocation(line: 4925, column: 110, scope: !5191)
!5204 = !DILocalVariable(name: "timeoffset", arg: 6, scope: !5191, file: !3, line: 4925, type: !21)
!5205 = !DILocation(line: 4925, column: 121, scope: !5191)
!5206 = !DILocalVariable(name: "base", scope: !5191, file: !3, line: 4927, type: !5207)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !417, line: 75, baseType: !1195)
!5209 = !DILocation(line: 4927, column: 8, scope: !5191)
!5210 = !DILocalVariable(name: "ob", scope: !5191, file: !3, line: 4928, type: !3236)
!5211 = !DILocation(line: 4928, column: 10, scope: !5191)
!5212 = !DILocalVariable(name: "group", scope: !5191, file: !3, line: 4929, type: !5213)
!5213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5214, size: 64)
!5214 = !DIDerivedType(tag: DW_TAG_typedef, name: "Group", file: !538, line: 61, baseType: !537)
!5215 = !DILocation(line: 4929, column: 9, scope: !5191)
!5216 = !DILocalVariable(name: "obi", scope: !5191, file: !3, line: 4930, type: !3342)
!5217 = !DILocation(line: 4930, column: 21, scope: !5191)
!5218 = !DILocalVariable(name: "sce_iter", scope: !5191, file: !3, line: 4931, type: !2982)
!5219 = !DILocation(line: 4931, column: 9, scope: !5191)
!5220 = !DILocalVariable(name: "lay", scope: !5191, file: !3, line: 4932, type: !21)
!5221 = !DILocation(line: 4932, column: 6, scope: !5191)
!5222 = !DILocalVariable(name: "vectorlay", scope: !5191, file: !3, line: 4932, type: !21)
!5223 = !DILocation(line: 4932, column: 11, scope: !5191)
!5224 = !DILocation(line: 4937, column: 2, scope: !5191)
!5225 = !DILocation(line: 4945, column: 11, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 4945, column: 2)
!5227 = !DILocation(line: 4945, column: 15, scope: !5226)
!5228 = !DILocation(line: 4945, column: 21, scope: !5226)
!5229 = !DILocation(line: 4945, column: 28, scope: !5226)
!5230 = !DILocation(line: 4945, column: 9, scope: !5226)
!5231 = !DILocation(line: 4945, column: 7, scope: !5226)
!5232 = !DILocation(line: 4945, column: 35, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 4945, column: 2)
!5234 = !DILocation(line: 4945, column: 2, scope: !5226)
!5235 = !DILocalVariable(name: "mat", scope: !5236, file: !3, line: 4946, type: !462)
!5236 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 4945, column: 56)
!5237 = !DILocation(line: 4946, column: 9, scope: !5236)
!5238 = !DILocation(line: 4949, column: 15, scope: !5236)
!5239 = !DILocation(line: 4949, column: 20, scope: !5236)
!5240 = !DILocation(line: 4949, column: 24, scope: !5236)
!5241 = !DILocation(line: 4949, column: 33, scope: !5236)
!5242 = !DILocation(line: 4949, column: 37, scope: !5236)
!5243 = !DILocation(line: 4949, column: 3, scope: !5236)
!5244 = !DILocation(line: 4950, column: 16, scope: !5236)
!5245 = !DILocation(line: 4950, column: 20, scope: !5236)
!5246 = !DILocation(line: 4950, column: 30, scope: !5236)
!5247 = !DILocation(line: 4950, column: 3, scope: !5236)
!5248 = !DILocation(line: 4951, column: 14, scope: !5236)
!5249 = !DILocation(line: 4951, column: 18, scope: !5236)
!5250 = !DILocation(line: 4951, column: 24, scope: !5236)
!5251 = !DILocation(line: 4951, column: 28, scope: !5236)
!5252 = !DILocation(line: 4951, column: 3, scope: !5236)
!5253 = !DILocation(line: 4953, column: 3, scope: !5236)
!5254 = !DILocation(line: 4953, column: 7, scope: !5236)
!5255 = !DILocation(line: 4953, column: 12, scope: !5236)
!5256 = !DILocation(line: 4954, column: 3, scope: !5236)
!5257 = !DILocation(line: 4954, column: 7, scope: !5236)
!5258 = !DILocation(line: 4954, column: 17, scope: !5236)
!5259 = !DILocation(line: 4955, column: 2, scope: !5236)
!5260 = !DILocation(line: 4945, column: 43, scope: !5233)
!5261 = !DILocation(line: 4945, column: 47, scope: !5233)
!5262 = !DILocation(line: 4945, column: 50, scope: !5233)
!5263 = !DILocation(line: 4945, column: 41, scope: !5233)
!5264 = !DILocation(line: 4945, column: 2, scope: !5233)
!5265 = distinct !{!5265, !5234, !5266}
!5266 = !DILocation(line: 4955, column: 2, scope: !5226)
!5267 = !DILocation(line: 4957, column: 7, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 4957, column: 2)
!5269 = !DILocation(line: 4957, column: 7, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 4957, column: 2)
!5271 = !DILocation(line: 4957, column: 2, scope: !5268)
!5272 = !DILocation(line: 4958, column: 7, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 4957, column: 45)
!5274 = !DILocation(line: 4958, column: 13, scope: !5273)
!5275 = !DILocation(line: 4958, column: 5, scope: !5273)
!5276 = !DILocation(line: 4963, column: 38, scope: !5273)
!5277 = !DILocation(line: 4963, column: 42, scope: !5273)
!5278 = !DILocation(line: 4963, column: 14, scope: !5273)
!5279 = !DILocation(line: 4963, column: 12, scope: !5273)
!5280 = !DILocation(line: 4964, column: 9, scope: !5273)
!5281 = !DILocation(line: 4964, column: 8, scope: !5273)
!5282 = !DILocation(line: 4964, column: 22, scope: !5273)
!5283 = !DILocation(line: 4964, column: 34, scope: !5273)
!5284 = !DILocation(line: 4964, column: 32, scope: !5273)
!5285 = !DILocation(line: 4964, column: 45, scope: !5273)
!5286 = !DILocation(line: 4964, column: 6, scope: !5273)
!5287 = !DILocation(line: 4967, column: 28, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 4967, column: 7)
!5289 = !DILocation(line: 4967, column: 32, scope: !5288)
!5290 = !DILocation(line: 4967, column: 7, scope: !5288)
!5291 = !DILocation(line: 4967, column: 7, scope: !5273)
!5292 = !DILocation(line: 4967, column: 37, scope: !5288)
!5293 = !DILocation(line: 4970, column: 7, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 4970, column: 7)
!5295 = !DILocation(line: 4970, column: 11, scope: !5294)
!5296 = !DILocation(line: 4970, column: 16, scope: !5294)
!5297 = !DILocation(line: 4970, column: 7, scope: !5273)
!5298 = !DILocation(line: 4973, column: 8, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 4973, column: 8)
!5300 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 4970, column: 27)
!5301 = !DILocation(line: 4973, column: 12, scope: !5299)
!5302 = !DILocation(line: 4973, column: 22, scope: !5299)
!5303 = !DILocation(line: 4973, column: 8, scope: !5300)
!5304 = !DILocation(line: 4974, column: 29, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5306, file: !3, line: 4974, column: 9)
!5306 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 4973, column: 41)
!5307 = !DILocation(line: 4974, column: 33, scope: !5305)
!5308 = !DILocation(line: 4974, column: 37, scope: !5305)
!5309 = !DILocation(line: 4974, column: 46, scope: !5305)
!5310 = !DILocation(line: 4974, column: 60, scope: !5305)
!5311 = !DILocation(line: 4974, column: 9, scope: !5305)
!5312 = !DILocation(line: 4974, column: 9, scope: !5306)
!5313 = !DILocation(line: 4975, column: 25, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5305, file: !3, line: 4974, column: 68)
!5315 = !DILocation(line: 4975, column: 29, scope: !5314)
!5316 = !DILocation(line: 4975, column: 51, scope: !5314)
!5317 = !DILocation(line: 4975, column: 6, scope: !5314)
!5318 = !DILocation(line: 4976, column: 6, scope: !5314)
!5319 = !DILocation(line: 4976, column: 10, scope: !5314)
!5320 = !DILocation(line: 4976, column: 20, scope: !5314)
!5321 = !DILocation(line: 4977, column: 5, scope: !5314)
!5322 = !DILocation(line: 4978, column: 4, scope: !5306)
!5323 = !DILocation(line: 4979, column: 3, scope: !5300)
!5324 = !DILocation(line: 4980, column: 13, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 4980, column: 12)
!5326 = !DILocation(line: 4980, column: 19, scope: !5325)
!5327 = !DILocation(line: 4980, column: 25, scope: !5325)
!5328 = !DILocation(line: 4980, column: 23, scope: !5325)
!5329 = !DILocation(line: 4980, column: 30, scope: !5325)
!5330 = !DILocation(line: 4980, column: 34, scope: !5325)
!5331 = !DILocation(line: 4980, column: 38, scope: !5325)
!5332 = !DILocation(line: 4980, column: 42, scope: !5325)
!5333 = !DILocation(line: 4980, column: 52, scope: !5325)
!5334 = !DILocation(line: 4980, column: 56, scope: !5325)
!5335 = !DILocation(line: 4980, column: 62, scope: !5325)
!5336 = !DILocation(line: 4980, column: 68, scope: !5325)
!5337 = !DILocation(line: 4980, column: 72, scope: !5325)
!5338 = !DILocation(line: 4980, column: 66, scope: !5325)
!5339 = !DILocation(line: 4980, column: 12, scope: !5294)
!5340 = !DILocation(line: 4981, column: 9, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 4981, column: 8)
!5342 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 4980, column: 80)
!5343 = !DILocation(line: 4981, column: 13, scope: !5341)
!5344 = !DILocation(line: 4981, column: 23, scope: !5341)
!5345 = !DILocation(line: 4981, column: 35, scope: !5341)
!5346 = !DILocation(line: 4981, column: 39, scope: !5341)
!5347 = !DILocation(line: 4981, column: 43, scope: !5341)
!5348 = !DILocation(line: 4981, column: 47, scope: !5341)
!5349 = !DILocation(line: 4981, column: 8, scope: !5342)
!5350 = !DILocalVariable(name: "dob", scope: !5351, file: !3, line: 4982, type: !3344)
!5351 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 4981, column: 60)
!5352 = !DILocation(line: 4982, column: 18, scope: !5351)
!5353 = !DILocalVariable(name: "duplilist", scope: !5351, file: !3, line: 4983, type: !2565)
!5354 = !DILocation(line: 4983, column: 15, scope: !5351)
!5355 = !DILocalVariable(name: "duplilist_apply_data", scope: !5351, file: !3, line: 4984, type: !5356)
!5356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5357, size: 64)
!5357 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliApplyData", file: !3339, line: 82, baseType: !5358)
!5358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliApplyData", file: !3339, line: 79, size: 128, elements: !5359)
!5359 = !{!5360, !5361}
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "num_objects", scope: !5358, file: !3339, line: 80, baseType: !21, size: 32)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5358, file: !3339, line: 81, baseType: !5362, size: 64, offset: 64)
!5362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5363, size: 64)
!5363 = !DIDerivedType(tag: DW_TAG_typedef, name: "DupliExtraData", file: !3339, line: 77, baseType: !5364)
!5364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DupliExtraData", file: !3339, line: 74, size: 544, elements: !5365)
!5365 = !{!5366, !5367}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !5364, file: !3339, line: 75, baseType: !462, size: 512)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5364, file: !3339, line: 76, baseType: !79, size: 32, offset: 512)
!5368 = !DILocation(line: 4984, column: 21, scope: !5351)
!5369 = !DILocalVariable(name: "i", scope: !5351, file: !3, line: 4985, type: !21)
!5370 = !DILocation(line: 4985, column: 9, scope: !5351)
!5371 = !DILocation(line: 4989, column: 31, scope: !5351)
!5372 = !DILocation(line: 4989, column: 35, scope: !5351)
!5373 = !DILocation(line: 4989, column: 39, scope: !5351)
!5374 = !DILocation(line: 4989, column: 5, scope: !5351)
!5375 = !DILocation(line: 4990, column: 34, scope: !5351)
!5376 = !DILocation(line: 4990, column: 38, scope: !5351)
!5377 = !DILocation(line: 4990, column: 48, scope: !5351)
!5378 = !DILocation(line: 4990, column: 52, scope: !5351)
!5379 = !DILocation(line: 4990, column: 59, scope: !5351)
!5380 = !DILocation(line: 4990, column: 17, scope: !5351)
!5381 = !DILocation(line: 4990, column: 15, scope: !5351)
!5382 = !DILocation(line: 4991, column: 44, scope: !5351)
!5383 = !DILocation(line: 4991, column: 48, scope: !5351)
!5384 = !DILocation(line: 4991, column: 28, scope: !5351)
!5385 = !DILocation(line: 4991, column: 26, scope: !5351)
!5386 = !DILocation(line: 4992, column: 31, scope: !5351)
!5387 = !DILocation(line: 4992, column: 35, scope: !5351)
!5388 = !DILocation(line: 4992, column: 39, scope: !5351)
!5389 = !DILocation(line: 4992, column: 5, scope: !5351)
!5390 = !DILocation(line: 4994, column: 15, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 4994, column: 5)
!5392 = !DILocation(line: 4994, column: 26, scope: !5391)
!5393 = !DILocation(line: 4994, column: 13, scope: !5391)
!5394 = !DILocation(line: 4994, column: 35, scope: !5391)
!5395 = !DILocation(line: 4994, column: 10, scope: !5391)
!5396 = !DILocation(line: 4994, column: 40, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 4994, column: 5)
!5398 = !DILocation(line: 4994, column: 5, scope: !5391)
!5399 = !DILocalVariable(name: "dob_extra", scope: !5400, file: !3, line: 4995, type: !5362)
!5400 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 4994, column: 66)
!5401 = !DILocation(line: 4995, column: 22, scope: !5400)
!5402 = !DILocation(line: 4995, column: 35, scope: !5400)
!5403 = !DILocation(line: 4995, column: 57, scope: !5400)
!5404 = !DILocation(line: 4995, column: 63, scope: !5400)
!5405 = !DILocalVariable(name: "obd", scope: !5400, file: !3, line: 4996, type: !3236)
!5406 = !DILocation(line: 4996, column: 14, scope: !5400)
!5407 = !DILocation(line: 4996, column: 19, scope: !5400)
!5408 = !DILocation(line: 4996, column: 24, scope: !5400)
!5409 = !DILocation(line: 4998, column: 17, scope: !5400)
!5410 = !DILocation(line: 4998, column: 22, scope: !5400)
!5411 = !DILocation(line: 4998, column: 29, scope: !5400)
!5412 = !DILocation(line: 4998, column: 34, scope: !5400)
!5413 = !DILocation(line: 4998, column: 6, scope: !5400)
!5414 = !DILocation(line: 5001, column: 12, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5001, column: 10)
!5416 = !DILocation(line: 5001, column: 17, scope: !5415)
!5417 = !DILocation(line: 5001, column: 27, scope: !5415)
!5418 = !DILocation(line: 5001, column: 46, scope: !5415)
!5419 = !DILocation(line: 5001, column: 49, scope: !5415)
!5420 = !DILocation(line: 5001, column: 54, scope: !5415)
!5421 = !DILocation(line: 5001, column: 10, scope: !5400)
!5422 = !DILocation(line: 5002, column: 7, scope: !5415)
!5423 = !DILocation(line: 5004, column: 27, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5004, column: 10)
!5425 = !DILocation(line: 5004, column: 31, scope: !5424)
!5426 = !DILocation(line: 5004, column: 10, scope: !5424)
!5427 = !DILocation(line: 5004, column: 10, scope: !5400)
!5428 = !DILocation(line: 5005, column: 7, scope: !5424)
!5429 = !DILocation(line: 5007, column: 10, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5007, column: 10)
!5431 = !DILocation(line: 5007, column: 15, scope: !5430)
!5432 = !DILocation(line: 5007, column: 19, scope: !5430)
!5433 = !DILocation(line: 5007, column: 10, scope: !5400)
!5434 = !DILocation(line: 5008, column: 7, scope: !5430)
!5435 = !DILocation(line: 5010, column: 31, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5010, column: 10)
!5437 = !DILocation(line: 5010, column: 35, scope: !5436)
!5438 = !DILocation(line: 5010, column: 40, scope: !5436)
!5439 = !DILocation(line: 5010, column: 49, scope: !5436)
!5440 = !DILocation(line: 5010, column: 63, scope: !5436)
!5441 = !DILocation(line: 5010, column: 11, scope: !5436)
!5442 = !DILocation(line: 5010, column: 10, scope: !5400)
!5443 = !DILocation(line: 5011, column: 7, scope: !5436)
!5444 = !DILocation(line: 5013, column: 38, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5013, column: 10)
!5446 = !DILocation(line: 5013, column: 42, scope: !5445)
!5447 = !DILocation(line: 5013, column: 47, scope: !5445)
!5448 = !DILocation(line: 5013, column: 10, scope: !5445)
!5449 = !DILocation(line: 5013, column: 10, scope: !5400)
!5450 = !DILocalVariable(name: "psys", scope: !5451, file: !3, line: 5014, type: !5452)
!5451 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 5013, column: 53)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !3363, line: 314, baseType: !3362)
!5454 = !DILocation(line: 5014, column: 23, scope: !5451)
!5455 = !DILocalVariable(name: "obr", scope: !5451, file: !3, line: 5015, type: !3063)
!5456 = !DILocation(line: 5015, column: 18, scope: !5451)
!5457 = !DILocalVariable(name: "psysindex", scope: !5451, file: !3, line: 5016, type: !21)
!5458 = !DILocation(line: 5016, column: 11, scope: !5451)
!5459 = !DILocalVariable(name: "mat", scope: !5451, file: !3, line: 5017, type: !462)
!5460 = !DILocation(line: 5017, column: 13, scope: !5451)
!5461 = !DILocation(line: 5019, column: 10, scope: !5451)
!5462 = !DILocation(line: 5024, column: 11, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 5024, column: 11)
!5464 = !DILocation(line: 5024, column: 16, scope: !5463)
!5465 = !DILocation(line: 5024, column: 21, scope: !5463)
!5466 = !DILocation(line: 5024, column: 38, scope: !5463)
!5467 = !DILocation(line: 5024, column: 68, scope: !5463)
!5468 = !DILocation(line: 5024, column: 72, scope: !5463)
!5469 = !DILocation(line: 5024, column: 46, scope: !5463)
!5470 = !DILocation(line: 5024, column: 45, scope: !5463)
!5471 = !DILocation(line: 5024, column: 11, scope: !5451)
!5472 = !DILocation(line: 5025, column: 20, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 5024, column: 82)
!5474 = !DILocation(line: 5025, column: 25, scope: !5473)
!5475 = !DILocation(line: 5025, column: 29, scope: !5473)
!5476 = !DILocation(line: 5025, column: 38, scope: !5473)
!5477 = !DILocation(line: 5025, column: 43, scope: !5473)
!5478 = !DILocation(line: 5025, column: 8, scope: !5473)
!5479 = !DILocation(line: 5027, column: 34, scope: !5473)
!5480 = !DILocation(line: 5027, column: 44, scope: !5473)
!5481 = !DILocation(line: 5027, column: 49, scope: !5473)
!5482 = !DILocation(line: 5027, column: 53, scope: !5473)
!5483 = !DILocation(line: 5027, column: 58, scope: !5473)
!5484 = !DILocation(line: 5027, column: 79, scope: !5473)
!5485 = !DILocation(line: 5027, column: 84, scope: !5473)
!5486 = !DILocation(line: 5027, column: 88, scope: !5473)
!5487 = !DILocation(line: 5027, column: 13, scope: !5473)
!5488 = !DILocation(line: 5027, column: 11, scope: !5473)
!5489 = !DILocation(line: 5030, column: 26, scope: !5473)
!5490 = !DILocation(line: 5030, column: 30, scope: !5473)
!5491 = !DILocation(line: 5030, column: 35, scope: !5473)
!5492 = !DILocation(line: 5030, column: 40, scope: !5473)
!5493 = !DILocation(line: 5030, column: 51, scope: !5473)
!5494 = !DILocation(line: 5030, column: 8, scope: !5473)
!5495 = !DILocation(line: 5031, column: 12, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 5031, column: 12)
!5497 = !DILocation(line: 5031, column: 17, scope: !5496)
!5498 = !DILocation(line: 5031, column: 22, scope: !5496)
!5499 = !DILocation(line: 5031, column: 12, scope: !5473)
!5500 = !DILocation(line: 5032, column: 20, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 5031, column: 40)
!5502 = !DILocation(line: 5032, column: 25, scope: !5501)
!5503 = !DILocation(line: 5032, column: 36, scope: !5501)
!5504 = !DILocation(line: 5032, column: 41, scope: !5501)
!5505 = !DILocation(line: 5032, column: 9, scope: !5501)
!5506 = !DILocation(line: 5033, column: 26, scope: !5501)
!5507 = !DILocation(line: 5033, column: 31, scope: !5501)
!5508 = !DILocation(line: 5033, column: 9, scope: !5501)
!5509 = !DILocation(line: 5033, column: 14, scope: !5501)
!5510 = !DILocation(line: 5033, column: 24, scope: !5501)
!5511 = !DILocation(line: 5034, column: 26, scope: !5501)
!5512 = !DILocation(line: 5034, column: 31, scope: !5501)
!5513 = !DILocation(line: 5034, column: 9, scope: !5501)
!5514 = !DILocation(line: 5034, column: 14, scope: !5501)
!5515 = !DILocation(line: 5034, column: 24, scope: !5501)
!5516 = !DILocation(line: 5035, column: 8, scope: !5501)
!5517 = !DILocation(line: 5041, column: 33, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 5036, column: 13)
!5519 = !DILocation(line: 5041, column: 37, scope: !5518)
!5520 = !DILocation(line: 5041, column: 42, scope: !5518)
!5521 = !DILocation(line: 5041, column: 47, scope: !5518)
!5522 = !DILocation(line: 5041, column: 9, scope: !5518)
!5523 = !DILocation(line: 5042, column: 13, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 5042, column: 13)
!5525 = !DILocation(line: 5042, column: 18, scope: !5524)
!5526 = !DILocation(line: 5042, column: 28, scope: !5524)
!5527 = !DILocation(line: 5042, column: 13, scope: !5518)
!5528 = !DILocation(line: 5043, column: 31, scope: !5524)
!5529 = !DILocation(line: 5043, column: 35, scope: !5524)
!5530 = !DILocation(line: 5043, column: 40, scope: !5524)
!5531 = !DILocation(line: 5043, column: 10, scope: !5524)
!5532 = !DILocation(line: 5045, column: 7, scope: !5473)
!5533 = !DILocation(line: 5049, column: 16, scope: !5451)
!5534 = !DILocation(line: 5050, column: 17, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 5050, column: 7)
!5536 = !DILocation(line: 5050, column: 22, scope: !5535)
!5537 = !DILocation(line: 5050, column: 37, scope: !5535)
!5538 = !DILocation(line: 5050, column: 16, scope: !5535)
!5539 = !DILocation(line: 5050, column: 12, scope: !5535)
!5540 = !DILocation(line: 5050, column: 44, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5535, file: !3, line: 5050, column: 7)
!5542 = !DILocation(line: 5050, column: 7, scope: !5535)
!5543 = !DILocation(line: 5051, column: 12, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 5051, column: 12)
!5545 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 5050, column: 67)
!5546 = !DILocation(line: 5051, column: 17, scope: !5544)
!5547 = !DILocation(line: 5051, column: 22, scope: !5544)
!5548 = !DILocation(line: 5051, column: 39, scope: !5544)
!5549 = !DILocation(line: 5051, column: 69, scope: !5544)
!5550 = !DILocation(line: 5051, column: 73, scope: !5544)
!5551 = !DILocation(line: 5051, column: 78, scope: !5544)
!5552 = !DILocation(line: 5051, column: 47, scope: !5544)
!5553 = !DILocation(line: 5051, column: 46, scope: !5544)
!5554 = !DILocation(line: 5051, column: 12, scope: !5545)
!5555 = !DILocation(line: 5052, column: 13, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 5052, column: 13)
!5557 = distinct !DILexicalBlock(scope: !5544, file: !3, line: 5051, column: 91)
!5558 = !DILocation(line: 5052, column: 17, scope: !5556)
!5559 = !DILocation(line: 5052, column: 13, scope: !5557)
!5560 = !DILocation(line: 5053, column: 22, scope: !5556)
!5561 = !DILocation(line: 5053, column: 27, scope: !5556)
!5562 = !DILocation(line: 5053, column: 31, scope: !5556)
!5563 = !DILocation(line: 5053, column: 40, scope: !5556)
!5564 = !DILocation(line: 5053, column: 45, scope: !5556)
!5565 = !DILocation(line: 5053, column: 10, scope: !5556)
!5566 = !DILocation(line: 5054, column: 35, scope: !5557)
!5567 = !DILocation(line: 5054, column: 45, scope: !5557)
!5568 = !DILocation(line: 5054, column: 50, scope: !5557)
!5569 = !DILocation(line: 5054, column: 54, scope: !5557)
!5570 = !DILocation(line: 5054, column: 59, scope: !5557)
!5571 = !DILocation(line: 5054, column: 86, scope: !5557)
!5572 = !DILocation(line: 5054, column: 90, scope: !5557)
!5573 = !DILocation(line: 5054, column: 95, scope: !5557)
!5574 = !DILocation(line: 5054, column: 100, scope: !5557)
!5575 = !DILocation(line: 5054, column: 14, scope: !5557)
!5576 = !DILocation(line: 5054, column: 12, scope: !5557)
!5577 = !DILocation(line: 5056, column: 27, scope: !5557)
!5578 = !DILocation(line: 5056, column: 31, scope: !5557)
!5579 = !DILocation(line: 5056, column: 36, scope: !5557)
!5580 = !DILocation(line: 5056, column: 41, scope: !5557)
!5581 = !DILocation(line: 5056, column: 52, scope: !5557)
!5582 = !DILocation(line: 5056, column: 9, scope: !5557)
!5583 = !DILocation(line: 5057, column: 13, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 5057, column: 13)
!5585 = !DILocation(line: 5057, column: 18, scope: !5584)
!5586 = !DILocation(line: 5057, column: 23, scope: !5584)
!5587 = !DILocation(line: 5057, column: 13, scope: !5557)
!5588 = !DILocation(line: 5058, column: 21, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 5057, column: 41)
!5590 = !DILocation(line: 5058, column: 26, scope: !5589)
!5591 = !DILocation(line: 5058, column: 37, scope: !5589)
!5592 = !DILocation(line: 5058, column: 42, scope: !5589)
!5593 = !DILocation(line: 5058, column: 10, scope: !5589)
!5594 = !DILocation(line: 5059, column: 27, scope: !5589)
!5595 = !DILocation(line: 5059, column: 32, scope: !5589)
!5596 = !DILocation(line: 5059, column: 10, scope: !5589)
!5597 = !DILocation(line: 5059, column: 15, scope: !5589)
!5598 = !DILocation(line: 5059, column: 25, scope: !5589)
!5599 = !DILocation(line: 5060, column: 27, scope: !5589)
!5600 = !DILocation(line: 5060, column: 32, scope: !5589)
!5601 = !DILocation(line: 5060, column: 10, scope: !5589)
!5602 = !DILocation(line: 5060, column: 15, scope: !5589)
!5603 = !DILocation(line: 5060, column: 25, scope: !5589)
!5604 = !DILocation(line: 5061, column: 9, scope: !5589)
!5605 = !DILocation(line: 5063, column: 34, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 5062, column: 14)
!5607 = !DILocation(line: 5063, column: 38, scope: !5606)
!5608 = !DILocation(line: 5063, column: 43, scope: !5606)
!5609 = !DILocation(line: 5063, column: 48, scope: !5606)
!5610 = !DILocation(line: 5063, column: 10, scope: !5606)
!5611 = !DILocation(line: 5064, column: 14, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 5064, column: 14)
!5613 = !DILocation(line: 5064, column: 19, scope: !5612)
!5614 = !DILocation(line: 5064, column: 29, scope: !5612)
!5615 = !DILocation(line: 5064, column: 14, scope: !5606)
!5616 = !DILocation(line: 5065, column: 32, scope: !5612)
!5617 = !DILocation(line: 5065, column: 36, scope: !5612)
!5618 = !DILocation(line: 5065, column: 41, scope: !5612)
!5619 = !DILocation(line: 5065, column: 11, scope: !5612)
!5620 = !DILocation(line: 5067, column: 8, scope: !5557)
!5621 = !DILocation(line: 5068, column: 7, scope: !5545)
!5622 = !DILocation(line: 5050, column: 55, scope: !5541)
!5623 = !DILocation(line: 5050, column: 61, scope: !5541)
!5624 = !DILocation(line: 5050, column: 54, scope: !5541)
!5625 = !DILocation(line: 5050, column: 7, scope: !5541)
!5626 = distinct !{!5626, !5542, !5627}
!5627 = !DILocation(line: 5068, column: 7, scope: !5535)
!5628 = !DILocation(line: 5070, column: 11, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 5070, column: 11)
!5630 = !DILocation(line: 5070, column: 14, scope: !5629)
!5631 = !DILocation(line: 5070, column: 11, scope: !5451)
!5632 = !DILocation(line: 5072, column: 27, scope: !5629)
!5633 = !DILocation(line: 5072, column: 31, scope: !5629)
!5634 = !DILocation(line: 5072, column: 36, scope: !5629)
!5635 = !DILocation(line: 5072, column: 40, scope: !5629)
!5636 = !DILocation(line: 5072, column: 45, scope: !5629)
!5637 = !DILocation(line: 5072, column: 56, scope: !5629)
!5638 = !DILocation(line: 5072, column: 63, scope: !5629)
!5639 = !DILocation(line: 5072, column: 8, scope: !5629)
!5640 = !DILocation(line: 5074, column: 11, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 5074, column: 11)
!5642 = !DILocation(line: 5074, column: 16, scope: !5641)
!5643 = !DILocation(line: 5074, column: 21, scope: !5641)
!5644 = !DILocation(line: 5074, column: 11, scope: !5451)
!5645 = !DILocation(line: 5075, column: 8, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 5074, column: 39)
!5647 = !DILocation(line: 5075, column: 13, scope: !5646)
!5648 = !DILocation(line: 5075, column: 18, scope: !5646)
!5649 = !DILocation(line: 5076, column: 8, scope: !5646)
!5650 = !DILocation(line: 5076, column: 13, scope: !5646)
!5651 = !DILocation(line: 5076, column: 23, scope: !5646)
!5652 = !DILocation(line: 5077, column: 7, scope: !5646)
!5653 = !DILocation(line: 5078, column: 6, scope: !5451)
!5654 = !DILocation(line: 5080, column: 26, scope: !5445)
!5655 = !DILocation(line: 5080, column: 30, scope: !5445)
!5656 = !DILocation(line: 5080, column: 35, scope: !5445)
!5657 = !DILocation(line: 5080, column: 39, scope: !5445)
!5658 = !DILocation(line: 5080, column: 44, scope: !5445)
!5659 = !DILocation(line: 5080, column: 55, scope: !5445)
!5660 = !DILocation(line: 5080, column: 62, scope: !5445)
!5661 = !DILocation(line: 5080, column: 7, scope: !5445)
!5662 = !DILocation(line: 5082, column: 10, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5400, file: !3, line: 5082, column: 10)
!5664 = !DILocation(line: 5082, column: 14, scope: !5663)
!5665 = !DILocation(line: 5082, column: 25, scope: !5663)
!5666 = !DILocation(line: 5082, column: 29, scope: !5663)
!5667 = !DILocation(line: 5082, column: 10, scope: !5400)
!5668 = !DILocation(line: 5082, column: 35, scope: !5663)
!5669 = !DILocation(line: 5083, column: 5, scope: !5400)
!5670 = !DILocation(line: 4994, column: 50, scope: !5397)
!5671 = !DILocation(line: 4994, column: 55, scope: !5397)
!5672 = !DILocation(line: 4994, column: 48, scope: !5397)
!5673 = !DILocation(line: 4994, column: 61, scope: !5397)
!5674 = !DILocation(line: 4994, column: 5, scope: !5397)
!5675 = distinct !{!5675, !5398, !5676}
!5676 = !DILocation(line: 5083, column: 5, scope: !5391)
!5677 = !DILocation(line: 5085, column: 9, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 5085, column: 9)
!5679 = !DILocation(line: 5085, column: 9, scope: !5351)
!5680 = !DILocation(line: 5086, column: 24, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 5085, column: 31)
!5682 = !DILocation(line: 5086, column: 35, scope: !5681)
!5683 = !DILocation(line: 5086, column: 6, scope: !5681)
!5684 = !DILocation(line: 5087, column: 32, scope: !5681)
!5685 = !DILocation(line: 5087, column: 6, scope: !5681)
!5686 = !DILocation(line: 5088, column: 5, scope: !5681)
!5687 = !DILocation(line: 5089, column: 27, scope: !5351)
!5688 = !DILocation(line: 5089, column: 5, scope: !5351)
!5689 = !DILocation(line: 5091, column: 29, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 5091, column: 9)
!5691 = !DILocation(line: 5091, column: 33, scope: !5690)
!5692 = !DILocation(line: 5091, column: 37, scope: !5690)
!5693 = !DILocation(line: 5091, column: 46, scope: !5690)
!5694 = !DILocation(line: 5091, column: 60, scope: !5690)
!5695 = !DILocation(line: 5091, column: 9, scope: !5690)
!5696 = !DILocation(line: 5091, column: 9, scope: !5351)
!5697 = !DILocation(line: 5092, column: 25, scope: !5690)
!5698 = !DILocation(line: 5092, column: 29, scope: !5690)
!5699 = !DILocation(line: 5092, column: 51, scope: !5690)
!5700 = !DILocation(line: 5092, column: 6, scope: !5690)
!5701 = !DILocation(line: 5093, column: 4, scope: !5351)
!5702 = !DILocation(line: 5094, column: 33, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 5094, column: 13)
!5704 = !DILocation(line: 5094, column: 37, scope: !5703)
!5705 = !DILocation(line: 5094, column: 41, scope: !5703)
!5706 = !DILocation(line: 5094, column: 50, scope: !5703)
!5707 = !DILocation(line: 5094, column: 64, scope: !5703)
!5708 = !DILocation(line: 5094, column: 13, scope: !5703)
!5709 = !DILocation(line: 5094, column: 13, scope: !5341)
!5710 = !DILocation(line: 5095, column: 24, scope: !5703)
!5711 = !DILocation(line: 5095, column: 28, scope: !5703)
!5712 = !DILocation(line: 5095, column: 50, scope: !5703)
!5713 = !DILocation(line: 5095, column: 5, scope: !5703)
!5714 = !DILocation(line: 5096, column: 3, scope: !5342)
!5715 = !DILocation(line: 5098, column: 7, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 5098, column: 7)
!5717 = !DILocation(line: 5098, column: 11, scope: !5716)
!5718 = !DILocation(line: 5098, column: 22, scope: !5716)
!5719 = !DILocation(line: 5098, column: 26, scope: !5716)
!5720 = !DILocation(line: 5098, column: 7, scope: !5273)
!5721 = !DILocation(line: 5098, column: 32, scope: !5716)
!5722 = !DILocation(line: 5099, column: 2, scope: !5273)
!5723 = !DILocation(line: 4957, column: 2, scope: !5270)
!5724 = distinct !{!5724, !5271, !5725}
!5725 = !DILocation(line: 5099, column: 2, scope: !5268)
!5726 = !DILocation(line: 5103, column: 14, scope: !5727)
!5727 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 5103, column: 2)
!5728 = !DILocation(line: 5103, column: 18, scope: !5727)
!5729 = !DILocation(line: 5103, column: 24, scope: !5727)
!5730 = !DILocation(line: 5103, column: 30, scope: !5727)
!5731 = !DILocation(line: 5103, column: 12, scope: !5727)
!5732 = !DILocation(line: 5103, column: 7, scope: !5727)
!5733 = !DILocation(line: 5103, column: 37, scope: !5734)
!5734 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 5103, column: 2)
!5735 = !DILocation(line: 5103, column: 2, scope: !5727)
!5736 = !DILocation(line: 5104, column: 30, scope: !5734)
!5737 = !DILocation(line: 5104, column: 34, scope: !5734)
!5738 = !DILocation(line: 5104, column: 41, scope: !5734)
!5739 = !DILocation(line: 5104, column: 50, scope: !5734)
!5740 = !DILocation(line: 5104, column: 64, scope: !5734)
!5741 = !DILocation(line: 5104, column: 71, scope: !5734)
!5742 = !DILocation(line: 5104, column: 3, scope: !5734)
!5743 = !DILocation(line: 5103, column: 50, scope: !5734)
!5744 = !DILocation(line: 5103, column: 57, scope: !5734)
!5745 = !DILocation(line: 5103, column: 60, scope: !5734)
!5746 = !DILocation(line: 5103, column: 49, scope: !5734)
!5747 = !DILocation(line: 5103, column: 2, scope: !5734)
!5748 = distinct !{!5748, !5735, !5749}
!5749 = !DILocation(line: 5104, column: 84, scope: !5727)
!5750 = !DILocation(line: 5106, column: 7, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 5106, column: 6)
!5752 = !DILocation(line: 5106, column: 11, scope: !5751)
!5753 = !DILocation(line: 5106, column: 22, scope: !5751)
!5754 = !DILocation(line: 5106, column: 26, scope: !5751)
!5755 = !DILocation(line: 5106, column: 6, scope: !5191)
!5756 = !DILocation(line: 5107, column: 26, scope: !5751)
!5757 = !DILocation(line: 5107, column: 3, scope: !5751)
!5758 = !DILocation(line: 5108, column: 1, scope: !5191)
!5759 = distinct !DISubprogram(name: "set_material_lightgroups", scope: !3, file: !3, line: 3962, type: !4451, scopeLine: 3963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!5760 = !DILocalVariable(name: "re", arg: 1, scope: !5759, file: !3, line: 3962, type: !6)
!5761 = !DILocation(line: 3962, column: 46, scope: !5759)
!5762 = !DILocalVariable(name: "group", scope: !5759, file: !3, line: 3964, type: !5213)
!5763 = !DILocation(line: 3964, column: 9, scope: !5759)
!5764 = !DILocalVariable(name: "ma", scope: !5759, file: !3, line: 3965, type: !4157)
!5765 = !DILocation(line: 3965, column: 12, scope: !5759)
!5766 = !DILocation(line: 3968, column: 6, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3968, column: 6)
!5768 = !DILocation(line: 3968, column: 10, scope: !5767)
!5769 = !DILocation(line: 3968, column: 17, scope: !5767)
!5770 = !DILocation(line: 3968, column: 19, scope: !5767)
!5771 = !DILocation(line: 3968, column: 27, scope: !5767)
!5772 = !DILocation(line: 3968, column: 6, scope: !5759)
!5773 = !DILocation(line: 3969, column: 3, scope: !5767)
!5774 = !DILocation(line: 3971, column: 14, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3971, column: 2)
!5776 = !DILocation(line: 3971, column: 18, scope: !5775)
!5777 = !DILocation(line: 3971, column: 24, scope: !5775)
!5778 = !DILocation(line: 3971, column: 30, scope: !5775)
!5779 = !DILocation(line: 3971, column: 12, scope: !5775)
!5780 = !DILocation(line: 3971, column: 7, scope: !5775)
!5781 = !DILocation(line: 3971, column: 37, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 3971, column: 2)
!5783 = !DILocation(line: 3971, column: 2, scope: !5775)
!5784 = !DILocation(line: 3972, column: 3, scope: !5782)
!5785 = !DILocation(line: 3972, column: 10, scope: !5782)
!5786 = !DILocation(line: 3972, column: 13, scope: !5782)
!5787 = !DILocation(line: 3972, column: 18, scope: !5782)
!5788 = !DILocation(line: 3971, column: 50, scope: !5782)
!5789 = !DILocation(line: 3971, column: 57, scope: !5782)
!5790 = !DILocation(line: 3971, column: 60, scope: !5782)
!5791 = !DILocation(line: 3971, column: 49, scope: !5782)
!5792 = !DILocation(line: 3971, column: 2, scope: !5782)
!5793 = distinct !{!5793, !5783, !5794}
!5794 = !DILocation(line: 3972, column: 21, scope: !5775)
!5795 = !DILocation(line: 3976, column: 11, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 3976, column: 2)
!5797 = !DILocation(line: 3976, column: 15, scope: !5796)
!5798 = !DILocation(line: 3976, column: 21, scope: !5796)
!5799 = !DILocation(line: 3976, column: 25, scope: !5796)
!5800 = !DILocation(line: 3976, column: 9, scope: !5796)
!5801 = !DILocation(line: 3976, column: 7, scope: !5796)
!5802 = !DILocation(line: 3976, column: 32, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 3976, column: 2)
!5804 = !DILocation(line: 3976, column: 2, scope: !5796)
!5805 = !DILocation(line: 3977, column: 7, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 3977, column: 7)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 3976, column: 52)
!5808 = !DILocation(line: 3977, column: 11, scope: !5806)
!5809 = !DILocation(line: 3977, column: 17, scope: !5806)
!5810 = !DILocation(line: 3977, column: 21, scope: !5806)
!5811 = !DILocation(line: 3977, column: 25, scope: !5806)
!5812 = !DILocation(line: 3977, column: 32, scope: !5806)
!5813 = !DILocation(line: 3977, column: 35, scope: !5806)
!5814 = !DILocation(line: 3977, column: 40, scope: !5806)
!5815 = !DILocation(line: 3977, column: 7, scope: !5807)
!5816 = !DILocation(line: 3978, column: 19, scope: !5806)
!5817 = !DILocation(line: 3978, column: 23, scope: !5806)
!5818 = !DILocation(line: 3978, column: 27, scope: !5806)
!5819 = !DILocation(line: 3978, column: 34, scope: !5806)
!5820 = !DILocation(line: 3978, column: 38, scope: !5806)
!5821 = !DILocation(line: 3978, column: 43, scope: !5806)
!5822 = !DILocation(line: 3978, column: 4, scope: !5806)
!5823 = !DILocation(line: 3979, column: 2, scope: !5807)
!5824 = !DILocation(line: 3976, column: 39, scope: !5803)
!5825 = !DILocation(line: 3976, column: 43, scope: !5803)
!5826 = !DILocation(line: 3976, column: 46, scope: !5803)
!5827 = !DILocation(line: 3976, column: 38, scope: !5803)
!5828 = !DILocation(line: 3976, column: 2, scope: !5803)
!5829 = distinct !{!5829, !5804, !5830}
!5830 = !DILocation(line: 3979, column: 2, scope: !5796)
!5831 = !DILocation(line: 3980, column: 1, scope: !5759)
!5832 = distinct !DISubprogram(name: "set_renderlayer_lightgroups", scope: !3, file: !3, line: 3982, type: !5833, scopeLine: 3983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{null, !6, !2982}
!5835 = !DILocalVariable(name: "re", arg: 1, scope: !5832, file: !3, line: 3982, type: !6)
!5836 = !DILocation(line: 3982, column: 49, scope: !5832)
!5837 = !DILocalVariable(name: "sce", arg: 2, scope: !5832, file: !3, line: 3982, type: !2982)
!5838 = !DILocation(line: 3982, column: 60, scope: !5832)
!5839 = !DILocalVariable(name: "srl", scope: !5832, file: !3, line: 3984, type: !5840)
!5840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5841, size: 64)
!5841 = !DIDerivedType(tag: DW_TAG_typedef, name: "SceneRenderLayer", file: !417, line: 194, baseType: !5842)
!5842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SceneRenderLayer", file: !417, line: 174, size: 1472, elements: !5843)
!5843 = !{!5844, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5842, file: !417, line: 175, baseType: !5845, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5842, size: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5842, file: !417, line: 175, baseType: !5845, size: 64, offset: 64)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5842, file: !417, line: 177, baseType: !138, size: 512, offset: 128)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !5842, file: !417, line: 179, baseType: !86, size: 64, offset: 640)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !5842, file: !417, line: 180, baseType: !536, size: 64, offset: 704)
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5842, file: !417, line: 182, baseType: !79, size: 32, offset: 768)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !5842, file: !417, line: 183, baseType: !79, size: 32, offset: 800)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !5842, file: !417, line: 184, baseType: !79, size: 32, offset: 832)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !5842, file: !417, line: 185, baseType: !21, size: 32, offset: 864)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !5842, file: !417, line: 187, baseType: !21, size: 32, offset: 896)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !5842, file: !417, line: 188, baseType: !21, size: 32, offset: 928)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !5842, file: !417, line: 190, baseType: !21, size: 32, offset: 960)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "pass_alpha_threshold", scope: !5842, file: !417, line: 191, baseType: !45, size: 32, offset: 992)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "freestyleConfig", scope: !5842, file: !417, line: 193, baseType: !5859, size: 448, offset: 1024)
!5859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FreestyleConfig", file: !1769, line: 127, size: 448, elements: !5860)
!5860 = !{!5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "modules", scope: !5859, file: !1769, line: 128, baseType: !59, size: 128)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5859, file: !1769, line: 130, baseType: !21, size: 32, offset: 128)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "raycasting_algorithm", scope: !5859, file: !1769, line: 131, baseType: !21, size: 32, offset: 160)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5859, file: !1769, line: 132, baseType: !21, size: 32, offset: 192)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !5859, file: !1769, line: 133, baseType: !45, size: 32, offset: 224)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "dkr_epsilon", scope: !5859, file: !1769, line: 134, baseType: !45, size: 32, offset: 256)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "crease_angle", scope: !5859, file: !1769, line: 135, baseType: !45, size: 32, offset: 288)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "linesets", scope: !5859, file: !1769, line: 137, baseType: !59, size: 128, offset: 320)
!5869 = !DILocation(line: 3984, column: 20, scope: !5832)
!5870 = !DILocation(line: 3986, column: 12, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 3986, column: 2)
!5872 = !DILocation(line: 3986, column: 17, scope: !5871)
!5873 = !DILocation(line: 3986, column: 19, scope: !5871)
!5874 = !DILocation(line: 3986, column: 26, scope: !5871)
!5875 = !DILocation(line: 3986, column: 10, scope: !5871)
!5876 = !DILocation(line: 3986, column: 7, scope: !5871)
!5877 = !DILocation(line: 3986, column: 33, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 3986, column: 2)
!5879 = !DILocation(line: 3986, column: 2, scope: !5871)
!5880 = !DILocation(line: 3987, column: 7, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5882, file: !3, line: 3987, column: 7)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 3986, column: 54)
!5883 = !DILocation(line: 3987, column: 12, scope: !5881)
!5884 = !DILocation(line: 3987, column: 7, scope: !5882)
!5885 = !DILocation(line: 3988, column: 19, scope: !5881)
!5886 = !DILocation(line: 3988, column: 23, scope: !5881)
!5887 = !DILocation(line: 3988, column: 28, scope: !5881)
!5888 = !DILocation(line: 3988, column: 4, scope: !5881)
!5889 = !DILocation(line: 3989, column: 2, scope: !5882)
!5890 = !DILocation(line: 3986, column: 43, scope: !5878)
!5891 = !DILocation(line: 3986, column: 48, scope: !5878)
!5892 = !DILocation(line: 3986, column: 41, scope: !5878)
!5893 = !DILocation(line: 3986, column: 2, scope: !5878)
!5894 = distinct !{!5894, !5879, !5895}
!5895 = !DILocation(line: 3989, column: 2, scope: !5871)
!5896 = !DILocation(line: 3990, column: 1, scope: !5832)
!5897 = distinct !DISubprogram(name: "RE_Database_Preprocess", scope: !3, file: !3, line: 5206, type: !4451, scopeLine: 5207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!5898 = !DILocalVariable(name: "re", arg: 1, scope: !5897, file: !3, line: 5206, type: !6)
!5899 = !DILocation(line: 5206, column: 37, scope: !5897)
!5900 = !DILocation(line: 5208, column: 7, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 5208, column: 6)
!5902 = !DILocation(line: 5208, column: 11, scope: !5901)
!5903 = !DILocation(line: 5208, column: 22, scope: !5901)
!5904 = !DILocation(line: 5208, column: 26, scope: !5901)
!5905 = !DILocation(line: 5208, column: 6, scope: !5897)
!5906 = !DILocalVariable(name: "tothalo", scope: !5907, file: !3, line: 5209, type: !21)
!5907 = distinct !DILexicalBlock(scope: !5901, file: !3, line: 5208, column: 32)
!5908 = !DILocation(line: 5209, column: 7, scope: !5907)
!5909 = !DILocation(line: 5211, column: 12, scope: !5907)
!5910 = !DILocation(line: 5211, column: 16, scope: !5907)
!5911 = !DILocation(line: 5211, column: 10, scope: !5907)
!5912 = !DILocation(line: 5212, column: 14, scope: !5907)
!5913 = !DILocation(line: 5212, column: 18, scope: !5907)
!5914 = !DILocation(line: 5212, column: 3, scope: !5907)
!5915 = !DILocation(line: 5214, column: 30, scope: !5907)
!5916 = !DILocation(line: 5214, column: 3, scope: !5907)
!5917 = !DILocation(line: 5216, column: 3, scope: !5907)
!5918 = !DILocation(line: 5216, column: 7, scope: !5907)
!5919 = !DILocation(line: 5216, column: 9, scope: !5907)
!5920 = !DILocation(line: 5216, column: 17, scope: !5907)
!5921 = !DILocation(line: 5217, column: 3, scope: !5907)
!5922 = !DILocation(line: 5217, column: 7, scope: !5907)
!5923 = !DILocation(line: 5217, column: 18, scope: !5907)
!5924 = !DILocation(line: 5217, column: 22, scope: !5907)
!5925 = !DILocation(line: 5217, column: 28, scope: !5907)
!5926 = !DILocation(line: 5217, column: 32, scope: !5907)
!5927 = !DILocation(line: 5220, column: 27, scope: !5907)
!5928 = !DILocation(line: 5220, column: 3, scope: !5907)
!5929 = !DILocation(line: 5225, column: 9, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 5225, column: 8)
!5931 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 5223, column: 3)
!5932 = !DILocation(line: 5225, column: 13, scope: !5930)
!5933 = !DILocation(line: 5225, column: 24, scope: !5930)
!5934 = !DILocation(line: 5225, column: 28, scope: !5930)
!5935 = !DILocation(line: 5225, column: 8, scope: !5931)
!5936 = !DILocation(line: 5226, column: 9, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 5226, column: 9)
!5938 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 5225, column: 34)
!5939 = !DILocation(line: 5226, column: 13, scope: !5937)
!5940 = !DILocation(line: 5226, column: 15, scope: !5937)
!5941 = !DILocation(line: 5226, column: 20, scope: !5937)
!5942 = !DILocation(line: 5226, column: 9, scope: !5938)
!5943 = !DILocation(line: 5227, column: 18, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 5226, column: 34)
!5945 = !DILocation(line: 5227, column: 6, scope: !5944)
!5946 = !DILocation(line: 5228, column: 5, scope: !5944)
!5947 = !DILocation(line: 5229, column: 4, scope: !5938)
!5948 = !DILocation(line: 5231, column: 9, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 5231, column: 8)
!5950 = !DILocation(line: 5231, column: 13, scope: !5949)
!5951 = !DILocation(line: 5231, column: 24, scope: !5949)
!5952 = !DILocation(line: 5231, column: 28, scope: !5949)
!5953 = !DILocation(line: 5231, column: 8, scope: !5931)
!5954 = !DILocation(line: 5232, column: 18, scope: !5949)
!5955 = !DILocation(line: 5232, column: 5, scope: !5949)
!5956 = !DILocation(line: 5235, column: 9, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 5235, column: 8)
!5958 = !DILocation(line: 5235, column: 13, scope: !5957)
!5959 = !DILocation(line: 5235, column: 24, scope: !5957)
!5960 = !DILocation(line: 5235, column: 28, scope: !5957)
!5961 = !DILocation(line: 5235, column: 8, scope: !5931)
!5962 = !DILocation(line: 5236, column: 25, scope: !5957)
!5963 = !DILocation(line: 5236, column: 5, scope: !5957)
!5964 = !DILocation(line: 5238, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 5238, column: 8)
!5966 = !DILocation(line: 5238, column: 13, scope: !5965)
!5967 = !DILocation(line: 5238, column: 24, scope: !5965)
!5968 = !DILocation(line: 5238, column: 28, scope: !5965)
!5969 = !DILocation(line: 5238, column: 8, scope: !5931)
!5970 = !DILocation(line: 5239, column: 20, scope: !5965)
!5971 = !DILocation(line: 5239, column: 5, scope: !5965)
!5972 = !DILocation(line: 5242, column: 8, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 5242, column: 7)
!5974 = !DILocation(line: 5242, column: 12, scope: !5973)
!5975 = !DILocation(line: 5242, column: 23, scope: !5973)
!5976 = !DILocation(line: 5242, column: 27, scope: !5973)
!5977 = !DILocation(line: 5242, column: 7, scope: !5907)
!5978 = !DILocation(line: 5246, column: 23, scope: !5973)
!5979 = !DILocation(line: 5246, column: 42, scope: !5973)
!5980 = !DILocation(line: 5246, column: 46, scope: !5973)
!5981 = !DILocation(line: 5246, column: 48, scope: !5973)
!5982 = !DILocation(line: 5246, column: 53, scope: !5973)
!5983 = !DILocation(line: 5246, column: 67, scope: !5973)
!5984 = !DILocation(line: 5246, column: 41, scope: !5973)
!5985 = !DILocation(line: 5246, column: 4, scope: !5973)
!5986 = !DILocation(line: 5250, column: 8, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 5250, column: 7)
!5988 = !DILocation(line: 5250, column: 12, scope: !5987)
!5989 = !DILocation(line: 5250, column: 17, scope: !5987)
!5990 = !DILocation(line: 5250, column: 22, scope: !5987)
!5991 = !DILocation(line: 5250, column: 69, scope: !5987)
!5992 = !DILocation(line: 5250, column: 73, scope: !5987)
!5993 = !DILocation(line: 5250, column: 77, scope: !5987)
!5994 = !DILocation(line: 5250, column: 88, scope: !5987)
!5995 = !DILocation(line: 5250, column: 92, scope: !5987)
!5996 = !DILocation(line: 5250, column: 7, scope: !5907)
!5997 = !DILocation(line: 5251, column: 8, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 5251, column: 8)
!5999 = !DILocation(line: 5251, column: 12, scope: !5998)
!6000 = !DILocation(line: 5251, column: 17, scope: !5998)
!6001 = !DILocation(line: 5251, column: 34, scope: !5998)
!6002 = !DILocation(line: 5251, column: 8, scope: !5987)
!6003 = !DILocation(line: 5252, column: 9, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 5252, column: 9)
!6005 = !DILocation(line: 5252, column: 13, scope: !6004)
!6006 = !DILocation(line: 5252, column: 15, scope: !6004)
!6007 = !DILocation(line: 5252, column: 20, scope: !6004)
!6008 = !DILocation(line: 5252, column: 9, scope: !5998)
!6009 = !DILocation(line: 5253, column: 20, scope: !6004)
!6010 = !DILocation(line: 5253, column: 6, scope: !6004)
!6011 = !DILocation(line: 5252, column: 22, scope: !6004)
!6012 = !DILocation(line: 5251, column: 37, scope: !5998)
!6013 = !DILocation(line: 5256, column: 8, scope: !6014)
!6014 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 5256, column: 7)
!6015 = !DILocation(line: 5256, column: 12, scope: !6014)
!6016 = !DILocation(line: 5256, column: 14, scope: !6014)
!6017 = !DILocation(line: 5256, column: 19, scope: !6014)
!6018 = !DILocation(line: 5256, column: 28, scope: !6014)
!6019 = !DILocation(line: 5256, column: 32, scope: !6014)
!6020 = !DILocation(line: 5256, column: 36, scope: !6014)
!6021 = !DILocation(line: 5256, column: 47, scope: !6014)
!6022 = !DILocation(line: 5256, column: 51, scope: !6014)
!6023 = !DILocation(line: 5256, column: 7, scope: !5907)
!6024 = !DILocation(line: 5257, column: 18, scope: !6014)
!6025 = !DILocation(line: 5257, column: 4, scope: !6014)
!6026 = !DILocation(line: 5259, column: 8, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 5259, column: 7)
!6028 = !DILocation(line: 5259, column: 12, scope: !6027)
!6029 = !DILocation(line: 5259, column: 23, scope: !6027)
!6030 = !DILocation(line: 5259, column: 27, scope: !6027)
!6031 = !DILocation(line: 5259, column: 7, scope: !5907)
!6032 = !DILocation(line: 5260, column: 8, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 5260, column: 8)
!6034 = !DILocation(line: 5260, column: 12, scope: !6033)
!6035 = !DILocation(line: 5260, column: 14, scope: !6033)
!6036 = !DILocation(line: 5260, column: 19, scope: !6033)
!6037 = !DILocation(line: 5260, column: 8, scope: !6027)
!6038 = !DILocation(line: 5261, column: 21, scope: !6033)
!6039 = !DILocation(line: 5261, column: 5, scope: !6033)
!6040 = !DILocation(line: 5260, column: 21, scope: !6033)
!6041 = !DILocation(line: 5262, column: 2, scope: !5907)
!6042 = !DILocation(line: 5264, column: 2, scope: !5897)
!6043 = !DILocation(line: 5264, column: 6, scope: !5897)
!6044 = !DILocation(line: 5264, column: 8, scope: !5897)
!6045 = !DILocation(line: 5264, column: 20, scope: !5897)
!6046 = !DILocation(line: 5266, column: 6, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !5897, file: !3, line: 5266, column: 6)
!6048 = !DILocation(line: 5266, column: 10, scope: !6047)
!6049 = !DILocation(line: 5266, column: 21, scope: !6047)
!6050 = !DILocation(line: 5266, column: 25, scope: !6047)
!6051 = !DILocation(line: 5266, column: 6, scope: !5897)
!6052 = !DILocation(line: 5267, column: 20, scope: !6047)
!6053 = !DILocation(line: 5267, column: 3, scope: !6047)
!6054 = !DILocation(line: 5269, column: 2, scope: !5897)
!6055 = !DILocation(line: 5269, column: 6, scope: !5897)
!6056 = !DILocation(line: 5269, column: 8, scope: !5897)
!6057 = !DILocation(line: 5269, column: 16, scope: !5897)
!6058 = !DILocation(line: 5270, column: 2, scope: !5897)
!6059 = !DILocation(line: 5270, column: 6, scope: !5897)
!6060 = !DILocation(line: 5270, column: 17, scope: !5897)
!6061 = !DILocation(line: 5270, column: 21, scope: !5897)
!6062 = !DILocation(line: 5270, column: 27, scope: !5897)
!6063 = !DILocation(line: 5270, column: 31, scope: !5897)
!6064 = !DILocation(line: 5271, column: 1, scope: !5897)
!6065 = distinct !DISubprogram(name: "sort_halos", scope: !3, file: !3, line: 1943, type: !6066, scopeLine: 1944, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{null, !6, !21}
!6068 = !DILocalVariable(name: "re", arg: 1, scope: !6065, file: !3, line: 1943, type: !6)
!6069 = !DILocation(line: 1943, column: 32, scope: !6065)
!6070 = !DILocalVariable(name: "totsort", arg: 2, scope: !6065, file: !3, line: 1943, type: !21)
!6071 = !DILocation(line: 1943, column: 40, scope: !6065)
!6072 = !DILocalVariable(name: "obr", scope: !6065, file: !3, line: 1945, type: !3063)
!6073 = !DILocation(line: 1945, column: 13, scope: !6065)
!6074 = !DILocalVariable(name: "har", scope: !6065, file: !3, line: 1946, type: !6075)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!6076 = !DILocation(line: 1946, column: 11, scope: !6065)
!6077 = !DILocalVariable(name: "haso", scope: !6065, file: !3, line: 1946, type: !6078)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 64)
!6079 = !DILocation(line: 1946, column: 24, scope: !6065)
!6080 = !DILocalVariable(name: "a", scope: !6065, file: !3, line: 1947, type: !21)
!6081 = !DILocation(line: 1947, column: 6, scope: !6065)
!6082 = !DILocation(line: 1949, column: 6, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1949, column: 6)
!6084 = !DILocation(line: 1949, column: 10, scope: !6083)
!6085 = !DILocation(line: 1949, column: 17, scope: !6083)
!6086 = !DILocation(line: 1949, column: 6, scope: !6065)
!6087 = !DILocation(line: 1949, column: 22, scope: !6083)
!6088 = !DILocation(line: 1951, column: 19, scope: !6065)
!6089 = !DILocation(line: 1951, column: 48, scope: !6065)
!6090 = !DILocation(line: 1951, column: 52, scope: !6065)
!6091 = !DILocation(line: 1951, column: 47, scope: !6065)
!6092 = !DILocation(line: 1951, column: 2, scope: !6065)
!6093 = !DILocation(line: 1951, column: 6, scope: !6065)
!6094 = !DILocation(line: 1951, column: 17, scope: !6065)
!6095 = !DILocation(line: 1952, column: 8, scope: !6065)
!6096 = !DILocation(line: 1952, column: 12, scope: !6065)
!6097 = !DILocation(line: 1952, column: 6, scope: !6065)
!6098 = !DILocation(line: 1954, column: 11, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 1954, column: 2)
!6100 = !DILocation(line: 1954, column: 15, scope: !6099)
!6101 = !DILocation(line: 1954, column: 27, scope: !6099)
!6102 = !DILocation(line: 1954, column: 10, scope: !6099)
!6103 = !DILocation(line: 1954, column: 7, scope: !6099)
!6104 = !DILocation(line: 1954, column: 34, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1954, column: 2)
!6106 = !DILocation(line: 1954, column: 2, scope: !6099)
!6107 = !DILocation(line: 1955, column: 9, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !3, line: 1955, column: 3)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 1954, column: 54)
!6110 = !DILocation(line: 1955, column: 8, scope: !6108)
!6111 = !DILocation(line: 1955, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 1955, column: 3)
!6113 = !DILocation(line: 1955, column: 15, scope: !6112)
!6114 = !DILocation(line: 1955, column: 20, scope: !6112)
!6115 = !DILocation(line: 1955, column: 14, scope: !6112)
!6116 = !DILocation(line: 1955, column: 3, scope: !6108)
!6117 = !DILocation(line: 1956, column: 9, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6119, file: !3, line: 1956, column: 8)
!6119 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1955, column: 34)
!6120 = !DILocation(line: 1956, column: 11, scope: !6118)
!6121 = !DILocation(line: 1956, column: 17, scope: !6118)
!6122 = !DILocation(line: 1956, column: 8, scope: !6119)
!6123 = !DILocation(line: 1956, column: 27, scope: !6118)
!6124 = !DILocation(line: 1956, column: 32, scope: !6118)
!6125 = !DILocation(line: 1956, column: 38, scope: !6118)
!6126 = !DILocation(line: 1956, column: 39, scope: !6118)
!6127 = !DILocation(line: 1956, column: 25, scope: !6118)
!6128 = !DILocation(line: 1956, column: 22, scope: !6118)
!6129 = !DILocation(line: 1957, column: 12, scope: !6118)
!6130 = !DILocation(line: 1959, column: 15, scope: !6119)
!6131 = !DILocation(line: 1959, column: 10, scope: !6119)
!6132 = !DILocation(line: 1959, column: 13, scope: !6119)
!6133 = !DILocation(line: 1960, column: 3, scope: !6119)
!6134 = !DILocation(line: 1955, column: 30, scope: !6112)
!6135 = !DILocation(line: 1955, column: 3, scope: !6112)
!6136 = distinct !{!6136, !6116, !6137}
!6137 = !DILocation(line: 1960, column: 3, scope: !6108)
!6138 = !DILocation(line: 1961, column: 2, scope: !6109)
!6139 = !DILocation(line: 1954, column: 43, scope: !6105)
!6140 = !DILocation(line: 1954, column: 48, scope: !6105)
!6141 = !DILocation(line: 1954, column: 42, scope: !6105)
!6142 = !DILocation(line: 1954, column: 2, scope: !6105)
!6143 = distinct !{!6143, !6106, !6144}
!6144 = !DILocation(line: 1961, column: 2, scope: !6099)
!6145 = !DILocation(line: 1963, column: 8, scope: !6065)
!6146 = !DILocation(line: 1963, column: 12, scope: !6065)
!6147 = !DILocation(line: 1963, column: 25, scope: !6065)
!6148 = !DILocation(line: 1963, column: 2, scope: !6065)
!6149 = !DILocation(line: 1964, column: 1, scope: !6065)
!6150 = distinct !DISubprogram(name: "init_camera_inside_volumes", scope: !3, file: !3, line: 3015, type: !4451, scopeLine: 3016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6151 = !DILocalVariable(name: "re", arg: 1, scope: !6150, file: !3, line: 3015, type: !6)
!6152 = !DILocation(line: 3015, column: 48, scope: !6150)
!6153 = !DILocalVariable(name: "obi", scope: !6150, file: !3, line: 3017, type: !3342)
!6154 = !DILocation(line: 3017, column: 21, scope: !6150)
!6155 = !DILocalVariable(name: "vo", scope: !6150, file: !3, line: 3018, type: !6156)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_typedef, name: "VolumeOb", file: !10, line: 489, baseType: !6158)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeOb", file: !10, line: 485, size: 256, elements: !6159)
!6159 = !{!6160, !6162, !6163, !6164}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6158, file: !10, line: 486, baseType: !6161, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6158, size: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6158, file: !10, line: 486, baseType: !6161, size: 64, offset: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !6158, file: !10, line: 487, baseType: !86, size: 64, offset: 128)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !6158, file: !10, line: 488, baseType: !3068, size: 64, offset: 192)
!6165 = !DILocation(line: 3018, column: 12, scope: !6150)
!6166 = !DILocalVariable(name: "co", scope: !6150, file: !3, line: 3024, type: !188)
!6167 = !DILocation(line: 3024, column: 8, scope: !6150)
!6168 = !DILocation(line: 3024, column: 16, scope: !6150)
!6169 = !DILocation(line: 3024, column: 28, scope: !6150)
!6170 = !DILocation(line: 3024, column: 32, scope: !6150)
!6171 = !DILocation(line: 3024, column: 27, scope: !6150)
!6172 = !DILocation(line: 3026, column: 11, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 3026, column: 2)
!6174 = !DILocation(line: 3026, column: 15, scope: !6173)
!6175 = !DILocation(line: 3026, column: 23, scope: !6173)
!6176 = !DILocation(line: 3026, column: 9, scope: !6173)
!6177 = !DILocation(line: 3026, column: 7, scope: !6173)
!6178 = !DILocation(line: 3026, column: 30, scope: !6179)
!6179 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 3026, column: 2)
!6180 = !DILocation(line: 3026, column: 2, scope: !6173)
!6181 = !DILocation(line: 3027, column: 13, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 3027, column: 3)
!6183 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 3026, column: 48)
!6184 = !DILocation(line: 3027, column: 17, scope: !6182)
!6185 = !DILocation(line: 3027, column: 31, scope: !6182)
!6186 = !DILocation(line: 3027, column: 11, scope: !6182)
!6187 = !DILocation(line: 3027, column: 8, scope: !6182)
!6188 = !DILocation(line: 3027, column: 38, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 3027, column: 3)
!6190 = !DILocation(line: 3027, column: 3, scope: !6182)
!6191 = !DILocation(line: 3028, column: 8, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3028, column: 8)
!6193 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 3027, column: 59)
!6194 = !DILocation(line: 3028, column: 13, scope: !6192)
!6195 = !DILocation(line: 3028, column: 20, scope: !6192)
!6196 = !DILocation(line: 3028, column: 24, scope: !6192)
!6197 = !DILocation(line: 3028, column: 17, scope: !6192)
!6198 = !DILocation(line: 3028, column: 8, scope: !6193)
!6199 = !DILocation(line: 3029, column: 44, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 3029, column: 9)
!6201 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 3028, column: 29)
!6202 = !DILocation(line: 3029, column: 48, scope: !6200)
!6203 = !DILocation(line: 3029, column: 53, scope: !6200)
!6204 = !DILocation(line: 3029, column: 9, scope: !6200)
!6205 = !DILocation(line: 3029, column: 9, scope: !6201)
!6206 = !DILocalVariable(name: "mi", scope: !6207, file: !3, line: 3030, type: !6208)
!6207 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 3029, column: 58)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DIDerivedType(tag: DW_TAG_typedef, name: "MatInside", file: !10, line: 495, baseType: !6210)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MatInside", file: !10, line: 491, size: 256, elements: !6211)
!6211 = !{!6212, !6214, !6215, !6216}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6210, file: !10, line: 492, baseType: !6213, size: 64)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6210, file: !10, line: 492, baseType: !6213, size: 64, offset: 64)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !6210, file: !10, line: 493, baseType: !86, size: 64, offset: 128)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !6210, file: !10, line: 494, baseType: !3057, size: 64, offset: 192)
!6217 = !DILocation(line: 3030, column: 17, scope: !6207)
!6218 = !DILocation(line: 3032, column: 11, scope: !6207)
!6219 = !DILocation(line: 3032, column: 9, scope: !6207)
!6220 = !DILocation(line: 3033, column: 15, scope: !6207)
!6221 = !DILocation(line: 3033, column: 19, scope: !6207)
!6222 = !DILocation(line: 3033, column: 6, scope: !6207)
!6223 = !DILocation(line: 3033, column: 10, scope: !6207)
!6224 = !DILocation(line: 3033, column: 13, scope: !6207)
!6225 = !DILocation(line: 3034, column: 16, scope: !6207)
!6226 = !DILocation(line: 3034, column: 6, scope: !6207)
!6227 = !DILocation(line: 3034, column: 10, scope: !6207)
!6228 = !DILocation(line: 3034, column: 14, scope: !6207)
!6229 = !DILocation(line: 3036, column: 20, scope: !6207)
!6230 = !DILocation(line: 3036, column: 24, scope: !6207)
!6231 = !DILocation(line: 3036, column: 48, scope: !6207)
!6232 = !DILocation(line: 3036, column: 6, scope: !6207)
!6233 = !DILocation(line: 3037, column: 5, scope: !6207)
!6234 = !DILocation(line: 3038, column: 4, scope: !6201)
!6235 = !DILocation(line: 3039, column: 3, scope: !6193)
!6236 = !DILocation(line: 3027, column: 48, scope: !6189)
!6237 = !DILocation(line: 3027, column: 53, scope: !6189)
!6238 = !DILocation(line: 3027, column: 46, scope: !6189)
!6239 = !DILocation(line: 3027, column: 3, scope: !6189)
!6240 = distinct !{!6240, !6190, !6241}
!6241 = !DILocation(line: 3039, column: 3, scope: !6182)
!6242 = !DILocation(line: 3040, column: 2, scope: !6183)
!6243 = !DILocation(line: 3026, column: 38, scope: !6179)
!6244 = !DILocation(line: 3026, column: 42, scope: !6179)
!6245 = !DILocation(line: 3026, column: 36, scope: !6179)
!6246 = !DILocation(line: 3026, column: 2, scope: !6179)
!6247 = distinct !{!6247, !6180, !6248}
!6248 = !DILocation(line: 3040, column: 2, scope: !6173)
!6249 = !DILocation(line: 3051, column: 1, scope: !6150)
!6250 = distinct !DISubprogram(name: "RE_DataBase_ApplyWindow", scope: !3, file: !3, line: 5274, type: !4451, scopeLine: 5275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6251 = !DILocalVariable(name: "re", arg: 1, scope: !6250, file: !3, line: 5274, type: !6)
!6252 = !DILocation(line: 5274, column: 38, scope: !6250)
!6253 = !DILocation(line: 5276, column: 21, scope: !6250)
!6254 = !DILocation(line: 5276, column: 2, scope: !6250)
!6255 = !DILocation(line: 5277, column: 1, scope: !6250)
!6256 = distinct !DISubprogram(name: "RE_DataBase_IncrementalView", scope: !3, file: !3, line: 5280, type: !6257, scopeLine: 5281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{null, !6, !2482, !21}
!6259 = !DILocalVariable(name: "re", arg: 1, scope: !6256, file: !3, line: 5280, type: !6)
!6260 = !DILocation(line: 5280, column: 42, scope: !6256)
!6261 = !DILocalVariable(name: "viewmat", arg: 2, scope: !6256, file: !3, line: 5280, type: !2482)
!6262 = !DILocation(line: 5280, column: 52, scope: !6256)
!6263 = !DILocalVariable(name: "restore", arg: 3, scope: !6256, file: !3, line: 5280, type: !21)
!6264 = !DILocation(line: 5280, column: 71, scope: !6256)
!6265 = !DILocalVariable(name: "oldviewinv", scope: !6256, file: !3, line: 5282, type: !462)
!6266 = !DILocation(line: 5282, column: 8, scope: !6256)
!6267 = !DILocalVariable(name: "tmat", scope: !6256, file: !3, line: 5282, type: !462)
!6268 = !DILocation(line: 5282, column: 26, scope: !6256)
!6269 = !DILocation(line: 5284, column: 15, scope: !6256)
!6270 = !DILocation(line: 5284, column: 27, scope: !6256)
!6271 = !DILocation(line: 5284, column: 31, scope: !6256)
!6272 = !DILocation(line: 5284, column: 2, scope: !6256)
!6273 = !DILocation(line: 5287, column: 14, scope: !6256)
!6274 = !DILocation(line: 5287, column: 20, scope: !6256)
!6275 = !DILocation(line: 5287, column: 29, scope: !6256)
!6276 = !DILocation(line: 5287, column: 2, scope: !6256)
!6277 = !DILocation(line: 5289, column: 13, scope: !6256)
!6278 = !DILocation(line: 5289, column: 17, scope: !6256)
!6279 = !DILocation(line: 5289, column: 26, scope: !6256)
!6280 = !DILocation(line: 5289, column: 2, scope: !6256)
!6281 = !DILocation(line: 5290, column: 15, scope: !6256)
!6282 = !DILocation(line: 5290, column: 19, scope: !6256)
!6283 = !DILocation(line: 5290, column: 28, scope: !6256)
!6284 = !DILocation(line: 5290, column: 32, scope: !6256)
!6285 = !DILocation(line: 5290, column: 2, scope: !6256)
!6286 = !DILocation(line: 5292, column: 29, scope: !6256)
!6287 = !DILocation(line: 5292, column: 2, scope: !6256)
!6288 = !DILocation(line: 5294, column: 19, scope: !6256)
!6289 = !DILocation(line: 5294, column: 23, scope: !6256)
!6290 = !DILocation(line: 5294, column: 30, scope: !6256)
!6291 = !DILocation(line: 5294, column: 29, scope: !6256)
!6292 = !DILocation(line: 5294, column: 2, scope: !6256)
!6293 = !DILocation(line: 5297, column: 7, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 5297, column: 6)
!6295 = !DILocation(line: 5297, column: 11, scope: !6294)
!6296 = !DILocation(line: 5297, column: 13, scope: !6294)
!6297 = !DILocation(line: 5297, column: 18, scope: !6294)
!6298 = !DILocation(line: 5297, column: 27, scope: !6294)
!6299 = !DILocation(line: 5297, column: 31, scope: !6294)
!6300 = !DILocation(line: 5297, column: 35, scope: !6294)
!6301 = !DILocation(line: 5297, column: 46, scope: !6294)
!6302 = !DILocation(line: 5297, column: 50, scope: !6294)
!6303 = !DILocation(line: 5297, column: 6, scope: !6256)
!6304 = !DILocation(line: 5298, column: 17, scope: !6294)
!6305 = !DILocation(line: 5298, column: 3, scope: !6294)
!6306 = !DILocation(line: 5299, column: 1, scope: !6256)
!6307 = distinct !DISubprogram(name: "RE_DataBase_GetView", scope: !3, file: !3, line: 5302, type: !6308, scopeLine: 5303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{null, !6, !2482}
!6310 = !DILocalVariable(name: "re", arg: 1, scope: !6307, file: !3, line: 5302, type: !6)
!6311 = !DILocation(line: 5302, column: 34, scope: !6307)
!6312 = !DILocalVariable(name: "mat", arg: 2, scope: !6307, file: !3, line: 5302, type: !2482)
!6313 = !DILocation(line: 5302, column: 44, scope: !6307)
!6314 = !DILocation(line: 5304, column: 13, scope: !6307)
!6315 = !DILocation(line: 5304, column: 18, scope: !6307)
!6316 = !DILocation(line: 5304, column: 22, scope: !6307)
!6317 = !DILocation(line: 5304, column: 2, scope: !6307)
!6318 = !DILocation(line: 5305, column: 1, scope: !6307)
!6319 = distinct !DISubprogram(name: "RE_Database_FromScene_Vectors", scope: !3, file: !3, line: 5700, type: !6320, scopeLine: 5701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{null, !6, !4917, !2982, !79}
!6322 = !DILocalVariable(name: "re", arg: 1, scope: !6319, file: !3, line: 5700, type: !6)
!6323 = !DILocation(line: 5700, column: 44, scope: !6319)
!6324 = !DILocalVariable(name: "bmain", arg: 2, scope: !6319, file: !3, line: 5700, type: !4917)
!6325 = !DILocation(line: 5700, column: 54, scope: !6319)
!6326 = !DILocalVariable(name: "sce", arg: 3, scope: !6319, file: !3, line: 5700, type: !2982)
!6327 = !DILocation(line: 5700, column: 68, scope: !6319)
!6328 = !DILocalVariable(name: "lay", arg: 4, scope: !6319, file: !3, line: 5700, type: !79)
!6329 = !DILocation(line: 5700, column: 86, scope: !6319)
!6330 = !DILocalVariable(name: "obi", scope: !6319, file: !3, line: 5702, type: !3342)
!6331 = !DILocation(line: 5702, column: 21, scope: !6319)
!6332 = !DILocalVariable(name: "oldobi", scope: !6319, file: !3, line: 5702, type: !3342)
!6333 = !DILocation(line: 5702, column: 27, scope: !6319)
!6334 = !DILocalVariable(name: "mesh", scope: !6319, file: !3, line: 5703, type: !6335)
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandSurface", file: !10, line: 448, baseType: !3183)
!6337 = !DILocation(line: 5703, column: 17, scope: !6319)
!6338 = !DILocalVariable(name: "table", scope: !6319, file: !3, line: 5704, type: !2565)
!6339 = !DILocation(line: 5704, column: 12, scope: !6319)
!6340 = !DILocalVariable(name: "oldtable", scope: !6319, file: !3, line: 5705, type: !59)
!6341 = !DILocation(line: 5705, column: 11, scope: !6319)
!6342 = !DILocalVariable(name: "newtable", scope: !6319, file: !3, line: 5705, type: !59)
!6343 = !DILocation(line: 5705, column: 35, scope: !6319)
!6344 = !DILocalVariable(name: "strandsurface", scope: !6319, file: !3, line: 5706, type: !59)
!6345 = !DILocation(line: 5706, column: 11, scope: !6319)
!6346 = !DILocalVariable(name: "step", scope: !6319, file: !3, line: 5707, type: !21)
!6347 = !DILocation(line: 5707, column: 6, scope: !6319)
!6348 = !DILocation(line: 5709, column: 2, scope: !6319)
!6349 = !DILocation(line: 5709, column: 6, scope: !6319)
!6350 = !DILocation(line: 5709, column: 8, scope: !6319)
!6351 = !DILocation(line: 5709, column: 16, scope: !6319)
!6352 = !DILocation(line: 5710, column: 2, scope: !6319)
!6353 = !DILocation(line: 5710, column: 6, scope: !6319)
!6354 = !DILocation(line: 5710, column: 8, scope: !6319)
!6355 = !DILocation(line: 5710, column: 13, scope: !6319)
!6356 = !DILocation(line: 5712, column: 22, scope: !6319)
!6357 = !DILocation(line: 5712, column: 2, scope: !6319)
!6358 = !DILocation(line: 5715, column: 29, scope: !6319)
!6359 = !DILocation(line: 5715, column: 33, scope: !6319)
!6360 = !DILocation(line: 5715, column: 38, scope: !6319)
!6361 = !DILocation(line: 5715, column: 2, scope: !6319)
!6362 = !DILocation(line: 5718, column: 28, scope: !6319)
!6363 = !DILocation(line: 5718, column: 2, scope: !6319)
!6364 = !DILocation(line: 5721, column: 17, scope: !6319)
!6365 = !DILocation(line: 5721, column: 21, scope: !6319)
!6366 = !DILocation(line: 5722, column: 10, scope: !6319)
!6367 = !DILocation(line: 5722, column: 14, scope: !6319)
!6368 = !DILocation(line: 5722, column: 2, scope: !6319)
!6369 = !DILocation(line: 5723, column: 2, scope: !6319)
!6370 = !DILocation(line: 5723, column: 6, scope: !6319)
!6371 = !DILocation(line: 5723, column: 8, scope: !6319)
!6372 = !DILocation(line: 5723, column: 20, scope: !6319)
!6373 = !DILocation(line: 5724, column: 19, scope: !6319)
!6374 = !DILocation(line: 5724, column: 2, scope: !6319)
!6375 = !DILocation(line: 5725, column: 2, scope: !6319)
!6376 = !DILocation(line: 5725, column: 6, scope: !6319)
!6377 = !DILocation(line: 5725, column: 21, scope: !6319)
!6378 = !DILocation(line: 5727, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 5727, column: 6)
!6380 = !DILocation(line: 5727, column: 11, scope: !6379)
!6381 = !DILocation(line: 5727, column: 22, scope: !6379)
!6382 = !DILocation(line: 5727, column: 26, scope: !6379)
!6383 = !DILocation(line: 5727, column: 6, scope: !6319)
!6384 = !DILocation(line: 5729, column: 3, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6379, file: !3, line: 5727, column: 32)
!6386 = !DILocation(line: 5729, column: 7, scope: !6385)
!6387 = !DILocation(line: 5729, column: 9, scope: !6385)
!6388 = !DILocation(line: 5729, column: 17, scope: !6385)
!6389 = !DILocation(line: 5731, column: 30, scope: !6385)
!6390 = !DILocation(line: 5731, column: 34, scope: !6385)
!6391 = !DILocation(line: 5731, column: 39, scope: !6385)
!6392 = !DILocation(line: 5731, column: 3, scope: !6385)
!6393 = !DILocation(line: 5732, column: 2, scope: !6385)
!6394 = !DILocation(line: 5734, column: 28, scope: !6319)
!6395 = !DILocation(line: 5734, column: 2, scope: !6319)
!6396 = !DILocation(line: 5737, column: 17, scope: !6319)
!6397 = !DILocation(line: 5737, column: 21, scope: !6319)
!6398 = !DILocation(line: 5738, column: 10, scope: !6319)
!6399 = !DILocation(line: 5738, column: 14, scope: !6319)
!6400 = !DILocation(line: 5738, column: 2, scope: !6319)
!6401 = !DILocation(line: 5739, column: 2, scope: !6319)
!6402 = !DILocation(line: 5739, column: 6, scope: !6319)
!6403 = !DILocation(line: 5739, column: 8, scope: !6319)
!6404 = !DILocation(line: 5739, column: 20, scope: !6319)
!6405 = !DILocation(line: 5740, column: 19, scope: !6319)
!6406 = !DILocation(line: 5740, column: 2, scope: !6319)
!6407 = !DILocation(line: 5741, column: 2, scope: !6319)
!6408 = !DILocation(line: 5741, column: 6, scope: !6319)
!6409 = !DILocation(line: 5741, column: 21, scope: !6319)
!6410 = !DILocation(line: 5743, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 5743, column: 6)
!6412 = !DILocation(line: 5743, column: 11, scope: !6411)
!6413 = !DILocation(line: 5743, column: 22, scope: !6411)
!6414 = !DILocation(line: 5743, column: 26, scope: !6411)
!6415 = !DILocation(line: 5743, column: 6, scope: !6319)
!6416 = !DILocation(line: 5744, column: 25, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 5743, column: 32)
!6418 = !DILocation(line: 5744, column: 29, scope: !6417)
!6419 = !DILocation(line: 5744, column: 36, scope: !6417)
!6420 = !DILocation(line: 5744, column: 41, scope: !6417)
!6421 = !DILocation(line: 5744, column: 3, scope: !6417)
!6422 = !DILocation(line: 5745, column: 26, scope: !6417)
!6423 = !DILocation(line: 5745, column: 3, scope: !6417)
!6424 = !DILocation(line: 5746, column: 2, scope: !6417)
!6425 = !DILocation(line: 5748, column: 7, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 5748, column: 6)
!6427 = !DILocation(line: 5748, column: 11, scope: !6426)
!6428 = !DILocation(line: 5748, column: 22, scope: !6426)
!6429 = !DILocation(line: 5748, column: 26, scope: !6426)
!6430 = !DILocation(line: 5748, column: 6, scope: !6319)
!6431 = !DILocalVariable(name: "vectorlay", scope: !6432, file: !3, line: 5749, type: !21)
!6432 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 5748, column: 32)
!6433 = !DILocation(line: 5749, column: 7, scope: !6432)
!6434 = !DILocation(line: 5749, column: 42, scope: !6432)
!6435 = !DILocation(line: 5749, column: 46, scope: !6432)
!6436 = !DILocation(line: 5749, column: 18, scope: !6432)
!6437 = !DILocation(line: 5751, column: 12, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 5751, column: 3)
!6439 = !DILocation(line: 5751, column: 8, scope: !6438)
!6440 = !DILocation(line: 5751, column: 17, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 5751, column: 3)
!6442 = !DILocation(line: 5751, column: 21, scope: !6441)
!6443 = !DILocation(line: 5751, column: 3, scope: !6438)
!6444 = !DILocation(line: 5753, column: 8, scope: !6445)
!6445 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 5753, column: 8)
!6446 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 5751, column: 33)
!6447 = !DILocation(line: 5753, column: 8, scope: !6446)
!6448 = !DILocation(line: 5754, column: 10, scope: !6445)
!6449 = !DILocation(line: 5754, column: 5, scope: !6445)
!6450 = !DILocation(line: 5756, column: 10, scope: !6445)
!6451 = !DILocation(line: 5758, column: 12, scope: !6446)
!6452 = !DILocation(line: 5758, column: 19, scope: !6446)
!6453 = !DILocation(line: 5758, column: 10, scope: !6446)
!6454 = !DILocation(line: 5759, column: 14, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6446, file: !3, line: 5759, column: 4)
!6456 = !DILocation(line: 5759, column: 18, scope: !6455)
!6457 = !DILocation(line: 5759, column: 32, scope: !6455)
!6458 = !DILocation(line: 5759, column: 12, scope: !6455)
!6459 = !DILocation(line: 5759, column: 9, scope: !6455)
!6460 = !DILocation(line: 5759, column: 39, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 5759, column: 4)
!6462 = !DILocation(line: 5759, column: 43, scope: !6461)
!6463 = !DILocation(line: 5759, column: 46, scope: !6461)
!6464 = !DILocation(line: 0, scope: !6461)
!6465 = !DILocation(line: 5759, column: 4, scope: !6455)
!6466 = !DILocalVariable(name: "ok", scope: !6467, file: !3, line: 5760, type: !21)
!6467 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 5759, column: 70)
!6468 = !DILocation(line: 5760, column: 9, scope: !6467)
!6469 = !DILocalVariable(name: "fluidmd", scope: !6467, file: !3, line: 5761, type: !3972)
!6470 = !DILocation(line: 5761, column: 27, scope: !6467)
!6471 = !DILocation(line: 5763, column: 11, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 5763, column: 9)
!6473 = !DILocation(line: 5763, column: 16, scope: !6472)
!6474 = !DILocation(line: 5763, column: 22, scope: !6472)
!6475 = !DILocation(line: 5763, column: 20, scope: !6472)
!6476 = !DILocation(line: 5763, column: 9, scope: !6467)
!6477 = !DILocation(line: 5764, column: 6, scope: !6472)
!6478 = !DILocation(line: 5766, column: 21, scope: !6467)
!6479 = !DILocation(line: 5766, column: 26, scope: !6467)
!6480 = !DILocation(line: 5766, column: 31, scope: !6467)
!6481 = !DILocation(line: 5766, column: 5, scope: !6467)
!6482 = !DILocation(line: 5766, column: 10, scope: !6467)
!6483 = !DILocation(line: 5766, column: 19, scope: !6467)
!6484 = !DILocation(line: 5769, column: 9, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 5769, column: 9)
!6486 = !DILocation(line: 5769, column: 17, scope: !6485)
!6487 = !DILocation(line: 5769, column: 21, scope: !6485)
!6488 = !DILocation(line: 5769, column: 26, scope: !6485)
!6489 = !DILocation(line: 5769, column: 19, scope: !6485)
!6490 = !DILocation(line: 5769, column: 29, scope: !6485)
!6491 = !DILocation(line: 5769, column: 32, scope: !6485)
!6492 = !DILocation(line: 5769, column: 40, scope: !6485)
!6493 = !DILocation(line: 5769, column: 45, scope: !6485)
!6494 = !DILocation(line: 5769, column: 50, scope: !6485)
!6495 = !DILocation(line: 5769, column: 43, scope: !6485)
!6496 = !DILocation(line: 5769, column: 54, scope: !6485)
!6497 = !DILocation(line: 5769, column: 57, scope: !6485)
!6498 = !DILocation(line: 5769, column: 65, scope: !6485)
!6499 = !DILocation(line: 5769, column: 72, scope: !6485)
!6500 = !DILocation(line: 5769, column: 77, scope: !6485)
!6501 = !DILocation(line: 5769, column: 70, scope: !6485)
!6502 = !DILocation(line: 5769, column: 83, scope: !6485)
!6503 = !DILocation(line: 5769, column: 86, scope: !6485)
!6504 = !DILocation(line: 5769, column: 94, scope: !6485)
!6505 = !DILocation(line: 5769, column: 105, scope: !6485)
!6506 = !DILocation(line: 5769, column: 110, scope: !6485)
!6507 = !DILocation(line: 5769, column: 103, scope: !6485)
!6508 = !DILocation(line: 5769, column: 9, scope: !6467)
!6509 = !DILocation(line: 5770, column: 8, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 5769, column: 121)
!6511 = !DILocation(line: 5771, column: 19, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 5771, column: 6)
!6513 = !DILocation(line: 5771, column: 26, scope: !6512)
!6514 = !DILocation(line: 5771, column: 17, scope: !6512)
!6515 = !DILocation(line: 5771, column: 11, scope: !6512)
!6516 = !DILocation(line: 5771, column: 33, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 5771, column: 6)
!6518 = !DILocation(line: 5771, column: 6, scope: !6512)
!6519 = !DILocation(line: 5772, column: 11, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 5772, column: 11)
!6521 = !DILocation(line: 5772, column: 19, scope: !6520)
!6522 = !DILocation(line: 5772, column: 23, scope: !6520)
!6523 = !DILocation(line: 5772, column: 28, scope: !6520)
!6524 = !DILocation(line: 5772, column: 21, scope: !6520)
!6525 = !DILocation(line: 5772, column: 31, scope: !6520)
!6526 = !DILocation(line: 5772, column: 34, scope: !6520)
!6527 = !DILocation(line: 5772, column: 42, scope: !6520)
!6528 = !DILocation(line: 5772, column: 47, scope: !6520)
!6529 = !DILocation(line: 5772, column: 52, scope: !6520)
!6530 = !DILocation(line: 5772, column: 45, scope: !6520)
!6531 = !DILocation(line: 5772, column: 56, scope: !6520)
!6532 = !DILocation(line: 5772, column: 59, scope: !6520)
!6533 = !DILocation(line: 5772, column: 67, scope: !6520)
!6534 = !DILocation(line: 5772, column: 74, scope: !6520)
!6535 = !DILocation(line: 5772, column: 79, scope: !6520)
!6536 = !DILocation(line: 5772, column: 72, scope: !6520)
!6537 = !DILocation(line: 5772, column: 85, scope: !6520)
!6538 = !DILocation(line: 5772, column: 88, scope: !6520)
!6539 = !DILocation(line: 5772, column: 96, scope: !6520)
!6540 = !DILocation(line: 5772, column: 107, scope: !6520)
!6541 = !DILocation(line: 5772, column: 112, scope: !6520)
!6542 = !DILocation(line: 5772, column: 105, scope: !6520)
!6543 = !DILocation(line: 5772, column: 11, scope: !6517)
!6544 = !DILocation(line: 5773, column: 8, scope: !6520)
!6545 = !DILocation(line: 5771, column: 49, scope: !6517)
!6546 = !DILocation(line: 5771, column: 57, scope: !6517)
!6547 = !DILocation(line: 5771, column: 47, scope: !6517)
!6548 = !DILocation(line: 5771, column: 6, scope: !6517)
!6549 = distinct !{!6549, !6518, !6550}
!6550 = !DILocation(line: 5773, column: 8, scope: !6512)
!6551 = !DILocation(line: 5774, column: 10, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 5774, column: 10)
!6553 = !DILocation(line: 5774, column: 16, scope: !6552)
!6554 = !DILocation(line: 5774, column: 10, scope: !6510)
!6555 = !DILocation(line: 5775, column: 15, scope: !6552)
!6556 = !DILocation(line: 5775, column: 22, scope: !6552)
!6557 = !DILocation(line: 5775, column: 13, scope: !6552)
!6558 = !DILocation(line: 5775, column: 7, scope: !6552)
!6559 = !DILocation(line: 5777, column: 9, scope: !6552)
!6560 = !DILocation(line: 5778, column: 5, scope: !6510)
!6561 = !DILocation(line: 5779, column: 9, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 5779, column: 9)
!6563 = !DILocation(line: 5779, column: 11, scope: !6562)
!6564 = !DILocation(line: 5779, column: 9, scope: !6467)
!6565 = !DILocation(line: 5780, column: 49, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 5779, column: 16)
!6567 = !DILocation(line: 5780, column: 54, scope: !6566)
!6568 = !DILocation(line: 5780, column: 58, scope: !6566)
!6569 = !DILocation(line: 5780, column: 61, scope: !6566)
!6570 = !DILocation(line: 5780, column: 66, scope: !6566)
!6571 = !DILocation(line: 5780, column: 6, scope: !6566)
!6572 = !DILocation(line: 5781, column: 6, scope: !6566)
!6573 = !DILocation(line: 5785, column: 60, scope: !6467)
!6574 = !DILocation(line: 5785, column: 65, scope: !6467)
!6575 = !DILocation(line: 5785, column: 39, scope: !6467)
!6576 = !DILocation(line: 5785, column: 15, scope: !6467)
!6577 = !DILocation(line: 5785, column: 13, scope: !6467)
!6578 = !DILocation(line: 5786, column: 9, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 5786, column: 9)
!6580 = !DILocation(line: 5786, column: 17, scope: !6579)
!6581 = !DILocation(line: 5786, column: 20, scope: !6579)
!6582 = !DILocation(line: 5786, column: 29, scope: !6579)
!6583 = !DILocation(line: 5786, column: 33, scope: !6579)
!6584 = !DILocation(line: 5786, column: 37, scope: !6579)
!6585 = !DILocation(line: 5786, column: 46, scope: !6579)
!6586 = !DILocation(line: 5786, column: 51, scope: !6579)
!6587 = !DILocation(line: 5786, column: 56, scope: !6579)
!6588 = !DILocation(line: 5786, column: 9, scope: !6467)
!6589 = !DILocation(line: 5789, column: 32, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 5786, column: 79)
!6591 = !DILocation(line: 5789, column: 36, scope: !6590)
!6592 = !DILocation(line: 5789, column: 41, scope: !6590)
!6593 = !DILocation(line: 5789, column: 49, scope: !6590)
!6594 = !DILocation(line: 5789, column: 58, scope: !6590)
!6595 = !DILocation(line: 5789, column: 6, scope: !6590)
!6596 = !DILocation(line: 5790, column: 5, scope: !6590)
!6597 = !DILocation(line: 5793, column: 10, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 5793, column: 10)
!6599 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 5791, column: 10)
!6600 = !DILocation(line: 5793, column: 15, scope: !6598)
!6601 = !DILocation(line: 5793, column: 26, scope: !6598)
!6602 = !DILocation(line: 5793, column: 34, scope: !6598)
!6603 = !DILocation(line: 5793, column: 24, scope: !6598)
!6604 = !DILocation(line: 5793, column: 10, scope: !6599)
!6605 = !DILocation(line: 5794, column: 30, scope: !6598)
!6606 = !DILocation(line: 5794, column: 34, scope: !6598)
!6607 = !DILocation(line: 5794, column: 39, scope: !6598)
!6608 = !DILocation(line: 5794, column: 47, scope: !6598)
!6609 = !DILocation(line: 5794, column: 56, scope: !6598)
!6610 = !DILocation(line: 5794, column: 7, scope: !6598)
!6611 = !DILocation(line: 5796, column: 97, scope: !6598)
!6612 = !DILocation(line: 5796, column: 102, scope: !6598)
!6613 = !DILocation(line: 5796, column: 106, scope: !6598)
!6614 = !DILocation(line: 5796, column: 109, scope: !6598)
!6615 = !DILocation(line: 5796, column: 114, scope: !6598)
!6616 = !DILocation(line: 5796, column: 7, scope: !6598)
!6617 = !DILocation(line: 5799, column: 13, scope: !6467)
!6618 = !DILocation(line: 5799, column: 21, scope: !6467)
!6619 = !DILocation(line: 5799, column: 11, scope: !6467)
!6620 = !DILocation(line: 5800, column: 4, scope: !6467)
!6621 = !DILocation(line: 5759, column: 59, scope: !6461)
!6622 = !DILocation(line: 5759, column: 64, scope: !6461)
!6623 = !DILocation(line: 5759, column: 57, scope: !6461)
!6624 = !DILocation(line: 5759, column: 4, scope: !6461)
!6625 = distinct !{!6625, !6465, !6626}
!6626 = !DILocation(line: 5800, column: 4, scope: !6455)
!6627 = !DILocation(line: 5801, column: 3, scope: !6446)
!6628 = !DILocation(line: 5751, column: 29, scope: !6441)
!6629 = !DILocation(line: 5751, column: 3, scope: !6441)
!6630 = distinct !{!6630, !6443, !6631}
!6631 = !DILocation(line: 5801, column: 3, scope: !6438)
!6632 = !DILocation(line: 5802, column: 2, scope: !6432)
!6633 = !DILocation(line: 5804, column: 2, scope: !6319)
!6634 = !DILocation(line: 5805, column: 2, scope: !6319)
!6635 = !DILocation(line: 5807, column: 12, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 5807, column: 2)
!6637 = !DILocation(line: 5807, column: 16, scope: !6636)
!6638 = !DILocation(line: 5807, column: 30, scope: !6636)
!6639 = !DILocation(line: 5807, column: 11, scope: !6636)
!6640 = !DILocation(line: 5807, column: 7, scope: !6636)
!6641 = !DILocation(line: 5807, column: 37, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 5807, column: 2)
!6643 = !DILocation(line: 5807, column: 2, scope: !6636)
!6644 = !DILocation(line: 5808, column: 7, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 5808, column: 7)
!6646 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 5807, column: 60)
!6647 = !DILocation(line: 5808, column: 13, scope: !6645)
!6648 = !DILocation(line: 5808, column: 7, scope: !6646)
!6649 = !DILocation(line: 5809, column: 4, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 5808, column: 21)
!6651 = !DILocation(line: 5809, column: 14, scope: !6650)
!6652 = !DILocation(line: 5809, column: 20, scope: !6650)
!6653 = !DILocation(line: 5810, column: 4, scope: !6650)
!6654 = !DILocation(line: 5810, column: 10, scope: !6650)
!6655 = !DILocation(line: 5810, column: 16, scope: !6650)
!6656 = !DILocation(line: 5811, column: 3, scope: !6650)
!6657 = !DILocation(line: 5812, column: 7, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 5812, column: 7)
!6659 = !DILocation(line: 5812, column: 13, scope: !6658)
!6660 = !DILocation(line: 5812, column: 7, scope: !6646)
!6661 = !DILocation(line: 5813, column: 4, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 5812, column: 21)
!6663 = !DILocation(line: 5813, column: 14, scope: !6662)
!6664 = !DILocation(line: 5813, column: 20, scope: !6662)
!6665 = !DILocation(line: 5814, column: 4, scope: !6662)
!6666 = !DILocation(line: 5814, column: 10, scope: !6662)
!6667 = !DILocation(line: 5814, column: 16, scope: !6662)
!6668 = !DILocation(line: 5815, column: 3, scope: !6662)
!6669 = !DILocation(line: 5816, column: 2, scope: !6646)
!6670 = !DILocation(line: 5807, column: 48, scope: !6642)
!6671 = !DILocation(line: 5807, column: 54, scope: !6642)
!6672 = !DILocation(line: 5807, column: 47, scope: !6642)
!6673 = !DILocation(line: 5807, column: 2, scope: !6642)
!6674 = distinct !{!6674, !6643, !6675}
!6675 = !DILocation(line: 5816, column: 2, scope: !6636)
!6676 = !DILocation(line: 5818, column: 2, scope: !6319)
!6677 = !DILocation(line: 5818, column: 6, scope: !6319)
!6678 = !DILocation(line: 5818, column: 8, scope: !6319)
!6679 = !DILocation(line: 5818, column: 16, scope: !6319)
!6680 = !DILocation(line: 5819, column: 2, scope: !6319)
!6681 = !DILocation(line: 5819, column: 6, scope: !6319)
!6682 = !DILocation(line: 5819, column: 17, scope: !6319)
!6683 = !DILocation(line: 5819, column: 21, scope: !6319)
!6684 = !DILocation(line: 5819, column: 27, scope: !6319)
!6685 = !DILocation(line: 5819, column: 31, scope: !6319)
!6686 = !DILocation(line: 5820, column: 1, scope: !6319)
!6687 = !DILocalVariable(name: "re", arg: 1, scope: !4214, file: !3, line: 5358, type: !6)
!6688 = !DILocation(line: 5358, column: 41, scope: !4214)
!6689 = !DILocalVariable(name: "zco", arg: 2, scope: !4214, file: !3, line: 5358, type: !44)
!6690 = !DILocation(line: 5358, column: 51, scope: !4214)
!6691 = !DILocalVariable(name: "co", arg: 3, scope: !4214, file: !3, line: 5358, type: !2417)
!6692 = !DILocation(line: 5358, column: 71, scope: !4214)
!6693 = !DILocalVariable(name: "ho", arg: 4, scope: !4214, file: !3, line: 5358, type: !2417)
!6694 = !DILocation(line: 5358, column: 90, scope: !4214)
!6695 = !DILocalVariable(name: "div", scope: !4214, file: !3, line: 5362, type: !45)
!6696 = !DILocation(line: 5362, column: 8, scope: !4214)
!6697 = !DILocation(line: 5365, column: 6, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 5365, column: 6)
!6699 = !DILocation(line: 5365, column: 6, scope: !4214)
!6700 = !DILocation(line: 5366, column: 9, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 5365, column: 10)
!6702 = !DILocation(line: 5366, column: 13, scope: !6701)
!6703 = !DILocation(line: 5366, column: 15, scope: !6701)
!6704 = !DILocation(line: 5366, column: 20, scope: !6701)
!6705 = !DILocation(line: 5366, column: 7, scope: !6701)
!6706 = !DILocation(line: 5369, column: 7, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 5369, column: 7)
!6708 = !DILocation(line: 5369, column: 7, scope: !6701)
!6709 = !DILocalVariable(name: "psize", scope: !6710, file: !3, line: 5371, type: !45)
!6710 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 5369, column: 13)
!6711 = !DILocation(line: 5371, column: 10, scope: !6710)
!6712 = !DILocation(line: 5373, column: 29, scope: !6710)
!6713 = !DILocation(line: 5373, column: 33, scope: !6710)
!6714 = !DILocation(line: 5373, column: 12, scope: !6710)
!6715 = !DILocation(line: 5373, column: 53, scope: !6710)
!6716 = !DILocation(line: 5373, column: 57, scope: !6710)
!6717 = !DILocation(line: 5373, column: 46, scope: !6710)
!6718 = !DILocation(line: 5373, column: 44, scope: !6710)
!6719 = !DILocation(line: 5373, column: 10, scope: !6710)
!6720 = !DILocation(line: 5375, column: 21, scope: !6710)
!6721 = !DILocation(line: 5375, column: 29, scope: !6710)
!6722 = !DILocation(line: 5375, column: 33, scope: !6710)
!6723 = !DILocation(line: 5375, column: 27, scope: !6710)
!6724 = !DILocation(line: 5375, column: 16, scope: !6710)
!6725 = !DILocation(line: 5375, column: 14, scope: !6710)
!6726 = !DILocation(line: 5377, column: 29, scope: !6710)
!6727 = !DILocation(line: 5377, column: 33, scope: !6710)
!6728 = !DILocation(line: 5377, column: 12, scope: !6710)
!6729 = !DILocation(line: 5377, column: 53, scope: !6710)
!6730 = !DILocation(line: 5377, column: 57, scope: !6710)
!6731 = !DILocation(line: 5377, column: 46, scope: !6710)
!6732 = !DILocation(line: 5377, column: 44, scope: !6710)
!6733 = !DILocation(line: 5377, column: 10, scope: !6710)
!6734 = !DILocation(line: 5379, column: 21, scope: !6710)
!6735 = !DILocation(line: 5379, column: 29, scope: !6710)
!6736 = !DILocation(line: 5379, column: 33, scope: !6710)
!6737 = !DILocation(line: 5379, column: 27, scope: !6710)
!6738 = !DILocation(line: 5379, column: 16, scope: !6710)
!6739 = !DILocation(line: 5379, column: 14, scope: !6710)
!6740 = !DILocation(line: 5380, column: 3, scope: !6710)
!6741 = !DILocation(line: 5381, column: 10, scope: !6701)
!6742 = !DILocation(line: 5381, column: 14, scope: !6701)
!6743 = !DILocation(line: 5381, column: 18, scope: !6701)
!6744 = !DILocation(line: 5381, column: 8, scope: !6701)
!6745 = !DILocation(line: 5382, column: 10, scope: !6701)
!6746 = !DILocation(line: 5382, column: 14, scope: !6701)
!6747 = !DILocation(line: 5382, column: 18, scope: !6701)
!6748 = !DILocation(line: 5382, column: 8, scope: !6701)
!6749 = !DILocation(line: 5384, column: 3, scope: !6701)
!6750 = !DILocation(line: 5388, column: 6, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 5388, column: 6)
!6752 = !DILocation(line: 5388, column: 11, scope: !6751)
!6753 = !DILocation(line: 5388, column: 6, scope: !4214)
!6754 = !DILocation(line: 5388, column: 21, scope: !6751)
!6755 = !DILocation(line: 5388, column: 18, scope: !6751)
!6756 = !DILocation(line: 5389, column: 17, scope: !6751)
!6757 = !DILocation(line: 5389, column: 16, scope: !6751)
!6758 = !DILocation(line: 5389, column: 10, scope: !6751)
!6759 = !DILocation(line: 5392, column: 6, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 5392, column: 6)
!6761 = !DILocation(line: 5392, column: 6, scope: !4214)
!6762 = !DILocalVariable(name: "vec", scope: !6763, file: !3, line: 5393, type: !188)
!6763 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 5392, column: 12)
!6764 = !DILocation(line: 5393, column: 9, scope: !6763)
!6765 = !DILocalVariable(name: "ang", scope: !6763, file: !3, line: 5393, type: !45)
!6766 = !DILocation(line: 5393, column: 17, scope: !6763)
!6767 = !DILocation(line: 5395, column: 14, scope: !6763)
!6768 = !DILocation(line: 5395, column: 19, scope: !6763)
!6769 = !DILocation(line: 5395, column: 3, scope: !6763)
!6770 = !DILocation(line: 5397, column: 16, scope: !6763)
!6771 = !DILocation(line: 5397, column: 15, scope: !6763)
!6772 = !DILocation(line: 5397, column: 29, scope: !6763)
!6773 = !DILocation(line: 5397, column: 36, scope: !6763)
!6774 = !DILocation(line: 5397, column: 35, scope: !6763)
!6775 = !DILocation(line: 5397, column: 45, scope: !6763)
!6776 = !DILocation(line: 5397, column: 52, scope: !6763)
!6777 = !DILocation(line: 5397, column: 51, scope: !6763)
!6778 = !DILocation(line: 5397, column: 43, scope: !6763)
!6779 = !DILocation(line: 5397, column: 23, scope: !6763)
!6780 = !DILocation(line: 5397, column: 22, scope: !6763)
!6781 = !DILocation(line: 5397, column: 8, scope: !6763)
!6782 = !DILocation(line: 5397, column: 6, scope: !6763)
!6783 = !DILocation(line: 5398, column: 7, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 5398, column: 7)
!6785 = !DILocation(line: 5398, column: 13, scope: !6784)
!6786 = !DILocation(line: 5398, column: 7, scope: !6763)
!6787 = !DILocation(line: 5398, column: 26, scope: !6784)
!6788 = !DILocation(line: 5398, column: 25, scope: !6784)
!6789 = !DILocation(line: 5398, column: 23, scope: !6784)
!6790 = !DILocation(line: 5398, column: 20, scope: !6784)
!6791 = !DILocation(line: 5399, column: 11, scope: !6763)
!6792 = !DILocation(line: 5399, column: 15, scope: !6763)
!6793 = !DILocation(line: 5399, column: 14, scope: !6763)
!6794 = !DILocation(line: 5399, column: 27, scope: !6763)
!6795 = !DILocation(line: 5399, column: 25, scope: !6763)
!6796 = !DILocation(line: 5399, column: 3, scope: !6763)
!6797 = !DILocation(line: 5399, column: 9, scope: !6763)
!6798 = !DILocation(line: 5401, column: 34, scope: !6763)
!6799 = !DILocation(line: 5401, column: 50, scope: !6763)
!6800 = !DILocation(line: 5401, column: 43, scope: !6763)
!6801 = !DILocation(line: 5401, column: 41, scope: !6763)
!6802 = !DILocation(line: 5401, column: 27, scope: !6763)
!6803 = !DILocation(line: 5401, column: 25, scope: !6763)
!6804 = !DILocation(line: 5401, column: 6, scope: !6763)
!6805 = !DILocation(line: 5402, column: 11, scope: !6763)
!6806 = !DILocation(line: 5402, column: 15, scope: !6763)
!6807 = !DILocation(line: 5402, column: 14, scope: !6763)
!6808 = !DILocation(line: 5402, column: 27, scope: !6763)
!6809 = !DILocation(line: 5402, column: 25, scope: !6763)
!6810 = !DILocation(line: 5402, column: 3, scope: !6763)
!6811 = !DILocation(line: 5402, column: 9, scope: !6763)
!6812 = !DILocation(line: 5404, column: 2, scope: !6763)
!6813 = !DILocation(line: 5406, column: 11, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 5405, column: 7)
!6815 = !DILocation(line: 5406, column: 23, scope: !6814)
!6816 = !DILocation(line: 5406, column: 29, scope: !6814)
!6817 = !DILocation(line: 5406, column: 28, scope: !6814)
!6818 = !DILocation(line: 5406, column: 22, scope: !6814)
!6819 = !DILocation(line: 5406, column: 16, scope: !6814)
!6820 = !DILocation(line: 5406, column: 3, scope: !6814)
!6821 = !DILocation(line: 5406, column: 9, scope: !6814)
!6822 = !DILocation(line: 5407, column: 11, scope: !6814)
!6823 = !DILocation(line: 5407, column: 23, scope: !6814)
!6824 = !DILocation(line: 5407, column: 29, scope: !6814)
!6825 = !DILocation(line: 5407, column: 28, scope: !6814)
!6826 = !DILocation(line: 5407, column: 22, scope: !6814)
!6827 = !DILocation(line: 5407, column: 16, scope: !6814)
!6828 = !DILocation(line: 5407, column: 3, scope: !6814)
!6829 = !DILocation(line: 5407, column: 9, scope: !6814)
!6830 = !DILocation(line: 5409, column: 1, scope: !4214)
!6831 = distinct !DISubprogram(name: "database_fromscene_vectors", scope: !3, file: !3, line: 5311, type: !6832, scopeLine: 5312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6832 = !DISubroutineType(types: !6833)
!6833 = !{null, !6, !2982, !79, !21}
!6834 = !DILocalVariable(name: "re", arg: 1, scope: !6831, file: !3, line: 5311, type: !6)
!6835 = !DILocation(line: 5311, column: 48, scope: !6831)
!6836 = !DILocalVariable(name: "scene", arg: 2, scope: !6831, file: !3, line: 5311, type: !2982)
!6837 = !DILocation(line: 5311, column: 59, scope: !6831)
!6838 = !DILocalVariable(name: "lay", arg: 3, scope: !6831, file: !3, line: 5311, type: !79)
!6839 = !DILocation(line: 5311, column: 79, scope: !6831)
!6840 = !DILocalVariable(name: "timeoffset", arg: 4, scope: !6831, file: !3, line: 5311, type: !21)
!6841 = !DILocation(line: 5311, column: 88, scope: !6831)
!6842 = !DILocalVariable(name: "camera", scope: !6831, file: !3, line: 5313, type: !3236)
!6843 = !DILocation(line: 5313, column: 10, scope: !6831)
!6844 = !DILocation(line: 5313, column: 31, scope: !6831)
!6845 = !DILocation(line: 5313, column: 18, scope: !6831)
!6846 = !DILocalVariable(name: "mat", scope: !6831, file: !3, line: 5314, type: !462)
!6847 = !DILocation(line: 5314, column: 8, scope: !6831)
!6848 = !DILocation(line: 5316, column: 13, scope: !6831)
!6849 = !DILocation(line: 5316, column: 2, scope: !6831)
!6850 = !DILocation(line: 5316, column: 6, scope: !6831)
!6851 = !DILocation(line: 5316, column: 11, scope: !6831)
!6852 = !DILocation(line: 5317, column: 11, scope: !6831)
!6853 = !DILocation(line: 5317, column: 2, scope: !6831)
!6854 = !DILocation(line: 5317, column: 6, scope: !6831)
!6855 = !DILocation(line: 5317, column: 9, scope: !6831)
!6856 = !DILocation(line: 5321, column: 17, scope: !6831)
!6857 = !DILocation(line: 5321, column: 2, scope: !6831)
!6858 = !DILocation(line: 5321, column: 6, scope: !6831)
!6859 = !DILocation(line: 5321, column: 15, scope: !6831)
!6860 = !DILocation(line: 5322, column: 52, scope: !6831)
!6861 = !DILocation(line: 5322, column: 56, scope: !6831)
!6862 = !DILocation(line: 5322, column: 63, scope: !6831)
!6863 = !DILocation(line: 5322, column: 40, scope: !6831)
!6864 = !DILocation(line: 5322, column: 44, scope: !6831)
!6865 = !DILocation(line: 5322, column: 51, scope: !6831)
!6866 = !DILocation(line: 5322, column: 26, scope: !6831)
!6867 = !DILocation(line: 5322, column: 30, scope: !6831)
!6868 = !DILocation(line: 5322, column: 39, scope: !6831)
!6869 = !DILocation(line: 5322, column: 14, scope: !6831)
!6870 = !DILocation(line: 5322, column: 18, scope: !6831)
!6871 = !DILocation(line: 5322, column: 25, scope: !6831)
!6872 = !DILocation(line: 5322, column: 2, scope: !6831)
!6873 = !DILocation(line: 5322, column: 6, scope: !6831)
!6874 = !DILocation(line: 5322, column: 13, scope: !6831)
!6875 = !DILocation(line: 5323, column: 60, scope: !6831)
!6876 = !DILocation(line: 5323, column: 64, scope: !6831)
!6877 = !DILocation(line: 5323, column: 66, scope: !6831)
!6878 = !DILocation(line: 5323, column: 73, scope: !6831)
!6879 = !DILocation(line: 5323, column: 46, scope: !6831)
!6880 = !DILocation(line: 5323, column: 50, scope: !6831)
!6881 = !DILocation(line: 5323, column: 52, scope: !6831)
!6882 = !DILocation(line: 5323, column: 59, scope: !6831)
!6883 = !DILocation(line: 5323, column: 30, scope: !6831)
!6884 = !DILocation(line: 5323, column: 34, scope: !6831)
!6885 = !DILocation(line: 5323, column: 36, scope: !6831)
!6886 = !DILocation(line: 5323, column: 45, scope: !6831)
!6887 = !DILocation(line: 5323, column: 16, scope: !6831)
!6888 = !DILocation(line: 5323, column: 20, scope: !6831)
!6889 = !DILocation(line: 5323, column: 22, scope: !6831)
!6890 = !DILocation(line: 5323, column: 29, scope: !6831)
!6891 = !DILocation(line: 5323, column: 2, scope: !6831)
!6892 = !DILocation(line: 5323, column: 6, scope: !6831)
!6893 = !DILocation(line: 5323, column: 8, scope: !6831)
!6894 = !DILocation(line: 5323, column: 15, scope: !6831)
!6895 = !DILocation(line: 5324, column: 20, scope: !6831)
!6896 = !DILocation(line: 5324, column: 24, scope: !6831)
!6897 = !DILocation(line: 5324, column: 31, scope: !6831)
!6898 = !DILocation(line: 5324, column: 35, scope: !6831)
!6899 = !DILocation(line: 5324, column: 2, scope: !6831)
!6900 = !DILocation(line: 5324, column: 6, scope: !6831)
!6901 = !DILocation(line: 5324, column: 13, scope: !6831)
!6902 = !DILocation(line: 5324, column: 18, scope: !6831)
!6903 = !DILocation(line: 5326, column: 12, scope: !6831)
!6904 = !DILocation(line: 5329, column: 6, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 5329, column: 6)
!6906 = !DILocation(line: 5329, column: 10, scope: !6905)
!6907 = !DILocation(line: 5329, column: 14, scope: !6905)
!6908 = !DILocation(line: 5329, column: 6, scope: !6831)
!6909 = !DILocation(line: 5330, column: 7, scope: !6905)
!6910 = !DILocation(line: 5330, column: 3, scope: !6905)
!6911 = !DILocation(line: 5333, column: 19, scope: !6831)
!6912 = !DILocation(line: 5333, column: 2, scope: !6831)
!6913 = !DILocation(line: 5333, column: 9, scope: !6831)
!6914 = !DILocation(line: 5333, column: 11, scope: !6831)
!6915 = !DILocation(line: 5333, column: 16, scope: !6831)
!6916 = !DILocation(line: 5334, column: 32, scope: !6831)
!6917 = !DILocation(line: 5334, column: 36, scope: !6831)
!6918 = !DILocation(line: 5334, column: 46, scope: !6831)
!6919 = !DILocation(line: 5334, column: 50, scope: !6831)
!6920 = !DILocation(line: 5334, column: 56, scope: !6831)
!6921 = !DILocation(line: 5334, column: 60, scope: !6831)
!6922 = !DILocation(line: 5334, column: 67, scope: !6831)
!6923 = !DILocation(line: 5334, column: 2, scope: !6831)
!6924 = !DILocation(line: 5337, column: 6, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 5337, column: 6)
!6926 = !DILocation(line: 5337, column: 6, scope: !6831)
!6927 = !DILocation(line: 5338, column: 19, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !3, line: 5337, column: 14)
!6929 = !DILocation(line: 5338, column: 24, scope: !6928)
!6930 = !DILocation(line: 5338, column: 32, scope: !6928)
!6931 = !DILocation(line: 5338, column: 3, scope: !6928)
!6932 = !DILocation(line: 5339, column: 13, scope: !6928)
!6933 = !DILocation(line: 5339, column: 3, scope: !6928)
!6934 = !DILocation(line: 5340, column: 14, scope: !6928)
!6935 = !DILocation(line: 5340, column: 18, scope: !6928)
!6936 = !DILocation(line: 5340, column: 3, scope: !6928)
!6937 = !DILocation(line: 5341, column: 2, scope: !6928)
!6938 = !DILocation(line: 5344, column: 24, scope: !6831)
!6939 = !DILocation(line: 5344, column: 28, scope: !6831)
!6940 = !DILocation(line: 5344, column: 45, scope: !6831)
!6941 = !DILocation(line: 5344, column: 2, scope: !6831)
!6942 = !DILocation(line: 5346, column: 7, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 5346, column: 6)
!6944 = !DILocation(line: 5346, column: 11, scope: !6943)
!6945 = !DILocation(line: 5346, column: 22, scope: !6943)
!6946 = !DILocation(line: 5346, column: 26, scope: !6943)
!6947 = !DILocation(line: 5346, column: 6, scope: !6831)
!6948 = !DILocation(line: 5350, column: 22, scope: !6943)
!6949 = !DILocation(line: 5350, column: 41, scope: !6943)
!6950 = !DILocation(line: 5350, column: 45, scope: !6943)
!6951 = !DILocation(line: 5350, column: 47, scope: !6943)
!6952 = !DILocation(line: 5350, column: 52, scope: !6943)
!6953 = !DILocation(line: 5350, column: 66, scope: !6943)
!6954 = !DILocation(line: 5350, column: 40, scope: !6943)
!6955 = !DILocation(line: 5350, column: 3, scope: !6943)
!6956 = !DILocation(line: 5354, column: 19, scope: !6831)
!6957 = !DILocation(line: 5354, column: 2, scope: !6831)
!6958 = !DILocation(line: 5354, column: 9, scope: !6831)
!6959 = !DILocation(line: 5354, column: 11, scope: !6831)
!6960 = !DILocation(line: 5354, column: 16, scope: !6831)
!6961 = !DILocation(line: 5355, column: 1, scope: !6831)
!6962 = distinct !DISubprogram(name: "copy_dbase_object_vectors", scope: !3, file: !3, line: 5654, type: !6963, scopeLine: 5655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{null, !6, !2565}
!6965 = !DILocalVariable(name: "re", arg: 1, scope: !6962, file: !3, line: 5654, type: !6)
!6966 = !DILocation(line: 5654, column: 47, scope: !6962)
!6967 = !DILocalVariable(name: "lb", arg: 2, scope: !6962, file: !3, line: 5654, type: !2565)
!6968 = !DILocation(line: 5654, column: 61, scope: !6962)
!6969 = !DILocalVariable(name: "obi", scope: !6962, file: !3, line: 5656, type: !3342)
!6970 = !DILocation(line: 5656, column: 21, scope: !6962)
!6971 = !DILocalVariable(name: "obilb", scope: !6962, file: !3, line: 5656, type: !3342)
!6972 = !DILocation(line: 5656, column: 27, scope: !6962)
!6973 = !DILocalVariable(name: "obr", scope: !6962, file: !3, line: 5657, type: !3063)
!6974 = !DILocation(line: 5657, column: 13, scope: !6962)
!6975 = !DILocalVariable(name: "ver", scope: !6962, file: !3, line: 5658, type: !4179)
!6976 = !DILocation(line: 5658, column: 11, scope: !6962)
!6977 = !DILocalVariable(name: "vec", scope: !6962, file: !3, line: 5659, type: !44)
!6978 = !DILocation(line: 5659, column: 9, scope: !6962)
!6979 = !DILocalVariable(name: "ho", scope: !6962, file: !3, line: 5659, type: !270)
!6980 = !DILocation(line: 5659, column: 14, scope: !6962)
!6981 = !DILocalVariable(name: "winmat", scope: !6962, file: !3, line: 5659, type: !462)
!6982 = !DILocation(line: 5659, column: 21, scope: !6962)
!6983 = !DILocalVariable(name: "a", scope: !6962, file: !3, line: 5660, type: !21)
!6984 = !DILocation(line: 5660, column: 6, scope: !6962)
!6985 = !DILocalVariable(name: "totvector", scope: !6962, file: !3, line: 5660, type: !21)
!6986 = !DILocation(line: 5660, column: 9, scope: !6962)
!6987 = !DILocation(line: 5662, column: 12, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 5662, column: 2)
!6989 = !DILocation(line: 5662, column: 16, scope: !6988)
!6990 = !DILocation(line: 5662, column: 30, scope: !6988)
!6991 = !DILocation(line: 5662, column: 10, scope: !6988)
!6992 = !DILocation(line: 5662, column: 7, scope: !6988)
!6993 = !DILocation(line: 5662, column: 37, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 5662, column: 2)
!6995 = !DILocation(line: 5662, column: 2, scope: !6988)
!6996 = !DILocation(line: 5663, column: 8, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 5662, column: 58)
!6998 = !DILocation(line: 5663, column: 13, scope: !6997)
!6999 = !DILocation(line: 5663, column: 6, scope: !6997)
!7000 = !DILocation(line: 5665, column: 10, scope: !6997)
!7001 = !DILocation(line: 5665, column: 8, scope: !6997)
!7002 = !DILocation(line: 5666, column: 10, scope: !6997)
!7003 = !DILocation(line: 5666, column: 3, scope: !6997)
!7004 = !DILocation(line: 5666, column: 17, scope: !6997)
!7005 = !DILocation(line: 5667, column: 15, scope: !6997)
!7006 = !DILocation(line: 5667, column: 19, scope: !6997)
!7007 = !DILocation(line: 5667, column: 3, scope: !6997)
!7008 = !DILocation(line: 5669, column: 32, scope: !6997)
!7009 = !DILocation(line: 5669, column: 37, scope: !6997)
!7010 = !DILocation(line: 5669, column: 30, scope: !6997)
!7011 = !DILocation(line: 5669, column: 3, scope: !6997)
!7012 = !DILocation(line: 5669, column: 10, scope: !6997)
!7013 = !DILocation(line: 5669, column: 19, scope: !6997)
!7014 = !DILocation(line: 5671, column: 7, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 5671, column: 7)
!7016 = !DILocation(line: 5671, column: 17, scope: !7015)
!7017 = !DILocation(line: 5671, column: 7, scope: !6997)
!7018 = !DILocation(line: 5672, column: 25, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 5671, column: 22)
!7020 = !DILocation(line: 5672, column: 53, scope: !7019)
!7021 = !DILocation(line: 5672, column: 52, scope: !7019)
!7022 = !DILocation(line: 5672, column: 9, scope: !7019)
!7023 = !DILocation(line: 5672, column: 16, scope: !7019)
!7024 = !DILocation(line: 5672, column: 23, scope: !7019)
!7025 = !DILocation(line: 5672, column: 7, scope: !7019)
!7026 = !DILocation(line: 5674, column: 8, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 5674, column: 8)
!7028 = !DILocation(line: 5674, column: 13, scope: !7027)
!7029 = !DILocation(line: 5674, column: 18, scope: !7027)
!7030 = !DILocation(line: 5674, column: 8, scope: !7019)
!7031 = !DILocation(line: 5675, column: 17, scope: !7027)
!7032 = !DILocation(line: 5675, column: 25, scope: !7027)
!7033 = !DILocation(line: 5675, column: 29, scope: !7027)
!7034 = !DILocation(line: 5675, column: 37, scope: !7027)
!7035 = !DILocation(line: 5675, column: 42, scope: !7027)
!7036 = !DILocation(line: 5675, column: 5, scope: !7027)
!7037 = !DILocation(line: 5677, column: 16, scope: !7027)
!7038 = !DILocation(line: 5677, column: 24, scope: !7027)
!7039 = !DILocation(line: 5677, column: 28, scope: !7027)
!7040 = !DILocation(line: 5677, column: 5, scope: !7027)
!7041 = !DILocation(line: 5679, column: 10, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 5679, column: 4)
!7043 = !DILocation(line: 5679, column: 9, scope: !7042)
!7044 = !DILocation(line: 5679, column: 14, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 5679, column: 4)
!7046 = !DILocation(line: 5679, column: 16, scope: !7045)
!7047 = !DILocation(line: 5679, column: 21, scope: !7045)
!7048 = !DILocation(line: 5679, column: 15, scope: !7045)
!7049 = !DILocation(line: 5679, column: 4, scope: !7042)
!7050 = !DILocation(line: 5680, column: 10, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 5680, column: 9)
!7052 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 5679, column: 43)
!7053 = !DILocation(line: 5680, column: 12, scope: !7051)
!7054 = !DILocation(line: 5680, column: 18, scope: !7051)
!7055 = !DILocation(line: 5680, column: 9, scope: !7052)
!7056 = !DILocation(line: 5680, column: 28, scope: !7051)
!7057 = !DILocation(line: 5680, column: 33, scope: !7051)
!7058 = !DILocation(line: 5680, column: 43, scope: !7051)
!7059 = !DILocation(line: 5680, column: 44, scope: !7051)
!7060 = !DILocation(line: 5680, column: 49, scope: !7051)
!7061 = !DILocation(line: 5680, column: 26, scope: !7051)
!7062 = !DILocation(line: 5680, column: 23, scope: !7051)
!7063 = !DILocation(line: 5681, column: 13, scope: !7051)
!7064 = !DILocation(line: 5683, column: 17, scope: !7052)
!7065 = !DILocation(line: 5683, column: 22, scope: !7052)
!7066 = !DILocation(line: 5683, column: 26, scope: !7052)
!7067 = !DILocation(line: 5683, column: 34, scope: !7052)
!7068 = !DILocation(line: 5683, column: 5, scope: !7052)
!7069 = !DILocation(line: 5684, column: 31, scope: !7052)
!7070 = !DILocation(line: 5684, column: 36, scope: !7052)
!7071 = !DILocation(line: 5684, column: 41, scope: !7052)
!7072 = !DILocation(line: 5684, column: 45, scope: !7052)
!7073 = !DILocation(line: 5684, column: 5, scope: !7052)
!7074 = !DILocation(line: 5685, column: 4, scope: !7052)
!7075 = !DILocation(line: 5679, column: 31, scope: !7045)
!7076 = !DILocation(line: 5679, column: 38, scope: !7045)
!7077 = !DILocation(line: 5679, column: 4, scope: !7045)
!7078 = distinct !{!7078, !7049, !7079}
!7079 = !DILocation(line: 5685, column: 4, scope: !7042)
!7080 = !DILocation(line: 5686, column: 3, scope: !7019)
!7081 = !DILocation(line: 5687, column: 2, scope: !6997)
!7082 = !DILocation(line: 5662, column: 47, scope: !6994)
!7083 = !DILocation(line: 5662, column: 52, scope: !6994)
!7084 = !DILocation(line: 5662, column: 45, scope: !6994)
!7085 = !DILocation(line: 5662, column: 2, scope: !6994)
!7086 = distinct !{!7086, !6995, !7087}
!7087 = !DILocation(line: 5687, column: 2, scope: !6988)
!7088 = !DILocation(line: 5688, column: 1, scope: !6962)
!7089 = distinct !DISubprogram(name: "get_vector_renderlayers", scope: !3, file: !3, line: 4886, type: !7090, scopeLine: 4887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!7090 = !DISubroutineType(types: !7091)
!7091 = !{!21, !2982}
!7092 = !DILocalVariable(name: "sce", arg: 1, scope: !7089, file: !3, line: 4886, type: !2982)
!7093 = !DILocation(line: 4886, column: 43, scope: !7089)
!7094 = !DILocalVariable(name: "srl", scope: !7089, file: !3, line: 4888, type: !5840)
!7095 = !DILocation(line: 4888, column: 20, scope: !7089)
!7096 = !DILocalVariable(name: "lay", scope: !7089, file: !3, line: 4889, type: !79)
!7097 = !DILocation(line: 4889, column: 15, scope: !7089)
!7098 = !DILocation(line: 4891, column: 12, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 4891, column: 2)
!7100 = !DILocation(line: 4891, column: 17, scope: !7099)
!7101 = !DILocation(line: 4891, column: 19, scope: !7099)
!7102 = !DILocation(line: 4891, column: 26, scope: !7099)
!7103 = !DILocation(line: 4891, column: 10, scope: !7099)
!7104 = !DILocation(line: 4891, column: 7, scope: !7099)
!7105 = !DILocation(line: 4891, column: 33, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 4891, column: 2)
!7107 = !DILocation(line: 4891, column: 2, scope: !7099)
!7108 = !DILocation(line: 4892, column: 7, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 4892, column: 7)
!7110 = !DILocation(line: 4892, column: 12, scope: !7109)
!7111 = !DILocation(line: 4892, column: 21, scope: !7109)
!7112 = !DILocation(line: 4892, column: 7, scope: !7106)
!7113 = !DILocation(line: 4893, column: 11, scope: !7109)
!7114 = !DILocation(line: 4893, column: 16, scope: !7109)
!7115 = !DILocation(line: 4893, column: 8, scope: !7109)
!7116 = !DILocation(line: 4893, column: 4, scope: !7109)
!7117 = !DILocation(line: 4892, column: 23, scope: !7109)
!7118 = !DILocation(line: 4891, column: 43, scope: !7106)
!7119 = !DILocation(line: 4891, column: 48, scope: !7106)
!7120 = !DILocation(line: 4891, column: 41, scope: !7106)
!7121 = !DILocation(line: 4891, column: 2, scope: !7106)
!7122 = distinct !{!7122, !7107, !7123}
!7123 = !DILocation(line: 4893, column: 16, scope: !7099)
!7124 = !DILocation(line: 4895, column: 9, scope: !7089)
!7125 = !DILocation(line: 4895, column: 2, scope: !7089)
!7126 = distinct !DISubprogram(name: "load_fluidsimspeedvectors", scope: !3, file: !3, line: 5548, type: !7127, scopeLine: 5549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!7127 = !DISubroutineType(types: !7128)
!7128 = !{!21, !6, !3342, !44, !21}
!7129 = !DILocalVariable(name: "re", arg: 1, scope: !7126, file: !3, line: 5548, type: !6)
!7130 = !DILocation(line: 5548, column: 46, scope: !7126)
!7131 = !DILocalVariable(name: "obi", arg: 2, scope: !7126, file: !3, line: 5548, type: !3342)
!7132 = !DILocation(line: 5548, column: 69, scope: !7126)
!7133 = !DILocalVariable(name: "vectors", arg: 3, scope: !7126, file: !3, line: 5548, type: !44)
!7134 = !DILocation(line: 5548, column: 81, scope: !7126)
!7135 = !DILocalVariable(name: "step", arg: 4, scope: !7126, file: !3, line: 5548, type: !21)
!7136 = !DILocation(line: 5548, column: 94, scope: !7126)
!7137 = !DILocalVariable(name: "obr", scope: !7126, file: !3, line: 5550, type: !3063)
!7138 = !DILocation(line: 5550, column: 13, scope: !7126)
!7139 = !DILocation(line: 5550, column: 18, scope: !7126)
!7140 = !DILocation(line: 5550, column: 23, scope: !7126)
!7141 = !DILocalVariable(name: "fsob", scope: !7126, file: !3, line: 5551, type: !3236)
!7142 = !DILocation(line: 5551, column: 10, scope: !7126)
!7143 = !DILocation(line: 5551, column: 16, scope: !7126)
!7144 = !DILocation(line: 5551, column: 21, scope: !7126)
!7145 = !DILocalVariable(name: "ver", scope: !7126, file: !3, line: 5552, type: !4179)
!7146 = !DILocation(line: 5552, column: 11, scope: !7126)
!7147 = !DILocalVariable(name: "speed", scope: !7126, file: !3, line: 5553, type: !44)
!7148 = !DILocation(line: 5553, column: 9, scope: !7126)
!7149 = !DILocalVariable(name: "div", scope: !7126, file: !3, line: 5553, type: !45)
!7150 = !DILocation(line: 5553, column: 16, scope: !7126)
!7151 = !DILocalVariable(name: "zco", scope: !7126, file: !3, line: 5553, type: !1143)
!7152 = !DILocation(line: 5553, column: 21, scope: !7126)
!7153 = !DILocalVariable(name: "avgvel", scope: !7126, file: !3, line: 5553, type: !270)
!7154 = !DILocation(line: 5553, column: 29, scope: !7126)
!7155 = !DILocalVariable(name: "zmulx", scope: !7126, file: !3, line: 5554, type: !45)
!7156 = !DILocation(line: 5554, column: 8, scope: !7126)
!7157 = !DILocation(line: 5554, column: 15, scope: !7126)
!7158 = !DILocation(line: 5554, column: 19, scope: !7126)
!7159 = !DILocation(line: 5554, column: 23, scope: !7126)
!7160 = !DILocalVariable(name: "zmuly", scope: !7126, file: !3, line: 5554, type: !45)
!7161 = !DILocation(line: 5554, column: 27, scope: !7126)
!7162 = !DILocation(line: 5554, column: 34, scope: !7126)
!7163 = !DILocation(line: 5554, column: 38, scope: !7126)
!7164 = !DILocation(line: 5554, column: 42, scope: !7126)
!7165 = !DILocalVariable(name: "len", scope: !7126, file: !3, line: 5554, type: !45)
!7166 = !DILocation(line: 5554, column: 46, scope: !7126)
!7167 = !DILocalVariable(name: "winsq", scope: !7126, file: !3, line: 5555, type: !45)
!7168 = !DILocation(line: 5555, column: 8, scope: !7126)
!7169 = !DILocation(line: 5555, column: 23, scope: !7126)
!7170 = !DILocation(line: 5555, column: 27, scope: !7126)
!7171 = !DILocation(line: 5555, column: 16, scope: !7126)
!7172 = !DILocation(line: 5555, column: 41, scope: !7126)
!7173 = !DILocation(line: 5555, column: 45, scope: !7126)
!7174 = !DILocation(line: 5555, column: 34, scope: !7126)
!7175 = !DILocation(line: 5555, column: 32, scope: !7126)
!7176 = !DILocalVariable(name: "winroot", scope: !7126, file: !3, line: 5555, type: !45)
!7177 = !DILocation(line: 5555, column: 51, scope: !7126)
!7178 = !DILocation(line: 5555, column: 66, scope: !7126)
!7179 = !DILocation(line: 5555, column: 60, scope: !7126)
!7180 = !DILocalVariable(name: "a", scope: !7126, file: !3, line: 5556, type: !21)
!7181 = !DILocation(line: 5556, column: 6, scope: !7126)
!7182 = !DILocalVariable(name: "j", scope: !7126, file: !3, line: 5556, type: !21)
!7183 = !DILocation(line: 5556, column: 9, scope: !7126)
!7184 = !DILocalVariable(name: "hoco", scope: !7126, file: !3, line: 5557, type: !270)
!7185 = !DILocation(line: 5557, column: 8, scope: !7126)
!7186 = !DILocalVariable(name: "ho", scope: !7126, file: !3, line: 5557, type: !270)
!7187 = !DILocation(line: 5557, column: 17, scope: !7126)
!7188 = !DILocalVariable(name: "fsvec", scope: !7126, file: !3, line: 5557, type: !270)
!7189 = !DILocation(line: 5557, column: 24, scope: !7126)
!7190 = !DILocalVariable(name: "camco", scope: !7126, file: !3, line: 5557, type: !270)
!7191 = !DILocation(line: 5557, column: 34, scope: !7126)
!7192 = !DILocalVariable(name: "mat", scope: !7126, file: !3, line: 5558, type: !462)
!7193 = !DILocation(line: 5558, column: 8, scope: !7126)
!7194 = !DILocalVariable(name: "winmat", scope: !7126, file: !3, line: 5558, type: !462)
!7195 = !DILocation(line: 5558, column: 19, scope: !7126)
!7196 = !DILocalVariable(name: "imat", scope: !7126, file: !3, line: 5559, type: !462)
!7197 = !DILocation(line: 5559, column: 8, scope: !7126)
!7198 = !DILocalVariable(name: "fluidmd", scope: !7126, file: !3, line: 5560, type: !3972)
!7199 = !DILocation(line: 5560, column: 24, scope: !7126)
!7200 = !DILocation(line: 5560, column: 79, scope: !7126)
!7201 = !DILocation(line: 5560, column: 58, scope: !7126)
!7202 = !DILocation(line: 5560, column: 34, scope: !7126)
!7203 = !DILocalVariable(name: "fss", scope: !7126, file: !3, line: 5561, type: !7204)
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 64)
!7205 = !DIDerivedType(tag: DW_TAG_typedef, name: "FluidsimSettings", file: !551, line: 150, baseType: !550)
!7206 = !DILocation(line: 5561, column: 20, scope: !7126)
!7207 = !DILocalVariable(name: "velarray", scope: !7126, file: !3, line: 5562, type: !7208)
!7208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7209, size: 64)
!7209 = !DIDerivedType(tag: DW_TAG_typedef, name: "FluidVertexVelocity", file: !551, line: 47, baseType: !2180)
!7210 = !DILocation(line: 5562, column: 23, scope: !7126)
!7211 = !DILocation(line: 5565, column: 6, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5565, column: 6)
!7213 = !DILocation(line: 5565, column: 6, scope: !7126)
!7214 = !DILocation(line: 5565, column: 12, scope: !7212)
!7215 = !DILocation(line: 5567, column: 6, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5567, column: 6)
!7217 = !DILocation(line: 5567, column: 6, scope: !7126)
!7218 = !DILocation(line: 5568, column: 9, scope: !7216)
!7219 = !DILocation(line: 5568, column: 18, scope: !7216)
!7220 = !DILocation(line: 5568, column: 7, scope: !7216)
!7221 = !DILocation(line: 5568, column: 3, scope: !7216)
!7222 = !DILocation(line: 5570, column: 3, scope: !7216)
!7223 = !DILocation(line: 5572, column: 13, scope: !7126)
!7224 = !DILocation(line: 5572, column: 18, scope: !7126)
!7225 = !DILocation(line: 5572, column: 22, scope: !7126)
!7226 = !DILocation(line: 5572, column: 2, scope: !7126)
!7227 = !DILocation(line: 5573, column: 15, scope: !7126)
!7228 = !DILocation(line: 5573, column: 21, scope: !7126)
!7229 = !DILocation(line: 5573, column: 2, scope: !7126)
!7230 = !DILocation(line: 5576, column: 7, scope: !7231)
!7231 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5576, column: 6)
!7232 = !DILocation(line: 5576, column: 12, scope: !7231)
!7233 = !DILocation(line: 5576, column: 6, scope: !7126)
!7234 = !DILocation(line: 5576, column: 28, scope: !7231)
!7235 = !DILocation(line: 5578, column: 7, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5578, column: 7)
!7237 = !DILocation(line: 5578, column: 12, scope: !7236)
!7238 = !DILocation(line: 5578, column: 23, scope: !7236)
!7239 = !DILocation(line: 5578, column: 28, scope: !7236)
!7240 = !DILocation(line: 5578, column: 20, scope: !7236)
!7241 = !DILocation(line: 5578, column: 7, scope: !7126)
!7242 = !DILocation(line: 5580, column: 3, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 5578, column: 37)
!7244 = !DILocation(line: 5583, column: 13, scope: !7126)
!7245 = !DILocation(line: 5583, column: 18, scope: !7126)
!7246 = !DILocation(line: 5583, column: 11, scope: !7126)
!7247 = !DILocation(line: 5585, column: 6, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5585, column: 6)
!7249 = !DILocation(line: 5585, column: 11, scope: !7248)
!7250 = !DILocation(line: 5585, column: 16, scope: !7248)
!7251 = !DILocation(line: 5585, column: 6, scope: !7126)
!7252 = !DILocation(line: 5586, column: 15, scope: !7248)
!7253 = !DILocation(line: 5586, column: 23, scope: !7248)
!7254 = !DILocation(line: 5586, column: 27, scope: !7248)
!7255 = !DILocation(line: 5586, column: 35, scope: !7248)
!7256 = !DILocation(line: 5586, column: 40, scope: !7248)
!7257 = !DILocation(line: 5586, column: 3, scope: !7248)
!7258 = !DILocation(line: 5588, column: 14, scope: !7248)
!7259 = !DILocation(line: 5588, column: 22, scope: !7248)
!7260 = !DILocation(line: 5588, column: 26, scope: !7248)
!7261 = !DILocation(line: 5588, column: 3, scope: !7248)
!7262 = !DILocation(line: 5594, column: 8, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5594, column: 2)
!7264 = !DILocation(line: 5594, column: 7, scope: !7263)
!7265 = !DILocation(line: 5594, column: 12, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 5594, column: 2)
!7267 = !DILocation(line: 5594, column: 14, scope: !7266)
!7268 = !DILocation(line: 5594, column: 19, scope: !7266)
!7269 = !DILocation(line: 5594, column: 13, scope: !7266)
!7270 = !DILocation(line: 5594, column: 2, scope: !7263)
!7271 = !DILocation(line: 5595, column: 9, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 5595, column: 3)
!7273 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 5594, column: 33)
!7274 = !DILocation(line: 5595, column: 8, scope: !7272)
!7275 = !DILocation(line: 5595, column: 12, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 5595, column: 3)
!7277 = !DILocation(line: 5595, column: 13, scope: !7276)
!7278 = !DILocation(line: 5595, column: 3, scope: !7272)
!7279 = !DILocation(line: 5595, column: 34, scope: !7276)
!7280 = !DILocation(line: 5595, column: 43, scope: !7276)
!7281 = !DILocation(line: 5595, column: 46, scope: !7276)
!7282 = !DILocation(line: 5595, column: 50, scope: !7276)
!7283 = !DILocation(line: 5595, column: 28, scope: !7276)
!7284 = !DILocation(line: 5595, column: 21, scope: !7276)
!7285 = !DILocation(line: 5595, column: 31, scope: !7276)
!7286 = !DILocation(line: 5595, column: 17, scope: !7276)
!7287 = !DILocation(line: 5595, column: 3, scope: !7276)
!7288 = distinct !{!7288, !7278, !7289}
!7289 = !DILocation(line: 5595, column: 51, scope: !7272)
!7290 = !DILocation(line: 5597, column: 2, scope: !7273)
!7291 = !DILocation(line: 5594, column: 29, scope: !7266)
!7292 = !DILocation(line: 5594, column: 2, scope: !7266)
!7293 = distinct !{!7293, !7270, !7294}
!7294 = !DILocation(line: 5597, column: 2, scope: !7263)
!7295 = !DILocation(line: 5598, column: 8, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5598, column: 2)
!7297 = !DILocation(line: 5598, column: 7, scope: !7296)
!7298 = !DILocation(line: 5598, column: 11, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 5598, column: 2)
!7300 = !DILocation(line: 5598, column: 12, scope: !7299)
!7301 = !DILocation(line: 5598, column: 2, scope: !7296)
!7302 = !DILocation(line: 5598, column: 41, scope: !7299)
!7303 = !DILocation(line: 5598, column: 46, scope: !7299)
!7304 = !DILocation(line: 5598, column: 33, scope: !7299)
!7305 = !DILocation(line: 5598, column: 27, scope: !7299)
!7306 = !DILocation(line: 5598, column: 20, scope: !7299)
!7307 = !DILocation(line: 5598, column: 30, scope: !7299)
!7308 = !DILocation(line: 5598, column: 16, scope: !7299)
!7309 = !DILocation(line: 5598, column: 2, scope: !7299)
!7310 = distinct !{!7310, !7301, !7311}
!7311 = !DILocation(line: 5598, column: 53, scope: !7296)
!7312 = !DILocation(line: 5601, column: 8, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 5601, column: 2)
!7314 = !DILocation(line: 5601, column: 7, scope: !7313)
!7315 = !DILocation(line: 5601, column: 12, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 5601, column: 2)
!7317 = !DILocation(line: 5601, column: 14, scope: !7316)
!7318 = !DILocation(line: 5601, column: 19, scope: !7316)
!7319 = !DILocation(line: 5601, column: 13, scope: !7316)
!7320 = !DILocation(line: 5601, column: 2, scope: !7313)
!7321 = !DILocation(line: 5602, column: 8, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 5602, column: 7)
!7323 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5601, column: 45)
!7324 = !DILocation(line: 5602, column: 10, scope: !7322)
!7325 = !DILocation(line: 5602, column: 16, scope: !7322)
!7326 = !DILocation(line: 5602, column: 7, scope: !7323)
!7327 = !DILocation(line: 5603, column: 9, scope: !7322)
!7328 = !DILocation(line: 5603, column: 14, scope: !7322)
!7329 = !DILocation(line: 5603, column: 24, scope: !7322)
!7330 = !DILocation(line: 5603, column: 25, scope: !7322)
!7331 = !DILocation(line: 5603, column: 30, scope: !7322)
!7332 = !DILocation(line: 5603, column: 7, scope: !7322)
!7333 = !DILocation(line: 5603, column: 4, scope: !7322)
!7334 = !DILocation(line: 5605, column: 7, scope: !7322)
!7335 = !DILocation(line: 5608, column: 3, scope: !7323)
!7336 = !DILocation(line: 5608, column: 12, scope: !7323)
!7337 = !DILocation(line: 5610, column: 9, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 5610, column: 3)
!7339 = !DILocation(line: 5610, column: 8, scope: !7338)
!7340 = !DILocation(line: 5610, column: 12, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 5610, column: 3)
!7342 = !DILocation(line: 5610, column: 13, scope: !7341)
!7343 = !DILocation(line: 5610, column: 3, scope: !7338)
!7344 = !DILocation(line: 5610, column: 32, scope: !7341)
!7345 = !DILocation(line: 5610, column: 41, scope: !7341)
!7346 = !DILocation(line: 5610, column: 44, scope: !7341)
!7347 = !DILocation(line: 5610, column: 48, scope: !7341)
!7348 = !DILocation(line: 5610, column: 27, scope: !7341)
!7349 = !DILocation(line: 5610, column: 21, scope: !7341)
!7350 = !DILocation(line: 5610, column: 30, scope: !7341)
!7351 = !DILocation(line: 5610, column: 17, scope: !7341)
!7352 = !DILocation(line: 5610, column: 3, scope: !7341)
!7353 = distinct !{!7353, !7343, !7354}
!7354 = !DILocation(line: 5610, column: 49, scope: !7338)
!7355 = !DILocation(line: 5613, column: 8, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 5613, column: 7)
!7357 = !DILocation(line: 5613, column: 17, scope: !7356)
!7358 = !DILocation(line: 5613, column: 26, scope: !7356)
!7359 = !DILocation(line: 5613, column: 30, scope: !7356)
!7360 = !DILocation(line: 5613, column: 39, scope: !7356)
!7361 = !DILocation(line: 5613, column: 48, scope: !7356)
!7362 = !DILocation(line: 5613, column: 52, scope: !7356)
!7363 = !DILocation(line: 5613, column: 61, scope: !7356)
!7364 = !DILocation(line: 5613, column: 7, scope: !7323)
!7365 = !DILocation(line: 5614, column: 15, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 5613, column: 71)
!7367 = !DILocation(line: 5614, column: 4, scope: !7366)
!7368 = !DILocation(line: 5614, column: 13, scope: !7366)
!7369 = !DILocation(line: 5615, column: 15, scope: !7366)
!7370 = !DILocation(line: 5615, column: 4, scope: !7366)
!7371 = !DILocation(line: 5615, column: 13, scope: !7366)
!7372 = !DILocation(line: 5616, column: 15, scope: !7366)
!7373 = !DILocation(line: 5616, column: 4, scope: !7366)
!7374 = !DILocation(line: 5616, column: 13, scope: !7366)
!7375 = !DILocation(line: 5617, column: 3, scope: !7366)
!7376 = !DILocation(line: 5620, column: 23, scope: !7323)
!7377 = !DILocation(line: 5620, column: 32, scope: !7323)
!7378 = !DILocation(line: 5620, column: 14, scope: !7323)
!7379 = !DILocation(line: 5620, column: 3, scope: !7323)
!7380 = !DILocation(line: 5620, column: 12, scope: !7323)
!7381 = !DILocation(line: 5621, column: 23, scope: !7323)
!7382 = !DILocation(line: 5621, column: 32, scope: !7323)
!7383 = !DILocation(line: 5621, column: 14, scope: !7323)
!7384 = !DILocation(line: 5621, column: 3, scope: !7323)
!7385 = !DILocation(line: 5621, column: 12, scope: !7323)
!7386 = !DILocation(line: 5622, column: 23, scope: !7323)
!7387 = !DILocation(line: 5622, column: 32, scope: !7323)
!7388 = !DILocation(line: 5622, column: 14, scope: !7323)
!7389 = !DILocation(line: 5622, column: 3, scope: !7323)
!7390 = !DILocation(line: 5622, column: 12, scope: !7323)
!7391 = !DILocation(line: 5625, column: 15, scope: !7323)
!7392 = !DILocation(line: 5625, column: 22, scope: !7323)
!7393 = !DILocation(line: 5625, column: 30, scope: !7323)
!7394 = !DILocation(line: 5625, column: 3, scope: !7323)
!7395 = !DILocation(line: 5626, column: 15, scope: !7323)
!7396 = !DILocation(line: 5626, column: 20, scope: !7323)
!7397 = !DILocation(line: 5626, column: 24, scope: !7323)
!7398 = !DILocation(line: 5626, column: 32, scope: !7323)
!7399 = !DILocation(line: 5626, column: 3, scope: !7323)
!7400 = !DILocation(line: 5630, column: 7, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 5630, column: 7)
!7402 = !DILocation(line: 5630, column: 12, scope: !7401)
!7403 = !DILocation(line: 5630, column: 7, scope: !7323)
!7404 = !DILocation(line: 5630, column: 22, scope: !7401)
!7405 = !DILocation(line: 5630, column: 19, scope: !7401)
!7406 = !DILocation(line: 5631, column: 18, scope: !7401)
!7407 = !DILocation(line: 5631, column: 17, scope: !7401)
!7408 = !DILocation(line: 5631, column: 11, scope: !7401)
!7409 = !DILocation(line: 5632, column: 11, scope: !7323)
!7410 = !DILocation(line: 5632, column: 17, scope: !7323)
!7411 = !DILocation(line: 5632, column: 16, scope: !7323)
!7412 = !DILocation(line: 5632, column: 25, scope: !7323)
!7413 = !DILocation(line: 5632, column: 24, scope: !7323)
!7414 = !DILocation(line: 5632, column: 3, scope: !7323)
!7415 = !DILocation(line: 5632, column: 9, scope: !7323)
!7416 = !DILocation(line: 5633, column: 11, scope: !7323)
!7417 = !DILocation(line: 5633, column: 17, scope: !7323)
!7418 = !DILocation(line: 5633, column: 16, scope: !7323)
!7419 = !DILocation(line: 5633, column: 25, scope: !7323)
!7420 = !DILocation(line: 5633, column: 24, scope: !7323)
!7421 = !DILocation(line: 5633, column: 3, scope: !7323)
!7422 = !DILocation(line: 5633, column: 9, scope: !7323)
!7423 = !DILocation(line: 5636, column: 8, scope: !7323)
!7424 = !DILocation(line: 5636, column: 15, scope: !7323)
!7425 = !DILocation(line: 5636, column: 14, scope: !7323)
!7426 = !DILocation(line: 5636, column: 24, scope: !7323)
!7427 = !DILocation(line: 5636, column: 31, scope: !7323)
!7428 = !DILocation(line: 5636, column: 30, scope: !7323)
!7429 = !DILocation(line: 5636, column: 22, scope: !7323)
!7430 = !DILocation(line: 5636, column: 6, scope: !7323)
!7431 = !DILocation(line: 5637, column: 7, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7323, file: !3, line: 5637, column: 7)
!7433 = !DILocation(line: 5637, column: 13, scope: !7432)
!7434 = !DILocation(line: 5637, column: 11, scope: !7432)
!7435 = !DILocation(line: 5637, column: 7, scope: !7323)
!7436 = !DILocation(line: 5638, column: 9, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 5637, column: 20)
!7438 = !DILocation(line: 5638, column: 23, scope: !7437)
!7439 = !DILocation(line: 5638, column: 17, scope: !7437)
!7440 = !DILocation(line: 5638, column: 16, scope: !7437)
!7441 = !DILocation(line: 5638, column: 7, scope: !7437)
!7442 = !DILocation(line: 5639, column: 13, scope: !7437)
!7443 = !DILocation(line: 5639, column: 4, scope: !7437)
!7444 = !DILocation(line: 5639, column: 10, scope: !7437)
!7445 = !DILocation(line: 5639, column: 27, scope: !7437)
!7446 = !DILocation(line: 5639, column: 18, scope: !7437)
!7447 = !DILocation(line: 5639, column: 24, scope: !7437)
!7448 = !DILocation(line: 5640, column: 3, scope: !7437)
!7449 = !DILocation(line: 5642, column: 34, scope: !7323)
!7450 = !DILocation(line: 5642, column: 39, scope: !7323)
!7451 = !DILocation(line: 5642, column: 10, scope: !7323)
!7452 = !DILocation(line: 5642, column: 8, scope: !7323)
!7453 = !DILocation(line: 5644, column: 23, scope: !7323)
!7454 = !DILocation(line: 5644, column: 13, scope: !7323)
!7455 = !DILocation(line: 5644, column: 21, scope: !7323)
!7456 = !DILocation(line: 5644, column: 3, scope: !7323)
!7457 = !DILocation(line: 5644, column: 11, scope: !7323)
!7458 = !DILocation(line: 5645, column: 23, scope: !7323)
!7459 = !DILocation(line: 5645, column: 13, scope: !7323)
!7460 = !DILocation(line: 5645, column: 21, scope: !7323)
!7461 = !DILocation(line: 5645, column: 3, scope: !7323)
!7462 = !DILocation(line: 5645, column: 11, scope: !7323)
!7463 = !DILocation(line: 5647, column: 2, scope: !7323)
!7464 = !DILocation(line: 5601, column: 29, scope: !7316)
!7465 = !DILocation(line: 5601, column: 40, scope: !7316)
!7466 = !DILocation(line: 5601, column: 2, scope: !7316)
!7467 = distinct !{!7467, !7320, !7468}
!7468 = !DILocation(line: 5647, column: 2, scope: !7313)
!7469 = !DILocation(line: 5649, column: 2, scope: !7126)
!7470 = !DILocation(line: 5650, column: 1, scope: !7126)
!7471 = distinct !DISubprogram(name: "calculate_speedvectors", scope: !3, file: !3, line: 5479, type: !7472, scopeLine: 5480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{null, !6, !3342, !44, !21}
!7474 = !DILocalVariable(name: "re", arg: 1, scope: !7471, file: !3, line: 5479, type: !6)
!7475 = !DILocation(line: 5479, column: 44, scope: !7471)
!7476 = !DILocalVariable(name: "obi", arg: 2, scope: !7471, file: !3, line: 5479, type: !3342)
!7477 = !DILocation(line: 5479, column: 67, scope: !7471)
!7478 = !DILocalVariable(name: "vectors", arg: 3, scope: !7471, file: !3, line: 5479, type: !44)
!7479 = !DILocation(line: 5479, column: 79, scope: !7471)
!7480 = !DILocalVariable(name: "step", arg: 4, scope: !7471, file: !3, line: 5479, type: !21)
!7481 = !DILocation(line: 5479, column: 92, scope: !7471)
!7482 = !DILocalVariable(name: "obr", scope: !7471, file: !3, line: 5481, type: !3063)
!7483 = !DILocation(line: 5481, column: 13, scope: !7471)
!7484 = !DILocation(line: 5481, column: 18, scope: !7471)
!7485 = !DILocation(line: 5481, column: 23, scope: !7471)
!7486 = !DILocalVariable(name: "ver", scope: !7471, file: !3, line: 5482, type: !4179)
!7487 = !DILocation(line: 5482, column: 11, scope: !7471)
!7488 = !DILocalVariable(name: "strand", scope: !7471, file: !3, line: 5483, type: !7489)
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 64)
!7490 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandRen", file: !10, line: 481, baseType: !3151)
!7491 = !DILocation(line: 5483, column: 13, scope: !7471)
!7492 = !DILocalVariable(name: "strandbuf", scope: !7471, file: !3, line: 5484, type: !3161)
!7493 = !DILocation(line: 5484, column: 16, scope: !7471)
!7494 = !DILocalVariable(name: "mesh", scope: !7471, file: !3, line: 5485, type: !6335)
!7495 = !DILocation(line: 5485, column: 17, scope: !7471)
!7496 = !DILocalVariable(name: "speed", scope: !7471, file: !3, line: 5486, type: !44)
!7497 = !DILocation(line: 5486, column: 9, scope: !7471)
!7498 = !DILocalVariable(name: "winspeed", scope: !7471, file: !3, line: 5486, type: !2482)
!7499 = !DILocation(line: 5486, column: 18, scope: !7471)
!7500 = !DILocalVariable(name: "ho", scope: !7471, file: !3, line: 5486, type: !270)
!7501 = !DILocation(line: 5486, column: 37, scope: !7471)
!7502 = !DILocalVariable(name: "winmat", scope: !7471, file: !3, line: 5486, type: !462)
!7503 = !DILocation(line: 5486, column: 44, scope: !7471)
!7504 = !DILocalVariable(name: "co1", scope: !7471, file: !3, line: 5487, type: !44)
!7505 = !DILocation(line: 5487, column: 9, scope: !7471)
!7506 = !DILocalVariable(name: "co2", scope: !7471, file: !3, line: 5487, type: !44)
!7507 = !DILocation(line: 5487, column: 15, scope: !7471)
!7508 = !DILocalVariable(name: "co3", scope: !7471, file: !3, line: 5487, type: !44)
!7509 = !DILocation(line: 5487, column: 21, scope: !7471)
!7510 = !DILocalVariable(name: "co4", scope: !7471, file: !3, line: 5487, type: !44)
!7511 = !DILocation(line: 5487, column: 27, scope: !7471)
!7512 = !DILocalVariable(name: "w", scope: !7471, file: !3, line: 5487, type: !270)
!7513 = !DILocation(line: 5487, column: 32, scope: !7471)
!7514 = !DILocalVariable(name: "winsq", scope: !7471, file: !3, line: 5488, type: !45)
!7515 = !DILocation(line: 5488, column: 8, scope: !7471)
!7516 = !DILocation(line: 5488, column: 23, scope: !7471)
!7517 = !DILocation(line: 5488, column: 27, scope: !7471)
!7518 = !DILocation(line: 5488, column: 16, scope: !7471)
!7519 = !DILocation(line: 5488, column: 41, scope: !7471)
!7520 = !DILocation(line: 5488, column: 45, scope: !7471)
!7521 = !DILocation(line: 5488, column: 34, scope: !7471)
!7522 = !DILocation(line: 5488, column: 32, scope: !7471)
!7523 = !DILocalVariable(name: "winroot", scope: !7471, file: !3, line: 5488, type: !45)
!7524 = !DILocation(line: 5488, column: 51, scope: !7471)
!7525 = !DILocation(line: 5488, column: 67, scope: !7471)
!7526 = !DILocation(line: 5488, column: 61, scope: !7471)
!7527 = !DILocalVariable(name: "a", scope: !7471, file: !3, line: 5489, type: !21)
!7528 = !DILocation(line: 5489, column: 6, scope: !7471)
!7529 = !DILocalVariable(name: "face", scope: !7471, file: !3, line: 5489, type: !42)
!7530 = !DILocation(line: 5489, column: 10, scope: !7471)
!7531 = !DILocalVariable(name: "index", scope: !7471, file: !3, line: 5489, type: !42)
!7532 = !DILocation(line: 5489, column: 17, scope: !7471)
!7533 = !DILocation(line: 5491, column: 6, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 5491, column: 6)
!7535 = !DILocation(line: 5491, column: 11, scope: !7534)
!7536 = !DILocation(line: 5491, column: 16, scope: !7534)
!7537 = !DILocation(line: 5491, column: 6, scope: !7471)
!7538 = !DILocation(line: 5492, column: 15, scope: !7534)
!7539 = !DILocation(line: 5492, column: 23, scope: !7534)
!7540 = !DILocation(line: 5492, column: 27, scope: !7534)
!7541 = !DILocation(line: 5492, column: 35, scope: !7534)
!7542 = !DILocation(line: 5492, column: 40, scope: !7534)
!7543 = !DILocation(line: 5492, column: 3, scope: !7534)
!7544 = !DILocation(line: 5494, column: 14, scope: !7534)
!7545 = !DILocation(line: 5494, column: 22, scope: !7534)
!7546 = !DILocation(line: 5494, column: 26, scope: !7534)
!7547 = !DILocation(line: 5494, column: 3, scope: !7534)
!7548 = !DILocation(line: 5496, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 5496, column: 6)
!7550 = !DILocation(line: 5496, column: 11, scope: !7549)
!7551 = !DILocation(line: 5496, column: 6, scope: !7471)
!7552 = !DILocation(line: 5497, column: 9, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 5497, column: 3)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 5496, column: 22)
!7555 = !DILocation(line: 5497, column: 8, scope: !7553)
!7556 = !DILocation(line: 5497, column: 13, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 5497, column: 3)
!7558 = !DILocation(line: 5497, column: 15, scope: !7557)
!7559 = !DILocation(line: 5497, column: 20, scope: !7557)
!7560 = !DILocation(line: 5497, column: 14, scope: !7557)
!7561 = !DILocation(line: 5497, column: 3, scope: !7553)
!7562 = !DILocation(line: 5498, column: 9, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7564, file: !3, line: 5498, column: 8)
!7564 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 5497, column: 46)
!7565 = !DILocation(line: 5498, column: 11, scope: !7563)
!7566 = !DILocation(line: 5498, column: 17, scope: !7563)
!7567 = !DILocation(line: 5498, column: 8, scope: !7564)
!7568 = !DILocation(line: 5498, column: 27, scope: !7563)
!7569 = !DILocation(line: 5498, column: 32, scope: !7563)
!7570 = !DILocation(line: 5498, column: 42, scope: !7563)
!7571 = !DILocation(line: 5498, column: 43, scope: !7563)
!7572 = !DILocation(line: 5498, column: 48, scope: !7563)
!7573 = !DILocation(line: 5498, column: 25, scope: !7563)
!7574 = !DILocation(line: 5498, column: 22, scope: !7563)
!7575 = !DILocation(line: 5499, column: 12, scope: !7563)
!7576 = !DILocation(line: 5501, column: 35, scope: !7564)
!7577 = !DILocation(line: 5501, column: 40, scope: !7564)
!7578 = !DILocation(line: 5501, column: 11, scope: !7564)
!7579 = !DILocation(line: 5501, column: 9, scope: !7564)
!7580 = !DILocation(line: 5502, column: 16, scope: !7564)
!7581 = !DILocation(line: 5502, column: 21, scope: !7564)
!7582 = !DILocation(line: 5502, column: 25, scope: !7564)
!7583 = !DILocation(line: 5502, column: 33, scope: !7564)
!7584 = !DILocation(line: 5502, column: 4, scope: !7564)
!7585 = !DILocation(line: 5503, column: 26, scope: !7564)
!7586 = !DILocation(line: 5503, column: 35, scope: !7564)
!7587 = !DILocation(line: 5503, column: 41, scope: !7564)
!7588 = !DILocation(line: 5503, column: 48, scope: !7564)
!7589 = !DILocation(line: 5503, column: 57, scope: !7564)
!7590 = !DILocation(line: 5503, column: 62, scope: !7564)
!7591 = !DILocation(line: 5503, column: 66, scope: !7564)
!7592 = !DILocation(line: 5503, column: 70, scope: !7564)
!7593 = !DILocation(line: 5503, column: 4, scope: !7564)
!7594 = !DILocation(line: 5504, column: 3, scope: !7564)
!7595 = !DILocation(line: 5497, column: 30, scope: !7557)
!7596 = !DILocation(line: 5497, column: 41, scope: !7557)
!7597 = !DILocation(line: 5497, column: 3, scope: !7557)
!7598 = distinct !{!7598, !7561, !7599}
!7599 = !DILocation(line: 5504, column: 3, scope: !7553)
!7600 = !DILocation(line: 5505, column: 2, scope: !7554)
!7601 = !DILocation(line: 5507, column: 6, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 5507, column: 6)
!7603 = !DILocation(line: 5507, column: 11, scope: !7602)
!7604 = !DILocation(line: 5507, column: 6, scope: !7471)
!7605 = !DILocation(line: 5508, column: 14, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 5507, column: 24)
!7607 = !DILocation(line: 5508, column: 19, scope: !7606)
!7608 = !DILocation(line: 5508, column: 12, scope: !7606)
!7609 = !DILocation(line: 5509, column: 10, scope: !7606)
!7610 = !DILocation(line: 5509, column: 9, scope: !7606)
!7611 = !DILocation(line: 5509, column: 22, scope: !7606)
!7612 = !DILocation(line: 5509, column: 33, scope: !7606)
!7613 = !DILocation(line: 5509, column: 7, scope: !7606)
!7614 = !DILocation(line: 5512, column: 7, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 5512, column: 7)
!7616 = !DILocation(line: 5512, column: 7, scope: !7606)
!7617 = !DILocation(line: 5513, column: 64, scope: !7615)
!7618 = !DILocation(line: 5513, column: 68, scope: !7615)
!7619 = !DILocation(line: 5513, column: 73, scope: !7615)
!7620 = !DILocation(line: 5513, column: 27, scope: !7615)
!7621 = !DILocation(line: 5513, column: 14, scope: !7615)
!7622 = !DILocation(line: 5513, column: 12, scope: !7615)
!7623 = !DILocation(line: 5513, column: 4, scope: !7615)
!7624 = !DILocation(line: 5515, column: 7, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 5515, column: 7)
!7626 = !DILocation(line: 5515, column: 7, scope: !7606)
!7627 = !DILocation(line: 5516, column: 10, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 5516, column: 4)
!7629 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 5515, column: 17)
!7630 = !DILocation(line: 5516, column: 9, scope: !7628)
!7631 = !DILocation(line: 5516, column: 14, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 5516, column: 4)
!7633 = !DILocation(line: 5516, column: 16, scope: !7632)
!7634 = !DILocation(line: 5516, column: 21, scope: !7632)
!7635 = !DILocation(line: 5516, column: 15, scope: !7632)
!7636 = !DILocation(line: 5516, column: 4, scope: !7628)
!7637 = !DILocation(line: 5517, column: 10, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 5517, column: 9)
!7639 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 5516, column: 49)
!7640 = !DILocation(line: 5517, column: 12, scope: !7638)
!7641 = !DILocation(line: 5517, column: 18, scope: !7638)
!7642 = !DILocation(line: 5517, column: 9, scope: !7639)
!7643 = !DILocation(line: 5517, column: 31, scope: !7638)
!7644 = !DILocation(line: 5517, column: 36, scope: !7638)
!7645 = !DILocation(line: 5517, column: 48, scope: !7638)
!7646 = !DILocation(line: 5517, column: 49, scope: !7638)
!7647 = !DILocation(line: 5517, column: 54, scope: !7638)
!7648 = !DILocation(line: 5517, column: 29, scope: !7638)
!7649 = !DILocation(line: 5517, column: 23, scope: !7638)
!7650 = !DILocation(line: 5518, column: 16, scope: !7638)
!7651 = !DILocation(line: 5520, column: 34, scope: !7639)
!7652 = !DILocation(line: 5520, column: 39, scope: !7639)
!7653 = !DILocation(line: 5520, column: 12, scope: !7639)
!7654 = !DILocation(line: 5520, column: 10, scope: !7639)
!7655 = !DILocation(line: 5521, column: 9, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 5521, column: 9)
!7657 = !DILocation(line: 5521, column: 15, scope: !7656)
!7658 = !DILocation(line: 5521, column: 19, scope: !7656)
!7659 = !DILocation(line: 5521, column: 18, scope: !7656)
!7660 = !DILocation(line: 5521, column: 27, scope: !7656)
!7661 = !DILocation(line: 5521, column: 33, scope: !7656)
!7662 = !DILocation(line: 5521, column: 25, scope: !7656)
!7663 = !DILocation(line: 5521, column: 9, scope: !7639)
!7664 = !DILocation(line: 5522, column: 39, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7656, file: !3, line: 5521, column: 42)
!7666 = !DILocation(line: 5522, column: 44, scope: !7665)
!7667 = !DILocation(line: 5522, column: 13, scope: !7665)
!7668 = !DILocation(line: 5522, column: 11, scope: !7665)
!7669 = !DILocation(line: 5525, column: 12, scope: !7665)
!7670 = !DILocation(line: 5525, column: 18, scope: !7665)
!7671 = !DILocation(line: 5525, column: 24, scope: !7665)
!7672 = !DILocation(line: 5525, column: 23, scope: !7665)
!7673 = !DILocation(line: 5525, column: 10, scope: !7665)
!7674 = !DILocation(line: 5527, column: 11, scope: !7665)
!7675 = !DILocation(line: 5527, column: 17, scope: !7665)
!7676 = !DILocation(line: 5527, column: 20, scope: !7665)
!7677 = !DILocation(line: 5527, column: 9, scope: !7665)
!7678 = !DILocation(line: 5528, column: 11, scope: !7665)
!7679 = !DILocation(line: 5528, column: 17, scope: !7665)
!7680 = !DILocation(line: 5528, column: 20, scope: !7665)
!7681 = !DILocation(line: 5528, column: 9, scope: !7665)
!7682 = !DILocation(line: 5529, column: 11, scope: !7665)
!7683 = !DILocation(line: 5529, column: 17, scope: !7665)
!7684 = !DILocation(line: 5529, column: 20, scope: !7665)
!7685 = !DILocation(line: 5529, column: 9, scope: !7665)
!7686 = !DILocation(line: 5530, column: 12, scope: !7665)
!7687 = !DILocation(line: 5530, column: 11, scope: !7665)
!7688 = !DILocation(line: 5530, column: 22, scope: !7665)
!7689 = !DILocation(line: 5530, column: 28, scope: !7665)
!7690 = !DILocation(line: 5530, column: 31, scope: !7665)
!7691 = !DILocation(line: 5530, column: 9, scope: !7665)
!7692 = !DILocation(line: 5532, column: 29, scope: !7665)
!7693 = !DILocation(line: 5532, column: 32, scope: !7665)
!7694 = !DILocation(line: 5532, column: 37, scope: !7665)
!7695 = !DILocation(line: 5532, column: 42, scope: !7665)
!7696 = !DILocation(line: 5532, column: 47, scope: !7665)
!7697 = !DILocation(line: 5532, column: 52, scope: !7665)
!7698 = !DILocation(line: 5532, column: 60, scope: !7665)
!7699 = !DILocation(line: 5532, column: 66, scope: !7665)
!7700 = !DILocation(line: 5532, column: 6, scope: !7665)
!7701 = !DILocation(line: 5534, column: 14, scope: !7665)
!7702 = !DILocation(line: 5534, column: 6, scope: !7665)
!7703 = !DILocation(line: 5535, column: 19, scope: !7665)
!7704 = !DILocation(line: 5535, column: 26, scope: !7665)
!7705 = !DILocation(line: 5535, column: 35, scope: !7665)
!7706 = !DILocation(line: 5535, column: 45, scope: !7665)
!7707 = !DILocation(line: 5535, column: 6, scope: !7665)
!7708 = !DILocation(line: 5536, column: 19, scope: !7665)
!7709 = !DILocation(line: 5536, column: 26, scope: !7665)
!7710 = !DILocation(line: 5536, column: 35, scope: !7665)
!7711 = !DILocation(line: 5536, column: 45, scope: !7665)
!7712 = !DILocation(line: 5536, column: 6, scope: !7665)
!7713 = !DILocation(line: 5537, column: 19, scope: !7665)
!7714 = !DILocation(line: 5537, column: 26, scope: !7665)
!7715 = !DILocation(line: 5537, column: 35, scope: !7665)
!7716 = !DILocation(line: 5537, column: 45, scope: !7665)
!7717 = !DILocation(line: 5537, column: 6, scope: !7665)
!7718 = !DILocation(line: 5538, column: 10, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 5538, column: 10)
!7720 = !DILocation(line: 5538, column: 10, scope: !7665)
!7721 = !DILocation(line: 5539, column: 20, scope: !7719)
!7722 = !DILocation(line: 5539, column: 27, scope: !7719)
!7723 = !DILocation(line: 5539, column: 36, scope: !7719)
!7724 = !DILocation(line: 5539, column: 46, scope: !7719)
!7725 = !DILocation(line: 5539, column: 7, scope: !7719)
!7726 = !DILocation(line: 5540, column: 5, scope: !7665)
!7727 = !DILocation(line: 5541, column: 4, scope: !7639)
!7728 = !DILocation(line: 5516, column: 33, scope: !7632)
!7729 = !DILocation(line: 5516, column: 44, scope: !7632)
!7730 = !DILocation(line: 5516, column: 4, scope: !7632)
!7731 = distinct !{!7731, !7636, !7732}
!7732 = !DILocation(line: 5541, column: 4, scope: !7628)
!7733 = !DILocation(line: 5543, column: 4, scope: !7629)
!7734 = !DILocation(line: 5543, column: 14, scope: !7629)
!7735 = !DILocation(line: 5544, column: 3, scope: !7629)
!7736 = !DILocation(line: 5545, column: 2, scope: !7606)
!7737 = !DILocation(line: 5546, column: 1, scope: !7471)
!7738 = distinct !DISubprogram(name: "free_dbase_object_vectors", scope: !3, file: !3, line: 5690, type: !7739, scopeLine: 5691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{null, !2565}
!7741 = !DILocalVariable(name: "lb", arg: 1, scope: !7738, file: !3, line: 5690, type: !2565)
!7742 = !DILocation(line: 5690, column: 49, scope: !7738)
!7743 = !DILocalVariable(name: "obi", scope: !7738, file: !3, line: 5692, type: !3342)
!7744 = !DILocation(line: 5692, column: 21, scope: !7738)
!7745 = !DILocation(line: 5694, column: 12, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 5694, column: 2)
!7747 = !DILocation(line: 5694, column: 16, scope: !7746)
!7748 = !DILocation(line: 5694, column: 10, scope: !7746)
!7749 = !DILocation(line: 5694, column: 7, scope: !7746)
!7750 = !DILocation(line: 5694, column: 23, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7746, file: !3, line: 5694, column: 2)
!7752 = !DILocation(line: 5694, column: 2, scope: !7746)
!7753 = !DILocation(line: 5695, column: 7, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7751, file: !3, line: 5695, column: 7)
!7755 = !DILocation(line: 5695, column: 12, scope: !7754)
!7756 = !DILocation(line: 5695, column: 7, scope: !7751)
!7757 = !DILocation(line: 5696, column: 4, scope: !7754)
!7758 = !DILocation(line: 5696, column: 14, scope: !7754)
!7759 = !DILocation(line: 5696, column: 19, scope: !7754)
!7760 = !DILocation(line: 5694, column: 33, scope: !7751)
!7761 = !DILocation(line: 5694, column: 38, scope: !7751)
!7762 = !DILocation(line: 5694, column: 31, scope: !7751)
!7763 = !DILocation(line: 5694, column: 2, scope: !7751)
!7764 = distinct !{!7764, !7752, !7765}
!7765 = !DILocation(line: 5696, column: 26, scope: !7746)
!7766 = !DILocation(line: 5697, column: 16, scope: !7738)
!7767 = !DILocation(line: 5697, column: 2, scope: !7738)
!7768 = !DILocation(line: 5698, column: 1, scope: !7738)
!7769 = distinct !DISubprogram(name: "RE_Database_Baking", scope: !3, file: !3, line: 5839, type: !7770, scopeLine: 5840, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{null, !6, !4917, !2982, !79, !7772, !3236}
!7772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !21)
!7773 = !DILocalVariable(name: "re", arg: 1, scope: !7769, file: !3, line: 5839, type: !6)
!7774 = !DILocation(line: 5839, column: 33, scope: !7769)
!7775 = !DILocalVariable(name: "bmain", arg: 2, scope: !7769, file: !3, line: 5839, type: !4917)
!7776 = !DILocation(line: 5839, column: 43, scope: !7769)
!7777 = !DILocalVariable(name: "scene", arg: 3, scope: !7769, file: !3, line: 5839, type: !2982)
!7778 = !DILocation(line: 5839, column: 57, scope: !7769)
!7779 = !DILocalVariable(name: "lay", arg: 4, scope: !7769, file: !3, line: 5839, type: !79)
!7780 = !DILocation(line: 5839, column: 77, scope: !7769)
!7781 = !DILocalVariable(name: "type", arg: 5, scope: !7769, file: !3, line: 5839, type: !7772)
!7782 = !DILocation(line: 5839, column: 92, scope: !7769)
!7783 = !DILocalVariable(name: "actob", arg: 6, scope: !7769, file: !3, line: 5839, type: !3236)
!7784 = !DILocation(line: 5839, column: 106, scope: !7769)
!7785 = !DILocalVariable(name: "camera", scope: !7769, file: !3, line: 5841, type: !3236)
!7786 = !DILocation(line: 5841, column: 10, scope: !7769)
!7787 = !DILocalVariable(name: "mat", scope: !7769, file: !3, line: 5842, type: !462)
!7788 = !DILocation(line: 5842, column: 8, scope: !7769)
!7789 = !DILocalVariable(name: "amb", scope: !7769, file: !3, line: 5843, type: !188)
!7790 = !DILocation(line: 5843, column: 8, scope: !7769)
!7791 = !DILocalVariable(name: "onlyselected", scope: !7769, file: !3, line: 5844, type: !2419)
!7792 = !DILocation(line: 5844, column: 14, scope: !7769)
!7793 = !DILocation(line: 5844, column: 29, scope: !7769)
!7794 = !DILocation(line: 5844, column: 28, scope: !7769)
!7795 = !DILocalVariable(name: "nolamps", scope: !7769, file: !3, line: 5845, type: !2419)
!7796 = !DILocation(line: 5845, column: 14, scope: !7769)
!7797 = !DILocation(line: 5845, column: 23, scope: !7769)
!7798 = !DILocation(line: 5847, column: 12, scope: !7769)
!7799 = !DILocation(line: 5847, column: 2, scope: !7769)
!7800 = !DILocation(line: 5847, column: 6, scope: !7769)
!7801 = !DILocation(line: 5847, column: 10, scope: !7769)
!7802 = !DILocation(line: 5848, column: 13, scope: !7769)
!7803 = !DILocation(line: 5848, column: 2, scope: !7769)
!7804 = !DILocation(line: 5848, column: 6, scope: !7769)
!7805 = !DILocation(line: 5848, column: 11, scope: !7769)
!7806 = !DILocation(line: 5849, column: 11, scope: !7769)
!7807 = !DILocation(line: 5849, column: 2, scope: !7769)
!7808 = !DILocation(line: 5849, column: 6, scope: !7769)
!7809 = !DILocation(line: 5849, column: 9, scope: !7769)
!7810 = !DILocation(line: 5852, column: 17, scope: !7769)
!7811 = !DILocation(line: 5852, column: 21, scope: !7769)
!7812 = !DILocation(line: 5852, column: 23, scope: !7769)
!7813 = !DILocation(line: 5852, column: 2, scope: !7769)
!7814 = !DILocation(line: 5853, column: 2, scope: !7769)
!7815 = !DILocation(line: 5853, column: 6, scope: !7769)
!7816 = !DILocation(line: 5853, column: 10, scope: !7769)
!7817 = !DILocation(line: 5853, column: 17, scope: !7769)
!7818 = !DILocation(line: 5854, column: 21, scope: !7769)
!7819 = !DILocation(line: 5854, column: 25, scope: !7769)
!7820 = !DILocation(line: 5854, column: 27, scope: !7769)
!7821 = !DILocation(line: 5854, column: 36, scope: !7769)
!7822 = !DILocation(line: 5854, column: 43, scope: !7769)
!7823 = !DILocation(line: 5854, column: 45, scope: !7769)
!7824 = !DILocation(line: 5854, column: 2, scope: !7769)
!7825 = !DILocation(line: 5856, column: 22, scope: !7769)
!7826 = !DILocation(line: 5856, column: 2, scope: !7769)
!7827 = !DILocation(line: 5858, column: 2, scope: !7769)
!7828 = !DILocation(line: 5858, column: 6, scope: !7769)
!7829 = !DILocation(line: 5858, column: 11, scope: !7769)
!7830 = !DILocation(line: 5859, column: 17, scope: !7769)
!7831 = !DILocation(line: 5859, column: 2, scope: !7769)
!7832 = !DILocation(line: 5859, column: 6, scope: !7769)
!7833 = !DILocation(line: 5859, column: 15, scope: !7769)
!7834 = !DILocation(line: 5860, column: 6, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5860, column: 6)
!7836 = !DILocation(line: 5860, column: 6, scope: !7769)
!7837 = !DILocation(line: 5861, column: 3, scope: !7835)
!7838 = !DILocation(line: 5861, column: 7, scope: !7835)
!7839 = !DILocation(line: 5861, column: 12, scope: !7835)
!7840 = !DILocation(line: 5863, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5863, column: 6)
!7842 = !DILocation(line: 5863, column: 10, scope: !7841)
!7843 = !DILocation(line: 5863, column: 28, scope: !7841)
!7844 = !DILocation(line: 5863, column: 31, scope: !7841)
!7845 = !DILocation(line: 5863, column: 35, scope: !7841)
!7846 = !DILocation(line: 5863, column: 37, scope: !7841)
!7847 = !DILocation(line: 5863, column: 54, scope: !7841)
!7848 = !DILocation(line: 5863, column: 6, scope: !7769)
!7849 = !DILocation(line: 5864, column: 3, scope: !7841)
!7850 = !DILocation(line: 5864, column: 7, scope: !7841)
!7851 = !DILocation(line: 5864, column: 12, scope: !7841)
!7852 = !DILocation(line: 5866, column: 6, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5866, column: 6)
!7854 = !DILocation(line: 5866, column: 10, scope: !7853)
!7855 = !DILocation(line: 5866, column: 6, scope: !7769)
!7856 = !DILocation(line: 5867, column: 3, scope: !7853)
!7857 = !DILocation(line: 5867, column: 7, scope: !7853)
!7858 = !DILocation(line: 5867, column: 12, scope: !7853)
!7859 = !DILocation(line: 5869, column: 7, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5869, column: 6)
!7861 = !DILocation(line: 5869, column: 13, scope: !7860)
!7862 = !DILocation(line: 5869, column: 16, scope: !7860)
!7863 = !DILocation(line: 5869, column: 6, scope: !7769)
!7864 = !DILocation(line: 5870, column: 3, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 5869, column: 142)
!7866 = !DILocation(line: 5870, column: 7, scope: !7865)
!7867 = !DILocation(line: 5870, column: 9, scope: !7865)
!7868 = !DILocation(line: 5870, column: 14, scope: !7865)
!7869 = !DILocation(line: 5871, column: 3, scope: !7865)
!7870 = !DILocation(line: 5871, column: 7, scope: !7865)
!7871 = !DILocation(line: 5871, column: 9, scope: !7865)
!7872 = !DILocation(line: 5871, column: 14, scope: !7865)
!7873 = !DILocation(line: 5872, column: 2, scope: !7865)
!7874 = !DILocation(line: 5874, column: 7, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5874, column: 6)
!7876 = !DILocation(line: 5874, column: 13, scope: !7875)
!7877 = !DILocation(line: 5874, column: 17, scope: !7875)
!7878 = !DILocation(line: 5874, column: 21, scope: !7875)
!7879 = !DILocation(line: 5874, column: 6, scope: !7769)
!7880 = !DILocation(line: 5875, column: 3, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 5874, column: 40)
!7882 = !DILocation(line: 5875, column: 7, scope: !7881)
!7883 = !DILocation(line: 5875, column: 9, scope: !7881)
!7884 = !DILocation(line: 5875, column: 14, scope: !7881)
!7885 = !DILocation(line: 5876, column: 2, scope: !7881)
!7886 = !DILocation(line: 5879, column: 17, scope: !7769)
!7887 = !DILocation(line: 5879, column: 2, scope: !7769)
!7888 = !DILocation(line: 5879, column: 6, scope: !7769)
!7889 = !DILocation(line: 5879, column: 15, scope: !7769)
!7890 = !DILocation(line: 5881, column: 52, scope: !7769)
!7891 = !DILocation(line: 5881, column: 56, scope: !7769)
!7892 = !DILocation(line: 5881, column: 63, scope: !7769)
!7893 = !DILocation(line: 5881, column: 40, scope: !7769)
!7894 = !DILocation(line: 5881, column: 44, scope: !7769)
!7895 = !DILocation(line: 5881, column: 51, scope: !7769)
!7896 = !DILocation(line: 5881, column: 26, scope: !7769)
!7897 = !DILocation(line: 5881, column: 30, scope: !7769)
!7898 = !DILocation(line: 5881, column: 39, scope: !7769)
!7899 = !DILocation(line: 5881, column: 14, scope: !7769)
!7900 = !DILocation(line: 5881, column: 18, scope: !7769)
!7901 = !DILocation(line: 5881, column: 25, scope: !7769)
!7902 = !DILocation(line: 5881, column: 2, scope: !7769)
!7903 = !DILocation(line: 5881, column: 6, scope: !7769)
!7904 = !DILocation(line: 5881, column: 13, scope: !7769)
!7905 = !DILocation(line: 5882, column: 20, scope: !7769)
!7906 = !DILocation(line: 5882, column: 24, scope: !7769)
!7907 = !DILocation(line: 5882, column: 31, scope: !7769)
!7908 = !DILocation(line: 5882, column: 35, scope: !7769)
!7909 = !DILocation(line: 5882, column: 2, scope: !7769)
!7910 = !DILocation(line: 5882, column: 6, scope: !7769)
!7911 = !DILocation(line: 5882, column: 13, scope: !7769)
!7912 = !DILocation(line: 5882, column: 18, scope: !7769)
!7913 = !DILocation(line: 5883, column: 21, scope: !7769)
!7914 = !DILocation(line: 5883, column: 25, scope: !7769)
!7915 = !DILocation(line: 5883, column: 33, scope: !7769)
!7916 = !DILocation(line: 5883, column: 37, scope: !7769)
!7917 = !DILocation(line: 5883, column: 2, scope: !7769)
!7918 = !DILocation(line: 5883, column: 6, scope: !7769)
!7919 = !DILocation(line: 5883, column: 14, scope: !7769)
!7920 = !DILocation(line: 5883, column: 19, scope: !7769)
!7921 = !DILocation(line: 5886, column: 6, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5886, column: 6)
!7923 = !DILocation(line: 5886, column: 10, scope: !7922)
!7924 = !DILocation(line: 5886, column: 14, scope: !7922)
!7925 = !DILocation(line: 5886, column: 6, scope: !7769)
!7926 = !DILocation(line: 5887, column: 7, scope: !7922)
!7927 = !DILocation(line: 5887, column: 3, scope: !7922)
!7928 = !DILocation(line: 5889, column: 23, scope: !7769)
!7929 = !DILocation(line: 5889, column: 10, scope: !7769)
!7930 = !DILocation(line: 5889, column: 8, scope: !7769)
!7931 = !DILocation(line: 5892, column: 6, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5892, column: 6)
!7933 = !DILocation(line: 5892, column: 6, scope: !7769)
!7934 = !DILocation(line: 5893, column: 19, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 5892, column: 14)
!7936 = !DILocation(line: 5893, column: 24, scope: !7935)
!7937 = !DILocation(line: 5893, column: 32, scope: !7935)
!7938 = !DILocation(line: 5893, column: 3, scope: !7935)
!7939 = !DILocation(line: 5894, column: 13, scope: !7935)
!7940 = !DILocation(line: 5894, column: 3, scope: !7935)
!7941 = !DILocation(line: 5895, column: 14, scope: !7935)
!7942 = !DILocation(line: 5895, column: 18, scope: !7935)
!7943 = !DILocation(line: 5895, column: 3, scope: !7935)
!7944 = !DILocation(line: 5896, column: 2, scope: !7935)
!7945 = !DILocation(line: 5898, column: 11, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 5897, column: 7)
!7947 = !DILocation(line: 5898, column: 3, scope: !7946)
!7948 = !DILocation(line: 5899, column: 14, scope: !7946)
!7949 = !DILocation(line: 5899, column: 18, scope: !7946)
!7950 = !DILocation(line: 5899, column: 3, scope: !7946)
!7951 = !DILocation(line: 5901, column: 13, scope: !7769)
!7952 = !DILocation(line: 5901, column: 17, scope: !7769)
!7953 = !DILocation(line: 5901, column: 23, scope: !7769)
!7954 = !DILocation(line: 5901, column: 27, scope: !7769)
!7955 = !DILocation(line: 5901, column: 2, scope: !7769)
!7956 = !DILocation(line: 5906, column: 10, scope: !7769)
!7957 = !DILocation(line: 5906, column: 14, scope: !7769)
!7958 = !DILocation(line: 5906, column: 2, scope: !7769)
!7959 = !DILocation(line: 5907, column: 12, scope: !7769)
!7960 = !DILocation(line: 5907, column: 16, scope: !7769)
!7961 = !DILocation(line: 5907, column: 20, scope: !7769)
!7962 = !DILocation(line: 5907, column: 2, scope: !7769)
!7963 = !DILocation(line: 5907, column: 6, scope: !7769)
!7964 = !DILocation(line: 5907, column: 10, scope: !7769)
!7965 = !DILocation(line: 5910, column: 20, scope: !7769)
!7966 = !DILocation(line: 5910, column: 2, scope: !7769)
!7967 = !DILocation(line: 5911, column: 6, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5911, column: 6)
!7969 = !DILocation(line: 5911, column: 10, scope: !7968)
!7970 = !DILocation(line: 5911, column: 12, scope: !7968)
!7971 = !DILocation(line: 5911, column: 17, scope: !7968)
!7972 = !DILocation(line: 5911, column: 6, scope: !7769)
!7973 = !DILocation(line: 5912, column: 26, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7968, file: !3, line: 5911, column: 31)
!7975 = !DILocation(line: 5912, column: 3, scope: !7974)
!7976 = !DILocation(line: 5914, column: 7, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7974, file: !3, line: 5914, column: 7)
!7978 = !DILocation(line: 5914, column: 11, scope: !7977)
!7979 = !DILocation(line: 5914, column: 16, scope: !7977)
!7980 = !DILocation(line: 5914, column: 21, scope: !7977)
!7981 = !DILocation(line: 5914, column: 7, scope: !7974)
!7982 = !DILocation(line: 5915, column: 8, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 5915, column: 8)
!7984 = !DILocation(line: 5915, column: 12, scope: !7983)
!7985 = !DILocation(line: 5915, column: 17, scope: !7983)
!7986 = !DILocation(line: 5915, column: 32, scope: !7983)
!7987 = !DILocation(line: 5915, column: 8, scope: !7977)
!7988 = !DILocation(line: 5916, column: 21, scope: !7983)
!7989 = !DILocation(line: 5916, column: 25, scope: !7983)
!7990 = !DILocation(line: 5916, column: 5, scope: !7983)
!7991 = !DILocation(line: 5915, column: 35, scope: !7983)
!7992 = !DILocation(line: 5917, column: 2, scope: !7974)
!7993 = !DILocation(line: 5920, column: 23, scope: !7769)
!7994 = !DILocation(line: 5920, column: 2, scope: !7769)
!7995 = !DILocation(line: 5922, column: 13, scope: !7769)
!7996 = !DILocation(line: 5922, column: 19, scope: !7769)
!7997 = !DILocation(line: 5922, column: 23, scope: !7769)
!7998 = !DILocation(line: 5922, column: 28, scope: !7769)
!7999 = !DILocation(line: 5922, column: 2, scope: !7769)
!8000 = !DILocation(line: 5923, column: 24, scope: !7769)
!8001 = !DILocation(line: 5923, column: 28, scope: !7769)
!8002 = !DILocation(line: 5923, column: 34, scope: !7769)
!8003 = !DILocation(line: 5923, column: 38, scope: !7769)
!8004 = !DILocation(line: 5923, column: 40, scope: !7769)
!8005 = !DILocation(line: 5923, column: 46, scope: !7769)
!8006 = !DILocation(line: 5923, column: 2, scope: !7769)
!8007 = !DILocation(line: 5925, column: 2, scope: !7769)
!8008 = !DILocation(line: 5928, column: 24, scope: !7769)
!8009 = !DILocation(line: 5928, column: 28, scope: !7769)
!8010 = !DILocation(line: 5928, column: 33, scope: !7769)
!8011 = !DILocation(line: 5928, column: 42, scope: !7769)
!8012 = !DILocation(line: 5928, column: 56, scope: !7769)
!8013 = !DILocation(line: 5928, column: 2, scope: !7769)
!8014 = !DILocation(line: 5930, column: 27, scope: !7769)
!8015 = !DILocation(line: 5930, column: 2, scope: !7769)
!8016 = !DILocation(line: 5933, column: 6, scope: !8017)
!8017 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5933, column: 6)
!8018 = !DILocation(line: 5933, column: 10, scope: !8017)
!8019 = !DILocation(line: 5933, column: 6, scope: !7769)
!8020 = !DILocation(line: 5934, column: 7, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 5934, column: 7)
!8022 = !DILocation(line: 5934, column: 11, scope: !8021)
!8023 = !DILocation(line: 5934, column: 13, scope: !8021)
!8024 = !DILocation(line: 5934, column: 18, scope: !8021)
!8025 = !DILocation(line: 5934, column: 7, scope: !8017)
!8026 = !DILocation(line: 5935, column: 28, scope: !8021)
!8027 = !DILocation(line: 5935, column: 4, scope: !8021)
!8028 = !DILocation(line: 5934, column: 20, scope: !8021)
!8029 = !DILocation(line: 5938, column: 7, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5938, column: 6)
!8031 = !DILocation(line: 5938, column: 11, scope: !8030)
!8032 = !DILocation(line: 5938, column: 22, scope: !8030)
!8033 = !DILocation(line: 5938, column: 26, scope: !8030)
!8034 = !DILocation(line: 5938, column: 6, scope: !7769)
!8035 = !DILocation(line: 5939, column: 7, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 5939, column: 7)
!8037 = !DILocation(line: 5939, column: 11, scope: !8036)
!8038 = !DILocation(line: 5939, column: 13, scope: !8036)
!8039 = !DILocation(line: 5939, column: 18, scope: !8036)
!8040 = !DILocation(line: 5939, column: 7, scope: !8030)
!8041 = !DILocation(line: 5940, column: 16, scope: !8036)
!8042 = !DILocation(line: 5940, column: 4, scope: !8036)
!8043 = !DILocation(line: 5939, column: 20, scope: !8036)
!8044 = !DILocation(line: 5943, column: 7, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5943, column: 6)
!8046 = !DILocation(line: 5943, column: 11, scope: !8045)
!8047 = !DILocation(line: 5943, column: 22, scope: !8045)
!8048 = !DILocation(line: 5943, column: 26, scope: !8045)
!8049 = !DILocation(line: 5943, column: 6, scope: !7769)
!8050 = !DILocation(line: 5944, column: 23, scope: !8045)
!8051 = !DILocation(line: 5944, column: 3, scope: !8045)
!8052 = !DILocation(line: 5947, column: 7, scope: !8053)
!8053 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5947, column: 6)
!8054 = !DILocation(line: 5947, column: 11, scope: !8053)
!8055 = !DILocation(line: 5947, column: 22, scope: !8053)
!8056 = !DILocation(line: 5947, column: 26, scope: !8053)
!8057 = !DILocation(line: 5947, column: 6, scope: !7769)
!8058 = !DILocation(line: 5948, column: 18, scope: !8053)
!8059 = !DILocation(line: 5948, column: 3, scope: !8053)
!8060 = !DILocation(line: 5951, column: 7, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 5951, column: 6)
!8062 = !DILocation(line: 5951, column: 11, scope: !8061)
!8063 = !DILocation(line: 5951, column: 16, scope: !8061)
!8064 = !DILocation(line: 5951, column: 21, scope: !8061)
!8065 = !DILocation(line: 5951, column: 68, scope: !8061)
!8066 = !DILocation(line: 5951, column: 72, scope: !8061)
!8067 = !DILocation(line: 5951, column: 76, scope: !8061)
!8068 = !DILocation(line: 5951, column: 87, scope: !8061)
!8069 = !DILocation(line: 5951, column: 91, scope: !8061)
!8070 = !DILocation(line: 5951, column: 6, scope: !7769)
!8071 = !DILocation(line: 5952, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 5952, column: 7)
!8073 = !DILocation(line: 5952, column: 11, scope: !8072)
!8074 = !DILocation(line: 5952, column: 16, scope: !8072)
!8075 = !DILocation(line: 5952, column: 33, scope: !8072)
!8076 = !DILocation(line: 5952, column: 7, scope: !8061)
!8077 = !DILocation(line: 5953, column: 8, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 5953, column: 8)
!8079 = !DILocation(line: 5953, column: 12, scope: !8078)
!8080 = !DILocation(line: 5953, column: 14, scope: !8078)
!8081 = !DILocation(line: 5953, column: 19, scope: !8078)
!8082 = !DILocation(line: 5953, column: 8, scope: !8072)
!8083 = !DILocation(line: 5954, column: 19, scope: !8078)
!8084 = !DILocation(line: 5954, column: 5, scope: !8078)
!8085 = !DILocation(line: 5953, column: 21, scope: !8078)
!8086 = !DILocation(line: 5952, column: 36, scope: !8072)
!8087 = !DILocation(line: 5956, column: 2, scope: !7769)
!8088 = !DILocation(line: 5956, column: 6, scope: !7769)
!8089 = !DILocation(line: 5956, column: 8, scope: !7769)
!8090 = !DILocation(line: 5956, column: 20, scope: !7769)
!8091 = !DILocation(line: 5957, column: 1, scope: !7769)
!8092 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !4629, file: !4629, line: 788, type: !8093, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8093 = !DISubroutineType(types: !8094)
!8094 = !{!45, !44, !2417}
!8095 = !DILocalVariable(name: "r", arg: 1, scope: !8092, file: !4629, line: 788, type: !44)
!8096 = !DILocation(line: 788, column: 37, scope: !8092)
!8097 = !DILocalVariable(name: "a", arg: 2, scope: !8092, file: !4629, line: 788, type: !2417)
!8098 = !DILocation(line: 788, column: 55, scope: !8092)
!8099 = !DILocalVariable(name: "d", scope: !8092, file: !4629, line: 790, type: !45)
!8100 = !DILocation(line: 790, column: 8, scope: !8092)
!8101 = !DILocation(line: 790, column: 21, scope: !8092)
!8102 = !DILocation(line: 790, column: 24, scope: !8092)
!8103 = !DILocation(line: 790, column: 12, scope: !8092)
!8104 = !DILocation(line: 794, column: 6, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8092, file: !4629, line: 794, column: 6)
!8106 = !DILocation(line: 794, column: 8, scope: !8105)
!8107 = !DILocation(line: 794, column: 6, scope: !8092)
!8108 = !DILocation(line: 795, column: 13, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8105, file: !4629, line: 794, column: 20)
!8110 = !DILocation(line: 795, column: 7, scope: !8109)
!8111 = !DILocation(line: 795, column: 5, scope: !8109)
!8112 = !DILocation(line: 796, column: 15, scope: !8109)
!8113 = !DILocation(line: 796, column: 18, scope: !8109)
!8114 = !DILocation(line: 796, column: 28, scope: !8109)
!8115 = !DILocation(line: 796, column: 26, scope: !8109)
!8116 = !DILocation(line: 796, column: 3, scope: !8109)
!8117 = !DILocation(line: 797, column: 2, scope: !8109)
!8118 = !DILocation(line: 799, column: 11, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8105, file: !4629, line: 798, column: 7)
!8120 = !DILocation(line: 799, column: 3, scope: !8119)
!8121 = !DILocation(line: 800, column: 5, scope: !8119)
!8122 = !DILocation(line: 803, column: 9, scope: !8092)
!8123 = !DILocation(line: 803, column: 2, scope: !8092)
!8124 = distinct !DISubprogram(name: "dot_v3v3", scope: !4629, file: !4629, line: 619, type: !8125, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!45, !2417, !2417}
!8127 = !DILocalVariable(name: "a", arg: 1, scope: !8124, file: !4629, line: 619, type: !2417)
!8128 = !DILocation(line: 619, column: 36, scope: !8124)
!8129 = !DILocalVariable(name: "b", arg: 2, scope: !8124, file: !4629, line: 619, type: !2417)
!8130 = !DILocation(line: 619, column: 54, scope: !8124)
!8131 = !DILocation(line: 621, column: 9, scope: !8124)
!8132 = !DILocation(line: 621, column: 16, scope: !8124)
!8133 = !DILocation(line: 621, column: 14, scope: !8124)
!8134 = !DILocation(line: 621, column: 23, scope: !8124)
!8135 = !DILocation(line: 621, column: 30, scope: !8124)
!8136 = !DILocation(line: 621, column: 28, scope: !8124)
!8137 = !DILocation(line: 621, column: 21, scope: !8124)
!8138 = !DILocation(line: 621, column: 37, scope: !8124)
!8139 = !DILocation(line: 621, column: 44, scope: !8124)
!8140 = !DILocation(line: 621, column: 42, scope: !8124)
!8141 = !DILocation(line: 621, column: 35, scope: !8124)
!8142 = !DILocation(line: 621, column: 2, scope: !8124)
!8143 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !4629, file: !4629, line: 399, type: !8144, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{null, !44, !2417, !45}
!8146 = !DILocalVariable(name: "r", arg: 1, scope: !8143, file: !4629, line: 399, type: !44)
!8147 = !DILocation(line: 399, column: 32, scope: !8143)
!8148 = !DILocalVariable(name: "a", arg: 2, scope: !8143, file: !4629, line: 399, type: !2417)
!8149 = !DILocation(line: 399, column: 50, scope: !8143)
!8150 = !DILocalVariable(name: "f", arg: 3, scope: !8143, file: !4629, line: 399, type: !45)
!8151 = !DILocation(line: 399, column: 62, scope: !8143)
!8152 = !DILocation(line: 401, column: 9, scope: !8143)
!8153 = !DILocation(line: 401, column: 16, scope: !8143)
!8154 = !DILocation(line: 401, column: 14, scope: !8143)
!8155 = !DILocation(line: 401, column: 2, scope: !8143)
!8156 = !DILocation(line: 401, column: 7, scope: !8143)
!8157 = !DILocation(line: 402, column: 9, scope: !8143)
!8158 = !DILocation(line: 402, column: 16, scope: !8143)
!8159 = !DILocation(line: 402, column: 14, scope: !8143)
!8160 = !DILocation(line: 402, column: 2, scope: !8143)
!8161 = !DILocation(line: 402, column: 7, scope: !8143)
!8162 = !DILocation(line: 403, column: 9, scope: !8143)
!8163 = !DILocation(line: 403, column: 16, scope: !8143)
!8164 = !DILocation(line: 403, column: 14, scope: !8143)
!8165 = !DILocation(line: 403, column: 2, scope: !8143)
!8166 = !DILocation(line: 403, column: 7, scope: !8143)
!8167 = !DILocation(line: 404, column: 1, scope: !8143)
!8168 = distinct !DISubprogram(name: "zero_v3", scope: !4629, file: !4629, line: 43, type: !8169, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{null, !44}
!8171 = !DILocalVariable(name: "r", arg: 1, scope: !8168, file: !4629, line: 43, type: !44)
!8172 = !DILocation(line: 43, column: 28, scope: !8168)
!8173 = !DILocation(line: 45, column: 2, scope: !8168)
!8174 = !DILocation(line: 45, column: 7, scope: !8168)
!8175 = !DILocation(line: 46, column: 2, scope: !8168)
!8176 = !DILocation(line: 46, column: 7, scope: !8168)
!8177 = !DILocation(line: 47, column: 2, scope: !8168)
!8178 = !DILocation(line: 47, column: 7, scope: !8168)
!8179 = !DILocation(line: 48, column: 1, scope: !8168)
!8180 = !DILocalVariable(name: "re", arg: 1, scope: !2, file: !3, line: 4512, type: !6)
!8181 = !DILocation(line: 4512, column: 39, scope: !2)
!8182 = !DILocalVariable(name: "obi", arg: 2, scope: !2, file: !3, line: 4512, type: !3342)
!8183 = !DILocation(line: 4512, column: 62, scope: !2)
!8184 = !DILocalVariable(name: "dob", arg: 3, scope: !2, file: !3, line: 4512, type: !3344)
!8185 = !DILocation(line: 4512, column: 80, scope: !2)
!8186 = !DILocalVariable(name: "omat", arg: 4, scope: !2, file: !3, line: 4512, type: !2482)
!8187 = !DILocation(line: 4512, column: 91, scope: !2)
!8188 = !DILocation(line: 4522, column: 7, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !2, file: !3, line: 4522, column: 6)
!8190 = !DILocation(line: 4522, column: 6, scope: !2)
!8191 = !DILocation(line: 4523, column: 9, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 4522, column: 11)
!8193 = !DILocation(line: 4524, column: 13, scope: !8192)
!8194 = !DILocation(line: 4525, column: 3, scope: !8192)
!8195 = !DILocation(line: 4529, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !2, file: !3, line: 4529, column: 6)
!8197 = !DILocation(line: 4529, column: 16, scope: !8196)
!8198 = !DILocation(line: 4529, column: 21, scope: !8196)
!8199 = !DILocation(line: 4529, column: 13, scope: !8196)
!8200 = !DILocation(line: 4529, column: 6, scope: !2)
!8201 = !DILocalVariable(name: "material", scope: !8202, file: !3, line: 4530, type: !8203)
!8202 = distinct !DILexicalBlock(scope: !8196, file: !3, line: 4529, column: 25)
!8203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8204, size: 64)
!8204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!8205 = !DILocation(line: 4530, column: 15, scope: !8202)
!8206 = !DILocalVariable(name: "a", scope: !8202, file: !3, line: 4531, type: !23)
!8207 = !DILocation(line: 4531, column: 9, scope: !8202)
!8208 = !DILocalVariable(name: "totmaterial", scope: !8202, file: !3, line: 4531, type: !2159)
!8209 = !DILocation(line: 4531, column: 13, scope: !8202)
!8210 = !DILocation(line: 4533, column: 11, scope: !8202)
!8211 = !DILocation(line: 4533, column: 16, scope: !8202)
!8212 = !DILocation(line: 4533, column: 9, scope: !8202)
!8213 = !DILocation(line: 4534, column: 13, scope: !8202)
!8214 = !DILocation(line: 4536, column: 29, scope: !8202)
!8215 = !DILocation(line: 4536, column: 34, scope: !8202)
!8216 = !DILocation(line: 4536, column: 16, scope: !8202)
!8217 = !DILocation(line: 4536, column: 14, scope: !8202)
!8218 = !DILocation(line: 4537, column: 26, scope: !8202)
!8219 = !DILocation(line: 4537, column: 31, scope: !8202)
!8220 = !DILocation(line: 4537, column: 13, scope: !8202)
!8221 = !DILocation(line: 4537, column: 11, scope: !8202)
!8222 = !DILocation(line: 4539, column: 7, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 4539, column: 7)
!8224 = !DILocation(line: 4539, column: 19, scope: !8223)
!8225 = !DILocation(line: 4539, column: 22, scope: !8223)
!8226 = !DILocation(line: 4539, column: 7, scope: !8202)
!8227 = !DILocation(line: 4540, column: 10, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 4540, column: 4)
!8229 = !DILocation(line: 4540, column: 9, scope: !8228)
!8230 = !DILocation(line: 4540, column: 15, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 4540, column: 4)
!8232 = !DILocation(line: 4540, column: 18, scope: !8231)
!8233 = !DILocation(line: 4540, column: 17, scope: !8231)
!8234 = !DILocation(line: 4540, column: 16, scope: !8231)
!8235 = !DILocation(line: 4540, column: 4, scope: !8228)
!8236 = !DILocation(line: 4541, column: 11, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8231, file: !3, line: 4541, column: 9)
!8238 = !DILocation(line: 4541, column: 10, scope: !8237)
!8239 = !DILocation(line: 4541, column: 21, scope: !8237)
!8240 = !DILocation(line: 4541, column: 9, scope: !8237)
!8241 = !DILocation(line: 4541, column: 24, scope: !8237)
!8242 = !DILocation(line: 4541, column: 29, scope: !8237)
!8243 = !DILocation(line: 4541, column: 28, scope: !8237)
!8244 = !DILocation(line: 4541, column: 39, scope: !8237)
!8245 = !DILocation(line: 4541, column: 27, scope: !8237)
!8246 = !DILocation(line: 4541, column: 43, scope: !8237)
!8247 = !DILocation(line: 4541, column: 49, scope: !8237)
!8248 = !DILocation(line: 4541, column: 9, scope: !8231)
!8249 = !DILocation(line: 4542, column: 16, scope: !8237)
!8250 = !DILocation(line: 4542, column: 6, scope: !8237)
!8251 = !DILocation(line: 4541, column: 51, scope: !8237)
!8252 = !DILocation(line: 4540, column: 32, scope: !8231)
!8253 = !DILocation(line: 4540, column: 4, scope: !8231)
!8254 = distinct !{!8254, !8235, !8255}
!8255 = !DILocation(line: 4542, column: 18, scope: !8228)
!8256 = !DILocation(line: 4543, column: 2, scope: !8202)
!8257 = !DILocation(line: 4545, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !2, file: !3, line: 4545, column: 6)
!8259 = !DILocation(line: 4545, column: 6, scope: !2)
!8260 = !DILocalVariable(name: "imat", scope: !8261, file: !3, line: 4546, type: !462)
!8261 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 4545, column: 18)
!8262 = !DILocation(line: 4546, column: 9, scope: !8261)
!8263 = !DILocation(line: 4548, column: 40, scope: !8261)
!8264 = !DILocation(line: 4548, column: 44, scope: !8261)
!8265 = !DILocation(line: 4548, column: 21, scope: !8261)
!8266 = !DILocation(line: 4548, column: 3, scope: !8261)
!8267 = !DILocation(line: 4548, column: 8, scope: !8261)
!8268 = !DILocation(line: 4548, column: 19, scope: !8261)
!8269 = !DILocation(line: 4549, column: 16, scope: !8261)
!8270 = !DILocation(line: 4549, column: 22, scope: !8261)
!8271 = !DILocation(line: 4549, column: 27, scope: !8261)
!8272 = !DILocation(line: 4549, column: 3, scope: !8261)
!8273 = !DILocation(line: 4550, column: 3, scope: !8261)
!8274 = !DILocation(line: 4551, column: 2, scope: !8261)
!8275 = !DILocation(line: 4553, column: 13, scope: !2)
!8276 = !DILocation(line: 4553, column: 18, scope: !2)
!8277 = !DILocation(line: 4553, column: 29, scope: !2)
!8278 = !DILocation(line: 4553, column: 34, scope: !2)
!8279 = !DILocation(line: 4553, column: 2, scope: !2)
!8280 = !DILocation(line: 4554, column: 13, scope: !2)
!8281 = !DILocation(line: 4554, column: 18, scope: !2)
!8282 = !DILocation(line: 4554, column: 27, scope: !2)
!8283 = !DILocation(line: 4554, column: 32, scope: !2)
!8284 = !DILocation(line: 4554, column: 2, scope: !2)
!8285 = !DILocation(line: 4555, column: 1, scope: !2)
!8286 = distinct !DISubprogram(name: "is_object_restricted", scope: !3, file: !3, line: 3904, type: !8287, scopeLine: 3905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8287 = !DISubroutineType(types: !8288)
!8288 = !{!28, !6, !3236}
!8289 = !DILocalVariable(name: "re", arg: 1, scope: !8286, file: !3, line: 3904, type: !6)
!8290 = !DILocation(line: 3904, column: 42, scope: !8286)
!8291 = !DILocalVariable(name: "ob", arg: 2, scope: !8286, file: !3, line: 3904, type: !3236)
!8292 = !DILocation(line: 3904, column: 54, scope: !8286)
!8293 = !DILocation(line: 3906, column: 6, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 3906, column: 6)
!8295 = !DILocation(line: 3906, column: 10, scope: !8294)
!8296 = !DILocation(line: 3906, column: 12, scope: !8294)
!8297 = !DILocation(line: 3906, column: 20, scope: !8294)
!8298 = !DILocation(line: 3906, column: 6, scope: !8286)
!8299 = !DILocation(line: 3907, column: 11, scope: !8294)
!8300 = !DILocation(line: 3907, column: 15, scope: !8294)
!8301 = !DILocation(line: 3907, column: 28, scope: !8294)
!8302 = !DILocation(line: 3907, column: 48, scope: !8294)
!8303 = !DILocation(line: 3907, column: 10, scope: !8294)
!8304 = !DILocation(line: 3907, column: 3, scope: !8294)
!8305 = !DILocation(line: 3909, column: 11, scope: !8294)
!8306 = !DILocation(line: 3909, column: 15, scope: !8294)
!8307 = !DILocation(line: 3909, column: 28, scope: !8294)
!8308 = !DILocation(line: 3909, column: 50, scope: !8294)
!8309 = !DILocation(line: 3909, column: 10, scope: !8294)
!8310 = !DILocation(line: 3909, column: 3, scope: !8294)
!8311 = !DILocation(line: 3910, column: 1, scope: !8286)
!8312 = distinct !DISubprogram(name: "allow_render_object", scope: !3, file: !3, line: 4790, type: !8313, scopeLine: 4791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{!21, !6, !3236, !21, !21, !3236}
!8315 = !DILocalVariable(name: "re", arg: 1, scope: !8312, file: !3, line: 4790, type: !6)
!8316 = !DILocation(line: 4790, column: 40, scope: !8312)
!8317 = !DILocalVariable(name: "ob", arg: 2, scope: !8312, file: !3, line: 4790, type: !3236)
!8318 = !DILocation(line: 4790, column: 52, scope: !8312)
!8319 = !DILocalVariable(name: "nolamps", arg: 3, scope: !8312, file: !3, line: 4790, type: !21)
!8320 = !DILocation(line: 4790, column: 60, scope: !8312)
!8321 = !DILocalVariable(name: "onlyselected", arg: 4, scope: !8312, file: !3, line: 4790, type: !21)
!8322 = !DILocation(line: 4790, column: 73, scope: !8312)
!8323 = !DILocalVariable(name: "actob", arg: 5, scope: !8312, file: !3, line: 4790, type: !3236)
!8324 = !DILocation(line: 4790, column: 95, scope: !8312)
!8325 = !DILocation(line: 4792, column: 23, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4792, column: 6)
!8327 = !DILocation(line: 4792, column: 27, scope: !8326)
!8328 = !DILocation(line: 4792, column: 6, scope: !8326)
!8329 = !DILocation(line: 4792, column: 6, scope: !8312)
!8330 = !DILocation(line: 4793, column: 3, scope: !8326)
!8331 = !DILocation(line: 4796, column: 7, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4796, column: 6)
!8333 = !DILocation(line: 4796, column: 11, scope: !8332)
!8334 = !DILocation(line: 4796, column: 26, scope: !8332)
!8335 = !DILocation(line: 4796, column: 6, scope: !8312)
!8336 = !DILocation(line: 4797, column: 8, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 4797, column: 7)
!8338 = distinct !DILexicalBlock(scope: !8332, file: !3, line: 4796, column: 33)
!8339 = !DILocation(line: 4797, column: 12, scope: !8337)
!8340 = !DILocation(line: 4797, column: 22, scope: !8337)
!8341 = !DILocation(line: 4797, column: 34, scope: !8337)
!8342 = !DILocation(line: 4797, column: 39, scope: !8337)
!8343 = !DILocation(line: 4797, column: 43, scope: !8337)
!8344 = !DILocation(line: 4797, column: 53, scope: !8337)
!8345 = !DILocation(line: 4797, column: 7, scope: !8338)
!8346 = !DILocation(line: 4798, column: 4, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 4797, column: 72)
!8348 = !DILocation(line: 4800, column: 2, scope: !8338)
!8349 = !DILocation(line: 4803, column: 6, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4803, column: 6)
!8351 = !DILocation(line: 4803, column: 10, scope: !8350)
!8352 = !DILocation(line: 4803, column: 15, scope: !8350)
!8353 = !DILocation(line: 4803, column: 27, scope: !8350)
!8354 = !DILocation(line: 4803, column: 30, scope: !8350)
!8355 = !DILocation(line: 4803, column: 55, scope: !8350)
!8356 = !DILocation(line: 4803, column: 59, scope: !8350)
!8357 = !DILocation(line: 4803, column: 66, scope: !8350)
!8358 = !DILocation(line: 4803, column: 34, scope: !8350)
!8359 = !DILocation(line: 4803, column: 32, scope: !8350)
!8360 = !DILocation(line: 4803, column: 6, scope: !8312)
!8361 = !DILocation(line: 4804, column: 3, scope: !8350)
!8362 = !DILocation(line: 4806, column: 6, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4806, column: 6)
!8364 = !DILocation(line: 4806, column: 14, scope: !8363)
!8365 = !DILocation(line: 4806, column: 18, scope: !8363)
!8366 = !DILocation(line: 4806, column: 22, scope: !8363)
!8367 = !DILocation(line: 4806, column: 26, scope: !8363)
!8368 = !DILocation(line: 4806, column: 6, scope: !8312)
!8369 = !DILocation(line: 4807, column: 3, scope: !8363)
!8370 = !DILocation(line: 4809, column: 6, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8312, file: !3, line: 4809, column: 6)
!8372 = !DILocation(line: 4809, column: 19, scope: !8371)
!8373 = !DILocation(line: 4809, column: 23, scope: !8371)
!8374 = !DILocation(line: 4809, column: 27, scope: !8371)
!8375 = !DILocation(line: 4809, column: 25, scope: !8371)
!8376 = !DILocation(line: 4809, column: 33, scope: !8371)
!8377 = !DILocation(line: 4809, column: 38, scope: !8371)
!8378 = !DILocation(line: 4809, column: 42, scope: !8371)
!8379 = !DILocation(line: 4809, column: 47, scope: !8371)
!8380 = !DILocation(line: 4809, column: 6, scope: !8312)
!8381 = !DILocation(line: 4810, column: 3, scope: !8371)
!8382 = !DILocation(line: 4812, column: 2, scope: !8312)
!8383 = !DILocation(line: 4813, column: 1, scope: !8312)
!8384 = !DILocalVariable(name: "re", arg: 1, scope: !4170, file: !3, line: 4679, type: !6)
!8385 = !DILocation(line: 4679, column: 40, scope: !4170)
!8386 = !DILocalVariable(name: "ob", arg: 2, scope: !4170, file: !3, line: 4679, type: !3236)
!8387 = !DILocation(line: 4679, column: 52, scope: !4170)
!8388 = !DILocalVariable(name: "par", arg: 3, scope: !4170, file: !3, line: 4679, type: !3236)
!8389 = !DILocation(line: 4679, column: 64, scope: !4170)
!8390 = !DILocalVariable(name: "dob", arg: 4, scope: !4170, file: !3, line: 4679, type: !3344)
!8391 = !DILocation(line: 4679, column: 82, scope: !4170)
!8392 = !DILocalVariable(name: "omat", arg: 5, scope: !4170, file: !3, line: 4679, type: !2482)
!8393 = !DILocation(line: 4679, column: 93, scope: !4170)
!8394 = !DILocalVariable(name: "timeoffset", arg: 6, scope: !4170, file: !3, line: 4679, type: !21)
!8395 = !DILocation(line: 4679, column: 109, scope: !4170)
!8396 = !DILocalVariable(name: "time", scope: !4170, file: !3, line: 4682, type: !934)
!8397 = !DILocation(line: 4682, column: 9, scope: !4170)
!8398 = !DILocalVariable(name: "mat", scope: !4170, file: !3, line: 4683, type: !462)
!8399 = !DILocation(line: 4683, column: 8, scope: !4170)
!8400 = !DILocation(line: 4685, column: 6, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 4685, column: 6)
!8402 = !DILocation(line: 4685, column: 10, scope: !8401)
!8403 = !DILocation(line: 4685, column: 14, scope: !8401)
!8404 = !DILocation(line: 4685, column: 6, scope: !4170)
!8405 = !DILocation(line: 4686, column: 19, scope: !8401)
!8406 = !DILocation(line: 4686, column: 23, scope: !8401)
!8407 = !DILocation(line: 4686, column: 3, scope: !8401)
!8408 = !DILocation(line: 4687, column: 30, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 4687, column: 11)
!8410 = !DILocation(line: 4687, column: 34, scope: !8409)
!8411 = !DILocation(line: 4687, column: 11, scope: !8409)
!8412 = !DILocation(line: 4687, column: 11, scope: !8401)
!8413 = !DILocation(line: 4688, column: 21, scope: !8409)
!8414 = !DILocation(line: 4688, column: 25, scope: !8409)
!8415 = !DILocation(line: 4688, column: 29, scope: !8409)
!8416 = !DILocation(line: 4688, column: 34, scope: !8409)
!8417 = !DILocation(line: 4688, column: 39, scope: !8409)
!8418 = !DILocation(line: 4688, column: 45, scope: !8409)
!8419 = !DILocation(line: 4688, column: 3, scope: !8409)
!8420 = !DILocation(line: 4690, column: 15, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 4689, column: 7)
!8422 = !DILocation(line: 4690, column: 20, scope: !8421)
!8423 = !DILocation(line: 4690, column: 24, scope: !8421)
!8424 = !DILocation(line: 4690, column: 33, scope: !8421)
!8425 = !DILocation(line: 4690, column: 37, scope: !8421)
!8426 = !DILocation(line: 4690, column: 3, scope: !8421)
!8427 = !DILocation(line: 4691, column: 16, scope: !8421)
!8428 = !DILocation(line: 4691, column: 20, scope: !8421)
!8429 = !DILocation(line: 4691, column: 26, scope: !8421)
!8430 = !DILocation(line: 4691, column: 3, scope: !8421)
!8431 = !DILocation(line: 4694, column: 8, scope: !4170)
!8432 = !DILocation(line: 4694, column: 6, scope: !4170)
!8433 = !DILocation(line: 4695, column: 6, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 4695, column: 6)
!8435 = !DILocation(line: 4695, column: 13, scope: !8434)
!8436 = !DILocation(line: 4695, column: 11, scope: !8434)
!8437 = !DILocation(line: 4695, column: 22, scope: !8434)
!8438 = !DILocation(line: 4695, column: 6, scope: !4170)
!8439 = !DILocation(line: 4696, column: 13, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 4695, column: 29)
!8441 = !DILocation(line: 4696, column: 11, scope: !8440)
!8442 = !DILocation(line: 4698, column: 18, scope: !8440)
!8443 = !DILocation(line: 4698, column: 22, scope: !8440)
!8444 = !DILocation(line: 4698, column: 3, scope: !8440)
!8445 = !DILocation(line: 4698, column: 7, scope: !8440)
!8446 = !DILocation(line: 4698, column: 9, scope: !8440)
!8447 = !DILocation(line: 4698, column: 16, scope: !8440)
!8448 = !DILocation(line: 4699, column: 18, scope: !8440)
!8449 = !DILocation(line: 4699, column: 22, scope: !8440)
!8450 = !DILocation(line: 4699, column: 3, scope: !8440)
!8451 = !DILocation(line: 4699, column: 7, scope: !8440)
!8452 = !DILocation(line: 4699, column: 9, scope: !8440)
!8453 = !DILocation(line: 4699, column: 16, scope: !8440)
!8454 = !DILocation(line: 4700, column: 20, scope: !8440)
!8455 = !DILocation(line: 4700, column: 24, scope: !8440)
!8456 = !DILocation(line: 4700, column: 3, scope: !8440)
!8457 = !DILocation(line: 4700, column: 7, scope: !8440)
!8458 = !DILocation(line: 4700, column: 9, scope: !8440)
!8459 = !DILocation(line: 4700, column: 18, scope: !8440)
!8460 = !DILocation(line: 4701, column: 18, scope: !8440)
!8461 = !DILocation(line: 4701, column: 22, scope: !8440)
!8462 = !DILocation(line: 4701, column: 3, scope: !8440)
!8463 = !DILocation(line: 4701, column: 7, scope: !8440)
!8464 = !DILocation(line: 4701, column: 9, scope: !8440)
!8465 = !DILocation(line: 4701, column: 16, scope: !8440)
!8466 = !DILocation(line: 4702, column: 18, scope: !8440)
!8467 = !DILocation(line: 4702, column: 22, scope: !8440)
!8468 = !DILocation(line: 4702, column: 3, scope: !8440)
!8469 = !DILocation(line: 4702, column: 7, scope: !8440)
!8470 = !DILocation(line: 4702, column: 9, scope: !8440)
!8471 = !DILocation(line: 4702, column: 16, scope: !8440)
!8472 = !DILocation(line: 4703, column: 3, scope: !8440)
!8473 = !DILocation(line: 4703, column: 7, scope: !8440)
!8474 = !DILocation(line: 4703, column: 18, scope: !8440)
!8475 = !DILocation(line: 4703, column: 22, scope: !8440)
!8476 = !DILocation(line: 4703, column: 28, scope: !8440)
!8477 = !DILocation(line: 4703, column: 32, scope: !8440)
!8478 = !DILocation(line: 4704, column: 2, scope: !8440)
!8479 = !DILocation(line: 4706, column: 2, scope: !4170)
!8480 = !DILocation(line: 4706, column: 6, scope: !4170)
!8481 = !DILocation(line: 4706, column: 11, scope: !4170)
!8482 = !DILocation(line: 4707, column: 1, scope: !4170)
!8483 = distinct !DISubprogram(name: "dupli_render_particle_set", scope: !3, file: !3, line: 4842, type: !8484, scopeLine: 4843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{null, !6, !3236, !21, !21, !21}
!8486 = !DILocalVariable(name: "re", arg: 1, scope: !8483, file: !3, line: 4842, type: !6)
!8487 = !DILocation(line: 4842, column: 47, scope: !8483)
!8488 = !DILocalVariable(name: "ob", arg: 2, scope: !8483, file: !3, line: 4842, type: !3236)
!8489 = !DILocation(line: 4842, column: 59, scope: !8483)
!8490 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !8483, file: !3, line: 4842, type: !21)
!8491 = !DILocation(line: 4842, column: 67, scope: !8483)
!8492 = !DILocalVariable(name: "level", arg: 4, scope: !8483, file: !3, line: 4842, type: !21)
!8493 = !DILocation(line: 4842, column: 83, scope: !8483)
!8494 = !DILocalVariable(name: "enable", arg: 5, scope: !8483, file: !3, line: 4842, type: !21)
!8495 = !DILocation(line: 4842, column: 94, scope: !8483)
!8496 = !DILocalVariable(name: "group", scope: !8483, file: !3, line: 4846, type: !5213)
!8497 = !DILocation(line: 4846, column: 9, scope: !8483)
!8498 = !DILocalVariable(name: "go", scope: !8483, file: !3, line: 4847, type: !8499)
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 64)
!8500 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !538, line: 48, baseType: !8501)
!8501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !538, line: 42, size: 320, elements: !8502)
!8502 = !{!8503, !8505, !8506, !8507, !8508, !8509}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8501, file: !538, line: 43, baseType: !8504, size: 64)
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8501, size: 64)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8501, file: !538, line: 43, baseType: !8504, size: 64, offset: 64)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !8501, file: !538, line: 44, baseType: !323, size: 64, offset: 128)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !8501, file: !538, line: 45, baseType: !64, size: 64, offset: 192)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !8501, file: !538, line: 46, baseType: !23, size: 16, offset: 256)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8501, file: !538, line: 47, baseType: !1529, size: 48, offset: 272)
!8510 = !DILocation(line: 4847, column: 15, scope: !8483)
!8511 = !DILocalVariable(name: "psys", scope: !8483, file: !3, line: 4848, type: !5452)
!8512 = !DILocation(line: 4848, column: 18, scope: !8483)
!8513 = !DILocalVariable(name: "dm", scope: !8483, file: !3, line: 4849, type: !2263)
!8514 = !DILocation(line: 4849, column: 15, scope: !8483)
!8515 = !DILocation(line: 4851, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4851, column: 6)
!8517 = !DILocation(line: 4851, column: 10, scope: !8516)
!8518 = !DILocation(line: 4851, column: 12, scope: !8516)
!8519 = !DILocation(line: 4851, column: 20, scope: !8516)
!8520 = !DILocation(line: 4851, column: 6, scope: !8483)
!8521 = !DILocation(line: 4852, column: 3, scope: !8516)
!8522 = !DILocation(line: 4854, column: 6, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4854, column: 6)
!8524 = !DILocation(line: 4854, column: 12, scope: !8523)
!8525 = !DILocation(line: 4854, column: 6, scope: !8483)
!8526 = !DILocation(line: 4855, column: 3, scope: !8523)
!8527 = !DILocation(line: 4857, column: 6, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4857, column: 6)
!8529 = !DILocation(line: 4857, column: 10, scope: !8528)
!8530 = !DILocation(line: 4857, column: 20, scope: !8528)
!8531 = !DILocation(line: 4857, column: 6, scope: !8483)
!8532 = !DILocation(line: 4858, column: 13, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4858, column: 3)
!8534 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 4857, column: 37)
!8535 = !DILocation(line: 4858, column: 17, scope: !8533)
!8536 = !DILocation(line: 4858, column: 32, scope: !8533)
!8537 = !DILocation(line: 4858, column: 12, scope: !8533)
!8538 = !DILocation(line: 4858, column: 8, scope: !8533)
!8539 = !DILocation(line: 4858, column: 39, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8533, file: !3, line: 4858, column: 3)
!8541 = !DILocation(line: 4858, column: 3, scope: !8533)
!8542 = !DILocation(line: 4859, column: 8, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 4859, column: 8)
!8544 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 4858, column: 62)
!8545 = !DILocation(line: 4859, column: 8, scope: !8544)
!8546 = !DILocation(line: 4860, column: 9, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 4860, column: 9)
!8548 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 4859, column: 62)
!8549 = !DILocation(line: 4860, column: 9, scope: !8548)
!8550 = !DILocation(line: 4861, column: 22, scope: !8547)
!8551 = !DILocation(line: 4861, column: 26, scope: !8547)
!8552 = !DILocation(line: 4861, column: 32, scope: !8547)
!8553 = !DILocation(line: 4861, column: 36, scope: !8547)
!8554 = !DILocation(line: 4861, column: 45, scope: !8547)
!8555 = !DILocation(line: 4861, column: 49, scope: !8547)
!8556 = !DILocation(line: 4861, column: 57, scope: !8547)
!8557 = !DILocation(line: 4861, column: 61, scope: !8547)
!8558 = !DILocation(line: 4861, column: 67, scope: !8547)
!8559 = !DILocation(line: 4861, column: 71, scope: !8547)
!8560 = !DILocation(line: 4861, column: 77, scope: !8547)
!8561 = !DILocation(line: 4861, column: 6, scope: !8547)
!8562 = !DILocation(line: 4863, column: 26, scope: !8547)
!8563 = !DILocation(line: 4863, column: 30, scope: !8547)
!8564 = !DILocation(line: 4863, column: 6, scope: !8547)
!8565 = !DILocation(line: 4864, column: 4, scope: !8548)
!8566 = !DILocation(line: 4865, column: 3, scope: !8544)
!8567 = !DILocation(line: 4858, column: 50, scope: !8540)
!8568 = !DILocation(line: 4858, column: 56, scope: !8540)
!8569 = !DILocation(line: 4858, column: 49, scope: !8540)
!8570 = !DILocation(line: 4858, column: 3, scope: !8540)
!8571 = distinct !{!8571, !8541, !8572}
!8572 = !DILocation(line: 4865, column: 3, scope: !8533)
!8573 = !DILocation(line: 4867, column: 7, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 4867, column: 7)
!8575 = !DILocation(line: 4867, column: 7, scope: !8534)
!8576 = !DILocation(line: 4871, column: 36, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 4867, column: 15)
!8578 = !DILocation(line: 4871, column: 40, scope: !8577)
!8579 = !DILocation(line: 4871, column: 47, scope: !8577)
!8580 = !DILocation(line: 4871, column: 51, scope: !8577)
!8581 = !DILocation(line: 4871, column: 67, scope: !8577)
!8582 = !DILocation(line: 4871, column: 82, scope: !8577)
!8583 = !DILocation(line: 4871, column: 9, scope: !8577)
!8584 = !DILocation(line: 4871, column: 7, scope: !8577)
!8585 = !DILocation(line: 4872, column: 4, scope: !8577)
!8586 = !DILocation(line: 4872, column: 8, scope: !8577)
!8587 = !DILocation(line: 4872, column: 16, scope: !8577)
!8588 = !DILocation(line: 4874, column: 14, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 4874, column: 4)
!8590 = !DILocation(line: 4874, column: 18, scope: !8589)
!8591 = !DILocation(line: 4874, column: 33, scope: !8589)
!8592 = !DILocation(line: 4874, column: 13, scope: !8589)
!8593 = !DILocation(line: 4874, column: 9, scope: !8589)
!8594 = !DILocation(line: 4874, column: 40, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 4874, column: 4)
!8596 = !DILocation(line: 4874, column: 4, scope: !8589)
!8597 = !DILocation(line: 4875, column: 23, scope: !8595)
!8598 = !DILocation(line: 4875, column: 27, scope: !8595)
!8599 = !DILocation(line: 4875, column: 5, scope: !8595)
!8600 = !DILocation(line: 4875, column: 34, scope: !8595)
!8601 = !DILocation(line: 4875, column: 39, scope: !8595)
!8602 = !DILocation(line: 4874, column: 51, scope: !8595)
!8603 = !DILocation(line: 4874, column: 57, scope: !8595)
!8604 = !DILocation(line: 4874, column: 50, scope: !8595)
!8605 = !DILocation(line: 4874, column: 4, scope: !8595)
!8606 = distinct !{!8606, !8596, !8607}
!8607 = !DILocation(line: 4875, column: 43, scope: !8589)
!8608 = !DILocation(line: 4876, column: 3, scope: !8577)
!8609 = !DILocation(line: 4877, column: 2, scope: !8534)
!8610 = !DILocation(line: 4879, column: 6, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4879, column: 6)
!8612 = !DILocation(line: 4879, column: 10, scope: !8611)
!8613 = !DILocation(line: 4879, column: 19, scope: !8611)
!8614 = !DILocation(line: 4879, column: 6, scope: !8483)
!8615 = !DILocation(line: 4879, column: 27, scope: !8611)
!8616 = !DILocation(line: 4880, column: 9, scope: !8483)
!8617 = !DILocation(line: 4880, column: 13, scope: !8483)
!8618 = !DILocation(line: 4880, column: 7, scope: !8483)
!8619 = !DILocation(line: 4882, column: 11, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 4882, column: 2)
!8621 = !DILocation(line: 4882, column: 18, scope: !8620)
!8622 = !DILocation(line: 4882, column: 26, scope: !8620)
!8623 = !DILocation(line: 4882, column: 9, scope: !8620)
!8624 = !DILocation(line: 4882, column: 7, scope: !8620)
!8625 = !DILocation(line: 4882, column: 33, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 4882, column: 2)
!8627 = !DILocation(line: 4882, column: 2, scope: !8620)
!8628 = !DILocation(line: 4883, column: 29, scope: !8626)
!8629 = !DILocation(line: 4883, column: 33, scope: !8626)
!8630 = !DILocation(line: 4883, column: 37, scope: !8626)
!8631 = !DILocation(line: 4883, column: 41, scope: !8626)
!8632 = !DILocation(line: 4883, column: 53, scope: !8626)
!8633 = !DILocation(line: 4883, column: 58, scope: !8626)
!8634 = !DILocation(line: 4883, column: 62, scope: !8626)
!8635 = !DILocation(line: 4883, column: 3, scope: !8626)
!8636 = !DILocation(line: 4882, column: 41, scope: !8626)
!8637 = !DILocation(line: 4882, column: 45, scope: !8626)
!8638 = !DILocation(line: 4882, column: 39, scope: !8626)
!8639 = !DILocation(line: 4882, column: 2, scope: !8626)
!8640 = distinct !{!8640, !8627, !8641}
!8641 = !DILocation(line: 4883, column: 68, scope: !8620)
!8642 = !DILocation(line: 4884, column: 1, scope: !8483)
!8643 = distinct !DISubprogram(name: "is_object_hidden", scope: !3, file: !3, line: 3912, type: !8287, scopeLine: 3913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8644 = !DILocalVariable(name: "re", arg: 1, scope: !8643, file: !3, line: 3912, type: !6)
!8645 = !DILocation(line: 3912, column: 38, scope: !8643)
!8646 = !DILocalVariable(name: "ob", arg: 2, scope: !8643, file: !3, line: 3912, type: !3236)
!8647 = !DILocation(line: 3912, column: 50, scope: !8643)
!8648 = !DILocation(line: 3914, column: 27, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 3914, column: 6)
!8650 = !DILocation(line: 3914, column: 31, scope: !8649)
!8651 = !DILocation(line: 3914, column: 6, scope: !8649)
!8652 = !DILocation(line: 3914, column: 6, scope: !8643)
!8653 = !DILocation(line: 3915, column: 3, scope: !8649)
!8654 = !DILocation(line: 3917, column: 6, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 3917, column: 6)
!8656 = !DILocation(line: 3917, column: 10, scope: !8655)
!8657 = !DILocation(line: 3917, column: 12, scope: !8655)
!8658 = !DILocation(line: 3917, column: 20, scope: !8655)
!8659 = !DILocation(line: 3917, column: 6, scope: !8643)
!8660 = !DILocation(line: 3921, column: 10, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 3917, column: 42)
!8662 = !DILocation(line: 3921, column: 3, scope: !8661)
!8663 = !DILocation(line: 3924, column: 3, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8655, file: !3, line: 3923, column: 7)
!8665 = !DILocation(line: 3926, column: 1, scope: !8643)
!8666 = distinct !DISubprogram(name: "allow_render_dupli_instance", scope: !3, file: !3, line: 4815, type: !8667, scopeLine: 4816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{!21, !6, !3344, !3236}
!8669 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !8666, file: !3, line: 4815, type: !6)
!8670 = !DILocation(line: 4815, column: 48, scope: !8666)
!8671 = !DILocalVariable(name: "dob", arg: 2, scope: !8666, file: !3, line: 4815, type: !3344)
!8672 = !DILocation(line: 4815, column: 73, scope: !8666)
!8673 = !DILocalVariable(name: "obd", arg: 3, scope: !8666, file: !3, line: 4815, type: !3236)
!8674 = !DILocation(line: 4815, column: 86, scope: !8666)
!8675 = !DILocalVariable(name: "psys", scope: !8666, file: !3, line: 4817, type: !5452)
!8676 = !DILocation(line: 4817, column: 18, scope: !8666)
!8677 = !DILocalVariable(name: "ma", scope: !8666, file: !3, line: 4818, type: !4157)
!8678 = !DILocation(line: 4818, column: 12, scope: !8666)
!8679 = !DILocalVariable(name: "a", scope: !8666, file: !3, line: 4819, type: !23)
!8680 = !DILocation(line: 4819, column: 8, scope: !8666)
!8681 = !DILocalVariable(name: "totmaterial", scope: !8666, file: !3, line: 4819, type: !2159)
!8682 = !DILocation(line: 4819, column: 12, scope: !8666)
!8683 = !DILocation(line: 4823, column: 28, scope: !8666)
!8684 = !DILocation(line: 4823, column: 15, scope: !8666)
!8685 = !DILocation(line: 4823, column: 13, scope: !8666)
!8686 = !DILocation(line: 4825, column: 6, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 4825, column: 6)
!8688 = !DILocation(line: 4825, column: 6, scope: !8666)
!8689 = !DILocation(line: 4826, column: 9, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 4826, column: 3)
!8691 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 4825, column: 19)
!8692 = !DILocation(line: 4826, column: 8, scope: !8690)
!8693 = !DILocation(line: 4826, column: 14, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 4826, column: 3)
!8695 = !DILocation(line: 4826, column: 17, scope: !8694)
!8696 = !DILocation(line: 4826, column: 16, scope: !8694)
!8697 = !DILocation(line: 4826, column: 15, scope: !8694)
!8698 = !DILocation(line: 4826, column: 3, scope: !8690)
!8699 = !DILocation(line: 4827, column: 30, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 4826, column: 35)
!8701 = !DILocation(line: 4827, column: 35, scope: !8700)
!8702 = !DILocation(line: 4827, column: 37, scope: !8700)
!8703 = !DILocation(line: 4827, column: 8, scope: !8700)
!8704 = !DILocation(line: 4827, column: 6, scope: !8700)
!8705 = !DILocation(line: 4828, column: 8, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 4828, column: 8)
!8707 = !DILocation(line: 4828, column: 11, scope: !8706)
!8708 = !DILocation(line: 4828, column: 15, scope: !8706)
!8709 = !DILocation(line: 4828, column: 19, scope: !8706)
!8710 = !DILocation(line: 4828, column: 33, scope: !8706)
!8711 = !DILocation(line: 4828, column: 8, scope: !8700)
!8712 = !DILocation(line: 4829, column: 5, scope: !8706)
!8713 = !DILocation(line: 4830, column: 3, scope: !8700)
!8714 = !DILocation(line: 4826, column: 31, scope: !8694)
!8715 = !DILocation(line: 4826, column: 3, scope: !8694)
!8716 = distinct !{!8716, !8698, !8717}
!8717 = !DILocation(line: 4830, column: 3, scope: !8690)
!8718 = !DILocation(line: 4831, column: 2, scope: !8691)
!8719 = !DILocation(line: 4833, column: 12, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8666, file: !3, line: 4833, column: 2)
!8721 = !DILocation(line: 4833, column: 17, scope: !8720)
!8722 = !DILocation(line: 4833, column: 32, scope: !8720)
!8723 = !DILocation(line: 4833, column: 11, scope: !8720)
!8724 = !DILocation(line: 4833, column: 7, scope: !8720)
!8725 = !DILocation(line: 4833, column: 39, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 4833, column: 2)
!8727 = !DILocation(line: 4833, column: 2, scope: !8720)
!8728 = !DILocation(line: 4834, column: 8, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 4834, column: 7)
!8730 = !DILocation(line: 4834, column: 7, scope: !8726)
!8731 = !DILocation(line: 4835, column: 4, scope: !8729)
!8732 = !DILocation(line: 4833, column: 50, scope: !8726)
!8733 = !DILocation(line: 4833, column: 56, scope: !8726)
!8734 = !DILocation(line: 4833, column: 49, scope: !8726)
!8735 = !DILocation(line: 4833, column: 2, scope: !8726)
!8736 = distinct !{!8736, !8727, !8737}
!8737 = !DILocation(line: 4835, column: 11, scope: !8720)
!8738 = !DILocation(line: 4838, column: 29, scope: !8666)
!8739 = !DILocation(line: 4838, column: 34, scope: !8666)
!8740 = !DILocation(line: 4838, column: 10, scope: !8666)
!8741 = !DILocation(line: 4838, column: 40, scope: !8666)
!8742 = !DILocation(line: 4839, column: 7, scope: !8666)
!8743 = !DILocation(line: 4839, column: 12, scope: !8666)
!8744 = !DILocation(line: 4839, column: 17, scope: !8666)
!8745 = !DILocation(line: 4839, column: 35, scope: !8666)
!8746 = !DILocation(line: 4839, column: 39, scope: !8666)
!8747 = !DILocation(line: 4839, column: 44, scope: !8666)
!8748 = !DILocation(line: 4839, column: 38, scope: !8666)
!8749 = !DILocation(line: 0, scope: !8666)
!8750 = !DILocation(line: 4838, column: 2, scope: !8666)
!8751 = !DILocation(line: 4840, column: 1, scope: !8666)
!8752 = distinct !DISubprogram(name: "find_dupligroup_dupli", scope: !3, file: !3, line: 4494, type: !8753, scopeLine: 4495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!3063, !6, !3236, !21}
!8755 = !DILocalVariable(name: "re", arg: 1, scope: !8752, file: !3, line: 4494, type: !6)
!8756 = !DILocation(line: 4494, column: 49, scope: !8752)
!8757 = !DILocalVariable(name: "ob", arg: 2, scope: !8752, file: !3, line: 4494, type: !3236)
!8758 = !DILocation(line: 4494, column: 61, scope: !8752)
!8759 = !DILocalVariable(name: "psysindex", arg: 3, scope: !8752, file: !3, line: 4494, type: !21)
!8760 = !DILocation(line: 4494, column: 69, scope: !8752)
!8761 = !DILocalVariable(name: "obr", scope: !8752, file: !3, line: 4496, type: !3063)
!8762 = !DILocation(line: 4496, column: 13, scope: !8752)
!8763 = !DILocation(line: 4500, column: 6, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 4500, column: 6)
!8765 = !DILocation(line: 4500, column: 10, scope: !8764)
!8766 = !DILocation(line: 4500, column: 20, scope: !8764)
!8767 = !DILocation(line: 4500, column: 6, scope: !8752)
!8768 = !DILocation(line: 4501, column: 3, scope: !8764)
!8769 = !DILocation(line: 4505, column: 11, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 4505, column: 2)
!8771 = !DILocation(line: 4505, column: 15, scope: !8770)
!8772 = !DILocation(line: 4505, column: 27, scope: !8770)
!8773 = !DILocation(line: 4505, column: 10, scope: !8770)
!8774 = !DILocation(line: 4505, column: 7, scope: !8770)
!8775 = !DILocation(line: 4505, column: 34, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 4505, column: 2)
!8777 = !DILocation(line: 4505, column: 2, scope: !8770)
!8778 = !DILocation(line: 4506, column: 7, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 4506, column: 7)
!8780 = !DILocation(line: 4506, column: 12, scope: !8779)
!8781 = !DILocation(line: 4506, column: 18, scope: !8779)
!8782 = !DILocation(line: 4506, column: 15, scope: !8779)
!8783 = !DILocation(line: 4506, column: 21, scope: !8779)
!8784 = !DILocation(line: 4506, column: 24, scope: !8779)
!8785 = !DILocation(line: 4506, column: 29, scope: !8779)
!8786 = !DILocation(line: 4506, column: 42, scope: !8779)
!8787 = !DILocation(line: 4506, column: 39, scope: !8779)
!8788 = !DILocation(line: 4506, column: 52, scope: !8779)
!8789 = !DILocation(line: 4506, column: 56, scope: !8779)
!8790 = !DILocation(line: 4506, column: 61, scope: !8779)
!8791 = !DILocation(line: 4506, column: 66, scope: !8779)
!8792 = !DILocation(line: 4506, column: 7, scope: !8776)
!8793 = !DILocation(line: 4507, column: 11, scope: !8779)
!8794 = !DILocation(line: 4507, column: 4, scope: !8779)
!8795 = !DILocation(line: 4506, column: 82, scope: !8779)
!8796 = !DILocation(line: 4505, column: 43, scope: !8776)
!8797 = !DILocation(line: 4505, column: 48, scope: !8776)
!8798 = !DILocation(line: 4505, column: 42, scope: !8776)
!8799 = !DILocation(line: 4505, column: 2, scope: !8776)
!8800 = distinct !{!8800, !8777, !8801}
!8801 = !DILocation(line: 4507, column: 11, scope: !8770)
!8802 = !DILocation(line: 4509, column: 2, scope: !8752)
!8803 = !DILocation(line: 4510, column: 1, scope: !8752)
!8804 = distinct !DISubprogram(name: "assign_dupligroup_dupli", scope: !3, file: !3, line: 4464, type: !8805, scopeLine: 4465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{null, !6, !3342, !3063, !3344}
!8807 = !DILocalVariable(name: "re", arg: 1, scope: !8804, file: !3, line: 4464, type: !6)
!8808 = !DILocation(line: 4464, column: 45, scope: !8804)
!8809 = !DILocalVariable(name: "obi", arg: 2, scope: !8804, file: !3, line: 4464, type: !3342)
!8810 = !DILocation(line: 4464, column: 68, scope: !8804)
!8811 = !DILocalVariable(name: "obr", arg: 3, scope: !8804, file: !3, line: 4464, type: !3063)
!8812 = !DILocation(line: 4464, column: 84, scope: !8804)
!8813 = !DILocalVariable(name: "dob", arg: 4, scope: !8804, file: !3, line: 4464, type: !3344)
!8814 = !DILocation(line: 4464, column: 102, scope: !8804)
!8815 = !DILocalVariable(name: "imat", scope: !8804, file: !3, line: 4466, type: !462)
!8816 = !DILocation(line: 4466, column: 8, scope: !8804)
!8817 = !DILocalVariable(name: "obmat", scope: !8804, file: !3, line: 4466, type: !462)
!8818 = !DILocation(line: 4466, column: 20, scope: !8804)
!8819 = !DILocalVariable(name: "obimat", scope: !8804, file: !3, line: 4466, type: !462)
!8820 = !DILocation(line: 4466, column: 33, scope: !8804)
!8821 = !DILocalVariable(name: "nmat", scope: !8804, file: !3, line: 4466, type: !2674)
!8822 = !DILocation(line: 4466, column: 47, scope: !8804)
!8823 = !DILocation(line: 4468, column: 14, scope: !8804)
!8824 = !DILocation(line: 4468, column: 21, scope: !8804)
!8825 = !DILocation(line: 4468, column: 25, scope: !8804)
!8826 = !DILocation(line: 4468, column: 34, scope: !8804)
!8827 = !DILocation(line: 4468, column: 39, scope: !8804)
!8828 = !DILocation(line: 4468, column: 2, scope: !8804)
!8829 = !DILocation(line: 4469, column: 15, scope: !8804)
!8830 = !DILocation(line: 4469, column: 21, scope: !8804)
!8831 = !DILocation(line: 4469, column: 2, scope: !8804)
!8832 = !DILocation(line: 4471, column: 12, scope: !8804)
!8833 = !DILocation(line: 4471, column: 2, scope: !8804)
!8834 = !DILocation(line: 4471, column: 7, scope: !8804)
!8835 = !DILocation(line: 4471, column: 10, scope: !8804)
!8836 = !DILocation(line: 4475, column: 13, scope: !8804)
!8837 = !DILocation(line: 4475, column: 21, scope: !8804)
!8838 = !DILocation(line: 4475, column: 26, scope: !8804)
!8839 = !DILocation(line: 4475, column: 2, scope: !8804)
!8840 = !DILocation(line: 4476, column: 14, scope: !8804)
!8841 = !DILocation(line: 4476, column: 19, scope: !8804)
!8842 = !DILocation(line: 4476, column: 24, scope: !8804)
!8843 = !DILocation(line: 4476, column: 32, scope: !8804)
!8844 = !DILocation(line: 4476, column: 2, scope: !8804)
!8845 = !DILocation(line: 4478, column: 13, scope: !8804)
!8846 = !DILocation(line: 4478, column: 19, scope: !8804)
!8847 = !DILocation(line: 4478, column: 24, scope: !8804)
!8848 = !DILocation(line: 4478, column: 2, scope: !8804)
!8849 = !DILocation(line: 4479, column: 15, scope: !8804)
!8850 = !DILocation(line: 4479, column: 20, scope: !8804)
!8851 = !DILocation(line: 4479, column: 26, scope: !8804)
!8852 = !DILocation(line: 4479, column: 2, scope: !8804)
!8853 = !DILocation(line: 4480, column: 15, scope: !8804)
!8854 = !DILocation(line: 4480, column: 20, scope: !8804)
!8855 = !DILocation(line: 4480, column: 2, scope: !8804)
!8856 = !DILocation(line: 4482, column: 6, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 4482, column: 6)
!8858 = !DILocation(line: 4482, column: 6, scope: !8804)
!8859 = !DILocation(line: 4483, column: 14, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 4482, column: 11)
!8861 = !DILocation(line: 4483, column: 19, scope: !8860)
!8862 = !DILocation(line: 4483, column: 30, scope: !8860)
!8863 = !DILocation(line: 4483, column: 35, scope: !8860)
!8864 = !DILocation(line: 4483, column: 3, scope: !8860)
!8865 = !DILocation(line: 4484, column: 20, scope: !8860)
!8866 = !DILocation(line: 4484, column: 25, scope: !8860)
!8867 = !DILocation(line: 4484, column: 3, scope: !8860)
!8868 = !DILocation(line: 4484, column: 8, scope: !8860)
!8869 = !DILocation(line: 4484, column: 18, scope: !8860)
!8870 = !DILocation(line: 4485, column: 20, scope: !8860)
!8871 = !DILocation(line: 4485, column: 25, scope: !8860)
!8872 = !DILocation(line: 4485, column: 3, scope: !8860)
!8873 = !DILocation(line: 4485, column: 8, scope: !8860)
!8874 = !DILocation(line: 4485, column: 18, scope: !8860)
!8875 = !DILocation(line: 4486, column: 2, scope: !8860)
!8876 = !DILocation(line: 4488, column: 17, scope: !8804)
!8877 = !DILocation(line: 4488, column: 22, scope: !8804)
!8878 = !DILocation(line: 4488, column: 2, scope: !8804)
!8879 = !DILocation(line: 4488, column: 6, scope: !8804)
!8880 = !DILocation(line: 4488, column: 14, scope: !8804)
!8881 = !DILocation(line: 4489, column: 17, scope: !8804)
!8882 = !DILocation(line: 4489, column: 22, scope: !8804)
!8883 = !DILocation(line: 4489, column: 2, scope: !8804)
!8884 = !DILocation(line: 4489, column: 6, scope: !8804)
!8885 = !DILocation(line: 4489, column: 14, scope: !8804)
!8886 = !DILocation(line: 4490, column: 17, scope: !8804)
!8887 = !DILocation(line: 4490, column: 22, scope: !8804)
!8888 = !DILocation(line: 4490, column: 2, scope: !8804)
!8889 = !DILocation(line: 4490, column: 6, scope: !8804)
!8890 = !DILocation(line: 4490, column: 14, scope: !8804)
!8891 = !DILocation(line: 4491, column: 19, scope: !8804)
!8892 = !DILocation(line: 4491, column: 24, scope: !8804)
!8893 = !DILocation(line: 4491, column: 2, scope: !8804)
!8894 = !DILocation(line: 4491, column: 6, scope: !8804)
!8895 = !DILocation(line: 4491, column: 16, scope: !8804)
!8896 = !DILocation(line: 4492, column: 1, scope: !8804)
!8897 = distinct !DISubprogram(name: "find_dupli_instances", scope: !3, file: !3, line: 4421, type: !8898, scopeLine: 4422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{null, !6, !3063, !3344}
!8900 = !DILocalVariable(name: "re", arg: 1, scope: !8897, file: !3, line: 4421, type: !6)
!8901 = !DILocation(line: 4421, column: 42, scope: !8897)
!8902 = !DILocalVariable(name: "obr", arg: 2, scope: !8897, file: !3, line: 4421, type: !3063)
!8903 = !DILocation(line: 4421, column: 57, scope: !8897)
!8904 = !DILocalVariable(name: "dob", arg: 3, scope: !8897, file: !3, line: 4421, type: !3344)
!8905 = !DILocation(line: 4421, column: 75, scope: !8897)
!8906 = !DILocalVariable(name: "obi", scope: !8897, file: !3, line: 4423, type: !3342)
!8907 = !DILocation(line: 4423, column: 21, scope: !8897)
!8908 = !DILocalVariable(name: "imat", scope: !8897, file: !3, line: 4424, type: !462)
!8909 = !DILocation(line: 4424, column: 8, scope: !8897)
!8910 = !DILocalVariable(name: "obmat", scope: !8897, file: !3, line: 4424, type: !462)
!8911 = !DILocation(line: 4424, column: 20, scope: !8897)
!8912 = !DILocalVariable(name: "obimat", scope: !8897, file: !3, line: 4424, type: !462)
!8913 = !DILocation(line: 4424, column: 33, scope: !8897)
!8914 = !DILocalVariable(name: "nmat", scope: !8897, file: !3, line: 4424, type: !2674)
!8915 = !DILocation(line: 4424, column: 47, scope: !8897)
!8916 = !DILocalVariable(name: "first", scope: !8897, file: !3, line: 4425, type: !21)
!8917 = !DILocation(line: 4425, column: 6, scope: !8897)
!8918 = !DILocation(line: 4427, column: 14, scope: !8897)
!8919 = !DILocation(line: 4427, column: 21, scope: !8897)
!8920 = !DILocation(line: 4427, column: 25, scope: !8897)
!8921 = !DILocation(line: 4427, column: 34, scope: !8897)
!8922 = !DILocation(line: 4427, column: 39, scope: !8897)
!8923 = !DILocation(line: 4427, column: 2, scope: !8897)
!8924 = !DILocation(line: 4428, column: 15, scope: !8897)
!8925 = !DILocation(line: 4428, column: 21, scope: !8897)
!8926 = !DILocation(line: 4428, column: 2, scope: !8897)
!8927 = !DILocation(line: 4433, column: 11, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8897, file: !3, line: 4433, column: 2)
!8929 = !DILocation(line: 4433, column: 15, scope: !8928)
!8930 = !DILocation(line: 4433, column: 29, scope: !8928)
!8931 = !DILocation(line: 4433, column: 10, scope: !8928)
!8932 = !DILocation(line: 4433, column: 7, scope: !8928)
!8933 = !DILocation(line: 4433, column: 35, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 4433, column: 2)
!8935 = !DILocation(line: 4433, column: 2, scope: !8928)
!8936 = !DILocation(line: 4434, column: 8, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 4434, column: 7)
!8938 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 4433, column: 55)
!8939 = !DILocation(line: 4434, column: 13, scope: !8937)
!8940 = !DILocation(line: 4434, column: 17, scope: !8937)
!8941 = !DILocation(line: 4434, column: 20, scope: !8937)
!8942 = !DILocation(line: 4434, column: 25, scope: !8937)
!8943 = !DILocation(line: 4434, column: 31, scope: !8937)
!8944 = !DILocation(line: 4434, column: 36, scope: !8937)
!8945 = !DILocation(line: 4434, column: 28, scope: !8937)
!8946 = !DILocation(line: 4434, column: 39, scope: !8937)
!8947 = !DILocation(line: 4434, column: 42, scope: !8937)
!8948 = !DILocation(line: 4434, column: 47, scope: !8937)
!8949 = !DILocation(line: 4434, column: 60, scope: !8937)
!8950 = !DILocation(line: 4434, column: 65, scope: !8937)
!8951 = !DILocation(line: 4434, column: 57, scope: !8937)
!8952 = !DILocation(line: 4434, column: 7, scope: !8938)
!8953 = !DILocation(line: 4435, column: 14, scope: !8954)
!8954 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 4434, column: 76)
!8955 = !DILocation(line: 4435, column: 4, scope: !8954)
!8956 = !DILocation(line: 4435, column: 9, scope: !8954)
!8957 = !DILocation(line: 4435, column: 12, scope: !8954)
!8958 = !DILocation(line: 4439, column: 15, scope: !8954)
!8959 = !DILocation(line: 4439, column: 23, scope: !8954)
!8960 = !DILocation(line: 4439, column: 28, scope: !8954)
!8961 = !DILocation(line: 4439, column: 4, scope: !8954)
!8962 = !DILocation(line: 4440, column: 16, scope: !8954)
!8963 = !DILocation(line: 4440, column: 21, scope: !8954)
!8964 = !DILocation(line: 4440, column: 26, scope: !8954)
!8965 = !DILocation(line: 4440, column: 34, scope: !8954)
!8966 = !DILocation(line: 4440, column: 4, scope: !8954)
!8967 = !DILocation(line: 4442, column: 15, scope: !8954)
!8968 = !DILocation(line: 4442, column: 21, scope: !8954)
!8969 = !DILocation(line: 4442, column: 26, scope: !8954)
!8970 = !DILocation(line: 4442, column: 4, scope: !8954)
!8971 = !DILocation(line: 4443, column: 17, scope: !8954)
!8972 = !DILocation(line: 4443, column: 22, scope: !8954)
!8973 = !DILocation(line: 4443, column: 28, scope: !8954)
!8974 = !DILocation(line: 4443, column: 4, scope: !8954)
!8975 = !DILocation(line: 4444, column: 17, scope: !8954)
!8976 = !DILocation(line: 4444, column: 22, scope: !8954)
!8977 = !DILocation(line: 4444, column: 4, scope: !8954)
!8978 = !DILocation(line: 4446, column: 8, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 4446, column: 8)
!8980 = !DILocation(line: 4446, column: 8, scope: !8954)
!8981 = !DILocation(line: 4447, column: 16, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8979, file: !3, line: 4446, column: 13)
!8983 = !DILocation(line: 4447, column: 21, scope: !8982)
!8984 = !DILocation(line: 4447, column: 32, scope: !8982)
!8985 = !DILocation(line: 4447, column: 37, scope: !8982)
!8986 = !DILocation(line: 4447, column: 5, scope: !8982)
!8987 = !DILocation(line: 4448, column: 22, scope: !8982)
!8988 = !DILocation(line: 4448, column: 27, scope: !8982)
!8989 = !DILocation(line: 4448, column: 5, scope: !8982)
!8990 = !DILocation(line: 4448, column: 10, scope: !8982)
!8991 = !DILocation(line: 4448, column: 20, scope: !8982)
!8992 = !DILocation(line: 4449, column: 22, scope: !8982)
!8993 = !DILocation(line: 4449, column: 27, scope: !8982)
!8994 = !DILocation(line: 4449, column: 5, scope: !8982)
!8995 = !DILocation(line: 4449, column: 10, scope: !8982)
!8996 = !DILocation(line: 4449, column: 20, scope: !8982)
!8997 = !DILocation(line: 4450, column: 4, scope: !8982)
!8998 = !DILocation(line: 4452, column: 9, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 4452, column: 8)
!9000 = !DILocation(line: 4452, column: 8, scope: !8954)
!9001 = !DILocation(line: 4453, column: 20, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 4452, column: 16)
!9003 = !DILocation(line: 4453, column: 25, scope: !9002)
!9004 = !DILocation(line: 4453, column: 5, scope: !9002)
!9005 = !DILocation(line: 4453, column: 9, scope: !9002)
!9006 = !DILocation(line: 4453, column: 17, scope: !9002)
!9007 = !DILocation(line: 4454, column: 20, scope: !9002)
!9008 = !DILocation(line: 4454, column: 25, scope: !9002)
!9009 = !DILocation(line: 4454, column: 5, scope: !9002)
!9010 = !DILocation(line: 4454, column: 9, scope: !9002)
!9011 = !DILocation(line: 4454, column: 17, scope: !9002)
!9012 = !DILocation(line: 4455, column: 20, scope: !9002)
!9013 = !DILocation(line: 4455, column: 25, scope: !9002)
!9014 = !DILocation(line: 4455, column: 5, scope: !9002)
!9015 = !DILocation(line: 4455, column: 9, scope: !9002)
!9016 = !DILocation(line: 4455, column: 17, scope: !9002)
!9017 = !DILocation(line: 4456, column: 22, scope: !9002)
!9018 = !DILocation(line: 4456, column: 27, scope: !9002)
!9019 = !DILocation(line: 4456, column: 5, scope: !9002)
!9020 = !DILocation(line: 4456, column: 9, scope: !9002)
!9021 = !DILocation(line: 4456, column: 19, scope: !9002)
!9022 = !DILocation(line: 4457, column: 4, scope: !9002)
!9023 = !DILocation(line: 4459, column: 10, scope: !8999)
!9024 = !DILocation(line: 4460, column: 3, scope: !8954)
!9025 = !DILocation(line: 4461, column: 2, scope: !8938)
!9026 = !DILocation(line: 4433, column: 44, scope: !8934)
!9027 = !DILocation(line: 4433, column: 49, scope: !8934)
!9028 = !DILocation(line: 4433, column: 43, scope: !8934)
!9029 = !DILocation(line: 4433, column: 2, scope: !8934)
!9030 = distinct !{!9030, !8935, !9031}
!9031 = !DILocation(line: 4461, column: 2, scope: !8928)
!9032 = !DILocation(line: 4462, column: 1, scope: !8897)
!9033 = distinct !DISubprogram(name: "add_group_render_dupli_obs", scope: !3, file: !3, line: 4898, type: !9034, scopeLine: 4899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{null, !6, !5213, !21, !21, !3236, !21, !21}
!9036 = !DILocalVariable(name: "re", arg: 1, scope: !9033, file: !3, line: 4898, type: !6)
!9037 = !DILocation(line: 4898, column: 48, scope: !9033)
!9038 = !DILocalVariable(name: "group", arg: 2, scope: !9033, file: !3, line: 4898, type: !5213)
!9039 = !DILocation(line: 4898, column: 59, scope: !9033)
!9040 = !DILocalVariable(name: "nolamps", arg: 3, scope: !9033, file: !3, line: 4898, type: !21)
!9041 = !DILocation(line: 4898, column: 70, scope: !9033)
!9042 = !DILocalVariable(name: "onlyselected", arg: 4, scope: !9033, file: !3, line: 4898, type: !21)
!9043 = !DILocation(line: 4898, column: 83, scope: !9033)
!9044 = !DILocalVariable(name: "actob", arg: 5, scope: !9033, file: !3, line: 4898, type: !3236)
!9045 = !DILocation(line: 4898, column: 105, scope: !9033)
!9046 = !DILocalVariable(name: "timeoffset", arg: 6, scope: !9033, file: !3, line: 4898, type: !21)
!9047 = !DILocation(line: 4898, column: 116, scope: !9033)
!9048 = !DILocalVariable(name: "level", arg: 7, scope: !9033, file: !3, line: 4898, type: !21)
!9049 = !DILocation(line: 4898, column: 132, scope: !9033)
!9050 = !DILocalVariable(name: "go", scope: !9033, file: !3, line: 4900, type: !8499)
!9051 = !DILocation(line: 4900, column: 15, scope: !9033)
!9052 = !DILocalVariable(name: "ob", scope: !9033, file: !3, line: 4901, type: !3236)
!9053 = !DILocation(line: 4901, column: 10, scope: !9033)
!9054 = !DILocation(line: 4904, column: 6, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4904, column: 6)
!9056 = !DILocation(line: 4904, column: 11, scope: !9055)
!9057 = !DILocation(line: 4904, column: 6, scope: !9033)
!9058 = !DILocation(line: 4904, column: 29, scope: !9055)
!9059 = !DILocation(line: 4908, column: 11, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 4908, column: 2)
!9061 = !DILocation(line: 4908, column: 18, scope: !9060)
!9062 = !DILocation(line: 4908, column: 26, scope: !9060)
!9063 = !DILocation(line: 4908, column: 9, scope: !9060)
!9064 = !DILocation(line: 4908, column: 7, scope: !9060)
!9065 = !DILocation(line: 4908, column: 33, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9060, file: !3, line: 4908, column: 2)
!9067 = !DILocation(line: 4908, column: 2, scope: !9060)
!9068 = !DILocation(line: 4909, column: 7, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 4908, column: 51)
!9070 = !DILocation(line: 4909, column: 11, scope: !9069)
!9071 = !DILocation(line: 4909, column: 5, scope: !9069)
!9072 = !DILocation(line: 4911, column: 7, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 4911, column: 7)
!9074 = !DILocation(line: 4911, column: 11, scope: !9073)
!9075 = !DILocation(line: 4911, column: 16, scope: !9073)
!9076 = !DILocation(line: 4911, column: 7, scope: !9069)
!9077 = !DILocation(line: 4912, column: 8, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 4912, column: 8)
!9079 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 4911, column: 27)
!9080 = !DILocation(line: 4912, column: 12, scope: !9078)
!9081 = !DILocation(line: 4912, column: 22, scope: !9078)
!9082 = !DILocation(line: 4912, column: 8, scope: !9079)
!9083 = !DILocation(line: 4913, column: 29, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 4913, column: 9)
!9085 = distinct !DILexicalBlock(scope: !9078, file: !3, line: 4912, column: 41)
!9086 = !DILocation(line: 4913, column: 33, scope: !9084)
!9087 = !DILocation(line: 4913, column: 37, scope: !9084)
!9088 = !DILocation(line: 4913, column: 46, scope: !9084)
!9089 = !DILocation(line: 4913, column: 60, scope: !9084)
!9090 = !DILocation(line: 4913, column: 9, scope: !9084)
!9091 = !DILocation(line: 4913, column: 9, scope: !9085)
!9092 = !DILocation(line: 4914, column: 25, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 4913, column: 68)
!9094 = !DILocation(line: 4914, column: 29, scope: !9093)
!9095 = !DILocation(line: 4914, column: 51, scope: !9093)
!9096 = !DILocation(line: 4914, column: 6, scope: !9093)
!9097 = !DILocation(line: 4915, column: 6, scope: !9093)
!9098 = !DILocation(line: 4915, column: 10, scope: !9093)
!9099 = !DILocation(line: 4915, column: 20, scope: !9093)
!9100 = !DILocation(line: 4917, column: 10, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 4917, column: 10)
!9102 = !DILocation(line: 4917, column: 14, scope: !9101)
!9103 = !DILocation(line: 4917, column: 10, scope: !9093)
!9104 = !DILocation(line: 4918, column: 34, scope: !9101)
!9105 = !DILocation(line: 4918, column: 38, scope: !9101)
!9106 = !DILocation(line: 4918, column: 42, scope: !9101)
!9107 = !DILocation(line: 4918, column: 53, scope: !9101)
!9108 = !DILocation(line: 4918, column: 62, scope: !9101)
!9109 = !DILocation(line: 4918, column: 76, scope: !9101)
!9110 = !DILocation(line: 4918, column: 83, scope: !9101)
!9111 = !DILocation(line: 4918, column: 95, scope: !9101)
!9112 = !DILocation(line: 4918, column: 100, scope: !9101)
!9113 = !DILocation(line: 4918, column: 7, scope: !9101)
!9114 = !DILocation(line: 4919, column: 5, scope: !9093)
!9115 = !DILocation(line: 4920, column: 4, scope: !9085)
!9116 = !DILocation(line: 4921, column: 3, scope: !9079)
!9117 = !DILocation(line: 4922, column: 2, scope: !9069)
!9118 = !DILocation(line: 4908, column: 41, scope: !9066)
!9119 = !DILocation(line: 4908, column: 45, scope: !9066)
!9120 = !DILocation(line: 4908, column: 39, scope: !9066)
!9121 = !DILocation(line: 4908, column: 2, scope: !9066)
!9122 = distinct !{!9122, !9067, !9123}
!9123 = !DILocation(line: 4922, column: 2, scope: !9060)
!9124 = !DILocation(line: 4923, column: 1, scope: !9033)
!9125 = distinct !DISubprogram(name: "copy_v2_v2", scope: !4629, file: !4629, line: 58, type: !4630, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!9126 = !DILocalVariable(name: "r", arg: 1, scope: !9125, file: !4629, line: 58, type: !44)
!9127 = !DILocation(line: 58, column: 31, scope: !9125)
!9128 = !DILocalVariable(name: "a", arg: 2, scope: !9125, file: !4629, line: 58, type: !2417)
!9129 = !DILocation(line: 58, column: 49, scope: !9125)
!9130 = !DILocation(line: 60, column: 9, scope: !9125)
!9131 = !DILocation(line: 60, column: 2, scope: !9125)
!9132 = !DILocation(line: 60, column: 7, scope: !9125)
!9133 = !DILocation(line: 61, column: 9, scope: !9125)
!9134 = !DILocation(line: 61, column: 2, scope: !9125)
!9135 = !DILocation(line: 61, column: 7, scope: !9125)
!9136 = !DILocation(line: 62, column: 1, scope: !9125)
!9137 = distinct !DISubprogram(name: "add_render_lamp", scope: !3, file: !3, line: 3622, type: !9138, scopeLine: 3623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!9138 = !DISubroutineType(types: !9139)
!9139 = !{!8499, !6, !3236}
!9140 = !DILocalVariable(name: "re", arg: 1, scope: !9137, file: !3, line: 3622, type: !6)
!9141 = !DILocation(line: 3622, column: 45, scope: !9137)
!9142 = !DILocalVariable(name: "ob", arg: 2, scope: !9137, file: !3, line: 3622, type: !3236)
!9143 = !DILocation(line: 3622, column: 57, scope: !9137)
!9144 = !DILocalVariable(name: "la", scope: !9137, file: !3, line: 3624, type: !9145)
!9145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9146, size: 64)
!9146 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lamp", file: !9147, line: 113, baseType: !9148)
!9147 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lamp_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lamp", file: !9147, line: 48, size: 4160, elements: !9149)
!9149 = !{!9150, !9151, !9152, !9153, !9154, !9155, !9156, !9157, !9158, !9159, !9160, !9161, !9162, !9163, !9164, !9165, !9166, !9167, !9168, !9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176, !9177, !9178, !9179, !9180, !9181, !9182, !9183, !9184, !9185, !9186, !9187, !9188, !9189, !9190, !9191, !9192, !9193, !9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201, !9202, !9203, !9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9213, !9214, !9215, !9216, !9217, !9218, !9219, !9220, !9221, !9222, !9224, !9225}
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9148, file: !9147, line: 49, baseType: !91, size: 960)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !9148, file: !9147, line: 50, baseType: !153, size: 64, offset: 960)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9148, file: !9147, line: 52, baseType: !23, size: 16, offset: 1024)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9148, file: !9147, line: 52, baseType: !23, size: 16, offset: 1040)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9148, file: !9147, line: 53, baseType: !21, size: 32, offset: 1056)
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !9148, file: !9147, line: 55, baseType: !23, size: 16, offset: 1088)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !9148, file: !9147, line: 55, baseType: !23, size: 16, offset: 1104)
!9157 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !9148, file: !9147, line: 56, baseType: !45, size: 32, offset: 1120)
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !9148, file: !9147, line: 56, baseType: !45, size: 32, offset: 1152)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !9148, file: !9147, line: 56, baseType: !45, size: 32, offset: 1184)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !9148, file: !9147, line: 56, baseType: !45, size: 32, offset: 1216)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "shdwr", scope: !9148, file: !9147, line: 57, baseType: !45, size: 32, offset: 1248)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "shdwg", scope: !9148, file: !9147, line: 57, baseType: !45, size: 32, offset: 1280)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "shdwb", scope: !9148, file: !9147, line: 57, baseType: !45, size: 32, offset: 1312)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "shdwpad", scope: !9148, file: !9147, line: 57, baseType: !45, size: 32, offset: 1344)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "energy", scope: !9148, file: !9147, line: 59, baseType: !45, size: 32, offset: 1376)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !9148, file: !9147, line: 59, baseType: !45, size: 32, offset: 1408)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "spotsize", scope: !9148, file: !9147, line: 59, baseType: !45, size: 32, offset: 1440)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "spotblend", scope: !9148, file: !9147, line: 59, baseType: !45, size: 32, offset: 1472)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "haint", scope: !9148, file: !9147, line: 60, baseType: !45, size: 32, offset: 1504)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "att1", scope: !9148, file: !9147, line: 63, baseType: !45, size: 32, offset: 1536)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "att2", scope: !9148, file: !9147, line: 63, baseType: !45, size: 32, offset: 1568)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "curfalloff", scope: !9148, file: !9147, line: 64, baseType: !1543, size: 64, offset: 1600)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !9148, file: !9147, line: 65, baseType: !23, size: 16, offset: 1664)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !9148, file: !9147, line: 66, baseType: !23, size: 16, offset: 1680)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !9148, file: !9147, line: 68, baseType: !45, size: 32, offset: 1696)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !9148, file: !9147, line: 68, baseType: !45, size: 32, offset: 1728)
!9177 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !9148, file: !9147, line: 69, baseType: !45, size: 32, offset: 1760)
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !9148, file: !9147, line: 69, baseType: !45, size: 32, offset: 1792)
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "compressthresh", scope: !9148, file: !9147, line: 69, baseType: !45, size: 32, offset: 1824)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "bleedbias", scope: !9148, file: !9147, line: 69, baseType: !45, size: 32, offset: 1856)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !9148, file: !9147, line: 69, baseType: !45, size: 32, offset: 1888)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "bufsize", scope: !9148, file: !9147, line: 70, baseType: !23, size: 16, offset: 1920)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "samp", scope: !9148, file: !9147, line: 70, baseType: !23, size: 16, offset: 1936)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "buffers", scope: !9148, file: !9147, line: 70, baseType: !23, size: 16, offset: 1952)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !9148, file: !9147, line: 70, baseType: !23, size: 16, offset: 1968)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "bufflag", scope: !9148, file: !9147, line: 71, baseType: !17, size: 8, offset: 1984)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "buftype", scope: !9148, file: !9147, line: 71, baseType: !17, size: 8, offset: 1992)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp", scope: !9148, file: !9147, line: 73, baseType: !23, size: 16, offset: 2000)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampy", scope: !9148, file: !9147, line: 73, baseType: !23, size: 16, offset: 2016)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "ray_sampz", scope: !9148, file: !9147, line: 73, baseType: !23, size: 16, offset: 2032)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_type", scope: !9148, file: !9147, line: 74, baseType: !23, size: 16, offset: 2048)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "area_shape", scope: !9148, file: !9147, line: 75, baseType: !23, size: 16, offset: 2064)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "area_size", scope: !9148, file: !9147, line: 76, baseType: !45, size: 32, offset: 2080)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizey", scope: !9148, file: !9147, line: 76, baseType: !45, size: 32, offset: 2112)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "area_sizez", scope: !9148, file: !9147, line: 76, baseType: !45, size: 32, offset: 2144)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh", scope: !9148, file: !9147, line: 77, baseType: !45, size: 32, offset: 2176)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "ray_samp_method", scope: !9148, file: !9147, line: 78, baseType: !23, size: 16, offset: 2208)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "shadowmap_type", scope: !9148, file: !9147, line: 79, baseType: !23, size: 16, offset: 2224)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !9148, file: !9147, line: 82, baseType: !23, size: 16, offset: 2240)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "shadhalostep", scope: !9148, file: !9147, line: 82, baseType: !23, size: 16, offset: 2256)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "sun_effect_type", scope: !9148, file: !9147, line: 85, baseType: !23, size: 16, offset: 2272)
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendtype", scope: !9148, file: !9147, line: 86, baseType: !23, size: 16, offset: 2288)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "horizon_brightness", scope: !9148, file: !9147, line: 87, baseType: !45, size: 32, offset: 2304)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !9148, file: !9147, line: 88, baseType: !45, size: 32, offset: 2336)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "sun_brightness", scope: !9148, file: !9147, line: 89, baseType: !45, size: 32, offset: 2368)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "sun_size", scope: !9148, file: !9147, line: 90, baseType: !45, size: 32, offset: 2400)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "backscattered_light", scope: !9148, file: !9147, line: 91, baseType: !45, size: 32, offset: 2432)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "sun_intensity", scope: !9148, file: !9147, line: 92, baseType: !45, size: 32, offset: 2464)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "atm_turbidity", scope: !9148, file: !9147, line: 93, baseType: !45, size: 32, offset: 2496)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "atm_inscattering_factor", scope: !9148, file: !9147, line: 94, baseType: !45, size: 32, offset: 2528)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "atm_extinction_factor", scope: !9148, file: !9147, line: 95, baseType: !45, size: 32, offset: 2560)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "atm_distance_factor", scope: !9148, file: !9147, line: 96, baseType: !45, size: 32, offset: 2592)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "skyblendfac", scope: !9148, file: !9147, line: 97, baseType: !45, size: 32, offset: 2624)
!9214 = !DIDerivedType(tag: DW_TAG_member, name: "sky_exposure", scope: !9148, file: !9147, line: 98, baseType: !45, size: 32, offset: 2656)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_frustum_size", scope: !9148, file: !9147, line: 99, baseType: !45, size: 32, offset: 2688)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "sky_colorspace", scope: !9148, file: !9147, line: 100, baseType: !23, size: 16, offset: 2720)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !9148, file: !9147, line: 101, baseType: !1494, size: 16, offset: 2736)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !9148, file: !9147, line: 103, baseType: !344, size: 64, offset: 2752)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !9148, file: !9147, line: 104, baseType: !314, size: 1152, offset: 2816)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !9148, file: !9147, line: 105, baseType: !23, size: 16, offset: 3968)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !9148, file: !9147, line: 105, baseType: !23, size: 16, offset: 3984)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !9148, file: !9147, line: 106, baseType: !9223, size: 32, offset: 4000)
!9223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !17, size: 32, elements: !271)
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !9148, file: !9147, line: 109, baseType: !660, size: 64, offset: 4032)
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !9148, file: !9147, line: 112, baseType: !676, size: 64, offset: 4096)
!9226 = !DILocation(line: 3624, column: 8, scope: !9137)
!9227 = !DILocation(line: 3624, column: 12, scope: !9137)
!9228 = !DILocation(line: 3624, column: 16, scope: !9137)
!9229 = !DILocalVariable(name: "lar", scope: !9137, file: !3, line: 3625, type: !3974)
!9230 = !DILocation(line: 3625, column: 11, scope: !9137)
!9231 = !DILocalVariable(name: "go", scope: !9137, file: !3, line: 3626, type: !8499)
!9232 = !DILocation(line: 3626, column: 15, scope: !9137)
!9233 = !DILocalVariable(name: "mat", scope: !9137, file: !3, line: 3627, type: !462)
!9234 = !DILocation(line: 3627, column: 8, scope: !9137)
!9235 = !DILocalVariable(name: "angle", scope: !9137, file: !3, line: 3627, type: !45)
!9236 = !DILocation(line: 3627, column: 19, scope: !9137)
!9237 = !DILocalVariable(name: "xn", scope: !9137, file: !3, line: 3627, type: !45)
!9238 = !DILocation(line: 3627, column: 26, scope: !9137)
!9239 = !DILocalVariable(name: "yn", scope: !9137, file: !3, line: 3627, type: !45)
!9240 = !DILocation(line: 3627, column: 30, scope: !9137)
!9241 = !DILocalVariable(name: "vec", scope: !9137, file: !3, line: 3628, type: !188)
!9242 = !DILocation(line: 3628, column: 8, scope: !9137)
!9243 = !DILocalVariable(name: "c", scope: !9137, file: !3, line: 3629, type: !21)
!9244 = !DILocation(line: 3629, column: 6, scope: !9137)
!9245 = !DILocation(line: 3632, column: 6, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3632, column: 6)
!9247 = !DILocation(line: 3632, column: 8, scope: !9246)
!9248 = !DILocation(line: 3632, column: 6, scope: !9137)
!9249 = !DILocation(line: 3632, column: 16, scope: !9246)
!9250 = !DILocation(line: 3635, column: 6, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3635, column: 6)
!9252 = !DILocation(line: 3635, column: 10, scope: !9251)
!9253 = !DILocation(line: 3635, column: 15, scope: !9251)
!9254 = !DILocation(line: 3635, column: 6, scope: !9137)
!9255 = !DILocation(line: 3636, column: 8, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3636, column: 7)
!9257 = !DILocation(line: 3636, column: 12, scope: !9256)
!9258 = !DILocation(line: 3636, column: 14, scope: !9256)
!9259 = !DILocation(line: 3636, column: 19, scope: !9256)
!9260 = !DILocation(line: 3636, column: 30, scope: !9256)
!9261 = !DILocation(line: 3636, column: 7, scope: !9251)
!9262 = !DILocation(line: 3637, column: 4, scope: !9256)
!9263 = !DILocation(line: 3636, column: 32, scope: !9256)
!9264 = !DILocation(line: 3639, column: 2, scope: !9137)
!9265 = !DILocation(line: 3639, column: 6, scope: !9137)
!9266 = !DILocation(line: 3639, column: 13, scope: !9137)
!9267 = !DILocation(line: 3642, column: 6, scope: !9137)
!9268 = !DILocation(line: 3642, column: 4, scope: !9137)
!9269 = !DILocation(line: 3643, column: 15, scope: !9137)
!9270 = !DILocation(line: 3643, column: 19, scope: !9137)
!9271 = !DILocation(line: 3643, column: 27, scope: !9137)
!9272 = !DILocation(line: 3643, column: 2, scope: !9137)
!9273 = !DILocation(line: 3644, column: 10, scope: !9137)
!9274 = !DILocation(line: 3644, column: 2, scope: !9137)
!9275 = !DILocation(line: 3644, column: 6, scope: !9137)
!9276 = !DILocation(line: 3644, column: 8, scope: !9137)
!9277 = !DILocation(line: 3646, column: 18, scope: !9137)
!9278 = !DILocation(line: 3646, column: 7, scope: !9137)
!9279 = !DILocation(line: 3646, column: 5, scope: !9137)
!9280 = !DILocation(line: 3647, column: 15, scope: !9137)
!9281 = !DILocation(line: 3647, column: 19, scope: !9137)
!9282 = !DILocation(line: 3647, column: 28, scope: !9137)
!9283 = !DILocation(line: 3647, column: 2, scope: !9137)
!9284 = !DILocation(line: 3648, column: 15, scope: !9137)
!9285 = !DILocation(line: 3648, column: 2, scope: !9137)
!9286 = !DILocation(line: 3648, column: 6, scope: !9137)
!9287 = !DILocation(line: 3648, column: 13, scope: !9137)
!9288 = !DILocation(line: 3650, column: 14, scope: !9137)
!9289 = !DILocation(line: 3650, column: 19, scope: !9137)
!9290 = !DILocation(line: 3650, column: 23, scope: !9137)
!9291 = !DILocation(line: 3650, column: 32, scope: !9137)
!9292 = !DILocation(line: 3650, column: 36, scope: !9137)
!9293 = !DILocation(line: 3650, column: 2, scope: !9137)
!9294 = !DILocation(line: 3651, column: 15, scope: !9137)
!9295 = !DILocation(line: 3651, column: 19, scope: !9137)
!9296 = !DILocation(line: 3651, column: 25, scope: !9137)
!9297 = !DILocation(line: 3651, column: 2, scope: !9137)
!9298 = !DILocation(line: 3653, column: 13, scope: !9137)
!9299 = !DILocation(line: 3653, column: 18, scope: !9137)
!9300 = !DILocation(line: 3653, column: 27, scope: !9137)
!9301 = !DILocation(line: 3653, column: 31, scope: !9137)
!9302 = !DILocation(line: 3653, column: 2, scope: !9137)
!9303 = !DILocation(line: 3654, column: 13, scope: !9137)
!9304 = !DILocation(line: 3654, column: 18, scope: !9137)
!9305 = !DILocation(line: 3654, column: 23, scope: !9137)
!9306 = !DILocation(line: 3654, column: 2, scope: !9137)
!9307 = !DILocation(line: 3655, column: 13, scope: !9137)
!9308 = !DILocation(line: 3655, column: 18, scope: !9137)
!9309 = !DILocation(line: 3655, column: 24, scope: !9137)
!9310 = !DILocation(line: 3655, column: 28, scope: !9137)
!9311 = !DILocation(line: 3655, column: 2, scope: !9137)
!9312 = !DILocation(line: 3657, column: 17, scope: !9137)
!9313 = !DILocation(line: 3657, column: 21, scope: !9137)
!9314 = !DILocation(line: 3657, column: 2, scope: !9137)
!9315 = !DILocation(line: 3657, column: 7, scope: !9137)
!9316 = !DILocation(line: 3657, column: 15, scope: !9137)
!9317 = !DILocation(line: 3658, column: 14, scope: !9137)
!9318 = !DILocation(line: 3658, column: 18, scope: !9137)
!9319 = !DILocation(line: 3658, column: 2, scope: !9137)
!9320 = !DILocation(line: 3658, column: 7, scope: !9137)
!9321 = !DILocation(line: 3658, column: 12, scope: !9137)
!9322 = !DILocation(line: 3659, column: 16, scope: !9137)
!9323 = !DILocation(line: 3659, column: 20, scope: !9137)
!9324 = !DILocation(line: 3659, column: 2, scope: !9137)
!9325 = !DILocation(line: 3659, column: 7, scope: !9137)
!9326 = !DILocation(line: 3659, column: 14, scope: !9137)
!9327 = !DILocation(line: 3660, column: 6, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3660, column: 6)
!9329 = !DILocation(line: 3660, column: 11, scope: !9328)
!9330 = !DILocation(line: 3660, column: 18, scope: !9328)
!9331 = !DILocation(line: 3660, column: 6, scope: !9137)
!9332 = !DILocation(line: 3660, column: 23, scope: !9328)
!9333 = !DILocation(line: 3660, column: 28, scope: !9328)
!9334 = !DILocation(line: 3660, column: 35, scope: !9328)
!9335 = !DILocation(line: 3661, column: 16, scope: !9137)
!9336 = !DILocation(line: 3661, column: 20, scope: !9137)
!9337 = !DILocation(line: 3661, column: 2, scope: !9137)
!9338 = !DILocation(line: 3661, column: 7, scope: !9137)
!9339 = !DILocation(line: 3661, column: 14, scope: !9137)
!9340 = !DILocation(line: 3662, column: 19, scope: !9137)
!9341 = !DILocation(line: 3662, column: 23, scope: !9137)
!9342 = !DILocation(line: 3662, column: 2, scope: !9137)
!9343 = !DILocation(line: 3662, column: 7, scope: !9137)
!9344 = !DILocation(line: 3662, column: 17, scope: !9137)
!9345 = !DILocation(line: 3663, column: 14, scope: !9137)
!9346 = !DILocation(line: 3663, column: 18, scope: !9137)
!9347 = !DILocation(line: 3663, column: 2, scope: !9137)
!9348 = !DILocation(line: 3663, column: 7, scope: !9137)
!9349 = !DILocation(line: 3663, column: 12, scope: !9137)
!9350 = !DILocation(line: 3664, column: 22, scope: !9137)
!9351 = !DILocation(line: 3664, column: 26, scope: !9137)
!9352 = !DILocation(line: 3664, column: 2, scope: !9137)
!9353 = !DILocation(line: 3664, column: 7, scope: !9137)
!9354 = !DILocation(line: 3664, column: 20, scope: !9137)
!9355 = !DILocation(line: 3665, column: 17, scope: !9137)
!9356 = !DILocation(line: 3665, column: 21, scope: !9137)
!9357 = !DILocation(line: 3665, column: 2, scope: !9137)
!9358 = !DILocation(line: 3665, column: 7, scope: !9137)
!9359 = !DILocation(line: 3665, column: 15, scope: !9137)
!9360 = !DILocation(line: 3666, column: 17, scope: !9137)
!9361 = !DILocation(line: 3666, column: 21, scope: !9137)
!9362 = !DILocation(line: 3666, column: 2, scope: !9137)
!9363 = !DILocation(line: 3666, column: 7, scope: !9137)
!9364 = !DILocation(line: 3666, column: 15, scope: !9137)
!9365 = !DILocation(line: 3668, column: 14, scope: !9137)
!9366 = !DILocation(line: 3668, column: 18, scope: !9137)
!9367 = !DILocation(line: 3668, column: 2, scope: !9137)
!9368 = !DILocation(line: 3668, column: 7, scope: !9137)
!9369 = !DILocation(line: 3668, column: 12, scope: !9137)
!9370 = !DILocation(line: 3669, column: 24, scope: !9137)
!9371 = !DILocation(line: 3669, column: 28, scope: !9137)
!9372 = !DILocation(line: 3669, column: 2, scope: !9137)
!9373 = !DILocation(line: 3669, column: 7, scope: !9137)
!9374 = !DILocation(line: 3669, column: 22, scope: !9137)
!9375 = !DILocation(line: 3671, column: 13, scope: !9137)
!9376 = !DILocation(line: 3671, column: 17, scope: !9137)
!9377 = !DILocation(line: 3671, column: 2, scope: !9137)
!9378 = !DILocation(line: 3671, column: 7, scope: !9137)
!9379 = !DILocation(line: 3671, column: 11, scope: !9137)
!9380 = !DILocation(line: 3672, column: 13, scope: !9137)
!9381 = !DILocation(line: 3672, column: 17, scope: !9137)
!9382 = !DILocation(line: 3672, column: 2, scope: !9137)
!9383 = !DILocation(line: 3672, column: 7, scope: !9137)
!9384 = !DILocation(line: 3672, column: 11, scope: !9137)
!9385 = !DILocation(line: 3674, column: 15, scope: !9137)
!9386 = !DILocation(line: 3674, column: 19, scope: !9137)
!9387 = !DILocation(line: 3674, column: 2, scope: !9137)
!9388 = !DILocation(line: 3674, column: 7, scope: !9137)
!9389 = !DILocation(line: 3674, column: 13, scope: !9137)
!9390 = !DILocation(line: 3675, column: 6, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3675, column: 6)
!9392 = !DILocation(line: 3675, column: 10, scope: !9391)
!9393 = !DILocation(line: 3675, column: 15, scope: !9391)
!9394 = !DILocation(line: 3675, column: 6, scope: !9137)
!9395 = !DILocation(line: 3675, column: 39, scope: !9391)
!9396 = !DILocation(line: 3675, column: 44, scope: !9391)
!9397 = !DILocation(line: 3675, column: 38, scope: !9391)
!9398 = !DILocation(line: 3675, column: 25, scope: !9391)
!9399 = !DILocation(line: 3675, column: 30, scope: !9391)
!9400 = !DILocation(line: 3675, column: 36, scope: !9391)
!9401 = !DILocation(line: 3677, column: 16, scope: !9137)
!9402 = !DILocation(line: 3677, column: 15, scope: !9137)
!9403 = !DILocation(line: 3677, column: 2, scope: !9137)
!9404 = !DILocation(line: 3677, column: 7, scope: !9137)
!9405 = !DILocation(line: 3677, column: 13, scope: !9137)
!9406 = !DILocation(line: 3678, column: 16, scope: !9137)
!9407 = !DILocation(line: 3678, column: 15, scope: !9137)
!9408 = !DILocation(line: 3678, column: 2, scope: !9137)
!9409 = !DILocation(line: 3678, column: 7, scope: !9137)
!9410 = !DILocation(line: 3678, column: 13, scope: !9137)
!9411 = !DILocation(line: 3679, column: 16, scope: !9137)
!9412 = !DILocation(line: 3679, column: 15, scope: !9137)
!9413 = !DILocation(line: 3679, column: 2, scope: !9137)
!9414 = !DILocation(line: 3679, column: 7, scope: !9137)
!9415 = !DILocation(line: 3679, column: 13, scope: !9137)
!9416 = !DILocation(line: 3680, column: 15, scope: !9137)
!9417 = !DILocation(line: 3680, column: 20, scope: !9137)
!9418 = !DILocation(line: 3680, column: 2, scope: !9137)
!9419 = !DILocation(line: 3681, column: 14, scope: !9137)
!9420 = !DILocation(line: 3681, column: 2, scope: !9137)
!9421 = !DILocation(line: 3681, column: 7, scope: !9137)
!9422 = !DILocation(line: 3681, column: 12, scope: !9137)
!9423 = !DILocation(line: 3682, column: 14, scope: !9137)
!9424 = !DILocation(line: 3682, column: 2, scope: !9137)
!9425 = !DILocation(line: 3682, column: 7, scope: !9137)
!9426 = !DILocation(line: 3682, column: 12, scope: !9137)
!9427 = !DILocation(line: 3683, column: 14, scope: !9137)
!9428 = !DILocation(line: 3683, column: 2, scope: !9137)
!9429 = !DILocation(line: 3683, column: 7, scope: !9137)
!9430 = !DILocation(line: 3683, column: 12, scope: !9137)
!9431 = !DILocation(line: 3684, column: 13, scope: !9137)
!9432 = !DILocation(line: 3684, column: 17, scope: !9137)
!9433 = !DILocation(line: 3684, column: 2, scope: !9137)
!9434 = !DILocation(line: 3684, column: 7, scope: !9137)
!9435 = !DILocation(line: 3684, column: 11, scope: !9137)
!9436 = !DILocation(line: 3685, column: 14, scope: !9137)
!9437 = !DILocation(line: 3685, column: 18, scope: !9137)
!9438 = !DILocation(line: 3685, column: 2, scope: !9137)
!9439 = !DILocation(line: 3685, column: 7, scope: !9137)
!9440 = !DILocation(line: 3685, column: 12, scope: !9137)
!9441 = !DILocation(line: 3686, column: 15, scope: !9137)
!9442 = !DILocation(line: 3686, column: 20, scope: !9137)
!9443 = !DILocation(line: 3686, column: 25, scope: !9137)
!9444 = !DILocation(line: 3686, column: 30, scope: !9137)
!9445 = !DILocation(line: 3686, column: 24, scope: !9137)
!9446 = !DILocation(line: 3686, column: 2, scope: !9137)
!9447 = !DILocation(line: 3686, column: 7, scope: !9137)
!9448 = !DILocation(line: 3686, column: 13, scope: !9137)
!9449 = !DILocation(line: 3687, column: 10, scope: !9137)
!9450 = !DILocation(line: 3687, column: 15, scope: !9137)
!9451 = !DILocation(line: 3687, column: 22, scope: !9137)
!9452 = !DILocation(line: 3687, column: 26, scope: !9137)
!9453 = !DILocation(line: 3687, column: 21, scope: !9137)
!9454 = !DILocation(line: 3687, column: 2, scope: !9137)
!9455 = !DILocation(line: 3687, column: 7, scope: !9137)
!9456 = !DILocation(line: 3687, column: 8, scope: !9137)
!9457 = !DILocation(line: 3688, column: 10, scope: !9137)
!9458 = !DILocation(line: 3688, column: 15, scope: !9137)
!9459 = !DILocation(line: 3688, column: 22, scope: !9137)
!9460 = !DILocation(line: 3688, column: 26, scope: !9137)
!9461 = !DILocation(line: 3688, column: 21, scope: !9137)
!9462 = !DILocation(line: 3688, column: 2, scope: !9137)
!9463 = !DILocation(line: 3688, column: 7, scope: !9137)
!9464 = !DILocation(line: 3688, column: 8, scope: !9137)
!9465 = !DILocation(line: 3689, column: 10, scope: !9137)
!9466 = !DILocation(line: 3689, column: 15, scope: !9137)
!9467 = !DILocation(line: 3689, column: 22, scope: !9137)
!9468 = !DILocation(line: 3689, column: 26, scope: !9137)
!9469 = !DILocation(line: 3689, column: 21, scope: !9137)
!9470 = !DILocation(line: 3689, column: 2, scope: !9137)
!9471 = !DILocation(line: 3689, column: 7, scope: !9137)
!9472 = !DILocation(line: 3689, column: 8, scope: !9137)
!9473 = !DILocation(line: 3690, column: 14, scope: !9137)
!9474 = !DILocation(line: 3690, column: 18, scope: !9137)
!9475 = !DILocation(line: 3690, column: 2, scope: !9137)
!9476 = !DILocation(line: 3690, column: 7, scope: !9137)
!9477 = !DILocation(line: 3690, column: 12, scope: !9137)
!9478 = !DILocation(line: 3691, column: 14, scope: !9137)
!9479 = !DILocation(line: 3691, column: 18, scope: !9137)
!9480 = !DILocation(line: 3691, column: 2, scope: !9137)
!9481 = !DILocation(line: 3691, column: 7, scope: !9137)
!9482 = !DILocation(line: 3691, column: 12, scope: !9137)
!9483 = !DILocation(line: 3692, column: 14, scope: !9137)
!9484 = !DILocation(line: 3692, column: 18, scope: !9137)
!9485 = !DILocation(line: 3692, column: 2, scope: !9137)
!9486 = !DILocation(line: 3692, column: 7, scope: !9137)
!9487 = !DILocation(line: 3692, column: 12, scope: !9137)
!9488 = !DILocation(line: 3693, column: 10, scope: !9137)
!9489 = !DILocation(line: 3693, column: 14, scope: !9137)
!9490 = !DILocation(line: 3693, column: 2, scope: !9137)
!9491 = !DILocation(line: 3693, column: 7, scope: !9137)
!9492 = !DILocation(line: 3693, column: 8, scope: !9137)
!9493 = !DILocation(line: 3696, column: 17, scope: !9137)
!9494 = !DILocation(line: 3696, column: 21, scope: !9137)
!9495 = !DILocation(line: 3696, column: 2, scope: !9137)
!9496 = !DILocation(line: 3696, column: 7, scope: !9137)
!9497 = !DILocation(line: 3696, column: 15, scope: !9137)
!9498 = !DILocation(line: 3697, column: 18, scope: !9137)
!9499 = !DILocation(line: 3697, column: 22, scope: !9137)
!9500 = !DILocation(line: 3697, column: 2, scope: !9137)
!9501 = !DILocation(line: 3697, column: 7, scope: !9137)
!9502 = !DILocation(line: 3697, column: 16, scope: !9137)
!9503 = !DILocation(line: 3698, column: 18, scope: !9137)
!9504 = !DILocation(line: 3698, column: 22, scope: !9137)
!9505 = !DILocation(line: 3698, column: 2, scope: !9137)
!9506 = !DILocation(line: 3698, column: 7, scope: !9137)
!9507 = !DILocation(line: 3698, column: 16, scope: !9137)
!9508 = !DILocation(line: 3700, column: 18, scope: !9137)
!9509 = !DILocation(line: 3700, column: 22, scope: !9137)
!9510 = !DILocation(line: 3700, column: 2, scope: !9137)
!9511 = !DILocation(line: 3700, column: 7, scope: !9137)
!9512 = !DILocation(line: 3700, column: 16, scope: !9137)
!9513 = !DILocation(line: 3701, column: 19, scope: !9137)
!9514 = !DILocation(line: 3701, column: 23, scope: !9137)
!9515 = !DILocation(line: 3701, column: 2, scope: !9137)
!9516 = !DILocation(line: 3701, column: 7, scope: !9137)
!9517 = !DILocation(line: 3701, column: 17, scope: !9137)
!9518 = !DILocation(line: 3702, column: 19, scope: !9137)
!9519 = !DILocation(line: 3702, column: 23, scope: !9137)
!9520 = !DILocation(line: 3702, column: 2, scope: !9137)
!9521 = !DILocation(line: 3702, column: 7, scope: !9137)
!9522 = !DILocation(line: 3702, column: 17, scope: !9137)
!9523 = !DILocation(line: 3704, column: 19, scope: !9137)
!9524 = !DILocation(line: 3704, column: 23, scope: !9137)
!9525 = !DILocation(line: 3704, column: 2, scope: !9137)
!9526 = !DILocation(line: 3704, column: 7, scope: !9137)
!9527 = !DILocation(line: 3704, column: 17, scope: !9137)
!9528 = !DILocation(line: 3708, column: 6, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3708, column: 6)
!9530 = !DILocation(line: 3708, column: 57, scope: !9529)
!9531 = !DILocation(line: 3708, column: 61, scope: !9529)
!9532 = !DILocation(line: 3708, column: 65, scope: !9529)
!9533 = !DILocation(line: 3708, column: 70, scope: !9529)
!9534 = !DILocation(line: 3708, column: 6, scope: !9137)
!9535 = !DILocation(line: 3709, column: 7, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 3709, column: 7)
!9537 = !DILocation(line: 3709, column: 7, scope: !9529)
!9538 = !DILocation(line: 3710, column: 8, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 3710, column: 8)
!9540 = !DILocation(line: 3710, column: 12, scope: !9539)
!9541 = !DILocation(line: 3710, column: 28, scope: !9539)
!9542 = !DILocation(line: 3710, column: 8, scope: !9536)
!9543 = !DILocation(line: 3710, column: 49, scope: !9539)
!9544 = !DILocation(line: 3710, column: 53, scope: !9539)
!9545 = !DILocation(line: 3710, column: 69, scope: !9539)
!9546 = !DILocation(line: 3710, column: 31, scope: !9539)
!9547 = !DILocation(line: 3712, column: 24, scope: !9137)
!9548 = !DILocation(line: 3712, column: 28, scope: !9137)
!9549 = !DILocation(line: 3712, column: 2, scope: !9137)
!9550 = !DILocation(line: 3712, column: 7, scope: !9137)
!9551 = !DILocation(line: 3712, column: 22, scope: !9137)
!9552 = !DILocation(line: 3713, column: 22, scope: !9137)
!9553 = !DILocation(line: 3713, column: 26, scope: !9137)
!9554 = !DILocation(line: 3713, column: 2, scope: !9137)
!9555 = !DILocation(line: 3713, column: 7, scope: !9137)
!9556 = !DILocation(line: 3713, column: 20, scope: !9137)
!9557 = !DILocation(line: 3715, column: 21, scope: !9137)
!9558 = !DILocation(line: 3715, column: 25, scope: !9137)
!9559 = !DILocation(line: 3715, column: 2, scope: !9137)
!9560 = !DILocation(line: 3715, column: 7, scope: !9137)
!9561 = !DILocation(line: 3715, column: 19, scope: !9137)
!9562 = !DILocation(line: 3716, column: 2, scope: !9137)
!9563 = !DILocation(line: 3716, column: 7, scope: !9137)
!9564 = !DILocation(line: 3716, column: 14, scope: !9137)
!9565 = !DILocation(line: 3718, column: 7, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3718, column: 7)
!9567 = !DILocation(line: 3718, column: 7, scope: !9137)
!9568 = !DILocation(line: 3719, column: 21, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 3718, column: 43)
!9570 = !DILocation(line: 3719, column: 26, scope: !9569)
!9571 = !DILocation(line: 3719, column: 35, scope: !9569)
!9572 = !DILocation(line: 3719, column: 40, scope: !9569)
!9573 = !DILocation(line: 3719, column: 34, scope: !9569)
!9574 = !DILocation(line: 3719, column: 3, scope: !9569)
!9575 = !DILocation(line: 3719, column: 8, scope: !9569)
!9576 = !DILocation(line: 3719, column: 19, scope: !9569)
!9577 = !DILocation(line: 3720, column: 3, scope: !9569)
!9578 = !DILocation(line: 3720, column: 8, scope: !9569)
!9579 = !DILocation(line: 3720, column: 19, scope: !9569)
!9580 = !DILocation(line: 3721, column: 20, scope: !9569)
!9581 = !DILocation(line: 3721, column: 25, scope: !9569)
!9582 = !DILocation(line: 3721, column: 3, scope: !9569)
!9583 = !DILocation(line: 3721, column: 8, scope: !9569)
!9584 = !DILocation(line: 3721, column: 18, scope: !9569)
!9585 = !DILocation(line: 3722, column: 2, scope: !9569)
!9586 = !DILocation(line: 3723, column: 11, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 3723, column: 11)
!9588 = !DILocation(line: 3723, column: 16, scope: !9587)
!9589 = !DILocation(line: 3723, column: 20, scope: !9587)
!9590 = !DILocation(line: 3723, column: 11, scope: !9566)
!9591 = !DILocation(line: 3724, column: 11, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3723, column: 31)
!9593 = !DILocation(line: 3724, column: 16, scope: !9592)
!9594 = !DILocation(line: 3724, column: 3, scope: !9592)
!9595 = !DILocation(line: 3726, column: 22, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 3724, column: 28)
!9597 = !DILocation(line: 3726, column: 27, scope: !9596)
!9598 = !DILocation(line: 3726, column: 36, scope: !9596)
!9599 = !DILocation(line: 3726, column: 41, scope: !9596)
!9600 = !DILocation(line: 3726, column: 35, scope: !9596)
!9601 = !DILocation(line: 3726, column: 4, scope: !9596)
!9602 = !DILocation(line: 3726, column: 9, scope: !9596)
!9603 = !DILocation(line: 3726, column: 20, scope: !9596)
!9604 = !DILocation(line: 3727, column: 20, scope: !9596)
!9605 = !DILocation(line: 3727, column: 25, scope: !9596)
!9606 = !DILocation(line: 3727, column: 4, scope: !9596)
!9607 = !DILocation(line: 3727, column: 9, scope: !9596)
!9608 = !DILocation(line: 3727, column: 18, scope: !9596)
!9609 = !DILocation(line: 3728, column: 21, scope: !9596)
!9610 = !DILocation(line: 3728, column: 26, scope: !9596)
!9611 = !DILocation(line: 3728, column: 4, scope: !9596)
!9612 = !DILocation(line: 3728, column: 9, scope: !9596)
!9613 = !DILocation(line: 3728, column: 19, scope: !9596)
!9614 = !DILocation(line: 3729, column: 4, scope: !9596)
!9615 = !DILocation(line: 3731, column: 22, scope: !9596)
!9616 = !DILocation(line: 3731, column: 27, scope: !9596)
!9617 = !DILocation(line: 3731, column: 36, scope: !9596)
!9618 = !DILocation(line: 3731, column: 41, scope: !9596)
!9619 = !DILocation(line: 3731, column: 35, scope: !9596)
!9620 = !DILocation(line: 3731, column: 4, scope: !9596)
!9621 = !DILocation(line: 3731, column: 9, scope: !9596)
!9622 = !DILocation(line: 3731, column: 20, scope: !9596)
!9623 = !DILocation(line: 3732, column: 4, scope: !9596)
!9624 = !DILocation(line: 3734, column: 22, scope: !9596)
!9625 = !DILocation(line: 3734, column: 27, scope: !9596)
!9626 = !DILocation(line: 3734, column: 36, scope: !9596)
!9627 = !DILocation(line: 3734, column: 41, scope: !9596)
!9628 = !DILocation(line: 3734, column: 35, scope: !9596)
!9629 = !DILocation(line: 3734, column: 50, scope: !9596)
!9630 = !DILocation(line: 3734, column: 55, scope: !9596)
!9631 = !DILocation(line: 3734, column: 49, scope: !9596)
!9632 = !DILocation(line: 3734, column: 4, scope: !9596)
!9633 = !DILocation(line: 3734, column: 9, scope: !9596)
!9634 = !DILocation(line: 3734, column: 20, scope: !9596)
!9635 = !DILocation(line: 3735, column: 20, scope: !9596)
!9636 = !DILocation(line: 3735, column: 25, scope: !9596)
!9637 = !DILocation(line: 3735, column: 4, scope: !9596)
!9638 = !DILocation(line: 3735, column: 9, scope: !9596)
!9639 = !DILocation(line: 3735, column: 18, scope: !9596)
!9640 = !DILocation(line: 3736, column: 20, scope: !9596)
!9641 = !DILocation(line: 3736, column: 25, scope: !9596)
!9642 = !DILocation(line: 3736, column: 4, scope: !9596)
!9643 = !DILocation(line: 3736, column: 9, scope: !9596)
!9644 = !DILocation(line: 3736, column: 18, scope: !9596)
!9645 = !DILocation(line: 3737, column: 21, scope: !9596)
!9646 = !DILocation(line: 3737, column: 26, scope: !9596)
!9647 = !DILocation(line: 3737, column: 4, scope: !9596)
!9648 = !DILocation(line: 3737, column: 9, scope: !9596)
!9649 = !DILocation(line: 3737, column: 19, scope: !9596)
!9650 = !DILocation(line: 3738, column: 21, scope: !9596)
!9651 = !DILocation(line: 3738, column: 26, scope: !9596)
!9652 = !DILocation(line: 3738, column: 4, scope: !9596)
!9653 = !DILocation(line: 3738, column: 9, scope: !9596)
!9654 = !DILocation(line: 3738, column: 19, scope: !9596)
!9655 = !DILocation(line: 3739, column: 4, scope: !9596)
!9656 = !DILocation(line: 3741, column: 22, scope: !9596)
!9657 = !DILocation(line: 3741, column: 27, scope: !9596)
!9658 = !DILocation(line: 3741, column: 36, scope: !9596)
!9659 = !DILocation(line: 3741, column: 41, scope: !9596)
!9660 = !DILocation(line: 3741, column: 35, scope: !9596)
!9661 = !DILocation(line: 3741, column: 51, scope: !9596)
!9662 = !DILocation(line: 3741, column: 56, scope: !9596)
!9663 = !DILocation(line: 3741, column: 50, scope: !9596)
!9664 = !DILocation(line: 3741, column: 4, scope: !9596)
!9665 = !DILocation(line: 3741, column: 9, scope: !9596)
!9666 = !DILocation(line: 3741, column: 20, scope: !9596)
!9667 = !DILocation(line: 3742, column: 4, scope: !9596)
!9668 = !DILocation(line: 3745, column: 21, scope: !9592)
!9669 = !DILocation(line: 3745, column: 3, scope: !9592)
!9670 = !DILocation(line: 3746, column: 21, scope: !9592)
!9671 = !DILocation(line: 3746, column: 3, scope: !9592)
!9672 = !DILocation(line: 3747, column: 2, scope: !9592)
!9673 = !DILocation(line: 3748, column: 11, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3748, column: 11)
!9675 = !DILocation(line: 3748, column: 16, scope: !9674)
!9676 = !DILocation(line: 3748, column: 20, scope: !9674)
!9677 = !DILocation(line: 3748, column: 11, scope: !9587)
!9678 = !DILocation(line: 3749, column: 21, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9674, file: !3, line: 3748, column: 30)
!9680 = !DILocation(line: 3749, column: 26, scope: !9679)
!9681 = !DILocation(line: 3749, column: 35, scope: !9679)
!9682 = !DILocation(line: 3749, column: 40, scope: !9679)
!9683 = !DILocation(line: 3749, column: 34, scope: !9679)
!9684 = !DILocation(line: 3749, column: 3, scope: !9679)
!9685 = !DILocation(line: 3749, column: 8, scope: !9679)
!9686 = !DILocation(line: 3749, column: 19, scope: !9679)
!9687 = !DILocation(line: 3750, column: 3, scope: !9679)
!9688 = !DILocation(line: 3750, column: 8, scope: !9679)
!9689 = !DILocation(line: 3750, column: 19, scope: !9679)
!9690 = !DILocation(line: 3751, column: 20, scope: !9679)
!9691 = !DILocation(line: 3751, column: 25, scope: !9679)
!9692 = !DILocation(line: 3751, column: 3, scope: !9679)
!9693 = !DILocation(line: 3751, column: 8, scope: !9679)
!9694 = !DILocation(line: 3751, column: 18, scope: !9679)
!9695 = !DILocation(line: 3753, column: 8, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9679, file: !3, line: 3753, column: 7)
!9697 = !DILocation(line: 3753, column: 12, scope: !9696)
!9698 = !DILocation(line: 3753, column: 28, scope: !9696)
!9699 = !DILocation(line: 3753, column: 49, scope: !9696)
!9700 = !DILocation(line: 3754, column: 8, scope: !9696)
!9701 = !DILocation(line: 3754, column: 12, scope: !9696)
!9702 = !DILocation(line: 3754, column: 28, scope: !9696)
!9703 = !DILocation(line: 3753, column: 7, scope: !9679)
!9704 = !DILocation(line: 3756, column: 34, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 3755, column: 3)
!9706 = !DILocation(line: 3756, column: 18, scope: !9705)
!9707 = !DILocation(line: 3756, column: 4, scope: !9705)
!9708 = !DILocation(line: 3756, column: 9, scope: !9705)
!9709 = !DILocation(line: 3756, column: 16, scope: !9705)
!9710 = !DILocation(line: 3757, column: 31, scope: !9705)
!9711 = !DILocation(line: 3757, column: 35, scope: !9705)
!9712 = !DILocation(line: 3757, column: 4, scope: !9705)
!9713 = !DILocation(line: 3757, column: 9, scope: !9705)
!9714 = !DILocation(line: 3757, column: 17, scope: !9705)
!9715 = !DILocation(line: 3757, column: 29, scope: !9705)
!9716 = !DILocation(line: 3759, column: 15, scope: !9705)
!9717 = !DILocation(line: 3759, column: 20, scope: !9705)
!9718 = !DILocation(line: 3759, column: 24, scope: !9705)
!9719 = !DILocation(line: 3759, column: 4, scope: !9705)
!9720 = !DILocation(line: 3760, column: 17, scope: !9705)
!9721 = !DILocation(line: 3760, column: 4, scope: !9705)
!9722 = !DILocation(line: 3762, column: 15, scope: !9705)
!9723 = !DILocation(line: 3762, column: 20, scope: !9705)
!9724 = !DILocation(line: 3762, column: 28, scope: !9705)
!9725 = !DILocation(line: 3762, column: 32, scope: !9705)
!9726 = !DILocation(line: 3762, column: 47, scope: !9705)
!9727 = !DILocation(line: 3762, column: 52, scope: !9705)
!9728 = !DILocation(line: 3762, column: 56, scope: !9705)
!9729 = !DILocation(line: 3763, column: 6, scope: !9705)
!9730 = !DILocation(line: 3763, column: 10, scope: !9705)
!9731 = !DILocation(line: 3763, column: 18, scope: !9705)
!9732 = !DILocation(line: 3763, column: 22, scope: !9705)
!9733 = !DILocation(line: 3763, column: 38, scope: !9705)
!9734 = !DILocation(line: 3763, column: 42, scope: !9705)
!9735 = !DILocation(line: 3763, column: 52, scope: !9705)
!9736 = !DILocation(line: 3763, column: 56, scope: !9705)
!9737 = !DILocation(line: 3764, column: 9, scope: !9705)
!9738 = !DILocation(line: 3764, column: 13, scope: !9705)
!9739 = !DILocation(line: 3764, column: 26, scope: !9705)
!9740 = !DILocation(line: 3764, column: 30, scope: !9705)
!9741 = !DILocation(line: 3764, column: 44, scope: !9705)
!9742 = !DILocation(line: 3764, column: 48, scope: !9705)
!9743 = !DILocation(line: 3764, column: 62, scope: !9705)
!9744 = !DILocation(line: 3764, column: 66, scope: !9705)
!9745 = !DILocation(line: 3762, column: 4, scope: !9705)
!9746 = !DILocation(line: 3766, column: 19, scope: !9705)
!9747 = !DILocation(line: 3766, column: 24, scope: !9705)
!9748 = !DILocation(line: 3766, column: 32, scope: !9705)
!9749 = !DILocation(line: 3766, column: 36, scope: !9705)
!9750 = !DILocation(line: 3766, column: 61, scope: !9705)
!9751 = !DILocation(line: 3766, column: 65, scope: !9705)
!9752 = !DILocation(line: 3766, column: 90, scope: !9705)
!9753 = !DILocation(line: 3766, column: 94, scope: !9705)
!9754 = !DILocation(line: 3767, column: 6, scope: !9705)
!9755 = !DILocation(line: 3767, column: 10, scope: !9705)
!9756 = !DILocation(line: 3766, column: 4, scope: !9705)
!9757 = !DILocation(line: 3768, column: 3, scope: !9705)
!9758 = !DILocation(line: 3769, column: 2, scope: !9679)
!9759 = !DILocation(line: 3770, column: 7, scope: !9674)
!9760 = !DILocation(line: 3770, column: 12, scope: !9674)
!9761 = !DILocation(line: 3770, column: 23, scope: !9674)
!9762 = !DILocation(line: 3772, column: 15, scope: !9137)
!9763 = !DILocation(line: 3772, column: 19, scope: !9137)
!9764 = !DILocation(line: 3772, column: 2, scope: !9137)
!9765 = !DILocation(line: 3772, column: 7, scope: !9137)
!9766 = !DILocation(line: 3772, column: 13, scope: !9137)
!9767 = !DILocation(line: 3773, column: 6, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3773, column: 6)
!9769 = !DILocation(line: 3773, column: 11, scope: !9768)
!9770 = !DILocation(line: 3773, column: 16, scope: !9768)
!9771 = !DILocation(line: 3773, column: 6, scope: !9137)
!9772 = !DILocation(line: 3774, column: 7, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 3774, column: 7)
!9774 = distinct !DILexicalBlock(scope: !9768, file: !3, line: 3773, column: 27)
!9775 = !DILocation(line: 3774, column: 12, scope: !9773)
!9776 = !DILocation(line: 3774, column: 19, scope: !9773)
!9777 = !DILocation(line: 3774, column: 7, scope: !9774)
!9778 = !DILocation(line: 3774, column: 39, scope: !9773)
!9779 = !DILocation(line: 3774, column: 44, scope: !9773)
!9780 = !DILocation(line: 3774, column: 51, scope: !9773)
!9781 = !DILocation(line: 3775, column: 2, scope: !9774)
!9782 = !DILocation(line: 3776, column: 20, scope: !9137)
!9783 = !DILocation(line: 3776, column: 25, scope: !9137)
!9784 = !DILocation(line: 3776, column: 32, scope: !9137)
!9785 = !DILocation(line: 3776, column: 15, scope: !9137)
!9786 = !DILocation(line: 3776, column: 2, scope: !9137)
!9787 = !DILocation(line: 3776, column: 7, scope: !9137)
!9788 = !DILocation(line: 3776, column: 13, scope: !9137)
!9789 = !DILocation(line: 3777, column: 21, scope: !9137)
!9790 = !DILocation(line: 3777, column: 26, scope: !9137)
!9791 = !DILocation(line: 3777, column: 20, scope: !9137)
!9792 = !DILocation(line: 3777, column: 34, scope: !9137)
!9793 = !DILocation(line: 3777, column: 38, scope: !9137)
!9794 = !DILocation(line: 3777, column: 33, scope: !9137)
!9795 = !DILocation(line: 3777, column: 2, scope: !9137)
!9796 = !DILocation(line: 3777, column: 7, scope: !9137)
!9797 = !DILocation(line: 3777, column: 13, scope: !9137)
!9798 = !DILocation(line: 3779, column: 9, scope: !9137)
!9799 = !DILocation(line: 3779, column: 14, scope: !9137)
!9800 = !DILocation(line: 3779, column: 2, scope: !9137)
!9801 = !DILocation(line: 3779, column: 20, scope: !9137)
!9802 = !DILocation(line: 3779, column: 24, scope: !9137)
!9803 = !DILocation(line: 3781, column: 13, scope: !9137)
!9804 = !DILocation(line: 3781, column: 17, scope: !9137)
!9805 = !DILocation(line: 3781, column: 21, scope: !9137)
!9806 = !DILocation(line: 3781, column: 2, scope: !9137)
!9807 = !DILocation(line: 3781, column: 7, scope: !9137)
!9808 = !DILocation(line: 3781, column: 11, scope: !9137)
!9809 = !DILocation(line: 3783, column: 22, scope: !9137)
!9810 = !DILocation(line: 3783, column: 26, scope: !9137)
!9811 = !DILocation(line: 3783, column: 2, scope: !9137)
!9812 = !DILocation(line: 3783, column: 7, scope: !9137)
!9813 = !DILocation(line: 3783, column: 20, scope: !9137)
!9814 = !DILocation(line: 3784, column: 12, scope: !9137)
!9815 = !DILocation(line: 3784, column: 16, scope: !9137)
!9816 = !DILocation(line: 3784, column: 2, scope: !9137)
!9817 = !DILocation(line: 3784, column: 7, scope: !9137)
!9818 = !DILocation(line: 3784, column: 10, scope: !9137)
!9819 = !DILocation(line: 3785, column: 12, scope: !9137)
!9820 = !DILocation(line: 3785, column: 16, scope: !9137)
!9821 = !DILocation(line: 3785, column: 2, scope: !9137)
!9822 = !DILocation(line: 3785, column: 7, scope: !9137)
!9823 = !DILocation(line: 3785, column: 10, scope: !9137)
!9824 = !DILocation(line: 3786, column: 38, scope: !9137)
!9825 = !DILocation(line: 3786, column: 42, scope: !9137)
!9826 = !DILocation(line: 3786, column: 20, scope: !9137)
!9827 = !DILocation(line: 3786, column: 2, scope: !9137)
!9828 = !DILocation(line: 3786, column: 7, scope: !9137)
!9829 = !DILocation(line: 3786, column: 18, scope: !9137)
!9830 = !DILocation(line: 3788, column: 6, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3788, column: 6)
!9832 = !DILocation(line: 3788, column: 11, scope: !9831)
!9833 = !DILocation(line: 3788, column: 6, scope: !9137)
!9834 = !DILocation(line: 3790, column: 27, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 3788, column: 23)
!9836 = !DILocation(line: 3790, column: 32, scope: !9835)
!9837 = !DILocation(line: 3790, column: 3, scope: !9835)
!9838 = !DILocation(line: 3791, column: 2, scope: !9835)
!9839 = !DILocation(line: 3793, column: 6, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3793, column: 6)
!9841 = !DILocation(line: 3793, column: 11, scope: !9840)
!9842 = !DILocation(line: 3793, column: 15, scope: !9840)
!9843 = !DILocation(line: 3793, column: 6, scope: !9137)
!9844 = !DILocation(line: 3795, column: 16, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 3793, column: 26)
!9846 = !DILocation(line: 3795, column: 21, scope: !9845)
!9847 = !DILocation(line: 3795, column: 3, scope: !9845)
!9848 = !DILocation(line: 3796, column: 16, scope: !9845)
!9849 = !DILocation(line: 3796, column: 21, scope: !9845)
!9850 = !DILocation(line: 3796, column: 3, scope: !9845)
!9851 = !DILocation(line: 3797, column: 16, scope: !9845)
!9852 = !DILocation(line: 3797, column: 21, scope: !9845)
!9853 = !DILocation(line: 3797, column: 3, scope: !9845)
!9854 = !DILocation(line: 3799, column: 15, scope: !9845)
!9855 = !DILocation(line: 3799, column: 20, scope: !9845)
!9856 = !DILocation(line: 3799, column: 8, scope: !9845)
!9857 = !DILocation(line: 3799, column: 6, scope: !9845)
!9858 = !DILocation(line: 3800, column: 13, scope: !9845)
!9859 = !DILocation(line: 3800, column: 8, scope: !9845)
!9860 = !DILocation(line: 3800, column: 24, scope: !9845)
!9861 = !DILocation(line: 3800, column: 19, scope: !9845)
!9862 = !DILocation(line: 3800, column: 17, scope: !9845)
!9863 = !DILocation(line: 3800, column: 6, scope: !9845)
!9864 = !DILocation(line: 3801, column: 26, scope: !9845)
!9865 = !DILocation(line: 3801, column: 24, scope: !9845)
!9866 = !DILocation(line: 3801, column: 3, scope: !9845)
!9867 = !DILocation(line: 3801, column: 8, scope: !9845)
!9868 = !DILocation(line: 3801, column: 18, scope: !9845)
!9869 = !DILocation(line: 3803, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 3803, column: 7)
!9871 = !DILocation(line: 3803, column: 12, scope: !9870)
!9872 = !DILocation(line: 3803, column: 17, scope: !9870)
!9873 = !DILocation(line: 3803, column: 7, scope: !9845)
!9874 = !DILocation(line: 3804, column: 9, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9876, file: !3, line: 3804, column: 8)
!9876 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 3803, column: 34)
!9877 = !DILocation(line: 3804, column: 14, scope: !9875)
!9878 = !DILocation(line: 3804, column: 19, scope: !9875)
!9879 = !DILocation(line: 3804, column: 47, scope: !9875)
!9880 = !DILocation(line: 3804, column: 8, scope: !9876)
!9881 = !DILocation(line: 3804, column: 52, scope: !9875)
!9882 = !DILocation(line: 3804, column: 57, scope: !9875)
!9883 = !DILocation(line: 3804, column: 62, scope: !9875)
!9884 = !DILocation(line: 3805, column: 3, scope: !9876)
!9885 = !DILocation(line: 3807, column: 2, scope: !9845)
!9886 = !DILocation(line: 3810, column: 6, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3810, column: 6)
!9888 = !DILocation(line: 3810, column: 10, scope: !9887)
!9889 = !DILocation(line: 3810, column: 14, scope: !9887)
!9890 = !DILocation(line: 3810, column: 24, scope: !9887)
!9891 = !DILocation(line: 3810, column: 28, scope: !9887)
!9892 = !DILocation(line: 3810, column: 32, scope: !9887)
!9893 = !DILocation(line: 3810, column: 37, scope: !9887)
!9894 = !DILocation(line: 3810, column: 48, scope: !9887)
!9895 = !DILocation(line: 3810, column: 52, scope: !9887)
!9896 = !DILocation(line: 3810, column: 56, scope: !9887)
!9897 = !DILocation(line: 3810, column: 64, scope: !9887)
!9898 = !DILocation(line: 3810, column: 6, scope: !9137)
!9899 = !DILocation(line: 3811, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 3811, column: 7)
!9901 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 3810, column: 85)
!9902 = !DILocation(line: 3811, column: 11, scope: !9900)
!9903 = !DILocation(line: 3811, column: 16, scope: !9900)
!9904 = !DILocation(line: 3811, column: 7, scope: !9901)
!9905 = !DILocation(line: 3812, column: 4, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 3811, column: 23)
!9907 = !DILocation(line: 3812, column: 8, scope: !9906)
!9908 = !DILocation(line: 3812, column: 13, scope: !9906)
!9909 = !DILocation(line: 3815, column: 27, scope: !9906)
!9910 = !DILocation(line: 3815, column: 32, scope: !9906)
!9911 = !DILocation(line: 3815, column: 26, scope: !9906)
!9912 = !DILocation(line: 3815, column: 4, scope: !9906)
!9913 = !DILocation(line: 3815, column: 9, scope: !9906)
!9914 = !DILocation(line: 3815, column: 24, scope: !9906)
!9915 = !DILocation(line: 3816, column: 27, scope: !9906)
!9916 = !DILocation(line: 3816, column: 32, scope: !9906)
!9917 = !DILocation(line: 3816, column: 26, scope: !9906)
!9918 = !DILocation(line: 3816, column: 4, scope: !9906)
!9919 = !DILocation(line: 3816, column: 9, scope: !9906)
!9920 = !DILocation(line: 3816, column: 24, scope: !9906)
!9921 = !DILocation(line: 3817, column: 27, scope: !9906)
!9922 = !DILocation(line: 3817, column: 32, scope: !9906)
!9923 = !DILocation(line: 3817, column: 26, scope: !9906)
!9924 = !DILocation(line: 3817, column: 4, scope: !9906)
!9925 = !DILocation(line: 3817, column: 9, scope: !9906)
!9926 = !DILocation(line: 3817, column: 24, scope: !9906)
!9927 = !DILocation(line: 3818, column: 14, scope: !9906)
!9928 = !DILocation(line: 3818, column: 19, scope: !9906)
!9929 = !DILocation(line: 3818, column: 25, scope: !9906)
!9930 = !DILocation(line: 3818, column: 30, scope: !9906)
!9931 = !DILocation(line: 3818, column: 4, scope: !9906)
!9932 = !DILocation(line: 3821, column: 18, scope: !9906)
!9933 = !DILocation(line: 3821, column: 23, scope: !9906)
!9934 = !DILocation(line: 3821, column: 11, scope: !9906)
!9935 = !DILocation(line: 3821, column: 9, scope: !9906)
!9936 = !DILocation(line: 3822, column: 8, scope: !9906)
!9937 = !DILocation(line: 3822, column: 13, scope: !9906)
!9938 = !DILocation(line: 3822, column: 6, scope: !9906)
!9939 = !DILocation(line: 3823, column: 14, scope: !9906)
!9940 = !DILocation(line: 3823, column: 9, scope: !9906)
!9941 = !DILocation(line: 3823, column: 7, scope: !9906)
!9942 = !DILocation(line: 3824, column: 18, scope: !9906)
!9943 = !DILocation(line: 3824, column: 21, scope: !9906)
!9944 = !DILocation(line: 3824, column: 20, scope: !9906)
!9945 = !DILocation(line: 3824, column: 4, scope: !9906)
!9946 = !DILocation(line: 3824, column: 9, scope: !9906)
!9947 = !DILocation(line: 3824, column: 16, scope: !9906)
!9948 = !DILocation(line: 3826, column: 27, scope: !9906)
!9949 = !DILocation(line: 3826, column: 32, scope: !9906)
!9950 = !DILocation(line: 3826, column: 4, scope: !9906)
!9951 = !DILocation(line: 3826, column: 9, scope: !9906)
!9952 = !DILocation(line: 3826, column: 24, scope: !9906)
!9953 = !DILocation(line: 3829, column: 8, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9906, file: !3, line: 3829, column: 8)
!9955 = !DILocation(line: 3829, column: 13, scope: !9954)
!9956 = !DILocation(line: 3829, column: 21, scope: !9954)
!9957 = !DILocation(line: 3829, column: 8, scope: !9906)
!9958 = !DILocation(line: 3830, column: 5, scope: !9954)
!9959 = !DILocation(line: 3830, column: 10, scope: !9954)
!9960 = !DILocation(line: 3830, column: 18, scope: !9954)
!9961 = !DILocation(line: 3832, column: 3, scope: !9906)
!9962 = !DILocation(line: 3833, column: 2, scope: !9901)
!9963 = !DILocation(line: 3834, column: 11, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 3834, column: 11)
!9965 = !DILocation(line: 3834, column: 15, scope: !9964)
!9966 = !DILocation(line: 3834, column: 19, scope: !9964)
!9967 = !DILocation(line: 3834, column: 11, scope: !9887)
!9968 = !DILocation(line: 3835, column: 3, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9964, file: !3, line: 3834, column: 30)
!9970 = !DILocation(line: 3835, column: 8, scope: !9969)
!9971 = !DILocation(line: 3835, column: 13, scope: !9969)
!9972 = !DILocation(line: 3836, column: 2, scope: !9969)
!9973 = !DILocation(line: 3838, column: 8, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3838, column: 2)
!9975 = !DILocation(line: 3838, column: 7, scope: !9974)
!9976 = !DILocation(line: 3838, column: 12, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 3838, column: 2)
!9978 = !DILocation(line: 3838, column: 13, scope: !9977)
!9979 = !DILocation(line: 3838, column: 2, scope: !9974)
!9980 = !DILocation(line: 3839, column: 7, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 3839, column: 7)
!9982 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 3838, column: 29)
!9983 = !DILocation(line: 3839, column: 11, scope: !9981)
!9984 = !DILocation(line: 3839, column: 16, scope: !9981)
!9985 = !DILocation(line: 3839, column: 19, scope: !9981)
!9986 = !DILocation(line: 3839, column: 22, scope: !9981)
!9987 = !DILocation(line: 3839, column: 26, scope: !9981)
!9988 = !DILocation(line: 3839, column: 31, scope: !9981)
!9989 = !DILocation(line: 3839, column: 35, scope: !9981)
!9990 = !DILocation(line: 3839, column: 7, scope: !9982)
!9991 = !DILocation(line: 3840, column: 8, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3840, column: 8)
!9993 = distinct !DILexicalBlock(scope: !9981, file: !3, line: 3839, column: 40)
!9994 = !DILocation(line: 3840, column: 12, scope: !9992)
!9995 = !DILocation(line: 3840, column: 17, scope: !9992)
!9996 = !DILocation(line: 3840, column: 21, scope: !9992)
!9997 = !DILocation(line: 3840, column: 27, scope: !9992)
!9998 = !DILocation(line: 3840, column: 8, scope: !9993)
!9999 = !DILocation(line: 3841, column: 5, scope: !9992)
!10000 = !DILocation(line: 3841, column: 10, scope: !9992)
!10001 = !DILocation(line: 3841, column: 15, scope: !9992)
!10002 = !DILocation(line: 3842, column: 8, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3842, column: 8)
!10004 = !DILocation(line: 3842, column: 12, scope: !10003)
!10005 = !DILocation(line: 3842, column: 17, scope: !10003)
!10006 = !DILocation(line: 3842, column: 21, scope: !10003)
!10007 = !DILocation(line: 3842, column: 27, scope: !10003)
!10008 = !DILocation(line: 3842, column: 8, scope: !9993)
!10009 = !DILocation(line: 3843, column: 5, scope: !10003)
!10010 = !DILocation(line: 3843, column: 10, scope: !10003)
!10011 = !DILocation(line: 3843, column: 15, scope: !10003)
!10012 = !DILocation(line: 3845, column: 10, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9993, file: !3, line: 3845, column: 8)
!10014 = !DILocation(line: 3845, column: 8, scope: !10013)
!10015 = !DILocation(line: 3845, column: 8, scope: !9993)
!10016 = !DILocation(line: 3846, column: 9, scope: !10017)
!10017 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 3846, column: 9)
!10018 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 3845, column: 24)
!10019 = !DILocation(line: 3846, column: 13, scope: !10017)
!10020 = !DILocation(line: 3846, column: 9, scope: !10018)
!10021 = !DILocation(line: 3847, column: 10, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 3847, column: 10)
!10023 = distinct !DILexicalBlock(scope: !10017, file: !3, line: 3846, column: 18)
!10024 = !DILocation(line: 3847, column: 14, scope: !10022)
!10025 = !DILocation(line: 3847, column: 19, scope: !10022)
!10026 = !DILocation(line: 3847, column: 23, scope: !10022)
!10027 = !DILocation(line: 3847, column: 28, scope: !10022)
!10028 = !DILocation(line: 3847, column: 32, scope: !10022)
!10029 = !DILocation(line: 3847, column: 10, scope: !10023)
!10030 = !DILocation(line: 3847, column: 45, scope: !10022)
!10031 = !DILocation(line: 3847, column: 50, scope: !10022)
!10032 = !DILocation(line: 3847, column: 55, scope: !10022)
!10033 = !DILocation(line: 3848, column: 5, scope: !10023)
!10034 = !DILocation(line: 3849, column: 4, scope: !10018)
!10035 = !DILocation(line: 3850, column: 3, scope: !9993)
!10036 = !DILocation(line: 3851, column: 2, scope: !9982)
!10037 = !DILocation(line: 3838, column: 25, scope: !9977)
!10038 = !DILocation(line: 3838, column: 2, scope: !9977)
!10039 = distinct !{!10039, !9979, !10040}
!10040 = !DILocation(line: 3851, column: 2, scope: !9974)
!10041 = !DILocation(line: 3856, column: 7, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 3856, column: 7)
!10043 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 3854, column: 2)
!10044 = !DILocation(line: 3856, column: 12, scope: !10042)
!10045 = !DILocation(line: 3856, column: 17, scope: !10042)
!10046 = !DILocation(line: 3856, column: 7, scope: !10043)
!10047 = !DILocation(line: 3857, column: 10, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 3857, column: 9)
!10049 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 3856, column: 32)
!10050 = !DILocation(line: 3857, column: 14, scope: !10048)
!10051 = !DILocation(line: 3857, column: 16, scope: !10048)
!10052 = !DILocation(line: 3857, column: 21, scope: !10048)
!10053 = !DILocation(line: 3857, column: 34, scope: !10048)
!10054 = !DILocation(line: 3857, column: 9, scope: !10049)
!10055 = !DILocation(line: 3858, column: 5, scope: !10048)
!10056 = !DILocation(line: 3858, column: 10, scope: !10048)
!10057 = !DILocation(line: 3858, column: 15, scope: !10048)
!10058 = !DILocation(line: 3859, column: 3, scope: !10049)
!10059 = !DILocation(line: 3862, column: 7, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10043, file: !3, line: 3862, column: 7)
!10061 = !DILocation(line: 3862, column: 11, scope: !10060)
!10062 = !DILocation(line: 3862, column: 13, scope: !10060)
!10063 = !DILocation(line: 3862, column: 18, scope: !10060)
!10064 = !DILocation(line: 3862, column: 7, scope: !10043)
!10065 = !DILocation(line: 3864, column: 8, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 3864, column: 8)
!10067 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 3862, column: 30)
!10068 = !DILocation(line: 3864, column: 12, scope: !10066)
!10069 = !DILocation(line: 3864, column: 16, scope: !10066)
!10070 = !DILocation(line: 3864, column: 26, scope: !10066)
!10071 = !DILocation(line: 3864, column: 30, scope: !10066)
!10072 = !DILocation(line: 3864, column: 35, scope: !10066)
!10073 = !DILocation(line: 3864, column: 40, scope: !10066)
!10074 = !DILocation(line: 3864, column: 55, scope: !10066)
!10075 = !DILocation(line: 3864, column: 59, scope: !10066)
!10076 = !DILocation(line: 3864, column: 64, scope: !10066)
!10077 = !DILocation(line: 3864, column: 80, scope: !10066)
!10078 = !DILocation(line: 3864, column: 8, scope: !10067)
!10079 = !DILocation(line: 3865, column: 23, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 3864, column: 102)
!10081 = !DILocation(line: 3865, column: 5, scope: !10080)
!10082 = !DILocation(line: 3866, column: 4, scope: !10080)
!10083 = !DILocation(line: 3867, column: 13, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 3867, column: 13)
!10085 = !DILocation(line: 3867, column: 17, scope: !10084)
!10086 = !DILocation(line: 3867, column: 21, scope: !10084)
!10087 = !DILocation(line: 3867, column: 31, scope: !10084)
!10088 = !DILocation(line: 3867, column: 35, scope: !10084)
!10089 = !DILocation(line: 3867, column: 40, scope: !10084)
!10090 = !DILocation(line: 3867, column: 45, scope: !10084)
!10091 = !DILocation(line: 3867, column: 13, scope: !10066)
!10092 = !DILocation(line: 3869, column: 19, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10084, file: !3, line: 3867, column: 62)
!10094 = !DILocation(line: 3869, column: 23, scope: !10093)
!10095 = !DILocation(line: 3869, column: 5, scope: !10093)
!10096 = !DILocation(line: 3869, column: 10, scope: !10093)
!10097 = !DILocation(line: 3869, column: 17, scope: !10093)
!10098 = !DILocation(line: 3870, column: 16, scope: !10093)
!10099 = !DILocation(line: 3870, column: 21, scope: !10093)
!10100 = !DILocation(line: 3870, column: 25, scope: !10093)
!10101 = !DILocation(line: 3870, column: 5, scope: !10093)
!10102 = !DILocation(line: 3871, column: 19, scope: !10093)
!10103 = !DILocation(line: 3871, column: 23, scope: !10093)
!10104 = !DILocation(line: 3871, column: 28, scope: !10093)
!10105 = !DILocation(line: 3871, column: 5, scope: !10093)
!10106 = !DILocation(line: 3872, column: 4, scope: !10093)
!10107 = !DILocation(line: 3876, column: 8, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10067, file: !3, line: 3876, column: 8)
!10109 = !DILocation(line: 3876, column: 13, scope: !10108)
!10110 = !DILocation(line: 3876, column: 17, scope: !10108)
!10111 = !DILocation(line: 3876, column: 21, scope: !10108)
!10112 = !DILocation(line: 3876, column: 26, scope: !10108)
!10113 = !DILocation(line: 3876, column: 31, scope: !10108)
!10114 = !DILocation(line: 3876, column: 8, scope: !10067)
!10115 = !DILocalVariable(name: "ls", scope: !10116, file: !3, line: 3877, type: !4129)
!10116 = distinct !DILexicalBlock(scope: !10108, file: !3, line: 3876, column: 47)
!10117 = !DILocation(line: 3877, column: 23, scope: !10116)
!10118 = !DILocalVariable(name: "lss", scope: !10116, file: !3, line: 3878, type: !10119)
!10119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!10120 = !DILocation(line: 3878, column: 26, scope: !10116)
!10121 = !DILocalVariable(name: "a", scope: !10116, file: !3, line: 3879, type: !21)
!10122 = !DILocation(line: 3879, column: 9, scope: !10116)
!10123 = !DILocalVariable(name: "b", scope: !10116, file: !3, line: 3879, type: !21)
!10124 = !DILocation(line: 3879, column: 12, scope: !10116)
!10125 = !DILocation(line: 3881, column: 12, scope: !10116)
!10126 = !DILocation(line: 3881, column: 16, scope: !10116)
!10127 = !DILocation(line: 3881, column: 5, scope: !10116)
!10128 = !DILocation(line: 3883, column: 20, scope: !10116)
!10129 = !DILocation(line: 3883, column: 32, scope: !10116)
!10130 = !DILocation(line: 3883, column: 36, scope: !10116)
!10131 = !DILocation(line: 3883, column: 38, scope: !10116)
!10132 = !DILocation(line: 3883, column: 45, scope: !10116)
!10133 = !DILocation(line: 3883, column: 5, scope: !10116)
!10134 = !DILocation(line: 3883, column: 10, scope: !10116)
!10135 = !DILocation(line: 3883, column: 18, scope: !10116)
!10136 = !DILocation(line: 3884, column: 9, scope: !10116)
!10137 = !DILocation(line: 3884, column: 14, scope: !10116)
!10138 = !DILocation(line: 3884, column: 7, scope: !10116)
!10139 = !DILocation(line: 3887, column: 11, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 3887, column: 5)
!10141 = !DILocation(line: 3887, column: 10, scope: !10140)
!10142 = !DILocation(line: 3887, column: 15, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 3887, column: 5)
!10144 = !DILocation(line: 3887, column: 17, scope: !10143)
!10145 = !DILocation(line: 3887, column: 21, scope: !10143)
!10146 = !DILocation(line: 3887, column: 23, scope: !10143)
!10147 = !DILocation(line: 3887, column: 16, scope: !10143)
!10148 = !DILocation(line: 3887, column: 5, scope: !10140)
!10149 = !DILocation(line: 3888, column: 11, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3887, column: 43)
!10151 = !DILocation(line: 3888, column: 15, scope: !10150)
!10152 = !DILocation(line: 3888, column: 9, scope: !10150)
!10153 = !DILocation(line: 3889, column: 12, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 3889, column: 6)
!10155 = !DILocation(line: 3889, column: 11, scope: !10154)
!10156 = !DILocation(line: 3889, column: 16, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 3889, column: 6)
!10158 = !DILocation(line: 3889, column: 18, scope: !10157)
!10159 = !DILocation(line: 3889, column: 22, scope: !10157)
!10160 = !DILocation(line: 3889, column: 24, scope: !10157)
!10161 = !DILocation(line: 3889, column: 17, scope: !10157)
!10162 = !DILocation(line: 3889, column: 6, scope: !10154)
!10163 = !DILocation(line: 3890, column: 7, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 3889, column: 41)
!10165 = !DILocation(line: 3890, column: 12, scope: !10164)
!10166 = !DILocation(line: 3890, column: 20, scope: !10164)
!10167 = !DILocation(line: 3891, column: 7, scope: !10164)
!10168 = !DILocation(line: 3891, column: 12, scope: !10164)
!10169 = !DILocation(line: 3891, column: 22, scope: !10164)
!10170 = !DILocation(line: 3892, column: 7, scope: !10164)
!10171 = !DILocation(line: 3892, column: 12, scope: !10164)
!10172 = !DILocation(line: 3892, column: 22, scope: !10164)
!10173 = !DILocation(line: 3893, column: 7, scope: !10164)
!10174 = !DILocation(line: 3893, column: 12, scope: !10164)
!10175 = !DILocation(line: 3893, column: 22, scope: !10164)
!10176 = !DILocation(line: 3894, column: 7, scope: !10164)
!10177 = !DILocation(line: 3894, column: 12, scope: !10164)
!10178 = !DILocation(line: 3894, column: 22, scope: !10164)
!10179 = !DILocation(line: 3895, column: 6, scope: !10164)
!10180 = !DILocation(line: 3889, column: 30, scope: !10157)
!10181 = !DILocation(line: 3889, column: 37, scope: !10157)
!10182 = !DILocation(line: 3889, column: 6, scope: !10157)
!10183 = distinct !{!10183, !10162, !10184}
!10184 = !DILocation(line: 3895, column: 6, scope: !10154)
!10185 = !DILocation(line: 3896, column: 5, scope: !10150)
!10186 = !DILocation(line: 3887, column: 33, scope: !10143)
!10187 = !DILocation(line: 3887, column: 39, scope: !10143)
!10188 = !DILocation(line: 3887, column: 5, scope: !10143)
!10189 = distinct !{!10189, !10148, !10190}
!10190 = !DILocation(line: 3896, column: 5, scope: !10140)
!10191 = !DILocation(line: 3897, column: 4, scope: !10116)
!10192 = !DILocation(line: 3898, column: 3, scope: !10067)
!10193 = !DILocation(line: 3901, column: 9, scope: !9137)
!10194 = !DILocation(line: 3901, column: 2, scope: !9137)
!10195 = !DILocation(line: 3902, column: 1, scope: !9137)
!10196 = distinct !DISubprogram(name: "render_object_type", scope: !3, file: !3, line: 4416, type: !10197, scopeLine: 4417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10197 = !DISubroutineType(types: !10198)
!10198 = !{!21, !23}
!10199 = !DILocalVariable(name: "type", arg: 1, scope: !10196, file: !3, line: 4416, type: !23)
!10200 = !DILocation(line: 4416, column: 37, scope: !10196)
!10201 = !DILocation(line: 4418, column: 9, scope: !10196)
!10202 = !DILocation(line: 0, scope: !10196)
!10203 = !DILocation(line: 4418, column: 2, scope: !10196)
!10204 = distinct !DISubprogram(name: "add_render_object", scope: !3, file: !3, line: 4599, type: !4171, scopeLine: 4600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10205 = !DILocalVariable(name: "re", arg: 1, scope: !10204, file: !3, line: 4599, type: !6)
!10206 = !DILocation(line: 4599, column: 39, scope: !10204)
!10207 = !DILocalVariable(name: "ob", arg: 2, scope: !10204, file: !3, line: 4599, type: !3236)
!10208 = !DILocation(line: 4599, column: 51, scope: !10204)
!10209 = !DILocalVariable(name: "par", arg: 3, scope: !10204, file: !3, line: 4599, type: !3236)
!10210 = !DILocation(line: 4599, column: 63, scope: !10204)
!10211 = !DILocalVariable(name: "dob", arg: 4, scope: !10204, file: !3, line: 4599, type: !3344)
!10212 = !DILocation(line: 4599, column: 81, scope: !10204)
!10213 = !DILocalVariable(name: "omat", arg: 5, scope: !10204, file: !3, line: 4599, type: !2482)
!10214 = !DILocation(line: 4599, column: 92, scope: !10204)
!10215 = !DILocalVariable(name: "timeoffset", arg: 6, scope: !10204, file: !3, line: 4599, type: !21)
!10216 = !DILocation(line: 4599, column: 108, scope: !10204)
!10217 = !DILocalVariable(name: "obr", scope: !10204, file: !3, line: 4601, type: !3063)
!10218 = !DILocation(line: 4601, column: 13, scope: !10204)
!10219 = !DILocalVariable(name: "obi", scope: !10204, file: !3, line: 4602, type: !3342)
!10220 = !DILocation(line: 4602, column: 21, scope: !10204)
!10221 = !DILocalVariable(name: "psys", scope: !10204, file: !3, line: 4603, type: !5452)
!10222 = !DILocation(line: 4603, column: 18, scope: !10204)
!10223 = !DILocalVariable(name: "show_emitter", scope: !10204, file: !3, line: 4604, type: !21)
!10224 = !DILocation(line: 4604, column: 6, scope: !10204)
!10225 = !DILocalVariable(name: "allow_render", scope: !10204, file: !3, line: 4604, type: !21)
!10226 = !DILocation(line: 4604, column: 20, scope: !10204)
!10227 = !DILocalVariable(name: "index", scope: !10204, file: !3, line: 4604, type: !21)
!10228 = !DILocation(line: 4604, column: 37, scope: !10204)
!10229 = !DILocalVariable(name: "psysindex", scope: !10204, file: !3, line: 4604, type: !21)
!10230 = !DILocation(line: 4604, column: 44, scope: !10204)
!10231 = !DILocalVariable(name: "i", scope: !10204, file: !3, line: 4604, type: !21)
!10232 = !DILocation(line: 4604, column: 55, scope: !10204)
!10233 = !DILocation(line: 4606, column: 10, scope: !10204)
!10234 = !DILocation(line: 4606, column: 9, scope: !10204)
!10235 = !DILocation(line: 4606, column: 16, scope: !10204)
!10236 = !DILocation(line: 4606, column: 21, scope: !10204)
!10237 = !DILocation(line: 4606, column: 7, scope: !10204)
!10238 = !DILocation(line: 4610, column: 6, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 4610, column: 6)
!10240 = !DILocation(line: 4610, column: 10, scope: !10239)
!10241 = !DILocation(line: 4610, column: 25, scope: !10239)
!10242 = !DILocation(line: 4610, column: 6, scope: !10204)
!10243 = !DILocation(line: 4611, column: 15, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4610, column: 32)
!10245 = !DILocation(line: 4612, column: 13, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 4612, column: 3)
!10247 = !DILocation(line: 4612, column: 17, scope: !10246)
!10248 = !DILocation(line: 4612, column: 32, scope: !10246)
!10249 = !DILocation(line: 4612, column: 12, scope: !10246)
!10250 = !DILocation(line: 4612, column: 8, scope: !10246)
!10251 = !DILocation(line: 4612, column: 39, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10246, file: !3, line: 4612, column: 3)
!10253 = !DILocation(line: 4612, column: 3, scope: !10246)
!10254 = !DILocation(line: 4613, column: 20, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10252, file: !3, line: 4612, column: 62)
!10256 = !DILocation(line: 4613, column: 26, scope: !10255)
!10257 = !DILocation(line: 4613, column: 32, scope: !10255)
!10258 = !DILocation(line: 4613, column: 37, scope: !10255)
!10259 = !DILocation(line: 4613, column: 17, scope: !10255)
!10260 = !DILocation(line: 4614, column: 10, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 4614, column: 8)
!10262 = !DILocation(line: 4614, column: 14, scope: !10261)
!10263 = !DILocation(line: 4614, column: 16, scope: !10261)
!10264 = !DILocation(line: 4614, column: 24, scope: !10261)
!10265 = !DILocation(line: 4614, column: 8, scope: !10255)
!10266 = !DILocation(line: 4615, column: 21, scope: !10261)
!10267 = !DILocation(line: 4615, column: 25, scope: !10261)
!10268 = !DILocation(line: 4615, column: 31, scope: !10261)
!10269 = !DILocation(line: 4615, column: 35, scope: !10261)
!10270 = !DILocation(line: 4615, column: 44, scope: !10261)
!10271 = !DILocation(line: 4615, column: 48, scope: !10261)
!10272 = !DILocation(line: 4615, column: 56, scope: !10261)
!10273 = !DILocation(line: 4615, column: 60, scope: !10261)
!10274 = !DILocation(line: 4615, column: 66, scope: !10261)
!10275 = !DILocation(line: 4615, column: 70, scope: !10261)
!10276 = !DILocation(line: 4615, column: 76, scope: !10261)
!10277 = !DILocation(line: 4615, column: 5, scope: !10261)
!10278 = !DILocation(line: 4616, column: 3, scope: !10255)
!10279 = !DILocation(line: 4612, column: 50, scope: !10252)
!10280 = !DILocation(line: 4612, column: 56, scope: !10252)
!10281 = !DILocation(line: 4612, column: 49, scope: !10252)
!10282 = !DILocation(line: 4612, column: 3, scope: !10252)
!10283 = distinct !{!10283, !10253, !10284}
!10284 = !DILocation(line: 4616, column: 3, scope: !10246)
!10285 = !DILocation(line: 4619, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10244, file: !3, line: 4619, column: 7)
!10287 = !DILocation(line: 4619, column: 20, scope: !10286)
!10288 = !DILocation(line: 4619, column: 7, scope: !10244)
!10289 = !DILocation(line: 4620, column: 16, scope: !10286)
!10290 = !DILocation(line: 4620, column: 4, scope: !10286)
!10291 = !DILocation(line: 4621, column: 2, scope: !10244)
!10292 = !DILocation(line: 4624, column: 6, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 4624, column: 6)
!10294 = !DILocation(line: 4624, column: 6, scope: !10204)
!10295 = !DILocation(line: 4625, column: 27, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 4624, column: 20)
!10297 = !DILocation(line: 4625, column: 31, scope: !10296)
!10298 = !DILocation(line: 4625, column: 35, scope: !10296)
!10299 = !DILocation(line: 4625, column: 40, scope: !10296)
!10300 = !DILocation(line: 4625, column: 50, scope: !10296)
!10301 = !DILocation(line: 4625, column: 54, scope: !10296)
!10302 = !DILocation(line: 4625, column: 8, scope: !10296)
!10303 = !DILocation(line: 4625, column: 6, scope: !10296)
!10304 = !DILocation(line: 4626, column: 8, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 4626, column: 7)
!10306 = !DILocation(line: 4626, column: 12, scope: !10305)
!10307 = !DILocation(line: 4626, column: 16, scope: !10305)
!10308 = !DILocation(line: 4626, column: 21, scope: !10305)
!10309 = !DILocation(line: 4626, column: 31, scope: !10305)
!10310 = !DILocation(line: 4626, column: 35, scope: !10305)
!10311 = !DILocation(line: 4626, column: 39, scope: !10305)
!10312 = !DILocation(line: 4626, column: 49, scope: !10305)
!10313 = !DILocation(line: 4626, column: 7, scope: !10296)
!10314 = !DILocation(line: 4627, column: 4, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10305, file: !3, line: 4626, column: 69)
!10316 = !DILocation(line: 4627, column: 9, scope: !10315)
!10317 = !DILocation(line: 4627, column: 14, scope: !10315)
!10318 = !DILocation(line: 4628, column: 15, scope: !10315)
!10319 = !DILocation(line: 4628, column: 20, scope: !10315)
!10320 = !DILocation(line: 4628, column: 27, scope: !10315)
!10321 = !DILocation(line: 4628, column: 31, scope: !10315)
!10322 = !DILocation(line: 4628, column: 4, scope: !10315)
!10323 = !DILocation(line: 4629, column: 3, scope: !10315)
!10324 = !DILocation(line: 4630, column: 27, scope: !10296)
!10325 = !DILocation(line: 4630, column: 31, scope: !10296)
!10326 = !DILocation(line: 4630, column: 36, scope: !10296)
!10327 = !DILocation(line: 4630, column: 3, scope: !10296)
!10328 = !DILocation(line: 4633, column: 9, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 4633, column: 7)
!10330 = !DILocation(line: 4633, column: 13, scope: !10329)
!10331 = !DILocation(line: 4633, column: 23, scope: !10329)
!10332 = !DILocation(line: 4633, column: 7, scope: !10296)
!10333 = !DILocation(line: 4634, column: 30, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 4633, column: 43)
!10335 = !DILocation(line: 4634, column: 34, scope: !10334)
!10336 = !DILocation(line: 4634, column: 39, scope: !10334)
!10337 = !DILocation(line: 4634, column: 43, scope: !10334)
!10338 = !DILocation(line: 4634, column: 48, scope: !10334)
!10339 = !DILocation(line: 4634, column: 64, scope: !10334)
!10340 = !DILocation(line: 4634, column: 68, scope: !10334)
!10341 = !DILocation(line: 4634, column: 9, scope: !10334)
!10342 = !DILocation(line: 4634, column: 7, scope: !10334)
!10343 = !DILocation(line: 4635, column: 8, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10334, file: !3, line: 4635, column: 8)
!10345 = !DILocation(line: 4635, column: 8, scope: !10334)
!10346 = !DILocation(line: 4635, column: 31, scope: !10344)
!10347 = !DILocation(line: 4635, column: 35, scope: !10344)
!10348 = !DILocation(line: 4635, column: 40, scope: !10344)
!10349 = !DILocation(line: 4635, column: 45, scope: !10344)
!10350 = !DILocation(line: 4635, column: 13, scope: !10344)
!10351 = !DILocation(line: 4636, column: 3, scope: !10334)
!10352 = !DILocation(line: 4638, column: 25, scope: !10329)
!10353 = !DILocation(line: 4638, column: 29, scope: !10329)
!10354 = !DILocation(line: 4638, column: 34, scope: !10329)
!10355 = !DILocation(line: 4638, column: 4, scope: !10329)
!10356 = !DILocation(line: 4640, column: 9, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 4640, column: 3)
!10358 = !DILocation(line: 4640, column: 8, scope: !10357)
!10359 = !DILocation(line: 4640, column: 13, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10357, file: !3, line: 4640, column: 3)
!10361 = !DILocation(line: 4640, column: 16, scope: !10360)
!10362 = !DILocation(line: 4640, column: 20, scope: !10360)
!10363 = !DILocation(line: 4640, column: 14, scope: !10360)
!10364 = !DILocation(line: 4640, column: 3, scope: !10357)
!10365 = !DILocalVariable(name: "ma", scope: !10366, file: !3, line: 4641, type: !4157)
!10366 = distinct !DILexicalBlock(scope: !10360, file: !3, line: 4640, column: 33)
!10367 = !DILocation(line: 4641, column: 14, scope: !10366)
!10368 = !DILocation(line: 4641, column: 40, scope: !10366)
!10369 = !DILocation(line: 4641, column: 44, scope: !10366)
!10370 = !DILocation(line: 4641, column: 48, scope: !10366)
!10371 = !DILocation(line: 4641, column: 19, scope: !10366)
!10372 = !DILocation(line: 4642, column: 8, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 4642, column: 8)
!10374 = !DILocation(line: 4642, column: 11, scope: !10373)
!10375 = !DILocation(line: 4642, column: 14, scope: !10373)
!10376 = !DILocation(line: 4642, column: 18, scope: !10373)
!10377 = !DILocation(line: 4642, column: 32, scope: !10373)
!10378 = !DILocation(line: 4642, column: 8, scope: !10366)
!10379 = !DILocation(line: 4643, column: 16, scope: !10373)
!10380 = !DILocation(line: 4643, column: 20, scope: !10373)
!10381 = !DILocation(line: 4643, column: 25, scope: !10373)
!10382 = !DILocation(line: 4643, column: 5, scope: !10373)
!10383 = !DILocation(line: 4644, column: 3, scope: !10366)
!10384 = !DILocation(line: 4640, column: 29, scope: !10360)
!10385 = !DILocation(line: 4640, column: 3, scope: !10360)
!10386 = distinct !{!10386, !10364, !10387}
!10387 = !DILocation(line: 4644, column: 3, scope: !10357)
!10388 = !DILocation(line: 4645, column: 2, scope: !10296)
!10389 = !DILocation(line: 4648, column: 6, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 4648, column: 6)
!10391 = !DILocation(line: 4648, column: 10, scope: !10390)
!10392 = !DILocation(line: 4648, column: 25, scope: !10390)
!10393 = !DILocation(line: 4648, column: 6, scope: !10204)
!10394 = !DILocation(line: 4649, column: 12, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10390, file: !3, line: 4648, column: 32)
!10396 = !DILocation(line: 4650, column: 13, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 4650, column: 3)
!10398 = !DILocation(line: 4650, column: 17, scope: !10397)
!10399 = !DILocation(line: 4650, column: 32, scope: !10397)
!10400 = !DILocation(line: 4650, column: 12, scope: !10397)
!10401 = !DILocation(line: 4650, column: 8, scope: !10397)
!10402 = !DILocation(line: 4650, column: 39, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10397, file: !3, line: 4650, column: 3)
!10404 = !DILocation(line: 4650, column: 3, scope: !10397)
!10405 = !DILocation(line: 4651, column: 28, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4651, column: 8)
!10407 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 4650, column: 75)
!10408 = !DILocation(line: 4651, column: 32, scope: !10406)
!10409 = !DILocation(line: 4651, column: 9, scope: !10406)
!10410 = !DILocation(line: 4651, column: 8, scope: !10407)
!10411 = !DILocation(line: 4652, column: 5, scope: !10406)
!10412 = !DILocation(line: 4654, column: 28, scope: !10407)
!10413 = !DILocation(line: 4654, column: 32, scope: !10407)
!10414 = !DILocation(line: 4654, column: 36, scope: !10407)
!10415 = !DILocation(line: 4654, column: 41, scope: !10407)
!10416 = !DILocation(line: 4654, column: 48, scope: !10407)
!10417 = !DILocation(line: 4654, column: 59, scope: !10407)
!10418 = !DILocation(line: 4654, column: 63, scope: !10407)
!10419 = !DILocation(line: 4654, column: 9, scope: !10407)
!10420 = !DILocation(line: 4654, column: 7, scope: !10407)
!10421 = !DILocation(line: 4655, column: 9, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4655, column: 8)
!10423 = !DILocation(line: 4655, column: 13, scope: !10422)
!10424 = !DILocation(line: 4655, column: 17, scope: !10422)
!10425 = !DILocation(line: 4655, column: 22, scope: !10422)
!10426 = !DILocation(line: 4655, column: 32, scope: !10422)
!10427 = !DILocation(line: 4655, column: 36, scope: !10422)
!10428 = !DILocation(line: 4655, column: 40, scope: !10422)
!10429 = !DILocation(line: 4655, column: 50, scope: !10422)
!10430 = !DILocation(line: 4655, column: 8, scope: !10407)
!10431 = !DILocation(line: 4656, column: 5, scope: !10432)
!10432 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 4655, column: 70)
!10433 = !DILocation(line: 4656, column: 10, scope: !10432)
!10434 = !DILocation(line: 4656, column: 15, scope: !10432)
!10435 = !DILocation(line: 4657, column: 16, scope: !10432)
!10436 = !DILocation(line: 4657, column: 21, scope: !10432)
!10437 = !DILocation(line: 4657, column: 28, scope: !10432)
!10438 = !DILocation(line: 4657, column: 32, scope: !10432)
!10439 = !DILocation(line: 4657, column: 5, scope: !10432)
!10440 = !DILocation(line: 4658, column: 4, scope: !10432)
!10441 = !DILocation(line: 4659, column: 8, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4659, column: 8)
!10443 = !DILocation(line: 4659, column: 8, scope: !10407)
!10444 = !DILocation(line: 4660, column: 5, scope: !10442)
!10445 = !DILocation(line: 4660, column: 11, scope: !10442)
!10446 = !DILocation(line: 4660, column: 16, scope: !10442)
!10447 = !DILocation(line: 4661, column: 28, scope: !10407)
!10448 = !DILocation(line: 4661, column: 32, scope: !10407)
!10449 = !DILocation(line: 4661, column: 37, scope: !10407)
!10450 = !DILocation(line: 4661, column: 4, scope: !10407)
!10451 = !DILocation(line: 4662, column: 10, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4662, column: 8)
!10453 = !DILocation(line: 4662, column: 14, scope: !10452)
!10454 = !DILocation(line: 4662, column: 16, scope: !10452)
!10455 = !DILocation(line: 4662, column: 24, scope: !10452)
!10456 = !DILocation(line: 4662, column: 8, scope: !10407)
!10457 = !DILocation(line: 4663, column: 25, scope: !10452)
!10458 = !DILocation(line: 4663, column: 29, scope: !10452)
!10459 = !DILocation(line: 4663, column: 5, scope: !10452)
!10460 = !DILocation(line: 4664, column: 4, scope: !10407)
!10461 = !DILocation(line: 4664, column: 10, scope: !10407)
!10462 = !DILocation(line: 4664, column: 15, scope: !10407)
!10463 = !DILocation(line: 4667, column: 10, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 4667, column: 8)
!10465 = !DILocation(line: 4667, column: 14, scope: !10464)
!10466 = !DILocation(line: 4667, column: 24, scope: !10464)
!10467 = !DILocation(line: 4667, column: 8, scope: !10407)
!10468 = !DILocation(line: 4668, column: 31, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 4667, column: 44)
!10470 = !DILocation(line: 4668, column: 35, scope: !10469)
!10471 = !DILocation(line: 4668, column: 40, scope: !10469)
!10472 = !DILocation(line: 4668, column: 44, scope: !10469)
!10473 = !DILocation(line: 4668, column: 49, scope: !10469)
!10474 = !DILocation(line: 4668, column: 56, scope: !10469)
!10475 = !DILocation(line: 4668, column: 73, scope: !10469)
!10476 = !DILocation(line: 4668, column: 77, scope: !10469)
!10477 = !DILocation(line: 4668, column: 10, scope: !10469)
!10478 = !DILocation(line: 4668, column: 8, scope: !10469)
!10479 = !DILocation(line: 4669, column: 9, scope: !10480)
!10480 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 4669, column: 9)
!10481 = !DILocation(line: 4669, column: 9, scope: !10469)
!10482 = !DILocation(line: 4669, column: 32, scope: !10480)
!10483 = !DILocation(line: 4669, column: 36, scope: !10480)
!10484 = !DILocation(line: 4669, column: 41, scope: !10480)
!10485 = !DILocation(line: 4669, column: 46, scope: !10480)
!10486 = !DILocation(line: 4669, column: 14, scope: !10480)
!10487 = !DILocation(line: 4670, column: 4, scope: !10469)
!10488 = !DILocation(line: 4672, column: 26, scope: !10464)
!10489 = !DILocation(line: 4672, column: 30, scope: !10464)
!10490 = !DILocation(line: 4672, column: 35, scope: !10464)
!10491 = !DILocation(line: 4672, column: 5, scope: !10464)
!10492 = !DILocation(line: 4673, column: 3, scope: !10407)
!10493 = !DILocation(line: 4650, column: 50, scope: !10403)
!10494 = !DILocation(line: 4650, column: 56, scope: !10403)
!10495 = !DILocation(line: 4650, column: 49, scope: !10403)
!10496 = !DILocation(line: 4650, column: 71, scope: !10403)
!10497 = !DILocation(line: 4650, column: 3, scope: !10403)
!10498 = distinct !{!10498, !10404, !10499}
!10499 = !DILocation(line: 4673, column: 3, scope: !10397)
!10500 = !DILocation(line: 4674, column: 2, scope: !10395)
!10501 = !DILocation(line: 4675, column: 1, scope: !10204)
!10502 = distinct !DISubprogram(name: "saacos", scope: !10503, file: !10503, line: 66, type: !10504, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10503 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10504 = !DISubroutineType(types: !10505)
!10505 = !{!45, !45}
!10506 = !DILocalVariable(name: "fac", arg: 1, scope: !10502, file: !10503, line: 66, type: !45)
!10507 = !DILocation(line: 66, column: 28, scope: !10502)
!10508 = !DILocation(line: 68, column: 11, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10502, file: !10503, line: 68, column: 11)
!10510 = !DILocation(line: 68, column: 11, scope: !10502)
!10511 = !DILocation(line: 68, column: 35, scope: !10509)
!10512 = !DILocation(line: 69, column: 11, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10509, file: !10503, line: 69, column: 11)
!10514 = !DILocation(line: 69, column: 11, scope: !10509)
!10515 = !DILocation(line: 69, column: 35, scope: !10513)
!10516 = !DILocation(line: 70, column: 48, scope: !10513)
!10517 = !DILocation(line: 70, column: 42, scope: !10513)
!10518 = !DILocation(line: 70, column: 35, scope: !10513)
!10519 = !DILocation(line: 71, column: 1, scope: !10502)
!10520 = distinct !DISubprogram(name: "initshadowbuf", scope: !3, file: !3, line: 3539, type: !10521, scopeLine: 3540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{null, !6, !3974, !2482}
!10523 = !DILocalVariable(name: "re", arg: 1, scope: !10520, file: !3, line: 3539, type: !6)
!10524 = !DILocation(line: 3539, column: 35, scope: !10520)
!10525 = !DILocalVariable(name: "lar", arg: 2, scope: !10520, file: !3, line: 3539, type: !3974)
!10526 = !DILocation(line: 3539, column: 48, scope: !10520)
!10527 = !DILocalVariable(name: "mat", arg: 3, scope: !10520, file: !3, line: 3539, type: !2482)
!10528 = !DILocation(line: 3539, column: 59, scope: !10520)
!10529 = !DILocalVariable(name: "shb", scope: !10520, file: !3, line: 3541, type: !4076)
!10530 = !DILocation(line: 3541, column: 18, scope: !10520)
!10531 = !DILocalVariable(name: "viewinv", scope: !10520, file: !3, line: 3542, type: !462)
!10532 = !DILocation(line: 3542, column: 8, scope: !10520)
!10533 = !DILocation(line: 3547, column: 25, scope: !10520)
!10534 = !DILocation(line: 3547, column: 7, scope: !10520)
!10535 = !DILocation(line: 3547, column: 5, scope: !10520)
!10536 = !DILocation(line: 3548, column: 12, scope: !10520)
!10537 = !DILocation(line: 3548, column: 2, scope: !10520)
!10538 = !DILocation(line: 3548, column: 7, scope: !10520)
!10539 = !DILocation(line: 3548, column: 10, scope: !10520)
!10540 = !DILocation(line: 3550, column: 6, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3550, column: 6)
!10542 = !DILocation(line: 3550, column: 9, scope: !10541)
!10543 = !DILocation(line: 3550, column: 6, scope: !10520)
!10544 = !DILocation(line: 3550, column: 17, scope: !10541)
!10545 = !DILocation(line: 3552, column: 2, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3552, column: 2)
!10547 = !DILocation(line: 3555, column: 14, scope: !10520)
!10548 = !DILocation(line: 3555, column: 19, scope: !10520)
!10549 = !DILocation(line: 3555, column: 27, scope: !10520)
!10550 = !DILocation(line: 3555, column: 31, scope: !10520)
!10551 = !DILocation(line: 3555, column: 33, scope: !10520)
!10552 = !DILocation(line: 3555, column: 26, scope: !10520)
!10553 = !DILocation(line: 3555, column: 38, scope: !10520)
!10554 = !DILocation(line: 3555, column: 2, scope: !10520)
!10555 = !DILocation(line: 3555, column: 7, scope: !10520)
!10556 = !DILocation(line: 3555, column: 11, scope: !10520)
!10557 = !DILocation(line: 3557, column: 6, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3557, column: 6)
!10559 = !DILocation(line: 3557, column: 11, scope: !10558)
!10560 = !DILocation(line: 3557, column: 15, scope: !10558)
!10561 = !DILocation(line: 3557, column: 6, scope: !10520)
!10562 = !DILocation(line: 3557, column: 21, scope: !10558)
!10563 = !DILocation(line: 3557, column: 26, scope: !10558)
!10564 = !DILocation(line: 3557, column: 30, scope: !10558)
!10565 = !DILocation(line: 3558, column: 11, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 3558, column: 11)
!10567 = !DILocation(line: 3558, column: 16, scope: !10566)
!10568 = !DILocation(line: 3558, column: 23, scope: !10566)
!10569 = !DILocation(line: 3558, column: 28, scope: !10566)
!10570 = !DILocation(line: 3558, column: 21, scope: !10566)
!10571 = !DILocation(line: 3558, column: 11, scope: !10558)
!10572 = !DILocation(line: 3558, column: 48, scope: !10566)
!10573 = !DILocation(line: 3558, column: 53, scope: !10566)
!10574 = !DILocation(line: 3558, column: 37, scope: !10566)
!10575 = !DILocation(line: 3558, column: 42, scope: !10566)
!10576 = !DILocation(line: 3558, column: 46, scope: !10566)
!10577 = !DILocation(line: 3560, column: 2, scope: !10520)
!10578 = !DILocation(line: 3560, column: 7, scope: !10520)
!10579 = !DILocation(line: 3560, column: 12, scope: !10520)
!10580 = !DILocation(line: 3562, column: 13, scope: !10520)
!10581 = !DILocation(line: 3562, column: 18, scope: !10520)
!10582 = !DILocation(line: 3562, column: 2, scope: !10520)
!10583 = !DILocation(line: 3562, column: 7, scope: !10520)
!10584 = !DILocation(line: 3562, column: 11, scope: !10520)
!10585 = !DILocation(line: 3563, column: 13, scope: !10520)
!10586 = !DILocation(line: 3563, column: 18, scope: !10520)
!10587 = !DILocation(line: 3563, column: 2, scope: !10520)
!10588 = !DILocation(line: 3563, column: 7, scope: !10520)
!10589 = !DILocation(line: 3563, column: 11, scope: !10520)
!10590 = !DILocation(line: 3564, column: 21, scope: !10520)
!10591 = !DILocation(line: 3564, column: 26, scope: !10520)
!10592 = !DILocation(line: 3564, column: 2, scope: !10520)
!10593 = !DILocation(line: 3564, column: 7, scope: !10520)
!10594 = !DILocation(line: 3564, column: 19, scope: !10520)
!10595 = !DILocation(line: 3566, column: 15, scope: !10520)
!10596 = !DILocation(line: 3566, column: 2, scope: !10520)
!10597 = !DILocation(line: 3567, column: 15, scope: !10520)
!10598 = !DILocation(line: 3567, column: 20, scope: !10520)
!10599 = !DILocation(line: 3567, column: 28, scope: !10520)
!10600 = !DILocation(line: 3567, column: 2, scope: !10520)
!10601 = !DILocation(line: 3571, column: 15, scope: !10520)
!10602 = !DILocation(line: 3571, column: 24, scope: !10520)
!10603 = !DILocation(line: 3571, column: 28, scope: !10520)
!10604 = !DILocation(line: 3571, column: 2, scope: !10520)
!10605 = !DILocation(line: 3572, column: 14, scope: !10520)
!10606 = !DILocation(line: 3572, column: 19, scope: !10520)
!10607 = !DILocation(line: 3572, column: 28, scope: !10520)
!10608 = !DILocation(line: 3572, column: 33, scope: !10520)
!10609 = !DILocation(line: 3572, column: 41, scope: !10520)
!10610 = !DILocation(line: 3572, column: 2, scope: !10520)
!10611 = !DILocation(line: 3575, column: 10, scope: !10520)
!10612 = !DILocation(line: 3575, column: 15, scope: !10520)
!10613 = !DILocation(line: 3575, column: 2, scope: !10520)
!10614 = !DILocation(line: 3575, column: 7, scope: !10520)
!10615 = !DILocation(line: 3575, column: 8, scope: !10520)
!10616 = !DILocation(line: 3576, column: 16, scope: !10520)
!10617 = !DILocation(line: 3576, column: 21, scope: !10520)
!10618 = !DILocation(line: 3576, column: 2, scope: !10520)
!10619 = !DILocation(line: 3576, column: 7, scope: !10520)
!10620 = !DILocation(line: 3576, column: 14, scope: !10520)
!10621 = !DILocation(line: 3580, column: 20, scope: !10520)
!10622 = !DILocation(line: 3580, column: 25, scope: !10520)
!10623 = !DILocation(line: 3580, column: 19, scope: !10520)
!10624 = !DILocation(line: 3580, column: 30, scope: !10520)
!10625 = !DILocation(line: 3580, column: 13, scope: !10520)
!10626 = !DILocation(line: 3580, column: 2, scope: !10520)
!10627 = !DILocation(line: 3580, column: 7, scope: !10520)
!10628 = !DILocation(line: 3580, column: 11, scope: !10520)
!10629 = !DILocation(line: 3583, column: 6, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 3583, column: 6)
!10631 = !DILocation(line: 3583, column: 6, scope: !10520)
!10632 = !DILocation(line: 3584, column: 19, scope: !10630)
!10633 = !DILocation(line: 3584, column: 24, scope: !10630)
!10634 = !DILocation(line: 3584, column: 18, scope: !10630)
!10635 = !DILocation(line: 3584, column: 14, scope: !10630)
!10636 = !DILocation(line: 3584, column: 3, scope: !10630)
!10637 = !DILocation(line: 3584, column: 8, scope: !10630)
!10638 = !DILocation(line: 3584, column: 12, scope: !10630)
!10639 = !DILocation(line: 3586, column: 23, scope: !10520)
!10640 = !DILocation(line: 3586, column: 28, scope: !10520)
!10641 = !DILocation(line: 3586, column: 2, scope: !10520)
!10642 = !DILocation(line: 3586, column: 7, scope: !10520)
!10643 = !DILocation(line: 3586, column: 21, scope: !10520)
!10644 = !DILocation(line: 3587, column: 1, scope: !10520)
!10645 = distinct !DISubprogram(name: "init_render_object_data", scope: !3, file: !3, line: 4557, type: !10646, scopeLine: 4558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10646 = !DISubroutineType(types: !10647)
!10647 = !{null, !6, !3063, !21}
!10648 = !DILocalVariable(name: "re", arg: 1, scope: !10645, file: !3, line: 4557, type: !6)
!10649 = !DILocation(line: 4557, column: 45, scope: !10645)
!10650 = !DILocalVariable(name: "obr", arg: 2, scope: !10645, file: !3, line: 4557, type: !3063)
!10651 = !DILocation(line: 4557, column: 60, scope: !10645)
!10652 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !10645, file: !3, line: 4557, type: !21)
!10653 = !DILocation(line: 4557, column: 69, scope: !10645)
!10654 = !DILocalVariable(name: "ob", scope: !10645, file: !3, line: 4559, type: !3236)
!10655 = !DILocation(line: 4559, column: 10, scope: !10645)
!10656 = !DILocation(line: 4559, column: 14, scope: !10645)
!10657 = !DILocation(line: 4559, column: 19, scope: !10645)
!10658 = !DILocalVariable(name: "psys", scope: !10645, file: !3, line: 4560, type: !5452)
!10659 = !DILocation(line: 4560, column: 18, scope: !10645)
!10660 = !DILocalVariable(name: "i", scope: !10645, file: !3, line: 4561, type: !21)
!10661 = !DILocation(line: 4561, column: 6, scope: !10645)
!10662 = !DILocation(line: 4563, column: 6, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 4563, column: 6)
!10664 = !DILocation(line: 4563, column: 11, scope: !10663)
!10665 = !DILocation(line: 4563, column: 6, scope: !10645)
!10666 = !DILocation(line: 4564, column: 9, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 4564, column: 7)
!10668 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 4563, column: 22)
!10669 = !DILocation(line: 4564, column: 14, scope: !10667)
!10670 = !DILocation(line: 4564, column: 19, scope: !10667)
!10671 = !DILocation(line: 4564, column: 22, scope: !10667)
!10672 = !DILocation(line: 4564, column: 27, scope: !10667)
!10673 = !DILocation(line: 4564, column: 33, scope: !10667)
!10674 = !DILocation(line: 4564, column: 39, scope: !10667)
!10675 = !DILocation(line: 4564, column: 36, scope: !10667)
!10676 = !DILocation(line: 4564, column: 42, scope: !10667)
!10677 = !DILocation(line: 4564, column: 46, scope: !10667)
!10678 = !DILocation(line: 4564, column: 51, scope: !10667)
!10679 = !DILocation(line: 4564, column: 57, scope: !10667)
!10680 = !DILocation(line: 4564, column: 62, scope: !10667)
!10681 = !DILocation(line: 4564, column: 79, scope: !10667)
!10682 = !DILocation(line: 4564, column: 84, scope: !10667)
!10683 = !DILocation(line: 4564, column: 87, scope: !10667)
!10684 = !DILocation(line: 4564, column: 91, scope: !10667)
!10685 = !DILocation(line: 4564, column: 95, scope: !10667)
!10686 = !DILocation(line: 4564, column: 7, scope: !10668)
!10687 = !DILocalVariable(name: "dm", scope: !10688, file: !3, line: 4567, type: !2263)
!10688 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 4564, column: 106)
!10689 = !DILocation(line: 4567, column: 17, scope: !10688)
!10690 = !DILocation(line: 4568, column: 8, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 4568, column: 8)
!10692 = !DILocation(line: 4568, column: 12, scope: !10691)
!10693 = !DILocation(line: 4568, column: 14, scope: !10691)
!10694 = !DILocation(line: 4568, column: 22, scope: !10691)
!10695 = !DILocation(line: 4568, column: 8, scope: !10688)
!10696 = !DILocation(line: 4569, column: 35, scope: !10691)
!10697 = !DILocation(line: 4569, column: 39, scope: !10691)
!10698 = !DILocation(line: 4569, column: 46, scope: !10691)
!10699 = !DILocation(line: 4569, column: 50, scope: !10691)
!10700 = !DILocation(line: 4569, column: 66, scope: !10691)
!10701 = !DILocation(line: 4569, column: 81, scope: !10691)
!10702 = !DILocation(line: 4569, column: 10, scope: !10691)
!10703 = !DILocation(line: 4569, column: 8, scope: !10691)
!10704 = !DILocation(line: 4569, column: 5, scope: !10691)
!10705 = !DILocation(line: 4571, column: 37, scope: !10691)
!10706 = !DILocation(line: 4571, column: 41, scope: !10691)
!10707 = !DILocation(line: 4571, column: 48, scope: !10691)
!10708 = !DILocation(line: 4571, column: 52, scope: !10691)
!10709 = !DILocation(line: 4571, column: 68, scope: !10691)
!10710 = !DILocation(line: 4571, column: 83, scope: !10691)
!10711 = !DILocation(line: 4571, column: 10, scope: !10691)
!10712 = !DILocation(line: 4571, column: 8, scope: !10691)
!10713 = !DILocation(line: 4572, column: 4, scope: !10688)
!10714 = !DILocation(line: 4572, column: 8, scope: !10688)
!10715 = !DILocation(line: 4572, column: 16, scope: !10688)
!10716 = !DILocation(line: 4573, column: 3, scope: !10688)
!10717 = !DILocation(line: 4575, column: 13, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10668, file: !3, line: 4575, column: 3)
!10719 = !DILocation(line: 4575, column: 17, scope: !10718)
!10720 = !DILocation(line: 4575, column: 32, scope: !10718)
!10721 = !DILocation(line: 4575, column: 12, scope: !10718)
!10722 = !DILocation(line: 4575, column: 40, scope: !10718)
!10723 = !DILocation(line: 4575, column: 8, scope: !10718)
!10724 = !DILocation(line: 4575, column: 44, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 4575, column: 3)
!10726 = !DILocation(line: 4575, column: 46, scope: !10725)
!10727 = !DILocation(line: 4575, column: 51, scope: !10725)
!10728 = !DILocation(line: 4575, column: 60, scope: !10725)
!10729 = !DILocation(line: 4575, column: 45, scope: !10725)
!10730 = !DILocation(line: 4575, column: 3, scope: !10718)
!10731 = !DILocation(line: 4576, column: 10, scope: !10725)
!10732 = !DILocation(line: 4576, column: 16, scope: !10725)
!10733 = !DILocation(line: 4576, column: 8, scope: !10725)
!10734 = !DILocation(line: 4576, column: 4, scope: !10725)
!10735 = !DILocation(line: 4575, column: 65, scope: !10725)
!10736 = !DILocation(line: 4575, column: 3, scope: !10725)
!10737 = distinct !{!10737, !10730, !10738}
!10738 = !DILocation(line: 4576, column: 16, scope: !10718)
!10739 = !DILocation(line: 4578, column: 30, scope: !10668)
!10740 = !DILocation(line: 4578, column: 34, scope: !10668)
!10741 = !DILocation(line: 4578, column: 39, scope: !10668)
!10742 = !DILocation(line: 4578, column: 45, scope: !10668)
!10743 = !DILocation(line: 4578, column: 3, scope: !10668)
!10744 = !DILocation(line: 4579, column: 2, scope: !10668)
!10745 = !DILocation(line: 4581, column: 7, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 4581, column: 7)
!10747 = distinct !DILexicalBlock(scope: !10663, file: !3, line: 4580, column: 7)
!10748 = !DILocation(line: 4581, column: 7, scope: !10747)
!10749 = !DILocation(line: 4582, column: 22, scope: !10746)
!10750 = !DILocation(line: 4582, column: 26, scope: !10746)
!10751 = !DILocation(line: 4582, column: 31, scope: !10746)
!10752 = !DILocation(line: 4582, column: 4, scope: !10746)
!10753 = !DILocation(line: 4583, column: 12, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10746, file: !3, line: 4583, column: 12)
!10755 = !DILocation(line: 4583, column: 16, scope: !10754)
!10756 = !DILocation(line: 4583, column: 20, scope: !10754)
!10757 = !DILocation(line: 4583, column: 12, scope: !10746)
!10758 = !DILocation(line: 4584, column: 21, scope: !10754)
!10759 = !DILocation(line: 4584, column: 25, scope: !10754)
!10760 = !DILocation(line: 4584, column: 30, scope: !10754)
!10761 = !DILocation(line: 4584, column: 4, scope: !10754)
!10762 = !DILocation(line: 4585, column: 12, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 4585, column: 12)
!10764 = !DILocation(line: 4585, column: 16, scope: !10763)
!10765 = !DILocation(line: 4585, column: 20, scope: !10763)
!10766 = !DILocation(line: 4585, column: 12, scope: !10754)
!10767 = !DILocation(line: 4586, column: 21, scope: !10763)
!10768 = !DILocation(line: 4586, column: 25, scope: !10763)
!10769 = !DILocation(line: 4586, column: 30, scope: !10763)
!10770 = !DILocation(line: 4586, column: 4, scope: !10763)
!10771 = !DILocation(line: 4587, column: 12, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 4587, column: 12)
!10773 = !DILocation(line: 4587, column: 16, scope: !10772)
!10774 = !DILocation(line: 4587, column: 20, scope: !10772)
!10775 = !DILocation(line: 4587, column: 12, scope: !10763)
!10776 = !DILocation(line: 4588, column: 22, scope: !10772)
!10777 = !DILocation(line: 4588, column: 26, scope: !10772)
!10778 = !DILocation(line: 4588, column: 4, scope: !10772)
!10779 = !DILocation(line: 4591, column: 25, scope: !10645)
!10780 = !DILocation(line: 4591, column: 29, scope: !10645)
!10781 = !DILocation(line: 4591, column: 34, scope: !10645)
!10782 = !DILocation(line: 4591, column: 2, scope: !10645)
!10783 = !DILocation(line: 4593, column: 17, scope: !10645)
!10784 = !DILocation(line: 4593, column: 22, scope: !10645)
!10785 = !DILocation(line: 4593, column: 2, scope: !10645)
!10786 = !DILocation(line: 4593, column: 6, scope: !10645)
!10787 = !DILocation(line: 4593, column: 14, scope: !10645)
!10788 = !DILocation(line: 4594, column: 17, scope: !10645)
!10789 = !DILocation(line: 4594, column: 22, scope: !10645)
!10790 = !DILocation(line: 4594, column: 2, scope: !10645)
!10791 = !DILocation(line: 4594, column: 6, scope: !10645)
!10792 = !DILocation(line: 4594, column: 14, scope: !10645)
!10793 = !DILocation(line: 4595, column: 17, scope: !10645)
!10794 = !DILocation(line: 4595, column: 22, scope: !10645)
!10795 = !DILocation(line: 4595, column: 2, scope: !10645)
!10796 = !DILocation(line: 4595, column: 6, scope: !10645)
!10797 = !DILocation(line: 4595, column: 14, scope: !10645)
!10798 = !DILocation(line: 4596, column: 19, scope: !10645)
!10799 = !DILocation(line: 4596, column: 24, scope: !10645)
!10800 = !DILocation(line: 4596, column: 2, scope: !10645)
!10801 = !DILocation(line: 4596, column: 6, scope: !10645)
!10802 = !DILocation(line: 4596, column: 16, scope: !10645)
!10803 = !DILocation(line: 4597, column: 1, scope: !10645)
!10804 = distinct !DISubprogram(name: "give_render_material", scope: !3, file: !3, line: 707, type: !10805, scopeLine: 708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10805 = !DISubroutineType(types: !10806)
!10806 = !{!4157, !6, !3236, !23}
!10807 = !DILocalVariable(name: "re", arg: 1, scope: !10804, file: !3, line: 707, type: !6)
!10808 = !DILocation(line: 707, column: 47, scope: !10804)
!10809 = !DILocalVariable(name: "ob", arg: 2, scope: !10804, file: !3, line: 707, type: !3236)
!10810 = !DILocation(line: 707, column: 59, scope: !10804)
!10811 = !DILocalVariable(name: "nr", arg: 3, scope: !10804, file: !3, line: 707, type: !23)
!10812 = !DILocation(line: 707, column: 69, scope: !10804)
!10813 = !DILocalVariable(name: "ma", scope: !10804, file: !3, line: 710, type: !4157)
!10814 = !DILocation(line: 710, column: 12, scope: !10804)
!10815 = !DILocation(line: 712, column: 28, scope: !10804)
!10816 = !DILocation(line: 712, column: 32, scope: !10804)
!10817 = !DILocation(line: 712, column: 6, scope: !10804)
!10818 = !DILocation(line: 712, column: 4, scope: !10804)
!10819 = !DILocation(line: 713, column: 6, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 713, column: 6)
!10821 = !DILocation(line: 713, column: 8, scope: !10820)
!10822 = !DILocation(line: 713, column: 6, scope: !10804)
!10823 = !DILocation(line: 714, column: 5, scope: !10820)
!10824 = !DILocation(line: 714, column: 3, scope: !10820)
!10825 = !DILocation(line: 716, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 716, column: 6)
!10827 = !DILocation(line: 716, column: 10, scope: !10826)
!10828 = !DILocation(line: 716, column: 12, scope: !10826)
!10829 = !DILocation(line: 716, column: 17, scope: !10826)
!10830 = !DILocation(line: 716, column: 6, scope: !10804)
!10831 = !DILocation(line: 716, column: 28, scope: !10826)
!10832 = !DILocation(line: 716, column: 32, scope: !10826)
!10833 = !DILocation(line: 716, column: 38, scope: !10826)
!10834 = !DILocation(line: 718, column: 6, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 718, column: 6)
!10836 = !DILocation(line: 718, column: 10, scope: !10835)
!10837 = !DILocation(line: 718, column: 24, scope: !10835)
!10838 = !DILocation(line: 718, column: 6, scope: !10804)
!10839 = !DILocation(line: 719, column: 3, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10835, file: !3, line: 718, column: 43)
!10841 = !DILocation(line: 719, column: 7, scope: !10840)
!10842 = !DILocation(line: 719, column: 12, scope: !10840)
!10843 = !DILocation(line: 720, column: 3, scope: !10840)
!10844 = !DILocation(line: 720, column: 7, scope: !10840)
!10845 = !DILocation(line: 720, column: 12, scope: !10840)
!10846 = !DILocation(line: 721, column: 2, scope: !10840)
!10847 = !DILocation(line: 722, column: 7, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 722, column: 6)
!10849 = !DILocation(line: 722, column: 11, scope: !10848)
!10850 = !DILocation(line: 722, column: 16, scope: !10848)
!10851 = !DILocation(line: 722, column: 29, scope: !10848)
!10852 = !DILocation(line: 722, column: 33, scope: !10848)
!10853 = !DILocation(line: 722, column: 37, scope: !10848)
!10854 = !DILocation(line: 722, column: 42, scope: !10848)
!10855 = !DILocation(line: 722, column: 6, scope: !10804)
!10856 = !DILocation(line: 723, column: 3, scope: !10848)
!10857 = !DILocation(line: 723, column: 7, scope: !10848)
!10858 = !DILocation(line: 723, column: 12, scope: !10848)
!10859 = !DILocation(line: 726, column: 2, scope: !10804)
!10860 = !DILocation(line: 726, column: 6, scope: !10804)
!10861 = !DILocation(line: 726, column: 11, scope: !10804)
!10862 = !DILocation(line: 728, column: 6, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 728, column: 6)
!10864 = !DILocation(line: 728, column: 10, scope: !10863)
!10865 = !DILocation(line: 728, column: 19, scope: !10863)
!10866 = !DILocation(line: 728, column: 22, scope: !10863)
!10867 = !DILocation(line: 728, column: 26, scope: !10863)
!10868 = !DILocation(line: 728, column: 6, scope: !10804)
!10869 = !DILocation(line: 729, column: 29, scope: !10863)
!10870 = !DILocation(line: 729, column: 33, scope: !10863)
!10871 = !DILocation(line: 729, column: 37, scope: !10863)
!10872 = !DILocation(line: 729, column: 3, scope: !10863)
!10873 = !DILocation(line: 731, column: 23, scope: !10804)
!10874 = !DILocation(line: 731, column: 2, scope: !10804)
!10875 = !DILocation(line: 733, column: 9, scope: !10804)
!10876 = !DILocation(line: 733, column: 2, scope: !10804)
!10877 = distinct !DISubprogram(name: "add_volume", scope: !3, file: !3, line: 3053, type: !10878, scopeLine: 3054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10878 = !DISubroutineType(types: !10879)
!10879 = !{null, !6, !3063, !4157}
!10880 = !DILocalVariable(name: "re", arg: 1, scope: !10877, file: !3, line: 3053, type: !6)
!10881 = !DILocation(line: 3053, column: 32, scope: !10877)
!10882 = !DILocalVariable(name: "obr", arg: 2, scope: !10877, file: !3, line: 3053, type: !3063)
!10883 = !DILocation(line: 3053, column: 47, scope: !10877)
!10884 = !DILocalVariable(name: "ma", arg: 3, scope: !10877, file: !3, line: 3053, type: !4157)
!10885 = !DILocation(line: 3053, column: 62, scope: !10877)
!10886 = !DILocalVariable(name: "vo", scope: !10877, file: !3, line: 3055, type: !6161)
!10887 = !DILocation(line: 3055, column: 19, scope: !10877)
!10888 = !DILocation(line: 3057, column: 7, scope: !10877)
!10889 = !DILocation(line: 3057, column: 5, scope: !10877)
!10890 = !DILocation(line: 3059, column: 11, scope: !10877)
!10891 = !DILocation(line: 3059, column: 2, scope: !10877)
!10892 = !DILocation(line: 3059, column: 6, scope: !10877)
!10893 = !DILocation(line: 3059, column: 9, scope: !10877)
!10894 = !DILocation(line: 3060, column: 12, scope: !10877)
!10895 = !DILocation(line: 3060, column: 2, scope: !10877)
!10896 = !DILocation(line: 3060, column: 6, scope: !10877)
!10897 = !DILocation(line: 3060, column: 10, scope: !10877)
!10898 = !DILocation(line: 3062, column: 15, scope: !10877)
!10899 = !DILocation(line: 3062, column: 19, scope: !10877)
!10900 = !DILocation(line: 3062, column: 28, scope: !10877)
!10901 = !DILocation(line: 3062, column: 2, scope: !10877)
!10902 = !DILocation(line: 3063, column: 1, scope: !10877)
!10903 = distinct !DISubprogram(name: "render_new_particle_system", scope: !3, file: !3, line: 1277, type: !10904, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!10904 = !DISubroutineType(types: !10905)
!10905 = !{!21, !6, !3063, !5452, !21}
!10906 = !DILocalVariable(name: "re", arg: 1, scope: !10903, file: !3, line: 1277, type: !6)
!10907 = !DILocation(line: 1277, column: 47, scope: !10903)
!10908 = !DILocalVariable(name: "obr", arg: 2, scope: !10903, file: !3, line: 1277, type: !3063)
!10909 = !DILocation(line: 1277, column: 62, scope: !10903)
!10910 = !DILocalVariable(name: "psys", arg: 3, scope: !10903, file: !3, line: 1277, type: !5452)
!10911 = !DILocation(line: 1277, column: 83, scope: !10903)
!10912 = !DILocalVariable(name: "timeoffset", arg: 4, scope: !10903, file: !3, line: 1277, type: !21)
!10913 = !DILocation(line: 1277, column: 93, scope: !10903)
!10914 = !DILocalVariable(name: "ob", scope: !10903, file: !3, line: 1279, type: !3236)
!10915 = !DILocation(line: 1279, column: 10, scope: !10903)
!10916 = !DILocation(line: 1279, column: 14, scope: !10903)
!10917 = !DILocation(line: 1279, column: 19, scope: !10903)
!10918 = !DILocalVariable(name: "ma", scope: !10903, file: !3, line: 1281, type: !4157)
!10919 = !DILocation(line: 1281, column: 12, scope: !10903)
!10920 = !DILocalVariable(name: "psmd", scope: !10903, file: !3, line: 1282, type: !10921)
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 64)
!10922 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystemModifierData", file: !556, line: 672, baseType: !10923)
!10923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystemModifierData", file: !556, line: 665, size: 1152, elements: !10924)
!10924 = !{!10925, !10926, !10927, !10928, !10929, !10930, !10931, !10932}
!10925 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !10923, file: !556, line: 666, baseType: !559, size: 896)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !10923, file: !556, line: 668, baseType: !3361, size: 64, offset: 896)
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !10923, file: !556, line: 669, baseType: !2216, size: 64, offset: 960)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "totdmvert", scope: !10923, file: !556, line: 670, baseType: !21, size: 32, offset: 1024)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "totdmedge", scope: !10923, file: !556, line: 670, baseType: !21, size: 32, offset: 1056)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "totdmface", scope: !10923, file: !556, line: 670, baseType: !21, size: 32, offset: 1088)
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10923, file: !556, line: 671, baseType: !23, size: 16, offset: 1120)
!10932 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10923, file: !556, line: 671, baseType: !23, size: 16, offset: 1136)
!10933 = !DILocation(line: 1282, column: 30, scope: !10903)
!10934 = !DILocalVariable(name: "tpsys", scope: !10903, file: !3, line: 1283, type: !5452)
!10935 = !DILocation(line: 1283, column: 18, scope: !10903)
!10936 = !DILocalVariable(name: "part", scope: !10903, file: !3, line: 1284, type: !3368)
!10937 = !DILocation(line: 1284, column: 20, scope: !10903)
!10938 = !DILocalVariable(name: "tpart", scope: !10903, file: !3, line: 1284, type: !3368)
!10939 = !DILocation(line: 1284, column: 27, scope: !10903)
!10940 = !DILocalVariable(name: "pars", scope: !10903, file: !3, line: 1285, type: !3555)
!10941 = !DILocation(line: 1285, column: 16, scope: !10903)
!10942 = !DILocalVariable(name: "pa", scope: !10903, file: !3, line: 1285, type: !3555)
!10943 = !DILocation(line: 1285, column: 23, scope: !10903)
!10944 = !DILocalVariable(name: "tpa", scope: !10903, file: !3, line: 1285, type: !3555)
!10945 = !DILocation(line: 1285, column: 35, scope: !10903)
!10946 = !DILocalVariable(name: "states", scope: !10903, file: !3, line: 1286, type: !3580)
!10947 = !DILocation(line: 1286, column: 15, scope: !10903)
!10948 = !DILocalVariable(name: "state", scope: !10903, file: !3, line: 1287, type: !3560)
!10949 = !DILocation(line: 1287, column: 14, scope: !10903)
!10950 = !DILocalVariable(name: "cache", scope: !10903, file: !3, line: 1288, type: !10951)
!10951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10952, size: 64)
!10952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleCacheKey", file: !3634, line: 130, baseType: !3633)
!10953 = !DILocation(line: 1288, column: 20, scope: !10903)
!10954 = !DILocalVariable(name: "bb", scope: !10903, file: !3, line: 1289, type: !10955)
!10955 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBillboardData", file: !3634, line: 180, baseType: !10956)
!10956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBillboardData", file: !3634, line: 169, size: 768, elements: !10957)
!10957 = !{!10958, !10959, !10960, !10961, !10962, !10963, !10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10974}
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !10956, file: !3634, line: 170, baseType: !323, size: 64)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !10956, file: !3634, line: 171, baseType: !188, size: 96, offset: 64)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !10956, file: !3634, line: 171, baseType: !188, size: 96, offset: 160)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10956, file: !3634, line: 172, baseType: !1143, size: 64, offset: 256)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10956, file: !3634, line: 173, baseType: !1143, size: 64, offset: 320)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !10956, file: !3634, line: 174, baseType: !45, size: 32, offset: 384)
!10964 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !10956, file: !3634, line: 174, baseType: !45, size: 32, offset: 416)
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !10956, file: !3634, line: 174, baseType: !45, size: 32, offset: 448)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !10956, file: !3634, line: 175, baseType: !1272, size: 96, offset: 480)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10956, file: !3634, line: 176, baseType: !21, size: 32, offset: 576)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10956, file: !3634, line: 176, baseType: !21, size: 32, offset: 608)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "totnum", scope: !10956, file: !3634, line: 177, baseType: !21, size: 32, offset: 640)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !10956, file: !3634, line: 178, baseType: !21, size: 32, offset: 672)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !10956, file: !3634, line: 179, baseType: !23, size: 16, offset: 704)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "uv_split", scope: !10956, file: !3634, line: 179, baseType: !23, size: 16, offset: 720)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !10956, file: !3634, line: 179, baseType: !23, size: 16, offset: 736)
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "split_offset", scope: !10956, file: !3634, line: 179, baseType: !23, size: 16, offset: 752)
!10975 = !DILocation(line: 1289, column: 24, scope: !10903)
!10976 = !DILocalVariable(name: "sim", scope: !10903, file: !3, line: 1290, type: !10977)
!10977 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSimulationData", file: !3634, line: 89, baseType: !10978)
!10978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSimulationData", file: !3634, line: 79, size: 384, elements: !10979)
!10979 = !{!10980, !10981, !10982, !10983, !10985, !10986}
!10980 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !10978, file: !3634, line: 80, baseType: !571, size: 64)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !10978, file: !3634, line: 81, baseType: !323, size: 64, offset: 64)
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !10978, file: !3634, line: 82, baseType: !3361, size: 64, offset: 128)
!10983 = !DIDerivedType(tag: DW_TAG_member, name: "psmd", scope: !10978, file: !3634, line: 83, baseType: !10984, size: 64, offset: 192)
!10984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10923, size: 64)
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "colliders", scope: !10978, file: !3634, line: 84, baseType: !3700, size: 64, offset: 256)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "courant_num", scope: !10978, file: !3634, line: 88, baseType: !45, size: 32, offset: 320)
!10987 = !DILocation(line: 1290, column: 25, scope: !10903)
!10988 = !DILocalVariable(name: "sd", scope: !10903, file: !3, line: 1291, type: !4187)
!10989 = !DILocation(line: 1291, column: 21, scope: !10903)
!10990 = !DILocalVariable(name: "strandbuf", scope: !10903, file: !3, line: 1292, type: !3161)
!10991 = !DILocation(line: 1292, column: 16, scope: !10903)
!10992 = !DILocalVariable(name: "svert", scope: !10903, file: !3, line: 1293, type: !3154)
!10993 = !DILocation(line: 1293, column: 14, scope: !10903)
!10994 = !DILocalVariable(name: "sbound", scope: !10903, file: !3, line: 1294, type: !10995)
!10995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10996, size: 64)
!10996 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBound", file: !10, line: 453, baseType: !3172)
!10997 = !DILocation(line: 1294, column: 15, scope: !10903)
!10998 = !DILocalVariable(name: "strand", scope: !10903, file: !3, line: 1295, type: !7489)
!10999 = !DILocation(line: 1295, column: 13, scope: !10903)
!11000 = !DILocalVariable(name: "rng", scope: !10903, file: !3, line: 1296, type: !11001)
!11001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11002, size: 64)
!11002 = !DIDerivedType(tag: DW_TAG_typedef, name: "RNG", file: !11003, line: 41, baseType: !11004)
!11003 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rand.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11004 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !11003, line: 40, flags: DIFlagFwdDecl)
!11005 = !DILocation(line: 1296, column: 7, scope: !10903)
!11006 = !DILocalVariable(name: "loc", scope: !10903, file: !3, line: 1297, type: !188)
!11007 = !DILocation(line: 1297, column: 8, scope: !10903)
!11008 = !DILocalVariable(name: "loc1", scope: !10903, file: !3, line: 1297, type: !188)
!11009 = !DILocation(line: 1297, column: 16, scope: !10903)
!11010 = !DILocalVariable(name: "loc0", scope: !10903, file: !3, line: 1297, type: !188)
!11011 = !DILocation(line: 1297, column: 25, scope: !10903)
!11012 = !DILocalVariable(name: "mat", scope: !10903, file: !3, line: 1297, type: !462)
!11013 = !DILocation(line: 1297, column: 34, scope: !10903)
!11014 = !DILocalVariable(name: "nmat", scope: !10903, file: !3, line: 1297, type: !2674)
!11015 = !DILocation(line: 1297, column: 45, scope: !10903)
!11016 = !DILocalVariable(name: "co", scope: !10903, file: !3, line: 1297, type: !188)
!11017 = !DILocation(line: 1297, column: 57, scope: !10903)
!11018 = !DILocalVariable(name: "nor", scope: !10903, file: !3, line: 1297, type: !188)
!11019 = !DILocation(line: 1297, column: 64, scope: !10903)
!11020 = !DILocalVariable(name: "duplimat", scope: !10903, file: !3, line: 1297, type: !462)
!11021 = !DILocation(line: 1297, column: 72, scope: !10903)
!11022 = !DILocalVariable(name: "strandlen", scope: !10903, file: !3, line: 1298, type: !45)
!11023 = !DILocation(line: 1298, column: 8, scope: !10903)
!11024 = !DILocalVariable(name: "curlen", scope: !10903, file: !3, line: 1298, type: !45)
!11025 = !DILocation(line: 1298, column: 24, scope: !10903)
!11026 = !DILocalVariable(name: "hasize", scope: !10903, file: !3, line: 1299, type: !45)
!11027 = !DILocation(line: 1299, column: 8, scope: !10903)
!11028 = !DILocalVariable(name: "pa_size", scope: !10903, file: !3, line: 1299, type: !45)
!11029 = !DILocation(line: 1299, column: 16, scope: !10903)
!11030 = !DILocalVariable(name: "r_tilt", scope: !10903, file: !3, line: 1299, type: !45)
!11031 = !DILocation(line: 1299, column: 25, scope: !10903)
!11032 = !DILocalVariable(name: "r_length", scope: !10903, file: !3, line: 1299, type: !45)
!11033 = !DILocation(line: 1299, column: 33, scope: !10903)
!11034 = !DILocalVariable(name: "pa_time", scope: !10903, file: !3, line: 1300, type: !45)
!11035 = !DILocation(line: 1300, column: 8, scope: !10903)
!11036 = !DILocalVariable(name: "pa_birthtime", scope: !10903, file: !3, line: 1300, type: !45)
!11037 = !DILocation(line: 1300, column: 17, scope: !10903)
!11038 = !DILocalVariable(name: "pa_dietime", scope: !10903, file: !3, line: 1300, type: !45)
!11039 = !DILocation(line: 1300, column: 31, scope: !10903)
!11040 = !DILocalVariable(name: "random", scope: !10903, file: !3, line: 1301, type: !45)
!11041 = !DILocation(line: 1301, column: 8, scope: !10903)
!11042 = !DILocalVariable(name: "simplify", scope: !10903, file: !3, line: 1301, type: !1143)
!11043 = !DILocation(line: 1301, column: 16, scope: !10903)
!11044 = !DILocalVariable(name: "pa_co", scope: !10903, file: !3, line: 1301, type: !188)
!11045 = !DILocation(line: 1301, column: 29, scope: !10903)
!11046 = !DILocalVariable(name: "cfra", scope: !10903, file: !3, line: 1302, type: !2269)
!11047 = !DILocation(line: 1302, column: 14, scope: !10903)
!11048 = !DILocation(line: 1302, column: 40, scope: !10903)
!11049 = !DILocation(line: 1302, column: 44, scope: !10903)
!11050 = !DILocation(line: 1302, column: 20, scope: !10903)
!11051 = !DILocalVariable(name: "i", scope: !10903, file: !3, line: 1303, type: !21)
!11052 = !DILocation(line: 1303, column: 6, scope: !10903)
!11053 = !DILocalVariable(name: "a", scope: !10903, file: !3, line: 1303, type: !21)
!11054 = !DILocation(line: 1303, column: 9, scope: !10903)
!11055 = !DILocalVariable(name: "k", scope: !10903, file: !3, line: 1303, type: !21)
!11056 = !DILocation(line: 1303, column: 12, scope: !10903)
!11057 = !DILocalVariable(name: "max_k", scope: !10903, file: !3, line: 1303, type: !21)
!11058 = !DILocation(line: 1303, column: 15, scope: !10903)
!11059 = !DILocalVariable(name: "totpart", scope: !10903, file: !3, line: 1303, type: !21)
!11060 = !DILocation(line: 1303, column: 24, scope: !10903)
!11061 = !DILocalVariable(name: "do_simplify", scope: !10903, file: !3, line: 1304, type: !28)
!11062 = !DILocation(line: 1304, column: 7, scope: !10903)
!11063 = !DILocalVariable(name: "do_surfacecache", scope: !10903, file: !3, line: 1304, type: !28)
!11064 = !DILocation(line: 1304, column: 28, scope: !10903)
!11065 = !DILocalVariable(name: "use_duplimat", scope: !10903, file: !3, line: 1304, type: !28)
!11066 = !DILocation(line: 1304, column: 53, scope: !10903)
!11067 = !DILocalVariable(name: "totchild", scope: !10903, file: !3, line: 1305, type: !21)
!11068 = !DILocation(line: 1305, column: 6, scope: !10903)
!11069 = !DILocalVariable(name: "step_nbr", scope: !10903, file: !3, line: 1305, type: !21)
!11070 = !DILocation(line: 1305, column: 18, scope: !10903)
!11071 = !DILocalVariable(name: "seed", scope: !10903, file: !3, line: 1306, type: !21)
!11072 = !DILocation(line: 1306, column: 6, scope: !10903)
!11073 = !DILocalVariable(name: "path_nbr", scope: !10903, file: !3, line: 1306, type: !21)
!11074 = !DILocation(line: 1306, column: 12, scope: !10903)
!11075 = !DILocalVariable(name: "orco1", scope: !10903, file: !3, line: 1306, type: !21)
!11076 = !DILocation(line: 1306, column: 24, scope: !10903)
!11077 = !DILocalVariable(name: "num", scope: !10903, file: !3, line: 1306, type: !21)
!11078 = !DILocation(line: 1306, column: 33, scope: !10903)
!11079 = !DILocalVariable(name: "totface", scope: !10903, file: !3, line: 1307, type: !21)
!11080 = !DILocation(line: 1307, column: 6, scope: !10903)
!11081 = !DILocalVariable(name: "uv_name", scope: !10903, file: !3, line: 1308, type: !11082)
!11082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!11083 = !DILocation(line: 1308, column: 15, scope: !10903)
!11084 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !10903, file: !3, line: 1310, type: !11085)
!11085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!11086 = !DILocation(line: 1310, column: 13, scope: !10903)
!11087 = !DILocalVariable(name: "index_mp_to_orig", scope: !10903, file: !3, line: 1311, type: !11085)
!11088 = !DILocation(line: 1311, column: 13, scope: !10903)
!11089 = !DILocation(line: 1314, column: 6, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1314, column: 6)
!11091 = !DILocation(line: 1314, column: 10, scope: !11090)
!11092 = !DILocation(line: 1314, column: 6, scope: !10903)
!11093 = !DILocation(line: 1315, column: 3, scope: !11090)
!11094 = !DILocation(line: 1317, column: 7, scope: !10903)
!11095 = !DILocation(line: 1317, column: 13, scope: !10903)
!11096 = !DILocation(line: 1317, column: 6, scope: !10903)
!11097 = !DILocation(line: 1318, column: 7, scope: !10903)
!11098 = !DILocation(line: 1318, column: 13, scope: !10903)
!11099 = !DILocation(line: 1318, column: 6, scope: !10903)
!11100 = !DILocation(line: 1320, column: 6, scope: !11101)
!11101 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1320, column: 6)
!11102 = !DILocation(line: 1320, column: 10, scope: !11101)
!11103 = !DILocation(line: 1320, column: 17, scope: !11101)
!11104 = !DILocation(line: 1320, column: 20, scope: !11101)
!11105 = !DILocation(line: 1320, column: 24, scope: !11101)
!11106 = !DILocation(line: 1320, column: 31, scope: !11101)
!11107 = !DILocation(line: 1320, column: 54, scope: !11101)
!11108 = !DILocation(line: 1320, column: 58, scope: !11101)
!11109 = !DILocation(line: 1320, column: 35, scope: !11101)
!11110 = !DILocation(line: 1320, column: 6, scope: !10903)
!11111 = !DILocation(line: 1321, column: 3, scope: !11101)
!11112 = !DILocation(line: 1323, column: 6, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1323, column: 6)
!11114 = !DILocation(line: 1323, column: 12, scope: !11113)
!11115 = !DILocation(line: 1323, column: 18, scope: !11113)
!11116 = !DILocation(line: 1323, column: 33, scope: !11113)
!11117 = !DILocation(line: 1323, column: 36, scope: !11113)
!11118 = !DILocation(line: 1323, column: 42, scope: !11113)
!11119 = !DILocation(line: 1323, column: 48, scope: !11113)
!11120 = !DILocation(line: 1323, column: 63, scope: !11113)
!11121 = !DILocation(line: 1323, column: 66, scope: !11113)
!11122 = !DILocation(line: 1323, column: 72, scope: !11113)
!11123 = !DILocation(line: 1323, column: 78, scope: !11113)
!11124 = !DILocation(line: 1323, column: 6, scope: !10903)
!11125 = !DILocation(line: 1324, column: 3, scope: !11113)
!11126 = !DILocation(line: 1326, column: 7, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1326, column: 6)
!11128 = !DILocation(line: 1326, column: 11, scope: !11127)
!11129 = !DILocation(line: 1326, column: 13, scope: !11127)
!11130 = !DILocation(line: 1326, column: 21, scope: !11127)
!11131 = !DILocation(line: 1326, column: 43, scope: !11127)
!11132 = !DILocation(line: 1326, column: 47, scope: !11127)
!11133 = !DILocation(line: 1326, column: 51, scope: !11127)
!11134 = !DILocation(line: 1326, column: 56, scope: !11127)
!11135 = !DILocation(line: 1326, column: 6, scope: !10903)
!11136 = !DILocation(line: 1327, column: 3, scope: !11127)
!11137 = !DILocation(line: 1332, column: 27, scope: !10903)
!11138 = !DILocation(line: 1332, column: 31, scope: !10903)
!11139 = !DILocation(line: 1332, column: 9, scope: !10903)
!11140 = !DILocation(line: 1332, column: 7, scope: !10903)
!11141 = !DILocation(line: 1333, column: 8, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1333, column: 6)
!11143 = !DILocation(line: 1333, column: 14, scope: !11142)
!11144 = !DILocation(line: 1333, column: 23, scope: !11142)
!11145 = !DILocation(line: 1333, column: 28, scope: !11142)
!11146 = !DILocation(line: 1333, column: 6, scope: !10903)
!11147 = !DILocation(line: 1334, column: 3, scope: !11142)
!11148 = !DILocation(line: 1336, column: 13, scope: !10903)
!11149 = !DILocation(line: 1336, column: 17, scope: !10903)
!11150 = !DILocation(line: 1336, column: 6, scope: !10903)
!11151 = !DILocation(line: 1336, column: 11, scope: !10903)
!11152 = !DILocation(line: 1337, column: 10, scope: !10903)
!11153 = !DILocation(line: 1337, column: 6, scope: !10903)
!11154 = !DILocation(line: 1337, column: 8, scope: !10903)
!11155 = !DILocation(line: 1338, column: 12, scope: !10903)
!11156 = !DILocation(line: 1338, column: 6, scope: !10903)
!11157 = !DILocation(line: 1338, column: 10, scope: !10903)
!11158 = !DILocation(line: 1339, column: 12, scope: !10903)
!11159 = !DILocation(line: 1339, column: 6, scope: !10903)
!11160 = !DILocation(line: 1339, column: 10, scope: !10903)
!11161 = !DILocation(line: 1341, column: 6, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1341, column: 6)
!11163 = !DILocation(line: 1341, column: 12, scope: !11162)
!11164 = !DILocation(line: 1341, column: 20, scope: !11162)
!11165 = !DILocation(line: 1341, column: 6, scope: !10903)
!11166 = !DILocation(line: 1342, column: 3, scope: !11162)
!11167 = !DILocation(line: 1344, column: 11, scope: !10903)
!11168 = !DILocation(line: 1344, column: 17, scope: !10903)
!11169 = !DILocation(line: 1344, column: 10, scope: !10903)
!11170 = !DILocation(line: 1347, column: 6, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1347, column: 6)
!11172 = !DILocation(line: 1347, column: 12, scope: !11171)
!11173 = !DILocation(line: 1347, column: 16, scope: !11171)
!11174 = !DILocation(line: 1347, column: 28, scope: !11171)
!11175 = !DILocation(line: 1347, column: 32, scope: !11171)
!11176 = !DILocation(line: 1347, column: 38, scope: !11171)
!11177 = !DILocation(line: 1347, column: 6, scope: !10903)
!11178 = !DILocation(line: 1348, column: 11, scope: !11171)
!11179 = !DILocation(line: 1348, column: 3, scope: !11171)
!11180 = !DILocation(line: 1350, column: 6, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1350, column: 6)
!11182 = !DILocation(line: 1350, column: 10, scope: !11181)
!11183 = !DILocation(line: 1350, column: 12, scope: !11181)
!11184 = !DILocation(line: 1350, column: 20, scope: !11181)
!11185 = !DILocation(line: 1350, column: 6, scope: !10903)
!11186 = !DILocation(line: 1351, column: 27, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 1350, column: 42)
!11188 = !DILocation(line: 1351, column: 20, scope: !11187)
!11189 = !DILocation(line: 1351, column: 45, scope: !11187)
!11190 = !DILocation(line: 1351, column: 51, scope: !11187)
!11191 = !DILocation(line: 1351, column: 38, scope: !11187)
!11192 = !DILocation(line: 1351, column: 36, scope: !11187)
!11193 = !DILocation(line: 1351, column: 56, scope: !11187)
!11194 = !DILocation(line: 1351, column: 14, scope: !11187)
!11195 = !DILocation(line: 1351, column: 12, scope: !11187)
!11196 = !DILocation(line: 1352, column: 14, scope: !11187)
!11197 = !DILocation(line: 1352, column: 20, scope: !11187)
!11198 = !DILocation(line: 1352, column: 12, scope: !11187)
!11199 = !DILocation(line: 1353, column: 2, scope: !11187)
!11200 = !DILocation(line: 1355, column: 14, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 1354, column: 7)
!11202 = !DILocation(line: 1355, column: 20, scope: !11201)
!11203 = !DILocation(line: 1355, column: 12, scope: !11201)
!11204 = !DILocation(line: 1358, column: 2, scope: !10903)
!11205 = !DILocation(line: 1358, column: 8, scope: !10903)
!11206 = !DILocation(line: 1358, column: 13, scope: !10903)
!11207 = !DILocation(line: 1360, column: 19, scope: !10903)
!11208 = !DILocation(line: 1360, column: 25, scope: !10903)
!11209 = !DILocation(line: 1360, column: 7, scope: !10903)
!11210 = !DILocation(line: 1360, column: 5, scope: !10903)
!11211 = !DILocation(line: 1362, column: 10, scope: !10903)
!11212 = !DILocation(line: 1362, column: 16, scope: !10903)
!11213 = !DILocation(line: 1362, column: 9, scope: !10903)
!11214 = !DILocation(line: 1364, column: 2, scope: !10903)
!11215 = !DILocation(line: 1365, column: 5, scope: !10903)
!11216 = !DILocation(line: 1365, column: 17, scope: !10903)
!11217 = !DILocation(line: 1368, column: 27, scope: !10903)
!11218 = !DILocation(line: 1368, column: 31, scope: !10903)
!11219 = !DILocation(line: 1368, column: 35, scope: !10903)
!11220 = !DILocation(line: 1368, column: 41, scope: !10903)
!11221 = !DILocation(line: 1368, column: 6, scope: !10903)
!11222 = !DILocation(line: 1368, column: 4, scope: !10903)
!11223 = !DILocation(line: 1377, column: 11, scope: !10903)
!11224 = !DILocation(line: 1377, column: 15, scope: !10903)
!11225 = !DILocation(line: 1377, column: 9, scope: !10903)
!11226 = !DILocation(line: 1378, column: 9, scope: !10903)
!11227 = !DILocation(line: 1378, column: 13, scope: !10903)
!11228 = !DILocation(line: 1378, column: 7, scope: !10903)
!11229 = !DILocation(line: 1380, column: 2, scope: !10903)
!11230 = !DILocation(line: 1380, column: 6, scope: !10903)
!11231 = !DILocation(line: 1380, column: 11, scope: !10903)
!11232 = !DILocation(line: 1382, column: 26, scope: !10903)
!11233 = !DILocation(line: 1382, column: 32, scope: !10903)
!11234 = !DILocation(line: 1382, column: 38, scope: !10903)
!11235 = !DILocation(line: 1382, column: 42, scope: !10903)
!11236 = !DILocation(line: 1382, column: 2, scope: !10903)
!11237 = !DILocation(line: 1383, column: 42, scope: !10903)
!11238 = !DILocation(line: 1383, column: 48, scope: !10903)
!11239 = !DILocation(line: 1383, column: 52, scope: !10903)
!11240 = !DILocation(line: 1383, column: 13, scope: !10903)
!11241 = !DILocation(line: 1383, column: 5, scope: !10903)
!11242 = !DILocation(line: 1383, column: 11, scope: !10903)
!11243 = !DILocation(line: 1384, column: 43, scope: !10903)
!11244 = !DILocation(line: 1384, column: 49, scope: !10903)
!11245 = !DILocation(line: 1384, column: 53, scope: !10903)
!11246 = !DILocation(line: 1384, column: 14, scope: !10903)
!11247 = !DILocation(line: 1384, column: 5, scope: !10903)
!11248 = !DILocation(line: 1384, column: 12, scope: !10903)
!11249 = !DILocation(line: 1386, column: 6, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1386, column: 6)
!11251 = !DILocation(line: 1386, column: 10, scope: !11250)
!11252 = !DILocation(line: 1386, column: 16, scope: !11250)
!11253 = !DILocation(line: 1386, column: 27, scope: !11250)
!11254 = !DILocation(line: 1386, column: 33, scope: !11250)
!11255 = !DILocation(line: 1386, column: 30, scope: !11250)
!11256 = !DILocation(line: 1386, column: 6, scope: !10903)
!11257 = !DILocation(line: 1387, column: 13, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 1386, column: 40)
!11259 = !DILocation(line: 1387, column: 28, scope: !11258)
!11260 = !DILocation(line: 1387, column: 34, scope: !11258)
!11261 = !DILocation(line: 1387, column: 25, scope: !11258)
!11262 = !DILocation(line: 1387, column: 38, scope: !11258)
!11263 = !DILocation(line: 1387, column: 6, scope: !11258)
!11264 = !DILocation(line: 1387, column: 11, scope: !11258)
!11265 = !DILocation(line: 1389, column: 7, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11258, file: !3, line: 1389, column: 7)
!11267 = !DILocation(line: 1389, column: 11, scope: !11266)
!11268 = !DILocation(line: 1389, column: 7, scope: !11258)
!11269 = !DILocation(line: 1390, column: 55, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11266, file: !3, line: 1389, column: 29)
!11271 = !DILocation(line: 1390, column: 61, scope: !11270)
!11272 = !DILocation(line: 1390, column: 65, scope: !11270)
!11273 = !DILocation(line: 1390, column: 86, scope: !11270)
!11274 = !DILocation(line: 1390, column: 90, scope: !11270)
!11275 = !DILocation(line: 1390, column: 21, scope: !11270)
!11276 = !DILocation(line: 1390, column: 7, scope: !11270)
!11277 = !DILocation(line: 1390, column: 19, scope: !11270)
!11278 = !DILocation(line: 1391, column: 50, scope: !11270)
!11279 = !DILocation(line: 1391, column: 56, scope: !11270)
!11280 = !DILocation(line: 1391, column: 60, scope: !11270)
!11281 = !DILocation(line: 1391, column: 22, scope: !11270)
!11282 = !DILocation(line: 1391, column: 7, scope: !11270)
!11283 = !DILocation(line: 1391, column: 19, scope: !11270)
!11284 = !DILocation(line: 1392, column: 3, scope: !11270)
!11285 = !DILocation(line: 1393, column: 2, scope: !11258)
!11286 = !DILocation(line: 1395, column: 6, scope: !11250)
!11287 = !DILocation(line: 1395, column: 11, scope: !11250)
!11288 = !DILocation(line: 1397, column: 9, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1397, column: 6)
!11290 = !DILocation(line: 1397, column: 6, scope: !11289)
!11291 = !DILocation(line: 1397, column: 6, scope: !10903)
!11292 = !DILocation(line: 1398, column: 13, scope: !11289)
!11293 = !DILocation(line: 1398, column: 28, scope: !11289)
!11294 = !DILocation(line: 1398, column: 25, scope: !11289)
!11295 = !DILocation(line: 1398, column: 35, scope: !11289)
!11296 = !DILocation(line: 1398, column: 6, scope: !11289)
!11297 = !DILocation(line: 1398, column: 11, scope: !11289)
!11298 = !DILocation(line: 1398, column: 3, scope: !11289)
!11299 = !DILocation(line: 1401, column: 6, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1401, column: 6)
!11301 = !DILocation(line: 1401, column: 12, scope: !11300)
!11302 = !DILocation(line: 1401, column: 19, scope: !11300)
!11303 = !DILocation(line: 1401, column: 6, scope: !10903)
!11304 = !DILocalVariable(name: "first_uv", scope: !11305, file: !3, line: 1402, type: !21)
!11305 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 1401, column: 36)
!11306 = !DILocation(line: 1402, column: 7, scope: !11305)
!11307 = !DILocation(line: 1402, column: 46, scope: !11305)
!11308 = !DILocation(line: 1402, column: 52, scope: !11305)
!11309 = !DILocation(line: 1402, column: 56, scope: !11305)
!11310 = !DILocation(line: 1402, column: 18, scope: !11305)
!11311 = !DILocation(line: 1404, column: 48, scope: !11305)
!11312 = !DILocation(line: 1404, column: 54, scope: !11305)
!11313 = !DILocation(line: 1404, column: 58, scope: !11305)
!11314 = !DILocation(line: 1404, column: 79, scope: !11305)
!11315 = !DILocation(line: 1404, column: 85, scope: !11305)
!11316 = !DILocation(line: 1404, column: 14, scope: !11305)
!11317 = !DILocation(line: 1404, column: 6, scope: !11305)
!11318 = !DILocation(line: 1404, column: 3, scope: !11305)
!11319 = !DILocation(line: 1404, column: 12, scope: !11305)
!11320 = !DILocation(line: 1405, column: 10, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1405, column: 7)
!11322 = !DILocation(line: 1405, column: 7, scope: !11321)
!11323 = !DILocation(line: 1405, column: 16, scope: !11321)
!11324 = !DILocation(line: 1405, column: 7, scope: !11305)
!11325 = !DILocation(line: 1406, column: 50, scope: !11321)
!11326 = !DILocation(line: 1406, column: 56, scope: !11321)
!11327 = !DILocation(line: 1406, column: 60, scope: !11321)
!11328 = !DILocation(line: 1406, column: 15, scope: !11321)
!11329 = !DILocation(line: 1406, column: 7, scope: !11321)
!11330 = !DILocation(line: 1406, column: 4, scope: !11321)
!11331 = !DILocation(line: 1406, column: 13, scope: !11321)
!11332 = !DILocation(line: 1408, column: 48, scope: !11305)
!11333 = !DILocation(line: 1408, column: 54, scope: !11305)
!11334 = !DILocation(line: 1408, column: 58, scope: !11305)
!11335 = !DILocation(line: 1408, column: 79, scope: !11305)
!11336 = !DILocation(line: 1408, column: 85, scope: !11305)
!11337 = !DILocation(line: 1408, column: 14, scope: !11305)
!11338 = !DILocation(line: 1408, column: 6, scope: !11305)
!11339 = !DILocation(line: 1408, column: 3, scope: !11305)
!11340 = !DILocation(line: 1408, column: 12, scope: !11305)
!11341 = !DILocation(line: 1410, column: 48, scope: !11305)
!11342 = !DILocation(line: 1410, column: 54, scope: !11305)
!11343 = !DILocation(line: 1410, column: 58, scope: !11305)
!11344 = !DILocation(line: 1410, column: 79, scope: !11305)
!11345 = !DILocation(line: 1410, column: 85, scope: !11305)
!11346 = !DILocation(line: 1410, column: 14, scope: !11305)
!11347 = !DILocation(line: 1410, column: 6, scope: !11305)
!11348 = !DILocation(line: 1410, column: 3, scope: !11305)
!11349 = !DILocation(line: 1410, column: 12, scope: !11305)
!11350 = !DILocation(line: 1412, column: 7, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1412, column: 7)
!11352 = !DILocation(line: 1412, column: 16, scope: !11351)
!11353 = !DILocation(line: 1412, column: 7, scope: !11305)
!11354 = !DILocation(line: 1413, column: 16, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11351, file: !3, line: 1412, column: 22)
!11356 = !DILocation(line: 1413, column: 7, scope: !11355)
!11357 = !DILocation(line: 1413, column: 4, scope: !11355)
!11358 = !DILocation(line: 1413, column: 13, scope: !11355)
!11359 = !DILocation(line: 1414, column: 16, scope: !11355)
!11360 = !DILocation(line: 1414, column: 7, scope: !11355)
!11361 = !DILocation(line: 1414, column: 4, scope: !11355)
!11362 = !DILocation(line: 1414, column: 13, scope: !11355)
!11363 = !DILocation(line: 1415, column: 16, scope: !11355)
!11364 = !DILocation(line: 1415, column: 7, scope: !11355)
!11365 = !DILocation(line: 1415, column: 4, scope: !11355)
!11366 = !DILocation(line: 1415, column: 13, scope: !11355)
!11367 = !DILocation(line: 1416, column: 3, scope: !11355)
!11368 = !DILocation(line: 1418, column: 14, scope: !11305)
!11369 = !DILocation(line: 1418, column: 20, scope: !11305)
!11370 = !DILocation(line: 1418, column: 6, scope: !11305)
!11371 = !DILocation(line: 1418, column: 12, scope: !11305)
!11372 = !DILocation(line: 1419, column: 13, scope: !11305)
!11373 = !DILocation(line: 1419, column: 19, scope: !11305)
!11374 = !DILocation(line: 1419, column: 6, scope: !11305)
!11375 = !DILocation(line: 1419, column: 11, scope: !11305)
!11376 = !DILocation(line: 1420, column: 13, scope: !11305)
!11377 = !DILocation(line: 1420, column: 19, scope: !11305)
!11378 = !DILocation(line: 1420, column: 24, scope: !11305)
!11379 = !DILocation(line: 1420, column: 6, scope: !11305)
!11380 = !DILocation(line: 1420, column: 11, scope: !11305)
!11381 = !DILocation(line: 1421, column: 12, scope: !11305)
!11382 = !DILocation(line: 1421, column: 18, scope: !11305)
!11383 = !DILocation(line: 1421, column: 26, scope: !11305)
!11384 = !DILocation(line: 1421, column: 32, scope: !11305)
!11385 = !DILocation(line: 1421, column: 53, scope: !11305)
!11386 = !DILocation(line: 1421, column: 40, scope: !11305)
!11387 = !DILocation(line: 1421, column: 6, scope: !11305)
!11388 = !DILocation(line: 1421, column: 9, scope: !11305)
!11389 = !DILocation(line: 1422, column: 21, scope: !11305)
!11390 = !DILocation(line: 1422, column: 27, scope: !11305)
!11391 = !DILocation(line: 1422, column: 6, scope: !11305)
!11392 = !DILocation(line: 1422, column: 19, scope: !11305)
!11393 = !DILocation(line: 1423, column: 15, scope: !11305)
!11394 = !DILocation(line: 1423, column: 23, scope: !11305)
!11395 = !DILocation(line: 1423, column: 22, scope: !11305)
!11396 = !DILocation(line: 1423, column: 6, scope: !11305)
!11397 = !DILocation(line: 1423, column: 13, scope: !11305)
!11398 = !DILocation(line: 1424, column: 17, scope: !11305)
!11399 = !DILocation(line: 1424, column: 23, scope: !11305)
!11400 = !DILocation(line: 1424, column: 6, scope: !11305)
!11401 = !DILocation(line: 1424, column: 15, scope: !11305)
!11402 = !DILocation(line: 1425, column: 2, scope: !11305)
!11403 = !DILocation(line: 1428, column: 14, scope: !10903)
!11404 = !DILocation(line: 1428, column: 19, scope: !10903)
!11405 = !DILocation(line: 1428, column: 23, scope: !10903)
!11406 = !DILocation(line: 1428, column: 32, scope: !10903)
!11407 = !DILocation(line: 1428, column: 36, scope: !10903)
!11408 = !DILocation(line: 1428, column: 2, scope: !10903)
!11409 = !DILocation(line: 1429, column: 15, scope: !10903)
!11410 = !DILocation(line: 1429, column: 19, scope: !10903)
!11411 = !DILocation(line: 1429, column: 25, scope: !10903)
!11412 = !DILocation(line: 1429, column: 2, scope: !10903)
!11413 = !DILocation(line: 1430, column: 13, scope: !10903)
!11414 = !DILocation(line: 1430, column: 19, scope: !10903)
!11415 = !DILocation(line: 1430, column: 23, scope: !10903)
!11416 = !DILocation(line: 1430, column: 2, scope: !10903)
!11417 = !DILocation(line: 1431, column: 15, scope: !10903)
!11418 = !DILocation(line: 1431, column: 2, scope: !10903)
!11419 = !DILocation(line: 1433, column: 6, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1433, column: 6)
!11421 = !DILocation(line: 1433, column: 12, scope: !11420)
!11422 = !DILocation(line: 1433, column: 17, scope: !11420)
!11423 = !DILocation(line: 1433, column: 6, scope: !10903)
!11424 = !DILocation(line: 1435, column: 15, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 1433, column: 34)
!11426 = !DILocation(line: 1435, column: 25, scope: !11425)
!11427 = !DILocation(line: 1435, column: 29, scope: !11425)
!11428 = !DILocation(line: 1435, column: 36, scope: !11425)
!11429 = !DILocation(line: 1435, column: 42, scope: !11425)
!11430 = !DILocation(line: 1435, column: 3, scope: !11425)
!11431 = !DILocation(line: 1436, column: 16, scope: !11425)
!11432 = !DILocation(line: 1437, column: 2, scope: !11425)
!11433 = !DILocation(line: 1440, column: 6, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1440, column: 6)
!11435 = !DILocation(line: 1440, column: 12, scope: !11434)
!11436 = !DILocation(line: 1440, column: 19, scope: !11434)
!11437 = !DILocation(line: 1440, column: 37, scope: !11434)
!11438 = !DILocation(line: 1440, column: 40, scope: !11434)
!11439 = !DILocation(line: 1440, column: 46, scope: !11434)
!11440 = !DILocation(line: 1440, column: 6, scope: !10903)
!11441 = !DILocation(line: 1441, column: 35, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 1440, column: 57)
!11443 = !DILocation(line: 1441, column: 26, scope: !11442)
!11444 = !DILocation(line: 1441, column: 17, scope: !11442)
!11445 = !DILocation(line: 1441, column: 12, scope: !11442)
!11446 = !DILocation(line: 1441, column: 11, scope: !11442)
!11447 = !DILocation(line: 1443, column: 7, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 1443, column: 7)
!11449 = !DILocation(line: 1443, column: 7, scope: !11442)
!11450 = !DILocation(line: 1444, column: 9, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 1444, column: 8)
!11452 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1443, column: 17)
!11453 = !DILocation(line: 1444, column: 8, scope: !11452)
!11454 = !DILocation(line: 1445, column: 31, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 1444, column: 62)
!11456 = !DILocation(line: 1445, column: 35, scope: !11455)
!11457 = !DILocation(line: 1445, column: 15, scope: !11455)
!11458 = !DILocation(line: 1445, column: 8, scope: !11455)
!11459 = !DILocation(line: 1445, column: 13, scope: !11455)
!11460 = !DILocation(line: 1446, column: 13, scope: !11461)
!11461 = distinct !DILexicalBlock(scope: !11455, file: !3, line: 1446, column: 9)
!11462 = !DILocation(line: 1446, column: 10, scope: !11461)
!11463 = !DILocation(line: 1446, column: 9, scope: !11455)
!11464 = !DILocation(line: 1447, column: 16, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11461, file: !3, line: 1446, column: 19)
!11466 = !DILocation(line: 1447, column: 45, scope: !11465)
!11467 = !DILocation(line: 1447, column: 53, scope: !11465)
!11468 = !DILocation(line: 1447, column: 52, scope: !11465)
!11469 = !DILocation(line: 1447, column: 44, scope: !11465)
!11470 = !DILocation(line: 1447, column: 43, scope: !11465)
!11471 = !DILocation(line: 1447, column: 9, scope: !11465)
!11472 = !DILocation(line: 1447, column: 14, scope: !11465)
!11473 = !DILocation(line: 1448, column: 22, scope: !11465)
!11474 = !DILocation(line: 1448, column: 26, scope: !11465)
!11475 = !DILocation(line: 1448, column: 35, scope: !11465)
!11476 = !DILocation(line: 1448, column: 6, scope: !11465)
!11477 = !DILocation(line: 1449, column: 5, scope: !11465)
!11478 = !DILocation(line: 1450, column: 4, scope: !11455)
!11479 = !DILocation(line: 1451, column: 3, scope: !11452)
!11480 = !DILocation(line: 1453, column: 7, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 1453, column: 7)
!11482 = !DILocation(line: 1453, column: 13, scope: !11481)
!11483 = !DILocation(line: 1453, column: 18, scope: !11481)
!11484 = !DILocation(line: 1453, column: 7, scope: !11442)
!11485 = !DILocation(line: 1454, column: 7, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11481, file: !3, line: 1453, column: 41)
!11487 = !DILocation(line: 1454, column: 13, scope: !11486)
!11488 = !DILocation(line: 1455, column: 26, scope: !11486)
!11489 = !DILocation(line: 1455, column: 32, scope: !11486)
!11490 = !DILocation(line: 1455, column: 19, scope: !11486)
!11491 = !DILocation(line: 1455, column: 7, scope: !11486)
!11492 = !DILocation(line: 1455, column: 17, scope: !11486)
!11493 = !DILocation(line: 1456, column: 26, scope: !11486)
!11494 = !DILocation(line: 1456, column: 21, scope: !11486)
!11495 = !DILocation(line: 1456, column: 7, scope: !11486)
!11496 = !DILocation(line: 1456, column: 19, scope: !11486)
!11497 = !DILocation(line: 1457, column: 3, scope: !11486)
!11498 = !DILocation(line: 1459, column: 7, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 1459, column: 7)
!11500 = !DILocation(line: 1459, column: 13, scope: !11499)
!11501 = !DILocation(line: 1459, column: 18, scope: !11499)
!11502 = !DILocation(line: 1459, column: 7, scope: !11442)
!11503 = !DILocation(line: 1460, column: 34, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 1459, column: 42)
!11505 = !DILocation(line: 1460, column: 40, scope: !11504)
!11506 = !DILocation(line: 1460, column: 48, scope: !11504)
!11507 = !DILocation(line: 1460, column: 47, scope: !11504)
!11508 = !DILocation(line: 1460, column: 59, scope: !11504)
!11509 = !DILocation(line: 1460, column: 67, scope: !11504)
!11510 = !DILocation(line: 1460, column: 57, scope: !11504)
!11511 = !DILocation(line: 1460, column: 15, scope: !11504)
!11512 = !DILocation(line: 1460, column: 13, scope: !11504)
!11513 = !DILocation(line: 1461, column: 19, scope: !11504)
!11514 = !DILocation(line: 1461, column: 4, scope: !11504)
!11515 = !DILocation(line: 1461, column: 15, scope: !11504)
!11516 = !DILocation(line: 1461, column: 17, scope: !11504)
!11517 = !DILocation(line: 1462, column: 20, scope: !11504)
!11518 = !DILocation(line: 1462, column: 24, scope: !11504)
!11519 = !DILocation(line: 1462, column: 4, scope: !11504)
!11520 = !DILocation(line: 1462, column: 15, scope: !11504)
!11521 = !DILocation(line: 1462, column: 18, scope: !11504)
!11522 = !DILocation(line: 1463, column: 15, scope: !11504)
!11523 = !DILocation(line: 1463, column: 26, scope: !11504)
!11524 = !DILocation(line: 1463, column: 34, scope: !11504)
!11525 = !DILocation(line: 1463, column: 38, scope: !11504)
!11526 = !DILocation(line: 1463, column: 4, scope: !11504)
!11527 = !DILocation(line: 1464, column: 21, scope: !11504)
!11528 = !DILocation(line: 1464, column: 25, scope: !11504)
!11529 = !DILocation(line: 1464, column: 4, scope: !11504)
!11530 = !DILocation(line: 1464, column: 15, scope: !11504)
!11531 = !DILocation(line: 1464, column: 19, scope: !11504)
!11532 = !DILocation(line: 1465, column: 21, scope: !11504)
!11533 = !DILocation(line: 1465, column: 25, scope: !11504)
!11534 = !DILocation(line: 1465, column: 4, scope: !11504)
!11535 = !DILocation(line: 1465, column: 15, scope: !11504)
!11536 = !DILocation(line: 1465, column: 19, scope: !11504)
!11537 = !DILocation(line: 1466, column: 4, scope: !11504)
!11538 = !DILocation(line: 1466, column: 15, scope: !11504)
!11539 = !DILocation(line: 1466, column: 23, scope: !11504)
!11540 = !DILocation(line: 1467, column: 30, scope: !11504)
!11541 = !DILocation(line: 1467, column: 25, scope: !11504)
!11542 = !DILocation(line: 1467, column: 4, scope: !11504)
!11543 = !DILocation(line: 1467, column: 15, scope: !11504)
!11544 = !DILocation(line: 1467, column: 23, scope: !11504)
!11545 = !DILocation(line: 1468, column: 30, scope: !11504)
!11546 = !DILocation(line: 1468, column: 4, scope: !11504)
!11547 = !DILocation(line: 1468, column: 15, scope: !11504)
!11548 = !DILocation(line: 1468, column: 25, scope: !11504)
!11549 = !DILocation(line: 1469, column: 25, scope: !11504)
!11550 = !DILocation(line: 1469, column: 29, scope: !11504)
!11551 = !DILocation(line: 1469, column: 4, scope: !11504)
!11552 = !DILocation(line: 1469, column: 15, scope: !11504)
!11553 = !DILocation(line: 1469, column: 23, scope: !11504)
!11554 = !DILocation(line: 1471, column: 8, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1471, column: 8)
!11556 = !DILocation(line: 1471, column: 12, scope: !11555)
!11557 = !DILocation(line: 1471, column: 29, scope: !11555)
!11558 = !DILocation(line: 1471, column: 8, scope: !11504)
!11559 = !DILocation(line: 1472, column: 5, scope: !11555)
!11560 = !DILocation(line: 1472, column: 16, scope: !11555)
!11561 = !DILocation(line: 1472, column: 25, scope: !11555)
!11562 = !DILocation(line: 1473, column: 13, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 1473, column: 13)
!11564 = !DILocation(line: 1473, column: 17, scope: !11563)
!11565 = !DILocation(line: 1473, column: 34, scope: !11563)
!11566 = !DILocation(line: 1473, column: 13, scope: !11555)
!11567 = !DILocation(line: 1474, column: 34, scope: !11563)
!11568 = !DILocation(line: 1474, column: 38, scope: !11563)
!11569 = !DILocation(line: 1474, column: 32, scope: !11563)
!11570 = !DILocation(line: 1474, column: 5, scope: !11563)
!11571 = !DILocation(line: 1474, column: 16, scope: !11563)
!11572 = !DILocation(line: 1474, column: 25, scope: !11563)
!11573 = !DILocation(line: 1476, column: 32, scope: !11563)
!11574 = !DILocation(line: 1476, column: 31, scope: !11563)
!11575 = !DILocation(line: 1476, column: 5, scope: !11563)
!11576 = !DILocation(line: 1476, column: 16, scope: !11563)
!11577 = !DILocation(line: 1476, column: 25, scope: !11563)
!11578 = !DILocation(line: 1478, column: 8, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1478, column: 8)
!11580 = !DILocation(line: 1478, column: 14, scope: !11579)
!11581 = !DILocation(line: 1478, column: 19, scope: !11579)
!11582 = !DILocation(line: 1478, column: 8, scope: !11504)
!11583 = !DILocation(line: 1479, column: 5, scope: !11579)
!11584 = !DILocation(line: 1479, column: 16, scope: !11579)
!11585 = !DILocation(line: 1479, column: 21, scope: !11579)
!11586 = !DILocation(line: 1480, column: 8, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1480, column: 8)
!11588 = !DILocation(line: 1480, column: 12, scope: !11587)
!11589 = !DILocation(line: 1480, column: 17, scope: !11587)
!11590 = !DILocation(line: 1480, column: 8, scope: !11504)
!11591 = !DILocation(line: 1481, column: 5, scope: !11587)
!11592 = !DILocation(line: 1481, column: 16, scope: !11587)
!11593 = !DILocation(line: 1481, column: 21, scope: !11587)
!11594 = !DILocation(line: 1483, column: 11, scope: !11504)
!11595 = !DILocation(line: 1483, column: 22, scope: !11504)
!11596 = !DILocation(line: 1483, column: 9, scope: !11504)
!11597 = !DILocation(line: 1485, column: 8, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1485, column: 8)
!11599 = !DILocation(line: 1485, column: 12, scope: !11598)
!11600 = !DILocation(line: 1485, column: 14, scope: !11598)
!11601 = !DILocation(line: 1485, column: 19, scope: !11598)
!11602 = !DILocation(line: 1485, column: 8, scope: !11504)
!11603 = !DILocation(line: 1486, column: 21, scope: !11598)
!11604 = !DILocation(line: 1486, column: 5, scope: !11598)
!11605 = !DILocation(line: 1487, column: 14, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 1487, column: 13)
!11607 = !DILocation(line: 1487, column: 18, scope: !11606)
!11608 = !DILocation(line: 1487, column: 23, scope: !11606)
!11609 = !DILocation(line: 1487, column: 28, scope: !11606)
!11610 = !DILocation(line: 1487, column: 75, scope: !11606)
!11611 = !DILocation(line: 1487, column: 79, scope: !11606)
!11612 = !DILocation(line: 1487, column: 83, scope: !11606)
!11613 = !DILocation(line: 1487, column: 88, scope: !11606)
!11614 = !DILocation(line: 1487, column: 105, scope: !11606)
!11615 = !DILocation(line: 1487, column: 13, scope: !11598)
!11616 = !DILocation(line: 1488, column: 9, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11606, file: !3, line: 1488, column: 9)
!11618 = !DILocation(line: 1488, column: 13, scope: !11617)
!11619 = !DILocation(line: 1488, column: 17, scope: !11617)
!11620 = !DILocation(line: 1488, column: 9, scope: !11606)
!11621 = !DILocation(line: 1489, column: 22, scope: !11617)
!11622 = !DILocation(line: 1489, column: 6, scope: !11617)
!11623 = !DILocation(line: 1488, column: 20, scope: !11617)
!11624 = !DILocation(line: 1491, column: 13, scope: !11504)
!11625 = !DILocation(line: 1491, column: 19, scope: !11504)
!11626 = !DILocation(line: 1491, column: 23, scope: !11504)
!11627 = !DILocation(line: 1491, column: 39, scope: !11504)
!11628 = !DILocation(line: 1491, column: 45, scope: !11504)
!11629 = !DILocation(line: 1491, column: 11, scope: !11504)
!11630 = !DILocation(line: 1492, column: 24, scope: !11504)
!11631 = !DILocation(line: 1492, column: 30, scope: !11504)
!11632 = !DILocation(line: 1492, column: 34, scope: !11504)
!11633 = !DILocation(line: 1492, column: 55, scope: !11504)
!11634 = !DILocation(line: 1492, column: 61, scope: !11504)
!11635 = !DILocation(line: 1492, column: 22, scope: !11504)
!11636 = !DILocation(line: 1493, column: 23, scope: !11504)
!11637 = !DILocation(line: 1493, column: 29, scope: !11504)
!11638 = !DILocation(line: 1493, column: 33, scope: !11504)
!11639 = !DILocation(line: 1493, column: 50, scope: !11504)
!11640 = !DILocation(line: 1493, column: 56, scope: !11504)
!11641 = !DILocation(line: 1493, column: 21, scope: !11504)
!11642 = !DILocation(line: 1494, column: 8, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1494, column: 8)
!11644 = !DILocation(line: 1494, column: 26, scope: !11643)
!11645 = !DILocation(line: 1494, column: 8, scope: !11504)
!11646 = !DILocation(line: 1495, column: 22, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1494, column: 35)
!11648 = !DILocation(line: 1496, column: 4, scope: !11647)
!11649 = !DILocation(line: 1497, column: 10, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1497, column: 4)
!11651 = !DILocation(line: 1497, column: 9, scope: !11650)
!11652 = !DILocation(line: 1497, column: 14, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 1497, column: 4)
!11654 = !DILocation(line: 1497, column: 16, scope: !11653)
!11655 = !DILocation(line: 1497, column: 15, scope: !11653)
!11656 = !DILocation(line: 1497, column: 4, scope: !11650)
!11657 = !DILocation(line: 1498, column: 34, scope: !11653)
!11658 = !DILocation(line: 1498, column: 45, scope: !11653)
!11659 = !DILocation(line: 1498, column: 56, scope: !11653)
!11660 = !DILocation(line: 1498, column: 55, scope: !11653)
!11661 = !DILocation(line: 1498, column: 102, scope: !11653)
!11662 = !DILocation(line: 1498, column: 121, scope: !11653)
!11663 = !DILocation(line: 1498, column: 139, scope: !11653)
!11664 = !DILocation(line: 1498, column: 77, scope: !11653)
!11665 = !DILocation(line: 1498, column: 143, scope: !11653)
!11666 = !DILocation(line: 1498, column: 27, scope: !11653)
!11667 = !DILocation(line: 1498, column: 5, scope: !11653)
!11668 = !DILocation(line: 1498, column: 16, scope: !11653)
!11669 = !DILocation(line: 1498, column: 25, scope: !11653)
!11670 = !DILocation(line: 1497, column: 26, scope: !11653)
!11671 = !DILocation(line: 1497, column: 4, scope: !11653)
!11672 = distinct !{!11672, !11656, !11673}
!11673 = !DILocation(line: 1498, column: 144, scope: !11650)
!11674 = !DILocation(line: 1500, column: 4, scope: !11504)
!11675 = !DILocation(line: 1500, column: 15, scope: !11504)
!11676 = !DILocation(line: 1500, column: 23, scope: !11504)
!11677 = !DILocation(line: 1501, column: 22, scope: !11504)
!11678 = !DILocation(line: 1501, column: 54, scope: !11504)
!11679 = !DILocation(line: 1501, column: 65, scope: !11504)
!11680 = !DILocation(line: 1501, column: 53, scope: !11504)
!11681 = !DILocation(line: 1501, column: 4, scope: !11504)
!11682 = !DILocation(line: 1501, column: 15, scope: !11504)
!11683 = !DILocation(line: 1501, column: 20, scope: !11504)
!11684 = !DILocation(line: 1502, column: 12, scope: !11504)
!11685 = !DILocation(line: 1502, column: 23, scope: !11504)
!11686 = !DILocation(line: 1502, column: 10, scope: !11504)
!11687 = !DILocation(line: 1503, column: 19, scope: !11504)
!11688 = !DILocation(line: 1503, column: 27, scope: !11504)
!11689 = !DILocation(line: 1503, column: 30, scope: !11504)
!11690 = !DILocation(line: 1503, column: 4, scope: !11504)
!11691 = !DILocation(line: 1503, column: 12, scope: !11504)
!11692 = !DILocation(line: 1503, column: 17, scope: !11504)
!11693 = !DILocation(line: 1504, column: 3, scope: !11504)
!11694 = !DILocation(line: 1505, column: 2, scope: !11442)
!11695 = !DILocation(line: 1507, column: 9, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1507, column: 6)
!11697 = !DILocation(line: 1507, column: 14, scope: !11696)
!11698 = !DILocation(line: 1507, column: 6, scope: !10903)
!11699 = !DILocation(line: 1508, column: 13, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11696, file: !3, line: 1507, column: 23)
!11701 = !DILocation(line: 1508, column: 6, scope: !11700)
!11702 = !DILocation(line: 1508, column: 11, scope: !11700)
!11703 = !DILocation(line: 1509, column: 9, scope: !11700)
!11704 = !DILocation(line: 1510, column: 2, scope: !11700)
!11705 = !DILocation(line: 1512, column: 6, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1512, column: 6)
!11707 = !DILocation(line: 1512, column: 15, scope: !11706)
!11708 = !DILocation(line: 1512, column: 6, scope: !10903)
!11709 = !DILocation(line: 1513, column: 31, scope: !11706)
!11710 = !DILocation(line: 1513, column: 3, scope: !11706)
!11711 = !DILocation(line: 1513, column: 9, scope: !11706)
!11712 = !DILocation(line: 1513, column: 29, scope: !11706)
!11713 = !DILocation(line: 1516, column: 8, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1516, column: 2)
!11715 = !DILocation(line: 1516, column: 15, scope: !11714)
!11716 = !DILocation(line: 1516, column: 14, scope: !11714)
!11717 = !DILocation(line: 1516, column: 7, scope: !11714)
!11718 = !DILocation(line: 1516, column: 21, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11714, file: !3, line: 1516, column: 2)
!11720 = !DILocation(line: 1516, column: 23, scope: !11719)
!11721 = !DILocation(line: 1516, column: 31, scope: !11719)
!11722 = !DILocation(line: 1516, column: 30, scope: !11719)
!11723 = !DILocation(line: 1516, column: 22, scope: !11719)
!11724 = !DILocation(line: 1516, column: 2, scope: !11714)
!11725 = !DILocation(line: 1517, column: 30, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11719, file: !3, line: 1516, column: 60)
!11727 = !DILocation(line: 1517, column: 12, scope: !11726)
!11728 = !DILocation(line: 1517, column: 10, scope: !11726)
!11729 = !DILocation(line: 1519, column: 7, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1519, column: 7)
!11731 = !DILocation(line: 1519, column: 9, scope: !11730)
!11732 = !DILocation(line: 1519, column: 8, scope: !11730)
!11733 = !DILocation(line: 1519, column: 7, scope: !11726)
!11734 = !DILocation(line: 1520, column: 8, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 1520, column: 8)
!11736 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 1519, column: 18)
!11737 = !DILocation(line: 1520, column: 12, scope: !11735)
!11738 = !DILocation(line: 1520, column: 17, scope: !11735)
!11739 = !DILocation(line: 1520, column: 8, scope: !11736)
!11740 = !DILocation(line: 1520, column: 33, scope: !11735)
!11741 = !DILocation(line: 1522, column: 13, scope: !11736)
!11742 = !DILocation(line: 1522, column: 18, scope: !11736)
!11743 = !DILocation(line: 1522, column: 22, scope: !11736)
!11744 = !DILocation(line: 1522, column: 17, scope: !11736)
!11745 = !DILocation(line: 1522, column: 28, scope: !11736)
!11746 = !DILocation(line: 1522, column: 32, scope: !11736)
!11747 = !DILocation(line: 1522, column: 27, scope: !11736)
!11748 = !DILocation(line: 1522, column: 11, scope: !11736)
!11749 = !DILocation(line: 1523, column: 19, scope: !11736)
!11750 = !DILocation(line: 1523, column: 23, scope: !11736)
!11751 = !DILocation(line: 1523, column: 17, scope: !11736)
!11752 = !DILocation(line: 1524, column: 17, scope: !11736)
!11753 = !DILocation(line: 1524, column: 21, scope: !11736)
!11754 = !DILocation(line: 1524, column: 15, scope: !11736)
!11755 = !DILocation(line: 1526, column: 13, scope: !11736)
!11756 = !DILocation(line: 1526, column: 17, scope: !11736)
!11757 = !DILocation(line: 1526, column: 11, scope: !11736)
!11758 = !DILocation(line: 1530, column: 8, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 1530, column: 8)
!11760 = !DILocation(line: 1530, column: 14, scope: !11759)
!11761 = !DILocation(line: 1530, column: 17, scope: !11759)
!11762 = !DILocation(line: 1530, column: 23, scope: !11759)
!11763 = !DILocation(line: 1530, column: 32, scope: !11759)
!11764 = !DILocation(line: 1530, column: 8, scope: !11736)
!11765 = !DILocation(line: 1531, column: 11, scope: !11766)
!11766 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 1530, column: 49)
!11767 = !DILocation(line: 1531, column: 18, scope: !11766)
!11768 = !DILocation(line: 1531, column: 30, scope: !11766)
!11769 = !DILocation(line: 1531, column: 34, scope: !11766)
!11770 = !DILocation(line: 1531, column: 28, scope: !11766)
!11771 = !DILocation(line: 1531, column: 9, scope: !11766)
!11772 = !DILocation(line: 1533, column: 13, scope: !11766)
!11773 = !DILocation(line: 1534, column: 13, scope: !11766)
!11774 = !DILocation(line: 1534, column: 20, scope: !11766)
!11775 = !DILocation(line: 1534, column: 26, scope: !11766)
!11776 = !DILocation(line: 1534, column: 31, scope: !11766)
!11777 = !DILocation(line: 1534, column: 36, scope: !11766)
!11778 = !DILocation(line: 1534, column: 40, scope: !11766)
!11779 = !DILocation(line: 1534, column: 53, scope: !11766)
!11780 = !DILocation(line: 1534, column: 58, scope: !11766)
!11781 = !DILocation(line: 1535, column: 13, scope: !11766)
!11782 = !DILocation(line: 1535, column: 18, scope: !11766)
!11783 = !DILocation(line: 1535, column: 27, scope: !11766)
!11784 = !DILocation(line: 1535, column: 31, scope: !11766)
!11785 = !DILocation(line: 1535, column: 51, scope: !11766)
!11786 = !DILocation(line: 1532, column: 5, scope: !11766)
!11787 = !DILocation(line: 1536, column: 4, scope: !11766)
!11788 = !DILocation(line: 1539, column: 13, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 1537, column: 9)
!11790 = !DILocation(line: 1540, column: 13, scope: !11789)
!11791 = !DILocation(line: 1540, column: 19, scope: !11789)
!11792 = !DILocation(line: 1540, column: 25, scope: !11789)
!11793 = !DILocation(line: 1540, column: 29, scope: !11789)
!11794 = !DILocation(line: 1540, column: 34, scope: !11789)
!11795 = !DILocation(line: 1540, column: 38, scope: !11789)
!11796 = !DILocation(line: 1541, column: 13, scope: !11789)
!11797 = !DILocation(line: 1541, column: 17, scope: !11789)
!11798 = !DILocation(line: 1541, column: 22, scope: !11789)
!11799 = !DILocation(line: 1541, column: 26, scope: !11789)
!11800 = !DILocation(line: 1541, column: 35, scope: !11789)
!11801 = !DILocation(line: 1541, column: 39, scope: !11789)
!11802 = !DILocation(line: 1541, column: 59, scope: !11789)
!11803 = !DILocation(line: 1538, column: 5, scope: !11789)
!11804 = !DILocation(line: 1545, column: 9, scope: !11736)
!11805 = !DILocation(line: 1545, column: 13, scope: !11736)
!11806 = !DILocation(line: 1545, column: 7, scope: !11736)
!11807 = !DILocation(line: 1547, column: 8, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 1547, column: 8)
!11809 = !DILocation(line: 1547, column: 12, scope: !11808)
!11810 = !DILocation(line: 1547, column: 8, scope: !11736)
!11811 = !DILocation(line: 1548, column: 9, scope: !11812)
!11812 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 1548, column: 9)
!11813 = !DILocation(line: 1548, column: 13, scope: !11812)
!11814 = !DILocation(line: 1548, column: 19, scope: !11812)
!11815 = !DILocation(line: 1548, column: 25, scope: !11812)
!11816 = !DILocation(line: 1548, column: 29, scope: !11812)
!11817 = !DILocation(line: 1548, column: 45, scope: !11812)
!11818 = !DILocation(line: 1548, column: 51, scope: !11812)
!11819 = !DILocation(line: 1548, column: 17, scope: !11812)
!11820 = !DILocation(line: 1548, column: 9, scope: !11808)
!11821 = !DILocation(line: 1549, column: 11, scope: !11812)
!11822 = !DILocation(line: 1549, column: 15, scope: !11812)
!11823 = !DILocation(line: 1549, column: 9, scope: !11812)
!11824 = !DILocation(line: 1549, column: 6, scope: !11812)
!11825 = !DILocation(line: 1548, column: 53, scope: !11812)
!11826 = !DILocation(line: 1551, column: 27, scope: !11736)
!11827 = !DILocation(line: 1551, column: 33, scope: !11736)
!11828 = !DILocation(line: 1551, column: 39, scope: !11736)
!11829 = !DILocation(line: 1551, column: 45, scope: !11736)
!11830 = !DILocation(line: 1551, column: 49, scope: !11736)
!11831 = !DILocation(line: 1551, column: 53, scope: !11736)
!11832 = !DILocation(line: 1551, column: 58, scope: !11736)
!11833 = !DILocation(line: 1551, column: 4, scope: !11736)
!11834 = !DILocation(line: 1553, column: 14, scope: !11736)
!11835 = !DILocation(line: 1553, column: 18, scope: !11736)
!11836 = !DILocation(line: 1553, column: 12, scope: !11736)
!11837 = !DILocation(line: 1555, column: 30, scope: !11736)
!11838 = !DILocation(line: 1555, column: 36, scope: !11736)
!11839 = !DILocation(line: 1555, column: 19, scope: !11736)
!11840 = !DILocation(line: 1555, column: 39, scope: !11736)
!11841 = !DILocation(line: 1555, column: 17, scope: !11736)
!11842 = !DILocation(line: 1555, column: 11, scope: !11736)
!11843 = !DILocation(line: 1556, column: 26, scope: !11736)
!11844 = !DILocation(line: 1556, column: 32, scope: !11736)
!11845 = !DILocation(line: 1556, column: 33, scope: !11736)
!11846 = !DILocation(line: 1556, column: 15, scope: !11736)
!11847 = !DILocation(line: 1556, column: 13, scope: !11736)
!11848 = !DILocation(line: 1558, column: 8, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 1558, column: 8)
!11850 = !DILocation(line: 1558, column: 8, scope: !11736)
!11851 = !DILocation(line: 1559, column: 13, scope: !11852)
!11852 = distinct !DILexicalBlock(scope: !11849, file: !3, line: 1558, column: 18)
!11853 = !DILocation(line: 1559, column: 19, scope: !11852)
!11854 = !DILocation(line: 1559, column: 29, scope: !11852)
!11855 = !DILocation(line: 1559, column: 11, scope: !11852)
!11856 = !DILocation(line: 1560, column: 18, scope: !11852)
!11857 = !DILocation(line: 1560, column: 25, scope: !11852)
!11858 = !DILocation(line: 1560, column: 11, scope: !11852)
!11859 = !DILocation(line: 1561, column: 4, scope: !11852)
!11860 = !DILocation(line: 1563, column: 8, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 1563, column: 8)
!11862 = !DILocation(line: 1563, column: 17, scope: !11861)
!11863 = !DILocation(line: 1563, column: 21, scope: !11861)
!11864 = !DILocation(line: 1563, column: 27, scope: !11861)
!11865 = !DILocation(line: 1563, column: 31, scope: !11861)
!11866 = !DILocation(line: 1563, column: 49, scope: !11861)
!11867 = !DILocation(line: 1563, column: 8, scope: !11736)
!11868 = !DILocation(line: 1563, column: 54, scope: !11861)
!11869 = !DILocation(line: 1564, column: 3, scope: !11736)
!11870 = !DILocalVariable(name: "cpa", scope: !11871, file: !3, line: 1566, type: !3612)
!11871 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 1565, column: 8)
!11872 = !DILocation(line: 1566, column: 19, scope: !11871)
!11873 = !DILocation(line: 1566, column: 24, scope: !11871)
!11874 = !DILocation(line: 1566, column: 30, scope: !11871)
!11875 = !DILocation(line: 1566, column: 36, scope: !11871)
!11876 = !DILocation(line: 1566, column: 35, scope: !11871)
!11877 = !DILocation(line: 1566, column: 38, scope: !11871)
!11878 = !DILocation(line: 1566, column: 37, scope: !11871)
!11879 = !DILocation(line: 1568, column: 8, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1568, column: 8)
!11881 = !DILocation(line: 1568, column: 8, scope: !11871)
!11882 = !DILocation(line: 1569, column: 13, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11880, file: !3, line: 1568, column: 18)
!11884 = !DILocation(line: 1569, column: 19, scope: !11883)
!11885 = !DILocation(line: 1569, column: 30, scope: !11883)
!11886 = !DILocation(line: 1569, column: 32, scope: !11883)
!11887 = !DILocation(line: 1569, column: 31, scope: !11883)
!11888 = !DILocation(line: 1569, column: 11, scope: !11883)
!11889 = !DILocation(line: 1571, column: 9, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 1571, column: 9)
!11891 = !DILocation(line: 1571, column: 16, scope: !11890)
!11892 = !DILocation(line: 1571, column: 22, scope: !11890)
!11893 = !DILocation(line: 1571, column: 9, scope: !11883)
!11894 = !DILocation(line: 1572, column: 6, scope: !11890)
!11895 = !DILocation(line: 1574, column: 18, scope: !11883)
!11896 = !DILocation(line: 1574, column: 25, scope: !11883)
!11897 = !DILocation(line: 1574, column: 11, scope: !11883)
!11898 = !DILocation(line: 1575, column: 4, scope: !11883)
!11899 = !DILocation(line: 1577, column: 34, scope: !11871)
!11900 = !DILocation(line: 1577, column: 40, scope: !11871)
!11901 = !DILocation(line: 1577, column: 45, scope: !11871)
!11902 = !DILocation(line: 1577, column: 14, scope: !11871)
!11903 = !DILocation(line: 1577, column: 12, scope: !11871)
!11904 = !DILocation(line: 1578, column: 34, scope: !11871)
!11905 = !DILocation(line: 1578, column: 40, scope: !11871)
!11906 = !DILocation(line: 1578, column: 45, scope: !11871)
!11907 = !DILocation(line: 1578, column: 14, scope: !11871)
!11908 = !DILocation(line: 1578, column: 12, scope: !11871)
!11909 = !DILocation(line: 1580, column: 30, scope: !11871)
!11910 = !DILocation(line: 1580, column: 36, scope: !11871)
!11911 = !DILocation(line: 1580, column: 38, scope: !11871)
!11912 = !DILocation(line: 1580, column: 19, scope: !11871)
!11913 = !DILocation(line: 1580, column: 44, scope: !11871)
!11914 = !DILocation(line: 1580, column: 17, scope: !11871)
!11915 = !DILocation(line: 1580, column: 11, scope: !11871)
!11916 = !DILocation(line: 1581, column: 26, scope: !11871)
!11917 = !DILocation(line: 1581, column: 32, scope: !11871)
!11918 = !DILocation(line: 1581, column: 34, scope: !11871)
!11919 = !DILocation(line: 1581, column: 15, scope: !11871)
!11920 = !DILocation(line: 1581, column: 13, scope: !11871)
!11921 = !DILocation(line: 1583, column: 10, scope: !11871)
!11922 = !DILocation(line: 1583, column: 15, scope: !11871)
!11923 = !DILocation(line: 1583, column: 8, scope: !11871)
!11924 = !DILocation(line: 1586, column: 8, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1586, column: 8)
!11926 = !DILocation(line: 1586, column: 14, scope: !11925)
!11927 = !DILocation(line: 1586, column: 24, scope: !11925)
!11928 = !DILocation(line: 1586, column: 8, scope: !11871)
!11929 = !DILocation(line: 1588, column: 13, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 1586, column: 45)
!11931 = !DILocation(line: 1589, column: 29, scope: !11930)
!11932 = !DILocation(line: 1589, column: 34, scope: !11930)
!11933 = !DILocation(line: 1590, column: 13, scope: !11930)
!11934 = !DILocation(line: 1590, column: 18, scope: !11930)
!11935 = !DILocation(line: 1590, column: 23, scope: !11930)
!11936 = !DILocation(line: 1590, column: 28, scope: !11930)
!11937 = !DILocation(line: 1590, column: 37, scope: !11930)
!11938 = !DILocation(line: 1590, column: 41, scope: !11930)
!11939 = !DILocation(line: 1590, column: 61, scope: !11930)
!11940 = !DILocation(line: 1587, column: 5, scope: !11930)
!11941 = !DILocation(line: 1591, column: 4, scope: !11930)
!11942 = !DILocalVariable(name: "par", scope: !11943, file: !3, line: 1593, type: !3555)
!11943 = distinct !DILexicalBlock(scope: !11925, file: !3, line: 1592, column: 9)
!11944 = !DILocation(line: 1593, column: 19, scope: !11943)
!11945 = !DILocation(line: 1593, column: 25, scope: !11943)
!11946 = !DILocation(line: 1593, column: 31, scope: !11943)
!11947 = !DILocation(line: 1593, column: 43, scope: !11943)
!11948 = !DILocation(line: 1593, column: 48, scope: !11943)
!11949 = !DILocation(line: 1593, column: 41, scope: !11943)
!11950 = !DILocation(line: 1595, column: 13, scope: !11943)
!11951 = !DILocation(line: 1596, column: 13, scope: !11943)
!11952 = !DILocation(line: 1596, column: 19, scope: !11943)
!11953 = !DILocation(line: 1596, column: 25, scope: !11943)
!11954 = !DILocation(line: 1596, column: 30, scope: !11943)
!11955 = !DILocation(line: 1596, column: 52, scope: !11943)
!11956 = !DILocation(line: 1596, column: 57, scope: !11943)
!11957 = !DILocation(line: 1597, column: 13, scope: !11943)
!11958 = !DILocation(line: 1597, column: 18, scope: !11943)
!11959 = !DILocation(line: 1597, column: 27, scope: !11943)
!11960 = !DILocation(line: 1597, column: 31, scope: !11943)
!11961 = !DILocation(line: 1597, column: 51, scope: !11943)
!11962 = !DILocation(line: 1594, column: 5, scope: !11943)
!11963 = !DILocation(line: 1601, column: 8, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1601, column: 8)
!11965 = !DILocation(line: 1601, column: 14, scope: !11964)
!11966 = !DILocation(line: 1601, column: 23, scope: !11964)
!11967 = !DILocation(line: 1601, column: 8, scope: !11871)
!11968 = !DILocation(line: 1602, column: 44, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 1601, column: 43)
!11970 = !DILocation(line: 1602, column: 50, scope: !11969)
!11971 = !DILocation(line: 1602, column: 54, scope: !11969)
!11972 = !DILocation(line: 1602, column: 59, scope: !11969)
!11973 = !DILocation(line: 1602, column: 64, scope: !11969)
!11974 = !DILocation(line: 1602, column: 69, scope: !11969)
!11975 = !DILocation(line: 1602, column: 5, scope: !11969)
!11976 = !DILocation(line: 1603, column: 4, scope: !11969)
!11977 = !DILocalVariable(name: "parent", scope: !11978, file: !3, line: 1605, type: !3555)
!11978 = distinct !DILexicalBlock(scope: !11964, file: !3, line: 1604, column: 9)
!11979 = !DILocation(line: 1605, column: 19, scope: !11978)
!11980 = !DILocation(line: 1605, column: 28, scope: !11978)
!11981 = !DILocation(line: 1605, column: 34, scope: !11978)
!11982 = !DILocation(line: 1605, column: 46, scope: !11978)
!11983 = !DILocation(line: 1605, column: 51, scope: !11978)
!11984 = !DILocation(line: 1605, column: 44, scope: !11978)
!11985 = !DILocation(line: 1606, column: 11, scope: !11978)
!11986 = !DILocation(line: 1606, column: 19, scope: !11978)
!11987 = !DILocation(line: 1606, column: 9, scope: !11978)
!11988 = !DILocation(line: 1608, column: 9, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11978, file: !3, line: 1608, column: 9)
!11990 = !DILocation(line: 1608, column: 13, scope: !11989)
!11991 = !DILocation(line: 1608, column: 9, scope: !11978)
!11992 = !DILocation(line: 1609, column: 10, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 1609, column: 10)
!11994 = !DILocation(line: 1609, column: 18, scope: !11993)
!11995 = !DILocation(line: 1609, column: 24, scope: !11993)
!11996 = !DILocation(line: 1609, column: 30, scope: !11993)
!11997 = !DILocation(line: 1609, column: 34, scope: !11993)
!11998 = !DILocation(line: 1609, column: 50, scope: !11993)
!11999 = !DILocation(line: 1609, column: 56, scope: !11993)
!12000 = !DILocation(line: 1609, column: 22, scope: !11993)
!12001 = !DILocation(line: 1609, column: 10, scope: !11989)
!12002 = !DILocation(line: 1610, column: 13, scope: !11993)
!12003 = !DILocation(line: 1610, column: 21, scope: !11993)
!12004 = !DILocation(line: 1610, column: 11, scope: !11993)
!12005 = !DILocation(line: 1610, column: 7, scope: !11993)
!12006 = !DILocation(line: 1609, column: 58, scope: !11993)
!12007 = !DILocation(line: 1612, column: 28, scope: !11978)
!12008 = !DILocation(line: 1612, column: 34, scope: !11978)
!12009 = !DILocation(line: 1612, column: 40, scope: !11978)
!12010 = !DILocation(line: 1612, column: 46, scope: !11978)
!12011 = !DILocation(line: 1612, column: 50, scope: !11978)
!12012 = !DILocation(line: 1612, column: 58, scope: !11978)
!12013 = !DILocation(line: 1612, column: 63, scope: !11978)
!12014 = !DILocation(line: 1612, column: 5, scope: !11978)
!12015 = !DILocation(line: 1615, column: 46, scope: !11871)
!12016 = !DILocation(line: 1615, column: 52, scope: !11871)
!12017 = !DILocation(line: 1615, column: 57, scope: !11871)
!12018 = !DILocation(line: 1615, column: 18, scope: !11871)
!12019 = !DILocation(line: 1615, column: 16, scope: !11871)
!12020 = !DILocation(line: 1617, column: 8, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 1617, column: 8)
!12022 = !DILocation(line: 1617, column: 8, scope: !11871)
!12023 = !DILocalVariable(name: "orignum", scope: !12024, file: !3, line: 1618, type: !21)
!12024 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 1617, column: 19)
!12025 = !DILocation(line: 1618, column: 9, scope: !12024)
!12026 = !DILocation(line: 1618, column: 20, scope: !12024)
!12027 = !DILocation(line: 1618, column: 19, scope: !12024)
!12028 = !DILocation(line: 1618, column: 66, scope: !12024)
!12029 = !DILocation(line: 1618, column: 85, scope: !12024)
!12030 = !DILocation(line: 1618, column: 103, scope: !12024)
!12031 = !DILocation(line: 1618, column: 108, scope: !12024)
!12032 = !DILocation(line: 1618, column: 41, scope: !12024)
!12033 = !DILocation(line: 1618, column: 115, scope: !12024)
!12034 = !DILocation(line: 1618, column: 120, scope: !12024)
!12035 = !DILocation(line: 1620, column: 10, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 1620, column: 9)
!12037 = !DILocation(line: 1620, column: 20, scope: !12036)
!12038 = !DILocation(line: 1620, column: 29, scope: !12036)
!12039 = !DILocation(line: 1620, column: 40, scope: !12036)
!12040 = !DILocation(line: 1620, column: 27, scope: !12036)
!12041 = !DILocation(line: 1620, column: 18, scope: !12036)
!12042 = !DILocation(line: 1620, column: 47, scope: !12036)
!12043 = !DILocation(line: 1621, column: 10, scope: !12036)
!12044 = !DILocation(line: 1621, column: 20, scope: !12036)
!12045 = !DILocation(line: 1621, column: 31, scope: !12036)
!12046 = !DILocation(line: 1621, column: 18, scope: !12036)
!12047 = !DILocation(line: 1620, column: 9, scope: !12024)
!12048 = !DILocation(line: 1623, column: 16, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 1622, column: 5)
!12050 = !DILocation(line: 1623, column: 27, scope: !12049)
!12051 = !DILocation(line: 1623, column: 33, scope: !12049)
!12052 = !DILocation(line: 1623, column: 13, scope: !12049)
!12053 = !DILocation(line: 1624, column: 36, scope: !12049)
!12054 = !DILocation(line: 1624, column: 41, scope: !12049)
!12055 = !DILocation(line: 1624, column: 22, scope: !12049)
!12056 = !DILocation(line: 1624, column: 30, scope: !12049)
!12057 = !DILocation(line: 1624, column: 34, scope: !12049)
!12058 = !DILocation(line: 1624, column: 6, scope: !12049)
!12059 = !DILocation(line: 1624, column: 14, scope: !12049)
!12060 = !DILocation(line: 1624, column: 20, scope: !12049)
!12061 = !DILocation(line: 1625, column: 5, scope: !12049)
!12062 = !DILocation(line: 1626, column: 4, scope: !12024)
!12063 = !DILocation(line: 1630, column: 14, scope: !11726)
!12064 = !DILocation(line: 1630, column: 3, scope: !11726)
!12065 = !DILocation(line: 1630, column: 12, scope: !11726)
!12066 = !DILocation(line: 1631, column: 3, scope: !11726)
!12067 = !DILocation(line: 1631, column: 12, scope: !11726)
!12068 = !DILocation(line: 1632, column: 3, scope: !11726)
!12069 = !DILocation(line: 1632, column: 12, scope: !11726)
!12070 = !DILocation(line: 1635, column: 7, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1635, column: 7)
!12072 = !DILocation(line: 1635, column: 11, scope: !12071)
!12073 = !DILocation(line: 1635, column: 18, scope: !12071)
!12074 = !DILocation(line: 1635, column: 7, scope: !11726)
!12075 = !DILocation(line: 1636, column: 14, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12071, file: !3, line: 1635, column: 37)
!12077 = !DILocation(line: 1636, column: 20, scope: !12076)
!12078 = !DILocation(line: 1636, column: 4, scope: !12076)
!12079 = !DILocation(line: 1637, column: 16, scope: !12076)
!12080 = !DILocation(line: 1637, column: 7, scope: !12076)
!12081 = !DILocation(line: 1637, column: 14, scope: !12076)
!12082 = !DILocation(line: 1638, column: 3, scope: !12076)
!12083 = !DILocation(line: 1640, column: 7, scope: !12071)
!12084 = !DILocation(line: 1640, column: 14, scope: !12071)
!12085 = !DILocation(line: 1643, column: 7, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1643, column: 7)
!12087 = !DILocation(line: 1643, column: 7, scope: !11726)
!12088 = !DILocation(line: 1644, column: 31, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12086, file: !3, line: 1643, column: 18)
!12090 = !DILocation(line: 1644, column: 36, scope: !12089)
!12091 = !DILocation(line: 1644, column: 41, scope: !12089)
!12092 = !DILocation(line: 1644, column: 50, scope: !12089)
!12093 = !DILocation(line: 1644, column: 12, scope: !12089)
!12094 = !DILocation(line: 1644, column: 10, scope: !12089)
!12095 = !DILocation(line: 1645, column: 20, scope: !12089)
!12096 = !DILocation(line: 1645, column: 4, scope: !12089)
!12097 = !DILocation(line: 1645, column: 12, scope: !12089)
!12098 = !DILocation(line: 1645, column: 18, scope: !12089)
!12099 = !DILocation(line: 1646, column: 18, scope: !12089)
!12100 = !DILocation(line: 1646, column: 4, scope: !12089)
!12101 = !DILocation(line: 1646, column: 12, scope: !12089)
!12102 = !DILocation(line: 1646, column: 16, scope: !12089)
!12103 = !DILocation(line: 1647, column: 15, scope: !12089)
!12104 = !DILocation(line: 1647, column: 23, scope: !12089)
!12105 = !DILocation(line: 1647, column: 32, scope: !12089)
!12106 = !DILocation(line: 1647, column: 4, scope: !12089)
!12107 = !DILocation(line: 1649, column: 8, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 1649, column: 8)
!12109 = !DILocation(line: 1649, column: 8, scope: !12089)
!12110 = !DILocalVariable(name: "ssimplify", scope: !12111, file: !3, line: 1650, type: !44)
!12111 = distinct !DILexicalBlock(scope: !12108, file: !3, line: 1649, column: 21)
!12112 = !DILocation(line: 1650, column: 12, scope: !12111)
!12113 = !DILocation(line: 1650, column: 49, scope: !12111)
!12114 = !DILocation(line: 1650, column: 54, scope: !12111)
!12115 = !DILocation(line: 1650, column: 23, scope: !12111)
!12116 = !DILocation(line: 1651, column: 19, scope: !12111)
!12117 = !DILocation(line: 1651, column: 5, scope: !12111)
!12118 = !DILocation(line: 1651, column: 17, scope: !12111)
!12119 = !DILocation(line: 1652, column: 19, scope: !12111)
!12120 = !DILocation(line: 1652, column: 5, scope: !12111)
!12121 = !DILocation(line: 1652, column: 17, scope: !12111)
!12122 = !DILocation(line: 1653, column: 4, scope: !12111)
!12123 = !DILocation(line: 1655, column: 11, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 1655, column: 8)
!12125 = !DILocation(line: 1655, column: 8, scope: !12124)
!12126 = !DILocation(line: 1655, column: 8, scope: !12089)
!12127 = !DILocalVariable(name: "snor", scope: !12128, file: !3, line: 1656, type: !44)
!12128 = distinct !DILexicalBlock(scope: !12124, file: !3, line: 1655, column: 20)
!12129 = !DILocation(line: 1656, column: 12, scope: !12128)
!12130 = !DILocation(line: 1656, column: 43, scope: !12128)
!12131 = !DILocation(line: 1656, column: 48, scope: !12128)
!12132 = !DILocation(line: 1656, column: 18, scope: !12128)
!12133 = !DILocation(line: 1657, column: 16, scope: !12128)
!12134 = !DILocation(line: 1657, column: 25, scope: !12128)
!12135 = !DILocation(line: 1657, column: 5, scope: !12128)
!12136 = !DILocation(line: 1658, column: 4, scope: !12128)
!12137 = !DILocation(line: 1660, column: 8, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 1660, column: 8)
!12139 = !DILocation(line: 1660, column: 24, scope: !12138)
!12140 = !DILocation(line: 1660, column: 27, scope: !12138)
!12141 = !DILocation(line: 1660, column: 31, scope: !12138)
!12142 = !DILocation(line: 1660, column: 8, scope: !12089)
!12143 = !DILocalVariable(name: "facenum", scope: !12144, file: !3, line: 1661, type: !42)
!12144 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 1660, column: 37)
!12145 = !DILocation(line: 1661, column: 10, scope: !12144)
!12146 = !DILocation(line: 1661, column: 41, scope: !12144)
!12147 = !DILocation(line: 1661, column: 46, scope: !12144)
!12148 = !DILocation(line: 1661, column: 19, scope: !12144)
!12149 = !DILocation(line: 1662, column: 15, scope: !12144)
!12150 = !DILocation(line: 1662, column: 6, scope: !12144)
!12151 = !DILocation(line: 1662, column: 13, scope: !12144)
!12152 = !DILocation(line: 1663, column: 4, scope: !12144)
!12153 = !DILocation(line: 1665, column: 11, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 1665, column: 8)
!12155 = !DILocation(line: 1665, column: 8, scope: !12154)
!12156 = !DILocation(line: 1665, column: 8, scope: !12089)
!12157 = !DILocation(line: 1666, column: 11, scope: !12158)
!12158 = distinct !DILexicalBlock(scope: !12159, file: !3, line: 1666, column: 5)
!12159 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 1665, column: 17)
!12160 = !DILocation(line: 1666, column: 10, scope: !12158)
!12161 = !DILocation(line: 1666, column: 15, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12158, file: !3, line: 1666, column: 5)
!12163 = !DILocation(line: 1666, column: 20, scope: !12162)
!12164 = !DILocation(line: 1666, column: 16, scope: !12162)
!12165 = !DILocation(line: 1666, column: 5, scope: !12158)
!12166 = !DILocation(line: 1667, column: 10, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 1667, column: 10)
!12168 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 1666, column: 32)
!12169 = !DILocation(line: 1667, column: 18, scope: !12167)
!12170 = !DILocation(line: 1667, column: 12, scope: !12167)
!12171 = !DILocation(line: 1667, column: 10, scope: !12168)
!12172 = !DILocalVariable(name: "uv", scope: !12173, file: !3, line: 1668, type: !44)
!12173 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 1667, column: 31)
!12174 = !DILocation(line: 1668, column: 14, scope: !12173)
!12175 = !DILocation(line: 1668, column: 38, scope: !12173)
!12176 = !DILocation(line: 1668, column: 43, scope: !12173)
!12177 = !DILocation(line: 1668, column: 51, scope: !12173)
!12178 = !DILocation(line: 1668, column: 18, scope: !12173)
!12179 = !DILocation(line: 1670, column: 17, scope: !12173)
!12180 = !DILocation(line: 1670, column: 24, scope: !12173)
!12181 = !DILocation(line: 1670, column: 23, scope: !12173)
!12182 = !DILocation(line: 1670, column: 14, scope: !12173)
!12183 = !DILocation(line: 1670, column: 7, scope: !12173)
!12184 = !DILocation(line: 1670, column: 12, scope: !12173)
!12185 = !DILocation(line: 1671, column: 17, scope: !12173)
!12186 = !DILocation(line: 1671, column: 24, scope: !12173)
!12187 = !DILocation(line: 1671, column: 23, scope: !12173)
!12188 = !DILocation(line: 1671, column: 25, scope: !12173)
!12189 = !DILocation(line: 1671, column: 14, scope: !12173)
!12190 = !DILocation(line: 1671, column: 7, scope: !12173)
!12191 = !DILocation(line: 1671, column: 12, scope: !12173)
!12192 = !DILocation(line: 1672, column: 6, scope: !12173)
!12193 = !DILocation(line: 1673, column: 5, scope: !12168)
!12194 = !DILocation(line: 1666, column: 28, scope: !12162)
!12195 = !DILocation(line: 1666, column: 5, scope: !12162)
!12196 = distinct !{!12196, !12165, !12197}
!12197 = !DILocation(line: 1673, column: 5, scope: !12158)
!12198 = !DILocation(line: 1674, column: 4, scope: !12159)
!12199 = !DILocation(line: 1675, column: 11, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 1675, column: 8)
!12201 = !DILocation(line: 1675, column: 8, scope: !12200)
!12202 = !DILocation(line: 1675, column: 8, scope: !12089)
!12203 = !DILocation(line: 1676, column: 11, scope: !12204)
!12204 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 1676, column: 5)
!12205 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 1675, column: 17)
!12206 = !DILocation(line: 1676, column: 10, scope: !12204)
!12207 = !DILocation(line: 1676, column: 15, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12204, file: !3, line: 1676, column: 5)
!12209 = !DILocation(line: 1676, column: 20, scope: !12208)
!12210 = !DILocation(line: 1676, column: 16, scope: !12208)
!12211 = !DILocation(line: 1676, column: 5, scope: !12204)
!12212 = !DILocalVariable(name: "mc", scope: !12213, file: !3, line: 1677, type: !4147)
!12213 = distinct !DILexicalBlock(scope: !12208, file: !3, line: 1676, column: 33)
!12214 = !DILocation(line: 1677, column: 12, scope: !12213)
!12215 = !DILocation(line: 1677, column: 38, scope: !12213)
!12216 = !DILocation(line: 1677, column: 43, scope: !12213)
!12217 = !DILocation(line: 1677, column: 51, scope: !12213)
!12218 = !DILocation(line: 1677, column: 16, scope: !12213)
!12219 = !DILocation(line: 1678, column: 7, scope: !12213)
!12220 = !DILocation(line: 1678, column: 15, scope: !12213)
!12221 = !DILocation(line: 1678, column: 20, scope: !12213)
!12222 = !DILocation(line: 1678, column: 12, scope: !12213)
!12223 = !DILocation(line: 1679, column: 5, scope: !12213)
!12224 = !DILocation(line: 1676, column: 29, scope: !12208)
!12225 = !DILocation(line: 1676, column: 5, scope: !12208)
!12226 = distinct !{!12226, !12211, !12227}
!12227 = !DILocation(line: 1679, column: 5, scope: !12204)
!12228 = !DILocation(line: 1680, column: 4, scope: !12205)
!12229 = !DILocation(line: 1682, column: 4, scope: !12089)
!12230 = !DILocation(line: 1682, column: 12, scope: !12089)
!12231 = !DILocation(line: 1682, column: 15, scope: !12089)
!12232 = !DILocation(line: 1683, column: 3, scope: !12089)
!12233 = !DILocation(line: 1686, column: 7, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1686, column: 7)
!12235 = !DILocation(line: 1686, column: 7, scope: !11726)
!12236 = !DILocation(line: 1687, column: 13, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 1686, column: 17)
!12238 = !DILocation(line: 1688, column: 10, scope: !12237)
!12239 = !DILocation(line: 1689, column: 10, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 1689, column: 4)
!12241 = !DILocation(line: 1689, column: 9, scope: !12240)
!12242 = !DILocation(line: 1689, column: 14, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12240, file: !3, line: 1689, column: 4)
!12244 = !DILocation(line: 1689, column: 17, scope: !12243)
!12245 = !DILocation(line: 1689, column: 15, scope: !12243)
!12246 = !DILocation(line: 1689, column: 4, scope: !12240)
!12247 = !DILocation(line: 1690, column: 9, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 1690, column: 9)
!12249 = !DILocation(line: 1690, column: 12, scope: !12248)
!12250 = !DILocation(line: 1690, column: 10, scope: !12248)
!12251 = !DILocation(line: 1690, column: 9, scope: !12243)
!12252 = !DILocation(line: 1691, column: 29, scope: !12248)
!12253 = !DILocation(line: 1691, column: 35, scope: !12248)
!12254 = !DILocation(line: 1691, column: 34, scope: !12248)
!12255 = !DILocation(line: 1691, column: 36, scope: !12248)
!12256 = !DILocation(line: 1691, column: 41, scope: !12248)
!12257 = !DILocation(line: 1691, column: 28, scope: !12248)
!12258 = !DILocation(line: 1691, column: 46, scope: !12248)
!12259 = !DILocation(line: 1691, column: 52, scope: !12248)
!12260 = !DILocation(line: 1691, column: 51, scope: !12248)
!12261 = !DILocation(line: 1691, column: 56, scope: !12248)
!12262 = !DILocation(line: 1691, column: 45, scope: !12248)
!12263 = !DILocation(line: 1691, column: 19, scope: !12248)
!12264 = !DILocation(line: 1691, column: 16, scope: !12248)
!12265 = !DILocation(line: 1691, column: 6, scope: !12248)
!12266 = !DILocation(line: 1689, column: 28, scope: !12243)
!12267 = !DILocation(line: 1689, column: 4, scope: !12243)
!12268 = distinct !{!12268, !12246, !12269}
!12269 = !DILocation(line: 1691, column: 58, scope: !12240)
!12270 = !DILocation(line: 1692, column: 3, scope: !12237)
!12271 = !DILocation(line: 1694, column: 7, scope: !12272)
!12272 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1694, column: 7)
!12273 = !DILocation(line: 1694, column: 7, scope: !11726)
!12274 = !DILocation(line: 1696, column: 10, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 1696, column: 4)
!12276 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 1694, column: 17)
!12277 = !DILocation(line: 1696, column: 9, scope: !12275)
!12278 = !DILocation(line: 1696, column: 14, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 1696, column: 4)
!12280 = !DILocation(line: 1696, column: 17, scope: !12279)
!12281 = !DILocation(line: 1696, column: 15, scope: !12279)
!12282 = !DILocation(line: 1696, column: 4, scope: !12275)
!12283 = !DILocalVariable(name: "time", scope: !12284, file: !3, line: 1697, type: !45)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 1696, column: 32)
!12285 = !DILocation(line: 1697, column: 11, scope: !12284)
!12286 = !DILocation(line: 1699, column: 9, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1699, column: 9)
!12288 = !DILocation(line: 1699, column: 12, scope: !12287)
!12289 = !DILocation(line: 1699, column: 10, scope: !12287)
!12290 = !DILocation(line: 1699, column: 9, scope: !12284)
!12291 = !DILocation(line: 1700, column: 23, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 1699, column: 19)
!12293 = !DILocation(line: 1700, column: 17, scope: !12292)
!12294 = !DILocation(line: 1700, column: 28, scope: !12292)
!12295 = !DILocation(line: 1700, column: 34, scope: !12292)
!12296 = !DILocation(line: 1700, column: 33, scope: !12292)
!12297 = !DILocation(line: 1700, column: 38, scope: !12292)
!12298 = !DILocation(line: 1700, column: 27, scope: !12292)
!12299 = !DILocation(line: 1700, column: 6, scope: !12292)
!12300 = !DILocation(line: 1701, column: 23, scope: !12292)
!12301 = !DILocation(line: 1701, column: 17, scope: !12292)
!12302 = !DILocation(line: 1701, column: 29, scope: !12292)
!12303 = !DILocation(line: 1701, column: 35, scope: !12292)
!12304 = !DILocation(line: 1701, column: 34, scope: !12292)
!12305 = !DILocation(line: 1701, column: 39, scope: !12292)
!12306 = !DILocation(line: 1701, column: 28, scope: !12292)
!12307 = !DILocation(line: 1701, column: 6, scope: !12292)
!12308 = !DILocation(line: 1702, column: 5, scope: !12292)
!12309 = !DILocation(line: 1704, column: 6, scope: !12287)
!12310 = !DILocation(line: 1706, column: 9, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1706, column: 9)
!12312 = !DILocation(line: 1706, column: 11, scope: !12311)
!12313 = !DILocation(line: 1706, column: 9, scope: !12284)
!12314 = !DILocation(line: 1707, column: 26, scope: !12311)
!12315 = !DILocation(line: 1707, column: 32, scope: !12311)
!12316 = !DILocation(line: 1707, column: 31, scope: !12311)
!12317 = !DILocation(line: 1707, column: 33, scope: !12311)
!12318 = !DILocation(line: 1707, column: 38, scope: !12311)
!12319 = !DILocation(line: 1707, column: 25, scope: !12311)
!12320 = !DILocation(line: 1707, column: 43, scope: !12311)
!12321 = !DILocation(line: 1707, column: 49, scope: !12311)
!12322 = !DILocation(line: 1707, column: 48, scope: !12311)
!12323 = !DILocation(line: 1707, column: 53, scope: !12311)
!12324 = !DILocation(line: 1707, column: 42, scope: !12311)
!12325 = !DILocation(line: 1707, column: 16, scope: !12311)
!12326 = !DILocation(line: 1707, column: 13, scope: !12311)
!12327 = !DILocation(line: 1707, column: 6, scope: !12311)
!12328 = !DILocation(line: 1708, column: 11, scope: !12284)
!12329 = !DILocation(line: 1708, column: 18, scope: !12284)
!12330 = !DILocation(line: 1708, column: 17, scope: !12284)
!12331 = !DILocation(line: 1708, column: 9, scope: !12284)
!12332 = !DILocation(line: 1710, column: 16, scope: !12284)
!12333 = !DILocation(line: 1710, column: 27, scope: !12284)
!12334 = !DILocation(line: 1710, column: 21, scope: !12284)
!12335 = !DILocation(line: 1710, column: 5, scope: !12284)
!12336 = !DILocation(line: 1711, column: 15, scope: !12284)
!12337 = !DILocation(line: 1711, column: 19, scope: !12284)
!12338 = !DILocation(line: 1711, column: 28, scope: !12284)
!12339 = !DILocation(line: 1711, column: 5, scope: !12284)
!12340 = !DILocation(line: 1713, column: 9, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 1713, column: 9)
!12342 = !DILocation(line: 1713, column: 9, scope: !12284)
!12343 = !DILocation(line: 1714, column: 17, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 1713, column: 20)
!12345 = !DILocation(line: 1714, column: 24, scope: !12344)
!12346 = !DILocation(line: 1714, column: 28, scope: !12344)
!12347 = !DILocation(line: 1714, column: 6, scope: !12344)
!12348 = !DILocation(line: 1715, column: 36, scope: !12344)
!12349 = !DILocation(line: 1715, column: 35, scope: !12344)
!12350 = !DILocation(line: 1715, column: 29, scope: !12344)
!12351 = !DILocation(line: 1715, column: 6, scope: !12344)
!12352 = !DILocation(line: 1715, column: 13, scope: !12344)
!12353 = !DILocation(line: 1715, column: 21, scope: !12344)
!12354 = !DILocation(line: 1716, column: 11, scope: !12344)
!12355 = !DILocation(line: 1717, column: 6, scope: !12344)
!12356 = !DILocation(line: 1717, column: 14, scope: !12344)
!12357 = !DILocation(line: 1717, column: 21, scope: !12344)
!12358 = !DILocation(line: 1718, column: 5, scope: !12344)
!12359 = !DILocation(line: 1720, column: 16, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 1719, column: 10)
!12361 = !DILocation(line: 1720, column: 9, scope: !12360)
!12362 = !DILocation(line: 1720, column: 14, scope: !12360)
!12363 = !DILocation(line: 1722, column: 10, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 1722, column: 10)
!12365 = !DILocation(line: 1722, column: 11, scope: !12364)
!12366 = !DILocation(line: 1722, column: 10, scope: !12360)
!12367 = !DILocation(line: 1723, column: 10, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 1722, column: 16)
!12369 = !DILocation(line: 1723, column: 16, scope: !12368)
!12370 = !DILocation(line: 1724, column: 10, scope: !12368)
!12371 = !DILocation(line: 1724, column: 15, scope: !12368)
!12372 = !DILocation(line: 1725, column: 19, scope: !12368)
!12373 = !DILocation(line: 1725, column: 25, scope: !12368)
!12374 = !DILocation(line: 1725, column: 31, scope: !12368)
!12375 = !DILocation(line: 1725, column: 7, scope: !12368)
!12376 = !DILocation(line: 1726, column: 19, scope: !12368)
!12377 = !DILocation(line: 1726, column: 25, scope: !12368)
!12378 = !DILocation(line: 1726, column: 31, scope: !12368)
!12379 = !DILocation(line: 1726, column: 7, scope: !12368)
!12380 = !DILocation(line: 1728, column: 22, scope: !12368)
!12381 = !DILocation(line: 1728, column: 26, scope: !12368)
!12382 = !DILocation(line: 1728, column: 31, scope: !12368)
!12383 = !DILocation(line: 1728, column: 37, scope: !12368)
!12384 = !DILocation(line: 1728, column: 41, scope: !12368)
!12385 = !DILocation(line: 1728, column: 50, scope: !12368)
!12386 = !DILocation(line: 1728, column: 56, scope: !12368)
!12387 = !DILocation(line: 1728, column: 62, scope: !12368)
!12388 = !DILocation(line: 1728, column: 68, scope: !12368)
!12389 = !DILocation(line: 1728, column: 7, scope: !12368)
!12390 = !DILocation(line: 1729, column: 6, scope: !12368)
!12391 = !DILocation(line: 1731, column: 9, scope: !12360)
!12392 = !DILocation(line: 1731, column: 15, scope: !12360)
!12393 = !DILocation(line: 1732, column: 16, scope: !12360)
!12394 = !DILocation(line: 1732, column: 9, scope: !12360)
!12395 = !DILocation(line: 1732, column: 14, scope: !12360)
!12396 = !DILocation(line: 1734, column: 10, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 1734, column: 10)
!12398 = !DILocation(line: 1734, column: 10, scope: !12360)
!12399 = !DILocation(line: 1735, column: 22, scope: !12397)
!12400 = !DILocation(line: 1735, column: 26, scope: !12397)
!12401 = !DILocation(line: 1735, column: 31, scope: !12397)
!12402 = !DILocation(line: 1735, column: 37, scope: !12397)
!12403 = !DILocation(line: 1735, column: 41, scope: !12397)
!12404 = !DILocation(line: 1735, column: 50, scope: !12397)
!12405 = !DILocation(line: 1735, column: 55, scope: !12397)
!12406 = !DILocation(line: 1735, column: 61, scope: !12397)
!12407 = !DILocation(line: 1735, column: 67, scope: !12397)
!12408 = !DILocation(line: 1735, column: 7, scope: !12397)
!12409 = !DILocation(line: 1737, column: 17, scope: !12360)
!12410 = !DILocation(line: 1737, column: 23, scope: !12360)
!12411 = !DILocation(line: 1737, column: 6, scope: !12360)
!12412 = !DILocation(line: 1739, column: 4, scope: !12284)
!12413 = !DILocation(line: 1696, column: 28, scope: !12279)
!12414 = !DILocation(line: 1696, column: 4, scope: !12279)
!12415 = distinct !{!12415, !12282, !12416}
!12416 = !DILocation(line: 1739, column: 4, scope: !12275)
!12417 = !DILocation(line: 1741, column: 3, scope: !12276)
!12418 = !DILocation(line: 1744, column: 8, scope: !12419)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !3, line: 1744, column: 8)
!12420 = distinct !DILexicalBlock(scope: !12272, file: !3, line: 1742, column: 8)
!12421 = !DILocation(line: 1744, column: 14, scope: !12419)
!12422 = !DILocation(line: 1744, column: 26, scope: !12419)
!12423 = !DILocation(line: 1744, column: 8, scope: !12420)
!12424 = !DILocalVariable(name: "length", scope: !12425, file: !3, line: 1745, type: !45)
!12425 = distinct !DILexicalBlock(scope: !12419, file: !3, line: 1744, column: 31)
!12426 = !DILocation(line: 1745, column: 11, scope: !12425)
!12427 = !DILocation(line: 1745, column: 20, scope: !12425)
!12428 = !DILocation(line: 1745, column: 26, scope: !12425)
!12429 = !DILocation(line: 1745, column: 45, scope: !12425)
!12430 = !DILocation(line: 1745, column: 51, scope: !12425)
!12431 = !DILocation(line: 1745, column: 64, scope: !12425)
!12432 = !DILocation(line: 1745, column: 62, scope: !12425)
!12433 = !DILocation(line: 1745, column: 43, scope: !12425)
!12434 = !DILocation(line: 1745, column: 35, scope: !12425)
!12435 = !DILocalVariable(name: "trail_count", scope: !12425, file: !3, line: 1746, type: !21)
!12436 = !DILocation(line: 1746, column: 9, scope: !12425)
!12437 = !DILocation(line: 1746, column: 23, scope: !12425)
!12438 = !DILocation(line: 1746, column: 29, scope: !12425)
!12439 = !DILocation(line: 1746, column: 51, scope: !12425)
!12440 = !DILocation(line: 1746, column: 57, scope: !12425)
!12441 = !DILocation(line: 1746, column: 70, scope: !12425)
!12442 = !DILocation(line: 1746, column: 68, scope: !12425)
!12443 = !DILocation(line: 1746, column: 49, scope: !12425)
!12444 = !DILocation(line: 1746, column: 41, scope: !12425)
!12445 = !DILocalVariable(name: "ct", scope: !12425, file: !3, line: 1747, type: !45)
!12446 = !DILocation(line: 1747, column: 11, scope: !12425)
!12447 = !DILocation(line: 1747, column: 17, scope: !12425)
!12448 = !DILocation(line: 1747, column: 23, scope: !12425)
!12449 = !DILocation(line: 1747, column: 28, scope: !12425)
!12450 = !DILocation(line: 1747, column: 16, scope: !12425)
!12451 = !DILocation(line: 1747, column: 52, scope: !12425)
!12452 = !DILocation(line: 1747, column: 59, scope: !12425)
!12453 = !DILocalVariable(name: "dt", scope: !12425, file: !3, line: 1748, type: !45)
!12454 = !DILocation(line: 1748, column: 11, scope: !12425)
!12455 = !DILocation(line: 1748, column: 16, scope: !12425)
!12456 = !DILocation(line: 1748, column: 26, scope: !12425)
!12457 = !DILocation(line: 1748, column: 47, scope: !12425)
!12458 = !DILocation(line: 1748, column: 40, scope: !12425)
!12459 = !DILocation(line: 1748, column: 23, scope: !12425)
!12460 = !DILocation(line: 1751, column: 31, scope: !12425)
!12461 = !DILocation(line: 1751, column: 35, scope: !12425)
!12462 = !DILocation(line: 1751, column: 5, scope: !12425)
!12463 = !DILocation(line: 1753, column: 11, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 1753, column: 5)
!12465 = !DILocation(line: 1753, column: 10, scope: !12464)
!12466 = !DILocation(line: 1753, column: 15, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 1753, column: 5)
!12468 = !DILocation(line: 1753, column: 19, scope: !12467)
!12469 = !DILocation(line: 1753, column: 17, scope: !12467)
!12470 = !DILocation(line: 1753, column: 5, scope: !12464)
!12471 = !DILocation(line: 1754, column: 10, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 1754, column: 10)
!12473 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 1753, column: 47)
!12474 = !DILocation(line: 1754, column: 16, scope: !12472)
!12475 = !DILocation(line: 1754, column: 21, scope: !12472)
!12476 = !DILocation(line: 1754, column: 10, scope: !12473)
!12477 = !DILocation(line: 1755, column: 11, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 1755, column: 11)
!12479 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 1754, column: 43)
!12480 = !DILocation(line: 1755, column: 16, scope: !12478)
!12481 = !DILocation(line: 1755, column: 14, scope: !12478)
!12482 = !DILocation(line: 1755, column: 29, scope: !12478)
!12483 = !DILocation(line: 1755, column: 32, scope: !12478)
!12484 = !DILocation(line: 1755, column: 37, scope: !12478)
!12485 = !DILocation(line: 1755, column: 35, scope: !12478)
!12486 = !DILocation(line: 1755, column: 11, scope: !12479)
!12487 = !DILocation(line: 1756, column: 8, scope: !12478)
!12488 = !DILocation(line: 1757, column: 6, scope: !12479)
!12489 = !DILocation(line: 1758, column: 15, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12472, file: !3, line: 1758, column: 15)
!12491 = !DILocation(line: 1758, column: 18, scope: !12490)
!12492 = !DILocation(line: 1758, column: 25, scope: !12490)
!12493 = !DILocation(line: 1758, column: 28, scope: !12490)
!12494 = !DILocation(line: 1758, column: 31, scope: !12490)
!12495 = !DILocation(line: 1758, column: 15, scope: !12472)
!12496 = !DILocation(line: 1759, column: 7, scope: !12490)
!12497 = !DILocation(line: 1761, column: 20, scope: !12473)
!12498 = !DILocation(line: 1761, column: 26, scope: !12473)
!12499 = !DILocation(line: 1761, column: 31, scope: !12473)
!12500 = !DILocation(line: 1761, column: 19, scope: !12473)
!12501 = !DILocation(line: 1761, column: 56, scope: !12473)
!12502 = !DILocation(line: 1761, column: 55, scope: !12473)
!12503 = !DILocation(line: 1761, column: 61, scope: !12473)
!12504 = !DILocation(line: 1761, column: 12, scope: !12473)
!12505 = !DILocation(line: 1761, column: 17, scope: !12473)
!12506 = !DILocation(line: 1762, column: 38, scope: !12473)
!12507 = !DILocation(line: 1762, column: 6, scope: !12473)
!12508 = !DILocation(line: 1764, column: 10, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 1764, column: 10)
!12510 = !DILocation(line: 1764, column: 16, scope: !12509)
!12511 = !DILocation(line: 1764, column: 10, scope: !12473)
!12512 = !DILocation(line: 1765, column: 17, scope: !12509)
!12513 = !DILocation(line: 1765, column: 23, scope: !12509)
!12514 = !DILocation(line: 1765, column: 31, scope: !12509)
!12515 = !DILocation(line: 1765, column: 44, scope: !12509)
!12516 = !DILocation(line: 1765, column: 38, scope: !12509)
!12517 = !DILocation(line: 1765, column: 7, scope: !12509)
!12518 = !DILocation(line: 1767, column: 10, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 1767, column: 10)
!12520 = !DILocation(line: 1767, column: 10, scope: !12473)
!12521 = !DILocation(line: 1768, column: 17, scope: !12519)
!12522 = !DILocation(line: 1768, column: 33, scope: !12519)
!12523 = !DILocation(line: 1768, column: 27, scope: !12519)
!12524 = !DILocation(line: 1768, column: 7, scope: !12519)
!12525 = !DILocation(line: 1770, column: 10, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12473, file: !3, line: 1770, column: 10)
!12527 = !DILocation(line: 1770, column: 16, scope: !12526)
!12528 = !DILocation(line: 1770, column: 23, scope: !12526)
!12529 = !DILocation(line: 1770, column: 10, scope: !12473)
!12530 = !DILocation(line: 1771, column: 19, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 1770, column: 40)
!12532 = !DILocation(line: 1771, column: 10, scope: !12531)
!12533 = !DILocation(line: 1771, column: 17, scope: !12531)
!12534 = !DILocation(line: 1772, column: 22, scope: !12531)
!12535 = !DILocation(line: 1772, column: 28, scope: !12531)
!12536 = !DILocation(line: 1772, column: 10, scope: !12531)
!12537 = !DILocation(line: 1772, column: 7, scope: !12531)
!12538 = !DILocation(line: 1772, column: 20, scope: !12531)
!12539 = !DILocation(line: 1773, column: 22, scope: !12531)
!12540 = !DILocation(line: 1773, column: 28, scope: !12531)
!12541 = !DILocation(line: 1773, column: 10, scope: !12531)
!12542 = !DILocation(line: 1773, column: 7, scope: !12531)
!12543 = !DILocation(line: 1773, column: 20, scope: !12531)
!12544 = !DILocation(line: 1774, column: 20, scope: !12531)
!12545 = !DILocation(line: 1774, column: 26, scope: !12531)
!12546 = !DILocation(line: 1774, column: 39, scope: !12531)
!12547 = !DILocation(line: 1774, column: 37, scope: !12531)
!12548 = !DILocation(line: 1774, column: 10, scope: !12531)
!12549 = !DILocation(line: 1774, column: 7, scope: !12531)
!12550 = !DILocation(line: 1774, column: 18, scope: !12531)
!12551 = !DILocation(line: 1775, column: 11, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12531, file: !3, line: 1775, column: 11)
!12553 = !DILocation(line: 1775, column: 17, scope: !12552)
!12554 = !DILocation(line: 1775, column: 25, scope: !12552)
!12555 = !DILocation(line: 1775, column: 11, scope: !12531)
!12556 = !DILocalVariable(name: "pa_vel", scope: !12557, file: !3, line: 1776, type: !45)
!12557 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 1775, column: 40)
!12558 = !DILocation(line: 1776, column: 14, scope: !12557)
!12559 = !DILocation(line: 1776, column: 36, scope: !12557)
!12560 = !DILocation(line: 1776, column: 30, scope: !12557)
!12561 = !DILocation(line: 1776, column: 23, scope: !12557)
!12562 = !DILocalVariable(name: "head", scope: !12557, file: !3, line: 1777, type: !45)
!12563 = !DILocation(line: 1777, column: 14, scope: !12557)
!12564 = !DILocation(line: 1777, column: 21, scope: !12557)
!12565 = !DILocation(line: 1777, column: 27, scope: !12557)
!12566 = !DILocation(line: 1777, column: 39, scope: !12557)
!12567 = !DILocation(line: 1777, column: 38, scope: !12557)
!12568 = !DILocalVariable(name: "tail", scope: !12557, file: !3, line: 1778, type: !45)
!12569 = !DILocation(line: 1778, column: 14, scope: !12557)
!12570 = !DILocation(line: 1778, column: 21, scope: !12557)
!12571 = !DILocation(line: 1778, column: 27, scope: !12557)
!12572 = !DILocation(line: 1778, column: 39, scope: !12557)
!12573 = !DILocation(line: 1778, column: 38, scope: !12557)
!12574 = !DILocation(line: 1779, column: 21, scope: !12557)
!12575 = !DILocation(line: 1779, column: 27, scope: !12557)
!12576 = !DILocation(line: 1779, column: 38, scope: !12557)
!12577 = !DILocation(line: 1779, column: 37, scope: !12557)
!12578 = !DILocation(line: 1779, column: 48, scope: !12557)
!12579 = !DILocation(line: 1779, column: 46, scope: !12557)
!12580 = !DILocation(line: 1779, column: 55, scope: !12557)
!12581 = !DILocation(line: 1779, column: 53, scope: !12557)
!12582 = !DILocation(line: 1779, column: 11, scope: !12557)
!12583 = !DILocation(line: 1779, column: 8, scope: !12557)
!12584 = !DILocation(line: 1779, column: 19, scope: !12557)
!12585 = !DILocation(line: 1781, column: 15, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 1781, column: 12)
!12587 = !DILocation(line: 1781, column: 12, scope: !12586)
!12588 = !DILocation(line: 1781, column: 23, scope: !12586)
!12589 = !DILocation(line: 1781, column: 12, scope: !12557)
!12590 = !DILocation(line: 1782, column: 26, scope: !12586)
!12591 = !DILocation(line: 1782, column: 31, scope: !12586)
!12592 = !DILocation(line: 1782, column: 30, scope: !12586)
!12593 = !DILocation(line: 1782, column: 42, scope: !12586)
!12594 = !DILocation(line: 1782, column: 39, scope: !12586)
!12595 = !DILocation(line: 1782, column: 37, scope: !12586)
!12596 = !DILocation(line: 1782, column: 12, scope: !12586)
!12597 = !DILocation(line: 1782, column: 9, scope: !12586)
!12598 = !DILocation(line: 1782, column: 22, scope: !12586)
!12599 = !DILocation(line: 1783, column: 7, scope: !12557)
!12600 = !DILocation(line: 1785, column: 21, scope: !12552)
!12601 = !DILocation(line: 1785, column: 27, scope: !12552)
!12602 = !DILocation(line: 1785, column: 40, scope: !12552)
!12603 = !DILocation(line: 1785, column: 38, scope: !12552)
!12604 = !DILocation(line: 1785, column: 11, scope: !12552)
!12605 = !DILocation(line: 1785, column: 8, scope: !12552)
!12606 = !DILocation(line: 1785, column: 19, scope: !12552)
!12607 = !DILocation(line: 1786, column: 17, scope: !12531)
!12608 = !DILocation(line: 1786, column: 23, scope: !12531)
!12609 = !DILocation(line: 1786, column: 41, scope: !12531)
!12610 = !DILocation(line: 1786, column: 47, scope: !12531)
!12611 = !DILocation(line: 1786, column: 62, scope: !12531)
!12612 = !DILocation(line: 1786, column: 60, scope: !12531)
!12613 = !DILocation(line: 1786, column: 39, scope: !12531)
!12614 = !DILocation(line: 1786, column: 31, scope: !12531)
!12615 = !DILocation(line: 1786, column: 10, scope: !12531)
!12616 = !DILocation(line: 1786, column: 15, scope: !12531)
!12617 = !DILocation(line: 1787, column: 17, scope: !12531)
!12618 = !DILocation(line: 1787, column: 10, scope: !12531)
!12619 = !DILocation(line: 1787, column: 15, scope: !12531)
!12620 = !DILocation(line: 1788, column: 16, scope: !12531)
!12621 = !DILocation(line: 1788, column: 10, scope: !12531)
!12622 = !DILocation(line: 1788, column: 14, scope: !12531)
!12623 = !DILocation(line: 1789, column: 6, scope: !12531)
!12624 = !DILocation(line: 1791, column: 18, scope: !12473)
!12625 = !DILocation(line: 1791, column: 24, scope: !12473)
!12626 = !DILocation(line: 1791, column: 29, scope: !12473)
!12627 = !DILocation(line: 1791, column: 17, scope: !12473)
!12628 = !DILocation(line: 1791, column: 54, scope: !12473)
!12629 = !DILocation(line: 1791, column: 57, scope: !12473)
!12630 = !DILocation(line: 1791, column: 56, scope: !12473)
!12631 = !DILocation(line: 1791, column: 72, scope: !12473)
!12632 = !DILocation(line: 1791, column: 83, scope: !12473)
!12633 = !DILocation(line: 1791, column: 82, scope: !12473)
!12634 = !DILocation(line: 1791, column: 70, scope: !12473)
!12635 = !DILocation(line: 1791, column: 99, scope: !12473)
!12636 = !DILocation(line: 1791, column: 6, scope: !12473)
!12637 = !DILocation(line: 1791, column: 15, scope: !12473)
!12638 = !DILocation(line: 1792, column: 24, scope: !12473)
!12639 = !DILocation(line: 1792, column: 17, scope: !12473)
!12640 = !DILocation(line: 1792, column: 34, scope: !12473)
!12641 = !DILocation(line: 1792, column: 45, scope: !12473)
!12642 = !DILocation(line: 1792, column: 26, scope: !12473)
!12643 = !DILocation(line: 1792, column: 25, scope: !12473)
!12644 = !DILocation(line: 1792, column: 6, scope: !12473)
!12645 = !DILocation(line: 1792, column: 15, scope: !12473)
!12646 = !DILocation(line: 1794, column: 26, scope: !12473)
!12647 = !DILocation(line: 1794, column: 32, scope: !12473)
!12648 = !DILocation(line: 1794, column: 40, scope: !12473)
!12649 = !DILocation(line: 1794, column: 46, scope: !12473)
!12650 = !DILocation(line: 1794, column: 50, scope: !12473)
!12651 = !DILocation(line: 1794, column: 55, scope: !12473)
!12652 = !DILocation(line: 1794, column: 61, scope: !12473)
!12653 = !DILocation(line: 1794, column: 65, scope: !12473)
!12654 = !DILocation(line: 1794, column: 87, scope: !12473)
!12655 = !DILocation(line: 1794, column: 93, scope: !12473)
!12656 = !DILocation(line: 1794, column: 101, scope: !12473)
!12657 = !DILocation(line: 1794, column: 6, scope: !12473)
!12658 = !DILocation(line: 1795, column: 5, scope: !12473)
!12659 = !DILocation(line: 1753, column: 33, scope: !12467)
!12660 = !DILocation(line: 1753, column: 43, scope: !12467)
!12661 = !DILocation(line: 1753, column: 40, scope: !12467)
!12662 = !DILocation(line: 1753, column: 5, scope: !12467)
!12663 = distinct !{!12663, !12470, !12664}
!12664 = !DILocation(line: 1795, column: 5, scope: !12464)
!12665 = !DILocation(line: 1796, column: 4, scope: !12425)
!12666 = !DILocation(line: 1798, column: 16, scope: !12667)
!12667 = distinct !DILexicalBlock(scope: !12419, file: !3, line: 1797, column: 9)
!12668 = !DILocation(line: 1798, column: 11, scope: !12667)
!12669 = !DILocation(line: 1798, column: 15, scope: !12667)
!12670 = !DILocation(line: 1799, column: 39, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 1799, column: 9)
!12672 = !DILocation(line: 1799, column: 9, scope: !12671)
!12673 = !DILocation(line: 1799, column: 52, scope: !12671)
!12674 = !DILocation(line: 1799, column: 9, scope: !12667)
!12675 = !DILocation(line: 1800, column: 6, scope: !12671)
!12676 = !DILocation(line: 1802, column: 9, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 1802, column: 9)
!12678 = !DILocation(line: 1802, column: 15, scope: !12677)
!12679 = !DILocation(line: 1802, column: 9, scope: !12667)
!12680 = !DILocation(line: 1803, column: 16, scope: !12677)
!12681 = !DILocation(line: 1803, column: 22, scope: !12677)
!12682 = !DILocation(line: 1803, column: 30, scope: !12677)
!12683 = !DILocation(line: 1803, column: 43, scope: !12677)
!12684 = !DILocation(line: 1803, column: 37, scope: !12677)
!12685 = !DILocation(line: 1803, column: 6, scope: !12677)
!12686 = !DILocation(line: 1805, column: 9, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 1805, column: 9)
!12688 = !DILocation(line: 1805, column: 9, scope: !12667)
!12689 = !DILocation(line: 1806, column: 16, scope: !12687)
!12690 = !DILocation(line: 1806, column: 32, scope: !12687)
!12691 = !DILocation(line: 1806, column: 26, scope: !12687)
!12692 = !DILocation(line: 1806, column: 6, scope: !12687)
!12693 = !DILocation(line: 1808, column: 9, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 1808, column: 9)
!12695 = !DILocation(line: 1808, column: 15, scope: !12694)
!12696 = !DILocation(line: 1808, column: 22, scope: !12694)
!12697 = !DILocation(line: 1808, column: 9, scope: !12667)
!12698 = !DILocation(line: 1809, column: 18, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 1808, column: 39)
!12700 = !DILocation(line: 1809, column: 9, scope: !12699)
!12701 = !DILocation(line: 1809, column: 16, scope: !12699)
!12702 = !DILocation(line: 1810, column: 21, scope: !12699)
!12703 = !DILocation(line: 1810, column: 27, scope: !12699)
!12704 = !DILocation(line: 1810, column: 9, scope: !12699)
!12705 = !DILocation(line: 1810, column: 6, scope: !12699)
!12706 = !DILocation(line: 1810, column: 19, scope: !12699)
!12707 = !DILocation(line: 1811, column: 21, scope: !12699)
!12708 = !DILocation(line: 1811, column: 27, scope: !12699)
!12709 = !DILocation(line: 1811, column: 9, scope: !12699)
!12710 = !DILocation(line: 1811, column: 6, scope: !12699)
!12711 = !DILocation(line: 1811, column: 19, scope: !12699)
!12712 = !DILocation(line: 1812, column: 19, scope: !12699)
!12713 = !DILocation(line: 1812, column: 25, scope: !12699)
!12714 = !DILocation(line: 1812, column: 38, scope: !12699)
!12715 = !DILocation(line: 1812, column: 36, scope: !12699)
!12716 = !DILocation(line: 1812, column: 9, scope: !12699)
!12717 = !DILocation(line: 1812, column: 6, scope: !12699)
!12718 = !DILocation(line: 1812, column: 17, scope: !12699)
!12719 = !DILocation(line: 1813, column: 10, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12699, file: !3, line: 1813, column: 10)
!12721 = !DILocation(line: 1813, column: 16, scope: !12720)
!12722 = !DILocation(line: 1813, column: 24, scope: !12720)
!12723 = !DILocation(line: 1813, column: 10, scope: !12699)
!12724 = !DILocalVariable(name: "pa_vel", scope: !12725, file: !3, line: 1814, type: !45)
!12725 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 1813, column: 39)
!12726 = !DILocation(line: 1814, column: 13, scope: !12725)
!12727 = !DILocation(line: 1814, column: 35, scope: !12725)
!12728 = !DILocation(line: 1814, column: 29, scope: !12725)
!12729 = !DILocation(line: 1814, column: 22, scope: !12725)
!12730 = !DILocalVariable(name: "head", scope: !12725, file: !3, line: 1815, type: !45)
!12731 = !DILocation(line: 1815, column: 13, scope: !12725)
!12732 = !DILocation(line: 1815, column: 20, scope: !12725)
!12733 = !DILocation(line: 1815, column: 26, scope: !12725)
!12734 = !DILocation(line: 1815, column: 38, scope: !12725)
!12735 = !DILocation(line: 1815, column: 37, scope: !12725)
!12736 = !DILocalVariable(name: "tail", scope: !12725, file: !3, line: 1816, type: !45)
!12737 = !DILocation(line: 1816, column: 13, scope: !12725)
!12738 = !DILocation(line: 1816, column: 20, scope: !12725)
!12739 = !DILocation(line: 1816, column: 26, scope: !12725)
!12740 = !DILocation(line: 1816, column: 38, scope: !12725)
!12741 = !DILocation(line: 1816, column: 37, scope: !12725)
!12742 = !DILocation(line: 1817, column: 20, scope: !12725)
!12743 = !DILocation(line: 1817, column: 26, scope: !12725)
!12744 = !DILocation(line: 1817, column: 37, scope: !12725)
!12745 = !DILocation(line: 1817, column: 36, scope: !12725)
!12746 = !DILocation(line: 1817, column: 47, scope: !12725)
!12747 = !DILocation(line: 1817, column: 45, scope: !12725)
!12748 = !DILocation(line: 1817, column: 54, scope: !12725)
!12749 = !DILocation(line: 1817, column: 52, scope: !12725)
!12750 = !DILocation(line: 1817, column: 10, scope: !12725)
!12751 = !DILocation(line: 1817, column: 7, scope: !12725)
!12752 = !DILocation(line: 1817, column: 18, scope: !12725)
!12753 = !DILocation(line: 1819, column: 14, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 1819, column: 11)
!12755 = !DILocation(line: 1819, column: 11, scope: !12754)
!12756 = !DILocation(line: 1819, column: 22, scope: !12754)
!12757 = !DILocation(line: 1819, column: 11, scope: !12725)
!12758 = !DILocation(line: 1820, column: 25, scope: !12754)
!12759 = !DILocation(line: 1820, column: 30, scope: !12754)
!12760 = !DILocation(line: 1820, column: 29, scope: !12754)
!12761 = !DILocation(line: 1820, column: 41, scope: !12754)
!12762 = !DILocation(line: 1820, column: 38, scope: !12754)
!12763 = !DILocation(line: 1820, column: 36, scope: !12754)
!12764 = !DILocation(line: 1820, column: 11, scope: !12754)
!12765 = !DILocation(line: 1820, column: 8, scope: !12754)
!12766 = !DILocation(line: 1820, column: 21, scope: !12754)
!12767 = !DILocation(line: 1821, column: 6, scope: !12725)
!12768 = !DILocation(line: 1823, column: 20, scope: !12720)
!12769 = !DILocation(line: 1823, column: 26, scope: !12720)
!12770 = !DILocation(line: 1823, column: 39, scope: !12720)
!12771 = !DILocation(line: 1823, column: 37, scope: !12720)
!12772 = !DILocation(line: 1823, column: 10, scope: !12720)
!12773 = !DILocation(line: 1823, column: 7, scope: !12720)
!12774 = !DILocation(line: 1823, column: 18, scope: !12720)
!12775 = !DILocation(line: 1824, column: 16, scope: !12699)
!12776 = !DILocation(line: 1824, column: 22, scope: !12699)
!12777 = !DILocation(line: 1824, column: 40, scope: !12699)
!12778 = !DILocation(line: 1824, column: 46, scope: !12699)
!12779 = !DILocation(line: 1824, column: 61, scope: !12699)
!12780 = !DILocation(line: 1824, column: 59, scope: !12699)
!12781 = !DILocation(line: 1824, column: 38, scope: !12699)
!12782 = !DILocation(line: 1824, column: 30, scope: !12699)
!12783 = !DILocation(line: 1824, column: 9, scope: !12699)
!12784 = !DILocation(line: 1824, column: 14, scope: !12699)
!12785 = !DILocation(line: 1825, column: 16, scope: !12699)
!12786 = !DILocation(line: 1825, column: 9, scope: !12699)
!12787 = !DILocation(line: 1825, column: 14, scope: !12699)
!12788 = !DILocation(line: 1826, column: 15, scope: !12699)
!12789 = !DILocation(line: 1826, column: 9, scope: !12699)
!12790 = !DILocation(line: 1826, column: 13, scope: !12699)
!12791 = !DILocation(line: 1827, column: 20, scope: !12699)
!12792 = !DILocation(line: 1827, column: 31, scope: !12699)
!12793 = !DILocation(line: 1827, column: 30, scope: !12699)
!12794 = !DILocation(line: 1827, column: 9, scope: !12699)
!12795 = !DILocation(line: 1827, column: 18, scope: !12699)
!12796 = !DILocation(line: 1828, column: 5, scope: !12699)
!12797 = !DILocation(line: 1830, column: 25, scope: !12667)
!12798 = !DILocation(line: 1830, column: 31, scope: !12667)
!12799 = !DILocation(line: 1830, column: 39, scope: !12667)
!12800 = !DILocation(line: 1830, column: 45, scope: !12667)
!12801 = !DILocation(line: 1830, column: 49, scope: !12667)
!12802 = !DILocation(line: 1830, column: 54, scope: !12667)
!12803 = !DILocation(line: 1830, column: 60, scope: !12667)
!12804 = !DILocation(line: 1830, column: 64, scope: !12667)
!12805 = !DILocation(line: 1830, column: 86, scope: !12667)
!12806 = !DILocation(line: 1830, column: 92, scope: !12667)
!12807 = !DILocation(line: 1830, column: 100, scope: !12667)
!12808 = !DILocation(line: 1830, column: 5, scope: !12667)
!12809 = !DILocation(line: 1834, column: 7, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1834, column: 7)
!12811 = !DILocation(line: 1834, column: 12, scope: !12810)
!12812 = !DILocation(line: 1834, column: 7, scope: !11726)
!12813 = !DILocation(line: 1835, column: 7, scope: !12810)
!12814 = !DILocation(line: 1835, column: 11, scope: !12810)
!12815 = !DILocation(line: 1835, column: 4, scope: !12810)
!12816 = !DILocation(line: 1837, column: 7, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !11726, file: !3, line: 1837, column: 7)
!12818 = !DILocation(line: 1837, column: 11, scope: !12817)
!12819 = !DILocation(line: 1837, column: 22, scope: !12817)
!12820 = !DILocation(line: 1837, column: 26, scope: !12817)
!12821 = !DILocation(line: 1837, column: 7, scope: !11726)
!12822 = !DILocation(line: 1838, column: 4, scope: !12817)
!12823 = !DILocation(line: 1839, column: 2, scope: !11726)
!12824 = !DILocation(line: 1516, column: 42, scope: !11719)
!12825 = !DILocation(line: 1516, column: 48, scope: !11719)
!12826 = !DILocation(line: 1516, column: 56, scope: !11719)
!12827 = !DILocation(line: 1516, column: 2, scope: !11719)
!12828 = distinct !{!12828, !11724, !12829}
!12829 = !DILocation(line: 1839, column: 2, scope: !11714)
!12830 = !DILocation(line: 1841, column: 6, scope: !12831)
!12831 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1841, column: 6)
!12832 = !DILocation(line: 1841, column: 6, scope: !10903)
!12833 = !DILocation(line: 1842, column: 44, scope: !12831)
!12834 = !DILocation(line: 1842, column: 48, scope: !12831)
!12835 = !DILocation(line: 1842, column: 53, scope: !12831)
!12836 = !DILocation(line: 1842, column: 59, scope: !12831)
!12837 = !DILocation(line: 1842, column: 63, scope: !12831)
!12838 = !DILocation(line: 1842, column: 68, scope: !12831)
!12839 = !DILocation(line: 1842, column: 23, scope: !12831)
!12840 = !DILocation(line: 1842, column: 3, scope: !12831)
!12841 = !DILocation(line: 1842, column: 14, scope: !12831)
!12842 = !DILocation(line: 1842, column: 21, scope: !12831)
!12843 = !DILocation(line: 1849, column: 6, scope: !12844)
!12844 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1849, column: 6)
!12845 = !DILocation(line: 1849, column: 6, scope: !10903)
!12846 = !DILocation(line: 1850, column: 3, scope: !12844)
!12847 = !DILocation(line: 1850, column: 16, scope: !12844)
!12848 = !DILocation(line: 1850, column: 13, scope: !12844)
!12849 = !DILocation(line: 1852, column: 9, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1852, column: 6)
!12851 = !DILocation(line: 1852, column: 6, scope: !12850)
!12852 = !DILocation(line: 1852, column: 6, scope: !10903)
!12853 = !DILocation(line: 1853, column: 3, scope: !12850)
!12854 = !DILocation(line: 1853, column: 16, scope: !12850)
!12855 = !DILocation(line: 1853, column: 13, scope: !12850)
!12856 = !DILocation(line: 1855, column: 9, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1855, column: 6)
!12858 = !DILocation(line: 1855, column: 6, scope: !12857)
!12859 = !DILocation(line: 1855, column: 6, scope: !10903)
!12860 = !DILocation(line: 1856, column: 3, scope: !12857)
!12861 = !DILocation(line: 1856, column: 16, scope: !12857)
!12862 = !DILocation(line: 1856, column: 13, scope: !12857)
!12863 = !DILocation(line: 1858, column: 6, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1858, column: 6)
!12865 = !DILocation(line: 1858, column: 6, scope: !10903)
!12866 = !DILocation(line: 1859, column: 3, scope: !12864)
!12867 = !DILocation(line: 1859, column: 13, scope: !12864)
!12868 = !DILocation(line: 1861, column: 6, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1861, column: 6)
!12870 = !DILocation(line: 1861, column: 6, scope: !10903)
!12871 = !DILocation(line: 1862, column: 3, scope: !12869)
!12872 = !DILocation(line: 1862, column: 13, scope: !12869)
!12873 = !DILocation(line: 1864, column: 15, scope: !10903)
!12874 = !DILocation(line: 1864, column: 2, scope: !10903)
!12875 = !DILocation(line: 1866, column: 2, scope: !10903)
!12876 = !DILocation(line: 1866, column: 8, scope: !10903)
!12877 = !DILocation(line: 1866, column: 13, scope: !10903)
!12878 = !DILocation(line: 1868, column: 6, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1868, column: 6)
!12880 = !DILocation(line: 1868, column: 12, scope: !12879)
!12881 = !DILocation(line: 1868, column: 6, scope: !10903)
!12882 = !DILocation(line: 1869, column: 19, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 1868, column: 33)
!12884 = !DILocation(line: 1869, column: 25, scope: !12883)
!12885 = !DILocation(line: 1869, column: 3, scope: !12883)
!12886 = !DILocation(line: 1870, column: 3, scope: !12883)
!12887 = !DILocation(line: 1870, column: 9, scope: !12883)
!12888 = !DILocation(line: 1870, column: 29, scope: !12883)
!12889 = !DILocation(line: 1871, column: 2, scope: !12883)
!12890 = !DILocation(line: 1873, column: 6, scope: !12891)
!12891 = distinct !DILexicalBlock(scope: !10903, file: !3, line: 1873, column: 6)
!12892 = !DILocation(line: 1873, column: 15, scope: !12891)
!12893 = !DILocation(line: 1873, column: 19, scope: !12891)
!12894 = !DILocation(line: 1873, column: 23, scope: !12891)
!12895 = !DILocation(line: 1873, column: 30, scope: !12891)
!12896 = !DILocation(line: 1873, column: 47, scope: !12891)
!12897 = !DILocation(line: 1873, column: 6, scope: !10903)
!12898 = !DILocation(line: 1874, column: 22, scope: !12891)
!12899 = !DILocation(line: 1874, column: 26, scope: !12891)
!12900 = !DILocation(line: 1874, column: 3, scope: !12891)
!12901 = !DILocation(line: 1876, column: 2, scope: !10903)
!12902 = !DILocation(line: 1877, column: 1, scope: !10903)
!12903 = distinct !DISubprogram(name: "init_render_curve", scope: !3, file: !3, line: 2626, type: !10646, scopeLine: 2627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!12904 = !DILocalVariable(name: "re", arg: 1, scope: !12903, file: !3, line: 2626, type: !6)
!12905 = !DILocation(line: 2626, column: 39, scope: !12903)
!12906 = !DILocalVariable(name: "obr", arg: 2, scope: !12903, file: !3, line: 2626, type: !3063)
!12907 = !DILocation(line: 2626, column: 54, scope: !12903)
!12908 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !12903, file: !3, line: 2626, type: !21)
!12909 = !DILocation(line: 2626, column: 63, scope: !12903)
!12910 = !DILocalVariable(name: "ob", scope: !12903, file: !3, line: 2628, type: !3236)
!12911 = !DILocation(line: 2628, column: 10, scope: !12903)
!12912 = !DILocation(line: 2628, column: 14, scope: !12903)
!12913 = !DILocation(line: 2628, column: 19, scope: !12903)
!12914 = !DILocalVariable(name: "cu", scope: !12903, file: !3, line: 2629, type: !12915)
!12915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12916, size: 64)
!12916 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !379, line: 273, baseType: !12917)
!12917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !379, line: 193, size: 4224, elements: !12918)
!12918 = !{!12919, !12920, !12921, !12922, !12923, !12932, !12933, !12934, !12935, !12936, !12937, !12938, !12939, !12940, !12941, !12942, !12943, !12944, !12945, !12946, !12947, !12948, !12949, !12950, !12951, !12952, !12953, !12954, !12955, !12956, !12957, !12958, !12959, !12960, !12961, !12962, !12963, !12964, !12965, !12966, !12967, !12968, !12969, !12970, !12971, !12972, !12973, !12974, !12975, !12976, !12977, !12978, !12979, !12980, !12983, !12984, !12987, !12988, !12989, !12990, !12998, !12999, !13000, !13009, !13010, !13011, !13012, !13013, !13014, !13015}
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12917, file: !379, line: 194, baseType: !91, size: 960)
!12920 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !12917, file: !379, line: 195, baseType: !153, size: 64, offset: 960)
!12921 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !12917, file: !379, line: 197, baseType: !347, size: 64, offset: 1024)
!12922 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !12917, file: !379, line: 199, baseType: !59, size: 128, offset: 1088)
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !12917, file: !379, line: 201, baseType: !12924, size: 64, offset: 1216)
!12924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12925, size: 64)
!12925 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !379, line: 191, baseType: !12926)
!12926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !379, line: 180, size: 256, elements: !12927)
!12927 = !{!12928, !12929, !12930, !12931}
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !12926, file: !379, line: 182, baseType: !59, size: 128)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !12926, file: !379, line: 185, baseType: !377, size: 64, offset: 128)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !12926, file: !379, line: 188, baseType: !21, size: 32, offset: 192)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12926, file: !379, line: 190, baseType: !9223, size: 32, offset: 224)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !12917, file: !379, line: 203, baseType: !323, size: 64, offset: 1280)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !12917, file: !379, line: 203, baseType: !323, size: 64, offset: 1344)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !12917, file: !379, line: 203, baseType: !323, size: 64, offset: 1408)
!12935 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !12917, file: !379, line: 204, baseType: !344, size: 64, offset: 1472)
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12917, file: !379, line: 205, baseType: !1963, size: 64, offset: 1536)
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !12917, file: !379, line: 206, baseType: !442, size: 64, offset: 1600)
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !12917, file: !379, line: 209, baseType: !188, size: 96, offset: 1664)
!12939 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12917, file: !379, line: 210, baseType: !188, size: 96, offset: 1760)
!12940 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !12917, file: !379, line: 211, baseType: !188, size: 96, offset: 1856)
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12917, file: !379, line: 213, baseType: !23, size: 16, offset: 1952)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !12917, file: !379, line: 215, baseType: !23, size: 16, offset: 1968)
!12943 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !12917, file: !379, line: 216, baseType: !23, size: 16, offset: 1984)
!12944 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !12917, file: !379, line: 216, baseType: !23, size: 16, offset: 2000)
!12945 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !12917, file: !379, line: 217, baseType: !45, size: 32, offset: 2016)
!12946 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !12917, file: !379, line: 217, baseType: !45, size: 32, offset: 2048)
!12947 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !12917, file: !379, line: 219, baseType: !21, size: 32, offset: 2080)
!12948 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !12917, file: !379, line: 220, baseType: !23, size: 16, offset: 2112)
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !12917, file: !379, line: 220, baseType: !23, size: 16, offset: 2128)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !12917, file: !379, line: 221, baseType: !21, size: 32, offset: 2144)
!12951 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !12917, file: !379, line: 222, baseType: !45, size: 32, offset: 2176)
!12952 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !12917, file: !379, line: 222, baseType: !45, size: 32, offset: 2208)
!12953 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !12917, file: !379, line: 222, baseType: !45, size: 32, offset: 2240)
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !12917, file: !379, line: 225, baseType: !23, size: 16, offset: 2272)
!12955 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !12917, file: !379, line: 225, baseType: !23, size: 16, offset: 2288)
!12956 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !12917, file: !379, line: 226, baseType: !23, size: 16, offset: 2304)
!12957 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !12917, file: !379, line: 226, baseType: !23, size: 16, offset: 2320)
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !12917, file: !379, line: 229, baseType: !21, size: 32, offset: 2336)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !12917, file: !379, line: 231, baseType: !21, size: 32, offset: 2368)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !12917, file: !379, line: 233, baseType: !9223, size: 32, offset: 2400)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !12917, file: !379, line: 236, baseType: !23, size: 16, offset: 2432)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !12917, file: !379, line: 237, baseType: !17, size: 8, offset: 2448)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !12917, file: !379, line: 237, baseType: !17, size: 8, offset: 2456)
!12964 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2464)
!12965 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2496)
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2528)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2560)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2592)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2624)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !12917, file: !379, line: 238, baseType: !45, size: 32, offset: 2656)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !12917, file: !379, line: 239, baseType: !45, size: 32, offset: 2688)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !12917, file: !379, line: 239, baseType: !45, size: 32, offset: 2720)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !12917, file: !379, line: 240, baseType: !45, size: 32, offset: 2752)
!12974 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !12917, file: !379, line: 244, baseType: !21, size: 32, offset: 2784)
!12975 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !12917, file: !379, line: 245, baseType: !21, size: 32, offset: 2816)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !12917, file: !379, line: 245, baseType: !21, size: 32, offset: 2848)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !12917, file: !379, line: 248, baseType: !21, size: 32, offset: 2880)
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !12917, file: !379, line: 249, baseType: !21, size: 32, offset: 2912)
!12979 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !12917, file: !379, line: 250, baseType: !444, size: 64, offset: 2944)
!12980 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !12917, file: !379, line: 251, baseType: !12981, size: 64, offset: 3008)
!12981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12982, size: 64)
!12982 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !379, line: 50, flags: DIFlagFwdDecl)
!12983 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !12917, file: !379, line: 253, baseType: !138, size: 512, offset: 3072)
!12984 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !12917, file: !379, line: 254, baseType: !12985, size: 64, offset: 3584)
!12985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12986, size: 64)
!12986 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !379, line: 47, flags: DIFlagFwdDecl)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !12917, file: !379, line: 255, baseType: !12985, size: 64, offset: 3648)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !12917, file: !379, line: 256, baseType: !12985, size: 64, offset: 3712)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !12917, file: !379, line: 257, baseType: !12985, size: 64, offset: 3776)
!12990 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !12917, file: !379, line: 259, baseType: !12991, size: 64, offset: 3840)
!12991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12992, size: 64)
!12992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !379, line: 176, size: 128, elements: !12993)
!12993 = !{!12994, !12995, !12996, !12997}
!12994 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !12992, file: !379, line: 177, baseType: !45, size: 32)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !12992, file: !379, line: 177, baseType: !45, size: 32, offset: 32)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !12992, file: !379, line: 177, baseType: !45, size: 32, offset: 64)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !12992, file: !379, line: 177, baseType: !45, size: 32, offset: 96)
!12998 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !12917, file: !379, line: 260, baseType: !21, size: 32, offset: 3904)
!12999 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !12917, file: !379, line: 260, baseType: !21, size: 32, offset: 3936)
!13000 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !12917, file: !379, line: 262, baseType: !13001, size: 64, offset: 3968)
!13001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13002, size: 64)
!13002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !379, line: 168, size: 64, elements: !13003)
!13003 = !{!13004, !13005, !13006, !13007, !13008}
!13004 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !13002, file: !379, line: 169, baseType: !23, size: 16)
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !13002, file: !379, line: 170, baseType: !23, size: 16, offset: 16)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13002, file: !379, line: 171, baseType: !17, size: 8, offset: 32)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13002, file: !379, line: 172, baseType: !17, size: 8, offset: 40)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !13002, file: !379, line: 173, baseType: !23, size: 16, offset: 48)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !12917, file: !379, line: 263, baseType: !13002, size: 64, offset: 4032)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !12917, file: !379, line: 267, baseType: !45, size: 32, offset: 4096)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !12917, file: !379, line: 268, baseType: !45, size: 32, offset: 4128)
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !12917, file: !379, line: 268, baseType: !45, size: 32, offset: 4160)
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !12917, file: !379, line: 269, baseType: !17, size: 8, offset: 4192)
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !12917, file: !379, line: 269, baseType: !17, size: 8, offset: 4200)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !12917, file: !379, line: 271, baseType: !1494, size: 16, offset: 4208)
!13016 = !DILocation(line: 2629, column: 9, scope: !12903)
!13017 = !DILocalVariable(name: "ver", scope: !12903, file: !3, line: 2630, type: !4179)
!13018 = !DILocation(line: 2630, column: 11, scope: !12903)
!13019 = !DILocalVariable(name: "vlr", scope: !12903, file: !3, line: 2631, type: !13020)
!13020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13021, size: 64)
!13021 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !10, line: 411, baseType: !3115)
!13022 = !DILocation(line: 2631, column: 11, scope: !12903)
!13023 = !DILocalVariable(name: "dl", scope: !12903, file: !3, line: 2632, type: !13024)
!13024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13025, size: 64)
!13025 = !DIDerivedType(tag: DW_TAG_typedef, name: "DispList", file: !13026, line: 79, baseType: !13027)
!13026 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_displist.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DispList", file: !13026, line: 68, size: 576, elements: !13028)
!13028 = !{!13029, !13031, !13032, !13033, !13034, !13035, !13036, !13037, !13038, !13039, !13040, !13041, !13042, !13043}
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13027, file: !13026, line: 69, baseType: !13030, size: 64)
!13030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13027, size: 64)
!13031 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13027, file: !13026, line: 69, baseType: !13030, size: 64, offset: 64)
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13027, file: !13026, line: 70, baseType: !23, size: 16, offset: 128)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13027, file: !13026, line: 70, baseType: !23, size: 16, offset: 144)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !13027, file: !13026, line: 71, baseType: !21, size: 32, offset: 160)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !13027, file: !13026, line: 71, baseType: !21, size: 32, offset: 192)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !13027, file: !13026, line: 72, baseType: !23, size: 16, offset: 224)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !13027, file: !13026, line: 72, baseType: !23, size: 16, offset: 240)
!13038 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !13027, file: !13026, line: 73, baseType: !44, size: 64, offset: 256)
!13039 = !DIDerivedType(tag: DW_TAG_member, name: "nors", scope: !13027, file: !13026, line: 73, baseType: !44, size: 64, offset: 320)
!13040 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !13027, file: !13026, line: 74, baseType: !42, size: 64, offset: 384)
!13041 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !13027, file: !13026, line: 75, baseType: !21, size: 32, offset: 448)
!13042 = !DIDerivedType(tag: DW_TAG_member, name: "totindex", scope: !13027, file: !13026, line: 76, baseType: !21, size: 32, offset: 480)
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "bevelSplitFlag", scope: !13027, file: !13026, line: 78, baseType: !670, size: 64, offset: 512)
!13044 = !DILocation(line: 2632, column: 12, scope: !12903)
!13045 = !DILocalVariable(name: "dm", scope: !12903, file: !3, line: 2633, type: !2263)
!13046 = !DILocation(line: 2633, column: 15, scope: !12903)
!13047 = !DILocalVariable(name: "disp", scope: !12903, file: !3, line: 2634, type: !59)
!13048 = !DILocation(line: 2634, column: 11, scope: !12903)
!13049 = !DILocalVariable(name: "matar", scope: !12903, file: !3, line: 2635, type: !8204)
!13050 = !DILocation(line: 2635, column: 13, scope: !12903)
!13051 = !DILocalVariable(name: "data", scope: !12903, file: !3, line: 2636, type: !44)
!13052 = !DILocation(line: 2636, column: 9, scope: !12903)
!13053 = !DILocalVariable(name: "fp", scope: !12903, file: !3, line: 2636, type: !44)
!13054 = !DILocation(line: 2636, column: 16, scope: !12903)
!13055 = !DILocalVariable(name: "orco", scope: !12903, file: !3, line: 2636, type: !44)
!13056 = !DILocation(line: 2636, column: 21, scope: !12903)
!13057 = !DILocalVariable(name: "n", scope: !12903, file: !3, line: 2637, type: !188)
!13058 = !DILocation(line: 2637, column: 8, scope: !12903)
!13059 = !DILocalVariable(name: "mat", scope: !12903, file: !3, line: 2637, type: !462)
!13060 = !DILocation(line: 2637, column: 14, scope: !12903)
!13061 = !DILocalVariable(name: "nmat", scope: !12903, file: !3, line: 2637, type: !462)
!13062 = !DILocation(line: 2637, column: 25, scope: !12903)
!13063 = !DILocalVariable(name: "nr", scope: !12903, file: !3, line: 2638, type: !21)
!13064 = !DILocation(line: 2638, column: 6, scope: !12903)
!13065 = !DILocalVariable(name: "startvert", scope: !12903, file: !3, line: 2638, type: !21)
!13066 = !DILocation(line: 2638, column: 10, scope: !12903)
!13067 = !DILocalVariable(name: "a", scope: !12903, file: !3, line: 2638, type: !21)
!13068 = !DILocation(line: 2638, column: 21, scope: !12903)
!13069 = !DILocalVariable(name: "b", scope: !12903, file: !3, line: 2638, type: !21)
!13070 = !DILocation(line: 2638, column: 24, scope: !12903)
!13071 = !DILocalVariable(name: "negative_scale", scope: !12903, file: !3, line: 2638, type: !21)
!13072 = !DILocation(line: 2638, column: 27, scope: !12903)
!13073 = !DILocalVariable(name: "need_orco", scope: !12903, file: !3, line: 2639, type: !28)
!13074 = !DILocation(line: 2639, column: 7, scope: !12903)
!13075 = !DILocalVariable(name: "totmat", scope: !12903, file: !3, line: 2640, type: !21)
!13076 = !DILocation(line: 2640, column: 6, scope: !12903)
!13077 = !DILocation(line: 2642, column: 6, scope: !12903)
!13078 = !DILocation(line: 2642, column: 10, scope: !12903)
!13079 = !DILocation(line: 2642, column: 4, scope: !12903)
!13080 = !DILocation(line: 2643, column: 6, scope: !13081)
!13081 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 2643, column: 6)
!13082 = !DILocation(line: 2643, column: 10, scope: !13081)
!13083 = !DILocation(line: 2643, column: 14, scope: !13081)
!13084 = !DILocation(line: 2643, column: 24, scope: !13081)
!13085 = !DILocation(line: 2643, column: 27, scope: !13081)
!13086 = !DILocation(line: 2643, column: 31, scope: !13081)
!13087 = !DILocation(line: 2643, column: 34, scope: !13081)
!13088 = !DILocation(line: 2643, column: 6, scope: !12903)
!13089 = !DILocation(line: 2643, column: 42, scope: !13081)
!13090 = !DILocation(line: 2644, column: 11, scope: !13091)
!13091 = distinct !DILexicalBlock(scope: !13081, file: !3, line: 2644, column: 11)
!13092 = !DILocation(line: 2644, column: 15, scope: !13091)
!13093 = !DILocation(line: 2644, column: 19, scope: !13091)
!13094 = !DILocation(line: 2644, column: 30, scope: !13091)
!13095 = !DILocation(line: 2644, column: 33, scope: !13091)
!13096 = !DILocation(line: 2644, column: 37, scope: !13091)
!13097 = !DILocation(line: 2644, column: 42, scope: !13091)
!13098 = !DILocation(line: 2644, column: 47, scope: !13091)
!13099 = !DILocation(line: 2644, column: 11, scope: !13081)
!13100 = !DILocation(line: 2644, column: 55, scope: !13091)
!13101 = !DILocation(line: 2646, column: 41, scope: !12903)
!13102 = !DILocation(line: 2646, column: 45, scope: !12903)
!13103 = !DILocation(line: 2646, column: 52, scope: !12903)
!13104 = !DILocation(line: 2646, column: 2, scope: !12903)
!13105 = !DILocation(line: 2647, column: 11, scope: !12903)
!13106 = !DILocation(line: 2647, column: 6, scope: !12903)
!13107 = !DILocation(line: 2647, column: 4, scope: !12903)
!13108 = !DILocation(line: 2648, column: 6, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 2648, column: 6)
!13110 = !DILocation(line: 2648, column: 8, scope: !13109)
!13111 = !DILocation(line: 2648, column: 6, scope: !12903)
!13112 = !DILocation(line: 2648, column: 16, scope: !13109)
!13113 = !DILocation(line: 2650, column: 14, scope: !12903)
!13114 = !DILocation(line: 2650, column: 19, scope: !12903)
!13115 = !DILocation(line: 2650, column: 23, scope: !12903)
!13116 = !DILocation(line: 2650, column: 32, scope: !12903)
!13117 = !DILocation(line: 2650, column: 36, scope: !12903)
!13118 = !DILocation(line: 2650, column: 2, scope: !12903)
!13119 = !DILocation(line: 2651, column: 15, scope: !12903)
!13120 = !DILocation(line: 2651, column: 19, scope: !12903)
!13121 = !DILocation(line: 2651, column: 25, scope: !12903)
!13122 = !DILocation(line: 2651, column: 2, scope: !12903)
!13123 = !DILocation(line: 2652, column: 34, scope: !12903)
!13124 = !DILocation(line: 2652, column: 19, scope: !12903)
!13125 = !DILocation(line: 2652, column: 17, scope: !12903)
!13126 = !DILocation(line: 2655, column: 13, scope: !12903)
!13127 = !DILocation(line: 2655, column: 19, scope: !12903)
!13128 = !DILocation(line: 2655, column: 2, scope: !12903)
!13129 = !DILocation(line: 2656, column: 15, scope: !12903)
!13130 = !DILocation(line: 2656, column: 2, scope: !12903)
!13131 = !DILocation(line: 2657, column: 12, scope: !12903)
!13132 = !DILocation(line: 2657, column: 2, scope: !12903)
!13133 = !DILocation(line: 2660, column: 10, scope: !12903)
!13134 = !DILocation(line: 2660, column: 14, scope: !12903)
!13135 = !DILocation(line: 2660, column: 20, scope: !12903)
!13136 = !DILocation(line: 2660, column: 8, scope: !12903)
!13137 = !DILocation(line: 2661, column: 9, scope: !12903)
!13138 = !DILocation(line: 2661, column: 39, scope: !12903)
!13139 = !DILocation(line: 2661, column: 38, scope: !12903)
!13140 = !DILocation(line: 2661, column: 7, scope: !12903)
!13141 = !DILocation(line: 2663, column: 8, scope: !13142)
!13142 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 2663, column: 2)
!13143 = !DILocation(line: 2663, column: 7, scope: !13142)
!13144 = !DILocation(line: 2663, column: 12, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13142, file: !3, line: 2663, column: 2)
!13146 = !DILocation(line: 2663, column: 14, scope: !13145)
!13147 = !DILocation(line: 2663, column: 13, scope: !13145)
!13148 = !DILocation(line: 2663, column: 2, scope: !13142)
!13149 = !DILocation(line: 2664, column: 34, scope: !13150)
!13150 = distinct !DILexicalBlock(scope: !13145, file: !3, line: 2663, column: 27)
!13151 = !DILocation(line: 2664, column: 38, scope: !13150)
!13152 = !DILocation(line: 2664, column: 42, scope: !13150)
!13153 = !DILocation(line: 2664, column: 43, scope: !13150)
!13154 = !DILocation(line: 2664, column: 13, scope: !13150)
!13155 = !DILocation(line: 2664, column: 3, scope: !13150)
!13156 = !DILocation(line: 2664, column: 9, scope: !13150)
!13157 = !DILocation(line: 2664, column: 11, scope: !13150)
!13158 = !DILocation(line: 2666, column: 7, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 2666, column: 7)
!13160 = !DILocation(line: 2666, column: 13, scope: !13159)
!13161 = !DILocation(line: 2666, column: 16, scope: !13159)
!13162 = !DILocation(line: 2666, column: 19, scope: !13159)
!13163 = !DILocation(line: 2666, column: 25, scope: !13159)
!13164 = !DILocation(line: 2666, column: 29, scope: !13159)
!13165 = !DILocation(line: 2666, column: 35, scope: !13159)
!13166 = !DILocation(line: 2666, column: 7, scope: !13150)
!13167 = !DILocation(line: 2667, column: 13, scope: !13159)
!13168 = !DILocation(line: 2667, column: 4, scope: !13159)
!13169 = !DILocation(line: 2668, column: 2, scope: !13150)
!13170 = !DILocation(line: 2663, column: 23, scope: !13145)
!13171 = !DILocation(line: 2663, column: 2, scope: !13145)
!13172 = distinct !{!13172, !13148, !13173}
!13173 = !DILocation(line: 2668, column: 2, scope: !13142)
!13174 = !DILocation(line: 2670, column: 6, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !12903, file: !3, line: 2670, column: 6)
!13176 = !DILocation(line: 2670, column: 6, scope: !12903)
!13177 = !DILocation(line: 2671, column: 7, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13179, file: !3, line: 2671, column: 7)
!13179 = distinct !DILexicalBlock(scope: !13175, file: !3, line: 2670, column: 10)
!13180 = !DILocation(line: 2671, column: 7, scope: !13179)
!13181 = !DILocation(line: 2672, column: 27, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 2671, column: 18)
!13183 = !DILocation(line: 2672, column: 31, scope: !13182)
!13184 = !DILocation(line: 2672, column: 11, scope: !13182)
!13185 = !DILocation(line: 2672, column: 9, scope: !13182)
!13186 = !DILocation(line: 2673, column: 9, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13182, file: !3, line: 2673, column: 8)
!13188 = !DILocation(line: 2673, column: 8, scope: !13182)
!13189 = !DILocation(line: 2674, column: 35, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 2673, column: 15)
!13191 = !DILocation(line: 2674, column: 39, scope: !13190)
!13192 = !DILocation(line: 2674, column: 46, scope: !13190)
!13193 = !DILocation(line: 2674, column: 50, scope: !13190)
!13194 = !DILocation(line: 2674, column: 12, scope: !13190)
!13195 = !DILocation(line: 2674, column: 10, scope: !13190)
!13196 = !DILocation(line: 2675, column: 9, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13190, file: !3, line: 2675, column: 9)
!13198 = !DILocation(line: 2675, column: 9, scope: !13190)
!13199 = !DILocation(line: 2676, column: 22, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 2675, column: 15)
!13201 = !DILocation(line: 2676, column: 26, scope: !13200)
!13202 = !DILocation(line: 2676, column: 30, scope: !13200)
!13203 = !DILocation(line: 2676, column: 6, scope: !13200)
!13204 = !DILocation(line: 2677, column: 5, scope: !13200)
!13205 = !DILocation(line: 2678, column: 4, scope: !13190)
!13206 = !DILocation(line: 2679, column: 3, scope: !13182)
!13207 = !DILocation(line: 2681, column: 18, scope: !13179)
!13208 = !DILocation(line: 2681, column: 22, scope: !13179)
!13209 = !DILocation(line: 2681, column: 26, scope: !13179)
!13210 = !DILocation(line: 2681, column: 31, scope: !13179)
!13211 = !DILocation(line: 2681, column: 43, scope: !13179)
!13212 = !DILocation(line: 2681, column: 49, scope: !13179)
!13213 = !DILocation(line: 2681, column: 3, scope: !13179)
!13214 = !DILocation(line: 2682, column: 3, scope: !13179)
!13215 = !DILocation(line: 2682, column: 7, scope: !13179)
!13216 = !DILocation(line: 2682, column: 15, scope: !13179)
!13217 = !DILocation(line: 2683, column: 2, scope: !13179)
!13218 = !DILocation(line: 2685, column: 7, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 2685, column: 7)
!13220 = distinct !DILexicalBlock(scope: !13175, file: !3, line: 2684, column: 7)
!13221 = !DILocation(line: 2685, column: 7, scope: !13220)
!13222 = !DILocation(line: 2686, column: 27, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 2685, column: 18)
!13224 = !DILocation(line: 2686, column: 31, scope: !13223)
!13225 = !DILocation(line: 2686, column: 11, scope: !13223)
!13226 = !DILocation(line: 2686, column: 9, scope: !13223)
!13227 = !DILocation(line: 2687, column: 9, scope: !13228)
!13228 = distinct !DILexicalBlock(scope: !13223, file: !3, line: 2687, column: 8)
!13229 = !DILocation(line: 2687, column: 8, scope: !13223)
!13230 = !DILocation(line: 2688, column: 32, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13228, file: !3, line: 2687, column: 15)
!13232 = !DILocation(line: 2688, column: 36, scope: !13231)
!13233 = !DILocation(line: 2688, column: 43, scope: !13231)
!13234 = !DILocation(line: 2688, column: 12, scope: !13231)
!13235 = !DILocation(line: 2688, column: 10, scope: !13231)
!13236 = !DILocation(line: 2689, column: 21, scope: !13231)
!13237 = !DILocation(line: 2689, column: 25, scope: !13231)
!13238 = !DILocation(line: 2689, column: 29, scope: !13231)
!13239 = !DILocation(line: 2689, column: 5, scope: !13231)
!13240 = !DILocation(line: 2690, column: 4, scope: !13231)
!13241 = !DILocation(line: 2691, column: 3, scope: !13223)
!13242 = !DILocation(line: 2693, column: 3, scope: !13220)
!13243 = !DILocation(line: 2693, column: 10, scope: !13220)
!13244 = !DILocation(line: 2694, column: 8, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13246, file: !3, line: 2694, column: 8)
!13246 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 2693, column: 14)
!13247 = !DILocation(line: 2694, column: 12, scope: !13245)
!13248 = !DILocation(line: 2694, column: 18, scope: !13245)
!13249 = !DILocation(line: 2694, column: 22, scope: !13245)
!13250 = !DILocation(line: 2694, column: 16, scope: !13245)
!13251 = !DILocation(line: 2694, column: 8, scope: !13246)
!13252 = !DILocation(line: 2696, column: 4, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 2694, column: 30)
!13254 = !DILocation(line: 2697, column: 13, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 2697, column: 13)
!13256 = !DILocation(line: 2697, column: 17, scope: !13255)
!13257 = !DILocation(line: 2697, column: 21, scope: !13255)
!13258 = !DILocation(line: 2697, column: 13, scope: !13245)
!13259 = !DILocalVariable(name: "index", scope: !13260, file: !3, line: 2698, type: !11085)
!13260 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 2697, column: 34)
!13261 = !DILocation(line: 2698, column: 16, scope: !13260)
!13262 = !DILocation(line: 2700, column: 16, scope: !13260)
!13263 = !DILocation(line: 2700, column: 21, scope: !13260)
!13264 = !DILocation(line: 2700, column: 14, scope: !13260)
!13265 = !DILocation(line: 2701, column: 11, scope: !13260)
!13266 = !DILocation(line: 2701, column: 15, scope: !13260)
!13267 = !DILocation(line: 2701, column: 9, scope: !13260)
!13268 = !DILocation(line: 2703, column: 11, scope: !13269)
!13269 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 2703, column: 5)
!13270 = !DILocation(line: 2703, column: 10, scope: !13269)
!13271 = !DILocation(line: 2703, column: 15, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 2703, column: 5)
!13273 = !DILocation(line: 2703, column: 17, scope: !13272)
!13274 = !DILocation(line: 2703, column: 21, scope: !13272)
!13275 = !DILocation(line: 2703, column: 16, scope: !13272)
!13276 = !DILocation(line: 2703, column: 5, scope: !13269)
!13277 = !DILocation(line: 2704, column: 28, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13272, file: !3, line: 2703, column: 39)
!13279 = !DILocation(line: 2704, column: 33, scope: !13278)
!13280 = !DILocation(line: 2704, column: 38, scope: !13278)
!13281 = !DILocation(line: 2704, column: 45, scope: !13278)
!13282 = !DILocation(line: 2704, column: 11, scope: !13278)
!13283 = !DILocation(line: 2704, column: 9, scope: !13278)
!13284 = !DILocation(line: 2705, column: 17, scope: !13278)
!13285 = !DILocation(line: 2705, column: 22, scope: !13278)
!13286 = !DILocation(line: 2705, column: 26, scope: !13278)
!13287 = !DILocation(line: 2705, column: 6, scope: !13278)
!13288 = !DILocation(line: 2707, column: 16, scope: !13278)
!13289 = !DILocation(line: 2707, column: 21, scope: !13278)
!13290 = !DILocation(line: 2707, column: 26, scope: !13278)
!13291 = !DILocation(line: 2707, column: 6, scope: !13278)
!13292 = !DILocation(line: 2709, column: 10, scope: !13293)
!13293 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 2709, column: 10)
!13294 = !DILocation(line: 2709, column: 10, scope: !13278)
!13295 = !DILocation(line: 2710, column: 19, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13293, file: !3, line: 2709, column: 16)
!13297 = !DILocation(line: 2710, column: 7, scope: !13296)
!13298 = !DILocation(line: 2710, column: 12, scope: !13296)
!13299 = !DILocation(line: 2710, column: 17, scope: !13296)
!13300 = !DILocation(line: 2711, column: 12, scope: !13296)
!13301 = !DILocation(line: 2712, column: 6, scope: !13296)
!13302 = !DILocation(line: 2713, column: 5, scope: !13278)
!13303 = !DILocation(line: 2703, column: 26, scope: !13272)
!13304 = !DILocation(line: 2703, column: 34, scope: !13272)
!13305 = !DILocation(line: 2703, column: 5, scope: !13272)
!13306 = distinct !{!13306, !13276, !13307}
!13307 = !DILocation(line: 2713, column: 5, scope: !13269)
!13308 = !DILocation(line: 2715, column: 9, scope: !13309)
!13309 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 2715, column: 9)
!13310 = !DILocation(line: 2715, column: 19, scope: !13309)
!13311 = !DILocation(line: 2715, column: 9, scope: !13260)
!13312 = !DILocalVariable(name: "tmp", scope: !13313, file: !3, line: 2716, type: !188)
!13313 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 2715, column: 24)
!13314 = !DILocation(line: 2716, column: 12, scope: !13313)
!13315 = !DILocalVariable(name: "startvlak", scope: !13313, file: !3, line: 2717, type: !7772)
!13316 = !DILocation(line: 2717, column: 16, scope: !13313)
!13317 = !DILocation(line: 2717, column: 27, scope: !13313)
!13318 = !DILocation(line: 2717, column: 32, scope: !13313)
!13319 = !DILocation(line: 2719, column: 14, scope: !13313)
!13320 = !DILocation(line: 2719, column: 6, scope: !13313)
!13321 = !DILocation(line: 2720, column: 13, scope: !13313)
!13322 = !DILocation(line: 2720, column: 17, scope: !13313)
!13323 = !DILocation(line: 2720, column: 11, scope: !13313)
!13324 = !DILocation(line: 2721, column: 12, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2721, column: 6)
!13326 = !DILocation(line: 2721, column: 11, scope: !13325)
!13327 = !DILocation(line: 2721, column: 16, scope: !13328)
!13328 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 2721, column: 6)
!13329 = !DILocation(line: 2721, column: 18, scope: !13328)
!13330 = !DILocation(line: 2721, column: 22, scope: !13328)
!13331 = !DILocation(line: 2721, column: 17, scope: !13328)
!13332 = !DILocation(line: 2721, column: 6, scope: !13325)
!13333 = !DILocalVariable(name: "v1", scope: !13334, file: !3, line: 2722, type: !21)
!13334 = distinct !DILexicalBlock(scope: !13328, file: !3, line: 2721, column: 44)
!13335 = !DILocation(line: 2722, column: 11, scope: !13334)
!13336 = !DILocation(line: 2722, column: 16, scope: !13334)
!13337 = !DILocalVariable(name: "v2", scope: !13334, file: !3, line: 2722, type: !21)
!13338 = !DILocation(line: 2722, column: 26, scope: !13334)
!13339 = !DILocation(line: 2722, column: 31, scope: !13334)
!13340 = !DILocalVariable(name: "v3", scope: !13334, file: !3, line: 2722, type: !21)
!13341 = !DILocation(line: 2722, column: 41, scope: !13334)
!13342 = !DILocation(line: 2722, column: 46, scope: !13334)
!13343 = !DILocalVariable(name: "co1", scope: !13334, file: !3, line: 2723, type: !44)
!13344 = !DILocation(line: 2723, column: 14, scope: !13334)
!13345 = !DILocation(line: 2723, column: 21, scope: !13334)
!13346 = !DILocation(line: 2723, column: 25, scope: !13334)
!13347 = !DILocation(line: 2723, column: 31, scope: !13334)
!13348 = !DILocation(line: 2723, column: 34, scope: !13334)
!13349 = !DILocalVariable(name: "co2", scope: !13334, file: !3, line: 2724, type: !44)
!13350 = !DILocation(line: 2724, column: 14, scope: !13334)
!13351 = !DILocation(line: 2724, column: 21, scope: !13334)
!13352 = !DILocation(line: 2724, column: 25, scope: !13334)
!13353 = !DILocation(line: 2724, column: 31, scope: !13334)
!13354 = !DILocation(line: 2724, column: 34, scope: !13334)
!13355 = !DILocalVariable(name: "co3", scope: !13334, file: !3, line: 2725, type: !44)
!13356 = !DILocation(line: 2725, column: 14, scope: !13334)
!13357 = !DILocation(line: 2725, column: 21, scope: !13334)
!13358 = !DILocation(line: 2725, column: 25, scope: !13334)
!13359 = !DILocation(line: 2725, column: 31, scope: !13334)
!13360 = !DILocation(line: 2725, column: 34, scope: !13334)
!13361 = !DILocation(line: 2727, column: 29, scope: !13334)
!13362 = !DILocation(line: 2727, column: 34, scope: !13334)
!13363 = !DILocation(line: 2727, column: 39, scope: !13334)
!13364 = !DILocation(line: 2727, column: 46, scope: !13334)
!13365 = !DILocation(line: 2727, column: 12, scope: !13334)
!13366 = !DILocation(line: 2727, column: 10, scope: !13334)
!13367 = !DILocation(line: 2728, column: 33, scope: !13334)
!13368 = !DILocation(line: 2728, column: 38, scope: !13334)
!13369 = !DILocation(line: 2728, column: 50, scope: !13334)
!13370 = !DILocation(line: 2728, column: 48, scope: !13334)
!13371 = !DILocation(line: 2728, column: 16, scope: !13334)
!13372 = !DILocation(line: 2728, column: 7, scope: !13334)
!13373 = !DILocation(line: 2728, column: 12, scope: !13334)
!13374 = !DILocation(line: 2728, column: 14, scope: !13334)
!13375 = !DILocation(line: 2729, column: 33, scope: !13334)
!13376 = !DILocation(line: 2729, column: 38, scope: !13334)
!13377 = !DILocation(line: 2729, column: 50, scope: !13334)
!13378 = !DILocation(line: 2729, column: 48, scope: !13334)
!13379 = !DILocation(line: 2729, column: 16, scope: !13334)
!13380 = !DILocation(line: 2729, column: 7, scope: !13334)
!13381 = !DILocation(line: 2729, column: 12, scope: !13334)
!13382 = !DILocation(line: 2729, column: 14, scope: !13334)
!13383 = !DILocation(line: 2730, column: 33, scope: !13334)
!13384 = !DILocation(line: 2730, column: 38, scope: !13334)
!13385 = !DILocation(line: 2730, column: 50, scope: !13334)
!13386 = !DILocation(line: 2730, column: 48, scope: !13334)
!13387 = !DILocation(line: 2730, column: 16, scope: !13334)
!13388 = !DILocation(line: 2730, column: 7, scope: !13334)
!13389 = !DILocation(line: 2730, column: 12, scope: !13334)
!13390 = !DILocation(line: 2730, column: 14, scope: !13334)
!13391 = !DILocation(line: 2731, column: 7, scope: !13334)
!13392 = !DILocation(line: 2731, column: 12, scope: !13334)
!13393 = !DILocation(line: 2731, column: 14, scope: !13334)
!13394 = !DILocation(line: 2734, column: 23, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13334, file: !3, line: 2734, column: 11)
!13396 = !DILocation(line: 2734, column: 28, scope: !13395)
!13397 = !DILocation(line: 2734, column: 33, scope: !13395)
!13398 = !DILocation(line: 2734, column: 11, scope: !13395)
!13399 = !DILocation(line: 2734, column: 37, scope: !13395)
!13400 = !DILocation(line: 2734, column: 11, scope: !13334)
!13401 = !DILocation(line: 2735, column: 12, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 2735, column: 12)
!13403 = distinct !DILexicalBlock(scope: !13395, file: !3, line: 2734, column: 51)
!13404 = !DILocation(line: 2735, column: 12, scope: !13403)
!13405 = !DILocation(line: 2736, column: 23, scope: !13402)
!13406 = !DILocation(line: 2736, column: 28, scope: !13402)
!13407 = !DILocation(line: 2736, column: 33, scope: !13402)
!13408 = !DILocation(line: 2736, column: 38, scope: !13402)
!13409 = !DILocation(line: 2736, column: 9, scope: !13402)
!13410 = !DILocation(line: 2738, column: 23, scope: !13402)
!13411 = !DILocation(line: 2738, column: 28, scope: !13402)
!13412 = !DILocation(line: 2738, column: 33, scope: !13402)
!13413 = !DILocation(line: 2738, column: 38, scope: !13402)
!13414 = !DILocation(line: 2738, column: 9, scope: !13402)
!13415 = !DILocation(line: 2739, column: 18, scope: !13403)
!13416 = !DILocation(line: 2739, column: 21, scope: !13403)
!13417 = !DILocation(line: 2739, column: 8, scope: !13403)
!13418 = !DILocation(line: 2740, column: 7, scope: !13403)
!13419 = !DILocation(line: 2742, column: 17, scope: !13334)
!13420 = !DILocation(line: 2742, column: 24, scope: !13334)
!13421 = !DILocation(line: 2742, column: 28, scope: !13334)
!13422 = !DILocation(line: 2742, column: 7, scope: !13334)
!13423 = !DILocation(line: 2742, column: 12, scope: !13334)
!13424 = !DILocation(line: 2742, column: 15, scope: !13334)
!13425 = !DILocation(line: 2743, column: 7, scope: !13334)
!13426 = !DILocation(line: 2743, column: 12, scope: !13334)
!13427 = !DILocation(line: 2743, column: 16, scope: !13334)
!13428 = !DILocation(line: 2744, column: 7, scope: !13334)
!13429 = !DILocation(line: 2744, column: 12, scope: !13334)
!13430 = !DILocation(line: 2744, column: 14, scope: !13334)
!13431 = !DILocation(line: 2745, column: 6, scope: !13334)
!13432 = !DILocation(line: 2721, column: 30, scope: !13328)
!13433 = !DILocation(line: 2721, column: 39, scope: !13328)
!13434 = !DILocation(line: 2721, column: 6, scope: !13328)
!13435 = distinct !{!13435, !13332, !13436}
!13436 = !DILocation(line: 2745, column: 6, scope: !13325)
!13437 = !DILocation(line: 2748, column: 16, scope: !13313)
!13438 = !DILocation(line: 2748, column: 22, scope: !13313)
!13439 = !DILocation(line: 2748, column: 6, scope: !13313)
!13440 = !DILocation(line: 2749, column: 19, scope: !13313)
!13441 = !DILocation(line: 2749, column: 6, scope: !13313)
!13442 = !DILocation(line: 2752, column: 14, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2752, column: 6)
!13444 = !DILocation(line: 2752, column: 12, scope: !13443)
!13445 = !DILocation(line: 2752, column: 11, scope: !13443)
!13446 = !DILocation(line: 2752, column: 25, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 2752, column: 6)
!13448 = !DILocation(line: 2752, column: 27, scope: !13447)
!13449 = !DILocation(line: 2752, column: 32, scope: !13447)
!13450 = !DILocation(line: 2752, column: 26, scope: !13447)
!13451 = !DILocation(line: 2752, column: 6, scope: !13443)
!13452 = !DILocation(line: 2753, column: 29, scope: !13453)
!13453 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 2752, column: 46)
!13454 = !DILocation(line: 2753, column: 34, scope: !13453)
!13455 = !DILocation(line: 2753, column: 12, scope: !13453)
!13456 = !DILocation(line: 2753, column: 10, scope: !13453)
!13457 = !DILocation(line: 2755, column: 18, scope: !13453)
!13458 = !DILocation(line: 2755, column: 23, scope: !13453)
!13459 = !DILocation(line: 2755, column: 26, scope: !13453)
!13460 = !DILocation(line: 2755, column: 7, scope: !13453)
!13461 = !DILocation(line: 2756, column: 17, scope: !13453)
!13462 = !DILocation(line: 2756, column: 22, scope: !13453)
!13463 = !DILocation(line: 2756, column: 26, scope: !13453)
!13464 = !DILocation(line: 2756, column: 29, scope: !13453)
!13465 = !DILocation(line: 2756, column: 34, scope: !13453)
!13466 = !DILocation(line: 2756, column: 7, scope: !13453)
!13467 = !DILocation(line: 2757, column: 17, scope: !13453)
!13468 = !DILocation(line: 2757, column: 22, scope: !13453)
!13469 = !DILocation(line: 2757, column: 26, scope: !13453)
!13470 = !DILocation(line: 2757, column: 29, scope: !13453)
!13471 = !DILocation(line: 2757, column: 34, scope: !13453)
!13472 = !DILocation(line: 2757, column: 7, scope: !13453)
!13473 = !DILocation(line: 2758, column: 17, scope: !13453)
!13474 = !DILocation(line: 2758, column: 22, scope: !13453)
!13475 = !DILocation(line: 2758, column: 26, scope: !13453)
!13476 = !DILocation(line: 2758, column: 29, scope: !13453)
!13477 = !DILocation(line: 2758, column: 34, scope: !13453)
!13478 = !DILocation(line: 2758, column: 7, scope: !13453)
!13479 = !DILocation(line: 2759, column: 6, scope: !13453)
!13480 = !DILocation(line: 2752, column: 42, scope: !13447)
!13481 = !DILocation(line: 2752, column: 6, scope: !13447)
!13482 = distinct !{!13482, !13451, !13483}
!13483 = !DILocation(line: 2759, column: 6, scope: !13443)
!13484 = !DILocation(line: 2760, column: 13, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13313, file: !3, line: 2760, column: 6)
!13486 = !DILocation(line: 2760, column: 12, scope: !13485)
!13487 = !DILocation(line: 2760, column: 11, scope: !13485)
!13488 = !DILocation(line: 2760, column: 24, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13485, file: !3, line: 2760, column: 6)
!13490 = !DILocation(line: 2760, column: 26, scope: !13489)
!13491 = !DILocation(line: 2760, column: 31, scope: !13489)
!13492 = !DILocation(line: 2760, column: 25, scope: !13489)
!13493 = !DILocation(line: 2760, column: 6, scope: !13485)
!13494 = !DILocation(line: 2761, column: 29, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13489, file: !3, line: 2760, column: 45)
!13496 = !DILocation(line: 2761, column: 34, scope: !13495)
!13497 = !DILocation(line: 2761, column: 12, scope: !13495)
!13498 = !DILocation(line: 2761, column: 10, scope: !13495)
!13499 = !DILocation(line: 2762, column: 20, scope: !13495)
!13500 = !DILocation(line: 2762, column: 25, scope: !13495)
!13501 = !DILocation(line: 2762, column: 7, scope: !13495)
!13502 = !DILocation(line: 2763, column: 6, scope: !13495)
!13503 = !DILocation(line: 2760, column: 41, scope: !13489)
!13504 = !DILocation(line: 2760, column: 6, scope: !13489)
!13505 = distinct !{!13505, !13493, !13506}
!13506 = !DILocation(line: 2763, column: 6, scope: !13485)
!13507 = !DILocation(line: 2764, column: 5, scope: !13313)
!13508 = !DILocation(line: 2765, column: 4, scope: !13260)
!13509 = !DILocation(line: 2766, column: 13, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 2766, column: 13)
!13511 = !DILocation(line: 2766, column: 17, scope: !13510)
!13512 = !DILocation(line: 2766, column: 21, scope: !13510)
!13513 = !DILocation(line: 2766, column: 13, scope: !13255)
!13514 = !DILocation(line: 2769, column: 9, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !3, line: 2769, column: 9)
!13516 = distinct !DILexicalBlock(scope: !13510, file: !3, line: 2766, column: 32)
!13517 = !DILocation(line: 2769, column: 13, scope: !13515)
!13518 = !DILocation(line: 2769, column: 18, scope: !13515)
!13519 = !DILocation(line: 2769, column: 9, scope: !13516)
!13520 = !DILocation(line: 2770, column: 37, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 2769, column: 31)
!13522 = !DILocation(line: 2770, column: 42, scope: !13521)
!13523 = !DILocation(line: 2770, column: 46, scope: !13521)
!13524 = !DILocation(line: 2770, column: 53, scope: !13521)
!13525 = !DILocation(line: 2770, column: 59, scope: !13521)
!13526 = !DILocation(line: 2770, column: 15, scope: !13521)
!13527 = !DILocation(line: 2770, column: 14, scope: !13521)
!13528 = !DILocation(line: 2770, column: 10, scope: !13521)
!13529 = !DILocation(line: 2771, column: 5, scope: !13521)
!13530 = !DILocalVariable(name: "p1", scope: !13531, file: !3, line: 2773, type: !21)
!13531 = distinct !DILexicalBlock(scope: !13515, file: !3, line: 2772, column: 10)
!13532 = !DILocation(line: 2773, column: 10, scope: !13531)
!13533 = !DILocalVariable(name: "p2", scope: !13531, file: !3, line: 2773, type: !21)
!13534 = !DILocation(line: 2773, column: 14, scope: !13531)
!13535 = !DILocalVariable(name: "p3", scope: !13531, file: !3, line: 2773, type: !21)
!13536 = !DILocation(line: 2773, column: 18, scope: !13531)
!13537 = !DILocalVariable(name: "p4", scope: !13531, file: !3, line: 2773, type: !21)
!13538 = !DILocation(line: 2773, column: 22, scope: !13531)
!13539 = !DILocation(line: 2775, column: 10, scope: !13531)
!13540 = !DILocation(line: 2775, column: 14, scope: !13531)
!13541 = !DILocation(line: 2775, column: 8, scope: !13531)
!13542 = !DILocation(line: 2776, column: 17, scope: !13531)
!13543 = !DILocation(line: 2776, column: 22, scope: !13531)
!13544 = !DILocation(line: 2776, column: 15, scope: !13531)
!13545 = !DILocation(line: 2777, column: 10, scope: !13531)
!13546 = !DILocation(line: 2777, column: 14, scope: !13531)
!13547 = !DILocation(line: 2777, column: 17, scope: !13531)
!13548 = !DILocation(line: 2777, column: 21, scope: !13531)
!13549 = !DILocation(line: 2777, column: 16, scope: !13531)
!13550 = !DILocation(line: 2777, column: 8, scope: !13531)
!13551 = !DILocation(line: 2779, column: 6, scope: !13531)
!13552 = !DILocation(line: 2779, column: 15, scope: !13531)
!13553 = !DILocation(line: 2780, column: 29, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 2779, column: 19)
!13555 = !DILocation(line: 2780, column: 34, scope: !13554)
!13556 = !DILocation(line: 2780, column: 39, scope: !13554)
!13557 = !DILocation(line: 2780, column: 46, scope: !13554)
!13558 = !DILocation(line: 2780, column: 12, scope: !13554)
!13559 = !DILocation(line: 2780, column: 10, scope: !13554)
!13560 = !DILocation(line: 2782, column: 18, scope: !13554)
!13561 = !DILocation(line: 2782, column: 23, scope: !13554)
!13562 = !DILocation(line: 2782, column: 27, scope: !13554)
!13563 = !DILocation(line: 2782, column: 7, scope: !13554)
!13564 = !DILocation(line: 2783, column: 17, scope: !13554)
!13565 = !DILocation(line: 2783, column: 22, scope: !13554)
!13566 = !DILocation(line: 2783, column: 27, scope: !13554)
!13567 = !DILocation(line: 2783, column: 7, scope: !13554)
!13568 = !DILocation(line: 2784, column: 9, scope: !13554)
!13569 = !DILocation(line: 2786, column: 11, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13554, file: !3, line: 2786, column: 11)
!13571 = !DILocation(line: 2786, column: 11, scope: !13554)
!13572 = !DILocation(line: 2787, column: 20, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 2786, column: 17)
!13574 = !DILocation(line: 2787, column: 8, scope: !13573)
!13575 = !DILocation(line: 2787, column: 13, scope: !13573)
!13576 = !DILocation(line: 2787, column: 18, scope: !13573)
!13577 = !DILocation(line: 2788, column: 13, scope: !13573)
!13578 = !DILocation(line: 2789, column: 7, scope: !13573)
!13579 = distinct !{!13579, !13551, !13580}
!13580 = !DILocation(line: 2790, column: 6, scope: !13531)
!13581 = !DILocation(line: 2792, column: 10, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 2792, column: 10)
!13583 = !DILocation(line: 2792, column: 14, scope: !13582)
!13584 = !DILocation(line: 2792, column: 19, scope: !13582)
!13585 = !DILocation(line: 2792, column: 31, scope: !13582)
!13586 = !DILocation(line: 2792, column: 34, scope: !13582)
!13587 = !DILocation(line: 2792, column: 10, scope: !13531)
!13588 = !DILocation(line: 2793, column: 12, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 2792, column: 40)
!13590 = !DILocation(line: 2793, column: 16, scope: !13589)
!13591 = !DILocation(line: 2793, column: 10, scope: !13589)
!13592 = !DILocation(line: 2794, column: 12, scope: !13589)
!13593 = !DILocation(line: 2794, column: 16, scope: !13589)
!13594 = !DILocation(line: 2794, column: 10, scope: !13589)
!13595 = !DILocation(line: 2795, column: 7, scope: !13589)
!13596 = !DILocation(line: 2795, column: 16, scope: !13589)
!13597 = !DILocation(line: 2796, column: 31, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13589, file: !3, line: 2795, column: 20)
!13599 = !DILocation(line: 2796, column: 36, scope: !13598)
!13600 = !DILocation(line: 2796, column: 41, scope: !13598)
!13601 = !DILocation(line: 2796, column: 48, scope: !13598)
!13602 = !DILocation(line: 2796, column: 14, scope: !13598)
!13603 = !DILocation(line: 2796, column: 12, scope: !13598)
!13604 = !DILocation(line: 2797, column: 19, scope: !13598)
!13605 = !DILocation(line: 2797, column: 24, scope: !13598)
!13606 = !DILocation(line: 2797, column: 28, scope: !13598)
!13607 = !DILocation(line: 2797, column: 8, scope: !13598)
!13608 = !DILocation(line: 2798, column: 18, scope: !13598)
!13609 = !DILocation(line: 2798, column: 23, scope: !13598)
!13610 = !DILocation(line: 2798, column: 28, scope: !13598)
!13611 = !DILocation(line: 2798, column: 8, scope: !13598)
!13612 = !DILocation(line: 2799, column: 20, scope: !13598)
!13613 = !DILocation(line: 2799, column: 8, scope: !13598)
!13614 = !DILocation(line: 2799, column: 13, scope: !13598)
!13615 = !DILocation(line: 2799, column: 18, scope: !13598)
!13616 = !DILocation(line: 2800, column: 11, scope: !13598)
!13617 = !DILocation(line: 2801, column: 13, scope: !13598)
!13618 = distinct !{!13618, !13595, !13619}
!13619 = !DILocation(line: 2802, column: 7, scope: !13589)
!13620 = !DILocation(line: 2803, column: 6, scope: !13589)
!13621 = !DILocation(line: 2805, column: 10, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13531, file: !3, line: 2805, column: 10)
!13623 = !DILocation(line: 2805, column: 14, scope: !13622)
!13624 = !DILocation(line: 2805, column: 29, scope: !13622)
!13625 = !DILocation(line: 2805, column: 32, scope: !13622)
!13626 = !DILocation(line: 2805, column: 42, scope: !13622)
!13627 = !DILocation(line: 2805, column: 10, scope: !13531)
!13628 = !DILocalVariable(name: "startvlak", scope: !13629, file: !3, line: 2806, type: !7772)
!13629 = distinct !DILexicalBlock(scope: !13622, file: !3, line: 2805, column: 47)
!13630 = !DILocation(line: 2806, column: 17, scope: !13629)
!13631 = !DILocation(line: 2806, column: 28, scope: !13629)
!13632 = !DILocation(line: 2806, column: 33, scope: !13629)
!13633 = !DILocation(line: 2808, column: 13, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 2808, column: 7)
!13635 = !DILocation(line: 2808, column: 12, scope: !13634)
!13636 = !DILocation(line: 2808, column: 17, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 2808, column: 7)
!13638 = !DILocation(line: 2808, column: 19, scope: !13637)
!13639 = !DILocation(line: 2808, column: 23, scope: !13637)
!13640 = !DILocation(line: 2808, column: 18, scope: !13637)
!13641 = !DILocation(line: 2808, column: 7, scope: !13634)
!13642 = !DILocation(line: 2810, column: 39, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 2810, column: 12)
!13644 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 2808, column: 35)
!13645 = !DILocation(line: 2810, column: 43, scope: !13643)
!13646 = !DILocation(line: 2810, column: 12, scope: !13643)
!13647 = !DILocation(line: 2810, column: 69, scope: !13643)
!13648 = !DILocation(line: 2810, column: 12, scope: !13644)
!13649 = !DILocation(line: 2811, column: 9, scope: !13643)
!13650 = !DILocation(line: 2813, column: 13, scope: !13644)
!13651 = !DILocation(line: 2813, column: 10, scope: !13644)
!13652 = !DILocation(line: 2814, column: 13, scope: !13644)
!13653 = !DILocation(line: 2814, column: 10, scope: !13644)
!13654 = !DILocation(line: 2815, column: 13, scope: !13644)
!13655 = !DILocation(line: 2815, column: 10, scope: !13644)
!13656 = !DILocation(line: 2816, column: 13, scope: !13644)
!13657 = !DILocation(line: 2816, column: 10, scope: !13644)
!13658 = !DILocation(line: 2818, column: 12, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 2818, column: 12)
!13660 = !DILocation(line: 2818, column: 16, scope: !13659)
!13661 = !DILocation(line: 2818, column: 21, scope: !13659)
!13662 = !DILocation(line: 2818, column: 33, scope: !13659)
!13663 = !DILocation(line: 2818, column: 36, scope: !13659)
!13664 = !DILocation(line: 2818, column: 41, scope: !13659)
!13665 = !DILocation(line: 2818, column: 44, scope: !13659)
!13666 = !DILocation(line: 2818, column: 49, scope: !13659)
!13667 = !DILocation(line: 2818, column: 53, scope: !13659)
!13668 = !DILocation(line: 2818, column: 59, scope: !13659)
!13669 = !DILocation(line: 2818, column: 46, scope: !13659)
!13670 = !DILocation(line: 2818, column: 12, scope: !13644)
!13671 = !DILocation(line: 2819, column: 14, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13659, file: !3, line: 2818, column: 64)
!13673 = !DILocation(line: 2819, column: 19, scope: !13672)
!13674 = !DILocation(line: 2819, column: 23, scope: !13672)
!13675 = !DILocation(line: 2819, column: 17, scope: !13672)
!13676 = !DILocation(line: 2819, column: 12, scope: !13672)
!13677 = !DILocation(line: 2820, column: 14, scope: !13672)
!13678 = !DILocation(line: 2820, column: 19, scope: !13672)
!13679 = !DILocation(line: 2820, column: 23, scope: !13672)
!13680 = !DILocation(line: 2820, column: 17, scope: !13672)
!13681 = !DILocation(line: 2820, column: 12, scope: !13672)
!13682 = !DILocation(line: 2821, column: 8, scope: !13672)
!13683 = !DILocation(line: 2823, column: 8, scope: !13644)
!13684 = !DILocation(line: 2823, column: 15, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 2823, column: 8)
!13686 = distinct !DILexicalBlock(scope: !13644, file: !3, line: 2823, column: 8)
!13687 = !DILocation(line: 2823, column: 17, scope: !13685)
!13688 = !DILocation(line: 2823, column: 21, scope: !13685)
!13689 = !DILocation(line: 2823, column: 16, scope: !13685)
!13690 = !DILocation(line: 2823, column: 8, scope: !13686)
!13691 = !DILocation(line: 2824, column: 31, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 2823, column: 30)
!13693 = !DILocation(line: 2824, column: 36, scope: !13692)
!13694 = !DILocation(line: 2824, column: 41, scope: !13692)
!13695 = !DILocation(line: 2824, column: 48, scope: !13692)
!13696 = !DILocation(line: 2824, column: 14, scope: !13692)
!13697 = !DILocation(line: 2824, column: 12, scope: !13692)
!13698 = !DILocation(line: 2826, column: 35, scope: !13692)
!13699 = !DILocation(line: 2826, column: 40, scope: !13692)
!13700 = !DILocation(line: 2826, column: 18, scope: !13692)
!13701 = !DILocation(line: 2826, column: 9, scope: !13692)
!13702 = !DILocation(line: 2826, column: 14, scope: !13692)
!13703 = !DILocation(line: 2826, column: 16, scope: !13692)
!13704 = !DILocation(line: 2827, column: 35, scope: !13692)
!13705 = !DILocation(line: 2827, column: 40, scope: !13692)
!13706 = !DILocation(line: 2827, column: 18, scope: !13692)
!13707 = !DILocation(line: 2827, column: 9, scope: !13692)
!13708 = !DILocation(line: 2827, column: 14, scope: !13692)
!13709 = !DILocation(line: 2827, column: 16, scope: !13692)
!13710 = !DILocation(line: 2828, column: 35, scope: !13692)
!13711 = !DILocation(line: 2828, column: 40, scope: !13692)
!13712 = !DILocation(line: 2828, column: 18, scope: !13692)
!13713 = !DILocation(line: 2828, column: 9, scope: !13692)
!13714 = !DILocation(line: 2828, column: 14, scope: !13692)
!13715 = !DILocation(line: 2828, column: 16, scope: !13692)
!13716 = !DILocation(line: 2829, column: 35, scope: !13692)
!13717 = !DILocation(line: 2829, column: 40, scope: !13692)
!13718 = !DILocation(line: 2829, column: 18, scope: !13692)
!13719 = !DILocation(line: 2829, column: 9, scope: !13692)
!13720 = !DILocation(line: 2829, column: 14, scope: !13692)
!13721 = !DILocation(line: 2829, column: 16, scope: !13692)
!13722 = !DILocation(line: 2830, column: 9, scope: !13692)
!13723 = !DILocation(line: 2830, column: 14, scope: !13692)
!13724 = !DILocation(line: 2830, column: 16, scope: !13692)
!13725 = !DILocation(line: 2831, column: 13, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13692, file: !3, line: 2831, column: 13)
!13727 = !DILocation(line: 2831, column: 14, scope: !13726)
!13728 = !DILocation(line: 2831, column: 13, scope: !13692)
!13729 = !DILocation(line: 2831, column: 19, scope: !13726)
!13730 = !DILocation(line: 2831, column: 24, scope: !13726)
!13731 = !DILocation(line: 2831, column: 26, scope: !13726)
!13732 = !DILocation(line: 2833, column: 20, scope: !13692)
!13733 = !DILocation(line: 2833, column: 24, scope: !13692)
!13734 = !DILocation(line: 2833, column: 9, scope: !13692)
!13735 = !DILocation(line: 2833, column: 14, scope: !13692)
!13736 = !DILocation(line: 2833, column: 18, scope: !13692)
!13737 = !DILocation(line: 2835, column: 24, scope: !13692)
!13738 = !DILocation(line: 2835, column: 29, scope: !13692)
!13739 = !DILocation(line: 2835, column: 32, scope: !13692)
!13740 = !DILocation(line: 2835, column: 37, scope: !13692)
!13741 = !DILocation(line: 2835, column: 41, scope: !13692)
!13742 = !DILocation(line: 2835, column: 45, scope: !13692)
!13743 = !DILocation(line: 2835, column: 50, scope: !13692)
!13744 = !DILocation(line: 2835, column: 54, scope: !13692)
!13745 = !DILocation(line: 2835, column: 58, scope: !13692)
!13746 = !DILocation(line: 2835, column: 63, scope: !13692)
!13747 = !DILocation(line: 2835, column: 67, scope: !13692)
!13748 = !DILocation(line: 2835, column: 71, scope: !13692)
!13749 = !DILocation(line: 2835, column: 76, scope: !13692)
!13750 = !DILocation(line: 2835, column: 80, scope: !13692)
!13751 = !DILocation(line: 2835, column: 9, scope: !13692)
!13752 = !DILocation(line: 2836, column: 19, scope: !13692)
!13753 = !DILocation(line: 2836, column: 26, scope: !13692)
!13754 = !DILocation(line: 2836, column: 30, scope: !13692)
!13755 = !DILocation(line: 2836, column: 9, scope: !13692)
!13756 = !DILocation(line: 2836, column: 14, scope: !13692)
!13757 = !DILocation(line: 2836, column: 17, scope: !13692)
!13758 = !DILocation(line: 2838, column: 13, scope: !13692)
!13759 = !DILocation(line: 2838, column: 11, scope: !13692)
!13760 = !DILocation(line: 2839, column: 11, scope: !13692)
!13761 = !DILocation(line: 2840, column: 13, scope: !13692)
!13762 = !DILocation(line: 2840, column: 11, scope: !13692)
!13763 = !DILocation(line: 2841, column: 11, scope: !13692)
!13764 = !DILocation(line: 2842, column: 8, scope: !13692)
!13765 = !DILocation(line: 2823, column: 26, scope: !13685)
!13766 = !DILocation(line: 2823, column: 8, scope: !13685)
!13767 = distinct !{!13767, !13690, !13768}
!13768 = !DILocation(line: 2842, column: 8, scope: !13686)
!13769 = !DILocation(line: 2843, column: 7, scope: !13644)
!13770 = !DILocation(line: 2808, column: 31, scope: !13637)
!13771 = !DILocation(line: 2808, column: 7, scope: !13637)
!13772 = distinct !{!13772, !13641, !13773}
!13773 = !DILocation(line: 2843, column: 7, scope: !13634)
!13774 = !DILocation(line: 2845, column: 11, scope: !13775)
!13775 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 2845, column: 11)
!13776 = !DILocation(line: 2845, column: 15, scope: !13775)
!13777 = !DILocation(line: 2845, column: 11, scope: !13629)
!13778 = !DILocation(line: 2846, column: 14, scope: !13779)
!13779 = distinct !DILexicalBlock(scope: !13780, file: !3, line: 2846, column: 8)
!13780 = distinct !DILexicalBlock(scope: !13775, file: !3, line: 2845, column: 31)
!13781 = !DILocation(line: 2846, column: 13, scope: !13779)
!13782 = !DILocation(line: 2846, column: 18, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 2846, column: 8)
!13784 = !DILocation(line: 2846, column: 20, scope: !13783)
!13785 = !DILocation(line: 2846, column: 24, scope: !13783)
!13786 = !DILocation(line: 2846, column: 29, scope: !13783)
!13787 = !DILocation(line: 2846, column: 35, scope: !13783)
!13788 = !DILocation(line: 2846, column: 39, scope: !13783)
!13789 = !DILocation(line: 2846, column: 43, scope: !13783)
!13790 = !DILocation(line: 2846, column: 33, scope: !13783)
!13791 = !DILocation(line: 2846, column: 32, scope: !13783)
!13792 = !DILocation(line: 2846, column: 31, scope: !13783)
!13793 = !DILocation(line: 2846, column: 19, scope: !13783)
!13794 = !DILocation(line: 2846, column: 8, scope: !13779)
!13795 = !DILocation(line: 2847, column: 13, scope: !13796)
!13796 = distinct !DILexicalBlock(scope: !13783, file: !3, line: 2847, column: 13)
!13797 = !DILocation(line: 2847, column: 17, scope: !13796)
!13798 = !DILocation(line: 2847, column: 32, scope: !13796)
!13799 = !DILocation(line: 2847, column: 33, scope: !13796)
!13800 = !DILocation(line: 2847, column: 43, scope: !13796)
!13801 = !DILocation(line: 2847, column: 44, scope: !13796)
!13802 = !DILocation(line: 2847, column: 40, scope: !13796)
!13803 = !DILocation(line: 2847, column: 37, scope: !13796)
!13804 = !DILocation(line: 2847, column: 13, scope: !13783)
!13805 = !DILocation(line: 2848, column: 30, scope: !13796)
!13806 = !DILocation(line: 2848, column: 35, scope: !13796)
!13807 = !DILocation(line: 2848, column: 46, scope: !13796)
!13808 = !DILocation(line: 2848, column: 57, scope: !13796)
!13809 = !DILocation(line: 2848, column: 61, scope: !13796)
!13810 = !DILocation(line: 2848, column: 68, scope: !13796)
!13811 = !DILocation(line: 2848, column: 72, scope: !13796)
!13812 = !DILocation(line: 2848, column: 76, scope: !13796)
!13813 = !DILocation(line: 2848, column: 79, scope: !13796)
!13814 = !DILocation(line: 2848, column: 83, scope: !13796)
!13815 = !DILocation(line: 2848, column: 87, scope: !13796)
!13816 = !DILocation(line: 2848, column: 99, scope: !13796)
!13817 = !DILocation(line: 2848, column: 103, scope: !13796)
!13818 = !DILocation(line: 2848, column: 107, scope: !13796)
!13819 = !DILocation(line: 2848, column: 10, scope: !13796)
!13820 = !DILocation(line: 2847, column: 50, scope: !13796)
!13821 = !DILocation(line: 2846, column: 57, scope: !13783)
!13822 = !DILocation(line: 2846, column: 8, scope: !13783)
!13823 = distinct !{!13823, !13794, !13824}
!13824 = !DILocation(line: 2848, column: 117, scope: !13779)
!13825 = !DILocation(line: 2849, column: 7, scope: !13780)
!13826 = !DILocation(line: 2852, column: 15, scope: !13827)
!13827 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 2852, column: 7)
!13828 = !DILocation(line: 2852, column: 13, scope: !13827)
!13829 = !DILocation(line: 2852, column: 12, scope: !13827)
!13830 = !DILocation(line: 2852, column: 26, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13827, file: !3, line: 2852, column: 7)
!13832 = !DILocation(line: 2852, column: 28, scope: !13831)
!13833 = !DILocation(line: 2852, column: 33, scope: !13831)
!13834 = !DILocation(line: 2852, column: 27, scope: !13831)
!13835 = !DILocation(line: 2852, column: 7, scope: !13827)
!13836 = !DILocation(line: 2853, column: 30, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13831, file: !3, line: 2852, column: 47)
!13838 = !DILocation(line: 2853, column: 35, scope: !13837)
!13839 = !DILocation(line: 2853, column: 13, scope: !13837)
!13840 = !DILocation(line: 2853, column: 11, scope: !13837)
!13841 = !DILocation(line: 2855, column: 18, scope: !13837)
!13842 = !DILocation(line: 2855, column: 23, scope: !13837)
!13843 = !DILocation(line: 2855, column: 27, scope: !13837)
!13844 = !DILocation(line: 2855, column: 30, scope: !13837)
!13845 = !DILocation(line: 2855, column: 35, scope: !13837)
!13846 = !DILocation(line: 2855, column: 8, scope: !13837)
!13847 = !DILocation(line: 2856, column: 18, scope: !13837)
!13848 = !DILocation(line: 2856, column: 23, scope: !13837)
!13849 = !DILocation(line: 2856, column: 27, scope: !13837)
!13850 = !DILocation(line: 2856, column: 30, scope: !13837)
!13851 = !DILocation(line: 2856, column: 35, scope: !13837)
!13852 = !DILocation(line: 2856, column: 8, scope: !13837)
!13853 = !DILocation(line: 2857, column: 18, scope: !13837)
!13854 = !DILocation(line: 2857, column: 23, scope: !13837)
!13855 = !DILocation(line: 2857, column: 27, scope: !13837)
!13856 = !DILocation(line: 2857, column: 30, scope: !13837)
!13857 = !DILocation(line: 2857, column: 35, scope: !13837)
!13858 = !DILocation(line: 2857, column: 8, scope: !13837)
!13859 = !DILocation(line: 2858, column: 18, scope: !13837)
!13860 = !DILocation(line: 2858, column: 23, scope: !13837)
!13861 = !DILocation(line: 2858, column: 27, scope: !13837)
!13862 = !DILocation(line: 2858, column: 30, scope: !13837)
!13863 = !DILocation(line: 2858, column: 35, scope: !13837)
!13864 = !DILocation(line: 2858, column: 8, scope: !13837)
!13865 = !DILocation(line: 2859, column: 7, scope: !13837)
!13866 = !DILocation(line: 2852, column: 43, scope: !13831)
!13867 = !DILocation(line: 2852, column: 7, scope: !13831)
!13868 = distinct !{!13868, !13835, !13869}
!13869 = !DILocation(line: 2859, column: 7, scope: !13827)
!13870 = !DILocation(line: 2860, column: 14, scope: !13871)
!13871 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 2860, column: 7)
!13872 = !DILocation(line: 2860, column: 13, scope: !13871)
!13873 = !DILocation(line: 2860, column: 12, scope: !13871)
!13874 = !DILocation(line: 2860, column: 25, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13871, file: !3, line: 2860, column: 7)
!13876 = !DILocation(line: 2860, column: 27, scope: !13875)
!13877 = !DILocation(line: 2860, column: 32, scope: !13875)
!13878 = !DILocation(line: 2860, column: 26, scope: !13875)
!13879 = !DILocation(line: 2860, column: 7, scope: !13871)
!13880 = !DILocation(line: 2861, column: 30, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13875, file: !3, line: 2860, column: 46)
!13882 = !DILocation(line: 2861, column: 35, scope: !13881)
!13883 = !DILocation(line: 2861, column: 13, scope: !13881)
!13884 = !DILocation(line: 2861, column: 11, scope: !13881)
!13885 = !DILocation(line: 2862, column: 21, scope: !13881)
!13886 = !DILocation(line: 2862, column: 26, scope: !13881)
!13887 = !DILocation(line: 2862, column: 8, scope: !13881)
!13888 = !DILocation(line: 2863, column: 7, scope: !13881)
!13889 = !DILocation(line: 2860, column: 42, scope: !13875)
!13890 = !DILocation(line: 2860, column: 7, scope: !13875)
!13891 = distinct !{!13891, !13879, !13892}
!13892 = !DILocation(line: 2863, column: 7, scope: !13871)
!13893 = !DILocation(line: 2864, column: 6, scope: !13629)
!13894 = !DILocation(line: 2866, column: 4, scope: !13516)
!13895 = !DILocation(line: 2868, column: 8, scope: !13246)
!13896 = !DILocation(line: 2868, column: 12, scope: !13246)
!13897 = !DILocation(line: 2868, column: 6, scope: !13246)
!13898 = distinct !{!13898, !13242, !13899}
!13899 = !DILocation(line: 2869, column: 3, scope: !13220)
!13900 = !DILocation(line: 2872, column: 2, scope: !12903)
!13901 = !DILocation(line: 2874, column: 2, scope: !12903)
!13902 = !DILocation(line: 2874, column: 12, scope: !12903)
!13903 = !DILocation(line: 2875, column: 1, scope: !12903)
!13904 = distinct !DISubprogram(name: "init_render_surf", scope: !3, file: !3, line: 2555, type: !10646, scopeLine: 2556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!13905 = !DILocalVariable(name: "re", arg: 1, scope: !13904, file: !3, line: 2555, type: !6)
!13906 = !DILocation(line: 2555, column: 38, scope: !13904)
!13907 = !DILocalVariable(name: "obr", arg: 2, scope: !13904, file: !3, line: 2555, type: !3063)
!13908 = !DILocation(line: 2555, column: 53, scope: !13904)
!13909 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !13904, file: !3, line: 2555, type: !21)
!13910 = !DILocation(line: 2555, column: 62, scope: !13904)
!13911 = !DILocalVariable(name: "ob", scope: !13904, file: !3, line: 2557, type: !3236)
!13912 = !DILocation(line: 2557, column: 10, scope: !13904)
!13913 = !DILocation(line: 2557, column: 14, scope: !13904)
!13914 = !DILocation(line: 2557, column: 19, scope: !13904)
!13915 = !DILocalVariable(name: "nu", scope: !13904, file: !3, line: 2558, type: !13916)
!13916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13917, size: 64)
!13917 = !DIDerivedType(tag: DW_TAG_typedef, name: "Nurb", file: !379, line: 166, baseType: !13918)
!13918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Nurb", file: !379, line: 147, size: 704, elements: !13919)
!13919 = !{!13920, !13922, !13923, !13924, !13925, !13926, !13927, !13928, !13929, !13930, !13931, !13932, !13933, !13934, !13935, !13936, !13937, !13938, !13950, !13971, !13972, !13973}
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13918, file: !379, line: 148, baseType: !13921, size: 64)
!13921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13918, size: 64)
!13922 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13918, file: !379, line: 148, baseType: !13921, size: 64, offset: 64)
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13918, file: !379, line: 149, baseType: !23, size: 16, offset: 128)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !13918, file: !379, line: 150, baseType: !23, size: 16, offset: 144)
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !13918, file: !379, line: 151, baseType: !23, size: 16, offset: 160)
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13918, file: !379, line: 151, baseType: !23, size: 16, offset: 176)
!13927 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !13918, file: !379, line: 152, baseType: !21, size: 32, offset: 192)
!13928 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !13918, file: !379, line: 152, baseType: !21, size: 32, offset: 224)
!13929 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13918, file: !379, line: 153, baseType: !656, size: 32, offset: 256)
!13930 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !13918, file: !379, line: 154, baseType: !23, size: 16, offset: 288)
!13931 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !13918, file: !379, line: 154, baseType: !23, size: 16, offset: 304)
!13932 = !DIDerivedType(tag: DW_TAG_member, name: "orderu", scope: !13918, file: !379, line: 155, baseType: !23, size: 16, offset: 320)
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "orderv", scope: !13918, file: !379, line: 155, baseType: !23, size: 16, offset: 336)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "flagu", scope: !13918, file: !379, line: 156, baseType: !23, size: 16, offset: 352)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "flagv", scope: !13918, file: !379, line: 156, baseType: !23, size: 16, offset: 368)
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "knotsu", scope: !13918, file: !379, line: 158, baseType: !44, size: 64, offset: 384)
!13937 = !DIDerivedType(tag: DW_TAG_member, name: "knotsv", scope: !13918, file: !379, line: 158, baseType: !44, size: 64, offset: 448)
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !13918, file: !379, line: 159, baseType: !13939, size: 64, offset: 512)
!13939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13940, size: 64)
!13940 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPoint", file: !379, line: 141, baseType: !13941)
!13941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !379, line: 136, size: 288, elements: !13942)
!13942 = !{!13943, !13944, !13945, !13946, !13947, !13948, !13949}
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13941, file: !379, line: 137, baseType: !270, size: 128)
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !13941, file: !379, line: 138, baseType: !45, size: 32, offset: 128)
!13945 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !13941, file: !379, line: 138, baseType: !45, size: 32, offset: 160)
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !13941, file: !379, line: 139, baseType: !23, size: 16, offset: 192)
!13947 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !13941, file: !379, line: 139, baseType: !23, size: 16, offset: 208)
!13948 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !13941, file: !379, line: 140, baseType: !45, size: 32, offset: 224)
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13941, file: !379, line: 140, baseType: !45, size: 32, offset: 256)
!13950 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !13918, file: !379, line: 160, baseType: !13951, size: 64, offset: 576)
!13951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13952, size: 64)
!13952 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !379, line: 133, baseType: !13953)
!13953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !379, line: 117, size: 576, elements: !13954)
!13954 = !{!13955, !13956, !13957, !13958, !13959, !13960, !13961, !13962, !13963, !13964, !13965, !13966, !13967, !13968, !13969, !13970}
!13955 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !13953, file: !379, line: 118, baseType: !2674, size: 288)
!13956 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !13953, file: !379, line: 119, baseType: !45, size: 32, offset: 288)
!13957 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !13953, file: !379, line: 119, baseType: !45, size: 32, offset: 320)
!13958 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !13953, file: !379, line: 119, baseType: !45, size: 32, offset: 352)
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !13953, file: !379, line: 121, baseType: !17, size: 8, offset: 384)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !13953, file: !379, line: 123, baseType: !17, size: 8, offset: 392)
!13961 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !13953, file: !379, line: 123, baseType: !17, size: 8, offset: 400)
!13962 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !13953, file: !379, line: 124, baseType: !17, size: 8, offset: 408)
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !13953, file: !379, line: 124, baseType: !17, size: 8, offset: 416)
!13964 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !13953, file: !379, line: 124, baseType: !17, size: 8, offset: 424)
!13965 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !13953, file: !379, line: 126, baseType: !17, size: 8, offset: 432)
!13966 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !13953, file: !379, line: 128, baseType: !17, size: 8, offset: 440)
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !13953, file: !379, line: 129, baseType: !45, size: 32, offset: 448)
!13968 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !13953, file: !379, line: 130, baseType: !45, size: 32, offset: 480)
!13969 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !13953, file: !379, line: 130, baseType: !45, size: 32, offset: 512)
!13970 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13953, file: !379, line: 132, baseType: !9223, size: 32, offset: 544)
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "tilt_interp", scope: !13918, file: !379, line: 162, baseType: !23, size: 16, offset: 640)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "radius_interp", scope: !13918, file: !379, line: 163, baseType: !23, size: 16, offset: 656)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "charidx", scope: !13918, file: !379, line: 165, baseType: !21, size: 32, offset: 672)
!13974 = !DILocation(line: 2558, column: 8, scope: !13904)
!13975 = !DILocalVariable(name: "cu", scope: !13904, file: !3, line: 2559, type: !12915)
!13976 = !DILocation(line: 2559, column: 9, scope: !13904)
!13977 = !DILocalVariable(name: "displist", scope: !13904, file: !3, line: 2560, type: !59)
!13978 = !DILocation(line: 2560, column: 11, scope: !13904)
!13979 = !DILocalVariable(name: "dl", scope: !13904, file: !3, line: 2561, type: !13024)
!13980 = !DILocation(line: 2561, column: 12, scope: !13904)
!13981 = !DILocalVariable(name: "matar", scope: !13904, file: !3, line: 2562, type: !8204)
!13982 = !DILocation(line: 2562, column: 13, scope: !13904)
!13983 = !DILocalVariable(name: "orco", scope: !13904, file: !3, line: 2563, type: !44)
!13984 = !DILocation(line: 2563, column: 9, scope: !13904)
!13985 = !DILocalVariable(name: "mat", scope: !13904, file: !3, line: 2563, type: !462)
!13986 = !DILocation(line: 2563, column: 20, scope: !13904)
!13987 = !DILocalVariable(name: "a", scope: !13904, file: !3, line: 2564, type: !21)
!13988 = !DILocation(line: 2564, column: 6, scope: !13904)
!13989 = !DILocalVariable(name: "totmat", scope: !13904, file: !3, line: 2564, type: !21)
!13990 = !DILocation(line: 2564, column: 9, scope: !13904)
!13991 = !DILocalVariable(name: "need_orco", scope: !13904, file: !3, line: 2565, type: !28)
!13992 = !DILocation(line: 2565, column: 7, scope: !13904)
!13993 = !DILocalVariable(name: "dm", scope: !13904, file: !3, line: 2566, type: !2263)
!13994 = !DILocation(line: 2566, column: 15, scope: !13904)
!13995 = !DILocation(line: 2568, column: 6, scope: !13904)
!13996 = !DILocation(line: 2568, column: 10, scope: !13904)
!13997 = !DILocation(line: 2568, column: 4, scope: !13904)
!13998 = !DILocation(line: 2569, column: 6, scope: !13904)
!13999 = !DILocation(line: 2569, column: 10, scope: !13904)
!14000 = !DILocation(line: 2569, column: 15, scope: !13904)
!14001 = !DILocation(line: 2569, column: 4, scope: !13904)
!14002 = !DILocation(line: 2570, column: 6, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13904, file: !3, line: 2570, column: 6)
!14004 = !DILocation(line: 2570, column: 9, scope: !14003)
!14005 = !DILocation(line: 2570, column: 6, scope: !13904)
!14006 = !DILocation(line: 2570, column: 18, scope: !14003)
!14007 = !DILocation(line: 2572, column: 14, scope: !13904)
!14008 = !DILocation(line: 2572, column: 19, scope: !13904)
!14009 = !DILocation(line: 2572, column: 23, scope: !13904)
!14010 = !DILocation(line: 2572, column: 32, scope: !13904)
!14011 = !DILocation(line: 2572, column: 36, scope: !13904)
!14012 = !DILocation(line: 2572, column: 2, scope: !13904)
!14013 = !DILocation(line: 2573, column: 15, scope: !13904)
!14014 = !DILocation(line: 2573, column: 19, scope: !13904)
!14015 = !DILocation(line: 2573, column: 25, scope: !13904)
!14016 = !DILocation(line: 2573, column: 2, scope: !13904)
!14017 = !DILocation(line: 2576, column: 10, scope: !13904)
!14018 = !DILocation(line: 2576, column: 14, scope: !13904)
!14019 = !DILocation(line: 2576, column: 20, scope: !13904)
!14020 = !DILocation(line: 2576, column: 8, scope: !13904)
!14021 = !DILocation(line: 2577, column: 9, scope: !13904)
!14022 = !DILocation(line: 2577, column: 39, scope: !13904)
!14023 = !DILocation(line: 2577, column: 38, scope: !13904)
!14024 = !DILocation(line: 2577, column: 7, scope: !13904)
!14025 = !DILocation(line: 2579, column: 8, scope: !14026)
!14026 = distinct !DILexicalBlock(scope: !13904, file: !3, line: 2579, column: 2)
!14027 = !DILocation(line: 2579, column: 7, scope: !14026)
!14028 = !DILocation(line: 2579, column: 12, scope: !14029)
!14029 = distinct !DILexicalBlock(scope: !14026, file: !3, line: 2579, column: 2)
!14030 = !DILocation(line: 2579, column: 14, scope: !14029)
!14031 = !DILocation(line: 2579, column: 13, scope: !14029)
!14032 = !DILocation(line: 2579, column: 2, scope: !14026)
!14033 = !DILocation(line: 2580, column: 34, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 2579, column: 27)
!14035 = !DILocation(line: 2580, column: 38, scope: !14034)
!14036 = !DILocation(line: 2580, column: 42, scope: !14034)
!14037 = !DILocation(line: 2580, column: 43, scope: !14034)
!14038 = !DILocation(line: 2580, column: 13, scope: !14034)
!14039 = !DILocation(line: 2580, column: 3, scope: !14034)
!14040 = !DILocation(line: 2580, column: 9, scope: !14034)
!14041 = !DILocation(line: 2580, column: 11, scope: !14034)
!14042 = !DILocation(line: 2582, column: 7, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 2582, column: 7)
!14044 = !DILocation(line: 2582, column: 13, scope: !14043)
!14045 = !DILocation(line: 2582, column: 16, scope: !14043)
!14046 = !DILocation(line: 2582, column: 19, scope: !14043)
!14047 = !DILocation(line: 2582, column: 25, scope: !14043)
!14048 = !DILocation(line: 2582, column: 29, scope: !14043)
!14049 = !DILocation(line: 2582, column: 35, scope: !14043)
!14050 = !DILocation(line: 2582, column: 7, scope: !14034)
!14051 = !DILocation(line: 2583, column: 13, scope: !14043)
!14052 = !DILocation(line: 2583, column: 4, scope: !14043)
!14053 = !DILocation(line: 2584, column: 2, scope: !14034)
!14054 = !DILocation(line: 2579, column: 23, scope: !14029)
!14055 = !DILocation(line: 2579, column: 2, scope: !14029)
!14056 = distinct !{!14056, !14032, !14057}
!14057 = !DILocation(line: 2584, column: 2, scope: !14026)
!14058 = !DILocation(line: 2586, column: 6, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !13904, file: !3, line: 2586, column: 6)
!14060 = !DILocation(line: 2586, column: 10, scope: !14059)
!14061 = !DILocation(line: 2586, column: 17, scope: !14059)
!14062 = !DILocation(line: 2586, column: 21, scope: !14059)
!14063 = !DILocation(line: 2586, column: 25, scope: !14059)
!14064 = !DILocation(line: 2586, column: 33, scope: !14059)
!14065 = !DILocation(line: 2586, column: 37, scope: !14059)
!14066 = !DILocation(line: 2586, column: 6, scope: !13904)
!14067 = !DILocation(line: 2586, column: 61, scope: !14059)
!14068 = !DILocation(line: 2586, column: 52, scope: !14059)
!14069 = !DILocation(line: 2588, column: 25, scope: !13904)
!14070 = !DILocation(line: 2588, column: 29, scope: !13904)
!14071 = !DILocation(line: 2588, column: 36, scope: !13904)
!14072 = !DILocation(line: 2588, column: 2, scope: !13904)
!14073 = !DILocation(line: 2590, column: 6, scope: !14074)
!14074 = distinct !DILexicalBlock(scope: !13904, file: !3, line: 2590, column: 6)
!14075 = !DILocation(line: 2590, column: 6, scope: !13904)
!14076 = !DILocation(line: 2591, column: 7, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14078, file: !3, line: 2591, column: 7)
!14078 = distinct !DILexicalBlock(scope: !14074, file: !3, line: 2590, column: 10)
!14079 = !DILocation(line: 2591, column: 7, scope: !14078)
!14080 = !DILocation(line: 2592, column: 27, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14077, file: !3, line: 2591, column: 18)
!14082 = !DILocation(line: 2592, column: 31, scope: !14081)
!14083 = !DILocation(line: 2592, column: 11, scope: !14081)
!14084 = !DILocation(line: 2592, column: 9, scope: !14081)
!14085 = !DILocation(line: 2593, column: 9, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14081, file: !3, line: 2593, column: 8)
!14087 = !DILocation(line: 2593, column: 8, scope: !14081)
!14088 = !DILocation(line: 2594, column: 34, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14086, file: !3, line: 2593, column: 15)
!14090 = !DILocation(line: 2594, column: 38, scope: !14089)
!14091 = !DILocation(line: 2594, column: 45, scope: !14089)
!14092 = !DILocation(line: 2594, column: 49, scope: !14089)
!14093 = !DILocation(line: 2594, column: 11, scope: !14089)
!14094 = !DILocation(line: 2594, column: 9, scope: !14089)
!14095 = !DILocation(line: 2595, column: 9, scope: !14096)
!14096 = distinct !DILexicalBlock(scope: !14089, file: !3, line: 2595, column: 9)
!14097 = !DILocation(line: 2595, column: 9, scope: !14089)
!14098 = !DILocation(line: 2596, column: 22, scope: !14099)
!14099 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 2595, column: 15)
!14100 = !DILocation(line: 2596, column: 26, scope: !14099)
!14101 = !DILocation(line: 2596, column: 30, scope: !14099)
!14102 = !DILocation(line: 2596, column: 6, scope: !14099)
!14103 = !DILocation(line: 2597, column: 5, scope: !14099)
!14104 = !DILocation(line: 2598, column: 4, scope: !14089)
!14105 = !DILocation(line: 2599, column: 3, scope: !14081)
!14106 = !DILocation(line: 2601, column: 18, scope: !14078)
!14107 = !DILocation(line: 2601, column: 22, scope: !14078)
!14108 = !DILocation(line: 2601, column: 26, scope: !14078)
!14109 = !DILocation(line: 2601, column: 31, scope: !14078)
!14110 = !DILocation(line: 2601, column: 43, scope: !14078)
!14111 = !DILocation(line: 2601, column: 49, scope: !14078)
!14112 = !DILocation(line: 2601, column: 3, scope: !14078)
!14113 = !DILocation(line: 2602, column: 3, scope: !14078)
!14114 = !DILocation(line: 2602, column: 7, scope: !14078)
!14115 = !DILocation(line: 2602, column: 15, scope: !14078)
!14116 = !DILocation(line: 2603, column: 2, scope: !14078)
!14117 = !DILocation(line: 2605, column: 7, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 2605, column: 7)
!14119 = distinct !DILexicalBlock(scope: !14074, file: !3, line: 2604, column: 7)
!14120 = !DILocation(line: 2605, column: 7, scope: !14119)
!14121 = !DILocation(line: 2606, column: 27, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14118, file: !3, line: 2605, column: 18)
!14123 = !DILocation(line: 2606, column: 31, scope: !14122)
!14124 = !DILocation(line: 2606, column: 11, scope: !14122)
!14125 = !DILocation(line: 2606, column: 9, scope: !14122)
!14126 = !DILocation(line: 2607, column: 9, scope: !14127)
!14127 = distinct !DILexicalBlock(scope: !14122, file: !3, line: 2607, column: 8)
!14128 = !DILocation(line: 2607, column: 8, scope: !14122)
!14129 = !DILocation(line: 2608, column: 37, scope: !14130)
!14130 = distinct !DILexicalBlock(scope: !14127, file: !3, line: 2607, column: 15)
!14131 = !DILocation(line: 2608, column: 12, scope: !14130)
!14132 = !DILocation(line: 2608, column: 10, scope: !14130)
!14133 = !DILocation(line: 2609, column: 21, scope: !14130)
!14134 = !DILocation(line: 2609, column: 25, scope: !14130)
!14135 = !DILocation(line: 2609, column: 29, scope: !14130)
!14136 = !DILocation(line: 2609, column: 5, scope: !14130)
!14137 = !DILocation(line: 2610, column: 4, scope: !14130)
!14138 = !DILocation(line: 2611, column: 3, scope: !14122)
!14139 = !DILocation(line: 2614, column: 20, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14119, file: !3, line: 2614, column: 3)
!14141 = !DILocation(line: 2614, column: 11, scope: !14140)
!14142 = !DILocation(line: 2614, column: 10, scope: !14140)
!14143 = !DILocation(line: 2614, column: 8, scope: !14140)
!14144 = !DILocation(line: 2614, column: 27, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14140, file: !3, line: 2614, column: 3)
!14146 = !DILocation(line: 2614, column: 3, scope: !14140)
!14147 = !DILocation(line: 2616, column: 8, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14149, file: !3, line: 2616, column: 8)
!14149 = distinct !DILexicalBlock(scope: !14145, file: !3, line: 2614, column: 44)
!14150 = !DILocation(line: 2616, column: 12, scope: !14148)
!14151 = !DILocation(line: 2616, column: 16, scope: !14148)
!14152 = !DILocation(line: 2616, column: 8, scope: !14149)
!14153 = !DILocation(line: 2617, column: 36, scope: !14148)
!14154 = !DILocation(line: 2617, column: 41, scope: !14148)
!14155 = !DILocation(line: 2617, column: 45, scope: !14148)
!14156 = !DILocation(line: 2617, column: 52, scope: !14148)
!14157 = !DILocation(line: 2617, column: 58, scope: !14148)
!14158 = !DILocation(line: 2617, column: 14, scope: !14148)
!14159 = !DILocation(line: 2617, column: 13, scope: !14148)
!14160 = !DILocation(line: 2617, column: 9, scope: !14148)
!14161 = !DILocation(line: 2617, column: 5, scope: !14148)
!14162 = !DILocation(line: 2618, column: 3, scope: !14149)
!14163 = !DILocation(line: 2614, column: 34, scope: !14145)
!14164 = !DILocation(line: 2614, column: 38, scope: !14145)
!14165 = !DILocation(line: 2614, column: 33, scope: !14145)
!14166 = !DILocation(line: 2614, column: 3, scope: !14145)
!14167 = distinct !{!14167, !14146, !14168}
!14168 = !DILocation(line: 2618, column: 3, scope: !14140)
!14169 = !DILocation(line: 2621, column: 2, scope: !13904)
!14170 = !DILocation(line: 2623, column: 2, scope: !13904)
!14171 = !DILocation(line: 2623, column: 12, scope: !13904)
!14172 = !DILocation(line: 2624, column: 1, scope: !13904)
!14173 = distinct !DISubprogram(name: "init_render_mesh", scope: !3, file: !3, line: 3093, type: !10646, scopeLine: 3094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!14174 = !DILocalVariable(name: "re", arg: 1, scope: !14173, file: !3, line: 3093, type: !6)
!14175 = !DILocation(line: 3093, column: 38, scope: !14173)
!14176 = !DILocalVariable(name: "obr", arg: 2, scope: !14173, file: !3, line: 3093, type: !3063)
!14177 = !DILocation(line: 3093, column: 53, scope: !14173)
!14178 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !14173, file: !3, line: 3093, type: !21)
!14179 = !DILocation(line: 3093, column: 62, scope: !14173)
!14180 = !DILocalVariable(name: "ob", scope: !14173, file: !3, line: 3095, type: !3236)
!14181 = !DILocation(line: 3095, column: 10, scope: !14173)
!14182 = !DILocation(line: 3095, column: 14, scope: !14173)
!14183 = !DILocation(line: 3095, column: 19, scope: !14173)
!14184 = !DILocalVariable(name: "me", scope: !14173, file: !3, line: 3096, type: !14185)
!14185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14186, size: 64)
!14186 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !1956, line: 133, baseType: !1955)
!14187 = !DILocation(line: 3096, column: 8, scope: !14173)
!14188 = !DILocalVariable(name: "mvert", scope: !14173, file: !3, line: 3097, type: !2145)
!14189 = !DILocation(line: 3097, column: 9, scope: !14173)
!14190 = !DILocalVariable(name: "mface", scope: !14173, file: !3, line: 3098, type: !14191)
!14191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14192, size: 64)
!14192 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !1252, line: 46, baseType: !2013)
!14193 = !DILocation(line: 3098, column: 9, scope: !14173)
!14194 = !DILocalVariable(name: "vlr", scope: !14173, file: !3, line: 3099, type: !13020)
!14195 = !DILocation(line: 3099, column: 11, scope: !14173)
!14196 = !DILocalVariable(name: "ver", scope: !14173, file: !3, line: 3100, type: !4179)
!14197 = !DILocation(line: 3100, column: 11, scope: !14173)
!14198 = !DILocalVariable(name: "ma", scope: !14173, file: !3, line: 3101, type: !4157)
!14199 = !DILocation(line: 3101, column: 12, scope: !14173)
!14200 = !DILocalVariable(name: "dm", scope: !14173, file: !3, line: 3102, type: !2263)
!14201 = !DILocation(line: 3102, column: 15, scope: !14173)
!14202 = !DILocalVariable(name: "mask", scope: !14173, file: !3, line: 3103, type: !14203)
!14203 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !14204, line: 48, baseType: !1912)
!14204 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14205 = !DILocation(line: 3103, column: 17, scope: !14173)
!14206 = !DILocalVariable(name: "xn", scope: !14173, file: !3, line: 3104, type: !45)
!14207 = !DILocation(line: 3104, column: 8, scope: !14173)
!14208 = !DILocalVariable(name: "yn", scope: !14173, file: !3, line: 3104, type: !45)
!14209 = !DILocation(line: 3104, column: 12, scope: !14173)
!14210 = !DILocalVariable(name: "zn", scope: !14173, file: !3, line: 3104, type: !45)
!14211 = !DILocation(line: 3104, column: 16, scope: !14173)
!14212 = !DILocalVariable(name: "imat", scope: !14173, file: !3, line: 3104, type: !2674)
!14213 = !DILocation(line: 3104, column: 21, scope: !14173)
!14214 = !DILocalVariable(name: "mat", scope: !14173, file: !3, line: 3104, type: !462)
!14215 = !DILocation(line: 3104, column: 33, scope: !14173)
!14216 = !DILocalVariable(name: "orco", scope: !14173, file: !3, line: 3105, type: !44)
!14217 = !DILocation(line: 3105, column: 9, scope: !14173)
!14218 = !DILocalVariable(name: "loop_nors", scope: !14173, file: !3, line: 3106, type: !14219)
!14219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14220, size: 64)
!14220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !23, size: 192, elements: !4156)
!14221 = !DILocation(line: 3106, column: 10, scope: !14173)
!14222 = !DILocalVariable(name: "need_orco", scope: !14173, file: !3, line: 3107, type: !28)
!14223 = !DILocation(line: 3107, column: 7, scope: !14173)
!14224 = !DILocalVariable(name: "need_stress", scope: !14173, file: !3, line: 3107, type: !28)
!14225 = !DILocation(line: 3107, column: 26, scope: !14173)
!14226 = !DILocalVariable(name: "need_nmap_tangent", scope: !14173, file: !3, line: 3107, type: !28)
!14227 = !DILocation(line: 3107, column: 47, scope: !14173)
!14228 = !DILocalVariable(name: "need_tangent", scope: !14173, file: !3, line: 3107, type: !28)
!14229 = !DILocation(line: 3107, column: 74, scope: !14173)
!14230 = !DILocalVariable(name: "need_origindex", scope: !14173, file: !3, line: 3107, type: !28)
!14231 = !DILocation(line: 3107, column: 96, scope: !14173)
!14232 = !DILocalVariable(name: "a", scope: !14173, file: !3, line: 3108, type: !21)
!14233 = !DILocation(line: 3108, column: 6, scope: !14173)
!14234 = !DILocalVariable(name: "a1", scope: !14173, file: !3, line: 3108, type: !21)
!14235 = !DILocation(line: 3108, column: 9, scope: !14173)
!14236 = !DILocalVariable(name: "ok", scope: !14173, file: !3, line: 3108, type: !21)
!14237 = !DILocation(line: 3108, column: 13, scope: !14173)
!14238 = !DILocalVariable(name: "vertofs", scope: !14173, file: !3, line: 3108, type: !21)
!14239 = !DILocation(line: 3108, column: 17, scope: !14173)
!14240 = !DILocalVariable(name: "end", scope: !14173, file: !3, line: 3109, type: !21)
!14241 = !DILocation(line: 3109, column: 6, scope: !14173)
!14242 = !DILocalVariable(name: "totvert", scope: !14173, file: !3, line: 3109, type: !21)
!14243 = !DILocation(line: 3109, column: 11, scope: !14173)
!14244 = !DILocalVariable(name: "do_autosmooth", scope: !14173, file: !3, line: 3110, type: !28)
!14245 = !DILocation(line: 3110, column: 7, scope: !14173)
!14246 = !DILocalVariable(name: "do_displace", scope: !14173, file: !3, line: 3110, type: !28)
!14247 = !DILocation(line: 3110, column: 30, scope: !14173)
!14248 = !DILocalVariable(name: "use_original_normals", scope: !14173, file: !3, line: 3111, type: !28)
!14249 = !DILocation(line: 3111, column: 7, scope: !14173)
!14250 = !DILocalVariable(name: "recalc_normals", scope: !14173, file: !3, line: 3112, type: !21)
!14251 = !DILocation(line: 3112, column: 6, scope: !14173)
!14252 = !DILocalVariable(name: "negative_scale", scope: !14173, file: !3, line: 3113, type: !21)
!14253 = !DILocation(line: 3113, column: 6, scope: !14173)
!14254 = !DILocation(line: 3118, column: 6, scope: !14173)
!14255 = !DILocation(line: 3118, column: 10, scope: !14173)
!14256 = !DILocation(line: 3118, column: 4, scope: !14173)
!14257 = !DILocation(line: 3120, column: 14, scope: !14173)
!14258 = !DILocation(line: 3120, column: 19, scope: !14173)
!14259 = !DILocation(line: 3120, column: 23, scope: !14173)
!14260 = !DILocation(line: 3120, column: 32, scope: !14173)
!14261 = !DILocation(line: 3120, column: 36, scope: !14173)
!14262 = !DILocation(line: 3120, column: 2, scope: !14173)
!14263 = !DILocation(line: 3121, column: 15, scope: !14173)
!14264 = !DILocation(line: 3121, column: 19, scope: !14173)
!14265 = !DILocation(line: 3121, column: 25, scope: !14173)
!14266 = !DILocation(line: 3121, column: 2, scope: !14173)
!14267 = !DILocation(line: 3122, column: 13, scope: !14173)
!14268 = !DILocation(line: 3122, column: 19, scope: !14173)
!14269 = !DILocation(line: 3122, column: 23, scope: !14173)
!14270 = !DILocation(line: 3122, column: 2, scope: !14173)
!14271 = !DILocation(line: 3123, column: 33, scope: !14173)
!14272 = !DILocation(line: 3123, column: 18, scope: !14173)
!14273 = !DILocation(line: 3123, column: 16, scope: !14173)
!14274 = !DILocation(line: 3125, column: 6, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3125, column: 6)
!14276 = !DILocation(line: 3125, column: 10, scope: !14275)
!14277 = !DILocation(line: 3125, column: 17, scope: !14275)
!14278 = !DILocation(line: 3125, column: 6, scope: !14173)
!14279 = !DILocation(line: 3126, column: 3, scope: !14275)
!14280 = !DILocation(line: 3128, column: 11, scope: !14173)
!14281 = !DILocation(line: 3129, column: 8, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3129, column: 2)
!14283 = !DILocation(line: 3129, column: 7, scope: !14282)
!14284 = !DILocation(line: 3129, column: 12, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14282, file: !3, line: 3129, column: 2)
!14286 = !DILocation(line: 3129, column: 15, scope: !14285)
!14287 = !DILocation(line: 3129, column: 19, scope: !14285)
!14288 = !DILocation(line: 3129, column: 13, scope: !14285)
!14289 = !DILocation(line: 3129, column: 2, scope: !14282)
!14290 = !DILocation(line: 3130, column: 28, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 3129, column: 32)
!14292 = !DILocation(line: 3130, column: 32, scope: !14291)
!14293 = !DILocation(line: 3130, column: 36, scope: !14291)
!14294 = !DILocation(line: 3130, column: 7, scope: !14291)
!14295 = !DILocation(line: 3130, column: 5, scope: !14291)
!14296 = !DILocation(line: 3131, column: 7, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 3131, column: 7)
!14298 = !DILocation(line: 3131, column: 7, scope: !14291)
!14299 = !DILocation(line: 3132, column: 8, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 3132, column: 8)
!14301 = distinct !DILexicalBlock(scope: !14297, file: !3, line: 3131, column: 11)
!14302 = !DILocation(line: 3132, column: 12, scope: !14300)
!14303 = !DILocation(line: 3132, column: 18, scope: !14300)
!14304 = !DILocation(line: 3132, column: 8, scope: !14301)
!14305 = !DILocation(line: 3133, column: 14, scope: !14300)
!14306 = !DILocation(line: 3133, column: 5, scope: !14300)
!14307 = !DILocation(line: 3134, column: 8, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 3134, column: 8)
!14309 = !DILocation(line: 3134, column: 12, scope: !14308)
!14310 = !DILocation(line: 3134, column: 18, scope: !14308)
!14311 = !DILocation(line: 3134, column: 8, scope: !14301)
!14312 = !DILocation(line: 3135, column: 16, scope: !14308)
!14313 = !DILocation(line: 3135, column: 5, scope: !14308)
!14314 = !DILocation(line: 3137, column: 8, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 3137, column: 8)
!14316 = !DILocation(line: 3137, column: 12, scope: !14315)
!14317 = !DILocation(line: 3137, column: 19, scope: !14315)
!14318 = !DILocation(line: 3137, column: 8, scope: !14301)
!14319 = !DILocation(line: 3138, column: 17, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 3137, column: 35)
!14321 = !DILocation(line: 3139, column: 9, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14320, file: !3, line: 3139, column: 9)
!14323 = !DILocation(line: 3139, column: 13, scope: !14322)
!14324 = !DILocation(line: 3139, column: 19, scope: !14322)
!14325 = !DILocation(line: 3139, column: 9, scope: !14320)
!14326 = !DILocation(line: 3140, column: 15, scope: !14322)
!14327 = !DILocation(line: 3140, column: 6, scope: !14322)
!14328 = !DILocation(line: 3141, column: 4, scope: !14320)
!14329 = !DILocation(line: 3142, column: 8, scope: !14330)
!14330 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 3142, column: 8)
!14331 = !DILocation(line: 3142, column: 12, scope: !14330)
!14332 = !DILocation(line: 3142, column: 19, scope: !14330)
!14333 = !DILocation(line: 3142, column: 8, scope: !14301)
!14334 = !DILocation(line: 3143, column: 9, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14336, file: !3, line: 3143, column: 9)
!14336 = distinct !DILexicalBlock(scope: !14330, file: !3, line: 3142, column: 37)
!14337 = !DILocation(line: 3143, column: 13, scope: !14335)
!14338 = !DILocation(line: 3143, column: 19, scope: !14335)
!14339 = !DILocation(line: 3143, column: 9, scope: !14336)
!14340 = !DILocation(line: 3144, column: 15, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 3143, column: 27)
!14342 = !DILocation(line: 3145, column: 18, scope: !14341)
!14343 = !DILocation(line: 3146, column: 5, scope: !14341)
!14344 = !DILocation(line: 3147, column: 22, scope: !14336)
!14345 = !DILocation(line: 3148, column: 4, scope: !14336)
!14346 = !DILocation(line: 3149, column: 3, scope: !14301)
!14347 = !DILocation(line: 3150, column: 2, scope: !14291)
!14348 = !DILocation(line: 3129, column: 28, scope: !14285)
!14349 = !DILocation(line: 3129, column: 2, scope: !14285)
!14350 = distinct !{!14350, !14289, !14351}
!14351 = !DILocation(line: 3150, column: 2, scope: !14282)
!14352 = !DILocation(line: 3152, column: 6, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3152, column: 6)
!14354 = !DILocation(line: 3152, column: 10, scope: !14353)
!14355 = !DILocation(line: 3152, column: 15, scope: !14353)
!14356 = !DILocation(line: 3152, column: 6, scope: !14173)
!14357 = !DILocation(line: 3154, column: 7, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14359, file: !3, line: 3154, column: 7)
!14359 = distinct !DILexicalBlock(scope: !14353, file: !3, line: 3152, column: 33)
!14360 = !DILocation(line: 3154, column: 11, scope: !14358)
!14361 = !DILocation(line: 3154, column: 17, scope: !14358)
!14362 = !DILocation(line: 3154, column: 7, scope: !14359)
!14363 = !DILocation(line: 3155, column: 13, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !14358, file: !3, line: 3154, column: 25)
!14365 = !DILocation(line: 3156, column: 16, scope: !14364)
!14366 = !DILocation(line: 3157, column: 3, scope: !14364)
!14367 = !DILocation(line: 3158, column: 20, scope: !14359)
!14368 = !DILocation(line: 3159, column: 2, scope: !14359)
!14369 = !DILocation(line: 3165, column: 34, scope: !14173)
!14370 = !DILocation(line: 3165, column: 38, scope: !14173)
!14371 = !DILocation(line: 3165, column: 16, scope: !14173)
!14372 = !DILocation(line: 3165, column: 14, scope: !14173)
!14373 = !DILocation(line: 3166, column: 20, scope: !14173)
!14374 = !DILocation(line: 3166, column: 24, scope: !14173)
!14375 = !DILocation(line: 3166, column: 29, scope: !14173)
!14376 = !DILocation(line: 3166, column: 46, scope: !14173)
!14377 = !DILocation(line: 3166, column: 52, scope: !14173)
!14378 = !DILocation(line: 3166, column: 56, scope: !14173)
!14379 = !DILocation(line: 3166, column: 55, scope: !14173)
!14380 = !DILocation(line: 0, scope: !14173)
!14381 = !DILocation(line: 3166, column: 18, scope: !14173)
!14382 = !DILocation(line: 3166, column: 16, scope: !14173)
!14383 = !DILocation(line: 3167, column: 6, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3167, column: 6)
!14385 = !DILocation(line: 3167, column: 20, scope: !14384)
!14386 = !DILocation(line: 3167, column: 23, scope: !14384)
!14387 = !DILocation(line: 3167, column: 6, scope: !14173)
!14388 = !DILocation(line: 3168, column: 14, scope: !14384)
!14389 = !DILocation(line: 3168, column: 3, scope: !14384)
!14390 = !DILocation(line: 3171, column: 20, scope: !14173)
!14391 = !DILocation(line: 3171, column: 34, scope: !14173)
!14392 = !DILocation(line: 3171, column: 39, scope: !14173)
!14393 = !DILocation(line: 3171, column: 43, scope: !14173)
!14394 = !DILocation(line: 3171, column: 48, scope: !14173)
!14395 = !DILocation(line: 3171, column: 60, scope: !14173)
!14396 = !DILocation(line: 3171, column: 64, scope: !14173)
!14397 = !DILocation(line: 3171, column: 68, scope: !14173)
!14398 = !DILocation(line: 3171, column: 70, scope: !14173)
!14399 = !DILocation(line: 3171, column: 80, scope: !14173)
!14400 = !DILocation(line: 3171, column: 19, scope: !14173)
!14401 = !DILocation(line: 3171, column: 17, scope: !14173)
!14402 = !DILocation(line: 3173, column: 8, scope: !14173)
!14403 = !DILocation(line: 3173, column: 24, scope: !14173)
!14404 = !DILocation(line: 3173, column: 39, scope: !14173)
!14405 = !DILocation(line: 3173, column: 6, scope: !14173)
!14406 = !DILocation(line: 3174, column: 7, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3174, column: 6)
!14408 = !DILocation(line: 3174, column: 6, scope: !14173)
!14409 = !DILocation(line: 3175, column: 7, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14407, file: !3, line: 3175, column: 7)
!14411 = !DILocation(line: 3175, column: 7, scope: !14407)
!14412 = !DILocation(line: 3176, column: 9, scope: !14410)
!14413 = !DILocation(line: 3176, column: 4, scope: !14410)
!14414 = !DILocation(line: 3182, column: 6, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3182, column: 6)
!14416 = !DILocation(line: 3182, column: 10, scope: !14415)
!14417 = !DILocation(line: 3182, column: 12, scope: !14415)
!14418 = !DILocation(line: 3182, column: 20, scope: !14415)
!14419 = !DILocation(line: 3182, column: 6, scope: !14173)
!14420 = !DILocation(line: 3183, column: 32, scope: !14415)
!14421 = !DILocation(line: 3183, column: 36, scope: !14415)
!14422 = !DILocation(line: 3183, column: 43, scope: !14415)
!14423 = !DILocation(line: 3183, column: 47, scope: !14415)
!14424 = !DILocation(line: 3183, column: 7, scope: !14415)
!14425 = !DILocation(line: 3183, column: 5, scope: !14415)
!14426 = !DILocation(line: 3183, column: 3, scope: !14415)
!14427 = !DILocation(line: 3185, column: 34, scope: !14415)
!14428 = !DILocation(line: 3185, column: 38, scope: !14415)
!14429 = !DILocation(line: 3185, column: 45, scope: !14415)
!14430 = !DILocation(line: 3185, column: 49, scope: !14415)
!14431 = !DILocation(line: 3185, column: 7, scope: !14415)
!14432 = !DILocation(line: 3185, column: 5, scope: !14415)
!14433 = !DILocation(line: 3186, column: 6, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3186, column: 6)
!14435 = !DILocation(line: 3186, column: 8, scope: !14434)
!14436 = !DILocation(line: 3186, column: 6, scope: !14173)
!14437 = !DILocation(line: 3186, column: 16, scope: !14434)
!14438 = !DILocation(line: 3188, column: 6, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3188, column: 6)
!14440 = !DILocation(line: 3188, column: 11, scope: !14439)
!14441 = !DILocation(line: 3188, column: 6, scope: !14173)
!14442 = !DILocation(line: 3189, column: 26, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 3188, column: 27)
!14444 = !DILocation(line: 3189, column: 30, scope: !14443)
!14445 = !DILocation(line: 3189, column: 10, scope: !14443)
!14446 = !DILocation(line: 3189, column: 8, scope: !14443)
!14447 = !DILocation(line: 3190, column: 8, scope: !14448)
!14448 = distinct !DILexicalBlock(scope: !14443, file: !3, line: 3190, column: 7)
!14449 = !DILocation(line: 3190, column: 7, scope: !14443)
!14450 = !DILocation(line: 3191, column: 10, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14448, file: !3, line: 3190, column: 14)
!14452 = !DILocation(line: 3191, column: 14, scope: !14451)
!14453 = !DILocation(line: 3191, column: 31, scope: !14451)
!14454 = !DILocation(line: 3191, column: 8, scope: !14451)
!14455 = !DILocation(line: 3192, column: 8, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14451, file: !3, line: 3192, column: 8)
!14457 = !DILocation(line: 3192, column: 8, scope: !14451)
!14458 = !DILocation(line: 3193, column: 11, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14456, file: !3, line: 3192, column: 14)
!14460 = !DILocation(line: 3193, column: 25, scope: !14459)
!14461 = !DILocation(line: 3193, column: 9, scope: !14459)
!14462 = !DILocation(line: 3194, column: 21, scope: !14459)
!14463 = !DILocation(line: 3194, column: 25, scope: !14459)
!14464 = !DILocation(line: 3194, column: 29, scope: !14459)
!14465 = !DILocation(line: 3194, column: 5, scope: !14459)
!14466 = !DILocation(line: 3195, column: 4, scope: !14459)
!14467 = !DILocation(line: 3196, column: 3, scope: !14451)
!14468 = !DILocation(line: 3197, column: 2, scope: !14443)
!14469 = !DILocation(line: 3199, column: 9, scope: !14173)
!14470 = !DILocation(line: 3199, column: 13, scope: !14173)
!14471 = !DILocation(line: 3199, column: 26, scope: !14173)
!14472 = !DILocation(line: 3199, column: 7, scope: !14173)
!14473 = !DILocation(line: 3200, column: 11, scope: !14173)
!14474 = !DILocation(line: 3200, column: 15, scope: !14173)
!14475 = !DILocation(line: 3200, column: 27, scope: !14173)
!14476 = !DILocation(line: 3200, column: 9, scope: !14173)
!14477 = !DILocation(line: 3203, column: 6, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3203, column: 6)
!14479 = !DILocation(line: 3203, column: 20, scope: !14478)
!14480 = !DILocation(line: 3203, column: 23, scope: !14478)
!14481 = !DILocation(line: 3203, column: 27, scope: !14478)
!14482 = !DILocation(line: 3203, column: 36, scope: !14478)
!14483 = !DILocation(line: 3203, column: 34, scope: !14478)
!14484 = !DILocation(line: 3203, column: 44, scope: !14478)
!14485 = !DILocation(line: 3203, column: 47, scope: !14478)
!14486 = !DILocation(line: 3203, column: 51, scope: !14478)
!14487 = !DILocation(line: 3203, column: 60, scope: !14478)
!14488 = !DILocation(line: 3203, column: 64, scope: !14478)
!14489 = !DILocation(line: 3203, column: 80, scope: !14478)
!14490 = !DILocation(line: 3203, column: 58, scope: !14478)
!14491 = !DILocation(line: 3203, column: 6, scope: !14173)
!14492 = !DILocation(line: 3204, column: 23, scope: !14478)
!14493 = !DILocation(line: 3204, column: 3, scope: !14478)
!14494 = !DILocation(line: 3206, column: 27, scope: !14173)
!14495 = !DILocation(line: 3206, column: 31, scope: !14173)
!14496 = !DILocation(line: 3206, column: 6, scope: !14173)
!14497 = !DILocation(line: 3206, column: 4, scope: !14173)
!14498 = !DILocation(line: 3209, column: 6, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3209, column: 6)
!14500 = !DILocation(line: 3209, column: 10, scope: !14499)
!14501 = !DILocation(line: 3209, column: 24, scope: !14499)
!14502 = !DILocation(line: 3209, column: 6, scope: !14173)
!14503 = !DILocation(line: 3210, column: 21, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14499, file: !3, line: 3209, column: 41)
!14505 = !DILocation(line: 3210, column: 25, scope: !14504)
!14506 = !DILocation(line: 3210, column: 30, scope: !14504)
!14507 = !DILocation(line: 3210, column: 34, scope: !14504)
!14508 = !DILocation(line: 3210, column: 43, scope: !14504)
!14509 = !DILocation(line: 3210, column: 50, scope: !14504)
!14510 = !DILocation(line: 3210, column: 54, scope: !14504)
!14511 = !DILocation(line: 3210, column: 3, scope: !14504)
!14512 = !DILocation(line: 3211, column: 2, scope: !14504)
!14513 = !DILocalVariable(name: "index_vert_orig", scope: !14514, file: !3, line: 3213, type: !11085)
!14514 = distinct !DILexicalBlock(scope: !14499, file: !3, line: 3212, column: 7)
!14515 = !DILocation(line: 3213, column: 14, scope: !14514)
!14516 = !DILocalVariable(name: "index_mf_to_mpoly", scope: !14514, file: !3, line: 3214, type: !11085)
!14517 = !DILocation(line: 3214, column: 14, scope: !14514)
!14518 = !DILocalVariable(name: "index_mp_to_orig", scope: !14514, file: !3, line: 3215, type: !11085)
!14519 = !DILocation(line: 3215, column: 14, scope: !14514)
!14520 = !DILocation(line: 3216, column: 7, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 3216, column: 7)
!14522 = !DILocation(line: 3216, column: 7, scope: !14514)
!14523 = !DILocation(line: 3217, column: 22, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14521, file: !3, line: 3216, column: 23)
!14525 = !DILocation(line: 3217, column: 26, scope: !14524)
!14526 = !DILocation(line: 3217, column: 43, scope: !14524)
!14527 = !DILocation(line: 3217, column: 20, scope: !14524)
!14528 = !DILocation(line: 3223, column: 3, scope: !14524)
!14529 = !DILocation(line: 3225, column: 9, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 3225, column: 3)
!14531 = !DILocation(line: 3225, column: 8, scope: !14530)
!14532 = !DILocation(line: 3225, column: 13, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14530, file: !3, line: 3225, column: 3)
!14534 = !DILocation(line: 3225, column: 15, scope: !14533)
!14535 = !DILocation(line: 3225, column: 14, scope: !14533)
!14536 = !DILocation(line: 3225, column: 3, scope: !14530)
!14537 = !DILocation(line: 3226, column: 26, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14533, file: !3, line: 3225, column: 38)
!14539 = !DILocation(line: 3226, column: 31, scope: !14538)
!14540 = !DILocation(line: 3226, column: 36, scope: !14538)
!14541 = !DILocation(line: 3226, column: 43, scope: !14538)
!14542 = !DILocation(line: 3226, column: 9, scope: !14538)
!14543 = !DILocation(line: 3226, column: 7, scope: !14538)
!14544 = !DILocation(line: 3227, column: 15, scope: !14538)
!14545 = !DILocation(line: 3227, column: 20, scope: !14538)
!14546 = !DILocation(line: 3227, column: 24, scope: !14538)
!14547 = !DILocation(line: 3227, column: 31, scope: !14538)
!14548 = !DILocation(line: 3227, column: 4, scope: !14538)
!14549 = !DILocation(line: 3228, column: 8, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14538, file: !3, line: 3228, column: 8)
!14551 = !DILocation(line: 3228, column: 22, scope: !14550)
!14552 = !DILocation(line: 3228, column: 8, scope: !14538)
!14553 = !DILocation(line: 3229, column: 30, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14550, file: !3, line: 3228, column: 32)
!14555 = !DILocation(line: 3229, column: 35, scope: !14554)
!14556 = !DILocation(line: 3229, column: 38, scope: !14554)
!14557 = !DILocation(line: 3229, column: 45, scope: !14554)
!14558 = !DILocation(line: 3229, column: 5, scope: !14554)
!14559 = !DILocation(line: 3230, column: 15, scope: !14554)
!14560 = !DILocation(line: 3230, column: 20, scope: !14554)
!14561 = !DILocation(line: 3230, column: 25, scope: !14554)
!14562 = !DILocation(line: 3230, column: 5, scope: !14554)
!14563 = !DILocation(line: 3231, column: 26, scope: !14554)
!14564 = !DILocation(line: 3231, column: 32, scope: !14554)
!14565 = !DILocation(line: 3231, column: 37, scope: !14554)
!14566 = !DILocation(line: 3231, column: 5, scope: !14554)
!14567 = !DILocation(line: 3232, column: 18, scope: !14554)
!14568 = !DILocation(line: 3232, column: 23, scope: !14554)
!14569 = !DILocation(line: 3232, column: 5, scope: !14554)
!14570 = !DILocation(line: 3233, column: 15, scope: !14554)
!14571 = !DILocation(line: 3233, column: 20, scope: !14554)
!14572 = !DILocation(line: 3233, column: 5, scope: !14554)
!14573 = !DILocation(line: 3234, column: 4, scope: !14554)
!14574 = !DILocation(line: 3236, column: 8, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14538, file: !3, line: 3236, column: 8)
!14576 = !DILocation(line: 3236, column: 8, scope: !14538)
!14577 = !DILocation(line: 3237, column: 16, scope: !14578)
!14578 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 3236, column: 14)
!14579 = !DILocation(line: 3237, column: 5, scope: !14578)
!14580 = !DILocation(line: 3237, column: 10, scope: !14578)
!14581 = !DILocation(line: 3237, column: 14, scope: !14578)
!14582 = !DILocation(line: 3238, column: 9, scope: !14578)
!14583 = !DILocation(line: 3239, column: 4, scope: !14578)
!14584 = !DILocation(line: 3241, column: 8, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14538, file: !3, line: 3241, column: 8)
!14586 = !DILocation(line: 3241, column: 8, scope: !14538)
!14587 = !DILocalVariable(name: "origindex", scope: !14588, file: !3, line: 3242, type: !42)
!14588 = distinct !DILexicalBlock(scope: !14585, file: !3, line: 3241, column: 24)
!14589 = !DILocation(line: 3242, column: 10, scope: !14588)
!14590 = !DILocation(line: 3243, column: 42, scope: !14588)
!14591 = !DILocation(line: 3243, column: 47, scope: !14588)
!14592 = !DILocation(line: 3243, column: 17, scope: !14588)
!14593 = !DILocation(line: 3243, column: 15, scope: !14588)
!14594 = !DILocation(line: 3247, column: 9, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14588, file: !3, line: 3247, column: 9)
!14596 = !DILocation(line: 3247, column: 9, scope: !14588)
!14597 = !DILocation(line: 3248, column: 19, scope: !14595)
!14598 = !DILocation(line: 3248, column: 35, scope: !14595)
!14599 = !DILocation(line: 3248, column: 7, scope: !14595)
!14600 = !DILocation(line: 3248, column: 17, scope: !14595)
!14601 = !DILocation(line: 3248, column: 6, scope: !14595)
!14602 = !DILocation(line: 3250, column: 19, scope: !14595)
!14603 = !DILocation(line: 3250, column: 7, scope: !14595)
!14604 = !DILocation(line: 3250, column: 17, scope: !14595)
!14605 = !DILocation(line: 3251, column: 4, scope: !14588)
!14606 = !DILocation(line: 3252, column: 3, scope: !14538)
!14607 = !DILocation(line: 3225, column: 25, scope: !14533)
!14608 = !DILocation(line: 3225, column: 34, scope: !14533)
!14609 = !DILocation(line: 3225, column: 3, scope: !14533)
!14610 = distinct !{!14610, !14536, !14611}
!14611 = !DILocation(line: 3252, column: 3, scope: !14530)
!14612 = !DILocation(line: 3254, column: 8, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14514, file: !3, line: 3254, column: 7)
!14614 = !DILocation(line: 3254, column: 7, scope: !14514)
!14615 = !DILocalVariable(name: "lnp", scope: !14616, file: !3, line: 3255, type: !14219)
!14616 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 3254, column: 20)
!14617 = !DILocation(line: 3255, column: 12, scope: !14616)
!14618 = !DILocation(line: 3264, column: 28, scope: !14616)
!14619 = !DILocation(line: 3264, column: 34, scope: !14616)
!14620 = !DILocation(line: 3264, column: 38, scope: !14616)
!14621 = !DILocation(line: 3264, column: 4, scope: !14616)
!14622 = !DILocation(line: 3267, column: 8, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 3267, column: 8)
!14624 = !DILocation(line: 3267, column: 25, scope: !14623)
!14625 = !DILocation(line: 3267, column: 29, scope: !14623)
!14626 = !DILocation(line: 3267, column: 60, scope: !14623)
!14627 = !DILocation(line: 3267, column: 64, scope: !14623)
!14628 = !DILocation(line: 3267, column: 32, scope: !14623)
!14629 = !DILocation(line: 3267, column: 86, scope: !14623)
!14630 = !DILocation(line: 3267, column: 8, scope: !14616)
!14631 = !DILocation(line: 3268, column: 26, scope: !14623)
!14632 = !DILocation(line: 3268, column: 5, scope: !14623)
!14633 = !DILocation(line: 3273, column: 13, scope: !14616)
!14634 = !DILocation(line: 3273, column: 18, scope: !14616)
!14635 = !DILocation(line: 3273, column: 28, scope: !14616)
!14636 = !DILocation(line: 3273, column: 26, scope: !14616)
!14637 = !DILocation(line: 3273, column: 11, scope: !14616)
!14638 = !DILocation(line: 3274, column: 11, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 3274, column: 4)
!14640 = !DILocation(line: 3274, column: 9, scope: !14639)
!14641 = !DILocation(line: 3274, column: 16, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14639, file: !3, line: 3274, column: 4)
!14643 = !DILocation(line: 3274, column: 19, scope: !14642)
!14644 = !DILocation(line: 3274, column: 23, scope: !14642)
!14645 = !DILocation(line: 3274, column: 18, scope: !14642)
!14646 = !DILocation(line: 3274, column: 30, scope: !14642)
!14647 = !DILocation(line: 3274, column: 34, scope: !14642)
!14648 = !DILocation(line: 3274, column: 36, scope: !14642)
!14649 = !DILocation(line: 3274, column: 40, scope: !14642)
!14650 = !DILocation(line: 3274, column: 43, scope: !14642)
!14651 = !DILocation(line: 3274, column: 47, scope: !14642)
!14652 = !DILocation(line: 3274, column: 53, scope: !14642)
!14653 = !DILocation(line: 0, scope: !14642)
!14654 = !DILocation(line: 3274, column: 4, scope: !14639)
!14655 = !DILocation(line: 3276, column: 30, scope: !14656)
!14656 = distinct !DILexicalBlock(scope: !14642, file: !3, line: 3274, column: 66)
!14657 = !DILocation(line: 3276, column: 34, scope: !14656)
!14658 = !DILocation(line: 3276, column: 38, scope: !14656)
!14659 = !DILocation(line: 3276, column: 40, scope: !14656)
!14660 = !DILocation(line: 3276, column: 9, scope: !14656)
!14661 = !DILocation(line: 3276, column: 7, scope: !14656)
!14662 = !DILocation(line: 3279, column: 8, scope: !14656)
!14663 = !DILocation(line: 3280, column: 10, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 3280, column: 9)
!14665 = !DILocation(line: 3280, column: 14, scope: !14664)
!14666 = !DILocation(line: 3280, column: 20, scope: !14664)
!14667 = !DILocation(line: 3280, column: 29, scope: !14664)
!14668 = !DILocation(line: 3281, column: 10, scope: !14664)
!14669 = !DILocation(line: 3281, column: 14, scope: !14664)
!14670 = !DILocation(line: 3281, column: 22, scope: !14664)
!14671 = !DILocation(line: 3281, column: 31, scope: !14664)
!14672 = !DILocation(line: 3282, column: 10, scope: !14664)
!14673 = !DILocation(line: 3282, column: 14, scope: !14664)
!14674 = !DILocation(line: 3282, column: 21, scope: !14664)
!14675 = !DILocation(line: 3282, column: 30, scope: !14664)
!14676 = !DILocation(line: 3283, column: 10, scope: !14664)
!14677 = !DILocation(line: 3283, column: 14, scope: !14664)
!14678 = !DILocation(line: 3283, column: 19, scope: !14664)
!14679 = !DILocation(line: 3283, column: 32, scope: !14664)
!14680 = !DILocation(line: 3284, column: 10, scope: !14664)
!14681 = !DILocation(line: 3284, column: 14, scope: !14664)
!14682 = !DILocation(line: 3284, column: 19, scope: !14664)
!14683 = !DILocation(line: 3284, column: 52, scope: !14664)
!14684 = !DILocation(line: 3280, column: 9, scope: !14656)
!14685 = !DILocation(line: 3286, column: 9, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 3285, column: 5)
!14687 = !DILocation(line: 3288, column: 12, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 3288, column: 6)
!14689 = !DILocation(line: 3288, column: 11, scope: !14688)
!14690 = !DILocation(line: 3288, column: 16, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14688, file: !3, line: 3288, column: 6)
!14692 = !DILocation(line: 3288, column: 17, scope: !14691)
!14693 = !DILocation(line: 3288, column: 6, scope: !14688)
!14694 = !DILocation(line: 3289, column: 11, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14696, file: !3, line: 3289, column: 11)
!14696 = distinct !DILexicalBlock(scope: !14691, file: !3, line: 3288, column: 33)
!14697 = !DILocation(line: 3289, column: 15, scope: !14695)
!14698 = !DILocation(line: 3289, column: 20, scope: !14695)
!14699 = !DILocation(line: 3289, column: 23, scope: !14695)
!14700 = !DILocation(line: 3289, column: 26, scope: !14695)
!14701 = !DILocation(line: 3289, column: 30, scope: !14695)
!14702 = !DILocation(line: 3289, column: 35, scope: !14695)
!14703 = !DILocation(line: 3289, column: 39, scope: !14695)
!14704 = !DILocation(line: 3289, column: 11, scope: !14696)
!14705 = !DILocation(line: 3290, column: 12, scope: !14706)
!14706 = distinct !DILexicalBlock(scope: !14707, file: !3, line: 3290, column: 12)
!14707 = distinct !DILexicalBlock(scope: !14695, file: !3, line: 3289, column: 44)
!14708 = !DILocation(line: 3290, column: 16, scope: !14706)
!14709 = !DILocation(line: 3290, column: 21, scope: !14706)
!14710 = !DILocation(line: 3290, column: 25, scope: !14706)
!14711 = !DILocation(line: 3290, column: 31, scope: !14706)
!14712 = !DILocation(line: 3290, column: 12, scope: !14707)
!14713 = !DILocation(line: 3290, column: 46, scope: !14706)
!14714 = !DILocation(line: 3290, column: 44, scope: !14706)
!14715 = !DILocation(line: 3291, column: 7, scope: !14707)
!14716 = !DILocation(line: 3292, column: 6, scope: !14696)
!14717 = !DILocation(line: 3288, column: 29, scope: !14691)
!14718 = !DILocation(line: 3288, column: 6, scope: !14691)
!14719 = distinct !{!14719, !14693, !14720}
!14720 = !DILocation(line: 3292, column: 6, scope: !14688)
!14721 = !DILocation(line: 3293, column: 5, scope: !14686)
!14722 = !DILocation(line: 3296, column: 9, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 3296, column: 9)
!14724 = !DILocation(line: 3296, column: 13, scope: !14723)
!14725 = !DILocation(line: 3296, column: 27, scope: !14723)
!14726 = !DILocation(line: 3296, column: 9, scope: !14656)
!14727 = !DILocation(line: 3297, column: 11, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 3296, column: 44)
!14729 = !DILocation(line: 3297, column: 15, scope: !14728)
!14730 = !DILocation(line: 3297, column: 27, scope: !14728)
!14731 = !DILocation(line: 3297, column: 9, scope: !14728)
!14732 = !DILocation(line: 3298, column: 10, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14728, file: !3, line: 3298, column: 10)
!14734 = !DILocation(line: 3298, column: 10, scope: !14728)
!14735 = !DILocation(line: 3298, column: 17, scope: !14733)
!14736 = !DILocation(line: 3298, column: 15, scope: !14733)
!14737 = !DILocation(line: 3299, column: 5, scope: !14728)
!14738 = !DILocation(line: 3301, column: 9, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 3301, column: 9)
!14740 = !DILocation(line: 3301, column: 9, scope: !14656)
!14741 = !DILocation(line: 3302, column: 11, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14739, file: !3, line: 3301, column: 13)
!14743 = !DILocation(line: 3302, column: 15, scope: !14742)
!14744 = !DILocation(line: 3302, column: 31, scope: !14742)
!14745 = !DILocation(line: 3302, column: 9, scope: !14742)
!14746 = !DILocation(line: 3303, column: 13, scope: !14742)
!14747 = !DILocation(line: 3303, column: 17, scope: !14742)
!14748 = !DILocation(line: 3303, column: 34, scope: !14742)
!14749 = !DILocation(line: 3303, column: 11, scope: !14742)
!14750 = !DILocation(line: 3304, column: 11, scope: !14751)
!14751 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 3304, column: 10)
!14752 = !DILocation(line: 3304, column: 21, scope: !14751)
!14753 = !DILocation(line: 3304, column: 24, scope: !14751)
!14754 = !DILocation(line: 3304, column: 38, scope: !14751)
!14755 = !DILocation(line: 3305, column: 11, scope: !14751)
!14756 = !DILocation(line: 3305, column: 15, scope: !14751)
!14757 = !DILocation(line: 3305, column: 36, scope: !14751)
!14758 = !DILocation(line: 3305, column: 59, scope: !14751)
!14759 = !DILocation(line: 3304, column: 10, scope: !14742)
!14760 = !DILocation(line: 3307, column: 25, scope: !14761)
!14761 = distinct !DILexicalBlock(scope: !14751, file: !3, line: 3306, column: 6)
!14762 = !DILocation(line: 3307, column: 58, scope: !14761)
!14763 = !DILocation(line: 3307, column: 56, scope: !14761)
!14764 = !DILocation(line: 3307, column: 23, scope: !14761)
!14765 = !DILocation(line: 3307, column: 11, scope: !14761)
!14766 = !DILocation(line: 3308, column: 6, scope: !14761)
!14767 = !DILocation(line: 3315, column: 12, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14742, file: !3, line: 3315, column: 6)
!14769 = !DILocation(line: 3315, column: 11, scope: !14768)
!14770 = !DILocation(line: 3315, column: 16, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14768, file: !3, line: 3315, column: 6)
!14772 = !DILocation(line: 3315, column: 18, scope: !14771)
!14773 = !DILocation(line: 3315, column: 17, scope: !14771)
!14774 = !DILocation(line: 3315, column: 6, scope: !14768)
!14775 = !DILocalVariable(name: "v1", scope: !14776, file: !3, line: 3316, type: !21)
!14776 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3315, column: 37)
!14777 = !DILocation(line: 3316, column: 11, scope: !14776)
!14778 = !DILocalVariable(name: "v2", scope: !14776, file: !3, line: 3316, type: !21)
!14779 = !DILocation(line: 3316, column: 15, scope: !14776)
!14780 = !DILocalVariable(name: "v3", scope: !14776, file: !3, line: 3316, type: !21)
!14781 = !DILocation(line: 3316, column: 19, scope: !14776)
!14782 = !DILocalVariable(name: "v4", scope: !14776, file: !3, line: 3316, type: !21)
!14783 = !DILocation(line: 3316, column: 23, scope: !14776)
!14784 = !DILocalVariable(name: "flag", scope: !14776, file: !3, line: 3316, type: !21)
!14785 = !DILocation(line: 3316, column: 27, scope: !14776)
!14786 = !DILocation(line: 3318, column: 12, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14776, file: !3, line: 3318, column: 12)
!14788 = !DILocation(line: 3318, column: 19, scope: !14787)
!14789 = !DILocation(line: 3318, column: 27, scope: !14787)
!14790 = !DILocation(line: 3318, column: 25, scope: !14787)
!14791 = !DILocation(line: 3318, column: 12, scope: !14776)
!14792 = !DILocalVariable(name: "len", scope: !14793, file: !3, line: 3319, type: !45)
!14793 = distinct !DILexicalBlock(scope: !14787, file: !3, line: 3318, column: 32)
!14794 = !DILocation(line: 3319, column: 14, scope: !14793)
!14795 = !DILocalVariable(name: "reverse_verts", scope: !14793, file: !3, line: 3320, type: !28)
!14796 = !DILocation(line: 3320, column: 13, scope: !14793)
!14797 = !DILocation(line: 3320, column: 30, scope: !14793)
!14798 = !DILocation(line: 3320, column: 45, scope: !14793)
!14799 = !DILocation(line: 3320, column: 50, scope: !14793)
!14800 = !DILocation(line: 3320, column: 53, scope: !14793)
!14801 = !DILocation(line: 3320, column: 67, scope: !14793)
!14802 = !DILocation(line: 0, scope: !14793)
!14803 = !DILocation(line: 3320, column: 29, scope: !14793)
!14804 = !DILocalVariable(name: "rev_tab", scope: !14793, file: !3, line: 3321, type: !2384)
!14805 = !DILocation(line: 3321, column: 12, scope: !14793)
!14806 = !DILocation(line: 3321, column: 24, scope: !14793)
!14807 = !DILocation(line: 3321, column: 25, scope: !14793)
!14808 = !DILocation(line: 3321, column: 38, scope: !14793)
!14809 = !DILocation(line: 3321, column: 54, scope: !14793)
!14810 = !DILocation(line: 3321, column: 67, scope: !14793)
!14811 = !DILocation(line: 3322, column: 12, scope: !14793)
!14812 = !DILocation(line: 3322, column: 25, scope: !14793)
!14813 = !DILocation(line: 3322, column: 31, scope: !14793)
!14814 = !DILocation(line: 3322, column: 38, scope: !14793)
!14815 = !DILocation(line: 3322, column: 43, scope: !14793)
!14816 = !DILocation(line: 3322, column: 50, scope: !14793)
!14817 = !DILocation(line: 3322, column: 10, scope: !14793)
!14818 = !DILocation(line: 3323, column: 12, scope: !14793)
!14819 = !DILocation(line: 3323, column: 19, scope: !14793)
!14820 = !DILocation(line: 3323, column: 10, scope: !14793)
!14821 = !DILocation(line: 3324, column: 12, scope: !14793)
!14822 = !DILocation(line: 3324, column: 25, scope: !14793)
!14823 = !DILocation(line: 3324, column: 31, scope: !14793)
!14824 = !DILocation(line: 3324, column: 38, scope: !14793)
!14825 = !DILocation(line: 3324, column: 43, scope: !14793)
!14826 = !DILocation(line: 3324, column: 50, scope: !14793)
!14827 = !DILocation(line: 3324, column: 10, scope: !14793)
!14828 = !DILocation(line: 3325, column: 12, scope: !14793)
!14829 = !DILocation(line: 3325, column: 19, scope: !14793)
!14830 = !DILocation(line: 3325, column: 10, scope: !14793)
!14831 = !DILocation(line: 3326, column: 14, scope: !14793)
!14832 = !DILocation(line: 3326, column: 21, scope: !14793)
!14833 = !DILocation(line: 3326, column: 26, scope: !14793)
!14834 = !DILocation(line: 3326, column: 12, scope: !14793)
!14835 = !DILocation(line: 3328, column: 30, scope: !14793)
!14836 = !DILocation(line: 3328, column: 35, scope: !14793)
!14837 = !DILocation(line: 3328, column: 40, scope: !14793)
!14838 = !DILocation(line: 3328, column: 47, scope: !14793)
!14839 = !DILocation(line: 3328, column: 13, scope: !14793)
!14840 = !DILocation(line: 3328, column: 11, scope: !14793)
!14841 = !DILocation(line: 3329, column: 34, scope: !14793)
!14842 = !DILocation(line: 3329, column: 39, scope: !14793)
!14843 = !DILocation(line: 3329, column: 47, scope: !14793)
!14844 = !DILocation(line: 3329, column: 46, scope: !14793)
!14845 = !DILocation(line: 3329, column: 17, scope: !14793)
!14846 = !DILocation(line: 3329, column: 8, scope: !14793)
!14847 = !DILocation(line: 3329, column: 13, scope: !14793)
!14848 = !DILocation(line: 3329, column: 15, scope: !14793)
!14849 = !DILocation(line: 3330, column: 34, scope: !14793)
!14850 = !DILocation(line: 3330, column: 39, scope: !14793)
!14851 = !DILocation(line: 3330, column: 47, scope: !14793)
!14852 = !DILocation(line: 3330, column: 46, scope: !14793)
!14853 = !DILocation(line: 3330, column: 17, scope: !14793)
!14854 = !DILocation(line: 3330, column: 8, scope: !14793)
!14855 = !DILocation(line: 3330, column: 13, scope: !14793)
!14856 = !DILocation(line: 3330, column: 15, scope: !14793)
!14857 = !DILocation(line: 3331, column: 34, scope: !14793)
!14858 = !DILocation(line: 3331, column: 39, scope: !14793)
!14859 = !DILocation(line: 3331, column: 47, scope: !14793)
!14860 = !DILocation(line: 3331, column: 46, scope: !14793)
!14861 = !DILocation(line: 3331, column: 17, scope: !14793)
!14862 = !DILocation(line: 3331, column: 8, scope: !14793)
!14863 = !DILocation(line: 3331, column: 13, scope: !14793)
!14864 = !DILocation(line: 3331, column: 15, scope: !14793)
!14865 = !DILocation(line: 3332, column: 12, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 3332, column: 12)
!14867 = !DILocation(line: 3332, column: 12, scope: !14793)
!14868 = !DILocation(line: 3332, column: 43, scope: !14866)
!14869 = !DILocation(line: 3332, column: 48, scope: !14866)
!14870 = !DILocation(line: 3332, column: 56, scope: !14866)
!14871 = !DILocation(line: 3332, column: 55, scope: !14866)
!14872 = !DILocation(line: 3332, column: 26, scope: !14866)
!14873 = !DILocation(line: 3332, column: 16, scope: !14866)
!14874 = !DILocation(line: 3332, column: 21, scope: !14866)
!14875 = !DILocation(line: 3332, column: 24, scope: !14866)
!14876 = !DILocation(line: 3333, column: 13, scope: !14866)
!14877 = !DILocation(line: 3333, column: 18, scope: !14866)
!14878 = !DILocation(line: 3333, column: 21, scope: !14866)
!14879 = !DILocation(line: 3361, column: 12, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 3361, column: 12)
!14881 = !DILocation(line: 3361, column: 12, scope: !14793)
!14882 = !DILocalVariable(name: "mf", scope: !14883, file: !3, line: 3362, type: !14191)
!14883 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 3361, column: 34)
!14884 = !DILocation(line: 3362, column: 16, scope: !14883)
!14885 = !DILocation(line: 3362, column: 20, scope: !14883)
!14886 = !DILocation(line: 3362, column: 24, scope: !14883)
!14887 = !DILocation(line: 3362, column: 30, scope: !14883)
!14888 = !DILocation(line: 3362, column: 29, scope: !14883)
!14889 = !DILocalVariable(name: "mv", scope: !14883, file: !3, line: 3363, type: !2145)
!14890 = !DILocation(line: 3363, column: 16, scope: !14883)
!14891 = !DILocation(line: 3363, column: 20, scope: !14883)
!14892 = !DILocation(line: 3363, column: 24, scope: !14883)
!14893 = !DILocation(line: 3365, column: 13, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14883, file: !3, line: 3365, column: 13)
!14895 = !DILocation(line: 3365, column: 18, scope: !14894)
!14896 = !DILocation(line: 3365, column: 13, scope: !14883)
!14897 = !DILocation(line: 3366, column: 30, scope: !14894)
!14898 = !DILocation(line: 3366, column: 35, scope: !14894)
!14899 = !DILocation(line: 3366, column: 38, scope: !14894)
!14900 = !DILocation(line: 3366, column: 41, scope: !14894)
!14901 = !DILocation(line: 3366, column: 45, scope: !14894)
!14902 = !DILocation(line: 3366, column: 49, scope: !14894)
!14903 = !DILocation(line: 3366, column: 53, scope: !14894)
!14904 = !DILocation(line: 3366, column: 56, scope: !14894)
!14905 = !DILocation(line: 3366, column: 60, scope: !14894)
!14906 = !DILocation(line: 3366, column: 64, scope: !14894)
!14907 = !DILocation(line: 3366, column: 68, scope: !14894)
!14908 = !DILocation(line: 3366, column: 71, scope: !14894)
!14909 = !DILocation(line: 3366, column: 75, scope: !14894)
!14910 = !DILocation(line: 3366, column: 79, scope: !14894)
!14911 = !DILocation(line: 3366, column: 83, scope: !14894)
!14912 = !DILocation(line: 3366, column: 86, scope: !14894)
!14913 = !DILocation(line: 3366, column: 90, scope: !14894)
!14914 = !DILocation(line: 3366, column: 94, scope: !14894)
!14915 = !DILocation(line: 3366, column: 15, scope: !14894)
!14916 = !DILocation(line: 3366, column: 13, scope: !14894)
!14917 = !DILocation(line: 3366, column: 10, scope: !14894)
!14918 = !DILocation(line: 3368, column: 29, scope: !14894)
!14919 = !DILocation(line: 3368, column: 34, scope: !14894)
!14920 = !DILocation(line: 3368, column: 37, scope: !14894)
!14921 = !DILocation(line: 3368, column: 40, scope: !14894)
!14922 = !DILocation(line: 3368, column: 44, scope: !14894)
!14923 = !DILocation(line: 3368, column: 48, scope: !14894)
!14924 = !DILocation(line: 3368, column: 52, scope: !14894)
!14925 = !DILocation(line: 3368, column: 55, scope: !14894)
!14926 = !DILocation(line: 3368, column: 59, scope: !14894)
!14927 = !DILocation(line: 3368, column: 63, scope: !14894)
!14928 = !DILocation(line: 3368, column: 67, scope: !14894)
!14929 = !DILocation(line: 3368, column: 70, scope: !14894)
!14930 = !DILocation(line: 3368, column: 74, scope: !14894)
!14931 = !DILocation(line: 3368, column: 78, scope: !14894)
!14932 = !DILocation(line: 3368, column: 15, scope: !14894)
!14933 = !DILocation(line: 3368, column: 13, scope: !14894)
!14934 = !DILocation(line: 3369, column: 8, scope: !14883)
!14935 = !DILocation(line: 3371, column: 13, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 3371, column: 13)
!14937 = distinct !DILexicalBlock(scope: !14880, file: !3, line: 3370, column: 13)
!14938 = !DILocation(line: 3371, column: 18, scope: !14936)
!14939 = !DILocation(line: 3371, column: 13, scope: !14937)
!14940 = !DILocation(line: 3372, column: 30, scope: !14936)
!14941 = !DILocation(line: 3372, column: 35, scope: !14936)
!14942 = !DILocation(line: 3372, column: 38, scope: !14936)
!14943 = !DILocation(line: 3372, column: 43, scope: !14936)
!14944 = !DILocation(line: 3372, column: 47, scope: !14936)
!14945 = !DILocation(line: 3372, column: 51, scope: !14936)
!14946 = !DILocation(line: 3372, column: 56, scope: !14936)
!14947 = !DILocation(line: 3372, column: 60, scope: !14936)
!14948 = !DILocation(line: 3372, column: 64, scope: !14936)
!14949 = !DILocation(line: 3372, column: 69, scope: !14936)
!14950 = !DILocation(line: 3372, column: 73, scope: !14936)
!14951 = !DILocation(line: 3372, column: 77, scope: !14936)
!14952 = !DILocation(line: 3372, column: 82, scope: !14936)
!14953 = !DILocation(line: 3372, column: 86, scope: !14936)
!14954 = !DILocation(line: 3372, column: 15, scope: !14936)
!14955 = !DILocation(line: 3372, column: 13, scope: !14936)
!14956 = !DILocation(line: 3372, column: 10, scope: !14936)
!14957 = !DILocation(line: 3374, column: 29, scope: !14936)
!14958 = !DILocation(line: 3374, column: 34, scope: !14936)
!14959 = !DILocation(line: 3374, column: 37, scope: !14936)
!14960 = !DILocation(line: 3374, column: 42, scope: !14936)
!14961 = !DILocation(line: 3374, column: 46, scope: !14936)
!14962 = !DILocation(line: 3374, column: 50, scope: !14936)
!14963 = !DILocation(line: 3374, column: 55, scope: !14936)
!14964 = !DILocation(line: 3374, column: 59, scope: !14936)
!14965 = !DILocation(line: 3374, column: 63, scope: !14936)
!14966 = !DILocation(line: 3374, column: 68, scope: !14936)
!14967 = !DILocation(line: 3374, column: 72, scope: !14936)
!14968 = !DILocation(line: 3374, column: 15, scope: !14936)
!14969 = !DILocation(line: 3374, column: 13, scope: !14936)
!14970 = !DILocation(line: 3377, column: 18, scope: !14793)
!14971 = !DILocation(line: 3377, column: 8, scope: !14793)
!14972 = !DILocation(line: 3377, column: 13, scope: !14793)
!14973 = !DILocation(line: 3377, column: 16, scope: !14793)
!14974 = !DILocation(line: 3378, column: 19, scope: !14793)
!14975 = !DILocation(line: 3378, column: 8, scope: !14793)
!14976 = !DILocation(line: 3378, column: 13, scope: !14793)
!14977 = !DILocation(line: 3378, column: 17, scope: !14793)
!14978 = !DILocation(line: 3379, column: 8, scope: !14793)
!14979 = !DILocation(line: 3379, column: 13, scope: !14793)
!14980 = !DILocation(line: 3379, column: 15, scope: !14793)
!14981 = !DILocation(line: 3381, column: 12, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14793, file: !3, line: 3381, column: 12)
!14983 = !DILocation(line: 3381, column: 15, scope: !14982)
!14984 = !DILocation(line: 3381, column: 12, scope: !14793)
!14985 = !DILocation(line: 3381, column: 20, scope: !14982)
!14986 = !DILocation(line: 3381, column: 25, scope: !14982)
!14987 = !DILocation(line: 3381, column: 32, scope: !14982)
!14988 = !DILocalVariable(name: "layer", scope: !14989, file: !3, line: 3383, type: !2083)
!14989 = distinct !DILexicalBlock(scope: !14982, file: !3, line: 3382, column: 13)
!14990 = !DILocation(line: 3383, column: 26, scope: !14989)
!14991 = !DILocalVariable(name: "mtface", scope: !14989, file: !3, line: 3384, type: !4145)
!14992 = !DILocation(line: 3384, column: 17, scope: !14989)
!14993 = !DILocalVariable(name: "mtf", scope: !14989, file: !3, line: 3384, type: !4145)
!14994 = !DILocation(line: 3384, column: 26, scope: !14989)
!14995 = !DILocalVariable(name: "mcol", scope: !14989, file: !3, line: 3385, type: !4147)
!14996 = !DILocation(line: 3385, column: 15, scope: !14989)
!14997 = !DILocalVariable(name: "mc", scope: !14989, file: !3, line: 3385, type: !4147)
!14998 = !DILocation(line: 3385, column: 22, scope: !14989)
!14999 = !DILocalVariable(name: "index", scope: !14989, file: !3, line: 3386, type: !21)
!15000 = !DILocation(line: 3386, column: 13, scope: !14989)
!15001 = !DILocalVariable(name: "mtfn", scope: !14989, file: !3, line: 3386, type: !21)
!15002 = !DILocation(line: 3386, column: 20, scope: !14989)
!15003 = !DILocalVariable(name: "mcn", scope: !14989, file: !3, line: 3386, type: !21)
!15004 = !DILocation(line: 3386, column: 29, scope: !14989)
!15005 = !DILocalVariable(name: "mtng", scope: !14989, file: !3, line: 3386, type: !21)
!15006 = !DILocation(line: 3386, column: 37, scope: !14989)
!15007 = !DILocalVariable(name: "mln", scope: !14989, file: !3, line: 3386, type: !21)
!15008 = !DILocation(line: 3386, column: 45, scope: !14989)
!15009 = !DILocalVariable(name: "vindex", scope: !14989, file: !3, line: 3386, type: !21)
!15010 = !DILocation(line: 3386, column: 54, scope: !14989)
!15011 = !DILocalVariable(name: "name", scope: !14989, file: !3, line: 3387, type: !444)
!15012 = !DILocation(line: 3387, column: 15, scope: !14989)
!15013 = !DILocalVariable(name: "nr_verts", scope: !14989, file: !3, line: 3388, type: !21)
!15014 = !DILocation(line: 3388, column: 13, scope: !14989)
!15015 = !DILocation(line: 3388, column: 24, scope: !14989)
!15016 = !DILocation(line: 3388, column: 26, scope: !14989)
!15017 = !DILocation(line: 3390, column: 19, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 3390, column: 9)
!15019 = !DILocation(line: 3390, column: 14, scope: !15018)
!15020 = !DILocation(line: 3390, column: 23, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15018, file: !3, line: 3390, column: 9)
!15022 = !DILocation(line: 3390, column: 29, scope: !15021)
!15023 = !DILocation(line: 3390, column: 33, scope: !15021)
!15024 = !DILocation(line: 3390, column: 42, scope: !15021)
!15025 = !DILocation(line: 3390, column: 28, scope: !15021)
!15026 = !DILocation(line: 3390, column: 9, scope: !15018)
!15027 = !DILocation(line: 3391, column: 18, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 3390, column: 61)
!15029 = !DILocation(line: 3391, column: 22, scope: !15028)
!15030 = !DILocation(line: 3391, column: 31, scope: !15028)
!15031 = !DILocation(line: 3391, column: 38, scope: !15028)
!15032 = !DILocation(line: 3391, column: 15, scope: !15028)
!15033 = !DILocation(line: 3392, column: 16, scope: !15028)
!15034 = !DILocation(line: 3392, column: 23, scope: !15028)
!15035 = !DILocation(line: 3392, column: 14, scope: !15028)
!15036 = !DILocation(line: 3394, column: 14, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 3394, column: 14)
!15038 = !DILocation(line: 3394, column: 21, scope: !15037)
!15039 = !DILocation(line: 3394, column: 26, scope: !15037)
!15040 = !DILocation(line: 3394, column: 39, scope: !15037)
!15041 = !DILocation(line: 3394, column: 42, scope: !15037)
!15042 = !DILocation(line: 3394, column: 47, scope: !15037)
!15043 = !DILocation(line: 3394, column: 14, scope: !15028)
!15044 = !DILocalVariable(name: "t", scope: !15045, file: !3, line: 3395, type: !21)
!15045 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 3394, column: 61)
!15046 = !DILocation(line: 3395, column: 15, scope: !15045)
!15047 = !DILocation(line: 3396, column: 37, scope: !15045)
!15048 = !DILocation(line: 3396, column: 42, scope: !15045)
!15049 = !DILocation(line: 3396, column: 51, scope: !15045)
!15050 = !DILocation(line: 3396, column: 16, scope: !15045)
!15051 = !DILocation(line: 3396, column: 14, scope: !15045)
!15052 = !DILocation(line: 3397, column: 28, scope: !15045)
!15053 = !DILocation(line: 3397, column: 35, scope: !15045)
!15054 = !DILocation(line: 3397, column: 19, scope: !15045)
!15055 = !DILocation(line: 3397, column: 17, scope: !15045)
!15056 = !DILocation(line: 3398, column: 12, scope: !15045)
!15057 = !DILocation(line: 3398, column: 18, scope: !15045)
!15058 = !DILocation(line: 3398, column: 25, scope: !15045)
!15059 = !DILocation(line: 3399, column: 22, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 3399, column: 11)
!15061 = !DILocation(line: 3399, column: 16, scope: !15060)
!15062 = !DILocation(line: 3399, column: 26, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15060, file: !3, line: 3399, column: 11)
!15064 = !DILocation(line: 3399, column: 33, scope: !15063)
!15065 = !DILocation(line: 3399, column: 32, scope: !15063)
!15066 = !DILocation(line: 3399, column: 11, scope: !15060)
!15067 = !DILocation(line: 3400, column: 18, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15063, file: !3, line: 3400, column: 12)
!15069 = !DILocation(line: 3400, column: 17, scope: !15068)
!15070 = !DILocation(line: 3400, column: 22, scope: !15071)
!15071 = distinct !DILexicalBlock(scope: !15068, file: !3, line: 3400, column: 12)
!15072 = !DILocation(line: 3400, column: 23, scope: !15071)
!15073 = !DILocation(line: 3400, column: 12, scope: !15068)
!15074 = !DILocation(line: 3401, column: 32, scope: !15071)
!15075 = !DILocation(line: 3401, column: 39, scope: !15071)
!15076 = !DILocation(line: 3401, column: 42, scope: !15071)
!15077 = !DILocation(line: 3401, column: 53, scope: !15071)
!15078 = !DILocation(line: 3401, column: 45, scope: !15071)
!15079 = !DILocation(line: 3401, column: 62, scope: !15071)
!15080 = !DILocation(line: 3401, column: 13, scope: !15071)
!15081 = !DILocation(line: 3401, column: 18, scope: !15071)
!15082 = !DILocation(line: 3401, column: 21, scope: !15071)
!15083 = !DILocation(line: 3401, column: 29, scope: !15071)
!15084 = !DILocation(line: 3401, column: 31, scope: !15071)
!15085 = !DILocation(line: 3400, column: 28, scope: !15071)
!15086 = !DILocation(line: 3400, column: 12, scope: !15071)
!15087 = distinct !{!15087, !15073, !15088}
!15088 = !DILocation(line: 3401, column: 63, scope: !15068)
!15089 = !DILocation(line: 3399, column: 49, scope: !15063)
!15090 = !DILocation(line: 3399, column: 11, scope: !15063)
!15091 = distinct !{!15091, !15066, !15092}
!15092 = !DILocation(line: 3401, column: 63, scope: !15060)
!15093 = !DILocation(line: 3402, column: 10, scope: !15045)
!15094 = !DILocation(line: 3403, column: 19, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15037, file: !3, line: 3403, column: 19)
!15096 = !DILocation(line: 3403, column: 26, scope: !15095)
!15097 = !DILocation(line: 3403, column: 31, scope: !15095)
!15098 = !DILocation(line: 3403, column: 42, scope: !15095)
!15099 = !DILocation(line: 3403, column: 45, scope: !15095)
!15100 = !DILocation(line: 3403, column: 49, scope: !15095)
!15101 = !DILocation(line: 3403, column: 19, scope: !15037)
!15102 = !DILocation(line: 3404, column: 35, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 3403, column: 61)
!15104 = !DILocation(line: 3404, column: 40, scope: !15103)
!15105 = !DILocation(line: 3404, column: 48, scope: !15103)
!15106 = !DILocation(line: 3404, column: 15, scope: !15103)
!15107 = !DILocation(line: 3404, column: 13, scope: !15103)
!15108 = !DILocation(line: 3405, column: 24, scope: !15103)
!15109 = !DILocation(line: 3405, column: 31, scope: !15103)
!15110 = !DILocation(line: 3405, column: 17, scope: !15103)
!15111 = !DILocation(line: 3405, column: 15, scope: !15103)
!15112 = !DILocation(line: 3406, column: 22, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 3406, column: 11)
!15114 = !DILocation(line: 3406, column: 16, scope: !15113)
!15115 = !DILocation(line: 3406, column: 26, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15113, file: !3, line: 3406, column: 11)
!15117 = !DILocation(line: 3406, column: 33, scope: !15116)
!15118 = !DILocation(line: 3406, column: 32, scope: !15116)
!15119 = !DILocation(line: 3406, column: 11, scope: !15113)
!15120 = !DILocation(line: 3407, column: 12, scope: !15116)
!15121 = !DILocation(line: 3407, column: 15, scope: !15116)
!15122 = !DILocation(line: 3407, column: 23, scope: !15116)
!15123 = !DILocation(line: 3407, column: 28, scope: !15116)
!15124 = !DILocation(line: 3407, column: 29, scope: !15116)
!15125 = !DILocation(line: 3407, column: 40, scope: !15116)
!15126 = !DILocation(line: 3407, column: 32, scope: !15116)
!15127 = !DILocation(line: 3407, column: 31, scope: !15116)
!15128 = !DILocation(line: 3406, column: 49, scope: !15116)
!15129 = !DILocation(line: 3406, column: 11, scope: !15116)
!15130 = distinct !{!15130, !15119, !15131}
!15131 = !DILocation(line: 3407, column: 47, scope: !15113)
!15132 = !DILocation(line: 3408, column: 10, scope: !15103)
!15133 = !DILocation(line: 3409, column: 19, scope: !15134)
!15134 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 3409, column: 19)
!15135 = !DILocation(line: 3409, column: 26, scope: !15134)
!15136 = !DILocation(line: 3409, column: 31, scope: !15134)
!15137 = !DILocation(line: 3409, column: 45, scope: !15134)
!15138 = !DILocation(line: 3409, column: 48, scope: !15134)
!15139 = !DILocation(line: 3409, column: 53, scope: !15134)
!15140 = !DILocation(line: 3409, column: 19, scope: !15095)
!15141 = !DILocation(line: 3410, column: 15, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15143, file: !3, line: 3410, column: 15)
!15143 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3409, column: 58)
!15144 = !DILocation(line: 3410, column: 33, scope: !15142)
!15145 = !DILocation(line: 3410, column: 15, scope: !15143)
!15146 = !DILocalVariable(name: "tangent", scope: !15147, file: !3, line: 3411, type: !2417)
!15147 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 3410, column: 39)
!15148 = !DILocation(line: 3411, column: 26, scope: !15147)
!15149 = !DILocation(line: 3411, column: 52, scope: !15147)
!15150 = !DILocation(line: 3411, column: 59, scope: !15147)
!15151 = !DILocation(line: 3411, column: 36, scope: !15147)
!15152 = !DILocalVariable(name: "ftang", scope: !15147, file: !3, line: 3412, type: !44)
!15153 = !DILocation(line: 3412, column: 20, scope: !15147)
!15154 = !DILocation(line: 3412, column: 56, scope: !15147)
!15155 = !DILocation(line: 3412, column: 61, scope: !15147)
!15156 = !DILocation(line: 3412, column: 28, scope: !15147)
!15157 = !DILocation(line: 3413, column: 23, scope: !15158)
!15158 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 3413, column: 12)
!15159 = !DILocation(line: 3413, column: 17, scope: !15158)
!15160 = !DILocation(line: 3413, column: 27, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15158, file: !3, line: 3413, column: 12)
!15162 = !DILocation(line: 3413, column: 34, scope: !15161)
!15163 = !DILocation(line: 3413, column: 33, scope: !15161)
!15164 = !DILocation(line: 3413, column: 12, scope: !15158)
!15165 = !DILocation(line: 3414, column: 24, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15161, file: !3, line: 3413, column: 54)
!15167 = !DILocation(line: 3414, column: 30, scope: !15166)
!15168 = !DILocation(line: 3414, column: 36, scope: !15166)
!15169 = !DILocation(line: 3414, column: 29, scope: !15166)
!15170 = !DILocation(line: 3414, column: 40, scope: !15166)
!15171 = !DILocation(line: 3414, column: 48, scope: !15166)
!15172 = !DILocation(line: 3414, column: 49, scope: !15166)
!15173 = !DILocation(line: 3414, column: 47, scope: !15166)
!15174 = !DILocation(line: 3414, column: 61, scope: !15166)
!15175 = !DILocation(line: 3414, column: 53, scope: !15166)
!15176 = !DILocation(line: 3414, column: 68, scope: !15166)
!15177 = !DILocation(line: 3414, column: 52, scope: !15166)
!15178 = !DILocation(line: 3414, column: 13, scope: !15166)
!15179 = !DILocation(line: 3415, column: 28, scope: !15166)
!15180 = !DILocation(line: 3415, column: 33, scope: !15166)
!15181 = !DILocation(line: 3415, column: 39, scope: !15166)
!15182 = !DILocation(line: 3415, column: 45, scope: !15166)
!15183 = !DILocation(line: 3415, column: 38, scope: !15166)
!15184 = !DILocation(line: 3415, column: 13, scope: !15166)
!15185 = !DILocation(line: 3416, column: 26, scope: !15166)
!15186 = !DILocation(line: 3416, column: 32, scope: !15166)
!15187 = !DILocation(line: 3416, column: 38, scope: !15166)
!15188 = !DILocation(line: 3416, column: 31, scope: !15166)
!15189 = !DILocation(line: 3416, column: 13, scope: !15166)
!15190 = !DILocation(line: 3417, column: 12, scope: !15166)
!15191 = !DILocation(line: 3413, column: 50, scope: !15161)
!15192 = !DILocation(line: 3413, column: 12, scope: !15161)
!15193 = distinct !{!15193, !15164, !15194}
!15194 = !DILocation(line: 3417, column: 12, scope: !15158)
!15195 = !DILocation(line: 3418, column: 11, scope: !15147)
!15196 = !DILocation(line: 3419, column: 15, scope: !15143)
!15197 = !DILocation(line: 3420, column: 10, scope: !15143)
!15198 = !DILocation(line: 3421, column: 19, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3421, column: 19)
!15200 = !DILocation(line: 3421, column: 26, scope: !15199)
!15201 = !DILocation(line: 3421, column: 31, scope: !15199)
!15202 = !DILocation(line: 3421, column: 52, scope: !15199)
!15203 = !DILocation(line: 3421, column: 55, scope: !15199)
!15204 = !DILocation(line: 3421, column: 59, scope: !15199)
!15205 = !DILocation(line: 3421, column: 19, scope: !15134)
!15206 = !DILocation(line: 3422, column: 15, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15208, file: !3, line: 3422, column: 15)
!15208 = distinct !DILexicalBlock(scope: !15199, file: !3, line: 3421, column: 64)
!15209 = !DILocation(line: 3422, column: 15, scope: !15208)
!15210 = !DILocalVariable(name: "lnors", scope: !15211, file: !3, line: 3423, type: !4154)
!15211 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 3422, column: 26)
!15212 = !DILocation(line: 3423, column: 26, scope: !15211)
!15213 = !DILocation(line: 3423, column: 64, scope: !15211)
!15214 = !DILocation(line: 3423, column: 71, scope: !15211)
!15215 = !DILocation(line: 3423, column: 41, scope: !15211)
!15216 = !DILocation(line: 3424, column: 24, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15211, file: !3, line: 3424, column: 12)
!15218 = !DILocation(line: 3424, column: 17, scope: !15217)
!15219 = !DILocation(line: 3424, column: 29, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15217, file: !3, line: 3424, column: 12)
!15221 = !DILocation(line: 3424, column: 36, scope: !15220)
!15222 = !DILocation(line: 3424, column: 12, scope: !15217)
!15223 = !DILocation(line: 3426, column: 39, scope: !15224)
!15224 = distinct !DILexicalBlock(scope: !15220, file: !3, line: 3424, column: 51)
!15225 = !DILocation(line: 3426, column: 46, scope: !15224)
!15226 = !DILocation(line: 3426, column: 55, scope: !15224)
!15227 = !DILocation(line: 3426, column: 61, scope: !15224)
!15228 = !DILocation(line: 3426, column: 72, scope: !15224)
!15229 = !DILocation(line: 3426, column: 64, scope: !15224)
!15230 = !DILocation(line: 3426, column: 13, scope: !15224)
!15231 = !DILocation(line: 3430, column: 12, scope: !15224)
!15232 = !DILocation(line: 3424, column: 47, scope: !15220)
!15233 = !DILocation(line: 3424, column: 12, scope: !15220)
!15234 = distinct !{!15234, !15222, !15235}
!15235 = !DILocation(line: 3430, column: 12, scope: !15217)
!15236 = !DILocation(line: 3431, column: 15, scope: !15211)
!15237 = !DILocation(line: 3432, column: 11, scope: !15211)
!15238 = !DILocation(line: 3433, column: 14, scope: !15208)
!15239 = !DILocation(line: 3434, column: 10, scope: !15208)
!15240 = !DILocation(line: 3435, column: 9, scope: !15028)
!15241 = !DILocation(line: 3390, column: 57, scope: !15021)
!15242 = !DILocation(line: 3390, column: 9, scope: !15021)
!15243 = distinct !{!15243, !15026, !15244}
!15244 = !DILocation(line: 3435, column: 9, scope: !15018)
!15245 = !DILocation(line: 3437, column: 13, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 3437, column: 13)
!15247 = !DILocation(line: 3437, column: 13, scope: !14989)
!15248 = !DILocalVariable(name: "origindex", scope: !15249, file: !3, line: 3442, type: !42)
!15249 = distinct !DILexicalBlock(scope: !15246, file: !3, line: 3437, column: 29)
!15250 = !DILocation(line: 3442, column: 15, scope: !15249)
!15251 = !DILocation(line: 3443, column: 47, scope: !15249)
!15252 = !DILocation(line: 3443, column: 52, scope: !15249)
!15253 = !DILocation(line: 3443, column: 22, scope: !15249)
!15254 = !DILocation(line: 3443, column: 20, scope: !15249)
!15255 = !DILocation(line: 3444, column: 14, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15249, file: !3, line: 3444, column: 14)
!15257 = !DILocation(line: 3444, column: 32, scope: !15256)
!15258 = !DILocation(line: 3444, column: 35, scope: !15256)
!15259 = !DILocation(line: 3444, column: 14, scope: !15249)
!15260 = !DILocation(line: 3445, column: 49, scope: !15256)
!15261 = !DILocation(line: 3445, column: 68, scope: !15256)
!15262 = !DILocation(line: 3445, column: 86, scope: !15256)
!15263 = !DILocation(line: 3445, column: 24, scope: !15256)
!15264 = !DILocation(line: 3445, column: 12, scope: !15256)
!15265 = !DILocation(line: 3445, column: 22, scope: !15256)
!15266 = !DILocation(line: 3445, column: 11, scope: !15256)
!15267 = !DILocation(line: 3446, column: 19, scope: !15268)
!15268 = distinct !DILexicalBlock(scope: !15256, file: !3, line: 3446, column: 19)
!15269 = !DILocation(line: 3446, column: 19, scope: !15256)
!15270 = !DILocation(line: 3447, column: 24, scope: !15268)
!15271 = !DILocation(line: 3447, column: 42, scope: !15268)
!15272 = !DILocation(line: 3447, column: 12, scope: !15268)
!15273 = !DILocation(line: 3447, column: 22, scope: !15268)
!15274 = !DILocation(line: 3447, column: 11, scope: !15268)
!15275 = !DILocation(line: 3449, column: 24, scope: !15268)
!15276 = !DILocation(line: 3449, column: 12, scope: !15268)
!15277 = !DILocation(line: 3449, column: 22, scope: !15268)
!15278 = !DILocation(line: 3450, column: 9, scope: !15249)
!15279 = !DILocation(line: 3452, column: 7, scope: !14793)
!15280 = !DILocation(line: 3453, column: 6, scope: !14776)
!15281 = !DILocation(line: 3315, column: 24, scope: !14771)
!15282 = !DILocation(line: 3315, column: 33, scope: !14771)
!15283 = !DILocation(line: 3315, column: 6, scope: !14771)
!15284 = distinct !{!15284, !14774, !15285}
!15285 = !DILocation(line: 3453, column: 6, scope: !14768)
!15286 = !DILocation(line: 3454, column: 5, scope: !14742)
!15287 = !DILocation(line: 3455, column: 4, scope: !14656)
!15288 = !DILocation(line: 3274, column: 62, scope: !14642)
!15289 = !DILocation(line: 3274, column: 4, scope: !14642)
!15290 = distinct !{!15290, !14654, !15291}
!15291 = !DILocation(line: 3455, column: 4, scope: !14639)
!15292 = !DILocation(line: 3464, column: 9, scope: !14616)
!15293 = !DILocation(line: 3464, column: 13, scope: !14616)
!15294 = !DILocation(line: 3464, column: 25, scope: !14616)
!15295 = !DILocation(line: 3464, column: 7, scope: !14616)
!15296 = !DILocation(line: 3465, column: 11, scope: !14616)
!15297 = !DILocation(line: 3465, column: 15, scope: !14616)
!15298 = !DILocation(line: 3465, column: 28, scope: !14616)
!15299 = !DILocation(line: 3465, column: 9, scope: !14616)
!15300 = !DILocation(line: 3466, column: 29, scope: !14616)
!15301 = !DILocation(line: 3466, column: 33, scope: !14616)
!15302 = !DILocation(line: 3466, column: 8, scope: !14616)
!15303 = !DILocation(line: 3466, column: 6, scope: !14616)
!15304 = !DILocation(line: 3467, column: 8, scope: !15305)
!15305 = distinct !DILexicalBlock(scope: !14616, file: !3, line: 3467, column: 8)
!15306 = !DILocation(line: 3467, column: 12, scope: !15305)
!15307 = !DILocation(line: 3467, column: 16, scope: !15305)
!15308 = !DILocation(line: 3467, column: 20, scope: !15305)
!15309 = !DILocation(line: 3467, column: 34, scope: !15305)
!15310 = !DILocation(line: 3467, column: 8, scope: !14616)
!15311 = !DILocalVariable(name: "medge", scope: !15312, file: !3, line: 3468, type: !15313)
!15312 = distinct !DILexicalBlock(scope: !15305, file: !3, line: 3467, column: 52)
!15313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15314, size: 64)
!15314 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !1252, line: 52, baseType: !2058)
!15315 = !DILocation(line: 3468, column: 12, scope: !15312)
!15316 = !DILocalVariable(name: "edgetable", scope: !15312, file: !3, line: 3469, type: !15317)
!15317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15318, size: 64)
!15318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edgesort", file: !3, line: 2881, size: 160, elements: !15319)
!15319 = !{!15320, !15321, !15322, !15323, !15324}
!15320 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !15318, file: !3, line: 2882, baseType: !79, size: 32)
!15321 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !15318, file: !3, line: 2882, baseType: !79, size: 32, offset: 32)
!15322 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !15318, file: !3, line: 2883, baseType: !21, size: 32, offset: 64)
!15323 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !15318, file: !3, line: 2884, baseType: !79, size: 32, offset: 96)
!15324 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !15318, file: !3, line: 2884, baseType: !79, size: 32, offset: 128)
!15325 = !DILocation(line: 3469, column: 22, scope: !15312)
!15326 = !DILocalVariable(name: "totedge", scope: !15312, file: !3, line: 3470, type: !21)
!15327 = !DILocation(line: 3470, column: 9, scope: !15312)
!15328 = !DILocation(line: 3471, column: 19, scope: !15312)
!15329 = !DILocation(line: 3473, column: 12, scope: !15312)
!15330 = !DILocation(line: 3473, column: 16, scope: !15312)
!15331 = !DILocation(line: 3473, column: 29, scope: !15312)
!15332 = !DILocation(line: 3473, column: 10, scope: !15312)
!15333 = !DILocation(line: 3476, column: 38, scope: !15312)
!15334 = !DILocation(line: 3476, column: 16, scope: !15312)
!15335 = !DILocation(line: 3476, column: 14, scope: !15312)
!15336 = !DILocation(line: 3478, column: 12, scope: !15337)
!15337 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 3478, column: 5)
!15338 = !DILocation(line: 3478, column: 10, scope: !15337)
!15339 = !DILocation(line: 3478, column: 16, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15337, file: !3, line: 3478, column: 5)
!15341 = !DILocation(line: 3478, column: 19, scope: !15340)
!15342 = !DILocation(line: 3478, column: 18, scope: !15340)
!15343 = !DILocation(line: 3478, column: 5, scope: !15337)
!15344 = !DILocation(line: 3479, column: 10, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 3479, column: 10)
!15346 = distinct !DILexicalBlock(scope: !15340, file: !3, line: 3478, column: 39)
!15347 = !DILocation(line: 3479, column: 17, scope: !15345)
!15348 = !DILocation(line: 3479, column: 21, scope: !15345)
!15349 = !DILocation(line: 3479, column: 10, scope: !15346)
!15350 = !DILocalVariable(name: "v0", scope: !15351, file: !3, line: 3480, type: !2145)
!15351 = distinct !DILexicalBlock(scope: !15345, file: !3, line: 3479, column: 37)
!15352 = !DILocation(line: 3480, column: 14, scope: !15351)
!15353 = !DILocation(line: 3480, column: 20, scope: !15351)
!15354 = !DILocation(line: 3480, column: 26, scope: !15351)
!15355 = !DILocation(line: 3480, column: 33, scope: !15351)
!15356 = !DILocalVariable(name: "v1", scope: !15351, file: !3, line: 3481, type: !2145)
!15357 = !DILocation(line: 3481, column: 14, scope: !15351)
!15358 = !DILocation(line: 3481, column: 20, scope: !15351)
!15359 = !DILocation(line: 3481, column: 26, scope: !15351)
!15360 = !DILocation(line: 3481, column: 33, scope: !15351)
!15361 = !DILocation(line: 3483, column: 29, scope: !15351)
!15362 = !DILocation(line: 3483, column: 34, scope: !15351)
!15363 = !DILocation(line: 3483, column: 39, scope: !15351)
!15364 = !DILocation(line: 3483, column: 46, scope: !15351)
!15365 = !DILocation(line: 3483, column: 12, scope: !15351)
!15366 = !DILocation(line: 3483, column: 10, scope: !15351)
!15367 = !DILocation(line: 3484, column: 33, scope: !15351)
!15368 = !DILocation(line: 3484, column: 38, scope: !15351)
!15369 = !DILocation(line: 3484, column: 46, scope: !15351)
!15370 = !DILocation(line: 3484, column: 53, scope: !15351)
!15371 = !DILocation(line: 3484, column: 45, scope: !15351)
!15372 = !DILocation(line: 3484, column: 16, scope: !15351)
!15373 = !DILocation(line: 3484, column: 7, scope: !15351)
!15374 = !DILocation(line: 3484, column: 12, scope: !15351)
!15375 = !DILocation(line: 3484, column: 14, scope: !15351)
!15376 = !DILocation(line: 3485, column: 33, scope: !15351)
!15377 = !DILocation(line: 3485, column: 38, scope: !15351)
!15378 = !DILocation(line: 3485, column: 46, scope: !15351)
!15379 = !DILocation(line: 3485, column: 53, scope: !15351)
!15380 = !DILocation(line: 3485, column: 45, scope: !15351)
!15381 = !DILocation(line: 3485, column: 16, scope: !15351)
!15382 = !DILocation(line: 3485, column: 7, scope: !15351)
!15383 = !DILocation(line: 3485, column: 12, scope: !15351)
!15384 = !DILocation(line: 3485, column: 14, scope: !15351)
!15385 = !DILocation(line: 3486, column: 16, scope: !15351)
!15386 = !DILocation(line: 3486, column: 21, scope: !15351)
!15387 = !DILocation(line: 3486, column: 7, scope: !15351)
!15388 = !DILocation(line: 3486, column: 12, scope: !15351)
!15389 = !DILocation(line: 3486, column: 14, scope: !15351)
!15390 = !DILocation(line: 3487, column: 7, scope: !15351)
!15391 = !DILocation(line: 3487, column: 12, scope: !15351)
!15392 = !DILocation(line: 3487, column: 14, scope: !15351)
!15393 = !DILocation(line: 3489, column: 11, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 3489, column: 11)
!15395 = !DILocation(line: 3489, column: 11, scope: !15351)
!15396 = !DILocation(line: 3490, column: 29, scope: !15394)
!15397 = !DILocation(line: 3490, column: 34, scope: !15394)
!15398 = !DILocation(line: 3490, column: 38, scope: !15394)
!15399 = !DILocation(line: 3490, column: 45, scope: !15394)
!15400 = !DILocation(line: 3490, column: 50, scope: !15394)
!15401 = !DILocation(line: 3490, column: 61, scope: !15394)
!15402 = !DILocation(line: 3490, column: 8, scope: !15394)
!15403 = !DILocation(line: 3492, column: 13, scope: !15351)
!15404 = !DILocation(line: 3492, column: 17, scope: !15351)
!15405 = !DILocation(line: 3492, column: 23, scope: !15351)
!15406 = !DILocation(line: 3492, column: 27, scope: !15351)
!15407 = !DILocation(line: 3492, column: 22, scope: !15351)
!15408 = !DILocation(line: 3492, column: 11, scope: !15351)
!15409 = !DILocation(line: 3492, column: 9, scope: !15351)
!15410 = !DILocation(line: 3493, column: 13, scope: !15351)
!15411 = !DILocation(line: 3493, column: 17, scope: !15351)
!15412 = !DILocation(line: 3493, column: 23, scope: !15351)
!15413 = !DILocation(line: 3493, column: 27, scope: !15351)
!15414 = !DILocation(line: 3493, column: 22, scope: !15351)
!15415 = !DILocation(line: 3493, column: 11, scope: !15351)
!15416 = !DILocation(line: 3493, column: 9, scope: !15351)
!15417 = !DILocation(line: 3494, column: 13, scope: !15351)
!15418 = !DILocation(line: 3494, column: 17, scope: !15351)
!15419 = !DILocation(line: 3494, column: 23, scope: !15351)
!15420 = !DILocation(line: 3494, column: 27, scope: !15351)
!15421 = !DILocation(line: 3494, column: 22, scope: !15351)
!15422 = !DILocation(line: 3494, column: 11, scope: !15351)
!15423 = !DILocation(line: 3494, column: 9, scope: !15351)
!15424 = !DILocation(line: 3496, column: 18, scope: !15351)
!15425 = !DILocation(line: 3496, column: 29, scope: !15351)
!15426 = !DILocation(line: 3496, column: 28, scope: !15351)
!15427 = !DILocation(line: 3496, column: 32, scope: !15351)
!15428 = !DILocation(line: 3496, column: 43, scope: !15351)
!15429 = !DILocation(line: 3496, column: 42, scope: !15351)
!15430 = !DILocation(line: 3496, column: 31, scope: !15351)
!15431 = !DILocation(line: 3496, column: 46, scope: !15351)
!15432 = !DILocation(line: 3496, column: 57, scope: !15351)
!15433 = !DILocation(line: 3496, column: 56, scope: !15351)
!15434 = !DILocation(line: 3496, column: 45, scope: !15351)
!15435 = !DILocation(line: 3496, column: 7, scope: !15351)
!15436 = !DILocation(line: 3496, column: 12, scope: !15351)
!15437 = !DILocation(line: 3496, column: 16, scope: !15351)
!15438 = !DILocation(line: 3497, column: 18, scope: !15351)
!15439 = !DILocation(line: 3497, column: 29, scope: !15351)
!15440 = !DILocation(line: 3497, column: 28, scope: !15351)
!15441 = !DILocation(line: 3497, column: 32, scope: !15351)
!15442 = !DILocation(line: 3497, column: 43, scope: !15351)
!15443 = !DILocation(line: 3497, column: 42, scope: !15351)
!15444 = !DILocation(line: 3497, column: 31, scope: !15351)
!15445 = !DILocation(line: 3497, column: 46, scope: !15351)
!15446 = !DILocation(line: 3497, column: 57, scope: !15351)
!15447 = !DILocation(line: 3497, column: 56, scope: !15351)
!15448 = !DILocation(line: 3497, column: 45, scope: !15351)
!15449 = !DILocation(line: 3497, column: 7, scope: !15351)
!15450 = !DILocation(line: 3497, column: 12, scope: !15351)
!15451 = !DILocation(line: 3497, column: 16, scope: !15351)
!15452 = !DILocation(line: 3498, column: 18, scope: !15351)
!15453 = !DILocation(line: 3498, column: 29, scope: !15351)
!15454 = !DILocation(line: 3498, column: 28, scope: !15351)
!15455 = !DILocation(line: 3498, column: 32, scope: !15351)
!15456 = !DILocation(line: 3498, column: 43, scope: !15351)
!15457 = !DILocation(line: 3498, column: 42, scope: !15351)
!15458 = !DILocation(line: 3498, column: 31, scope: !15351)
!15459 = !DILocation(line: 3498, column: 46, scope: !15351)
!15460 = !DILocation(line: 3498, column: 57, scope: !15351)
!15461 = !DILocation(line: 3498, column: 56, scope: !15351)
!15462 = !DILocation(line: 3498, column: 45, scope: !15351)
!15463 = !DILocation(line: 3498, column: 7, scope: !15351)
!15464 = !DILocation(line: 3498, column: 12, scope: !15351)
!15465 = !DILocation(line: 3498, column: 16, scope: !15351)
!15466 = !DILocation(line: 3499, column: 20, scope: !15351)
!15467 = !DILocation(line: 3499, column: 25, scope: !15351)
!15468 = !DILocation(line: 3499, column: 7, scope: !15351)
!15469 = !DILocation(line: 3501, column: 17, scope: !15351)
!15470 = !DILocation(line: 3501, column: 7, scope: !15351)
!15471 = !DILocation(line: 3501, column: 12, scope: !15351)
!15472 = !DILocation(line: 3501, column: 15, scope: !15351)
!15473 = !DILocation(line: 3502, column: 7, scope: !15351)
!15474 = !DILocation(line: 3502, column: 12, scope: !15351)
!15475 = !DILocation(line: 3502, column: 16, scope: !15351)
!15476 = !DILocation(line: 3503, column: 7, scope: !15351)
!15477 = !DILocation(line: 3503, column: 12, scope: !15351)
!15478 = !DILocation(line: 3503, column: 14, scope: !15351)
!15479 = !DILocation(line: 3504, column: 6, scope: !15351)
!15480 = !DILocation(line: 3505, column: 5, scope: !15346)
!15481 = !DILocation(line: 3478, column: 26, scope: !15340)
!15482 = !DILocation(line: 3478, column: 35, scope: !15340)
!15483 = !DILocation(line: 3478, column: 5, scope: !15340)
!15484 = distinct !{!15484, !15343, !15485}
!15485 = !DILocation(line: 3505, column: 5, scope: !15337)
!15486 = !DILocation(line: 3506, column: 9, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 3506, column: 9)
!15488 = !DILocation(line: 3506, column: 9, scope: !15312)
!15489 = !DILocation(line: 3507, column: 6, scope: !15487)
!15490 = !DILocation(line: 3507, column: 16, scope: !15487)
!15491 = !DILocation(line: 3508, column: 4, scope: !15312)
!15492 = !DILocation(line: 3509, column: 3, scope: !14616)
!15493 = !DILocation(line: 3512, column: 7, scope: !15494)
!15494 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3512, column: 6)
!15495 = !DILocation(line: 3512, column: 6, scope: !14173)
!15496 = !DILocation(line: 3513, column: 7, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 3513, column: 7)
!15498 = distinct !DILexicalBlock(scope: !15494, file: !3, line: 3512, column: 19)
!15499 = !DILocation(line: 3513, column: 7, scope: !15498)
!15500 = !DILocation(line: 3514, column: 21, scope: !15497)
!15501 = !DILocation(line: 3514, column: 25, scope: !15497)
!15502 = !DILocation(line: 3514, column: 30, scope: !15497)
!15503 = !DILocation(line: 3514, column: 4, scope: !15497)
!15504 = !DILocation(line: 3516, column: 7, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 3516, column: 7)
!15506 = !DILocation(line: 3516, column: 7, scope: !15498)
!15507 = !DILocation(line: 3517, column: 23, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3516, column: 20)
!15509 = !DILocation(line: 3517, column: 27, scope: !15508)
!15510 = !DILocation(line: 3517, column: 4, scope: !15508)
!15511 = !DILocation(line: 3518, column: 13, scope: !15508)
!15512 = !DILocation(line: 3518, column: 17, scope: !15508)
!15513 = !DILocation(line: 3518, column: 4, scope: !15508)
!15514 = !DILocation(line: 3519, column: 19, scope: !15508)
!15515 = !DILocation(line: 3520, column: 3, scope: !15508)
!15516 = !DILocation(line: 3521, column: 12, scope: !15517)
!15517 = distinct !DILexicalBlock(scope: !15505, file: !3, line: 3521, column: 12)
!15518 = !DILocation(line: 3521, column: 12, scope: !15505)
!15519 = !DILocation(line: 3522, column: 22, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 3521, column: 27)
!15521 = !DILocation(line: 3522, column: 32, scope: !15520)
!15522 = !DILocation(line: 3522, column: 19, scope: !15520)
!15523 = !DILocation(line: 3523, column: 15, scope: !15520)
!15524 = !DILocation(line: 3523, column: 19, scope: !15520)
!15525 = !DILocation(line: 3523, column: 24, scope: !15520)
!15526 = !DILocation(line: 3523, column: 29, scope: !15520)
!15527 = !DILocation(line: 3523, column: 4, scope: !15520)
!15528 = !DILocation(line: 3524, column: 3, scope: !15520)
!15529 = !DILocation(line: 3526, column: 7, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15498, file: !3, line: 3526, column: 7)
!15531 = !DILocation(line: 3526, column: 21, scope: !15530)
!15532 = !DILocation(line: 3526, column: 25, scope: !15530)
!15533 = !DILocation(line: 3526, column: 28, scope: !15530)
!15534 = !DILocation(line: 3526, column: 40, scope: !15530)
!15535 = !DILocation(line: 3526, column: 7, scope: !15498)
!15536 = !DILocation(line: 3527, column: 23, scope: !15530)
!15537 = !DILocation(line: 3527, column: 27, scope: !15530)
!15538 = !DILocation(line: 3527, column: 32, scope: !15530)
!15539 = !DILocation(line: 3527, column: 48, scope: !15530)
!15540 = !DILocation(line: 3527, column: 62, scope: !15530)
!15541 = !DILocation(line: 3527, column: 4, scope: !15530)
!15542 = !DILocation(line: 3528, column: 2, scope: !15498)
!15543 = !DILocation(line: 3530, column: 2, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !14173, file: !3, line: 3530, column: 2)
!15545 = !DILocation(line: 3530, column: 2, scope: !14173)
!15546 = !DILocation(line: 3530, column: 2, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15544, file: !3, line: 3530, column: 2)
!15548 = !DILocation(line: 3532, column: 2, scope: !14173)
!15549 = !DILocation(line: 3532, column: 6, scope: !14173)
!15550 = !DILocation(line: 3532, column: 14, scope: !14173)
!15551 = !DILocation(line: 3533, column: 1, scope: !14173)
!15552 = distinct !DISubprogram(name: "init_render_mball", scope: !3, file: !3, line: 2162, type: !15553, scopeLine: 2163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!15553 = !DISubroutineType(types: !15554)
!15554 = !{null, !6, !3063}
!15555 = !DILocalVariable(name: "re", arg: 1, scope: !15552, file: !3, line: 2162, type: !6)
!15556 = !DILocation(line: 2162, column: 39, scope: !15552)
!15557 = !DILocalVariable(name: "obr", arg: 2, scope: !15552, file: !3, line: 2162, type: !3063)
!15558 = !DILocation(line: 2162, column: 54, scope: !15552)
!15559 = !DILocalVariable(name: "ob", scope: !15552, file: !3, line: 2164, type: !3236)
!15560 = !DILocation(line: 2164, column: 10, scope: !15552)
!15561 = !DILocation(line: 2164, column: 14, scope: !15552)
!15562 = !DILocation(line: 2164, column: 19, scope: !15552)
!15563 = !DILocalVariable(name: "dl", scope: !15552, file: !3, line: 2165, type: !13024)
!15564 = !DILocation(line: 2165, column: 12, scope: !15552)
!15565 = !DILocalVariable(name: "ver", scope: !15552, file: !3, line: 2166, type: !4179)
!15566 = !DILocation(line: 2166, column: 11, scope: !15552)
!15567 = !DILocalVariable(name: "vlr", scope: !15552, file: !3, line: 2167, type: !13020)
!15568 = !DILocation(line: 2167, column: 11, scope: !15552)
!15569 = !DILocalVariable(name: "vlr1", scope: !15552, file: !3, line: 2167, type: !13020)
!15570 = !DILocation(line: 2167, column: 17, scope: !15552)
!15571 = !DILocalVariable(name: "ma", scope: !15552, file: !3, line: 2168, type: !4157)
!15572 = !DILocation(line: 2168, column: 12, scope: !15552)
!15573 = !DILocalVariable(name: "data", scope: !15552, file: !3, line: 2169, type: !44)
!15574 = !DILocation(line: 2169, column: 9, scope: !15552)
!15575 = !DILocalVariable(name: "nors", scope: !15552, file: !3, line: 2169, type: !44)
!15576 = !DILocation(line: 2169, column: 16, scope: !15552)
!15577 = !DILocalVariable(name: "orco", scope: !15552, file: !3, line: 2169, type: !44)
!15578 = !DILocation(line: 2169, column: 23, scope: !15552)
!15579 = !DILocalVariable(name: "mat", scope: !15552, file: !3, line: 2169, type: !462)
!15580 = !DILocation(line: 2169, column: 34, scope: !15552)
!15581 = !DILocalVariable(name: "imat", scope: !15552, file: !3, line: 2169, type: !2674)
!15582 = !DILocation(line: 2169, column: 45, scope: !15552)
!15583 = !DILocalVariable(name: "xn", scope: !15552, file: !3, line: 2169, type: !45)
!15584 = !DILocation(line: 2169, column: 57, scope: !15552)
!15585 = !DILocalVariable(name: "yn", scope: !15552, file: !3, line: 2169, type: !45)
!15586 = !DILocation(line: 2169, column: 61, scope: !15552)
!15587 = !DILocalVariable(name: "zn", scope: !15552, file: !3, line: 2169, type: !45)
!15588 = !DILocation(line: 2169, column: 65, scope: !15552)
!15589 = !DILocalVariable(name: "a", scope: !15552, file: !3, line: 2170, type: !21)
!15590 = !DILocation(line: 2170, column: 6, scope: !15552)
!15591 = !DILocalVariable(name: "need_orco", scope: !15552, file: !3, line: 2170, type: !21)
!15592 = !DILocation(line: 2170, column: 9, scope: !15552)
!15593 = !DILocalVariable(name: "vlakindex", scope: !15552, file: !3, line: 2170, type: !21)
!15594 = !DILocation(line: 2170, column: 20, scope: !15552)
!15595 = !DILocalVariable(name: "index", scope: !15552, file: !3, line: 2170, type: !42)
!15596 = !DILocation(line: 2170, column: 32, scope: !15552)
!15597 = !DILocalVariable(name: "negative_scale", scope: !15552, file: !3, line: 2170, type: !21)
!15598 = !DILocation(line: 2170, column: 39, scope: !15552)
!15599 = !DILocalVariable(name: "dispbase", scope: !15552, file: !3, line: 2171, type: !59)
!15600 = !DILocation(line: 2171, column: 11, scope: !15552)
!15601 = !DILocation(line: 2173, column: 6, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2173, column: 6)
!15603 = !DILocation(line: 2173, column: 31, scope: !15602)
!15604 = !DILocation(line: 2173, column: 35, scope: !15602)
!15605 = !DILocation(line: 2173, column: 42, scope: !15602)
!15606 = !DILocation(line: 2173, column: 10, scope: !15602)
!15607 = !DILocation(line: 2173, column: 8, scope: !15602)
!15608 = !DILocation(line: 2173, column: 6, scope: !15552)
!15609 = !DILocation(line: 2174, column: 3, scope: !15602)
!15610 = !DILocation(line: 2176, column: 14, scope: !15552)
!15611 = !DILocation(line: 2176, column: 19, scope: !15552)
!15612 = !DILocation(line: 2176, column: 23, scope: !15552)
!15613 = !DILocation(line: 2176, column: 32, scope: !15552)
!15614 = !DILocation(line: 2176, column: 36, scope: !15552)
!15615 = !DILocation(line: 2176, column: 2, scope: !15552)
!15616 = !DILocation(line: 2177, column: 15, scope: !15552)
!15617 = !DILocation(line: 2177, column: 19, scope: !15552)
!15618 = !DILocation(line: 2177, column: 25, scope: !15552)
!15619 = !DILocation(line: 2177, column: 2, scope: !15552)
!15620 = !DILocation(line: 2178, column: 13, scope: !15552)
!15621 = !DILocation(line: 2178, column: 19, scope: !15552)
!15622 = !DILocation(line: 2178, column: 23, scope: !15552)
!15623 = !DILocation(line: 2178, column: 2, scope: !15552)
!15624 = !DILocation(line: 2179, column: 34, scope: !15552)
!15625 = !DILocation(line: 2179, column: 19, scope: !15552)
!15626 = !DILocation(line: 2179, column: 17, scope: !15552)
!15627 = !DILocation(line: 2181, column: 27, scope: !15552)
!15628 = !DILocation(line: 2181, column: 31, scope: !15552)
!15629 = !DILocation(line: 2181, column: 6, scope: !15552)
!15630 = !DILocation(line: 2181, column: 4, scope: !15552)
!15631 = !DILocation(line: 2183, column: 11, scope: !15552)
!15632 = !DILocation(line: 2184, column: 6, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2184, column: 6)
!15634 = !DILocation(line: 2184, column: 10, scope: !15633)
!15635 = !DILocation(line: 2184, column: 16, scope: !15633)
!15636 = !DILocation(line: 2184, column: 6, scope: !15552)
!15637 = !DILocation(line: 2185, column: 12, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15633, file: !3, line: 2184, column: 30)
!15639 = !DILocation(line: 2186, column: 2, scope: !15638)
!15640 = !DILocation(line: 2188, column: 36, scope: !15552)
!15641 = !DILocation(line: 2188, column: 40, scope: !15552)
!15642 = !DILocation(line: 2188, column: 50, scope: !15552)
!15643 = !DILocation(line: 2188, column: 54, scope: !15552)
!15644 = !DILocation(line: 2188, column: 61, scope: !15552)
!15645 = !DILocation(line: 2188, column: 2, scope: !15552)
!15646 = !DILocation(line: 2189, column: 15, scope: !15552)
!15647 = !DILocation(line: 2189, column: 6, scope: !15552)
!15648 = !DILocation(line: 2189, column: 4, scope: !15552)
!15649 = !DILocation(line: 2190, column: 6, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2190, column: 6)
!15651 = !DILocation(line: 2190, column: 9, scope: !15650)
!15652 = !DILocation(line: 2190, column: 6, scope: !15552)
!15653 = !DILocation(line: 2190, column: 18, scope: !15650)
!15654 = !DILocation(line: 2192, column: 8, scope: !15552)
!15655 = !DILocation(line: 2192, column: 12, scope: !15552)
!15656 = !DILocation(line: 2192, column: 6, scope: !15552)
!15657 = !DILocation(line: 2193, column: 8, scope: !15552)
!15658 = !DILocation(line: 2193, column: 12, scope: !15552)
!15659 = !DILocation(line: 2193, column: 6, scope: !15552)
!15660 = !DILocation(line: 2194, column: 6, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2194, column: 6)
!15662 = !DILocation(line: 2194, column: 6, scope: !15552)
!15663 = !DILocation(line: 2195, column: 25, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15661, file: !3, line: 2194, column: 17)
!15665 = !DILocation(line: 2195, column: 29, scope: !15664)
!15666 = !DILocation(line: 2195, column: 9, scope: !15664)
!15667 = !DILocation(line: 2195, column: 7, scope: !15664)
!15668 = !DILocation(line: 2197, column: 8, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15664, file: !3, line: 2197, column: 7)
!15670 = !DILocation(line: 2197, column: 7, scope: !15664)
!15671 = !DILocation(line: 2199, column: 30, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15669, file: !3, line: 2197, column: 14)
!15673 = !DILocation(line: 2199, column: 10, scope: !15672)
!15674 = !DILocation(line: 2199, column: 8, scope: !15672)
!15675 = !DILocation(line: 2200, column: 20, scope: !15672)
!15676 = !DILocation(line: 2200, column: 24, scope: !15672)
!15677 = !DILocation(line: 2200, column: 28, scope: !15672)
!15678 = !DILocation(line: 2200, column: 4, scope: !15672)
!15679 = !DILocation(line: 2201, column: 3, scope: !15672)
!15680 = !DILocation(line: 2202, column: 2, scope: !15664)
!15681 = !DILocation(line: 2204, column: 8, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2204, column: 2)
!15683 = !DILocation(line: 2204, column: 7, scope: !15682)
!15684 = !DILocation(line: 2204, column: 12, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15682, file: !3, line: 2204, column: 2)
!15686 = !DILocation(line: 2204, column: 14, scope: !15685)
!15687 = !DILocation(line: 2204, column: 18, scope: !15685)
!15688 = !DILocation(line: 2204, column: 13, scope: !15685)
!15689 = !DILocation(line: 2204, column: 2, scope: !15682)
!15690 = !DILocation(line: 2206, column: 25, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15685, file: !3, line: 2204, column: 45)
!15692 = !DILocation(line: 2206, column: 30, scope: !15691)
!15693 = !DILocation(line: 2206, column: 35, scope: !15691)
!15694 = !DILocation(line: 2206, column: 42, scope: !15691)
!15695 = !DILocation(line: 2206, column: 8, scope: !15691)
!15696 = !DILocation(line: 2206, column: 6, scope: !15691)
!15697 = !DILocation(line: 2207, column: 14, scope: !15691)
!15698 = !DILocation(line: 2207, column: 19, scope: !15691)
!15699 = !DILocation(line: 2207, column: 23, scope: !15691)
!15700 = !DILocation(line: 2207, column: 3, scope: !15691)
!15701 = !DILocation(line: 2208, column: 13, scope: !15691)
!15702 = !DILocation(line: 2208, column: 18, scope: !15691)
!15703 = !DILocation(line: 2208, column: 23, scope: !15691)
!15704 = !DILocation(line: 2208, column: 3, scope: !15691)
!15705 = !DILocation(line: 2211, column: 8, scope: !15691)
!15706 = !DILocation(line: 2211, column: 7, scope: !15691)
!15707 = !DILocation(line: 2211, column: 5, scope: !15691)
!15708 = !DILocation(line: 2212, column: 8, scope: !15691)
!15709 = !DILocation(line: 2212, column: 7, scope: !15691)
!15710 = !DILocation(line: 2212, column: 5, scope: !15691)
!15711 = !DILocation(line: 2213, column: 8, scope: !15691)
!15712 = !DILocation(line: 2213, column: 7, scope: !15691)
!15713 = !DILocation(line: 2213, column: 5, scope: !15691)
!15714 = !DILocation(line: 2216, column: 14, scope: !15691)
!15715 = !DILocation(line: 2216, column: 25, scope: !15691)
!15716 = !DILocation(line: 2216, column: 24, scope: !15691)
!15717 = !DILocation(line: 2216, column: 28, scope: !15691)
!15718 = !DILocation(line: 2216, column: 39, scope: !15691)
!15719 = !DILocation(line: 2216, column: 38, scope: !15691)
!15720 = !DILocation(line: 2216, column: 27, scope: !15691)
!15721 = !DILocation(line: 2216, column: 42, scope: !15691)
!15722 = !DILocation(line: 2216, column: 53, scope: !15691)
!15723 = !DILocation(line: 2216, column: 52, scope: !15691)
!15724 = !DILocation(line: 2216, column: 41, scope: !15691)
!15725 = !DILocation(line: 2216, column: 3, scope: !15691)
!15726 = !DILocation(line: 2216, column: 8, scope: !15691)
!15727 = !DILocation(line: 2216, column: 12, scope: !15691)
!15728 = !DILocation(line: 2217, column: 14, scope: !15691)
!15729 = !DILocation(line: 2217, column: 25, scope: !15691)
!15730 = !DILocation(line: 2217, column: 24, scope: !15691)
!15731 = !DILocation(line: 2217, column: 28, scope: !15691)
!15732 = !DILocation(line: 2217, column: 39, scope: !15691)
!15733 = !DILocation(line: 2217, column: 38, scope: !15691)
!15734 = !DILocation(line: 2217, column: 27, scope: !15691)
!15735 = !DILocation(line: 2217, column: 42, scope: !15691)
!15736 = !DILocation(line: 2217, column: 53, scope: !15691)
!15737 = !DILocation(line: 2217, column: 52, scope: !15691)
!15738 = !DILocation(line: 2217, column: 41, scope: !15691)
!15739 = !DILocation(line: 2217, column: 3, scope: !15691)
!15740 = !DILocation(line: 2217, column: 8, scope: !15691)
!15741 = !DILocation(line: 2217, column: 12, scope: !15691)
!15742 = !DILocation(line: 2218, column: 14, scope: !15691)
!15743 = !DILocation(line: 2218, column: 25, scope: !15691)
!15744 = !DILocation(line: 2218, column: 24, scope: !15691)
!15745 = !DILocation(line: 2218, column: 28, scope: !15691)
!15746 = !DILocation(line: 2218, column: 39, scope: !15691)
!15747 = !DILocation(line: 2218, column: 38, scope: !15691)
!15748 = !DILocation(line: 2218, column: 27, scope: !15691)
!15749 = !DILocation(line: 2218, column: 42, scope: !15691)
!15750 = !DILocation(line: 2218, column: 53, scope: !15691)
!15751 = !DILocation(line: 2218, column: 52, scope: !15691)
!15752 = !DILocation(line: 2218, column: 41, scope: !15691)
!15753 = !DILocation(line: 2218, column: 3, scope: !15691)
!15754 = !DILocation(line: 2218, column: 8, scope: !15691)
!15755 = !DILocation(line: 2218, column: 12, scope: !15691)
!15756 = !DILocation(line: 2219, column: 16, scope: !15691)
!15757 = !DILocation(line: 2219, column: 21, scope: !15691)
!15758 = !DILocation(line: 2219, column: 3, scope: !15691)
!15759 = !DILocation(line: 2222, column: 7, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15691, file: !3, line: 2222, column: 7)
!15761 = !DILocation(line: 2222, column: 7, scope: !15691)
!15762 = !DILocation(line: 2223, column: 15, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 2222, column: 18)
!15764 = !DILocation(line: 2223, column: 4, scope: !15763)
!15765 = !DILocation(line: 2223, column: 9, scope: !15763)
!15766 = !DILocation(line: 2223, column: 13, scope: !15763)
!15767 = !DILocation(line: 2224, column: 8, scope: !15763)
!15768 = !DILocation(line: 2225, column: 3, scope: !15763)
!15769 = !DILocation(line: 2226, column: 2, scope: !15691)
!15770 = !DILocation(line: 2204, column: 23, scope: !15685)
!15771 = !DILocation(line: 2204, column: 31, scope: !15685)
!15772 = !DILocation(line: 2204, column: 40, scope: !15685)
!15773 = !DILocation(line: 2204, column: 2, scope: !15685)
!15774 = distinct !{!15774, !15689, !15775}
!15775 = !DILocation(line: 2226, column: 2, scope: !15682)
!15776 = !DILocation(line: 2228, column: 9, scope: !15552)
!15777 = !DILocation(line: 2228, column: 13, scope: !15552)
!15778 = !DILocation(line: 2228, column: 7, scope: !15552)
!15779 = !DILocation(line: 2229, column: 8, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15552, file: !3, line: 2229, column: 2)
!15781 = !DILocation(line: 2229, column: 7, scope: !15780)
!15782 = !DILocation(line: 2229, column: 12, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15780, file: !3, line: 2229, column: 2)
!15784 = !DILocation(line: 2229, column: 14, scope: !15783)
!15785 = !DILocation(line: 2229, column: 18, scope: !15783)
!15786 = !DILocation(line: 2229, column: 13, scope: !15783)
!15787 = !DILocation(line: 2229, column: 2, scope: !15780)
!15788 = !DILocation(line: 2231, column: 25, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15783, file: !3, line: 2229, column: 40)
!15790 = !DILocation(line: 2231, column: 30, scope: !15789)
!15791 = !DILocation(line: 2231, column: 35, scope: !15789)
!15792 = !DILocation(line: 2231, column: 42, scope: !15789)
!15793 = !DILocation(line: 2231, column: 8, scope: !15789)
!15794 = !DILocation(line: 2231, column: 6, scope: !15789)
!15795 = !DILocation(line: 2232, column: 29, scope: !15789)
!15796 = !DILocation(line: 2232, column: 34, scope: !15789)
!15797 = !DILocation(line: 2232, column: 12, scope: !15789)
!15798 = !DILocation(line: 2232, column: 3, scope: !15789)
!15799 = !DILocation(line: 2232, column: 8, scope: !15789)
!15800 = !DILocation(line: 2232, column: 10, scope: !15789)
!15801 = !DILocation(line: 2233, column: 29, scope: !15789)
!15802 = !DILocation(line: 2233, column: 34, scope: !15789)
!15803 = !DILocation(line: 2233, column: 12, scope: !15789)
!15804 = !DILocation(line: 2233, column: 3, scope: !15789)
!15805 = !DILocation(line: 2233, column: 8, scope: !15789)
!15806 = !DILocation(line: 2233, column: 10, scope: !15789)
!15807 = !DILocation(line: 2234, column: 29, scope: !15789)
!15808 = !DILocation(line: 2234, column: 34, scope: !15789)
!15809 = !DILocation(line: 2234, column: 12, scope: !15789)
!15810 = !DILocation(line: 2234, column: 3, scope: !15789)
!15811 = !DILocation(line: 2234, column: 8, scope: !15789)
!15812 = !DILocation(line: 2234, column: 10, scope: !15789)
!15813 = !DILocation(line: 2235, column: 3, scope: !15789)
!15814 = !DILocation(line: 2235, column: 8, scope: !15789)
!15815 = !DILocation(line: 2235, column: 11, scope: !15789)
!15816 = !DILocation(line: 2237, column: 7, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15789, file: !3, line: 2237, column: 7)
!15818 = !DILocation(line: 2237, column: 7, scope: !15789)
!15819 = !DILocation(line: 2238, column: 18, scope: !15817)
!15820 = !DILocation(line: 2238, column: 23, scope: !15817)
!15821 = !DILocation(line: 2238, column: 26, scope: !15817)
!15822 = !DILocation(line: 2238, column: 31, scope: !15817)
!15823 = !DILocation(line: 2238, column: 35, scope: !15817)
!15824 = !DILocation(line: 2238, column: 39, scope: !15817)
!15825 = !DILocation(line: 2238, column: 44, scope: !15817)
!15826 = !DILocation(line: 2238, column: 48, scope: !15817)
!15827 = !DILocation(line: 2238, column: 52, scope: !15817)
!15828 = !DILocation(line: 2238, column: 57, scope: !15817)
!15829 = !DILocation(line: 2238, column: 61, scope: !15817)
!15830 = !DILocation(line: 2238, column: 4, scope: !15817)
!15831 = !DILocation(line: 2240, column: 18, scope: !15817)
!15832 = !DILocation(line: 2240, column: 23, scope: !15817)
!15833 = !DILocation(line: 2240, column: 26, scope: !15817)
!15834 = !DILocation(line: 2240, column: 31, scope: !15817)
!15835 = !DILocation(line: 2240, column: 35, scope: !15817)
!15836 = !DILocation(line: 2240, column: 39, scope: !15817)
!15837 = !DILocation(line: 2240, column: 44, scope: !15817)
!15838 = !DILocation(line: 2240, column: 48, scope: !15817)
!15839 = !DILocation(line: 2240, column: 52, scope: !15817)
!15840 = !DILocation(line: 2240, column: 57, scope: !15817)
!15841 = !DILocation(line: 2240, column: 61, scope: !15817)
!15842 = !DILocation(line: 2240, column: 4, scope: !15817)
!15843 = !DILocation(line: 2242, column: 13, scope: !15789)
!15844 = !DILocation(line: 2242, column: 3, scope: !15789)
!15845 = !DILocation(line: 2242, column: 8, scope: !15789)
!15846 = !DILocation(line: 2242, column: 11, scope: !15789)
!15847 = !DILocation(line: 2243, column: 3, scope: !15789)
!15848 = !DILocation(line: 2243, column: 8, scope: !15789)
!15849 = !DILocation(line: 2243, column: 12, scope: !15789)
!15850 = !DILocation(line: 2244, column: 3, scope: !15789)
!15851 = !DILocation(line: 2244, column: 8, scope: !15789)
!15852 = !DILocation(line: 2244, column: 10, scope: !15789)
!15853 = !DILocation(line: 2247, column: 7, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15789, file: !3, line: 2247, column: 7)
!15855 = !DILocation(line: 2247, column: 16, scope: !15854)
!15856 = !DILocation(line: 2247, column: 19, scope: !15854)
!15857 = !DILocation(line: 2247, column: 29, scope: !15854)
!15858 = !DILocation(line: 2247, column: 27, scope: !15854)
!15859 = !DILocation(line: 2247, column: 7, scope: !15789)
!15860 = !DILocation(line: 2248, column: 27, scope: !15861)
!15861 = distinct !DILexicalBlock(scope: !15854, file: !3, line: 2247, column: 39)
!15862 = !DILocation(line: 2248, column: 32, scope: !15861)
!15863 = !DILocation(line: 2248, column: 37, scope: !15861)
!15864 = !DILocation(line: 2248, column: 44, scope: !15861)
!15865 = !DILocation(line: 2248, column: 10, scope: !15861)
!15866 = !DILocation(line: 2248, column: 8, scope: !15861)
!15867 = !DILocation(line: 2249, column: 15, scope: !15861)
!15868 = !DILocation(line: 2249, column: 21, scope: !15861)
!15869 = !DILocation(line: 2249, column: 13, scope: !15861)
!15870 = !DILocation(line: 2250, column: 5, scope: !15861)
!15871 = !DILocation(line: 2250, column: 12, scope: !15861)
!15872 = !DILocation(line: 2250, column: 11, scope: !15861)
!15873 = !DILocation(line: 2251, column: 17, scope: !15861)
!15874 = !DILocation(line: 2251, column: 4, scope: !15861)
!15875 = !DILocation(line: 2251, column: 10, scope: !15861)
!15876 = !DILocation(line: 2251, column: 15, scope: !15861)
!15877 = !DILocation(line: 2252, column: 14, scope: !15861)
!15878 = !DILocation(line: 2252, column: 20, scope: !15861)
!15879 = !DILocation(line: 2252, column: 4, scope: !15861)
!15880 = !DILocation(line: 2252, column: 10, scope: !15861)
!15881 = !DILocation(line: 2252, column: 12, scope: !15861)
!15882 = !DILocation(line: 2253, column: 31, scope: !15861)
!15883 = !DILocation(line: 2253, column: 36, scope: !15861)
!15884 = !DILocation(line: 2253, column: 14, scope: !15861)
!15885 = !DILocation(line: 2253, column: 4, scope: !15861)
!15886 = !DILocation(line: 2253, column: 10, scope: !15861)
!15887 = !DILocation(line: 2253, column: 12, scope: !15861)
!15888 = !DILocation(line: 2254, column: 8, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15861, file: !3, line: 2254, column: 8)
!15890 = !DILocation(line: 2254, column: 8, scope: !15861)
!15891 = !DILocation(line: 2255, column: 19, scope: !15889)
!15892 = !DILocation(line: 2255, column: 25, scope: !15889)
!15893 = !DILocation(line: 2255, column: 28, scope: !15889)
!15894 = !DILocation(line: 2255, column: 34, scope: !15889)
!15895 = !DILocation(line: 2255, column: 38, scope: !15889)
!15896 = !DILocation(line: 2255, column: 42, scope: !15889)
!15897 = !DILocation(line: 2255, column: 48, scope: !15889)
!15898 = !DILocation(line: 2255, column: 52, scope: !15889)
!15899 = !DILocation(line: 2255, column: 56, scope: !15889)
!15900 = !DILocation(line: 2255, column: 62, scope: !15889)
!15901 = !DILocation(line: 2255, column: 66, scope: !15889)
!15902 = !DILocation(line: 2255, column: 5, scope: !15889)
!15903 = !DILocation(line: 2257, column: 19, scope: !15889)
!15904 = !DILocation(line: 2257, column: 25, scope: !15889)
!15905 = !DILocation(line: 2257, column: 28, scope: !15889)
!15906 = !DILocation(line: 2257, column: 34, scope: !15889)
!15907 = !DILocation(line: 2257, column: 38, scope: !15889)
!15908 = !DILocation(line: 2257, column: 42, scope: !15889)
!15909 = !DILocation(line: 2257, column: 48, scope: !15889)
!15910 = !DILocation(line: 2257, column: 52, scope: !15889)
!15911 = !DILocation(line: 2257, column: 56, scope: !15889)
!15912 = !DILocation(line: 2257, column: 62, scope: !15889)
!15913 = !DILocation(line: 2257, column: 66, scope: !15889)
!15914 = !DILocation(line: 2257, column: 5, scope: !15889)
!15915 = !DILocation(line: 2258, column: 3, scope: !15861)
!15916 = !DILocation(line: 2259, column: 2, scope: !15789)
!15917 = !DILocation(line: 2229, column: 26, scope: !15783)
!15918 = !DILocation(line: 2229, column: 35, scope: !15783)
!15919 = !DILocation(line: 2229, column: 2, scope: !15783)
!15920 = distinct !{!15920, !15787, !15921}
!15921 = !DILocation(line: 2259, column: 2, scope: !15780)
!15922 = !DILocation(line: 2262, column: 2, scope: !15552)
!15923 = !DILocation(line: 2263, column: 1, scope: !15552)
!15924 = distinct !DISubprogram(name: "finalize_render_object", scope: !3, file: !3, line: 4333, type: !10646, scopeLine: 4334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!15925 = !DILocalVariable(name: "re", arg: 1, scope: !15924, file: !3, line: 4333, type: !6)
!15926 = !DILocation(line: 4333, column: 44, scope: !15924)
!15927 = !DILocalVariable(name: "obr", arg: 2, scope: !15924, file: !3, line: 4333, type: !3063)
!15928 = !DILocation(line: 4333, column: 59, scope: !15924)
!15929 = !DILocalVariable(name: "timeoffset", arg: 3, scope: !15924, file: !3, line: 4333, type: !21)
!15930 = !DILocation(line: 4333, column: 68, scope: !15924)
!15931 = !DILocalVariable(name: "ob", scope: !15924, file: !3, line: 4335, type: !3236)
!15932 = !DILocation(line: 4335, column: 10, scope: !15924)
!15933 = !DILocation(line: 4335, column: 14, scope: !15924)
!15934 = !DILocation(line: 4335, column: 19, scope: !15924)
!15935 = !DILocalVariable(name: "ver", scope: !15924, file: !3, line: 4336, type: !4179)
!15936 = !DILocation(line: 4336, column: 11, scope: !15924)
!15937 = !DILocalVariable(name: "strand", scope: !15924, file: !3, line: 4337, type: !7489)
!15938 = !DILocation(line: 4337, column: 13, scope: !15924)
!15939 = !DILocalVariable(name: "sbound", scope: !15924, file: !3, line: 4338, type: !10995)
!15940 = !DILocation(line: 4338, column: 15, scope: !15924)
!15941 = !DILocalVariable(name: "min", scope: !15924, file: !3, line: 4339, type: !188)
!15942 = !DILocation(line: 4339, column: 8, scope: !15924)
!15943 = !DILocalVariable(name: "max", scope: !15924, file: !3, line: 4339, type: !188)
!15944 = !DILocation(line: 4339, column: 16, scope: !15924)
!15945 = !DILocalVariable(name: "smin", scope: !15924, file: !3, line: 4339, type: !188)
!15946 = !DILocation(line: 4339, column: 24, scope: !15924)
!15947 = !DILocalVariable(name: "smax", scope: !15924, file: !3, line: 4339, type: !188)
!15948 = !DILocation(line: 4339, column: 33, scope: !15924)
!15949 = !DILocalVariable(name: "a", scope: !15924, file: !3, line: 4340, type: !21)
!15950 = !DILocation(line: 4340, column: 6, scope: !15924)
!15951 = !DILocalVariable(name: "b", scope: !15924, file: !3, line: 4340, type: !21)
!15952 = !DILocation(line: 4340, column: 9, scope: !15924)
!15953 = !DILocation(line: 4342, column: 6, scope: !15954)
!15954 = distinct !DILexicalBlock(scope: !15924, file: !3, line: 4342, column: 6)
!15955 = !DILocation(line: 4342, column: 11, scope: !15954)
!15956 = !DILocation(line: 4342, column: 19, scope: !15954)
!15957 = !DILocation(line: 4342, column: 22, scope: !15954)
!15958 = !DILocation(line: 4342, column: 27, scope: !15954)
!15959 = !DILocation(line: 4342, column: 35, scope: !15954)
!15960 = !DILocation(line: 4342, column: 38, scope: !15954)
!15961 = !DILocation(line: 4342, column: 43, scope: !15954)
!15962 = !DILocation(line: 4342, column: 51, scope: !15954)
!15963 = !DILocation(line: 4342, column: 54, scope: !15954)
!15964 = !DILocation(line: 4342, column: 59, scope: !15954)
!15965 = !DILocation(line: 4342, column: 6, scope: !15924)
!15966 = !DILocation(line: 4346, column: 7, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 4346, column: 7)
!15968 = distinct !DILexicalBlock(scope: !15954, file: !3, line: 4342, column: 70)
!15969 = !DILocation(line: 4346, column: 11, scope: !15967)
!15970 = !DILocation(line: 4346, column: 15, scope: !15967)
!15971 = !DILocation(line: 4346, column: 25, scope: !15967)
!15972 = !DILocation(line: 4346, column: 46, scope: !15967)
!15973 = !DILocation(line: 4346, column: 50, scope: !15967)
!15974 = !DILocation(line: 4346, column: 28, scope: !15967)
!15975 = !DILocation(line: 4346, column: 7, scope: !15968)
!15976 = !DILocation(line: 4347, column: 13, scope: !15967)
!15977 = !DILocation(line: 4347, column: 17, scope: !15967)
!15978 = !DILocation(line: 4347, column: 4, scope: !15967)
!15979 = !DILocation(line: 4349, column: 8, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 4349, column: 7)
!15981 = !DILocation(line: 4349, column: 7, scope: !15968)
!15982 = !DILocation(line: 4352, column: 4, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 4349, column: 20)
!15984 = !DILocation(line: 4352, column: 8, scope: !15983)
!15985 = !DILocation(line: 4352, column: 18, scope: !15983)
!15986 = !DILocation(line: 4353, column: 9, scope: !15987)
!15987 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 4353, column: 8)
!15988 = !DILocation(line: 4353, column: 13, scope: !15987)
!15989 = !DILocation(line: 4353, column: 15, scope: !15987)
!15990 = !DILocation(line: 4353, column: 20, scope: !15987)
!15991 = !DILocation(line: 4353, column: 34, scope: !15987)
!15992 = !DILocation(line: 4353, column: 38, scope: !15987)
!15993 = !DILocation(line: 4353, column: 42, scope: !15987)
!15994 = !DILocation(line: 4353, column: 44, scope: !15987)
!15995 = !DILocation(line: 4353, column: 49, scope: !15987)
!15996 = !DILocation(line: 4353, column: 8, scope: !15983)
!15997 = !DILocation(line: 4354, column: 25, scope: !15987)
!15998 = !DILocation(line: 4354, column: 5, scope: !15987)
!15999 = !DILocation(line: 4356, column: 8, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 4356, column: 8)
!16001 = !DILocation(line: 4356, column: 12, scope: !16000)
!16002 = !DILocation(line: 4356, column: 17, scope: !16000)
!16003 = !DILocation(line: 4356, column: 28, scope: !16000)
!16004 = !DILocation(line: 4356, column: 31, scope: !16000)
!16005 = !DILocation(line: 4356, column: 35, scope: !16000)
!16006 = !DILocation(line: 4356, column: 37, scope: !16000)
!16007 = !DILocation(line: 4356, column: 53, scope: !16000)
!16008 = !DILocation(line: 4356, column: 8, scope: !15983)
!16009 = !DILocation(line: 4358, column: 17, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 4356, column: 59)
!16011 = !DILocation(line: 4358, column: 22, scope: !16010)
!16012 = !DILocation(line: 4358, column: 26, scope: !16010)
!16013 = !DILocation(line: 4358, column: 28, scope: !16010)
!16014 = !DILocation(line: 4358, column: 5, scope: !16010)
!16015 = !DILocation(line: 4359, column: 4, scope: !16010)
!16016 = !DILocation(line: 4360, column: 36, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16000, file: !3, line: 4360, column: 13)
!16018 = !DILocation(line: 4360, column: 40, scope: !16017)
!16019 = !DILocation(line: 4360, column: 47, scope: !16017)
!16020 = !DILocation(line: 4360, column: 13, scope: !16017)
!16021 = !DILocation(line: 4360, column: 13, scope: !16000)
!16022 = !DILocation(line: 4361, column: 17, scope: !16017)
!16023 = !DILocation(line: 4361, column: 5, scope: !16017)
!16024 = !DILocation(line: 4363, column: 10, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 4363, column: 9)
!16026 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 4362, column: 9)
!16027 = !DILocation(line: 4363, column: 14, scope: !16025)
!16028 = !DILocation(line: 4363, column: 16, scope: !16025)
!16029 = !DILocation(line: 4363, column: 21, scope: !16025)
!16030 = !DILocation(line: 4363, column: 34, scope: !16025)
!16031 = !DILocation(line: 4363, column: 37, scope: !16025)
!16032 = !DILocation(line: 4363, column: 41, scope: !16025)
!16033 = !DILocation(line: 4363, column: 43, scope: !16025)
!16034 = !DILocation(line: 4363, column: 57, scope: !16025)
!16035 = !DILocation(line: 0, scope: !16025)
!16036 = !DILocation(line: 4363, column: 84, scope: !16025)
!16037 = !DILocation(line: 4363, column: 9, scope: !16026)
!16038 = !DILocation(line: 4364, column: 27, scope: !16025)
!16039 = !DILocation(line: 4364, column: 6, scope: !16025)
!16040 = !DILocation(line: 4367, column: 30, scope: !15983)
!16041 = !DILocation(line: 4367, column: 34, scope: !15983)
!16042 = !DILocation(line: 4367, column: 4, scope: !15983)
!16043 = !DILocation(line: 4370, column: 4, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 4370, column: 4)
!16045 = !DILocation(line: 4371, column: 10, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 4371, column: 4)
!16047 = !DILocation(line: 4371, column: 9, scope: !16046)
!16048 = !DILocation(line: 4371, column: 14, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 4371, column: 4)
!16050 = !DILocation(line: 4371, column: 16, scope: !16049)
!16051 = !DILocation(line: 4371, column: 21, scope: !16049)
!16052 = !DILocation(line: 4371, column: 15, scope: !16049)
!16053 = !DILocation(line: 4371, column: 4, scope: !16046)
!16054 = !DILocation(line: 4372, column: 10, scope: !16055)
!16055 = distinct !DILexicalBlock(scope: !16056, file: !3, line: 4372, column: 9)
!16056 = distinct !DILexicalBlock(scope: !16049, file: !3, line: 4371, column: 35)
!16057 = !DILocation(line: 4372, column: 12, scope: !16055)
!16058 = !DILocation(line: 4372, column: 18, scope: !16055)
!16059 = !DILocation(line: 4372, column: 9, scope: !16056)
!16060 = !DILocation(line: 4372, column: 28, scope: !16055)
!16061 = !DILocation(line: 4372, column: 33, scope: !16055)
!16062 = !DILocation(line: 4372, column: 43, scope: !16055)
!16063 = !DILocation(line: 4372, column: 44, scope: !16055)
!16064 = !DILocation(line: 4372, column: 49, scope: !16055)
!16065 = !DILocation(line: 4372, column: 26, scope: !16055)
!16066 = !DILocation(line: 4372, column: 23, scope: !16055)
!16067 = !DILocation(line: 4373, column: 13, scope: !16055)
!16068 = !DILocation(line: 4375, column: 20, scope: !16056)
!16069 = !DILocation(line: 4375, column: 25, scope: !16056)
!16070 = !DILocation(line: 4375, column: 30, scope: !16056)
!16071 = !DILocation(line: 4375, column: 35, scope: !16056)
!16072 = !DILocation(line: 4375, column: 5, scope: !16056)
!16073 = !DILocation(line: 4376, column: 4, scope: !16056)
!16074 = !DILocation(line: 4371, column: 31, scope: !16049)
!16075 = !DILocation(line: 4371, column: 4, scope: !16049)
!16076 = distinct !{!16076, !16053, !16077}
!16077 = !DILocation(line: 4376, column: 4, scope: !16046)
!16078 = !DILocation(line: 4378, column: 8, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 4378, column: 8)
!16080 = !DILocation(line: 4378, column: 13, scope: !16079)
!16081 = !DILocation(line: 4378, column: 8, scope: !15983)
!16082 = !DILocalVariable(name: "width", scope: !16083, file: !3, line: 4379, type: !45)
!16083 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 4378, column: 24)
!16084 = !DILocation(line: 4379, column: 11, scope: !16083)
!16085 = !DILocation(line: 4382, column: 9, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16083, file: !3, line: 4382, column: 9)
!16087 = !DILocation(line: 4382, column: 14, scope: !16086)
!16088 = !DILocation(line: 4382, column: 25, scope: !16086)
!16089 = !DILocation(line: 4382, column: 30, scope: !16086)
!16090 = !DILocation(line: 4382, column: 9, scope: !16083)
!16091 = !DILocation(line: 4383, column: 40, scope: !16086)
!16092 = !DILocation(line: 4383, column: 45, scope: !16086)
!16093 = !DILocation(line: 4383, column: 56, scope: !16086)
!16094 = !DILocation(line: 4383, column: 60, scope: !16086)
!16095 = !DILocation(line: 4383, column: 72, scope: !16086)
!16096 = !DILocation(line: 4383, column: 77, scope: !16086)
!16097 = !DILocation(line: 4383, column: 88, scope: !16086)
!16098 = !DILocation(line: 4383, column: 92, scope: !16086)
!16099 = !DILocation(line: 4383, column: 33, scope: !16086)
!16100 = !DILocation(line: 4383, column: 6, scope: !16086)
!16101 = !DILocation(line: 4383, column: 11, scope: !16086)
!16102 = !DILocation(line: 4383, column: 22, scope: !16086)
!16103 = !DILocation(line: 4383, column: 31, scope: !16086)
!16104 = !DILocation(line: 4385, column: 6, scope: !16086)
!16105 = !DILocation(line: 4385, column: 11, scope: !16086)
!16106 = !DILocation(line: 4385, column: 22, scope: !16086)
!16107 = !DILocation(line: 4385, column: 30, scope: !16086)
!16108 = !DILocation(line: 4387, column: 12, scope: !16083)
!16109 = !DILocation(line: 4387, column: 17, scope: !16083)
!16110 = !DILocation(line: 4387, column: 28, scope: !16083)
!16111 = !DILocation(line: 4387, column: 10, scope: !16083)
!16112 = !DILocation(line: 4388, column: 13, scope: !16083)
!16113 = !DILocation(line: 4388, column: 18, scope: !16083)
!16114 = !DILocation(line: 4388, column: 29, scope: !16083)
!16115 = !DILocation(line: 4388, column: 11, scope: !16083)
!16116 = !DILocation(line: 4389, column: 11, scope: !16117)
!16117 = distinct !DILexicalBlock(scope: !16083, file: !3, line: 4389, column: 5)
!16118 = !DILocation(line: 4389, column: 10, scope: !16117)
!16119 = !DILocation(line: 4389, column: 15, scope: !16120)
!16120 = distinct !DILexicalBlock(scope: !16117, file: !3, line: 4389, column: 5)
!16121 = !DILocation(line: 4389, column: 17, scope: !16120)
!16122 = !DILocation(line: 4389, column: 22, scope: !16120)
!16123 = !DILocation(line: 4389, column: 33, scope: !16120)
!16124 = !DILocation(line: 4389, column: 16, scope: !16120)
!16125 = !DILocation(line: 4389, column: 5, scope: !16117)
!16126 = !DILocation(line: 4391, column: 6, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 4391, column: 6)
!16128 = distinct !DILexicalBlock(scope: !16120, file: !3, line: 4389, column: 58)
!16129 = !DILocation(line: 4393, column: 13, scope: !16130)
!16130 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 4393, column: 6)
!16131 = !DILocation(line: 4393, column: 21, scope: !16130)
!16132 = !DILocation(line: 4393, column: 12, scope: !16130)
!16133 = !DILocation(line: 4393, column: 11, scope: !16130)
!16134 = !DILocation(line: 4393, column: 28, scope: !16135)
!16135 = distinct !DILexicalBlock(scope: !16130, file: !3, line: 4393, column: 6)
!16136 = !DILocation(line: 4393, column: 30, scope: !16135)
!16137 = !DILocation(line: 4393, column: 38, scope: !16135)
!16138 = !DILocation(line: 4393, column: 29, scope: !16135)
!16139 = !DILocation(line: 4393, column: 6, scope: !16130)
!16140 = !DILocation(line: 4394, column: 34, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16135, file: !3, line: 4393, column: 48)
!16142 = !DILocation(line: 4394, column: 39, scope: !16141)
!16143 = !DILocation(line: 4394, column: 15, scope: !16141)
!16144 = !DILocation(line: 4394, column: 13, scope: !16141)
!16145 = !DILocation(line: 4395, column: 21, scope: !16141)
!16146 = !DILocation(line: 4395, column: 29, scope: !16141)
!16147 = !DILocation(line: 4395, column: 35, scope: !16141)
!16148 = !DILocation(line: 4395, column: 41, scope: !16141)
!16149 = !DILocation(line: 4395, column: 7, scope: !16141)
!16150 = !DILocation(line: 4396, column: 6, scope: !16141)
!16151 = !DILocation(line: 4393, column: 44, scope: !16135)
!16152 = !DILocation(line: 4393, column: 6, scope: !16135)
!16153 = distinct !{!16153, !16139, !16154}
!16154 = !DILocation(line: 4396, column: 6, scope: !16130)
!16155 = !DILocation(line: 4398, column: 17, scope: !16128)
!16156 = !DILocation(line: 4398, column: 25, scope: !16128)
!16157 = !DILocation(line: 4398, column: 38, scope: !16128)
!16158 = !DILocation(line: 4398, column: 6, scope: !16128)
!16159 = !DILocation(line: 4399, column: 17, scope: !16128)
!16160 = !DILocation(line: 4399, column: 25, scope: !16128)
!16161 = !DILocation(line: 4399, column: 38, scope: !16128)
!16162 = !DILocation(line: 4399, column: 6, scope: !16128)
!16163 = !DILocation(line: 4401, column: 21, scope: !16128)
!16164 = !DILocation(line: 4401, column: 26, scope: !16128)
!16165 = !DILocation(line: 4401, column: 31, scope: !16128)
!16166 = !DILocation(line: 4401, column: 6, scope: !16128)
!16167 = !DILocation(line: 4402, column: 21, scope: !16128)
!16168 = !DILocation(line: 4402, column: 26, scope: !16128)
!16169 = !DILocation(line: 4402, column: 31, scope: !16128)
!16170 = !DILocation(line: 4402, column: 6, scope: !16128)
!16171 = !DILocation(line: 4403, column: 5, scope: !16128)
!16172 = !DILocation(line: 4389, column: 44, scope: !16120)
!16173 = !DILocation(line: 4389, column: 54, scope: !16120)
!16174 = !DILocation(line: 4389, column: 5, scope: !16120)
!16175 = distinct !{!16175, !16125, !16176}
!16176 = !DILocation(line: 4403, column: 5, scope: !16117)
!16177 = !DILocation(line: 4404, column: 4, scope: !16083)
!16178 = !DILocation(line: 4406, column: 15, scope: !15983)
!16179 = !DILocation(line: 4406, column: 20, scope: !15983)
!16180 = !DILocation(line: 4406, column: 33, scope: !15983)
!16181 = !DILocation(line: 4406, column: 4, scope: !15983)
!16182 = !DILocation(line: 4407, column: 15, scope: !15983)
!16183 = !DILocation(line: 4407, column: 20, scope: !15983)
!16184 = !DILocation(line: 4407, column: 33, scope: !15983)
!16185 = !DILocation(line: 4407, column: 4, scope: !15983)
!16186 = !DILocation(line: 4408, column: 3, scope: !15983)
!16187 = !DILocation(line: 4409, column: 2, scope: !15968)
!16188 = !DILocation(line: 4410, column: 1, scope: !15924)
!16189 = distinct !DISubprogram(name: "get_object_orco", scope: !3, file: !3, line: 640, type: !16190, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16190 = !DISubroutineType(types: !16191)
!16191 = !{!44, !6, !64}
!16192 = !DILocalVariable(name: "re", arg: 1, scope: !16189, file: !3, line: 640, type: !6)
!16193 = !DILocation(line: 640, column: 39, scope: !16189)
!16194 = !DILocalVariable(name: "ob", arg: 2, scope: !16189, file: !3, line: 640, type: !64)
!16195 = !DILocation(line: 640, column: 49, scope: !16189)
!16196 = !DILocation(line: 642, column: 7, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16189, file: !3, line: 642, column: 6)
!16198 = !DILocation(line: 642, column: 11, scope: !16197)
!16199 = !DILocation(line: 642, column: 6, scope: !16189)
!16200 = !DILocation(line: 643, column: 3, scope: !16201)
!16201 = distinct !DILexicalBlock(scope: !16197, file: !3, line: 642, column: 22)
!16202 = !DILocation(line: 646, column: 26, scope: !16189)
!16203 = !DILocation(line: 646, column: 30, scope: !16189)
!16204 = !DILocation(line: 646, column: 41, scope: !16189)
!16205 = !DILocation(line: 646, column: 9, scope: !16189)
!16206 = !DILocation(line: 646, column: 2, scope: !16189)
!16207 = !DILocation(line: 647, column: 1, scope: !16189)
!16208 = distinct !DISubprogram(name: "set_object_orco", scope: !3, file: !3, line: 649, type: !16209, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16209 = !DISubroutineType(types: !16210)
!16210 = !{null, !6, !64, !44}
!16211 = !DILocalVariable(name: "re", arg: 1, scope: !16208, file: !3, line: 649, type: !6)
!16212 = !DILocation(line: 649, column: 37, scope: !16208)
!16213 = !DILocalVariable(name: "ob", arg: 2, scope: !16208, file: !3, line: 649, type: !64)
!16214 = !DILocation(line: 649, column: 47, scope: !16208)
!16215 = !DILocalVariable(name: "orco", arg: 3, scope: !16208, file: !3, line: 649, type: !44)
!16216 = !DILocation(line: 649, column: 58, scope: !16208)
!16217 = !DILocation(line: 651, column: 7, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16208, file: !3, line: 651, column: 6)
!16219 = !DILocation(line: 651, column: 11, scope: !16218)
!16220 = !DILocation(line: 651, column: 6, scope: !16208)
!16221 = !DILocation(line: 652, column: 19, scope: !16218)
!16222 = !DILocation(line: 652, column: 3, scope: !16218)
!16223 = !DILocation(line: 652, column: 7, scope: !16218)
!16224 = !DILocation(line: 652, column: 17, scope: !16218)
!16225 = !DILocation(line: 654, column: 19, scope: !16208)
!16226 = !DILocation(line: 654, column: 23, scope: !16208)
!16227 = !DILocation(line: 654, column: 34, scope: !16208)
!16228 = !DILocation(line: 654, column: 38, scope: !16208)
!16229 = !DILocation(line: 654, column: 2, scope: !16208)
!16230 = !DILocation(line: 655, column: 1, scope: !16208)
!16231 = distinct !DISubprogram(name: "max_ii", scope: !10503, file: !10503, line: 215, type: !16232, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16232 = !DISubroutineType(types: !16233)
!16233 = !{!21, !21, !21}
!16234 = !DILocalVariable(name: "a", arg: 1, scope: !16231, file: !10503, line: 215, type: !21)
!16235 = !DILocation(line: 215, column: 24, scope: !16231)
!16236 = !DILocalVariable(name: "b", arg: 2, scope: !16231, file: !10503, line: 215, type: !21)
!16237 = !DILocation(line: 215, column: 31, scope: !16231)
!16238 = !DILocation(line: 217, column: 10, scope: !16231)
!16239 = !DILocation(line: 217, column: 14, scope: !16231)
!16240 = !DILocation(line: 217, column: 12, scope: !16231)
!16241 = !DILocation(line: 217, column: 9, scope: !16231)
!16242 = !DILocation(line: 217, column: 19, scope: !16231)
!16243 = !DILocation(line: 217, column: 23, scope: !16231)
!16244 = !DILocation(line: 217, column: 2, scope: !16231)
!16245 = distinct !DISubprogram(name: "DM_origindex_mface_mpoly", scope: !2218, file: !2218, line: 767, type: !16246, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16246 = !DISubroutineType(types: !16247)
!16247 = !{!21, !11085, !11085, !7772}
!16248 = !DILocalVariable(name: "index_mf_to_mpoly", arg: 1, scope: !16245, file: !2218, line: 767, type: !11085)
!16249 = !DILocation(line: 767, column: 52, scope: !16245)
!16250 = !DILocalVariable(name: "index_mp_to_orig", arg: 2, scope: !16245, file: !2218, line: 767, type: !11085)
!16251 = !DILocation(line: 767, column: 82, scope: !16245)
!16252 = !DILocalVariable(name: "i", arg: 3, scope: !16245, file: !2218, line: 767, type: !7772)
!16253 = !DILocation(line: 767, column: 110, scope: !16245)
!16254 = !DILocalVariable(name: "j", scope: !16245, file: !2218, line: 769, type: !7772)
!16255 = !DILocation(line: 769, column: 12, scope: !16245)
!16256 = !DILocation(line: 769, column: 16, scope: !16245)
!16257 = !DILocation(line: 769, column: 34, scope: !16245)
!16258 = !DILocation(line: 770, column: 10, scope: !16245)
!16259 = !DILocation(line: 770, column: 12, scope: !16245)
!16260 = !DILocation(line: 770, column: 9, scope: !16245)
!16261 = !DILocation(line: 770, column: 34, scope: !16245)
!16262 = !DILocation(line: 770, column: 53, scope: !16245)
!16263 = !DILocation(line: 770, column: 70, scope: !16245)
!16264 = !DILocation(line: 770, column: 75, scope: !16245)
!16265 = !DILocation(line: 770, column: 2, scope: !16245)
!16266 = distinct !DISubprogram(name: "get_particle_uvco_mcol", scope: !3, file: !3, line: 1241, type: !16267, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16267 = !DISubroutineType(types: !16268)
!16268 = !{null, !23, !2263, !44, !21, !4186}
!16269 = !DILocalVariable(name: "from", arg: 1, scope: !16266, file: !3, line: 1241, type: !23)
!16270 = !DILocation(line: 1241, column: 42, scope: !16266)
!16271 = !DILocalVariable(name: "dm", arg: 2, scope: !16266, file: !3, line: 1241, type: !2263)
!16272 = !DILocation(line: 1241, column: 61, scope: !16266)
!16273 = !DILocalVariable(name: "fuv", arg: 3, scope: !16266, file: !3, line: 1241, type: !44)
!16274 = !DILocation(line: 1241, column: 72, scope: !16266)
!16275 = !DILocalVariable(name: "num", arg: 4, scope: !16266, file: !3, line: 1241, type: !21)
!16276 = !DILocation(line: 1241, column: 81, scope: !16266)
!16277 = !DILocalVariable(name: "sd", arg: 5, scope: !16266, file: !3, line: 1241, type: !4186)
!16278 = !DILocation(line: 1241, column: 106, scope: !16266)
!16279 = !DILocalVariable(name: "i", scope: !16266, file: !3, line: 1243, type: !21)
!16280 = !DILocation(line: 1243, column: 6, scope: !16266)
!16281 = !DILocation(line: 1246, column: 6, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 1246, column: 6)
!16283 = !DILocation(line: 1246, column: 10, scope: !16282)
!16284 = !DILocation(line: 1246, column: 15, scope: !16282)
!16285 = !DILocation(line: 1246, column: 18, scope: !16282)
!16286 = !DILocation(line: 1246, column: 6, scope: !16266)
!16287 = !DILocation(line: 1247, column: 9, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 1247, column: 3)
!16289 = distinct !DILexicalBlock(scope: !16282, file: !3, line: 1246, column: 64)
!16290 = !DILocation(line: 1247, column: 8, scope: !16288)
!16291 = !DILocation(line: 1247, column: 13, scope: !16292)
!16292 = distinct !DILexicalBlock(scope: !16288, file: !3, line: 1247, column: 3)
!16293 = !DILocation(line: 1247, column: 15, scope: !16292)
!16294 = !DILocation(line: 1247, column: 19, scope: !16292)
!16295 = !DILocation(line: 1247, column: 14, scope: !16292)
!16296 = !DILocation(line: 1247, column: 3, scope: !16288)
!16297 = !DILocation(line: 1248, column: 8, scope: !16298)
!16298 = distinct !DILexicalBlock(scope: !16299, file: !3, line: 1248, column: 8)
!16299 = distinct !DILexicalBlock(scope: !16292, file: !3, line: 1247, column: 31)
!16300 = !DILocation(line: 1248, column: 12, scope: !16298)
!16301 = !DILocation(line: 1248, column: 8, scope: !16299)
!16302 = !DILocalVariable(name: "mface", scope: !16303, file: !3, line: 1249, type: !14191)
!16303 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 1248, column: 33)
!16304 = !DILocation(line: 1249, column: 12, scope: !16303)
!16305 = !DILocation(line: 1249, column: 20, scope: !16303)
!16306 = !DILocation(line: 1249, column: 24, scope: !16303)
!16307 = !DILocation(line: 1249, column: 40, scope: !16303)
!16308 = !DILocation(line: 1249, column: 44, scope: !16303)
!16309 = !DILocalVariable(name: "mtface", scope: !16303, file: !3, line: 1250, type: !4145)
!16310 = !DILocation(line: 1250, column: 13, scope: !16303)
!16311 = !DILocation(line: 1250, column: 55, scope: !16303)
!16312 = !DILocation(line: 1250, column: 59, scope: !16303)
!16313 = !DILocation(line: 1250, column: 80, scope: !16303)
!16314 = !DILocation(line: 1250, column: 31, scope: !16303)
!16315 = !DILocation(line: 1250, column: 22, scope: !16303)
!16316 = !DILocation(line: 1251, column: 15, scope: !16303)
!16317 = !DILocation(line: 1251, column: 12, scope: !16303)
!16318 = !DILocation(line: 1253, column: 26, scope: !16303)
!16319 = !DILocation(line: 1253, column: 34, scope: !16303)
!16320 = !DILocation(line: 1253, column: 41, scope: !16303)
!16321 = !DILocation(line: 1253, column: 45, scope: !16303)
!16322 = !DILocation(line: 1253, column: 50, scope: !16303)
!16323 = !DILocation(line: 1253, column: 54, scope: !16303)
!16324 = !DILocation(line: 1253, column: 65, scope: !16303)
!16325 = !DILocation(line: 1253, column: 63, scope: !16303)
!16326 = !DILocation(line: 1253, column: 59, scope: !16303)
!16327 = !DILocation(line: 1253, column: 5, scope: !16303)
!16328 = !DILocation(line: 1254, column: 4, scope: !16303)
!16329 = !DILocation(line: 1256, column: 5, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16298, file: !3, line: 1255, column: 9)
!16331 = !DILocation(line: 1256, column: 9, scope: !16330)
!16332 = !DILocation(line: 1256, column: 16, scope: !16330)
!16333 = !DILocation(line: 1256, column: 15, scope: !16330)
!16334 = !DILocation(line: 1256, column: 19, scope: !16330)
!16335 = !DILocation(line: 1257, column: 5, scope: !16330)
!16336 = !DILocation(line: 1257, column: 9, scope: !16330)
!16337 = !DILocation(line: 1257, column: 16, scope: !16330)
!16338 = !DILocation(line: 1257, column: 15, scope: !16330)
!16339 = !DILocation(line: 1257, column: 18, scope: !16330)
!16340 = !DILocation(line: 1257, column: 23, scope: !16330)
!16341 = !DILocation(line: 1259, column: 3, scope: !16299)
!16342 = !DILocation(line: 1247, column: 27, scope: !16292)
!16343 = !DILocation(line: 1247, column: 3, scope: !16292)
!16344 = distinct !{!16344, !16296, !16345}
!16345 = !DILocation(line: 1259, column: 3, scope: !16288)
!16346 = !DILocation(line: 1260, column: 2, scope: !16289)
!16347 = !DILocation(line: 1263, column: 6, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 1263, column: 6)
!16349 = !DILocation(line: 1263, column: 10, scope: !16348)
!16350 = !DILocation(line: 1263, column: 15, scope: !16348)
!16351 = !DILocation(line: 1263, column: 18, scope: !16348)
!16352 = !DILocation(line: 1263, column: 6, scope: !16266)
!16353 = !DILocation(line: 1264, column: 9, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16355, file: !3, line: 1264, column: 3)
!16355 = distinct !DILexicalBlock(scope: !16348, file: !3, line: 1263, column: 64)
!16356 = !DILocation(line: 1264, column: 8, scope: !16354)
!16357 = !DILocation(line: 1264, column: 13, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16354, file: !3, line: 1264, column: 3)
!16359 = !DILocation(line: 1264, column: 15, scope: !16358)
!16360 = !DILocation(line: 1264, column: 19, scope: !16358)
!16361 = !DILocation(line: 1264, column: 14, scope: !16358)
!16362 = !DILocation(line: 1264, column: 3, scope: !16354)
!16363 = !DILocation(line: 1265, column: 8, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16365, file: !3, line: 1265, column: 8)
!16365 = distinct !DILexicalBlock(scope: !16358, file: !3, line: 1264, column: 32)
!16366 = !DILocation(line: 1265, column: 12, scope: !16364)
!16367 = !DILocation(line: 1265, column: 8, scope: !16365)
!16368 = !DILocalVariable(name: "mface", scope: !16369, file: !3, line: 1266, type: !14191)
!16369 = distinct !DILexicalBlock(scope: !16364, file: !3, line: 1265, column: 33)
!16370 = !DILocation(line: 1266, column: 12, scope: !16369)
!16371 = !DILocation(line: 1266, column: 20, scope: !16369)
!16372 = !DILocation(line: 1266, column: 24, scope: !16369)
!16373 = !DILocation(line: 1266, column: 40, scope: !16369)
!16374 = !DILocation(line: 1266, column: 44, scope: !16369)
!16375 = !DILocalVariable(name: "mc", scope: !16369, file: !3, line: 1267, type: !4147)
!16376 = !DILocation(line: 1267, column: 11, scope: !16369)
!16377 = !DILocation(line: 1267, column: 47, scope: !16369)
!16378 = !DILocation(line: 1267, column: 51, scope: !16369)
!16379 = !DILocation(line: 1267, column: 70, scope: !16369)
!16380 = !DILocation(line: 1267, column: 23, scope: !16369)
!16381 = !DILocation(line: 1267, column: 16, scope: !16369)
!16382 = !DILocation(line: 1268, column: 11, scope: !16369)
!16383 = !DILocation(line: 1268, column: 15, scope: !16369)
!16384 = !DILocation(line: 1268, column: 8, scope: !16369)
!16385 = !DILocation(line: 1270, column: 27, scope: !16369)
!16386 = !DILocation(line: 1270, column: 31, scope: !16369)
!16387 = !DILocation(line: 1270, column: 38, scope: !16369)
!16388 = !DILocation(line: 1270, column: 42, scope: !16369)
!16389 = !DILocation(line: 1270, column: 47, scope: !16369)
!16390 = !DILocation(line: 1270, column: 51, scope: !16369)
!16391 = !DILocation(line: 1270, column: 58, scope: !16369)
!16392 = !DILocation(line: 1270, column: 56, scope: !16369)
!16393 = !DILocation(line: 1270, column: 5, scope: !16369)
!16394 = !DILocation(line: 1271, column: 4, scope: !16369)
!16395 = !DILocation(line: 1273, column: 13, scope: !16364)
!16396 = !DILocation(line: 1273, column: 17, scope: !16364)
!16397 = !DILocation(line: 1273, column: 22, scope: !16364)
!16398 = !DILocation(line: 1273, column: 5, scope: !16364)
!16399 = !DILocation(line: 1274, column: 3, scope: !16365)
!16400 = !DILocation(line: 1264, column: 28, scope: !16358)
!16401 = !DILocation(line: 1264, column: 3, scope: !16358)
!16402 = distinct !{!16402, !16362, !16403}
!16403 = !DILocation(line: 1274, column: 3, scope: !16354)
!16404 = !DILocation(line: 1275, column: 2, scope: !16355)
!16405 = !DILocation(line: 1276, column: 1, scope: !16266)
!16406 = distinct !DISubprogram(name: "psys_frand", scope: !3634, file: !3634, line: 256, type: !16407, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16407 = !DISubroutineType(types: !16408)
!16408 = !{!45, !5452, !79}
!16409 = !DILocalVariable(name: "psys", arg: 1, scope: !16406, file: !3634, line: 256, type: !5452)
!16410 = !DILocation(line: 256, column: 45, scope: !16406)
!16411 = !DILocalVariable(name: "seed", arg: 2, scope: !16406, file: !3634, line: 256, type: !79)
!16412 = !DILocation(line: 256, column: 64, scope: !16406)
!16413 = !DILocalVariable(name: "offset", scope: !16406, file: !3634, line: 263, type: !79)
!16414 = !DILocation(line: 263, column: 15, scope: !16406)
!16415 = !DILocation(line: 263, column: 47, scope: !16406)
!16416 = !DILocation(line: 263, column: 53, scope: !16406)
!16417 = !DILocation(line: 263, column: 58, scope: !16406)
!16418 = !DILocation(line: 263, column: 24, scope: !16406)
!16419 = !DILocalVariable(name: "multiplier", scope: !16406, file: !3634, line: 264, type: !79)
!16420 = !DILocation(line: 264, column: 15, scope: !16406)
!16421 = !DILocation(line: 264, column: 55, scope: !16406)
!16422 = !DILocation(line: 264, column: 61, scope: !16406)
!16423 = !DILocation(line: 264, column: 66, scope: !16406)
!16424 = !DILocation(line: 264, column: 28, scope: !16406)
!16425 = !DILocation(line: 265, column: 26, scope: !16406)
!16426 = !DILocation(line: 265, column: 35, scope: !16406)
!16427 = !DILocation(line: 265, column: 42, scope: !16406)
!16428 = !DILocation(line: 265, column: 40, scope: !16406)
!16429 = !DILocation(line: 265, column: 33, scope: !16406)
!16430 = !DILocation(line: 265, column: 54, scope: !16406)
!16431 = !DILocation(line: 265, column: 9, scope: !16406)
!16432 = !DILocation(line: 265, column: 2, scope: !16406)
!16433 = distinct !DISubprogram(name: "len_v3v3", scope: !4629, file: !4629, line: 759, type: !8125, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16434 = !DILocalVariable(name: "a", arg: 1, scope: !16433, file: !4629, line: 759, type: !2417)
!16435 = !DILocation(line: 759, column: 36, scope: !16433)
!16436 = !DILocalVariable(name: "b", arg: 2, scope: !16433, file: !4629, line: 759, type: !2417)
!16437 = !DILocation(line: 759, column: 54, scope: !16433)
!16438 = !DILocalVariable(name: "d", scope: !16433, file: !4629, line: 761, type: !188)
!16439 = !DILocation(line: 761, column: 8, scope: !16433)
!16440 = !DILocation(line: 763, column: 14, scope: !16433)
!16441 = !DILocation(line: 763, column: 17, scope: !16433)
!16442 = !DILocation(line: 763, column: 20, scope: !16433)
!16443 = !DILocation(line: 763, column: 2, scope: !16433)
!16444 = !DILocation(line: 764, column: 16, scope: !16433)
!16445 = !DILocation(line: 764, column: 9, scope: !16433)
!16446 = !DILocation(line: 764, column: 2, scope: !16433)
!16447 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !4629, file: !4629, line: 357, type: !16448, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16448 = !DISubroutineType(types: !16449)
!16449 = !{null, !44, !2417, !2417}
!16450 = !DILocalVariable(name: "r", arg: 1, scope: !16447, file: !4629, line: 357, type: !44)
!16451 = !DILocation(line: 357, column: 32, scope: !16447)
!16452 = !DILocalVariable(name: "a", arg: 2, scope: !16447, file: !4629, line: 357, type: !2417)
!16453 = !DILocation(line: 357, column: 50, scope: !16447)
!16454 = !DILocalVariable(name: "b", arg: 3, scope: !16447, file: !4629, line: 357, type: !2417)
!16455 = !DILocation(line: 357, column: 68, scope: !16447)
!16456 = !DILocation(line: 359, column: 9, scope: !16447)
!16457 = !DILocation(line: 359, column: 16, scope: !16447)
!16458 = !DILocation(line: 359, column: 14, scope: !16447)
!16459 = !DILocation(line: 359, column: 2, scope: !16447)
!16460 = !DILocation(line: 359, column: 7, scope: !16447)
!16461 = !DILocation(line: 360, column: 9, scope: !16447)
!16462 = !DILocation(line: 360, column: 16, scope: !16447)
!16463 = !DILocation(line: 360, column: 14, scope: !16447)
!16464 = !DILocation(line: 360, column: 2, scope: !16447)
!16465 = !DILocation(line: 360, column: 7, scope: !16447)
!16466 = !DILocation(line: 361, column: 9, scope: !16447)
!16467 = !DILocation(line: 361, column: 16, scope: !16447)
!16468 = !DILocation(line: 361, column: 14, scope: !16447)
!16469 = !DILocation(line: 361, column: 2, scope: !16447)
!16470 = !DILocation(line: 361, column: 7, scope: !16447)
!16471 = !DILocation(line: 362, column: 1, scope: !16447)
!16472 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !4629, file: !4629, line: 309, type: !16448, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16473 = !DILocalVariable(name: "r", arg: 1, scope: !16472, file: !4629, line: 309, type: !44)
!16474 = !DILocation(line: 309, column: 32, scope: !16472)
!16475 = !DILocalVariable(name: "a", arg: 2, scope: !16472, file: !4629, line: 309, type: !2417)
!16476 = !DILocation(line: 309, column: 50, scope: !16472)
!16477 = !DILocalVariable(name: "b", arg: 3, scope: !16472, file: !4629, line: 309, type: !2417)
!16478 = !DILocation(line: 309, column: 68, scope: !16472)
!16479 = !DILocation(line: 311, column: 9, scope: !16472)
!16480 = !DILocation(line: 311, column: 16, scope: !16472)
!16481 = !DILocation(line: 311, column: 14, scope: !16472)
!16482 = !DILocation(line: 311, column: 2, scope: !16472)
!16483 = !DILocation(line: 311, column: 7, scope: !16472)
!16484 = !DILocation(line: 312, column: 9, scope: !16472)
!16485 = !DILocation(line: 312, column: 16, scope: !16472)
!16486 = !DILocation(line: 312, column: 14, scope: !16472)
!16487 = !DILocation(line: 312, column: 2, scope: !16472)
!16488 = !DILocation(line: 312, column: 7, scope: !16472)
!16489 = !DILocation(line: 313, column: 9, scope: !16472)
!16490 = !DILocation(line: 313, column: 16, scope: !16472)
!16491 = !DILocation(line: 313, column: 14, scope: !16472)
!16492 = !DILocation(line: 313, column: 2, scope: !16472)
!16493 = !DILocation(line: 313, column: 7, scope: !16472)
!16494 = !DILocation(line: 314, column: 1, scope: !16472)
!16495 = distinct !DISubprogram(name: "particle_curve", scope: !3, file: !3, line: 1051, type: !16496, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16496 = !DISubroutineType(types: !16497)
!16497 = !{null, !6, !3063, !2263, !4157, !4186, !2417, !2417, !21, !44}
!16498 = !DILocalVariable(name: "re", arg: 1, scope: !16495, file: !3, line: 1051, type: !6)
!16499 = !DILocation(line: 1051, column: 36, scope: !16495)
!16500 = !DILocalVariable(name: "obr", arg: 2, scope: !16495, file: !3, line: 1051, type: !3063)
!16501 = !DILocation(line: 1051, column: 51, scope: !16495)
!16502 = !DILocalVariable(name: "dm", arg: 3, scope: !16495, file: !3, line: 1051, type: !2263)
!16503 = !DILocation(line: 1051, column: 69, scope: !16495)
!16504 = !DILocalVariable(name: "ma", arg: 4, scope: !16495, file: !3, line: 1051, type: !4157)
!16505 = !DILocation(line: 1051, column: 83, scope: !16495)
!16506 = !DILocalVariable(name: "sd", arg: 5, scope: !16495, file: !3, line: 1051, type: !4186)
!16507 = !DILocation(line: 1051, column: 107, scope: !16495)
!16508 = !DILocalVariable(name: "loc", arg: 6, scope: !16495, file: !3, line: 1052, type: !2417)
!16509 = !DILocation(line: 1052, column: 40, scope: !16495)
!16510 = !DILocalVariable(name: "loc1", arg: 7, scope: !16495, file: !3, line: 1052, type: !2417)
!16511 = !DILocation(line: 1052, column: 60, scope: !16495)
!16512 = !DILocalVariable(name: "seed", arg: 8, scope: !16495, file: !3, line: 1052, type: !21)
!16513 = !DILocation(line: 1052, column: 73, scope: !16495)
!16514 = !DILocalVariable(name: "pa_co", arg: 9, scope: !16495, file: !3, line: 1052, type: !44)
!16515 = !DILocation(line: 1052, column: 86, scope: !16495)
!16516 = !DILocalVariable(name: "har", scope: !16495, file: !3, line: 1054, type: !6075)
!16517 = !DILocation(line: 1054, column: 11, scope: !16495)
!16518 = !DILocation(line: 1056, column: 6, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16495, file: !3, line: 1056, column: 6)
!16520 = !DILocation(line: 1056, column: 10, scope: !16519)
!16521 = !DILocation(line: 1056, column: 24, scope: !16519)
!16522 = !DILocation(line: 1056, column: 6, scope: !16495)
!16523 = !DILocation(line: 1057, column: 24, scope: !16519)
!16524 = !DILocation(line: 1057, column: 29, scope: !16519)
!16525 = !DILocation(line: 1057, column: 33, scope: !16519)
!16526 = !DILocation(line: 1057, column: 38, scope: !16519)
!16527 = !DILocation(line: 1057, column: 44, scope: !16519)
!16528 = !DILocation(line: 1057, column: 48, scope: !16519)
!16529 = !DILocation(line: 1057, column: 55, scope: !16519)
!16530 = !DILocation(line: 1057, column: 59, scope: !16519)
!16531 = !DILocation(line: 1057, column: 3, scope: !16519)
!16532 = !DILocation(line: 1058, column: 11, scope: !16533)
!16533 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 1058, column: 11)
!16534 = !DILocation(line: 1058, column: 15, scope: !16533)
!16535 = !DILocation(line: 1058, column: 29, scope: !16533)
!16536 = !DILocation(line: 1058, column: 11, scope: !16519)
!16537 = !DILocation(line: 1059, column: 29, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16533, file: !3, line: 1058, column: 46)
!16539 = !DILocation(line: 1059, column: 33, scope: !16538)
!16540 = !DILocation(line: 1059, column: 38, scope: !16538)
!16541 = !DILocation(line: 1059, column: 42, scope: !16538)
!16542 = !DILocation(line: 1059, column: 46, scope: !16538)
!16543 = !DILocation(line: 1059, column: 51, scope: !16538)
!16544 = !DILocation(line: 1059, column: 57, scope: !16538)
!16545 = !DILocation(line: 1059, column: 61, scope: !16538)
!16546 = !DILocation(line: 1059, column: 67, scope: !16538)
!16547 = !DILocation(line: 1059, column: 71, scope: !16538)
!16548 = !DILocation(line: 1059, column: 77, scope: !16538)
!16549 = !DILocation(line: 1059, column: 81, scope: !16538)
!16550 = !DILocation(line: 1059, column: 92, scope: !16538)
!16551 = !DILocation(line: 1059, column: 98, scope: !16538)
!16552 = !DILocation(line: 1059, column: 8, scope: !16538)
!16553 = !DILocation(line: 1059, column: 6, scope: !16538)
!16554 = !DILocation(line: 1060, column: 7, scope: !16555)
!16555 = distinct !DILexicalBlock(scope: !16538, file: !3, line: 1060, column: 7)
!16556 = !DILocation(line: 1060, column: 7, scope: !16538)
!16557 = !DILocation(line: 1060, column: 22, scope: !16555)
!16558 = !DILocation(line: 1060, column: 27, scope: !16555)
!16559 = !DILocation(line: 1060, column: 31, scope: !16555)
!16560 = !DILocation(line: 1060, column: 12, scope: !16555)
!16561 = !DILocation(line: 1060, column: 17, scope: !16555)
!16562 = !DILocation(line: 1060, column: 20, scope: !16555)
!16563 = !DILocation(line: 1061, column: 2, scope: !16538)
!16564 = !DILocation(line: 1063, column: 26, scope: !16533)
!16565 = !DILocation(line: 1063, column: 30, scope: !16533)
!16566 = !DILocation(line: 1063, column: 35, scope: !16533)
!16567 = !DILocation(line: 1063, column: 39, scope: !16533)
!16568 = !DILocation(line: 1063, column: 43, scope: !16533)
!16569 = !DILocation(line: 1063, column: 48, scope: !16533)
!16570 = !DILocation(line: 1063, column: 3, scope: !16533)
!16571 = !DILocation(line: 1064, column: 1, scope: !16495)
!16572 = distinct !DISubprogram(name: "len_v3", scope: !4629, file: !4629, line: 714, type: !16573, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16573 = !DISubroutineType(types: !16574)
!16574 = !{!45, !2417}
!16575 = !DILocalVariable(name: "a", arg: 1, scope: !16572, file: !4629, line: 714, type: !2417)
!16576 = !DILocation(line: 714, column: 34, scope: !16572)
!16577 = !DILocation(line: 716, column: 24, scope: !16572)
!16578 = !DILocation(line: 716, column: 27, scope: !16572)
!16579 = !DILocation(line: 716, column: 15, scope: !16572)
!16580 = !DILocation(line: 716, column: 9, scope: !16572)
!16581 = !DILocation(line: 716, column: 2, scope: !16572)
!16582 = distinct !DISubprogram(name: "particle_normal_ren", scope: !3, file: !3, line: 1191, type: !16583, scopeLine: 1192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16583 = !DISubroutineType(types: !16584)
!16584 = !{null, !23, !3368, !6, !3063, !2263, !4157, !4186, !16585, !3580, !21, !45, !44}
!16585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10955, size: 64)
!16586 = !DILocalVariable(name: "ren_as", arg: 1, scope: !16582, file: !3, line: 1191, type: !23)
!16587 = !DILocation(line: 1191, column: 39, scope: !16582)
!16588 = !DILocalVariable(name: "part", arg: 2, scope: !16582, file: !3, line: 1191, type: !3368)
!16589 = !DILocation(line: 1191, column: 65, scope: !16582)
!16590 = !DILocalVariable(name: "re", arg: 3, scope: !16582, file: !3, line: 1191, type: !6)
!16591 = !DILocation(line: 1191, column: 79, scope: !16582)
!16592 = !DILocalVariable(name: "obr", arg: 4, scope: !16582, file: !3, line: 1191, type: !3063)
!16593 = !DILocation(line: 1191, column: 94, scope: !16582)
!16594 = !DILocalVariable(name: "dm", arg: 5, scope: !16582, file: !3, line: 1191, type: !2263)
!16595 = !DILocation(line: 1191, column: 112, scope: !16582)
!16596 = !DILocalVariable(name: "ma", arg: 6, scope: !16582, file: !3, line: 1191, type: !4157)
!16597 = !DILocation(line: 1191, column: 126, scope: !16582)
!16598 = !DILocalVariable(name: "sd", arg: 7, scope: !16582, file: !3, line: 1191, type: !4186)
!16599 = !DILocation(line: 1191, column: 150, scope: !16582)
!16600 = !DILocalVariable(name: "bb", arg: 8, scope: !16582, file: !3, line: 1191, type: !16585)
!16601 = !DILocation(line: 1191, column: 177, scope: !16582)
!16602 = !DILocalVariable(name: "state", arg: 9, scope: !16582, file: !3, line: 1191, type: !3580)
!16603 = !DILocation(line: 1191, column: 194, scope: !16582)
!16604 = !DILocalVariable(name: "seed", arg: 10, scope: !16582, file: !3, line: 1191, type: !21)
!16605 = !DILocation(line: 1191, column: 205, scope: !16582)
!16606 = !DILocalVariable(name: "hasize", arg: 11, scope: !16582, file: !3, line: 1191, type: !45)
!16607 = !DILocation(line: 1191, column: 217, scope: !16582)
!16608 = !DILocalVariable(name: "pa_co", arg: 12, scope: !16582, file: !3, line: 1191, type: !44)
!16609 = !DILocation(line: 1191, column: 232, scope: !16582)
!16610 = !DILocalVariable(name: "loc", scope: !16582, file: !3, line: 1193, type: !188)
!16611 = !DILocation(line: 1193, column: 8, scope: !16582)
!16612 = !DILocalVariable(name: "loc0", scope: !16582, file: !3, line: 1193, type: !188)
!16613 = !DILocation(line: 1193, column: 16, scope: !16582)
!16614 = !DILocalVariable(name: "loc1", scope: !16582, file: !3, line: 1193, type: !188)
!16615 = !DILocation(line: 1193, column: 25, scope: !16582)
!16616 = !DILocalVariable(name: "vel", scope: !16582, file: !3, line: 1193, type: !188)
!16617 = !DILocation(line: 1193, column: 34, scope: !16582)
!16618 = !DILocation(line: 1195, column: 13, scope: !16582)
!16619 = !DILocation(line: 1195, column: 18, scope: !16582)
!16620 = !DILocation(line: 1195, column: 25, scope: !16582)
!16621 = !DILocation(line: 1195, column: 2, scope: !16582)
!16622 = !DILocation(line: 1197, column: 6, scope: !16623)
!16623 = distinct !DILexicalBlock(scope: !16582, file: !3, line: 1197, column: 6)
!16624 = !DILocation(line: 1197, column: 13, scope: !16623)
!16625 = !DILocation(line: 1197, column: 6, scope: !16582)
!16626 = !DILocation(line: 1198, column: 13, scope: !16623)
!16627 = !DILocation(line: 1198, column: 17, scope: !16623)
!16628 = !DILocation(line: 1198, column: 26, scope: !16623)
!16629 = !DILocation(line: 1198, column: 3, scope: !16623)
!16630 = !DILocation(line: 1200, column: 10, scope: !16582)
!16631 = !DILocation(line: 1200, column: 2, scope: !16582)
!16632 = !DILocation(line: 1202, column: 4, scope: !16633)
!16633 = distinct !DILexicalBlock(scope: !16582, file: !3, line: 1200, column: 18)
!16634 = !DILocation(line: 1202, column: 8, scope: !16633)
!16635 = !DILocation(line: 1202, column: 13, scope: !16633)
!16636 = !DILocation(line: 1203, column: 4, scope: !16633)
!16637 = !DILocation(line: 1203, column: 8, scope: !16633)
!16638 = !DILocation(line: 1203, column: 13, scope: !16633)
!16639 = !DILocation(line: 1204, column: 15, scope: !16633)
!16640 = !DILocation(line: 1204, column: 4, scope: !16633)
!16641 = !DILocation(line: 1204, column: 8, scope: !16633)
!16642 = !DILocation(line: 1204, column: 13, scope: !16633)
!16643 = !DILocation(line: 1206, column: 15, scope: !16633)
!16644 = !DILocation(line: 1206, column: 20, scope: !16633)
!16645 = !DILocation(line: 1206, column: 27, scope: !16633)
!16646 = !DILocation(line: 1206, column: 4, scope: !16633)
!16647 = !DILocation(line: 1207, column: 19, scope: !16633)
!16648 = !DILocation(line: 1207, column: 23, scope: !16633)
!16649 = !DILocation(line: 1207, column: 32, scope: !16633)
!16650 = !DILocation(line: 1207, column: 4, scope: !16633)
!16651 = !DILocation(line: 1208, column: 17, scope: !16633)
!16652 = !DILocation(line: 1208, column: 4, scope: !16633)
!16653 = !DILocation(line: 1210, column: 8, scope: !16654)
!16654 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 1210, column: 8)
!16655 = !DILocation(line: 1210, column: 14, scope: !16654)
!16656 = !DILocation(line: 1210, column: 19, scope: !16654)
!16657 = !DILocation(line: 1210, column: 8, scope: !16633)
!16658 = !DILocation(line: 1211, column: 15, scope: !16654)
!16659 = !DILocation(line: 1211, column: 27, scope: !16654)
!16660 = !DILocation(line: 1211, column: 34, scope: !16654)
!16661 = !DILocation(line: 1211, column: 20, scope: !16654)
!16662 = !DILocation(line: 1211, column: 5, scope: !16654)
!16663 = !DILocation(line: 1213, column: 19, scope: !16633)
!16664 = !DILocation(line: 1213, column: 25, scope: !16633)
!16665 = !DILocation(line: 1213, column: 30, scope: !16633)
!16666 = !DILocation(line: 1213, column: 36, scope: !16633)
!16667 = !DILocation(line: 1213, column: 42, scope: !16633)
!16668 = !DILocation(line: 1213, column: 35, scope: !16633)
!16669 = !DILocation(line: 1213, column: 4, scope: !16633)
!16670 = !DILocation(line: 1214, column: 19, scope: !16633)
!16671 = !DILocation(line: 1214, column: 25, scope: !16633)
!16672 = !DILocation(line: 1214, column: 30, scope: !16633)
!16673 = !DILocation(line: 1214, column: 35, scope: !16633)
!16674 = !DILocation(line: 1214, column: 41, scope: !16633)
!16675 = !DILocation(line: 1214, column: 4, scope: !16633)
!16676 = !DILocation(line: 1216, column: 19, scope: !16633)
!16677 = !DILocation(line: 1216, column: 23, scope: !16633)
!16678 = !DILocation(line: 1216, column: 28, scope: !16633)
!16679 = !DILocation(line: 1216, column: 32, scope: !16633)
!16680 = !DILocation(line: 1216, column: 36, scope: !16633)
!16681 = !DILocation(line: 1216, column: 40, scope: !16633)
!16682 = !DILocation(line: 1216, column: 46, scope: !16633)
!16683 = !DILocation(line: 1216, column: 52, scope: !16633)
!16684 = !DILocation(line: 1216, column: 58, scope: !16633)
!16685 = !DILocation(line: 1216, column: 4, scope: !16633)
!16686 = !DILocation(line: 1218, column: 4, scope: !16633)
!16687 = !DILocation(line: 1222, column: 15, scope: !16633)
!16688 = !DILocation(line: 1222, column: 19, scope: !16633)
!16689 = !DILocation(line: 1222, column: 24, scope: !16633)
!16690 = !DILocation(line: 1222, column: 4, scope: !16633)
!16691 = !DILocation(line: 1223, column: 15, scope: !16633)
!16692 = !DILocation(line: 1223, column: 19, scope: !16633)
!16693 = !DILocation(line: 1223, column: 24, scope: !16633)
!16694 = !DILocation(line: 1223, column: 31, scope: !16633)
!16695 = !DILocation(line: 1223, column: 4, scope: !16633)
!16696 = !DILocation(line: 1225, column: 23, scope: !16633)
!16697 = !DILocation(line: 1225, column: 27, scope: !16633)
!16698 = !DILocation(line: 1225, column: 32, scope: !16633)
!16699 = !DILocation(line: 1225, column: 36, scope: !16633)
!16700 = !DILocation(line: 1225, column: 4, scope: !16633)
!16701 = !DILocation(line: 1227, column: 4, scope: !16633)
!16702 = !DILocalVariable(name: "har", scope: !16703, file: !3, line: 1231, type: !6075)
!16703 = distinct !DILexicalBlock(scope: !16633, file: !3, line: 1230, column: 3)
!16704 = !DILocation(line: 1231, column: 13, scope: !16703)
!16705 = !DILocation(line: 1233, column: 31, scope: !16703)
!16706 = !DILocation(line: 1233, column: 35, scope: !16703)
!16707 = !DILocation(line: 1233, column: 40, scope: !16703)
!16708 = !DILocation(line: 1233, column: 44, scope: !16703)
!16709 = !DILocation(line: 1233, column: 48, scope: !16703)
!16710 = !DILocation(line: 1233, column: 59, scope: !16703)
!16711 = !DILocation(line: 1233, column: 63, scope: !16703)
!16712 = !DILocation(line: 1233, column: 69, scope: !16703)
!16713 = !DILocation(line: 1233, column: 73, scope: !16703)
!16714 = !DILocation(line: 1233, column: 79, scope: !16703)
!16715 = !DILocation(line: 1233, column: 92, scope: !16703)
!16716 = !DILocation(line: 1233, column: 98, scope: !16703)
!16717 = !DILocation(line: 1233, column: 10, scope: !16703)
!16718 = !DILocation(line: 1233, column: 8, scope: !16703)
!16719 = !DILocation(line: 1235, column: 8, scope: !16720)
!16720 = distinct !DILexicalBlock(scope: !16703, file: !3, line: 1235, column: 8)
!16721 = !DILocation(line: 1235, column: 8, scope: !16703)
!16722 = !DILocation(line: 1235, column: 23, scope: !16720)
!16723 = !DILocation(line: 1235, column: 28, scope: !16720)
!16724 = !DILocation(line: 1235, column: 32, scope: !16720)
!16725 = !DILocation(line: 1235, column: 13, scope: !16720)
!16726 = !DILocation(line: 1235, column: 18, scope: !16720)
!16727 = !DILocation(line: 1235, column: 21, scope: !16720)
!16728 = !DILocation(line: 1237, column: 4, scope: !16703)
!16729 = !DILocation(line: 1240, column: 1, scope: !16582)
!16730 = distinct !DISubprogram(name: "calc_vertexnormals", scope: !3, file: !3, line: 381, type: !16731, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!16731 = !DISubroutineType(types: !16732)
!16732 = !{null, !6, !3063, !28, !28, !28}
!16733 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !16730, file: !3, line: 381, type: !6)
!16734 = !DILocation(line: 381, column: 40, scope: !16730)
!16735 = !DILocalVariable(name: "obr", arg: 2, scope: !16730, file: !3, line: 381, type: !3063)
!16736 = !DILocation(line: 381, column: 63, scope: !16730)
!16737 = !DILocalVariable(name: "do_vertex_normal", arg: 3, scope: !16730, file: !3, line: 381, type: !28)
!16738 = !DILocation(line: 381, column: 73, scope: !16730)
!16739 = !DILocalVariable(name: "do_tangent", arg: 4, scope: !16730, file: !3, line: 381, type: !28)
!16740 = !DILocation(line: 381, column: 96, scope: !16730)
!16741 = !DILocalVariable(name: "do_nmap_tangent", arg: 5, scope: !16730, file: !3, line: 381, type: !28)
!16742 = !DILocation(line: 381, column: 113, scope: !16730)
!16743 = !DILocalVariable(name: "a", scope: !16730, file: !3, line: 383, type: !21)
!16744 = !DILocation(line: 383, column: 6, scope: !16730)
!16745 = !DILocation(line: 386, column: 6, scope: !16746)
!16746 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 386, column: 6)
!16747 = !DILocation(line: 386, column: 6, scope: !16730)
!16748 = !DILocation(line: 387, column: 9, scope: !16749)
!16749 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 387, column: 3)
!16750 = distinct !DILexicalBlock(scope: !16746, file: !3, line: 386, column: 24)
!16751 = !DILocation(line: 387, column: 8, scope: !16749)
!16752 = !DILocation(line: 387, column: 13, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16749, file: !3, line: 387, column: 3)
!16754 = !DILocation(line: 387, column: 15, scope: !16753)
!16755 = !DILocation(line: 387, column: 20, scope: !16753)
!16756 = !DILocation(line: 387, column: 14, scope: !16753)
!16757 = !DILocation(line: 387, column: 3, scope: !16749)
!16758 = !DILocalVariable(name: "ver", scope: !16759, file: !3, line: 388, type: !4179)
!16759 = distinct !DILexicalBlock(scope: !16753, file: !3, line: 387, column: 34)
!16760 = !DILocation(line: 388, column: 13, scope: !16759)
!16761 = !DILocation(line: 388, column: 35, scope: !16759)
!16762 = !DILocation(line: 388, column: 40, scope: !16759)
!16763 = !DILocation(line: 388, column: 18, scope: !16759)
!16764 = !DILocation(line: 389, column: 24, scope: !16759)
!16765 = !DILocation(line: 389, column: 29, scope: !16759)
!16766 = !DILocation(line: 389, column: 33, scope: !16759)
!16767 = !DILocation(line: 389, column: 14, scope: !16759)
!16768 = !DILocation(line: 389, column: 19, scope: !16759)
!16769 = !DILocation(line: 389, column: 23, scope: !16759)
!16770 = !DILocation(line: 389, column: 4, scope: !16759)
!16771 = !DILocation(line: 389, column: 9, scope: !16759)
!16772 = !DILocation(line: 389, column: 13, scope: !16759)
!16773 = !DILocation(line: 390, column: 3, scope: !16759)
!16774 = !DILocation(line: 387, column: 30, scope: !16753)
!16775 = !DILocation(line: 387, column: 3, scope: !16753)
!16776 = distinct !{!16776, !16757, !16777}
!16777 = !DILocation(line: 390, column: 3, scope: !16749)
!16778 = !DILocation(line: 391, column: 2, scope: !16750)
!16779 = !DILocation(line: 395, column: 8, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 395, column: 2)
!16781 = !DILocation(line: 395, column: 7, scope: !16780)
!16782 = !DILocation(line: 395, column: 12, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16780, file: !3, line: 395, column: 2)
!16784 = !DILocation(line: 395, column: 14, scope: !16783)
!16785 = !DILocation(line: 395, column: 19, scope: !16783)
!16786 = !DILocation(line: 395, column: 13, scope: !16783)
!16787 = !DILocation(line: 395, column: 2, scope: !16780)
!16788 = !DILocalVariable(name: "vlr", scope: !16789, file: !3, line: 396, type: !13020)
!16789 = distinct !DILexicalBlock(scope: !16783, file: !3, line: 395, column: 33)
!16790 = !DILocation(line: 396, column: 12, scope: !16789)
!16791 = !DILocation(line: 396, column: 34, scope: !16789)
!16792 = !DILocation(line: 396, column: 39, scope: !16789)
!16793 = !DILocation(line: 396, column: 17, scope: !16789)
!16794 = !DILocation(line: 397, column: 7, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 397, column: 7)
!16796 = !DILocation(line: 397, column: 24, scope: !16795)
!16797 = !DILocation(line: 397, column: 27, scope: !16795)
!16798 = !DILocation(line: 397, column: 32, scope: !16795)
!16799 = !DILocation(line: 397, column: 37, scope: !16795)
!16800 = !DILocation(line: 397, column: 7, scope: !16789)
!16801 = !DILocalVariable(name: "n4", scope: !16802, file: !3, line: 398, type: !44)
!16802 = distinct !DILexicalBlock(scope: !16795, file: !3, line: 397, column: 50)
!16803 = !DILocation(line: 398, column: 11, scope: !16802)
!16804 = !DILocation(line: 398, column: 16, scope: !16802)
!16805 = !DILocation(line: 398, column: 21, scope: !16802)
!16806 = !DILocation(line: 398, column: 15, scope: !16802)
!16807 = !DILocation(line: 398, column: 26, scope: !16802)
!16808 = !DILocation(line: 398, column: 31, scope: !16802)
!16809 = !DILocation(line: 398, column: 35, scope: !16802)
!16810 = !DILocalVariable(name: "c4", scope: !16802, file: !3, line: 399, type: !2417)
!16811 = !DILocation(line: 399, column: 17, scope: !16802)
!16812 = !DILocation(line: 399, column: 22, scope: !16802)
!16813 = !DILocation(line: 399, column: 27, scope: !16802)
!16814 = !DILocation(line: 399, column: 21, scope: !16802)
!16815 = !DILocation(line: 399, column: 32, scope: !16802)
!16816 = !DILocation(line: 399, column: 37, scope: !16802)
!16817 = !DILocation(line: 399, column: 41, scope: !16802)
!16818 = !DILocation(line: 401, column: 30, scope: !16802)
!16819 = !DILocation(line: 401, column: 35, scope: !16802)
!16820 = !DILocation(line: 401, column: 39, scope: !16802)
!16821 = !DILocation(line: 401, column: 42, scope: !16802)
!16822 = !DILocation(line: 401, column: 47, scope: !16802)
!16823 = !DILocation(line: 401, column: 51, scope: !16802)
!16824 = !DILocation(line: 401, column: 54, scope: !16802)
!16825 = !DILocation(line: 401, column: 59, scope: !16802)
!16826 = !DILocation(line: 401, column: 63, scope: !16802)
!16827 = !DILocation(line: 401, column: 66, scope: !16802)
!16828 = !DILocation(line: 402, column: 5, scope: !16802)
!16829 = !DILocation(line: 402, column: 10, scope: !16802)
!16830 = !DILocation(line: 402, column: 13, scope: !16802)
!16831 = !DILocation(line: 402, column: 18, scope: !16802)
!16832 = !DILocation(line: 402, column: 22, scope: !16802)
!16833 = !DILocation(line: 402, column: 26, scope: !16802)
!16834 = !DILocation(line: 402, column: 31, scope: !16802)
!16835 = !DILocation(line: 402, column: 35, scope: !16802)
!16836 = !DILocation(line: 402, column: 39, scope: !16802)
!16837 = !DILocation(line: 402, column: 44, scope: !16802)
!16838 = !DILocation(line: 402, column: 48, scope: !16802)
!16839 = !DILocation(line: 402, column: 52, scope: !16802)
!16840 = !DILocation(line: 401, column: 4, scope: !16802)
!16841 = !DILocation(line: 403, column: 3, scope: !16802)
!16842 = !DILocation(line: 404, column: 7, scope: !16843)
!16843 = distinct !DILexicalBlock(scope: !16789, file: !3, line: 404, column: 7)
!16844 = !DILocation(line: 404, column: 7, scope: !16789)
!16845 = !DILocation(line: 407, column: 24, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 404, column: 19)
!16847 = !DILocation(line: 407, column: 29, scope: !16846)
!16848 = !DILocation(line: 407, column: 34, scope: !16846)
!16849 = !DILocation(line: 407, column: 4, scope: !16846)
!16850 = !DILocation(line: 408, column: 3, scope: !16846)
!16851 = !DILocation(line: 409, column: 2, scope: !16789)
!16852 = !DILocation(line: 395, column: 29, scope: !16783)
!16853 = !DILocation(line: 395, column: 2, scope: !16783)
!16854 = distinct !{!16854, !16787, !16855}
!16855 = !DILocation(line: 409, column: 2, scope: !16780)
!16856 = !DILocation(line: 412, column: 8, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 412, column: 2)
!16858 = !DILocation(line: 412, column: 7, scope: !16857)
!16859 = !DILocation(line: 412, column: 12, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16857, file: !3, line: 412, column: 2)
!16861 = !DILocation(line: 412, column: 14, scope: !16860)
!16862 = !DILocation(line: 412, column: 19, scope: !16860)
!16863 = !DILocation(line: 412, column: 13, scope: !16860)
!16864 = !DILocation(line: 412, column: 2, scope: !16857)
!16865 = !DILocalVariable(name: "vlr", scope: !16866, file: !3, line: 413, type: !13020)
!16866 = distinct !DILexicalBlock(scope: !16860, file: !3, line: 412, column: 33)
!16867 = !DILocation(line: 413, column: 12, scope: !16866)
!16868 = !DILocation(line: 413, column: 34, scope: !16866)
!16869 = !DILocation(line: 413, column: 39, scope: !16866)
!16870 = !DILocation(line: 413, column: 17, scope: !16866)
!16871 = !DILocation(line: 415, column: 7, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16866, file: !3, line: 415, column: 7)
!16873 = !DILocation(line: 415, column: 24, scope: !16872)
!16874 = !DILocation(line: 415, column: 28, scope: !16872)
!16875 = !DILocation(line: 415, column: 33, scope: !16872)
!16876 = !DILocation(line: 415, column: 38, scope: !16872)
!16877 = !DILocation(line: 415, column: 50, scope: !16872)
!16878 = !DILocation(line: 415, column: 7, scope: !16866)
!16879 = !DILocation(line: 416, column: 19, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 416, column: 8)
!16881 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 415, column: 55)
!16882 = !DILocation(line: 416, column: 24, scope: !16880)
!16883 = !DILocation(line: 416, column: 28, scope: !16880)
!16884 = !DILocation(line: 416, column: 8, scope: !16880)
!16885 = !DILocation(line: 416, column: 8, scope: !16881)
!16886 = !DILocation(line: 416, column: 43, scope: !16880)
!16887 = !DILocation(line: 416, column: 48, scope: !16880)
!16888 = !DILocation(line: 416, column: 52, scope: !16880)
!16889 = !DILocation(line: 416, column: 55, scope: !16880)
!16890 = !DILocation(line: 416, column: 60, scope: !16880)
!16891 = !DILocation(line: 416, column: 32, scope: !16880)
!16892 = !DILocation(line: 417, column: 19, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 417, column: 8)
!16894 = !DILocation(line: 417, column: 24, scope: !16893)
!16895 = !DILocation(line: 417, column: 28, scope: !16893)
!16896 = !DILocation(line: 417, column: 8, scope: !16893)
!16897 = !DILocation(line: 417, column: 8, scope: !16881)
!16898 = !DILocation(line: 417, column: 43, scope: !16893)
!16899 = !DILocation(line: 417, column: 48, scope: !16893)
!16900 = !DILocation(line: 417, column: 52, scope: !16893)
!16901 = !DILocation(line: 417, column: 55, scope: !16893)
!16902 = !DILocation(line: 417, column: 60, scope: !16893)
!16903 = !DILocation(line: 417, column: 32, scope: !16893)
!16904 = !DILocation(line: 418, column: 19, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 418, column: 8)
!16906 = !DILocation(line: 418, column: 24, scope: !16905)
!16907 = !DILocation(line: 418, column: 28, scope: !16905)
!16908 = !DILocation(line: 418, column: 8, scope: !16905)
!16909 = !DILocation(line: 418, column: 8, scope: !16881)
!16910 = !DILocation(line: 418, column: 43, scope: !16905)
!16911 = !DILocation(line: 418, column: 48, scope: !16905)
!16912 = !DILocation(line: 418, column: 52, scope: !16905)
!16913 = !DILocation(line: 418, column: 55, scope: !16905)
!16914 = !DILocation(line: 418, column: 60, scope: !16905)
!16915 = !DILocation(line: 418, column: 32, scope: !16905)
!16916 = !DILocation(line: 419, column: 8, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16881, file: !3, line: 419, column: 8)
!16918 = !DILocation(line: 419, column: 13, scope: !16917)
!16919 = !DILocation(line: 419, column: 16, scope: !16917)
!16920 = !DILocation(line: 419, column: 30, scope: !16917)
!16921 = !DILocation(line: 419, column: 35, scope: !16917)
!16922 = !DILocation(line: 419, column: 39, scope: !16917)
!16923 = !DILocation(line: 419, column: 19, scope: !16917)
!16924 = !DILocation(line: 419, column: 8, scope: !16881)
!16925 = !DILocation(line: 419, column: 54, scope: !16917)
!16926 = !DILocation(line: 419, column: 59, scope: !16917)
!16927 = !DILocation(line: 419, column: 63, scope: !16917)
!16928 = !DILocation(line: 419, column: 66, scope: !16917)
!16929 = !DILocation(line: 419, column: 71, scope: !16917)
!16930 = !DILocation(line: 419, column: 43, scope: !16917)
!16931 = !DILocation(line: 420, column: 3, scope: !16881)
!16932 = !DILocation(line: 421, column: 2, scope: !16866)
!16933 = !DILocation(line: 412, column: 29, scope: !16860)
!16934 = !DILocation(line: 412, column: 2, scope: !16860)
!16935 = distinct !{!16935, !16864, !16936}
!16936 = !DILocation(line: 421, column: 2, scope: !16857)
!16937 = !DILocation(line: 424, column: 8, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 424, column: 2)
!16939 = !DILocation(line: 424, column: 7, scope: !16938)
!16940 = !DILocation(line: 424, column: 12, scope: !16941)
!16941 = distinct !DILexicalBlock(scope: !16938, file: !3, line: 424, column: 2)
!16942 = !DILocation(line: 424, column: 14, scope: !16941)
!16943 = !DILocation(line: 424, column: 19, scope: !16941)
!16944 = !DILocation(line: 424, column: 13, scope: !16941)
!16945 = !DILocation(line: 424, column: 2, scope: !16938)
!16946 = !DILocalVariable(name: "ver", scope: !16947, file: !3, line: 425, type: !4179)
!16947 = distinct !DILexicalBlock(scope: !16941, file: !3, line: 424, column: 33)
!16948 = !DILocation(line: 425, column: 12, scope: !16947)
!16949 = !DILocation(line: 425, column: 34, scope: !16947)
!16950 = !DILocation(line: 425, column: 39, scope: !16947)
!16951 = !DILocation(line: 425, column: 17, scope: !16947)
!16952 = !DILocation(line: 426, column: 16, scope: !16947)
!16953 = !DILocation(line: 426, column: 21, scope: !16947)
!16954 = !DILocation(line: 426, column: 3, scope: !16947)
!16955 = !DILocation(line: 427, column: 7, scope: !16956)
!16956 = distinct !DILexicalBlock(scope: !16947, file: !3, line: 427, column: 7)
!16957 = !DILocation(line: 427, column: 7, scope: !16947)
!16958 = !DILocalVariable(name: "tav", scope: !16959, file: !3, line: 428, type: !44)
!16959 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 427, column: 19)
!16960 = !DILocation(line: 428, column: 11, scope: !16959)
!16961 = !DILocation(line: 428, column: 39, scope: !16959)
!16962 = !DILocation(line: 428, column: 44, scope: !16959)
!16963 = !DILocation(line: 428, column: 16, scope: !16959)
!16964 = !DILocation(line: 429, column: 8, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 429, column: 8)
!16966 = !DILocation(line: 429, column: 8, scope: !16959)
!16967 = !DILocalVariable(name: "tdn", scope: !16968, file: !3, line: 431, type: !2269)
!16968 = distinct !DILexicalBlock(scope: !16965, file: !3, line: 429, column: 13)
!16969 = !DILocation(line: 431, column: 17, scope: !16968)
!16970 = !DILocation(line: 431, column: 32, scope: !16968)
!16971 = !DILocation(line: 431, column: 37, scope: !16968)
!16972 = !DILocation(line: 431, column: 42, scope: !16968)
!16973 = !DILocation(line: 431, column: 23, scope: !16968)
!16974 = !DILocation(line: 432, column: 15, scope: !16968)
!16975 = !DILocation(line: 432, column: 20, scope: !16968)
!16976 = !DILocation(line: 432, column: 25, scope: !16968)
!16977 = !DILocation(line: 432, column: 24, scope: !16968)
!16978 = !DILocation(line: 432, column: 5, scope: !16968)
!16979 = !DILocation(line: 432, column: 12, scope: !16968)
!16980 = !DILocation(line: 433, column: 15, scope: !16968)
!16981 = !DILocation(line: 433, column: 20, scope: !16968)
!16982 = !DILocation(line: 433, column: 25, scope: !16968)
!16983 = !DILocation(line: 433, column: 24, scope: !16968)
!16984 = !DILocation(line: 433, column: 5, scope: !16968)
!16985 = !DILocation(line: 433, column: 12, scope: !16968)
!16986 = !DILocation(line: 434, column: 15, scope: !16968)
!16987 = !DILocation(line: 434, column: 20, scope: !16968)
!16988 = !DILocation(line: 434, column: 25, scope: !16968)
!16989 = !DILocation(line: 434, column: 24, scope: !16968)
!16990 = !DILocation(line: 434, column: 5, scope: !16968)
!16991 = !DILocation(line: 434, column: 12, scope: !16968)
!16992 = !DILocation(line: 435, column: 18, scope: !16968)
!16993 = !DILocation(line: 435, column: 5, scope: !16968)
!16994 = !DILocation(line: 436, column: 4, scope: !16968)
!16995 = !DILocation(line: 437, column: 3, scope: !16959)
!16996 = !DILocation(line: 438, column: 2, scope: !16947)
!16997 = !DILocation(line: 424, column: 29, scope: !16941)
!16998 = !DILocation(line: 424, column: 2, scope: !16941)
!16999 = distinct !{!16999, !16945, !17000}
!17000 = !DILocation(line: 438, column: 2, scope: !16938)
!17001 = !DILocation(line: 441, column: 6, scope: !17002)
!17002 = distinct !DILexicalBlock(scope: !16730, file: !3, line: 441, column: 6)
!17003 = !DILocation(line: 441, column: 22, scope: !17002)
!17004 = !DILocation(line: 441, column: 6, scope: !16730)
!17005 = !DILocalVariable(name: "mesh2tangent", scope: !17006, file: !3, line: 442, type: !4150)
!17006 = distinct !DILexicalBlock(scope: !17002, file: !3, line: 441, column: 32)
!17007 = !DILocation(line: 442, column: 24, scope: !17006)
!17008 = !DILocalVariable(name: "sContext", scope: !17006, file: !3, line: 443, type: !17009)
!17009 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceContext", file: !17010, line: 63, baseType: !17011)
!17010 = !DIFile(filename: "blender/intern/mikktspace/mikktspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!17011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SMikkTSpaceContext", file: !17010, line: 106, size: 128, elements: !17012)
!17012 = !{!17013, !17044}
!17013 = !DIDerivedType(tag: DW_TAG_member, name: "m_pInterface", scope: !17011, file: !17010, line: 108, baseType: !17014, size: 64)
!17014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17015, size: 64)
!17015 = !DIDerivedType(tag: DW_TAG_typedef, name: "SMikkTSpaceInterface", file: !17010, line: 104, baseType: !17016)
!17016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !17010, line: 65, size: 448, elements: !17017)
!17017 = !{!17018, !17024, !17028, !17032, !17033, !17034, !17038}
!17018 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumFaces", scope: !17016, file: !17010, line: 67, baseType: !17019, size: 64)
!17019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17020, size: 64)
!17020 = !DISubroutineType(types: !17021)
!17021 = !{!21, !17022}
!17022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17023, size: 64)
!17023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17009)
!17024 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNumVerticesOfFace", scope: !17016, file: !17010, line: 71, baseType: !17025, size: 64, offset: 64)
!17025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17026, size: 64)
!17026 = !DISubroutineType(types: !17027)
!17027 = !{!21, !17022, !7772}
!17028 = !DIDerivedType(tag: DW_TAG_member, name: "m_getPosition", scope: !17016, file: !17010, line: 75, baseType: !17029, size: 64, offset: 128)
!17029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17030, size: 64)
!17030 = !DISubroutineType(types: !17031)
!17031 = !{null, !17022, !44, !7772, !7772}
!17032 = !DIDerivedType(tag: DW_TAG_member, name: "m_getNormal", scope: !17016, file: !17010, line: 76, baseType: !17029, size: 64, offset: 192)
!17033 = !DIDerivedType(tag: DW_TAG_member, name: "m_getTexCoord", scope: !17016, file: !17010, line: 77, baseType: !17029, size: 64, offset: 256)
!17034 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpaceBasic", scope: !17016, file: !17010, line: 89, baseType: !17035, size: 64, offset: 320)
!17035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17036, size: 64)
!17036 = !DISubroutineType(types: !17037)
!17037 = !{null, !17022, !2417, !2269, !7772, !7772}
!17038 = !DIDerivedType(tag: DW_TAG_member, name: "m_setTSpace", scope: !17016, file: !17010, line: 102, baseType: !17039, size: 64, offset: 384)
!17039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17040, size: 64)
!17040 = !DISubroutineType(types: !17041)
!17041 = !{null, !17022, !2417, !2417, !2269, !2269, !17042, !7772, !7772}
!17042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17043)
!17043 = !DIDerivedType(tag: DW_TAG_typedef, name: "tbool", file: !17010, line: 62, baseType: !21)
!17044 = !DIDerivedType(tag: DW_TAG_member, name: "m_pUserData", scope: !17011, file: !17010, line: 109, baseType: !64, size: 64, offset: 64)
!17045 = !DILocation(line: 443, column: 22, scope: !17006)
!17046 = !DILocalVariable(name: "sInterface", scope: !17006, file: !3, line: 444, type: !17015)
!17047 = !DILocation(line: 444, column: 24, scope: !17006)
!17048 = !DILocation(line: 445, column: 3, scope: !17006)
!17049 = !DILocation(line: 446, column: 3, scope: !17006)
!17050 = !DILocation(line: 447, column: 3, scope: !17006)
!17051 = !DILocation(line: 449, column: 22, scope: !17006)
!17052 = !DILocation(line: 449, column: 16, scope: !17006)
!17053 = !DILocation(line: 449, column: 20, scope: !17006)
!17054 = !DILocation(line: 451, column: 26, scope: !17006)
!17055 = !DILocation(line: 451, column: 12, scope: !17006)
!17056 = !DILocation(line: 451, column: 24, scope: !17006)
!17057 = !DILocation(line: 452, column: 12, scope: !17006)
!17058 = !DILocation(line: 452, column: 25, scope: !17006)
!17059 = !DILocation(line: 453, column: 14, scope: !17006)
!17060 = !DILocation(line: 453, column: 28, scope: !17006)
!17061 = !DILocation(line: 454, column: 14, scope: !17006)
!17062 = !DILocation(line: 454, column: 37, scope: !17006)
!17063 = !DILocation(line: 455, column: 14, scope: !17006)
!17064 = !DILocation(line: 455, column: 28, scope: !17006)
!17065 = !DILocation(line: 456, column: 14, scope: !17006)
!17066 = !DILocation(line: 456, column: 28, scope: !17006)
!17067 = !DILocation(line: 457, column: 14, scope: !17006)
!17068 = !DILocation(line: 457, column: 26, scope: !17006)
!17069 = !DILocation(line: 458, column: 14, scope: !17006)
!17070 = !DILocation(line: 458, column: 31, scope: !17006)
!17071 = !DILocation(line: 460, column: 3, scope: !17006)
!17072 = !DILocation(line: 461, column: 2, scope: !17006)
!17073 = !DILocation(line: 462, column: 1, scope: !16730)
!17074 = !DILocalVariable(name: "obr", arg: 1, scope: !4176, file: !3, line: 1003, type: !3063)
!17075 = !DILocation(line: 1003, column: 45, scope: !4176)
!17076 = !DILocalVariable(name: "ma", arg: 2, scope: !4176, file: !3, line: 1003, type: !4157)
!17077 = !DILocation(line: 1003, column: 60, scope: !4176)
!17078 = !DILocalVariable(name: "vec", arg: 3, scope: !4176, file: !3, line: 1003, type: !2417)
!17079 = !DILocation(line: 1003, column: 76, scope: !4176)
!17080 = !DILocalVariable(name: "vec1", arg: 4, scope: !4176, file: !3, line: 1003, type: !2417)
!17081 = !DILocation(line: 1003, column: 96, scope: !4176)
!17082 = !DILocalVariable(name: "first", arg: 5, scope: !4176, file: !3, line: 1003, type: !21)
!17083 = !DILocation(line: 1003, column: 109, scope: !4176)
!17084 = !DILocalVariable(name: "line", arg: 6, scope: !4176, file: !3, line: 1003, type: !21)
!17085 = !DILocation(line: 1003, column: 120, scope: !4176)
!17086 = !DILocalVariable(name: "vlr", scope: !4176, file: !3, line: 1005, type: !13020)
!17087 = !DILocation(line: 1005, column: 11, scope: !4176)
!17088 = !DILocation(line: 1008, column: 6, scope: !17089)
!17089 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 1008, column: 6)
!17090 = !DILocation(line: 1008, column: 6, scope: !4176)
!17091 = !DILocation(line: 1009, column: 25, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17089, file: !3, line: 1008, column: 12)
!17093 = !DILocation(line: 1009, column: 30, scope: !17092)
!17094 = !DILocation(line: 1009, column: 35, scope: !17092)
!17095 = !DILocation(line: 1009, column: 42, scope: !17092)
!17096 = !DILocation(line: 1009, column: 8, scope: !17092)
!17097 = !DILocation(line: 1009, column: 6, scope: !17092)
!17098 = !DILocation(line: 1010, column: 29, scope: !17092)
!17099 = !DILocation(line: 1010, column: 34, scope: !17092)
!17100 = !DILocation(line: 1010, column: 39, scope: !17092)
!17101 = !DILocation(line: 1010, column: 46, scope: !17092)
!17102 = !DILocation(line: 1010, column: 12, scope: !17092)
!17103 = !DILocation(line: 1010, column: 3, scope: !17092)
!17104 = !DILocation(line: 1010, column: 8, scope: !17092)
!17105 = !DILocation(line: 1010, column: 10, scope: !17092)
!17106 = !DILocation(line: 1011, column: 29, scope: !17092)
!17107 = !DILocation(line: 1011, column: 34, scope: !17092)
!17108 = !DILocation(line: 1011, column: 39, scope: !17092)
!17109 = !DILocation(line: 1011, column: 46, scope: !17092)
!17110 = !DILocation(line: 1011, column: 12, scope: !17092)
!17111 = !DILocation(line: 1011, column: 3, scope: !17092)
!17112 = !DILocation(line: 1011, column: 8, scope: !17092)
!17113 = !DILocation(line: 1011, column: 10, scope: !17092)
!17114 = !DILocation(line: 1012, column: 12, scope: !17092)
!17115 = !DILocation(line: 1012, column: 17, scope: !17092)
!17116 = !DILocation(line: 1012, column: 3, scope: !17092)
!17117 = !DILocation(line: 1012, column: 8, scope: !17092)
!17118 = !DILocation(line: 1012, column: 10, scope: !17092)
!17119 = !DILocation(line: 1013, column: 3, scope: !17092)
!17120 = !DILocation(line: 1013, column: 8, scope: !17092)
!17121 = !DILocation(line: 1013, column: 10, scope: !17092)
!17122 = !DILocation(line: 1015, column: 14, scope: !17092)
!17123 = !DILocation(line: 1015, column: 19, scope: !17092)
!17124 = !DILocation(line: 1015, column: 23, scope: !17092)
!17125 = !DILocation(line: 1015, column: 27, scope: !17092)
!17126 = !DILocation(line: 1015, column: 3, scope: !17092)
!17127 = !DILocation(line: 1016, column: 14, scope: !17092)
!17128 = !DILocation(line: 1016, column: 19, scope: !17092)
!17129 = !DILocation(line: 1016, column: 23, scope: !17092)
!17130 = !DILocation(line: 1016, column: 27, scope: !17092)
!17131 = !DILocation(line: 1016, column: 3, scope: !17092)
!17132 = !DILocation(line: 1018, column: 15, scope: !17092)
!17133 = !DILocation(line: 1018, column: 20, scope: !17092)
!17134 = !DILocation(line: 1018, column: 23, scope: !17092)
!17135 = !DILocation(line: 1018, column: 28, scope: !17092)
!17136 = !DILocation(line: 1018, column: 3, scope: !17092)
!17137 = !DILocation(line: 1019, column: 16, scope: !17092)
!17138 = !DILocation(line: 1019, column: 21, scope: !17092)
!17139 = !DILocation(line: 1019, column: 3, scope: !17092)
!17140 = !DILocation(line: 1020, column: 14, scope: !17092)
!17141 = !DILocation(line: 1020, column: 19, scope: !17092)
!17142 = !DILocation(line: 1020, column: 23, scope: !17092)
!17143 = !DILocation(line: 1020, column: 26, scope: !17092)
!17144 = !DILocation(line: 1020, column: 31, scope: !17092)
!17145 = !DILocation(line: 1020, column: 3, scope: !17092)
!17146 = !DILocation(line: 1021, column: 14, scope: !17092)
!17147 = !DILocation(line: 1021, column: 19, scope: !17092)
!17148 = !DILocation(line: 1021, column: 23, scope: !17092)
!17149 = !DILocation(line: 1021, column: 26, scope: !17092)
!17150 = !DILocation(line: 1021, column: 31, scope: !17092)
!17151 = !DILocation(line: 1021, column: 3, scope: !17092)
!17152 = !DILocation(line: 1023, column: 13, scope: !17092)
!17153 = !DILocation(line: 1023, column: 3, scope: !17092)
!17154 = !DILocation(line: 1023, column: 8, scope: !17092)
!17155 = !DILocation(line: 1023, column: 11, scope: !17092)
!17156 = !DILocation(line: 1024, column: 3, scope: !17092)
!17157 = !DILocation(line: 1024, column: 8, scope: !17092)
!17158 = !DILocation(line: 1024, column: 10, scope: !17092)
!17159 = !DILocation(line: 1026, column: 2, scope: !17092)
!17160 = !DILocation(line: 1027, column: 11, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17089, file: !3, line: 1027, column: 11)
!17162 = !DILocation(line: 1027, column: 11, scope: !17089)
!17163 = !DILocation(line: 1028, column: 24, scope: !17164)
!17164 = distinct !DILexicalBlock(scope: !17161, file: !3, line: 1027, column: 18)
!17165 = !DILocation(line: 1028, column: 29, scope: !17164)
!17166 = !DILocation(line: 1028, column: 34, scope: !17164)
!17167 = !DILocation(line: 1028, column: 41, scope: !17164)
!17168 = !DILocation(line: 1028, column: 7, scope: !17164)
!17169 = !DILocation(line: 1028, column: 5, scope: !17164)
!17170 = !DILocation(line: 1029, column: 14, scope: !17164)
!17171 = !DILocation(line: 1029, column: 18, scope: !17164)
!17172 = !DILocation(line: 1029, column: 22, scope: !17164)
!17173 = !DILocation(line: 1029, column: 3, scope: !17164)
!17174 = !DILocation(line: 1030, column: 2, scope: !17164)
!17175 = !DILocation(line: 1032, column: 25, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17161, file: !3, line: 1031, column: 7)
!17177 = !DILocation(line: 1032, column: 30, scope: !17176)
!17178 = !DILocation(line: 1032, column: 35, scope: !17176)
!17179 = !DILocation(line: 1032, column: 42, scope: !17176)
!17180 = !DILocation(line: 1032, column: 8, scope: !17176)
!17181 = !DILocation(line: 1032, column: 6, scope: !17176)
!17182 = !DILocation(line: 1033, column: 12, scope: !17176)
!17183 = !DILocation(line: 1033, column: 3, scope: !17176)
!17184 = !DILocation(line: 1033, column: 8, scope: !17176)
!17185 = !DILocation(line: 1033, column: 10, scope: !17176)
!17186 = !DILocation(line: 1034, column: 29, scope: !17176)
!17187 = !DILocation(line: 1034, column: 34, scope: !17176)
!17188 = !DILocation(line: 1034, column: 39, scope: !17176)
!17189 = !DILocation(line: 1034, column: 46, scope: !17176)
!17190 = !DILocation(line: 1034, column: 12, scope: !17176)
!17191 = !DILocation(line: 1034, column: 3, scope: !17176)
!17192 = !DILocation(line: 1034, column: 8, scope: !17176)
!17193 = !DILocation(line: 1034, column: 10, scope: !17176)
!17194 = !DILocation(line: 1035, column: 12, scope: !17176)
!17195 = !DILocation(line: 1035, column: 17, scope: !17176)
!17196 = !DILocation(line: 1035, column: 3, scope: !17176)
!17197 = !DILocation(line: 1035, column: 8, scope: !17176)
!17198 = !DILocation(line: 1035, column: 10, scope: !17176)
!17199 = !DILocation(line: 1036, column: 3, scope: !17176)
!17200 = !DILocation(line: 1036, column: 8, scope: !17176)
!17201 = !DILocation(line: 1036, column: 10, scope: !17176)
!17202 = !DILocation(line: 1038, column: 7, scope: !17176)
!17203 = !DILocation(line: 1038, column: 12, scope: !17176)
!17204 = !DILocation(line: 1038, column: 5, scope: !17176)
!17205 = !DILocation(line: 1039, column: 14, scope: !17176)
!17206 = !DILocation(line: 1039, column: 18, scope: !17176)
!17207 = !DILocation(line: 1039, column: 22, scope: !17176)
!17208 = !DILocation(line: 1039, column: 3, scope: !17176)
!17209 = !DILocation(line: 1041, column: 15, scope: !17176)
!17210 = !DILocation(line: 1041, column: 20, scope: !17176)
!17211 = !DILocation(line: 1041, column: 23, scope: !17176)
!17212 = !DILocation(line: 1041, column: 28, scope: !17176)
!17213 = !DILocation(line: 1041, column: 3, scope: !17176)
!17214 = !DILocation(line: 1042, column: 16, scope: !17176)
!17215 = !DILocation(line: 1042, column: 21, scope: !17176)
!17216 = !DILocation(line: 1042, column: 3, scope: !17176)
!17217 = !DILocation(line: 1043, column: 14, scope: !17176)
!17218 = !DILocation(line: 1043, column: 18, scope: !17176)
!17219 = !DILocation(line: 1043, column: 21, scope: !17176)
!17220 = !DILocation(line: 1043, column: 26, scope: !17176)
!17221 = !DILocation(line: 1043, column: 3, scope: !17176)
!17222 = !DILocation(line: 1045, column: 13, scope: !17176)
!17223 = !DILocation(line: 1045, column: 3, scope: !17176)
!17224 = !DILocation(line: 1045, column: 8, scope: !17176)
!17225 = !DILocation(line: 1045, column: 11, scope: !17176)
!17226 = !DILocation(line: 1046, column: 3, scope: !17176)
!17227 = !DILocation(line: 1046, column: 8, scope: !17176)
!17228 = !DILocation(line: 1046, column: 10, scope: !17176)
!17229 = !DILocation(line: 1049, column: 1, scope: !4176)
!17230 = !DILocalVariable(name: "re", arg: 1, scope: !4183, file: !3, line: 748, type: !6)
!17231 = !DILocation(line: 748, column: 44, scope: !4183)
!17232 = !DILocalVariable(name: "obr", arg: 2, scope: !4183, file: !3, line: 748, type: !3063)
!17233 = !DILocation(line: 748, column: 59, scope: !4183)
!17234 = !DILocalVariable(name: "ma", arg: 3, scope: !4183, file: !3, line: 748, type: !4157)
!17235 = !DILocation(line: 748, column: 74, scope: !4183)
!17236 = !DILocalVariable(name: "sd", arg: 4, scope: !4183, file: !3, line: 748, type: !4186)
!17237 = !DILocation(line: 748, column: 98, scope: !4183)
!17238 = !DILocalVariable(name: "vec", arg: 5, scope: !4183, file: !3, line: 748, type: !2417)
!17239 = !DILocation(line: 748, column: 114, scope: !4183)
!17240 = !DILocalVariable(name: "vec1", arg: 6, scope: !4183, file: !3, line: 748, type: !2417)
!17241 = !DILocation(line: 748, column: 134, scope: !4183)
!17242 = !DILocalVariable(name: "vlr", scope: !4183, file: !3, line: 751, type: !13020)
!17243 = !DILocation(line: 751, column: 11, scope: !4183)
!17244 = !DILocalVariable(name: "nor", scope: !4183, file: !3, line: 752, type: !188)
!17245 = !DILocation(line: 752, column: 8, scope: !4183)
!17246 = !DILocalVariable(name: "cross", scope: !4183, file: !3, line: 752, type: !188)
!17247 = !DILocation(line: 752, column: 16, scope: !4183)
!17248 = !DILocalVariable(name: "crosslen", scope: !4183, file: !3, line: 752, type: !45)
!17249 = !DILocation(line: 752, column: 26, scope: !4183)
!17250 = !DILocalVariable(name: "w", scope: !4183, file: !3, line: 752, type: !45)
!17251 = !DILocation(line: 752, column: 36, scope: !4183)
!17252 = !DILocalVariable(name: "dx", scope: !4183, file: !3, line: 752, type: !45)
!17253 = !DILocation(line: 752, column: 39, scope: !4183)
!17254 = !DILocalVariable(name: "dy", scope: !4183, file: !3, line: 752, type: !45)
!17255 = !DILocation(line: 752, column: 43, scope: !4183)
!17256 = !DILocalVariable(name: "width", scope: !4183, file: !3, line: 752, type: !45)
!17257 = !DILocation(line: 752, column: 47, scope: !4183)
!17258 = !DILocalVariable(name: "flag", scope: !4183, file: !3, line: 754, type: !21)
!17259 = !DILocation(line: 754, column: 6, scope: !4183)
!17260 = !DILocalVariable(name: "i", scope: !4183, file: !3, line: 754, type: !21)
!17261 = !DILocation(line: 754, column: 12, scope: !4183)
!17262 = !DILocation(line: 757, column: 14, scope: !4183)
!17263 = !DILocation(line: 757, column: 19, scope: !4183)
!17264 = !DILocation(line: 757, column: 24, scope: !4183)
!17265 = !DILocation(line: 757, column: 2, scope: !4183)
!17266 = !DILocation(line: 758, column: 15, scope: !4183)
!17267 = !DILocation(line: 758, column: 2, scope: !4183)
!17268 = !DILocation(line: 759, column: 16, scope: !4183)
!17269 = !DILocation(line: 759, column: 23, scope: !4183)
!17270 = !DILocation(line: 759, column: 28, scope: !4183)
!17271 = !DILocation(line: 759, column: 2, scope: !4183)
!17272 = !DILocation(line: 762, column: 5, scope: !4183)
!17273 = !DILocation(line: 762, column: 12, scope: !4183)
!17274 = !DILocation(line: 762, column: 16, scope: !4183)
!17275 = !DILocation(line: 762, column: 11, scope: !4183)
!17276 = !DILocation(line: 762, column: 31, scope: !4183)
!17277 = !DILocation(line: 762, column: 35, scope: !4183)
!17278 = !DILocation(line: 762, column: 29, scope: !4183)
!17279 = !DILocation(line: 762, column: 3, scope: !4183)
!17280 = !DILocation(line: 763, column: 6, scope: !4183)
!17281 = !DILocation(line: 763, column: 10, scope: !4183)
!17282 = !DILocation(line: 763, column: 15, scope: !4183)
!17283 = !DILocation(line: 763, column: 14, scope: !4183)
!17284 = !DILocation(line: 763, column: 24, scope: !4183)
!17285 = !DILocation(line: 763, column: 28, scope: !4183)
!17286 = !DILocation(line: 763, column: 23, scope: !4183)
!17287 = !DILocation(line: 763, column: 4, scope: !4183)
!17288 = !DILocation(line: 764, column: 6, scope: !4183)
!17289 = !DILocation(line: 764, column: 10, scope: !4183)
!17290 = !DILocation(line: 764, column: 15, scope: !4183)
!17291 = !DILocation(line: 764, column: 14, scope: !4183)
!17292 = !DILocation(line: 764, column: 24, scope: !4183)
!17293 = !DILocation(line: 764, column: 28, scope: !4183)
!17294 = !DILocation(line: 764, column: 23, scope: !4183)
!17295 = !DILocation(line: 764, column: 4, scope: !4183)
!17296 = !DILocation(line: 765, column: 12, scope: !4183)
!17297 = !DILocation(line: 765, column: 17, scope: !4183)
!17298 = !DILocation(line: 765, column: 15, scope: !4183)
!17299 = !DILocation(line: 765, column: 22, scope: !4183)
!17300 = !DILocation(line: 765, column: 27, scope: !4183)
!17301 = !DILocation(line: 765, column: 25, scope: !4183)
!17302 = !DILocation(line: 765, column: 20, scope: !4183)
!17303 = !DILocation(line: 765, column: 6, scope: !4183)
!17304 = !DILocation(line: 765, column: 33, scope: !4183)
!17305 = !DILocation(line: 765, column: 31, scope: !4183)
!17306 = !DILocation(line: 765, column: 4, scope: !4183)
!17307 = !DILocation(line: 767, column: 6, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 767, column: 6)
!17309 = !DILocation(line: 767, column: 7, scope: !17308)
!17310 = !DILocation(line: 767, column: 6, scope: !4183)
!17311 = !DILocalVariable(name: "fac", scope: !17312, file: !3, line: 768, type: !45)
!17312 = distinct !DILexicalBlock(scope: !17308, file: !3, line: 767, column: 15)
!17313 = !DILocation(line: 768, column: 9, scope: !17312)
!17314 = !DILocation(line: 769, column: 7, scope: !17315)
!17315 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 769, column: 7)
!17316 = !DILocation(line: 769, column: 11, scope: !17315)
!17317 = !DILocation(line: 769, column: 22, scope: !17315)
!17318 = !DILocation(line: 769, column: 7, scope: !17312)
!17319 = !DILocation(line: 770, column: 8, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17321, file: !3, line: 770, column: 8)
!17321 = distinct !DILexicalBlock(scope: !17315, file: !3, line: 769, column: 30)
!17322 = !DILocation(line: 770, column: 12, scope: !17320)
!17323 = !DILocation(line: 770, column: 23, scope: !17320)
!17324 = !DILocation(line: 770, column: 8, scope: !17321)
!17325 = !DILocation(line: 771, column: 14, scope: !17320)
!17326 = !DILocation(line: 771, column: 18, scope: !17320)
!17327 = !DILocation(line: 771, column: 29, scope: !17320)
!17328 = !DILocation(line: 771, column: 33, scope: !17320)
!17329 = !DILocation(line: 771, column: 28, scope: !17320)
!17330 = !DILocation(line: 771, column: 24, scope: !17320)
!17331 = !DILocation(line: 771, column: 10, scope: !17320)
!17332 = !DILocation(line: 771, column: 8, scope: !17320)
!17333 = !DILocation(line: 771, column: 5, scope: !17320)
!17334 = !DILocation(line: 773, column: 14, scope: !17320)
!17335 = !DILocation(line: 773, column: 18, scope: !17320)
!17336 = !DILocation(line: 773, column: 35, scope: !17320)
!17337 = !DILocation(line: 773, column: 39, scope: !17320)
!17338 = !DILocation(line: 773, column: 34, scope: !17320)
!17339 = !DILocation(line: 773, column: 28, scope: !17320)
!17340 = !DILocation(line: 773, column: 24, scope: !17320)
!17341 = !DILocation(line: 773, column: 10, scope: !17320)
!17342 = !DILocation(line: 773, column: 8, scope: !17320)
!17343 = !DILocation(line: 774, column: 3, scope: !17321)
!17344 = !DILocation(line: 775, column: 13, scope: !17315)
!17345 = !DILocation(line: 775, column: 17, scope: !17315)
!17346 = !DILocation(line: 775, column: 11, scope: !17315)
!17347 = !DILocation(line: 777, column: 17, scope: !17312)
!17348 = !DILocation(line: 777, column: 16, scope: !17312)
!17349 = !DILocation(line: 777, column: 22, scope: !17312)
!17350 = !DILocation(line: 777, column: 26, scope: !17312)
!17351 = !DILocation(line: 777, column: 21, scope: !17312)
!17352 = !DILocation(line: 777, column: 40, scope: !17312)
!17353 = !DILocation(line: 777, column: 45, scope: !17312)
!17354 = !DILocation(line: 777, column: 49, scope: !17312)
!17355 = !DILocation(line: 777, column: 44, scope: !17312)
!17356 = !DILocation(line: 777, column: 37, scope: !17312)
!17357 = !DILocation(line: 777, column: 8, scope: !17312)
!17358 = !DILocation(line: 780, column: 7, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17312, file: !3, line: 780, column: 7)
!17360 = !DILocation(line: 780, column: 11, scope: !17359)
!17361 = !DILocation(line: 780, column: 16, scope: !17359)
!17362 = !DILocation(line: 780, column: 7, scope: !17312)
!17363 = !DILocation(line: 781, column: 21, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17359, file: !3, line: 780, column: 34)
!17365 = !DILocation(line: 781, column: 14, scope: !17364)
!17366 = !DILocation(line: 781, column: 12, scope: !17364)
!17367 = !DILocation(line: 782, column: 12, scope: !17364)
!17368 = !DILocation(line: 782, column: 11, scope: !17364)
!17369 = !DILocation(line: 782, column: 21, scope: !17364)
!17370 = !DILocation(line: 782, column: 25, scope: !17364)
!17371 = !DILocation(line: 782, column: 20, scope: !17364)
!17372 = !DILocation(line: 782, column: 36, scope: !17364)
!17373 = !DILocation(line: 782, column: 35, scope: !17364)
!17374 = !DILocation(line: 782, column: 5, scope: !17364)
!17375 = !DILocation(line: 784, column: 8, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !17364, file: !3, line: 784, column: 8)
!17377 = !DILocation(line: 784, column: 16, scope: !17376)
!17378 = !DILocation(line: 784, column: 14, scope: !17376)
!17379 = !DILocation(line: 784, column: 8, scope: !17364)
!17380 = !DILocation(line: 785, column: 12, scope: !17376)
!17381 = !DILocation(line: 785, column: 10, scope: !17376)
!17382 = !DILocation(line: 785, column: 5, scope: !17376)
!17383 = !DILocation(line: 788, column: 14, scope: !17364)
!17384 = !DILocation(line: 788, column: 26, scope: !17364)
!17385 = !DILocation(line: 788, column: 25, scope: !17364)
!17386 = !DILocation(line: 788, column: 4, scope: !17364)
!17387 = !DILocation(line: 789, column: 3, scope: !17364)
!17388 = !DILocation(line: 791, column: 11, scope: !17359)
!17389 = !DILocation(line: 791, column: 9, scope: !17359)
!17390 = !DILocation(line: 793, column: 13, scope: !17312)
!17391 = !DILocation(line: 793, column: 20, scope: !17312)
!17392 = !DILocation(line: 793, column: 3, scope: !17312)
!17393 = !DILocation(line: 794, column: 2, scope: !17312)
!17394 = !DILocation(line: 796, column: 6, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 796, column: 6)
!17396 = !DILocation(line: 796, column: 10, scope: !17395)
!17397 = !DILocation(line: 796, column: 15, scope: !17395)
!17398 = !DILocation(line: 796, column: 6, scope: !4183)
!17399 = !DILocation(line: 797, column: 7, scope: !17395)
!17400 = !DILocation(line: 797, column: 3, scope: !17395)
!17401 = !DILocation(line: 799, column: 7, scope: !17395)
!17402 = !DILocation(line: 802, column: 6, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 802, column: 6)
!17404 = !DILocation(line: 802, column: 10, scope: !17403)
!17405 = !DILocation(line: 802, column: 20, scope: !17403)
!17406 = !DILocation(line: 802, column: 6, scope: !4183)
!17407 = !DILocation(line: 803, column: 8, scope: !17403)
!17408 = !DILocation(line: 803, column: 3, scope: !17403)
!17409 = !DILocation(line: 806, column: 6, scope: !17410)
!17410 = distinct !DILexicalBlock(scope: !4183, file: !3, line: 806, column: 6)
!17411 = !DILocation(line: 806, column: 10, scope: !17410)
!17412 = !DILocation(line: 806, column: 6, scope: !4183)
!17413 = !DILocation(line: 807, column: 25, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17410, file: !3, line: 806, column: 16)
!17415 = !DILocation(line: 807, column: 30, scope: !17414)
!17416 = !DILocation(line: 807, column: 35, scope: !17414)
!17417 = !DILocation(line: 807, column: 42, scope: !17414)
!17418 = !DILocation(line: 807, column: 8, scope: !17414)
!17419 = !DILocation(line: 807, column: 6, scope: !17414)
!17420 = !DILocation(line: 808, column: 14, scope: !17414)
!17421 = !DILocation(line: 808, column: 3, scope: !17414)
!17422 = !DILocation(line: 808, column: 8, scope: !17414)
!17423 = !DILocation(line: 808, column: 12, scope: !17414)
!17424 = !DILocation(line: 809, column: 29, scope: !17414)
!17425 = !DILocation(line: 809, column: 34, scope: !17414)
!17426 = !DILocation(line: 809, column: 39, scope: !17414)
!17427 = !DILocation(line: 809, column: 46, scope: !17414)
!17428 = !DILocation(line: 809, column: 12, scope: !17414)
!17429 = !DILocation(line: 809, column: 3, scope: !17414)
!17430 = !DILocation(line: 809, column: 8, scope: !17414)
!17431 = !DILocation(line: 809, column: 10, scope: !17414)
!17432 = !DILocation(line: 810, column: 29, scope: !17414)
!17433 = !DILocation(line: 810, column: 34, scope: !17414)
!17434 = !DILocation(line: 810, column: 39, scope: !17414)
!17435 = !DILocation(line: 810, column: 46, scope: !17414)
!17436 = !DILocation(line: 810, column: 12, scope: !17414)
!17437 = !DILocation(line: 810, column: 3, scope: !17414)
!17438 = !DILocation(line: 810, column: 8, scope: !17414)
!17439 = !DILocation(line: 810, column: 10, scope: !17414)
!17440 = !DILocation(line: 811, column: 29, scope: !17414)
!17441 = !DILocation(line: 811, column: 34, scope: !17414)
!17442 = !DILocation(line: 811, column: 39, scope: !17414)
!17443 = !DILocation(line: 811, column: 46, scope: !17414)
!17444 = !DILocation(line: 811, column: 12, scope: !17414)
!17445 = !DILocation(line: 811, column: 3, scope: !17414)
!17446 = !DILocation(line: 811, column: 8, scope: !17414)
!17447 = !DILocation(line: 811, column: 10, scope: !17414)
!17448 = !DILocation(line: 812, column: 29, scope: !17414)
!17449 = !DILocation(line: 812, column: 34, scope: !17414)
!17450 = !DILocation(line: 812, column: 39, scope: !17414)
!17451 = !DILocation(line: 812, column: 46, scope: !17414)
!17452 = !DILocation(line: 812, column: 12, scope: !17414)
!17453 = !DILocation(line: 812, column: 3, scope: !17414)
!17454 = !DILocation(line: 812, column: 8, scope: !17414)
!17455 = !DILocation(line: 812, column: 10, scope: !17414)
!17456 = !DILocation(line: 814, column: 14, scope: !17414)
!17457 = !DILocation(line: 814, column: 19, scope: !17414)
!17458 = !DILocation(line: 814, column: 23, scope: !17414)
!17459 = !DILocation(line: 814, column: 27, scope: !17414)
!17460 = !DILocation(line: 814, column: 3, scope: !17414)
!17461 = !DILocation(line: 815, column: 13, scope: !17414)
!17462 = !DILocation(line: 815, column: 18, scope: !17414)
!17463 = !DILocation(line: 815, column: 22, scope: !17414)
!17464 = !DILocation(line: 815, column: 26, scope: !17414)
!17465 = !DILocation(line: 815, column: 3, scope: !17414)
!17466 = !DILocation(line: 816, column: 14, scope: !17414)
!17467 = !DILocation(line: 816, column: 19, scope: !17414)
!17468 = !DILocation(line: 816, column: 23, scope: !17414)
!17469 = !DILocation(line: 816, column: 26, scope: !17414)
!17470 = !DILocation(line: 816, column: 3, scope: !17414)
!17471 = !DILocation(line: 817, column: 18, scope: !17414)
!17472 = !DILocation(line: 817, column: 22, scope: !17414)
!17473 = !DILocation(line: 817, column: 3, scope: !17414)
!17474 = !DILocation(line: 817, column: 8, scope: !17414)
!17475 = !DILocation(line: 817, column: 12, scope: !17414)
!17476 = !DILocation(line: 817, column: 16, scope: !17414)
!17477 = !DILocation(line: 818, column: 3, scope: !17414)
!17478 = !DILocation(line: 818, column: 8, scope: !17414)
!17479 = !DILocation(line: 818, column: 12, scope: !17414)
!17480 = !DILocation(line: 818, column: 18, scope: !17414)
!17481 = !DILocation(line: 820, column: 14, scope: !17414)
!17482 = !DILocation(line: 820, column: 19, scope: !17414)
!17483 = !DILocation(line: 820, column: 23, scope: !17414)
!17484 = !DILocation(line: 820, column: 27, scope: !17414)
!17485 = !DILocation(line: 820, column: 3, scope: !17414)
!17486 = !DILocation(line: 821, column: 15, scope: !17414)
!17487 = !DILocation(line: 821, column: 20, scope: !17414)
!17488 = !DILocation(line: 821, column: 24, scope: !17414)
!17489 = !DILocation(line: 821, column: 28, scope: !17414)
!17490 = !DILocation(line: 821, column: 33, scope: !17414)
!17491 = !DILocation(line: 821, column: 37, scope: !17414)
!17492 = !DILocation(line: 821, column: 41, scope: !17414)
!17493 = !DILocation(line: 821, column: 3, scope: !17414)
!17494 = !DILocation(line: 822, column: 14, scope: !17414)
!17495 = !DILocation(line: 822, column: 19, scope: !17414)
!17496 = !DILocation(line: 822, column: 23, scope: !17414)
!17497 = !DILocation(line: 822, column: 26, scope: !17414)
!17498 = !DILocation(line: 822, column: 3, scope: !17414)
!17499 = !DILocation(line: 823, column: 18, scope: !17414)
!17500 = !DILocation(line: 823, column: 22, scope: !17414)
!17501 = !DILocation(line: 823, column: 3, scope: !17414)
!17502 = !DILocation(line: 823, column: 8, scope: !17414)
!17503 = !DILocation(line: 823, column: 12, scope: !17414)
!17504 = !DILocation(line: 823, column: 16, scope: !17414)
!17505 = !DILocation(line: 824, column: 19, scope: !17414)
!17506 = !DILocation(line: 824, column: 24, scope: !17414)
!17507 = !DILocation(line: 824, column: 28, scope: !17414)
!17508 = !DILocation(line: 824, column: 3, scope: !17414)
!17509 = !DILocation(line: 824, column: 8, scope: !17414)
!17510 = !DILocation(line: 824, column: 12, scope: !17414)
!17511 = !DILocation(line: 824, column: 17, scope: !17414)
!17512 = !DILocation(line: 826, column: 14, scope: !17414)
!17513 = !DILocation(line: 826, column: 19, scope: !17414)
!17514 = !DILocation(line: 826, column: 23, scope: !17414)
!17515 = !DILocation(line: 826, column: 27, scope: !17414)
!17516 = !DILocation(line: 826, column: 3, scope: !17414)
!17517 = !DILocation(line: 827, column: 13, scope: !17414)
!17518 = !DILocation(line: 827, column: 18, scope: !17414)
!17519 = !DILocation(line: 827, column: 22, scope: !17414)
!17520 = !DILocation(line: 827, column: 26, scope: !17414)
!17521 = !DILocation(line: 827, column: 3, scope: !17414)
!17522 = !DILocation(line: 828, column: 14, scope: !17414)
!17523 = !DILocation(line: 828, column: 19, scope: !17414)
!17524 = !DILocation(line: 828, column: 23, scope: !17414)
!17525 = !DILocation(line: 828, column: 26, scope: !17414)
!17526 = !DILocation(line: 828, column: 3, scope: !17414)
!17527 = !DILocation(line: 829, column: 18, scope: !17414)
!17528 = !DILocation(line: 829, column: 22, scope: !17414)
!17529 = !DILocation(line: 829, column: 3, scope: !17414)
!17530 = !DILocation(line: 829, column: 8, scope: !17414)
!17531 = !DILocation(line: 829, column: 12, scope: !17414)
!17532 = !DILocation(line: 829, column: 16, scope: !17414)
!17533 = !DILocation(line: 830, column: 3, scope: !17414)
!17534 = !DILocation(line: 830, column: 8, scope: !17414)
!17535 = !DILocation(line: 830, column: 12, scope: !17414)
!17536 = !DILocation(line: 830, column: 18, scope: !17414)
!17537 = !DILocation(line: 832, column: 14, scope: !17414)
!17538 = !DILocation(line: 832, column: 19, scope: !17414)
!17539 = !DILocation(line: 832, column: 23, scope: !17414)
!17540 = !DILocation(line: 832, column: 27, scope: !17414)
!17541 = !DILocation(line: 832, column: 3, scope: !17414)
!17542 = !DILocation(line: 833, column: 15, scope: !17414)
!17543 = !DILocation(line: 833, column: 20, scope: !17414)
!17544 = !DILocation(line: 833, column: 24, scope: !17414)
!17545 = !DILocation(line: 833, column: 28, scope: !17414)
!17546 = !DILocation(line: 833, column: 33, scope: !17414)
!17547 = !DILocation(line: 833, column: 37, scope: !17414)
!17548 = !DILocation(line: 833, column: 41, scope: !17414)
!17549 = !DILocation(line: 833, column: 3, scope: !17414)
!17550 = !DILocation(line: 834, column: 14, scope: !17414)
!17551 = !DILocation(line: 834, column: 19, scope: !17414)
!17552 = !DILocation(line: 834, column: 23, scope: !17414)
!17553 = !DILocation(line: 834, column: 26, scope: !17414)
!17554 = !DILocation(line: 834, column: 3, scope: !17414)
!17555 = !DILocation(line: 835, column: 18, scope: !17414)
!17556 = !DILocation(line: 835, column: 22, scope: !17414)
!17557 = !DILocation(line: 835, column: 3, scope: !17414)
!17558 = !DILocation(line: 835, column: 8, scope: !17414)
!17559 = !DILocation(line: 835, column: 12, scope: !17414)
!17560 = !DILocation(line: 835, column: 16, scope: !17414)
!17561 = !DILocation(line: 836, column: 19, scope: !17414)
!17562 = !DILocation(line: 836, column: 24, scope: !17414)
!17563 = !DILocation(line: 836, column: 28, scope: !17414)
!17564 = !DILocation(line: 836, column: 3, scope: !17414)
!17565 = !DILocation(line: 836, column: 8, scope: !17414)
!17566 = !DILocation(line: 836, column: 12, scope: !17414)
!17567 = !DILocation(line: 836, column: 17, scope: !17414)
!17568 = !DILocation(line: 838, column: 18, scope: !17414)
!17569 = !DILocation(line: 838, column: 23, scope: !17414)
!17570 = !DILocation(line: 838, column: 26, scope: !17414)
!17571 = !DILocation(line: 838, column: 31, scope: !17414)
!17572 = !DILocation(line: 838, column: 35, scope: !17414)
!17573 = !DILocation(line: 838, column: 39, scope: !17414)
!17574 = !DILocation(line: 838, column: 44, scope: !17414)
!17575 = !DILocation(line: 838, column: 48, scope: !17414)
!17576 = !DILocation(line: 838, column: 52, scope: !17414)
!17577 = !DILocation(line: 838, column: 57, scope: !17414)
!17578 = !DILocation(line: 838, column: 61, scope: !17414)
!17579 = !DILocation(line: 838, column: 65, scope: !17414)
!17580 = !DILocation(line: 838, column: 70, scope: !17414)
!17581 = !DILocation(line: 838, column: 74, scope: !17414)
!17582 = !DILocation(line: 838, column: 3, scope: !17414)
!17583 = !DILocation(line: 840, column: 13, scope: !17414)
!17584 = !DILocation(line: 840, column: 3, scope: !17414)
!17585 = !DILocation(line: 840, column: 8, scope: !17414)
!17586 = !DILocation(line: 840, column: 11, scope: !17414)
!17587 = !DILocation(line: 841, column: 3, scope: !17414)
!17588 = !DILocation(line: 841, column: 8, scope: !17414)
!17589 = !DILocation(line: 841, column: 10, scope: !17414)
!17590 = !DILocation(line: 843, column: 7, scope: !17591)
!17591 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 843, column: 7)
!17592 = !DILocation(line: 843, column: 11, scope: !17591)
!17593 = !DILocation(line: 843, column: 7, scope: !17414)
!17594 = !DILocalVariable(name: "snor", scope: !17595, file: !3, line: 844, type: !44)
!17595 = distinct !DILexicalBlock(scope: !17591, file: !3, line: 843, column: 20)
!17596 = !DILocation(line: 844, column: 11, scope: !17595)
!17597 = !DILocation(line: 844, column: 40, scope: !17595)
!17598 = !DILocation(line: 844, column: 45, scope: !17595)
!17599 = !DILocation(line: 844, column: 17, scope: !17595)
!17600 = !DILocation(line: 845, column: 15, scope: !17595)
!17601 = !DILocation(line: 845, column: 21, scope: !17595)
!17602 = !DILocation(line: 845, column: 25, scope: !17595)
!17603 = !DILocation(line: 845, column: 4, scope: !17595)
!17604 = !DILocation(line: 846, column: 3, scope: !17595)
!17605 = !DILocation(line: 848, column: 7, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 848, column: 7)
!17607 = !DILocation(line: 848, column: 11, scope: !17606)
!17608 = !DILocation(line: 848, column: 7, scope: !17414)
!17609 = !DILocation(line: 849, column: 10, scope: !17610)
!17610 = distinct !DILexicalBlock(scope: !17611, file: !3, line: 849, column: 4)
!17611 = distinct !DILexicalBlock(scope: !17606, file: !3, line: 848, column: 17)
!17612 = !DILocation(line: 849, column: 9, scope: !17610)
!17613 = !DILocation(line: 849, column: 14, scope: !17614)
!17614 = distinct !DILexicalBlock(scope: !17610, file: !3, line: 849, column: 4)
!17615 = !DILocation(line: 849, column: 16, scope: !17614)
!17616 = !DILocation(line: 849, column: 20, scope: !17614)
!17617 = !DILocation(line: 849, column: 15, scope: !17614)
!17618 = !DILocation(line: 849, column: 4, scope: !17610)
!17619 = !DILocalVariable(name: "mtf", scope: !17620, file: !3, line: 850, type: !4145)
!17620 = distinct !DILexicalBlock(scope: !17614, file: !3, line: 849, column: 32)
!17621 = !DILocation(line: 850, column: 13, scope: !17620)
!17622 = !DILocation(line: 851, column: 30, scope: !17620)
!17623 = !DILocation(line: 851, column: 35, scope: !17620)
!17624 = !DILocation(line: 851, column: 40, scope: !17620)
!17625 = !DILocation(line: 851, column: 9, scope: !17620)
!17626 = !DILocation(line: 851, column: 8, scope: !17620)
!17627 = !DILocation(line: 853, column: 34, scope: !17620)
!17628 = !DILocation(line: 853, column: 38, scope: !17620)
!17629 = !DILocation(line: 853, column: 45, scope: !17620)
!17630 = !DILocation(line: 853, column: 44, scope: !17620)
!17631 = !DILocation(line: 853, column: 42, scope: !17620)
!17632 = !DILocation(line: 853, column: 33, scope: !17620)
!17633 = !DILocation(line: 853, column: 19, scope: !17620)
!17634 = !DILocation(line: 853, column: 24, scope: !17620)
!17635 = !DILocation(line: 853, column: 32, scope: !17620)
!17636 = !DILocation(line: 853, column: 5, scope: !17620)
!17637 = !DILocation(line: 853, column: 10, scope: !17620)
!17638 = !DILocation(line: 853, column: 18, scope: !17620)
!17639 = !DILocation(line: 852, column: 19, scope: !17620)
!17640 = !DILocation(line: 852, column: 24, scope: !17620)
!17641 = !DILocation(line: 852, column: 32, scope: !17620)
!17642 = !DILocation(line: 852, column: 5, scope: !17620)
!17643 = !DILocation(line: 852, column: 10, scope: !17620)
!17644 = !DILocation(line: 852, column: 18, scope: !17620)
!17645 = !DILocation(line: 855, column: 34, scope: !17620)
!17646 = !DILocation(line: 855, column: 38, scope: !17620)
!17647 = !DILocation(line: 855, column: 45, scope: !17620)
!17648 = !DILocation(line: 855, column: 44, scope: !17620)
!17649 = !DILocation(line: 855, column: 42, scope: !17620)
!17650 = !DILocation(line: 855, column: 33, scope: !17620)
!17651 = !DILocation(line: 855, column: 19, scope: !17620)
!17652 = !DILocation(line: 855, column: 24, scope: !17620)
!17653 = !DILocation(line: 855, column: 32, scope: !17620)
!17654 = !DILocation(line: 855, column: 5, scope: !17620)
!17655 = !DILocation(line: 855, column: 10, scope: !17620)
!17656 = !DILocation(line: 855, column: 18, scope: !17620)
!17657 = !DILocation(line: 854, column: 19, scope: !17620)
!17658 = !DILocation(line: 854, column: 24, scope: !17620)
!17659 = !DILocation(line: 854, column: 32, scope: !17620)
!17660 = !DILocation(line: 854, column: 5, scope: !17620)
!17661 = !DILocation(line: 854, column: 10, scope: !17620)
!17662 = !DILocation(line: 854, column: 18, scope: !17620)
!17663 = !DILocation(line: 856, column: 4, scope: !17620)
!17664 = !DILocation(line: 849, column: 28, scope: !17614)
!17665 = !DILocation(line: 849, column: 4, scope: !17614)
!17666 = distinct !{!17666, !17618, !17667}
!17667 = !DILocation(line: 856, column: 4, scope: !17610)
!17668 = !DILocation(line: 857, column: 8, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17611, file: !3, line: 857, column: 8)
!17670 = !DILocation(line: 857, column: 12, scope: !17669)
!17671 = !DILocation(line: 857, column: 23, scope: !17669)
!17672 = !DILocation(line: 857, column: 8, scope: !17611)
!17673 = !DILocalVariable(name: "mtf", scope: !17674, file: !3, line: 858, type: !4145)
!17674 = distinct !DILexicalBlock(scope: !17669, file: !3, line: 857, column: 28)
!17675 = !DILocation(line: 858, column: 13, scope: !17674)
!17676 = !DILocation(line: 859, column: 30, scope: !17674)
!17677 = !DILocation(line: 859, column: 35, scope: !17674)
!17678 = !DILocation(line: 859, column: 40, scope: !17674)
!17679 = !DILocation(line: 859, column: 44, scope: !17674)
!17680 = !DILocation(line: 859, column: 9, scope: !17674)
!17681 = !DILocation(line: 859, column: 8, scope: !17674)
!17682 = !DILocation(line: 861, column: 19, scope: !17674)
!17683 = !DILocation(line: 861, column: 24, scope: !17674)
!17684 = !DILocation(line: 861, column: 32, scope: !17674)
!17685 = !DILocation(line: 861, column: 5, scope: !17674)
!17686 = !DILocation(line: 861, column: 10, scope: !17674)
!17687 = !DILocation(line: 861, column: 18, scope: !17674)
!17688 = !DILocation(line: 862, column: 19, scope: !17674)
!17689 = !DILocation(line: 862, column: 24, scope: !17674)
!17690 = !DILocation(line: 862, column: 32, scope: !17674)
!17691 = !DILocation(line: 862, column: 5, scope: !17674)
!17692 = !DILocation(line: 862, column: 10, scope: !17674)
!17693 = !DILocation(line: 862, column: 18, scope: !17674)
!17694 = !DILocation(line: 864, column: 19, scope: !17674)
!17695 = !DILocation(line: 864, column: 24, scope: !17674)
!17696 = !DILocation(line: 864, column: 32, scope: !17674)
!17697 = !DILocation(line: 864, column: 5, scope: !17674)
!17698 = !DILocation(line: 864, column: 10, scope: !17674)
!17699 = !DILocation(line: 864, column: 18, scope: !17674)
!17700 = !DILocation(line: 865, column: 19, scope: !17674)
!17701 = !DILocation(line: 865, column: 24, scope: !17674)
!17702 = !DILocation(line: 865, column: 32, scope: !17674)
!17703 = !DILocation(line: 865, column: 5, scope: !17674)
!17704 = !DILocation(line: 865, column: 10, scope: !17674)
!17705 = !DILocation(line: 865, column: 18, scope: !17674)
!17706 = !DILocation(line: 866, column: 4, scope: !17674)
!17707 = !DILocation(line: 867, column: 3, scope: !17611)
!17708 = !DILocation(line: 868, column: 7, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17414, file: !3, line: 868, column: 7)
!17710 = !DILocation(line: 868, column: 11, scope: !17709)
!17711 = !DILocation(line: 868, column: 7, scope: !17414)
!17712 = !DILocation(line: 869, column: 10, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !17714, file: !3, line: 869, column: 4)
!17714 = distinct !DILexicalBlock(scope: !17709, file: !3, line: 868, column: 17)
!17715 = !DILocation(line: 869, column: 9, scope: !17713)
!17716 = !DILocation(line: 869, column: 14, scope: !17717)
!17717 = distinct !DILexicalBlock(scope: !17713, file: !3, line: 869, column: 4)
!17718 = !DILocation(line: 869, column: 16, scope: !17717)
!17719 = !DILocation(line: 869, column: 20, scope: !17717)
!17720 = !DILocation(line: 869, column: 15, scope: !17717)
!17721 = !DILocation(line: 869, column: 4, scope: !17713)
!17722 = !DILocalVariable(name: "mc", scope: !17723, file: !3, line: 870, type: !4147)
!17723 = distinct !DILexicalBlock(scope: !17717, file: !3, line: 869, column: 33)
!17724 = !DILocation(line: 870, column: 11, scope: !17723)
!17725 = !DILocation(line: 871, column: 28, scope: !17723)
!17726 = !DILocation(line: 871, column: 33, scope: !17723)
!17727 = !DILocation(line: 871, column: 38, scope: !17723)
!17728 = !DILocation(line: 871, column: 8, scope: !17723)
!17729 = !DILocation(line: 871, column: 7, scope: !17723)
!17730 = !DILocation(line: 872, column: 5, scope: !17723)
!17731 = !DILocation(line: 872, column: 11, scope: !17723)
!17732 = !DILocation(line: 872, column: 17, scope: !17723)
!17733 = !DILocation(line: 872, column: 23, scope: !17723)
!17734 = !DILocation(line: 872, column: 29, scope: !17723)
!17735 = !DILocation(line: 872, column: 33, scope: !17723)
!17736 = !DILocation(line: 872, column: 38, scope: !17723)
!17737 = !DILocation(line: 872, column: 28, scope: !17723)
!17738 = !DILocation(line: 872, column: 22, scope: !17723)
!17739 = !DILocation(line: 872, column: 16, scope: !17723)
!17740 = !DILocation(line: 873, column: 5, scope: !17723)
!17741 = !DILocation(line: 873, column: 11, scope: !17723)
!17742 = !DILocation(line: 873, column: 17, scope: !17723)
!17743 = !DILocation(line: 873, column: 23, scope: !17723)
!17744 = !DILocation(line: 873, column: 29, scope: !17723)
!17745 = !DILocation(line: 873, column: 33, scope: !17723)
!17746 = !DILocation(line: 873, column: 38, scope: !17723)
!17747 = !DILocation(line: 873, column: 28, scope: !17723)
!17748 = !DILocation(line: 873, column: 22, scope: !17723)
!17749 = !DILocation(line: 873, column: 16, scope: !17723)
!17750 = !DILocation(line: 874, column: 4, scope: !17723)
!17751 = !DILocation(line: 869, column: 29, scope: !17717)
!17752 = !DILocation(line: 869, column: 4, scope: !17717)
!17753 = distinct !{!17753, !17721, !17754}
!17754 = !DILocation(line: 874, column: 4, scope: !17713)
!17755 = !DILocation(line: 875, column: 3, scope: !17714)
!17756 = !DILocation(line: 876, column: 2, scope: !17414)
!17757 = !DILocation(line: 878, column: 11, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17410, file: !3, line: 878, column: 11)
!17759 = !DILocation(line: 878, column: 15, scope: !17758)
!17760 = !DILocation(line: 878, column: 11, scope: !17410)
!17761 = !DILocation(line: 879, column: 7, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 879, column: 7)
!17763 = distinct !DILexicalBlock(scope: !17758, file: !3, line: 878, column: 22)
!17764 = !DILocation(line: 879, column: 11, scope: !17762)
!17765 = !DILocation(line: 879, column: 7, scope: !17763)
!17766 = !DILocation(line: 880, column: 21, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17762, file: !3, line: 879, column: 18)
!17768 = !DILocation(line: 880, column: 4, scope: !17767)
!17769 = !DILocation(line: 881, column: 21, scope: !17767)
!17770 = !DILocation(line: 881, column: 4, scope: !17767)
!17771 = !DILocation(line: 882, column: 10, scope: !17767)
!17772 = !DILocation(line: 883, column: 3, scope: !17767)
!17773 = !DILocation(line: 885, column: 24, scope: !17763)
!17774 = !DILocation(line: 885, column: 29, scope: !17763)
!17775 = !DILocation(line: 885, column: 34, scope: !17763)
!17776 = !DILocation(line: 885, column: 41, scope: !17763)
!17777 = !DILocation(line: 885, column: 7, scope: !17763)
!17778 = !DILocation(line: 885, column: 5, scope: !17763)
!17779 = !DILocation(line: 886, column: 24, scope: !17763)
!17780 = !DILocation(line: 886, column: 29, scope: !17763)
!17781 = !DILocation(line: 886, column: 34, scope: !17763)
!17782 = !DILocation(line: 886, column: 41, scope: !17763)
!17783 = !DILocation(line: 886, column: 7, scope: !17763)
!17784 = !DILocation(line: 886, column: 5, scope: !17763)
!17785 = !DILocation(line: 888, column: 14, scope: !17763)
!17786 = !DILocation(line: 888, column: 18, scope: !17763)
!17787 = !DILocation(line: 888, column: 22, scope: !17763)
!17788 = !DILocation(line: 888, column: 3, scope: !17763)
!17789 = !DILocation(line: 889, column: 13, scope: !17763)
!17790 = !DILocation(line: 889, column: 17, scope: !17763)
!17791 = !DILocation(line: 889, column: 21, scope: !17763)
!17792 = !DILocation(line: 889, column: 3, scope: !17763)
!17793 = !DILocation(line: 890, column: 14, scope: !17763)
!17794 = !DILocation(line: 890, column: 18, scope: !17763)
!17795 = !DILocation(line: 890, column: 21, scope: !17763)
!17796 = !DILocation(line: 890, column: 3, scope: !17763)
!17797 = !DILocation(line: 891, column: 13, scope: !17763)
!17798 = !DILocation(line: 891, column: 17, scope: !17763)
!17799 = !DILocation(line: 891, column: 3, scope: !17763)
!17800 = !DILocation(line: 891, column: 7, scope: !17763)
!17801 = !DILocation(line: 891, column: 11, scope: !17763)
!17802 = !DILocation(line: 892, column: 3, scope: !17763)
!17803 = !DILocation(line: 892, column: 7, scope: !17763)
!17804 = !DILocation(line: 892, column: 13, scope: !17763)
!17805 = !DILocation(line: 894, column: 14, scope: !17763)
!17806 = !DILocation(line: 894, column: 18, scope: !17763)
!17807 = !DILocation(line: 894, column: 22, scope: !17763)
!17808 = !DILocation(line: 894, column: 3, scope: !17763)
!17809 = !DILocation(line: 895, column: 15, scope: !17763)
!17810 = !DILocation(line: 895, column: 19, scope: !17763)
!17811 = !DILocation(line: 895, column: 23, scope: !17763)
!17812 = !DILocation(line: 895, column: 27, scope: !17763)
!17813 = !DILocation(line: 895, column: 31, scope: !17763)
!17814 = !DILocation(line: 895, column: 3, scope: !17763)
!17815 = !DILocation(line: 896, column: 14, scope: !17763)
!17816 = !DILocation(line: 896, column: 18, scope: !17763)
!17817 = !DILocation(line: 896, column: 21, scope: !17763)
!17818 = !DILocation(line: 896, column: 3, scope: !17763)
!17819 = !DILocation(line: 897, column: 13, scope: !17763)
!17820 = !DILocation(line: 897, column: 17, scope: !17763)
!17821 = !DILocation(line: 897, column: 3, scope: !17763)
!17822 = !DILocation(line: 897, column: 7, scope: !17763)
!17823 = !DILocation(line: 897, column: 11, scope: !17763)
!17824 = !DILocation(line: 898, column: 14, scope: !17763)
!17825 = !DILocation(line: 898, column: 18, scope: !17763)
!17826 = !DILocation(line: 898, column: 3, scope: !17763)
!17827 = !DILocation(line: 898, column: 7, scope: !17763)
!17828 = !DILocation(line: 898, column: 12, scope: !17763)
!17829 = !DILocation(line: 899, column: 2, scope: !17763)
!17830 = !DILocation(line: 902, column: 7, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 902, column: 7)
!17832 = distinct !DILexicalBlock(scope: !17758, file: !3, line: 901, column: 7)
!17833 = !DILocation(line: 902, column: 11, scope: !17831)
!17834 = !DILocation(line: 902, column: 16, scope: !17831)
!17835 = !DILocation(line: 902, column: 20, scope: !17831)
!17836 = !DILocation(line: 902, column: 23, scope: !17831)
!17837 = !DILocation(line: 902, column: 7, scope: !17832)
!17838 = !DILocation(line: 903, column: 26, scope: !17839)
!17839 = distinct !DILexicalBlock(scope: !17831, file: !3, line: 902, column: 31)
!17840 = !DILocation(line: 903, column: 31, scope: !17839)
!17841 = !DILocation(line: 903, column: 36, scope: !17839)
!17842 = !DILocation(line: 903, column: 43, scope: !17839)
!17843 = !DILocation(line: 903, column: 9, scope: !17839)
!17844 = !DILocation(line: 903, column: 7, scope: !17839)
!17845 = !DILocation(line: 904, column: 15, scope: !17839)
!17846 = !DILocation(line: 904, column: 4, scope: !17839)
!17847 = !DILocation(line: 904, column: 9, scope: !17839)
!17848 = !DILocation(line: 904, column: 13, scope: !17839)
!17849 = !DILocation(line: 905, column: 13, scope: !17839)
!17850 = !DILocation(line: 905, column: 4, scope: !17839)
!17851 = !DILocation(line: 905, column: 9, scope: !17839)
!17852 = !DILocation(line: 905, column: 11, scope: !17839)
!17853 = !DILocation(line: 906, column: 13, scope: !17839)
!17854 = !DILocation(line: 906, column: 4, scope: !17839)
!17855 = !DILocation(line: 906, column: 9, scope: !17839)
!17856 = !DILocation(line: 906, column: 11, scope: !17839)
!17857 = !DILocation(line: 907, column: 30, scope: !17839)
!17858 = !DILocation(line: 907, column: 35, scope: !17839)
!17859 = !DILocation(line: 907, column: 40, scope: !17839)
!17860 = !DILocation(line: 907, column: 47, scope: !17839)
!17861 = !DILocation(line: 907, column: 13, scope: !17839)
!17862 = !DILocation(line: 907, column: 4, scope: !17839)
!17863 = !DILocation(line: 907, column: 9, scope: !17839)
!17864 = !DILocation(line: 907, column: 11, scope: !17839)
!17865 = !DILocation(line: 908, column: 30, scope: !17839)
!17866 = !DILocation(line: 908, column: 35, scope: !17839)
!17867 = !DILocation(line: 908, column: 40, scope: !17839)
!17868 = !DILocation(line: 908, column: 47, scope: !17839)
!17869 = !DILocation(line: 908, column: 13, scope: !17839)
!17870 = !DILocation(line: 908, column: 4, scope: !17839)
!17871 = !DILocation(line: 908, column: 9, scope: !17839)
!17872 = !DILocation(line: 908, column: 11, scope: !17839)
!17873 = !DILocation(line: 910, column: 8, scope: !17839)
!17874 = !DILocation(line: 910, column: 13, scope: !17839)
!17875 = !DILocation(line: 910, column: 6, scope: !17839)
!17876 = !DILocation(line: 911, column: 8, scope: !17839)
!17877 = !DILocation(line: 911, column: 13, scope: !17839)
!17878 = !DILocation(line: 911, column: 6, scope: !17839)
!17879 = !DILocation(line: 914, column: 8, scope: !17880)
!17880 = distinct !DILexicalBlock(scope: !17839, file: !3, line: 914, column: 8)
!17881 = !DILocation(line: 914, column: 12, scope: !17880)
!17882 = !DILocation(line: 914, column: 8, scope: !17839)
!17883 = !DILocation(line: 915, column: 11, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17880, file: !3, line: 914, column: 19)
!17885 = !DILocation(line: 916, column: 22, scope: !17884)
!17886 = !DILocation(line: 916, column: 5, scope: !17884)
!17887 = !DILocation(line: 917, column: 22, scope: !17884)
!17888 = !DILocation(line: 917, column: 5, scope: !17884)
!17889 = !DILocation(line: 918, column: 4, scope: !17884)
!17890 = !DILocation(line: 920, column: 3, scope: !17839)
!17891 = !DILocation(line: 921, column: 12, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17831, file: !3, line: 921, column: 12)
!17893 = !DILocation(line: 921, column: 16, scope: !17892)
!17894 = !DILocation(line: 921, column: 12, scope: !17831)
!17895 = !DILocalVariable(name: "dvec", scope: !17896, file: !3, line: 922, type: !188)
!17896 = distinct !DILexicalBlock(scope: !17892, file: !3, line: 921, column: 23)
!17897 = !DILocation(line: 922, column: 10, scope: !17896)
!17898 = !DILocalVariable(name: "pvec", scope: !17896, file: !3, line: 922, type: !188)
!17899 = !DILocation(line: 922, column: 19, scope: !17896)
!17900 = !DILocation(line: 923, column: 16, scope: !17896)
!17901 = !DILocation(line: 923, column: 28, scope: !17896)
!17902 = !DILocation(line: 923, column: 4, scope: !17896)
!17903 = !DILocation(line: 924, column: 20, scope: !17896)
!17904 = !DILocation(line: 924, column: 26, scope: !17896)
!17905 = !DILocation(line: 924, column: 32, scope: !17896)
!17906 = !DILocation(line: 924, column: 4, scope: !17896)
!17907 = !DILocation(line: 925, column: 16, scope: !17896)
!17908 = !DILocation(line: 925, column: 22, scope: !17896)
!17909 = !DILocation(line: 925, column: 28, scope: !17896)
!17910 = !DILocation(line: 925, column: 4, scope: !17896)
!17911 = !DILocation(line: 927, column: 7, scope: !17896)
!17912 = !DILocation(line: 927, column: 14, scope: !17896)
!17913 = !DILocation(line: 927, column: 18, scope: !17896)
!17914 = !DILocation(line: 927, column: 13, scope: !17896)
!17915 = !DILocation(line: 927, column: 33, scope: !17896)
!17916 = !DILocation(line: 927, column: 37, scope: !17896)
!17917 = !DILocation(line: 927, column: 31, scope: !17896)
!17918 = !DILocation(line: 927, column: 5, scope: !17896)
!17919 = !DILocation(line: 928, column: 8, scope: !17896)
!17920 = !DILocation(line: 928, column: 12, scope: !17896)
!17921 = !DILocation(line: 928, column: 17, scope: !17896)
!17922 = !DILocation(line: 928, column: 16, scope: !17896)
!17923 = !DILocation(line: 928, column: 25, scope: !17896)
!17924 = !DILocation(line: 928, column: 29, scope: !17896)
!17925 = !DILocation(line: 928, column: 24, scope: !17896)
!17926 = !DILocation(line: 928, column: 42, scope: !17896)
!17927 = !DILocation(line: 928, column: 41, scope: !17896)
!17928 = !DILocation(line: 928, column: 6, scope: !17896)
!17929 = !DILocation(line: 929, column: 8, scope: !17896)
!17930 = !DILocation(line: 929, column: 12, scope: !17896)
!17931 = !DILocation(line: 929, column: 17, scope: !17896)
!17932 = !DILocation(line: 929, column: 16, scope: !17896)
!17933 = !DILocation(line: 929, column: 25, scope: !17896)
!17934 = !DILocation(line: 929, column: 29, scope: !17896)
!17935 = !DILocation(line: 929, column: 24, scope: !17896)
!17936 = !DILocation(line: 929, column: 42, scope: !17896)
!17937 = !DILocation(line: 929, column: 41, scope: !17896)
!17938 = !DILocation(line: 929, column: 6, scope: !17896)
!17939 = !DILocation(line: 930, column: 14, scope: !17896)
!17940 = !DILocation(line: 930, column: 19, scope: !17896)
!17941 = !DILocation(line: 930, column: 17, scope: !17896)
!17942 = !DILocation(line: 930, column: 24, scope: !17896)
!17943 = !DILocation(line: 930, column: 29, scope: !17896)
!17944 = !DILocation(line: 930, column: 27, scope: !17896)
!17945 = !DILocation(line: 930, column: 22, scope: !17896)
!17946 = !DILocation(line: 930, column: 8, scope: !17896)
!17947 = !DILocation(line: 930, column: 6, scope: !17896)
!17948 = !DILocation(line: 931, column: 23, scope: !17949)
!17949 = distinct !DILexicalBlock(scope: !17896, file: !3, line: 931, column: 8)
!17950 = !DILocation(line: 931, column: 8, scope: !17949)
!17951 = !DILocation(line: 931, column: 28, scope: !17949)
!17952 = !DILocation(line: 931, column: 32, scope: !17949)
!17953 = !DILocation(line: 931, column: 27, scope: !17949)
!17954 = !DILocation(line: 931, column: 44, scope: !17949)
!17955 = !DILocation(line: 931, column: 47, scope: !17949)
!17956 = !DILocation(line: 931, column: 49, scope: !17949)
!17957 = !DILocation(line: 931, column: 53, scope: !17949)
!17958 = !DILocation(line: 931, column: 48, scope: !17949)
!17959 = !DILocation(line: 931, column: 8, scope: !17896)
!17960 = !DILocation(line: 932, column: 27, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17949, file: !3, line: 931, column: 64)
!17962 = !DILocation(line: 932, column: 32, scope: !17961)
!17963 = !DILocation(line: 932, column: 37, scope: !17961)
!17964 = !DILocation(line: 932, column: 44, scope: !17961)
!17965 = !DILocation(line: 932, column: 10, scope: !17961)
!17966 = !DILocation(line: 932, column: 8, scope: !17961)
!17967 = !DILocation(line: 933, column: 16, scope: !17961)
!17968 = !DILocation(line: 933, column: 5, scope: !17961)
!17969 = !DILocation(line: 933, column: 10, scope: !17961)
!17970 = !DILocation(line: 933, column: 14, scope: !17961)
!17971 = !DILocation(line: 934, column: 14, scope: !17961)
!17972 = !DILocation(line: 934, column: 5, scope: !17961)
!17973 = !DILocation(line: 934, column: 10, scope: !17961)
!17974 = !DILocation(line: 934, column: 12, scope: !17961)
!17975 = !DILocation(line: 935, column: 14, scope: !17961)
!17976 = !DILocation(line: 935, column: 5, scope: !17961)
!17977 = !DILocation(line: 935, column: 10, scope: !17961)
!17978 = !DILocation(line: 935, column: 12, scope: !17961)
!17979 = !DILocation(line: 936, column: 31, scope: !17961)
!17980 = !DILocation(line: 936, column: 36, scope: !17961)
!17981 = !DILocation(line: 936, column: 41, scope: !17961)
!17982 = !DILocation(line: 936, column: 48, scope: !17961)
!17983 = !DILocation(line: 936, column: 14, scope: !17961)
!17984 = !DILocation(line: 936, column: 5, scope: !17961)
!17985 = !DILocation(line: 936, column: 10, scope: !17961)
!17986 = !DILocation(line: 936, column: 12, scope: !17961)
!17987 = !DILocation(line: 937, column: 31, scope: !17961)
!17988 = !DILocation(line: 937, column: 36, scope: !17961)
!17989 = !DILocation(line: 937, column: 41, scope: !17961)
!17990 = !DILocation(line: 937, column: 48, scope: !17961)
!17991 = !DILocation(line: 937, column: 14, scope: !17961)
!17992 = !DILocation(line: 937, column: 5, scope: !17961)
!17993 = !DILocation(line: 937, column: 10, scope: !17961)
!17994 = !DILocation(line: 937, column: 12, scope: !17961)
!17995 = !DILocation(line: 939, column: 9, scope: !17961)
!17996 = !DILocation(line: 939, column: 14, scope: !17961)
!17997 = !DILocation(line: 939, column: 7, scope: !17961)
!17998 = !DILocation(line: 940, column: 9, scope: !17961)
!17999 = !DILocation(line: 940, column: 14, scope: !17961)
!18000 = !DILocation(line: 940, column: 7, scope: !17961)
!18001 = !DILocation(line: 942, column: 22, scope: !17961)
!18002 = !DILocation(line: 942, column: 5, scope: !17961)
!18003 = !DILocation(line: 943, column: 22, scope: !17961)
!18004 = !DILocation(line: 943, column: 5, scope: !17961)
!18005 = !DILocation(line: 944, column: 4, scope: !17961)
!18006 = !DILocation(line: 946, column: 27, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17949, file: !3, line: 945, column: 9)
!18008 = !DILocation(line: 946, column: 32, scope: !18007)
!18009 = !DILocation(line: 946, column: 37, scope: !18007)
!18010 = !DILocation(line: 946, column: 44, scope: !18007)
!18011 = !DILocation(line: 946, column: 10, scope: !18007)
!18012 = !DILocation(line: 946, column: 8, scope: !18007)
!18013 = !DILocation(line: 948, column: 3, scope: !17896)
!18014 = !DILocation(line: 950, column: 14, scope: !17832)
!18015 = !DILocation(line: 950, column: 19, scope: !17832)
!18016 = !DILocation(line: 950, column: 23, scope: !17832)
!18017 = !DILocation(line: 950, column: 27, scope: !17832)
!18018 = !DILocation(line: 950, column: 3, scope: !17832)
!18019 = !DILocation(line: 951, column: 13, scope: !17832)
!18020 = !DILocation(line: 951, column: 18, scope: !17832)
!18021 = !DILocation(line: 951, column: 22, scope: !17832)
!18022 = !DILocation(line: 951, column: 26, scope: !17832)
!18023 = !DILocation(line: 951, column: 3, scope: !17832)
!18024 = !DILocation(line: 952, column: 14, scope: !17832)
!18025 = !DILocation(line: 952, column: 19, scope: !17832)
!18026 = !DILocation(line: 952, column: 23, scope: !17832)
!18027 = !DILocation(line: 952, column: 26, scope: !17832)
!18028 = !DILocation(line: 952, column: 3, scope: !17832)
!18029 = !DILocation(line: 953, column: 18, scope: !17832)
!18030 = !DILocation(line: 953, column: 22, scope: !17832)
!18031 = !DILocation(line: 953, column: 3, scope: !17832)
!18032 = !DILocation(line: 953, column: 8, scope: !17832)
!18033 = !DILocation(line: 953, column: 12, scope: !17832)
!18034 = !DILocation(line: 953, column: 16, scope: !17832)
!18035 = !DILocation(line: 954, column: 34, scope: !17832)
!18036 = !DILocation(line: 954, column: 38, scope: !17832)
!18037 = !DILocation(line: 954, column: 32, scope: !17832)
!18038 = !DILocation(line: 954, column: 25, scope: !17832)
!18039 = !DILocation(line: 954, column: 3, scope: !17832)
!18040 = !DILocation(line: 954, column: 8, scope: !17832)
!18041 = !DILocation(line: 954, column: 12, scope: !17832)
!18042 = !DILocation(line: 954, column: 17, scope: !17832)
!18043 = !DILocation(line: 956, column: 14, scope: !17832)
!18044 = !DILocation(line: 956, column: 19, scope: !17832)
!18045 = !DILocation(line: 956, column: 23, scope: !17832)
!18046 = !DILocation(line: 956, column: 27, scope: !17832)
!18047 = !DILocation(line: 956, column: 3, scope: !17832)
!18048 = !DILocation(line: 957, column: 15, scope: !17832)
!18049 = !DILocation(line: 957, column: 20, scope: !17832)
!18050 = !DILocation(line: 957, column: 24, scope: !17832)
!18051 = !DILocation(line: 957, column: 28, scope: !17832)
!18052 = !DILocation(line: 957, column: 33, scope: !17832)
!18053 = !DILocation(line: 957, column: 37, scope: !17832)
!18054 = !DILocation(line: 957, column: 41, scope: !17832)
!18055 = !DILocation(line: 957, column: 3, scope: !17832)
!18056 = !DILocation(line: 958, column: 14, scope: !17832)
!18057 = !DILocation(line: 958, column: 19, scope: !17832)
!18058 = !DILocation(line: 958, column: 23, scope: !17832)
!18059 = !DILocation(line: 958, column: 26, scope: !17832)
!18060 = !DILocation(line: 958, column: 3, scope: !17832)
!18061 = !DILocation(line: 959, column: 18, scope: !17832)
!18062 = !DILocation(line: 959, column: 22, scope: !17832)
!18063 = !DILocation(line: 959, column: 3, scope: !17832)
!18064 = !DILocation(line: 959, column: 8, scope: !17832)
!18065 = !DILocation(line: 959, column: 12, scope: !17832)
!18066 = !DILocation(line: 959, column: 16, scope: !17832)
!18067 = !DILocation(line: 960, column: 19, scope: !17832)
!18068 = !DILocation(line: 960, column: 24, scope: !17832)
!18069 = !DILocation(line: 960, column: 28, scope: !17832)
!18070 = !DILocation(line: 960, column: 3, scope: !17832)
!18071 = !DILocation(line: 960, column: 8, scope: !17832)
!18072 = !DILocation(line: 960, column: 12, scope: !17832)
!18073 = !DILocation(line: 960, column: 17, scope: !17832)
!18074 = !DILocation(line: 962, column: 18, scope: !17832)
!18075 = !DILocation(line: 962, column: 23, scope: !17832)
!18076 = !DILocation(line: 962, column: 26, scope: !17832)
!18077 = !DILocation(line: 962, column: 31, scope: !17832)
!18078 = !DILocation(line: 962, column: 35, scope: !17832)
!18079 = !DILocation(line: 962, column: 39, scope: !17832)
!18080 = !DILocation(line: 962, column: 44, scope: !17832)
!18081 = !DILocation(line: 962, column: 48, scope: !17832)
!18082 = !DILocation(line: 962, column: 52, scope: !17832)
!18083 = !DILocation(line: 962, column: 57, scope: !17832)
!18084 = !DILocation(line: 962, column: 61, scope: !17832)
!18085 = !DILocation(line: 962, column: 65, scope: !17832)
!18086 = !DILocation(line: 962, column: 70, scope: !17832)
!18087 = !DILocation(line: 962, column: 74, scope: !17832)
!18088 = !DILocation(line: 962, column: 3, scope: !17832)
!18089 = !DILocation(line: 964, column: 13, scope: !17832)
!18090 = !DILocation(line: 964, column: 3, scope: !17832)
!18091 = !DILocation(line: 964, column: 8, scope: !17832)
!18092 = !DILocation(line: 964, column: 11, scope: !17832)
!18093 = !DILocation(line: 965, column: 3, scope: !17832)
!18094 = !DILocation(line: 965, column: 8, scope: !17832)
!18095 = !DILocation(line: 965, column: 10, scope: !17832)
!18096 = !DILocation(line: 967, column: 7, scope: !18097)
!18097 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 967, column: 7)
!18098 = !DILocation(line: 967, column: 11, scope: !18097)
!18099 = !DILocation(line: 967, column: 7, scope: !17832)
!18100 = !DILocalVariable(name: "snor", scope: !18101, file: !3, line: 968, type: !44)
!18101 = distinct !DILexicalBlock(scope: !18097, file: !3, line: 967, column: 20)
!18102 = !DILocation(line: 968, column: 11, scope: !18101)
!18103 = !DILocation(line: 968, column: 40, scope: !18101)
!18104 = !DILocation(line: 968, column: 45, scope: !18101)
!18105 = !DILocation(line: 968, column: 17, scope: !18101)
!18106 = !DILocation(line: 969, column: 15, scope: !18101)
!18107 = !DILocation(line: 969, column: 21, scope: !18101)
!18108 = !DILocation(line: 969, column: 25, scope: !18101)
!18109 = !DILocation(line: 969, column: 4, scope: !18101)
!18110 = !DILocation(line: 970, column: 3, scope: !18101)
!18111 = !DILocation(line: 972, column: 7, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 972, column: 7)
!18113 = !DILocation(line: 972, column: 11, scope: !18112)
!18114 = !DILocation(line: 972, column: 7, scope: !17832)
!18115 = !DILocation(line: 973, column: 10, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18117, file: !3, line: 973, column: 4)
!18117 = distinct !DILexicalBlock(scope: !18112, file: !3, line: 972, column: 17)
!18118 = !DILocation(line: 973, column: 9, scope: !18116)
!18119 = !DILocation(line: 973, column: 14, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18116, file: !3, line: 973, column: 4)
!18121 = !DILocation(line: 973, column: 16, scope: !18120)
!18122 = !DILocation(line: 973, column: 20, scope: !18120)
!18123 = !DILocation(line: 973, column: 15, scope: !18120)
!18124 = !DILocation(line: 973, column: 4, scope: !18116)
!18125 = !DILocalVariable(name: "mtf", scope: !18126, file: !3, line: 974, type: !4145)
!18126 = distinct !DILexicalBlock(scope: !18120, file: !3, line: 973, column: 32)
!18127 = !DILocation(line: 974, column: 13, scope: !18126)
!18128 = !DILocation(line: 975, column: 30, scope: !18126)
!18129 = !DILocation(line: 975, column: 35, scope: !18126)
!18130 = !DILocation(line: 975, column: 40, scope: !18126)
!18131 = !DILocation(line: 975, column: 9, scope: !18126)
!18132 = !DILocation(line: 975, column: 8, scope: !18126)
!18133 = !DILocation(line: 977, column: 34, scope: !18126)
!18134 = !DILocation(line: 977, column: 38, scope: !18126)
!18135 = !DILocation(line: 977, column: 45, scope: !18126)
!18136 = !DILocation(line: 977, column: 44, scope: !18126)
!18137 = !DILocation(line: 977, column: 42, scope: !18126)
!18138 = !DILocation(line: 977, column: 33, scope: !18126)
!18139 = !DILocation(line: 977, column: 19, scope: !18126)
!18140 = !DILocation(line: 977, column: 24, scope: !18126)
!18141 = !DILocation(line: 977, column: 32, scope: !18126)
!18142 = !DILocation(line: 977, column: 5, scope: !18126)
!18143 = !DILocation(line: 977, column: 10, scope: !18126)
!18144 = !DILocation(line: 977, column: 18, scope: !18126)
!18145 = !DILocation(line: 976, column: 19, scope: !18126)
!18146 = !DILocation(line: 976, column: 24, scope: !18126)
!18147 = !DILocation(line: 976, column: 32, scope: !18126)
!18148 = !DILocation(line: 976, column: 5, scope: !18126)
!18149 = !DILocation(line: 976, column: 10, scope: !18126)
!18150 = !DILocation(line: 976, column: 18, scope: !18126)
!18151 = !DILocation(line: 979, column: 34, scope: !18126)
!18152 = !DILocation(line: 979, column: 38, scope: !18126)
!18153 = !DILocation(line: 979, column: 45, scope: !18126)
!18154 = !DILocation(line: 979, column: 44, scope: !18126)
!18155 = !DILocation(line: 979, column: 42, scope: !18126)
!18156 = !DILocation(line: 979, column: 33, scope: !18126)
!18157 = !DILocation(line: 979, column: 19, scope: !18126)
!18158 = !DILocation(line: 979, column: 24, scope: !18126)
!18159 = !DILocation(line: 979, column: 32, scope: !18126)
!18160 = !DILocation(line: 979, column: 5, scope: !18126)
!18161 = !DILocation(line: 979, column: 10, scope: !18126)
!18162 = !DILocation(line: 979, column: 18, scope: !18126)
!18163 = !DILocation(line: 978, column: 19, scope: !18126)
!18164 = !DILocation(line: 978, column: 24, scope: !18126)
!18165 = !DILocation(line: 978, column: 32, scope: !18126)
!18166 = !DILocation(line: 978, column: 5, scope: !18126)
!18167 = !DILocation(line: 978, column: 10, scope: !18126)
!18168 = !DILocation(line: 978, column: 18, scope: !18126)
!18169 = !DILocation(line: 980, column: 4, scope: !18126)
!18170 = !DILocation(line: 973, column: 28, scope: !18120)
!18171 = !DILocation(line: 973, column: 4, scope: !18120)
!18172 = distinct !{!18172, !18124, !18173}
!18173 = !DILocation(line: 980, column: 4, scope: !18116)
!18174 = !DILocation(line: 981, column: 8, scope: !18175)
!18175 = distinct !DILexicalBlock(scope: !18117, file: !3, line: 981, column: 8)
!18176 = !DILocation(line: 981, column: 12, scope: !18175)
!18177 = !DILocation(line: 981, column: 23, scope: !18175)
!18178 = !DILocation(line: 981, column: 8, scope: !18117)
!18179 = !DILocalVariable(name: "mtf", scope: !18180, file: !3, line: 982, type: !4145)
!18180 = distinct !DILexicalBlock(scope: !18175, file: !3, line: 981, column: 28)
!18181 = !DILocation(line: 982, column: 13, scope: !18180)
!18182 = !DILocation(line: 983, column: 30, scope: !18180)
!18183 = !DILocation(line: 983, column: 35, scope: !18180)
!18184 = !DILocation(line: 983, column: 40, scope: !18180)
!18185 = !DILocation(line: 983, column: 44, scope: !18180)
!18186 = !DILocation(line: 983, column: 9, scope: !18180)
!18187 = !DILocation(line: 983, column: 8, scope: !18180)
!18188 = !DILocation(line: 985, column: 19, scope: !18180)
!18189 = !DILocation(line: 985, column: 24, scope: !18180)
!18190 = !DILocation(line: 985, column: 32, scope: !18180)
!18191 = !DILocation(line: 985, column: 5, scope: !18180)
!18192 = !DILocation(line: 985, column: 10, scope: !18180)
!18193 = !DILocation(line: 985, column: 18, scope: !18180)
!18194 = !DILocation(line: 986, column: 19, scope: !18180)
!18195 = !DILocation(line: 986, column: 24, scope: !18180)
!18196 = !DILocation(line: 986, column: 32, scope: !18180)
!18197 = !DILocation(line: 986, column: 5, scope: !18180)
!18198 = !DILocation(line: 986, column: 10, scope: !18180)
!18199 = !DILocation(line: 986, column: 18, scope: !18180)
!18200 = !DILocation(line: 988, column: 34, scope: !18180)
!18201 = !DILocation(line: 988, column: 39, scope: !18180)
!18202 = !DILocation(line: 988, column: 43, scope: !18180)
!18203 = !DILocation(line: 988, column: 48, scope: !18180)
!18204 = !DILocation(line: 988, column: 54, scope: !18180)
!18205 = !DILocation(line: 988, column: 19, scope: !18180)
!18206 = !DILocation(line: 988, column: 24, scope: !18180)
!18207 = !DILocation(line: 988, column: 32, scope: !18180)
!18208 = !DILocation(line: 988, column: 5, scope: !18180)
!18209 = !DILocation(line: 988, column: 10, scope: !18180)
!18210 = !DILocation(line: 988, column: 18, scope: !18180)
!18211 = !DILocation(line: 989, column: 34, scope: !18180)
!18212 = !DILocation(line: 989, column: 39, scope: !18180)
!18213 = !DILocation(line: 989, column: 43, scope: !18180)
!18214 = !DILocation(line: 989, column: 48, scope: !18180)
!18215 = !DILocation(line: 989, column: 54, scope: !18180)
!18216 = !DILocation(line: 989, column: 19, scope: !18180)
!18217 = !DILocation(line: 989, column: 24, scope: !18180)
!18218 = !DILocation(line: 989, column: 32, scope: !18180)
!18219 = !DILocation(line: 989, column: 5, scope: !18180)
!18220 = !DILocation(line: 989, column: 10, scope: !18180)
!18221 = !DILocation(line: 989, column: 18, scope: !18180)
!18222 = !DILocation(line: 990, column: 4, scope: !18180)
!18223 = !DILocation(line: 991, column: 3, scope: !18117)
!18224 = !DILocation(line: 992, column: 7, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 992, column: 7)
!18226 = !DILocation(line: 992, column: 11, scope: !18225)
!18227 = !DILocation(line: 992, column: 7, scope: !17832)
!18228 = !DILocation(line: 993, column: 10, scope: !18229)
!18229 = distinct !DILexicalBlock(scope: !18230, file: !3, line: 993, column: 4)
!18230 = distinct !DILexicalBlock(scope: !18225, file: !3, line: 992, column: 17)
!18231 = !DILocation(line: 993, column: 9, scope: !18229)
!18232 = !DILocation(line: 993, column: 14, scope: !18233)
!18233 = distinct !DILexicalBlock(scope: !18229, file: !3, line: 993, column: 4)
!18234 = !DILocation(line: 993, column: 16, scope: !18233)
!18235 = !DILocation(line: 993, column: 20, scope: !18233)
!18236 = !DILocation(line: 993, column: 15, scope: !18233)
!18237 = !DILocation(line: 993, column: 4, scope: !18229)
!18238 = !DILocalVariable(name: "mc", scope: !18239, file: !3, line: 994, type: !4147)
!18239 = distinct !DILexicalBlock(scope: !18233, file: !3, line: 993, column: 33)
!18240 = !DILocation(line: 994, column: 11, scope: !18239)
!18241 = !DILocation(line: 995, column: 28, scope: !18239)
!18242 = !DILocation(line: 995, column: 33, scope: !18239)
!18243 = !DILocation(line: 995, column: 38, scope: !18239)
!18244 = !DILocation(line: 995, column: 8, scope: !18239)
!18245 = !DILocation(line: 995, column: 7, scope: !18239)
!18246 = !DILocation(line: 996, column: 5, scope: !18239)
!18247 = !DILocation(line: 996, column: 11, scope: !18239)
!18248 = !DILocation(line: 996, column: 17, scope: !18239)
!18249 = !DILocation(line: 996, column: 23, scope: !18239)
!18250 = !DILocation(line: 996, column: 29, scope: !18239)
!18251 = !DILocation(line: 996, column: 33, scope: !18239)
!18252 = !DILocation(line: 996, column: 38, scope: !18239)
!18253 = !DILocation(line: 996, column: 28, scope: !18239)
!18254 = !DILocation(line: 996, column: 22, scope: !18239)
!18255 = !DILocation(line: 996, column: 16, scope: !18239)
!18256 = !DILocation(line: 997, column: 5, scope: !18239)
!18257 = !DILocation(line: 997, column: 11, scope: !18239)
!18258 = !DILocation(line: 997, column: 17, scope: !18239)
!18259 = !DILocation(line: 997, column: 23, scope: !18239)
!18260 = !DILocation(line: 997, column: 29, scope: !18239)
!18261 = !DILocation(line: 997, column: 33, scope: !18239)
!18262 = !DILocation(line: 997, column: 38, scope: !18239)
!18263 = !DILocation(line: 997, column: 28, scope: !18239)
!18264 = !DILocation(line: 997, column: 22, scope: !18239)
!18265 = !DILocation(line: 997, column: 16, scope: !18239)
!18266 = !DILocation(line: 998, column: 4, scope: !18239)
!18267 = !DILocation(line: 993, column: 29, scope: !18233)
!18268 = !DILocation(line: 993, column: 4, scope: !18233)
!18269 = distinct !{!18269, !18237, !18270}
!18270 = !DILocation(line: 998, column: 4, scope: !18229)
!18271 = !DILocation(line: 999, column: 3, scope: !18230)
!18272 = !DILocation(line: 1001, column: 1, scope: !4183)
!18273 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !4629, file: !4629, line: 634, type: !16448, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18274 = !DILocalVariable(name: "r", arg: 1, scope: !18273, file: !4629, line: 634, type: !44)
!18275 = !DILocation(line: 634, column: 34, scope: !18273)
!18276 = !DILocalVariable(name: "a", arg: 2, scope: !18273, file: !4629, line: 634, type: !2417)
!18277 = !DILocation(line: 634, column: 52, scope: !18273)
!18278 = !DILocalVariable(name: "b", arg: 3, scope: !18273, file: !4629, line: 634, type: !2417)
!18279 = !DILocation(line: 634, column: 70, scope: !18273)
!18280 = !DILocation(line: 637, column: 9, scope: !18273)
!18281 = !DILocation(line: 637, column: 16, scope: !18273)
!18282 = !DILocation(line: 637, column: 14, scope: !18273)
!18283 = !DILocation(line: 637, column: 23, scope: !18273)
!18284 = !DILocation(line: 637, column: 30, scope: !18273)
!18285 = !DILocation(line: 637, column: 28, scope: !18273)
!18286 = !DILocation(line: 637, column: 21, scope: !18273)
!18287 = !DILocation(line: 637, column: 2, scope: !18273)
!18288 = !DILocation(line: 637, column: 7, scope: !18273)
!18289 = !DILocation(line: 638, column: 9, scope: !18273)
!18290 = !DILocation(line: 638, column: 16, scope: !18273)
!18291 = !DILocation(line: 638, column: 14, scope: !18273)
!18292 = !DILocation(line: 638, column: 23, scope: !18273)
!18293 = !DILocation(line: 638, column: 30, scope: !18273)
!18294 = !DILocation(line: 638, column: 28, scope: !18273)
!18295 = !DILocation(line: 638, column: 21, scope: !18273)
!18296 = !DILocation(line: 638, column: 2, scope: !18273)
!18297 = !DILocation(line: 638, column: 7, scope: !18273)
!18298 = !DILocation(line: 639, column: 9, scope: !18273)
!18299 = !DILocation(line: 639, column: 16, scope: !18273)
!18300 = !DILocation(line: 639, column: 14, scope: !18273)
!18301 = !DILocation(line: 639, column: 23, scope: !18273)
!18302 = !DILocation(line: 639, column: 30, scope: !18273)
!18303 = !DILocation(line: 639, column: 28, scope: !18273)
!18304 = !DILocation(line: 639, column: 21, scope: !18273)
!18305 = !DILocation(line: 639, column: 2, scope: !18273)
!18306 = !DILocation(line: 639, column: 7, scope: !18273)
!18307 = !DILocation(line: 640, column: 1, scope: !18273)
!18308 = distinct !DISubprogram(name: "mul_v3_fl", scope: !4629, file: !4629, line: 392, type: !18309, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18309 = !DISubroutineType(types: !18310)
!18310 = !{null, !44, !45}
!18311 = !DILocalVariable(name: "r", arg: 1, scope: !18308, file: !4629, line: 392, type: !44)
!18312 = !DILocation(line: 392, column: 30, scope: !18308)
!18313 = !DILocalVariable(name: "f", arg: 2, scope: !18308, file: !4629, line: 392, type: !45)
!18314 = !DILocation(line: 392, column: 42, scope: !18308)
!18315 = !DILocation(line: 394, column: 10, scope: !18308)
!18316 = !DILocation(line: 394, column: 2, scope: !18308)
!18317 = !DILocation(line: 394, column: 7, scope: !18308)
!18318 = !DILocation(line: 395, column: 10, scope: !18308)
!18319 = !DILocation(line: 395, column: 2, scope: !18308)
!18320 = !DILocation(line: 395, column: 7, scope: !18308)
!18321 = !DILocation(line: 396, column: 10, scope: !18308)
!18322 = !DILocation(line: 396, column: 2, scope: !18308)
!18323 = !DILocation(line: 396, column: 7, scope: !18308)
!18324 = !DILocation(line: 397, column: 1, scope: !18308)
!18325 = distinct !DISubprogram(name: "add_v3_v3", scope: !4629, file: !4629, line: 302, type: !4630, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18326 = !DILocalVariable(name: "r", arg: 1, scope: !18325, file: !4629, line: 302, type: !44)
!18327 = !DILocation(line: 302, column: 30, scope: !18325)
!18328 = !DILocalVariable(name: "a", arg: 2, scope: !18325, file: !4629, line: 302, type: !2417)
!18329 = !DILocation(line: 302, column: 48, scope: !18325)
!18330 = !DILocation(line: 304, column: 10, scope: !18325)
!18331 = !DILocation(line: 304, column: 2, scope: !18325)
!18332 = !DILocation(line: 304, column: 7, scope: !18325)
!18333 = !DILocation(line: 305, column: 10, scope: !18325)
!18334 = !DILocation(line: 305, column: 2, scope: !18325)
!18335 = !DILocation(line: 305, column: 7, scope: !18325)
!18336 = !DILocation(line: 306, column: 10, scope: !18325)
!18337 = !DILocation(line: 306, column: 2, scope: !18325)
!18338 = !DILocation(line: 306, column: 7, scope: !18325)
!18339 = !DILocation(line: 307, column: 1, scope: !18325)
!18340 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !4629, file: !4629, line: 527, type: !18341, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18341 = !DISubroutineType(types: !18342)
!18342 = !{null, !44, !2417, !2417, !45}
!18343 = !DILocalVariable(name: "r", arg: 1, scope: !18340, file: !4629, line: 527, type: !44)
!18344 = !DILocation(line: 527, column: 35, scope: !18340)
!18345 = !DILocalVariable(name: "a", arg: 2, scope: !18340, file: !4629, line: 527, type: !2417)
!18346 = !DILocation(line: 527, column: 53, scope: !18340)
!18347 = !DILocalVariable(name: "b", arg: 3, scope: !18340, file: !4629, line: 527, type: !2417)
!18348 = !DILocation(line: 527, column: 71, scope: !18340)
!18349 = !DILocalVariable(name: "f", arg: 4, scope: !18340, file: !4629, line: 527, type: !45)
!18350 = !DILocation(line: 527, column: 83, scope: !18340)
!18351 = !DILocation(line: 529, column: 9, scope: !18340)
!18352 = !DILocation(line: 529, column: 16, scope: !18340)
!18353 = !DILocation(line: 529, column: 23, scope: !18340)
!18354 = !DILocation(line: 529, column: 21, scope: !18340)
!18355 = !DILocation(line: 529, column: 14, scope: !18340)
!18356 = !DILocation(line: 529, column: 2, scope: !18340)
!18357 = !DILocation(line: 529, column: 7, scope: !18340)
!18358 = !DILocation(line: 530, column: 9, scope: !18340)
!18359 = !DILocation(line: 530, column: 16, scope: !18340)
!18360 = !DILocation(line: 530, column: 23, scope: !18340)
!18361 = !DILocation(line: 530, column: 21, scope: !18340)
!18362 = !DILocation(line: 530, column: 14, scope: !18340)
!18363 = !DILocation(line: 530, column: 2, scope: !18340)
!18364 = !DILocation(line: 530, column: 7, scope: !18340)
!18365 = !DILocation(line: 531, column: 9, scope: !18340)
!18366 = !DILocation(line: 531, column: 16, scope: !18340)
!18367 = !DILocation(line: 531, column: 23, scope: !18340)
!18368 = !DILocation(line: 531, column: 21, scope: !18340)
!18369 = !DILocation(line: 531, column: 14, scope: !18340)
!18370 = !DILocation(line: 531, column: 2, scope: !18340)
!18371 = !DILocation(line: 531, column: 7, scope: !18340)
!18372 = !DILocation(line: 532, column: 1, scope: !18340)
!18373 = distinct !DISubprogram(name: "particle_billboard", scope: !3, file: !3, line: 1065, type: !18374, scopeLine: 1066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18374 = !DISubroutineType(types: !18375)
!18375 = !{null, !6, !3063, !4157, !16585}
!18376 = !DILocalVariable(name: "re", arg: 1, scope: !18373, file: !3, line: 1065, type: !6)
!18377 = !DILocation(line: 1065, column: 40, scope: !18373)
!18378 = !DILocalVariable(name: "obr", arg: 2, scope: !18373, file: !3, line: 1065, type: !3063)
!18379 = !DILocation(line: 1065, column: 55, scope: !18373)
!18380 = !DILocalVariable(name: "ma", arg: 3, scope: !18373, file: !3, line: 1065, type: !4157)
!18381 = !DILocation(line: 1065, column: 70, scope: !18373)
!18382 = !DILocalVariable(name: "bb", arg: 4, scope: !18373, file: !3, line: 1065, type: !16585)
!18383 = !DILocation(line: 1065, column: 97, scope: !18373)
!18384 = !DILocalVariable(name: "vlr", scope: !18373, file: !3, line: 1067, type: !13020)
!18385 = !DILocation(line: 1067, column: 11, scope: !18373)
!18386 = !DILocalVariable(name: "mtf", scope: !18373, file: !3, line: 1068, type: !4145)
!18387 = !DILocation(line: 1068, column: 10, scope: !18373)
!18388 = !DILocalVariable(name: "xvec", scope: !18373, file: !3, line: 1069, type: !188)
!18389 = !DILocation(line: 1069, column: 8, scope: !18373)
!18390 = !DILocalVariable(name: "yvec", scope: !18373, file: !3, line: 1069, type: !188)
!18391 = !DILocation(line: 1069, column: 17, scope: !18373)
!18392 = !DILocalVariable(name: "zvec", scope: !18373, file: !3, line: 1069, type: !188)
!18393 = !DILocation(line: 1069, column: 26, scope: !18373)
!18394 = !DILocalVariable(name: "bb_center", scope: !18373, file: !3, line: 1069, type: !188)
!18395 = !DILocation(line: 1069, column: 35, scope: !18373)
!18396 = !DILocalVariable(name: "totsplit", scope: !18373, file: !3, line: 1071, type: !21)
!18397 = !DILocation(line: 1071, column: 6, scope: !18373)
!18398 = !DILocation(line: 1071, column: 17, scope: !18373)
!18399 = !DILocation(line: 1071, column: 21, scope: !18373)
!18400 = !DILocation(line: 1071, column: 32, scope: !18373)
!18401 = !DILocation(line: 1071, column: 36, scope: !18373)
!18402 = !DILocation(line: 1071, column: 30, scope: !18373)
!18403 = !DILocalVariable(name: "tile", scope: !18373, file: !3, line: 1072, type: !21)
!18404 = !DILocation(line: 1072, column: 6, scope: !18373)
!18405 = !DILocalVariable(name: "x", scope: !18373, file: !3, line: 1072, type: !21)
!18406 = !DILocation(line: 1072, column: 12, scope: !18373)
!18407 = !DILocalVariable(name: "y", scope: !18373, file: !3, line: 1072, type: !21)
!18408 = !DILocation(line: 1072, column: 15, scope: !18373)
!18409 = !DILocalVariable(name: "uvx", scope: !18373, file: !3, line: 1074, type: !45)
!18410 = !DILocation(line: 1074, column: 8, scope: !18373)
!18411 = !DILocalVariable(name: "uvy", scope: !18373, file: !3, line: 1074, type: !45)
!18412 = !DILocation(line: 1074, column: 20, scope: !18373)
!18413 = !DILocalVariable(name: "uvdx", scope: !18373, file: !3, line: 1074, type: !45)
!18414 = !DILocation(line: 1074, column: 32, scope: !18373)
!18415 = !DILocalVariable(name: "uvdy", scope: !18373, file: !3, line: 1074, type: !45)
!18416 = !DILocation(line: 1074, column: 45, scope: !18373)
!18417 = !DILocalVariable(name: "time", scope: !18373, file: !3, line: 1074, type: !45)
!18418 = !DILocation(line: 1074, column: 58, scope: !18373)
!18419 = !DILocation(line: 1076, column: 24, scope: !18373)
!18420 = !DILocation(line: 1076, column: 29, scope: !18373)
!18421 = !DILocation(line: 1076, column: 34, scope: !18373)
!18422 = !DILocation(line: 1076, column: 41, scope: !18373)
!18423 = !DILocation(line: 1076, column: 7, scope: !18373)
!18424 = !DILocation(line: 1076, column: 5, scope: !18373)
!18425 = !DILocation(line: 1077, column: 28, scope: !18373)
!18426 = !DILocation(line: 1077, column: 33, scope: !18373)
!18427 = !DILocation(line: 1077, column: 38, scope: !18373)
!18428 = !DILocation(line: 1077, column: 45, scope: !18373)
!18429 = !DILocation(line: 1077, column: 11, scope: !18373)
!18430 = !DILocation(line: 1077, column: 2, scope: !18373)
!18431 = !DILocation(line: 1077, column: 7, scope: !18373)
!18432 = !DILocation(line: 1077, column: 9, scope: !18373)
!18433 = !DILocation(line: 1078, column: 28, scope: !18373)
!18434 = !DILocation(line: 1078, column: 33, scope: !18373)
!18435 = !DILocation(line: 1078, column: 38, scope: !18373)
!18436 = !DILocation(line: 1078, column: 45, scope: !18373)
!18437 = !DILocation(line: 1078, column: 11, scope: !18373)
!18438 = !DILocation(line: 1078, column: 2, scope: !18373)
!18439 = !DILocation(line: 1078, column: 7, scope: !18373)
!18440 = !DILocation(line: 1078, column: 9, scope: !18373)
!18441 = !DILocation(line: 1079, column: 28, scope: !18373)
!18442 = !DILocation(line: 1079, column: 33, scope: !18373)
!18443 = !DILocation(line: 1079, column: 38, scope: !18373)
!18444 = !DILocation(line: 1079, column: 45, scope: !18373)
!18445 = !DILocation(line: 1079, column: 11, scope: !18373)
!18446 = !DILocation(line: 1079, column: 2, scope: !18373)
!18447 = !DILocation(line: 1079, column: 7, scope: !18373)
!18448 = !DILocation(line: 1079, column: 9, scope: !18373)
!18449 = !DILocation(line: 1080, column: 28, scope: !18373)
!18450 = !DILocation(line: 1080, column: 33, scope: !18373)
!18451 = !DILocation(line: 1080, column: 38, scope: !18373)
!18452 = !DILocation(line: 1080, column: 45, scope: !18373)
!18453 = !DILocation(line: 1080, column: 11, scope: !18373)
!18454 = !DILocation(line: 1080, column: 2, scope: !18373)
!18455 = !DILocation(line: 1080, column: 7, scope: !18373)
!18456 = !DILocation(line: 1080, column: 9, scope: !18373)
!18457 = !DILocation(line: 1082, column: 22, scope: !18373)
!18458 = !DILocation(line: 1082, column: 26, scope: !18373)
!18459 = !DILocation(line: 1082, column: 32, scope: !18373)
!18460 = !DILocation(line: 1082, column: 38, scope: !18373)
!18461 = !DILocation(line: 1082, column: 44, scope: !18373)
!18462 = !DILocation(line: 1082, column: 2, scope: !18373)
!18463 = !DILocation(line: 1084, column: 14, scope: !18373)
!18464 = !DILocation(line: 1084, column: 19, scope: !18373)
!18465 = !DILocation(line: 1084, column: 23, scope: !18373)
!18466 = !DILocation(line: 1084, column: 27, scope: !18373)
!18467 = !DILocation(line: 1084, column: 38, scope: !18373)
!18468 = !DILocation(line: 1084, column: 2, scope: !18373)
!18469 = !DILocation(line: 1085, column: 12, scope: !18373)
!18470 = !DILocation(line: 1085, column: 17, scope: !18373)
!18471 = !DILocation(line: 1085, column: 21, scope: !18373)
!18472 = !DILocation(line: 1085, column: 25, scope: !18373)
!18473 = !DILocation(line: 1085, column: 2, scope: !18373)
!18474 = !DILocation(line: 1086, column: 12, scope: !18373)
!18475 = !DILocation(line: 1086, column: 16, scope: !18373)
!18476 = !DILocation(line: 1086, column: 25, scope: !18373)
!18477 = !DILocation(line: 1086, column: 30, scope: !18373)
!18478 = !DILocation(line: 1086, column: 34, scope: !18373)
!18479 = !DILocation(line: 1086, column: 2, scope: !18373)
!18480 = !DILocation(line: 1088, column: 14, scope: !18373)
!18481 = !DILocation(line: 1088, column: 19, scope: !18373)
!18482 = !DILocation(line: 1088, column: 23, scope: !18373)
!18483 = !DILocation(line: 1088, column: 27, scope: !18373)
!18484 = !DILocation(line: 1088, column: 38, scope: !18373)
!18485 = !DILocation(line: 1088, column: 2, scope: !18373)
!18486 = !DILocation(line: 1089, column: 12, scope: !18373)
!18487 = !DILocation(line: 1089, column: 17, scope: !18373)
!18488 = !DILocation(line: 1089, column: 21, scope: !18373)
!18489 = !DILocation(line: 1089, column: 25, scope: !18373)
!18490 = !DILocation(line: 1089, column: 2, scope: !18373)
!18491 = !DILocation(line: 1090, column: 12, scope: !18373)
!18492 = !DILocation(line: 1090, column: 16, scope: !18373)
!18493 = !DILocation(line: 1090, column: 25, scope: !18373)
!18494 = !DILocation(line: 1090, column: 30, scope: !18373)
!18495 = !DILocation(line: 1090, column: 34, scope: !18373)
!18496 = !DILocation(line: 1090, column: 2, scope: !18373)
!18497 = !DILocation(line: 1092, column: 14, scope: !18373)
!18498 = !DILocation(line: 1092, column: 19, scope: !18373)
!18499 = !DILocation(line: 1092, column: 23, scope: !18373)
!18500 = !DILocation(line: 1092, column: 27, scope: !18373)
!18501 = !DILocation(line: 1092, column: 38, scope: !18373)
!18502 = !DILocation(line: 1092, column: 2, scope: !18373)
!18503 = !DILocation(line: 1093, column: 14, scope: !18373)
!18504 = !DILocation(line: 1093, column: 19, scope: !18373)
!18505 = !DILocation(line: 1093, column: 23, scope: !18373)
!18506 = !DILocation(line: 1093, column: 27, scope: !18373)
!18507 = !DILocation(line: 1093, column: 32, scope: !18373)
!18508 = !DILocation(line: 1093, column: 36, scope: !18373)
!18509 = !DILocation(line: 1093, column: 40, scope: !18373)
!18510 = !DILocation(line: 1093, column: 2, scope: !18373)
!18511 = !DILocation(line: 1094, column: 12, scope: !18373)
!18512 = !DILocation(line: 1094, column: 16, scope: !18373)
!18513 = !DILocation(line: 1094, column: 25, scope: !18373)
!18514 = !DILocation(line: 1094, column: 30, scope: !18373)
!18515 = !DILocation(line: 1094, column: 34, scope: !18373)
!18516 = !DILocation(line: 1094, column: 2, scope: !18373)
!18517 = !DILocation(line: 1096, column: 14, scope: !18373)
!18518 = !DILocation(line: 1096, column: 19, scope: !18373)
!18519 = !DILocation(line: 1096, column: 23, scope: !18373)
!18520 = !DILocation(line: 1096, column: 27, scope: !18373)
!18521 = !DILocation(line: 1096, column: 38, scope: !18373)
!18522 = !DILocation(line: 1096, column: 2, scope: !18373)
!18523 = !DILocation(line: 1097, column: 12, scope: !18373)
!18524 = !DILocation(line: 1097, column: 17, scope: !18373)
!18525 = !DILocation(line: 1097, column: 21, scope: !18373)
!18526 = !DILocation(line: 1097, column: 25, scope: !18373)
!18527 = !DILocation(line: 1097, column: 2, scope: !18373)
!18528 = !DILocation(line: 1098, column: 12, scope: !18373)
!18529 = !DILocation(line: 1098, column: 16, scope: !18373)
!18530 = !DILocation(line: 1098, column: 25, scope: !18373)
!18531 = !DILocation(line: 1098, column: 30, scope: !18373)
!18532 = !DILocation(line: 1098, column: 34, scope: !18373)
!18533 = !DILocation(line: 1098, column: 2, scope: !18373)
!18534 = !DILocation(line: 1100, column: 17, scope: !18373)
!18535 = !DILocation(line: 1100, column: 22, scope: !18373)
!18536 = !DILocation(line: 1100, column: 25, scope: !18373)
!18537 = !DILocation(line: 1100, column: 30, scope: !18373)
!18538 = !DILocation(line: 1100, column: 34, scope: !18373)
!18539 = !DILocation(line: 1100, column: 38, scope: !18373)
!18540 = !DILocation(line: 1100, column: 43, scope: !18373)
!18541 = !DILocation(line: 1100, column: 47, scope: !18373)
!18542 = !DILocation(line: 1100, column: 51, scope: !18373)
!18543 = !DILocation(line: 1100, column: 56, scope: !18373)
!18544 = !DILocation(line: 1100, column: 60, scope: !18373)
!18545 = !DILocation(line: 1100, column: 64, scope: !18373)
!18546 = !DILocation(line: 1100, column: 69, scope: !18373)
!18547 = !DILocation(line: 1100, column: 73, scope: !18373)
!18548 = !DILocation(line: 1100, column: 2, scope: !18373)
!18549 = !DILocation(line: 1101, column: 13, scope: !18373)
!18550 = !DILocation(line: 1101, column: 18, scope: !18373)
!18551 = !DILocation(line: 1101, column: 22, scope: !18373)
!18552 = !DILocation(line: 1101, column: 25, scope: !18373)
!18553 = !DILocation(line: 1101, column: 30, scope: !18373)
!18554 = !DILocation(line: 1101, column: 2, scope: !18373)
!18555 = !DILocation(line: 1102, column: 13, scope: !18373)
!18556 = !DILocation(line: 1102, column: 18, scope: !18373)
!18557 = !DILocation(line: 1102, column: 22, scope: !18373)
!18558 = !DILocation(line: 1102, column: 25, scope: !18373)
!18559 = !DILocation(line: 1102, column: 30, scope: !18373)
!18560 = !DILocation(line: 1102, column: 2, scope: !18373)
!18561 = !DILocation(line: 1103, column: 13, scope: !18373)
!18562 = !DILocation(line: 1103, column: 18, scope: !18373)
!18563 = !DILocation(line: 1103, column: 22, scope: !18373)
!18564 = !DILocation(line: 1103, column: 25, scope: !18373)
!18565 = !DILocation(line: 1103, column: 30, scope: !18373)
!18566 = !DILocation(line: 1103, column: 2, scope: !18373)
!18567 = !DILocation(line: 1104, column: 13, scope: !18373)
!18568 = !DILocation(line: 1104, column: 18, scope: !18373)
!18569 = !DILocation(line: 1104, column: 22, scope: !18373)
!18570 = !DILocation(line: 1104, column: 25, scope: !18373)
!18571 = !DILocation(line: 1104, column: 30, scope: !18373)
!18572 = !DILocation(line: 1104, column: 2, scope: !18373)
!18573 = !DILocation(line: 1106, column: 12, scope: !18373)
!18574 = !DILocation(line: 1106, column: 2, scope: !18373)
!18575 = !DILocation(line: 1106, column: 7, scope: !18373)
!18576 = !DILocation(line: 1106, column: 10, scope: !18373)
!18577 = !DILocation(line: 1107, column: 2, scope: !18373)
!18578 = !DILocation(line: 1107, column: 7, scope: !18373)
!18579 = !DILocation(line: 1107, column: 9, scope: !18373)
!18580 = !DILocation(line: 1109, column: 6, scope: !18581)
!18581 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 1109, column: 6)
!18582 = !DILocation(line: 1109, column: 10, scope: !18581)
!18583 = !DILocation(line: 1109, column: 19, scope: !18581)
!18584 = !DILocation(line: 1109, column: 6, scope: !18373)
!18585 = !DILocation(line: 1110, column: 31, scope: !18586)
!18586 = distinct !DILexicalBlock(scope: !18581, file: !3, line: 1109, column: 24)
!18587 = !DILocation(line: 1110, column: 35, scope: !18586)
!18588 = !DILocation(line: 1110, column: 24, scope: !18586)
!18589 = !DILocation(line: 1110, column: 22, scope: !18586)
!18590 = !DILocation(line: 1110, column: 15, scope: !18586)
!18591 = !DILocation(line: 1110, column: 8, scope: !18586)
!18592 = !DILocation(line: 1112, column: 7, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18586, file: !3, line: 1112, column: 7)
!18594 = !DILocation(line: 1112, column: 7, scope: !18586)
!18595 = !DILocation(line: 1113, column: 8, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18597, file: !3, line: 1113, column: 8)
!18597 = distinct !DILexicalBlock(scope: !18593, file: !3, line: 1112, column: 61)
!18598 = !DILocation(line: 1113, column: 12, scope: !18596)
!18599 = !DILocation(line: 1113, column: 17, scope: !18596)
!18600 = !DILocation(line: 1113, column: 8, scope: !18597)
!18601 = !DILocation(line: 1114, column: 19, scope: !18596)
!18602 = !DILocation(line: 1114, column: 23, scope: !18596)
!18603 = !DILocation(line: 1114, column: 30, scope: !18596)
!18604 = !DILocation(line: 1114, column: 34, scope: !18596)
!18605 = !DILocation(line: 1114, column: 28, scope: !18596)
!18606 = !DILocation(line: 1114, column: 13, scope: !18596)
!18607 = !DILocation(line: 1114, column: 46, scope: !18596)
!18608 = !DILocation(line: 1114, column: 44, scope: !18596)
!18609 = !DILocation(line: 1114, column: 12, scope: !18596)
!18610 = !DILocation(line: 1114, column: 63, scope: !18596)
!18611 = !DILocation(line: 1114, column: 56, scope: !18596)
!18612 = !DILocation(line: 1114, column: 55, scope: !18596)
!18613 = !DILocation(line: 1114, column: 10, scope: !18596)
!18614 = !DILocation(line: 1114, column: 5, scope: !18596)
!18615 = !DILocation(line: 1116, column: 12, scope: !18596)
!18616 = !DILocation(line: 1116, column: 16, scope: !18596)
!18617 = !DILocation(line: 1116, column: 10, scope: !18596)
!18618 = !DILocation(line: 1117, column: 3, scope: !18597)
!18619 = !DILocation(line: 1118, column: 12, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18593, file: !3, line: 1118, column: 12)
!18621 = !DILocation(line: 1118, column: 16, scope: !18620)
!18622 = !DILocation(line: 1118, column: 21, scope: !18620)
!18623 = !DILocation(line: 1118, column: 12, scope: !18593)
!18624 = !DILocation(line: 1119, column: 8, scope: !18625)
!18625 = distinct !DILexicalBlock(scope: !18626, file: !3, line: 1119, column: 8)
!18626 = distinct !DILexicalBlock(scope: !18620, file: !3, line: 1118, column: 44)
!18627 = !DILocation(line: 1119, column: 12, scope: !18625)
!18628 = !DILocation(line: 1119, column: 18, scope: !18625)
!18629 = !DILocation(line: 1119, column: 8, scope: !18626)
!18630 = !DILocation(line: 1120, column: 25, scope: !18631)
!18631 = distinct !DILexicalBlock(scope: !18625, file: !3, line: 1119, column: 35)
!18632 = !DILocation(line: 1120, column: 29, scope: !18631)
!18633 = !DILocation(line: 1120, column: 34, scope: !18631)
!18634 = !DILocation(line: 1120, column: 42, scope: !18631)
!18635 = !DILocation(line: 1120, column: 24, scope: !18631)
!18636 = !DILocation(line: 1120, column: 19, scope: !18631)
!18637 = !DILocation(line: 1120, column: 12, scope: !18631)
!18638 = !DILocation(line: 1120, column: 10, scope: !18631)
!18639 = !DILocation(line: 1121, column: 4, scope: !18631)
!18640 = !DILocalVariable(name: "axis1", scope: !18641, file: !3, line: 1123, type: !188)
!18641 = distinct !DILexicalBlock(scope: !18625, file: !3, line: 1122, column: 9)
!18642 = !DILocation(line: 1123, column: 11, scope: !18641)
!18643 = !DILocalVariable(name: "axis2", scope: !18641, file: !3, line: 1124, type: !188)
!18644 = !DILocation(line: 1124, column: 11, scope: !18641)
!18645 = !DILocation(line: 1126, column: 12, scope: !18641)
!18646 = !DILocation(line: 1126, column: 16, scope: !18641)
!18647 = !DILocation(line: 1126, column: 22, scope: !18641)
!18648 = !DILocation(line: 1126, column: 27, scope: !18641)
!18649 = !DILocation(line: 1126, column: 5, scope: !18641)
!18650 = !DILocation(line: 1126, column: 32, scope: !18641)
!18651 = !DILocation(line: 1127, column: 12, scope: !18641)
!18652 = !DILocation(line: 1127, column: 16, scope: !18641)
!18653 = !DILocation(line: 1127, column: 22, scope: !18641)
!18654 = !DILocation(line: 1127, column: 27, scope: !18641)
!18655 = !DILocation(line: 1127, column: 5, scope: !18641)
!18656 = !DILocation(line: 1127, column: 32, scope: !18641)
!18657 = !DILocation(line: 1129, column: 9, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18641, file: !3, line: 1129, column: 9)
!18659 = !DILocation(line: 1129, column: 13, scope: !18658)
!18660 = !DILocation(line: 1129, column: 18, scope: !18658)
!18661 = !DILocation(line: 1129, column: 9, scope: !18641)
!18662 = !DILocation(line: 1130, column: 11, scope: !18663)
!18663 = distinct !DILexicalBlock(scope: !18658, file: !3, line: 1129, column: 24)
!18664 = !DILocation(line: 1130, column: 15, scope: !18663)
!18665 = !DILocation(line: 1130, column: 6, scope: !18663)
!18666 = !DILocation(line: 1130, column: 22, scope: !18663)
!18667 = !DILocation(line: 1131, column: 19, scope: !18663)
!18668 = !DILocation(line: 1131, column: 6, scope: !18663)
!18669 = !DILocation(line: 1132, column: 5, scope: !18663)
!18670 = !DILocation(line: 1134, column: 28, scope: !18641)
!18671 = !DILocation(line: 1134, column: 34, scope: !18641)
!18672 = !DILocation(line: 1134, column: 19, scope: !18641)
!18673 = !DILocation(line: 1134, column: 12, scope: !18641)
!18674 = !DILocation(line: 1134, column: 42, scope: !18641)
!18675 = !DILocation(line: 1134, column: 10, scope: !18641)
!18676 = !DILocation(line: 1136, column: 18, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18641, file: !3, line: 1136, column: 9)
!18678 = !DILocation(line: 1136, column: 24, scope: !18677)
!18679 = !DILocation(line: 1136, column: 9, scope: !18677)
!18680 = !DILocation(line: 1136, column: 31, scope: !18677)
!18681 = !DILocation(line: 1136, column: 9, scope: !18641)
!18682 = !DILocation(line: 1137, column: 20, scope: !18677)
!18683 = !DILocation(line: 1137, column: 25, scope: !18677)
!18684 = !DILocation(line: 1137, column: 18, scope: !18677)
!18685 = !DILocation(line: 1137, column: 11, scope: !18677)
!18686 = !DILocation(line: 1137, column: 6, scope: !18677)
!18687 = !DILocation(line: 1139, column: 11, scope: !18677)
!18688 = !DILocation(line: 1141, column: 3, scope: !18626)
!18689 = !DILocation(line: 1143, column: 7, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18586, file: !3, line: 1143, column: 7)
!18691 = !DILocation(line: 1143, column: 11, scope: !18690)
!18692 = !DILocation(line: 1143, column: 24, scope: !18690)
!18693 = !DILocation(line: 1143, column: 7, scope: !18586)
!18694 = !DILocation(line: 1144, column: 23, scope: !18690)
!18695 = !DILocation(line: 1144, column: 37, scope: !18690)
!18696 = !DILocation(line: 1144, column: 41, scope: !18690)
!18697 = !DILocation(line: 1144, column: 30, scope: !18690)
!18698 = !DILocation(line: 1144, column: 54, scope: !18690)
!18699 = !DILocation(line: 1144, column: 47, scope: !18690)
!18700 = !DILocation(line: 1144, column: 45, scope: !18690)
!18701 = !DILocation(line: 1144, column: 28, scope: !18690)
!18702 = !DILocation(line: 1144, column: 18, scope: !18690)
!18703 = !DILocation(line: 1144, column: 11, scope: !18690)
!18704 = !DILocation(line: 1144, column: 9, scope: !18690)
!18705 = !DILocation(line: 1144, column: 4, scope: !18690)
!18706 = !DILocation(line: 1145, column: 12, scope: !18707)
!18707 = distinct !DILexicalBlock(scope: !18690, file: !3, line: 1145, column: 12)
!18708 = !DILocation(line: 1145, column: 16, scope: !18707)
!18709 = !DILocation(line: 1145, column: 28, scope: !18707)
!18710 = !DILocation(line: 1145, column: 12, scope: !18690)
!18711 = !DILocation(line: 1146, column: 23, scope: !18707)
!18712 = !DILocation(line: 1146, column: 30, scope: !18707)
!18713 = !DILocation(line: 1146, column: 34, scope: !18707)
!18714 = !DILocation(line: 1146, column: 28, scope: !18707)
!18715 = !DILocation(line: 1146, column: 18, scope: !18707)
!18716 = !DILocation(line: 1146, column: 11, scope: !18707)
!18717 = !DILocation(line: 1146, column: 9, scope: !18707)
!18718 = !DILocation(line: 1146, column: 4, scope: !18707)
!18719 = !DILocation(line: 1150, column: 17, scope: !18586)
!18720 = !DILocation(line: 1150, column: 22, scope: !18586)
!18721 = !DILocation(line: 1150, column: 41, scope: !18586)
!18722 = !DILocation(line: 1150, column: 39, scope: !18586)
!18723 = !DILocation(line: 1150, column: 10, scope: !18586)
!18724 = !DILocation(line: 1150, column: 8, scope: !18586)
!18725 = !DILocation(line: 1151, column: 7, scope: !18586)
!18726 = !DILocation(line: 1151, column: 14, scope: !18586)
!18727 = !DILocation(line: 1151, column: 18, scope: !18586)
!18728 = !DILocation(line: 1151, column: 12, scope: !18586)
!18729 = !DILocation(line: 1151, column: 5, scope: !18586)
!18730 = !DILocation(line: 1152, column: 7, scope: !18586)
!18731 = !DILocation(line: 1152, column: 14, scope: !18586)
!18732 = !DILocation(line: 1152, column: 18, scope: !18586)
!18733 = !DILocation(line: 1152, column: 12, scope: !18586)
!18734 = !DILocation(line: 1152, column: 5, scope: !18586)
!18735 = !DILocation(line: 1153, column: 8, scope: !18586)
!18736 = !DILocation(line: 1153, column: 12, scope: !18586)
!18737 = !DILocation(line: 1153, column: 21, scope: !18586)
!18738 = !DILocation(line: 1153, column: 28, scope: !18586)
!18739 = !DILocation(line: 1153, column: 26, scope: !18586)
!18740 = !DILocation(line: 1153, column: 5, scope: !18586)
!18741 = !DILocation(line: 1154, column: 9, scope: !18586)
!18742 = !DILocation(line: 1154, column: 16, scope: !18586)
!18743 = !DILocation(line: 1154, column: 14, scope: !18586)
!18744 = !DILocation(line: 1154, column: 7, scope: !18586)
!18745 = !DILocation(line: 1155, column: 9, scope: !18586)
!18746 = !DILocation(line: 1155, column: 16, scope: !18586)
!18747 = !DILocation(line: 1155, column: 14, scope: !18586)
!18748 = !DILocation(line: 1155, column: 7, scope: !18586)
!18749 = !DILocation(line: 1156, column: 2, scope: !18586)
!18750 = !DILocation(line: 1159, column: 6, scope: !18751)
!18751 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 1159, column: 6)
!18752 = !DILocation(line: 1159, column: 10, scope: !18751)
!18753 = !DILocation(line: 1159, column: 16, scope: !18751)
!18754 = !DILocation(line: 1159, column: 6, scope: !18373)
!18755 = !DILocation(line: 1160, column: 30, scope: !18756)
!18756 = distinct !DILexicalBlock(scope: !18751, file: !3, line: 1159, column: 22)
!18757 = !DILocation(line: 1160, column: 35, scope: !18756)
!18758 = !DILocation(line: 1160, column: 40, scope: !18756)
!18759 = !DILocation(line: 1160, column: 44, scope: !18756)
!18760 = !DILocation(line: 1160, column: 9, scope: !18756)
!18761 = !DILocation(line: 1160, column: 7, scope: !18756)
!18762 = !DILocation(line: 1161, column: 3, scope: !18756)
!18763 = !DILocation(line: 1161, column: 8, scope: !18756)
!18764 = !DILocation(line: 1161, column: 17, scope: !18756)
!18765 = !DILocation(line: 1162, column: 3, scope: !18756)
!18766 = !DILocation(line: 1162, column: 8, scope: !18756)
!18767 = !DILocation(line: 1162, column: 17, scope: !18756)
!18768 = !DILocation(line: 1163, column: 3, scope: !18756)
!18769 = !DILocation(line: 1163, column: 8, scope: !18756)
!18770 = !DILocation(line: 1163, column: 17, scope: !18756)
!18771 = !DILocation(line: 1164, column: 3, scope: !18756)
!18772 = !DILocation(line: 1164, column: 8, scope: !18756)
!18773 = !DILocation(line: 1164, column: 17, scope: !18756)
!18774 = !DILocation(line: 1165, column: 3, scope: !18756)
!18775 = !DILocation(line: 1165, column: 8, scope: !18756)
!18776 = !DILocation(line: 1165, column: 17, scope: !18756)
!18777 = !DILocation(line: 1166, column: 3, scope: !18756)
!18778 = !DILocation(line: 1166, column: 8, scope: !18756)
!18779 = !DILocation(line: 1166, column: 17, scope: !18756)
!18780 = !DILocation(line: 1167, column: 3, scope: !18756)
!18781 = !DILocation(line: 1167, column: 8, scope: !18756)
!18782 = !DILocation(line: 1167, column: 17, scope: !18756)
!18783 = !DILocation(line: 1168, column: 3, scope: !18756)
!18784 = !DILocation(line: 1168, column: 8, scope: !18756)
!18785 = !DILocation(line: 1168, column: 17, scope: !18756)
!18786 = !DILocation(line: 1169, column: 2, scope: !18756)
!18787 = !DILocation(line: 1172, column: 6, scope: !18788)
!18788 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 1172, column: 6)
!18789 = !DILocation(line: 1172, column: 10, scope: !18788)
!18790 = !DILocation(line: 1172, column: 16, scope: !18788)
!18791 = !DILocation(line: 1172, column: 6, scope: !18373)
!18792 = !DILocation(line: 1173, column: 30, scope: !18793)
!18793 = distinct !DILexicalBlock(scope: !18788, file: !3, line: 1172, column: 22)
!18794 = !DILocation(line: 1173, column: 35, scope: !18793)
!18795 = !DILocation(line: 1173, column: 40, scope: !18793)
!18796 = !DILocation(line: 1173, column: 44, scope: !18793)
!18797 = !DILocation(line: 1173, column: 9, scope: !18793)
!18798 = !DILocation(line: 1173, column: 7, scope: !18793)
!18799 = !DILocation(line: 1174, column: 67, scope: !18793)
!18800 = !DILocation(line: 1174, column: 71, scope: !18793)
!18801 = !DILocation(line: 1174, column: 51, scope: !18793)
!18802 = !DILocation(line: 1174, column: 56, scope: !18793)
!18803 = !DILocation(line: 1174, column: 65, scope: !18793)
!18804 = !DILocation(line: 1174, column: 35, scope: !18793)
!18805 = !DILocation(line: 1174, column: 40, scope: !18793)
!18806 = !DILocation(line: 1174, column: 49, scope: !18793)
!18807 = !DILocation(line: 1174, column: 19, scope: !18793)
!18808 = !DILocation(line: 1174, column: 24, scope: !18793)
!18809 = !DILocation(line: 1174, column: 33, scope: !18793)
!18810 = !DILocation(line: 1174, column: 3, scope: !18793)
!18811 = !DILocation(line: 1174, column: 8, scope: !18793)
!18812 = !DILocation(line: 1174, column: 17, scope: !18793)
!18813 = !DILocation(line: 1175, column: 74, scope: !18793)
!18814 = !DILocation(line: 1175, column: 78, scope: !18793)
!18815 = !DILocation(line: 1175, column: 67, scope: !18793)
!18816 = !DILocation(line: 1175, column: 89, scope: !18793)
!18817 = !DILocation(line: 1175, column: 93, scope: !18793)
!18818 = !DILocation(line: 1175, column: 82, scope: !18793)
!18819 = !DILocation(line: 1175, column: 81, scope: !18793)
!18820 = !DILocation(line: 1175, column: 51, scope: !18793)
!18821 = !DILocation(line: 1175, column: 56, scope: !18793)
!18822 = !DILocation(line: 1175, column: 65, scope: !18793)
!18823 = !DILocation(line: 1175, column: 35, scope: !18793)
!18824 = !DILocation(line: 1175, column: 40, scope: !18793)
!18825 = !DILocation(line: 1175, column: 49, scope: !18793)
!18826 = !DILocation(line: 1175, column: 19, scope: !18793)
!18827 = !DILocation(line: 1175, column: 24, scope: !18793)
!18828 = !DILocation(line: 1175, column: 33, scope: !18793)
!18829 = !DILocation(line: 1175, column: 3, scope: !18793)
!18830 = !DILocation(line: 1175, column: 8, scope: !18793)
!18831 = !DILocation(line: 1175, column: 17, scope: !18793)
!18832 = !DILocation(line: 1176, column: 2, scope: !18793)
!18833 = !DILocation(line: 1179, column: 6, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18373, file: !3, line: 1179, column: 6)
!18835 = !DILocation(line: 1179, column: 10, scope: !18834)
!18836 = !DILocation(line: 1179, column: 19, scope: !18834)
!18837 = !DILocation(line: 1179, column: 23, scope: !18834)
!18838 = !DILocation(line: 1179, column: 26, scope: !18834)
!18839 = !DILocation(line: 1179, column: 30, scope: !18834)
!18840 = !DILocation(line: 1179, column: 36, scope: !18834)
!18841 = !DILocation(line: 1179, column: 6, scope: !18373)
!18842 = !DILocation(line: 1180, column: 30, scope: !18843)
!18843 = distinct !DILexicalBlock(scope: !18834, file: !3, line: 1179, column: 42)
!18844 = !DILocation(line: 1180, column: 35, scope: !18843)
!18845 = !DILocation(line: 1180, column: 40, scope: !18843)
!18846 = !DILocation(line: 1180, column: 44, scope: !18843)
!18847 = !DILocation(line: 1180, column: 9, scope: !18843)
!18848 = !DILocation(line: 1180, column: 7, scope: !18843)
!18849 = !DILocation(line: 1181, column: 19, scope: !18843)
!18850 = !DILocation(line: 1181, column: 25, scope: !18843)
!18851 = !DILocation(line: 1181, column: 23, scope: !18843)
!18852 = !DILocation(line: 1181, column: 3, scope: !18843)
!18853 = !DILocation(line: 1181, column: 8, scope: !18843)
!18854 = !DILocation(line: 1181, column: 17, scope: !18843)
!18855 = !DILocation(line: 1182, column: 19, scope: !18843)
!18856 = !DILocation(line: 1182, column: 25, scope: !18843)
!18857 = !DILocation(line: 1182, column: 23, scope: !18843)
!18858 = !DILocation(line: 1182, column: 3, scope: !18843)
!18859 = !DILocation(line: 1182, column: 8, scope: !18843)
!18860 = !DILocation(line: 1182, column: 17, scope: !18843)
!18861 = !DILocation(line: 1183, column: 19, scope: !18843)
!18862 = !DILocation(line: 1183, column: 3, scope: !18843)
!18863 = !DILocation(line: 1183, column: 8, scope: !18843)
!18864 = !DILocation(line: 1183, column: 17, scope: !18843)
!18865 = !DILocation(line: 1184, column: 19, scope: !18843)
!18866 = !DILocation(line: 1184, column: 25, scope: !18843)
!18867 = !DILocation(line: 1184, column: 23, scope: !18843)
!18868 = !DILocation(line: 1184, column: 3, scope: !18843)
!18869 = !DILocation(line: 1184, column: 8, scope: !18843)
!18870 = !DILocation(line: 1184, column: 17, scope: !18843)
!18871 = !DILocation(line: 1185, column: 19, scope: !18843)
!18872 = !DILocation(line: 1185, column: 3, scope: !18843)
!18873 = !DILocation(line: 1185, column: 8, scope: !18843)
!18874 = !DILocation(line: 1185, column: 17, scope: !18843)
!18875 = !DILocation(line: 1186, column: 19, scope: !18843)
!18876 = !DILocation(line: 1186, column: 3, scope: !18843)
!18877 = !DILocation(line: 1186, column: 8, scope: !18843)
!18878 = !DILocation(line: 1186, column: 17, scope: !18843)
!18879 = !DILocation(line: 1187, column: 19, scope: !18843)
!18880 = !DILocation(line: 1187, column: 25, scope: !18843)
!18881 = !DILocation(line: 1187, column: 23, scope: !18843)
!18882 = !DILocation(line: 1187, column: 3, scope: !18843)
!18883 = !DILocation(line: 1187, column: 8, scope: !18843)
!18884 = !DILocation(line: 1187, column: 17, scope: !18843)
!18885 = !DILocation(line: 1188, column: 19, scope: !18843)
!18886 = !DILocation(line: 1188, column: 3, scope: !18843)
!18887 = !DILocation(line: 1188, column: 8, scope: !18843)
!18888 = !DILocation(line: 1188, column: 17, scope: !18843)
!18889 = !DILocation(line: 1189, column: 2, scope: !18843)
!18890 = !DILocation(line: 1190, column: 1, scope: !18373)
!18891 = distinct !DISubprogram(name: "sub_v3_v3", scope: !4629, file: !4629, line: 350, type: !4630, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18892 = !DILocalVariable(name: "r", arg: 1, scope: !18891, file: !4629, line: 350, type: !44)
!18893 = !DILocation(line: 350, column: 30, scope: !18891)
!18894 = !DILocalVariable(name: "a", arg: 2, scope: !18891, file: !4629, line: 350, type: !2417)
!18895 = !DILocation(line: 350, column: 48, scope: !18891)
!18896 = !DILocation(line: 352, column: 10, scope: !18891)
!18897 = !DILocation(line: 352, column: 2, scope: !18891)
!18898 = !DILocation(line: 352, column: 7, scope: !18891)
!18899 = !DILocation(line: 353, column: 10, scope: !18891)
!18900 = !DILocation(line: 353, column: 2, scope: !18891)
!18901 = !DILocation(line: 353, column: 7, scope: !18891)
!18902 = !DILocation(line: 354, column: 10, scope: !18891)
!18903 = !DILocation(line: 354, column: 2, scope: !18891)
!18904 = !DILocation(line: 354, column: 7, scope: !18891)
!18905 = !DILocation(line: 355, column: 1, scope: !18891)
!18906 = distinct !DISubprogram(name: "calc_tangent_vector", scope: !3, file: !3, line: 250, type: !18907, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!18907 = !DISubroutineType(types: !18908)
!18908 = !{null, !3063, !13020, !21}
!18909 = !DILocalVariable(name: "obr", arg: 1, scope: !18906, file: !3, line: 250, type: !3063)
!18910 = !DILocation(line: 250, column: 44, scope: !18906)
!18911 = !DILocalVariable(name: "vlr", arg: 2, scope: !18906, file: !3, line: 250, type: !13020)
!18912 = !DILocation(line: 250, column: 58, scope: !18906)
!18913 = !DILocalVariable(name: "do_tangent", arg: 3, scope: !18906, file: !3, line: 250, type: !21)
!18914 = !DILocation(line: 250, column: 67, scope: !18906)
!18915 = !DILocalVariable(name: "tface", scope: !18906, file: !3, line: 252, type: !4145)
!18916 = !DILocation(line: 252, column: 10, scope: !18906)
!18917 = !DILocation(line: 252, column: 38, scope: !18906)
!18918 = !DILocation(line: 252, column: 43, scope: !18906)
!18919 = !DILocation(line: 252, column: 48, scope: !18906)
!18920 = !DILocation(line: 252, column: 53, scope: !18906)
!18921 = !DILocation(line: 252, column: 17, scope: !18906)
!18922 = !DILocalVariable(name: "v1", scope: !18906, file: !3, line: 253, type: !4179)
!18923 = !DILocation(line: 253, column: 11, scope: !18906)
!18924 = !DILocation(line: 253, column: 14, scope: !18906)
!18925 = !DILocation(line: 253, column: 19, scope: !18906)
!18926 = !DILocalVariable(name: "v2", scope: !18906, file: !3, line: 253, type: !4179)
!18927 = !DILocation(line: 253, column: 24, scope: !18906)
!18928 = !DILocation(line: 253, column: 27, scope: !18906)
!18929 = !DILocation(line: 253, column: 32, scope: !18906)
!18930 = !DILocalVariable(name: "v3", scope: !18906, file: !3, line: 253, type: !4179)
!18931 = !DILocation(line: 253, column: 37, scope: !18906)
!18932 = !DILocation(line: 253, column: 40, scope: !18906)
!18933 = !DILocation(line: 253, column: 45, scope: !18906)
!18934 = !DILocalVariable(name: "v4", scope: !18906, file: !3, line: 253, type: !4179)
!18935 = !DILocation(line: 253, column: 50, scope: !18906)
!18936 = !DILocation(line: 253, column: 53, scope: !18906)
!18937 = !DILocation(line: 253, column: 58, scope: !18906)
!18938 = !DILocalVariable(name: "tang", scope: !18906, file: !3, line: 254, type: !188)
!18939 = !DILocation(line: 254, column: 8, scope: !18906)
!18940 = !DILocalVariable(name: "tav", scope: !18906, file: !3, line: 254, type: !44)
!18941 = !DILocation(line: 254, column: 18, scope: !18906)
!18942 = !DILocalVariable(name: "uv1", scope: !18906, file: !3, line: 255, type: !44)
!18943 = !DILocation(line: 255, column: 9, scope: !18906)
!18944 = !DILocalVariable(name: "uv2", scope: !18906, file: !3, line: 255, type: !44)
!18945 = !DILocation(line: 255, column: 15, scope: !18906)
!18946 = !DILocalVariable(name: "uv3", scope: !18906, file: !3, line: 255, type: !44)
!18947 = !DILocation(line: 255, column: 21, scope: !18906)
!18948 = !DILocalVariable(name: "uv4", scope: !18906, file: !3, line: 255, type: !44)
!18949 = !DILocation(line: 255, column: 27, scope: !18906)
!18950 = !DILocalVariable(name: "uv", scope: !18906, file: !3, line: 256, type: !2027)
!18951 = !DILocation(line: 256, column: 8, scope: !18906)
!18952 = !DILocation(line: 258, column: 6, scope: !18953)
!18953 = distinct !DILexicalBlock(scope: !18906, file: !3, line: 258, column: 6)
!18954 = !DILocation(line: 258, column: 6, scope: !18906)
!18955 = !DILocation(line: 259, column: 8, scope: !18956)
!18956 = distinct !DILexicalBlock(scope: !18953, file: !3, line: 258, column: 13)
!18957 = !DILocation(line: 259, column: 15, scope: !18956)
!18958 = !DILocation(line: 259, column: 6, scope: !18956)
!18959 = !DILocation(line: 260, column: 8, scope: !18956)
!18960 = !DILocation(line: 260, column: 15, scope: !18956)
!18961 = !DILocation(line: 260, column: 6, scope: !18956)
!18962 = !DILocation(line: 261, column: 8, scope: !18956)
!18963 = !DILocation(line: 261, column: 15, scope: !18956)
!18964 = !DILocation(line: 261, column: 6, scope: !18956)
!18965 = !DILocation(line: 262, column: 8, scope: !18956)
!18966 = !DILocation(line: 262, column: 15, scope: !18956)
!18967 = !DILocation(line: 262, column: 6, scope: !18956)
!18968 = !DILocation(line: 263, column: 2, scope: !18956)
!18969 = !DILocation(line: 264, column: 11, scope: !18970)
!18970 = distinct !DILexicalBlock(scope: !18953, file: !3, line: 264, column: 11)
!18971 = !DILocation(line: 264, column: 15, scope: !18970)
!18972 = !DILocation(line: 264, column: 11, scope: !18953)
!18973 = !DILocation(line: 265, column: 8, scope: !18974)
!18974 = distinct !DILexicalBlock(scope: !18970, file: !3, line: 264, column: 21)
!18975 = !DILocation(line: 265, column: 6, scope: !18974)
!18976 = !DILocation(line: 265, column: 20, scope: !18974)
!18977 = !DILocation(line: 265, column: 18, scope: !18974)
!18978 = !DILocation(line: 265, column: 32, scope: !18974)
!18979 = !DILocation(line: 265, column: 30, scope: !18974)
!18980 = !DILocation(line: 265, column: 44, scope: !18974)
!18981 = !DILocation(line: 265, column: 42, scope: !18974)
!18982 = !DILocation(line: 266, column: 18, scope: !18974)
!18983 = !DILocation(line: 266, column: 29, scope: !18974)
!18984 = !DILocation(line: 266, column: 39, scope: !18974)
!18985 = !DILocation(line: 266, column: 43, scope: !18974)
!18986 = !DILocation(line: 266, column: 52, scope: !18974)
!18987 = !DILocation(line: 266, column: 56, scope: !18974)
!18988 = !DILocation(line: 266, column: 65, scope: !18974)
!18989 = !DILocation(line: 266, column: 69, scope: !18974)
!18990 = !DILocation(line: 266, column: 3, scope: !18974)
!18991 = !DILocation(line: 267, column: 18, scope: !18974)
!18992 = !DILocation(line: 267, column: 29, scope: !18974)
!18993 = !DILocation(line: 267, column: 39, scope: !18974)
!18994 = !DILocation(line: 267, column: 43, scope: !18974)
!18995 = !DILocation(line: 267, column: 52, scope: !18974)
!18996 = !DILocation(line: 267, column: 56, scope: !18974)
!18997 = !DILocation(line: 267, column: 65, scope: !18974)
!18998 = !DILocation(line: 267, column: 69, scope: !18974)
!18999 = !DILocation(line: 267, column: 3, scope: !18974)
!19000 = !DILocation(line: 268, column: 18, scope: !18974)
!19001 = !DILocation(line: 268, column: 29, scope: !18974)
!19002 = !DILocation(line: 268, column: 39, scope: !18974)
!19003 = !DILocation(line: 268, column: 43, scope: !18974)
!19004 = !DILocation(line: 268, column: 52, scope: !18974)
!19005 = !DILocation(line: 268, column: 56, scope: !18974)
!19006 = !DILocation(line: 268, column: 65, scope: !18974)
!19007 = !DILocation(line: 268, column: 69, scope: !18974)
!19008 = !DILocation(line: 268, column: 3, scope: !18974)
!19009 = !DILocation(line: 269, column: 7, scope: !19010)
!19010 = distinct !DILexicalBlock(scope: !18974, file: !3, line: 269, column: 7)
!19011 = !DILocation(line: 269, column: 7, scope: !18974)
!19012 = !DILocation(line: 270, column: 19, scope: !19010)
!19013 = !DILocation(line: 270, column: 30, scope: !19010)
!19014 = !DILocation(line: 270, column: 40, scope: !19010)
!19015 = !DILocation(line: 270, column: 44, scope: !19010)
!19016 = !DILocation(line: 270, column: 53, scope: !19010)
!19017 = !DILocation(line: 270, column: 57, scope: !19010)
!19018 = !DILocation(line: 270, column: 66, scope: !19010)
!19019 = !DILocation(line: 270, column: 70, scope: !19010)
!19020 = !DILocation(line: 270, column: 4, scope: !19010)
!19021 = !DILocation(line: 271, column: 2, scope: !18974)
!19022 = !DILocation(line: 272, column: 7, scope: !18970)
!19023 = !DILocation(line: 274, column: 18, scope: !18906)
!19024 = !DILocation(line: 274, column: 23, scope: !18906)
!19025 = !DILocation(line: 274, column: 28, scope: !18906)
!19026 = !DILocation(line: 274, column: 33, scope: !18906)
!19027 = !DILocation(line: 274, column: 37, scope: !18906)
!19028 = !DILocation(line: 274, column: 41, scope: !18906)
!19029 = !DILocation(line: 274, column: 45, scope: !18906)
!19030 = !DILocation(line: 274, column: 49, scope: !18906)
!19031 = !DILocation(line: 274, column: 53, scope: !18906)
!19032 = !DILocation(line: 274, column: 57, scope: !18906)
!19033 = !DILocation(line: 274, column: 62, scope: !18906)
!19034 = !DILocation(line: 274, column: 65, scope: !18906)
!19035 = !DILocation(line: 274, column: 2, scope: !18906)
!19036 = !DILocation(line: 276, column: 6, scope: !19037)
!19037 = distinct !DILexicalBlock(scope: !18906, file: !3, line: 276, column: 6)
!19038 = !DILocation(line: 276, column: 6, scope: !18906)
!19039 = !DILocation(line: 277, column: 31, scope: !19040)
!19040 = distinct !DILexicalBlock(scope: !19037, file: !3, line: 276, column: 18)
!19041 = !DILocation(line: 277, column: 36, scope: !19040)
!19042 = !DILocation(line: 277, column: 8, scope: !19040)
!19043 = !DILocation(line: 277, column: 6, scope: !19040)
!19044 = !DILocation(line: 278, column: 13, scope: !19040)
!19045 = !DILocation(line: 278, column: 18, scope: !19040)
!19046 = !DILocation(line: 278, column: 3, scope: !19040)
!19047 = !DILocation(line: 279, column: 31, scope: !19040)
!19048 = !DILocation(line: 279, column: 36, scope: !19040)
!19049 = !DILocation(line: 279, column: 8, scope: !19040)
!19050 = !DILocation(line: 279, column: 6, scope: !19040)
!19051 = !DILocation(line: 280, column: 13, scope: !19040)
!19052 = !DILocation(line: 280, column: 18, scope: !19040)
!19053 = !DILocation(line: 280, column: 3, scope: !19040)
!19054 = !DILocation(line: 281, column: 31, scope: !19040)
!19055 = !DILocation(line: 281, column: 36, scope: !19040)
!19056 = !DILocation(line: 281, column: 8, scope: !19040)
!19057 = !DILocation(line: 281, column: 6, scope: !19040)
!19058 = !DILocation(line: 282, column: 13, scope: !19040)
!19059 = !DILocation(line: 282, column: 18, scope: !19040)
!19060 = !DILocation(line: 282, column: 3, scope: !19040)
!19061 = !DILocation(line: 283, column: 2, scope: !19040)
!19062 = !DILocation(line: 285, column: 6, scope: !19063)
!19063 = distinct !DILexicalBlock(scope: !18906, file: !3, line: 285, column: 6)
!19064 = !DILocation(line: 285, column: 6, scope: !18906)
!19065 = !DILocation(line: 286, column: 19, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !19063, file: !3, line: 285, column: 10)
!19067 = !DILocation(line: 286, column: 24, scope: !19066)
!19068 = !DILocation(line: 286, column: 29, scope: !19066)
!19069 = !DILocation(line: 286, column: 34, scope: !19066)
!19070 = !DILocation(line: 286, column: 38, scope: !19066)
!19071 = !DILocation(line: 286, column: 42, scope: !19066)
!19072 = !DILocation(line: 286, column: 46, scope: !19066)
!19073 = !DILocation(line: 286, column: 50, scope: !19066)
!19074 = !DILocation(line: 286, column: 54, scope: !19066)
!19075 = !DILocation(line: 286, column: 58, scope: !19066)
!19076 = !DILocation(line: 286, column: 63, scope: !19066)
!19077 = !DILocation(line: 286, column: 66, scope: !19066)
!19078 = !DILocation(line: 286, column: 3, scope: !19066)
!19079 = !DILocation(line: 288, column: 7, scope: !19080)
!19080 = distinct !DILexicalBlock(scope: !19066, file: !3, line: 288, column: 7)
!19081 = !DILocation(line: 288, column: 7, scope: !19066)
!19082 = !DILocation(line: 289, column: 32, scope: !19083)
!19083 = distinct !DILexicalBlock(scope: !19080, file: !3, line: 288, column: 19)
!19084 = !DILocation(line: 289, column: 37, scope: !19083)
!19085 = !DILocation(line: 289, column: 9, scope: !19083)
!19086 = !DILocation(line: 289, column: 7, scope: !19083)
!19087 = !DILocation(line: 290, column: 14, scope: !19083)
!19088 = !DILocation(line: 290, column: 19, scope: !19083)
!19089 = !DILocation(line: 290, column: 4, scope: !19083)
!19090 = !DILocation(line: 291, column: 32, scope: !19083)
!19091 = !DILocation(line: 291, column: 37, scope: !19083)
!19092 = !DILocation(line: 291, column: 9, scope: !19083)
!19093 = !DILocation(line: 291, column: 7, scope: !19083)
!19094 = !DILocation(line: 292, column: 14, scope: !19083)
!19095 = !DILocation(line: 292, column: 19, scope: !19083)
!19096 = !DILocation(line: 292, column: 4, scope: !19083)
!19097 = !DILocation(line: 293, column: 32, scope: !19083)
!19098 = !DILocation(line: 293, column: 37, scope: !19083)
!19099 = !DILocation(line: 293, column: 9, scope: !19083)
!19100 = !DILocation(line: 293, column: 7, scope: !19083)
!19101 = !DILocation(line: 294, column: 14, scope: !19083)
!19102 = !DILocation(line: 294, column: 19, scope: !19083)
!19103 = !DILocation(line: 294, column: 4, scope: !19083)
!19104 = !DILocation(line: 295, column: 3, scope: !19083)
!19105 = !DILocation(line: 296, column: 2, scope: !19066)
!19106 = !DILocation(line: 297, column: 1, scope: !18906)
!19107 = distinct !DISubprogram(name: "is_zero_v3", scope: !4629, file: !4629, line: 857, type: !19108, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19108 = !DISubroutineType(types: !19109)
!19109 = !{!28, !2417}
!19110 = !DILocalVariable(name: "v", arg: 1, scope: !19107, file: !4629, line: 857, type: !2417)
!19111 = !DILocation(line: 857, column: 37, scope: !19107)
!19112 = !DILocation(line: 859, column: 10, scope: !19107)
!19113 = !DILocation(line: 859, column: 15, scope: !19107)
!19114 = !DILocation(line: 859, column: 23, scope: !19107)
!19115 = !DILocation(line: 859, column: 26, scope: !19107)
!19116 = !DILocation(line: 859, column: 31, scope: !19107)
!19117 = !DILocation(line: 859, column: 39, scope: !19107)
!19118 = !DILocation(line: 859, column: 42, scope: !19107)
!19119 = !DILocation(line: 859, column: 47, scope: !19107)
!19120 = !DILocation(line: 0, scope: !19107)
!19121 = !DILocation(line: 859, column: 9, scope: !19107)
!19122 = !DILocation(line: 859, column: 2, scope: !19107)
!19123 = distinct !DISubprogram(name: "GetNumFaces", scope: !3, file: !3, line: 313, type: !17020, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19124 = !DILocalVariable(name: "pContext", arg: 1, scope: !19123, file: !3, line: 313, type: !17022)
!19125 = !DILocation(line: 313, column: 50, scope: !19123)
!19126 = !DILocalVariable(name: "pMesh", scope: !19123, file: !3, line: 315, type: !4149)
!19127 = !DILocation(line: 315, column: 24, scope: !19123)
!19128 = !DILocation(line: 315, column: 57, scope: !19123)
!19129 = !DILocation(line: 315, column: 67, scope: !19123)
!19130 = !DILocation(line: 315, column: 32, scope: !19123)
!19131 = !DILocation(line: 316, column: 9, scope: !19123)
!19132 = !DILocation(line: 316, column: 16, scope: !19123)
!19133 = !DILocation(line: 316, column: 21, scope: !19123)
!19134 = !DILocation(line: 316, column: 2, scope: !19123)
!19135 = distinct !DISubprogram(name: "GetNumVertsOfFace", scope: !3, file: !3, line: 319, type: !17026, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19136 = !DILocalVariable(name: "pContext", arg: 1, scope: !19135, file: !3, line: 319, type: !17022)
!19137 = !DILocation(line: 319, column: 56, scope: !19135)
!19138 = !DILocalVariable(name: "face_num", arg: 2, scope: !19135, file: !3, line: 319, type: !7772)
!19139 = !DILocation(line: 319, column: 76, scope: !19135)
!19140 = !DILocalVariable(name: "pMesh", scope: !19135, file: !3, line: 321, type: !4149)
!19141 = !DILocation(line: 321, column: 24, scope: !19135)
!19142 = !DILocation(line: 321, column: 57, scope: !19135)
!19143 = !DILocation(line: 321, column: 67, scope: !19135)
!19144 = !DILocation(line: 321, column: 32, scope: !19135)
!19145 = !DILocalVariable(name: "vlr", scope: !19135, file: !3, line: 322, type: !13020)
!19146 = !DILocation(line: 322, column: 11, scope: !19135)
!19147 = !DILocation(line: 322, column: 33, scope: !19135)
!19148 = !DILocation(line: 322, column: 40, scope: !19135)
!19149 = !DILocation(line: 322, column: 45, scope: !19135)
!19150 = !DILocation(line: 322, column: 16, scope: !19135)
!19151 = !DILocation(line: 323, column: 9, scope: !19135)
!19152 = !DILocation(line: 323, column: 14, scope: !19135)
!19153 = !DILocation(line: 323, column: 16, scope: !19135)
!19154 = !DILocation(line: 323, column: 2, scope: !19135)
!19155 = distinct !DISubprogram(name: "GetPosition", scope: !3, file: !3, line: 326, type: !17030, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19156 = !DILocalVariable(name: "pContext", arg: 1, scope: !19155, file: !3, line: 326, type: !17022)
!19157 = !DILocation(line: 326, column: 51, scope: !19155)
!19158 = !DILocalVariable(name: "r_co", arg: 2, scope: !19155, file: !3, line: 326, type: !44)
!19159 = !DILocation(line: 326, column: 67, scope: !19155)
!19160 = !DILocalVariable(name: "face_num", arg: 3, scope: !19155, file: !3, line: 326, type: !7772)
!19161 = !DILocation(line: 326, column: 86, scope: !19155)
!19162 = !DILocalVariable(name: "vert_index", arg: 4, scope: !19155, file: !3, line: 326, type: !7772)
!19163 = !DILocation(line: 326, column: 106, scope: !19155)
!19164 = !DILocalVariable(name: "pMesh", scope: !19155, file: !3, line: 329, type: !4149)
!19165 = !DILocation(line: 329, column: 24, scope: !19155)
!19166 = !DILocation(line: 329, column: 57, scope: !19155)
!19167 = !DILocation(line: 329, column: 67, scope: !19155)
!19168 = !DILocation(line: 329, column: 32, scope: !19155)
!19169 = !DILocalVariable(name: "vlr", scope: !19155, file: !3, line: 330, type: !13020)
!19170 = !DILocation(line: 330, column: 11, scope: !19155)
!19171 = !DILocation(line: 330, column: 33, scope: !19155)
!19172 = !DILocation(line: 330, column: 40, scope: !19155)
!19173 = !DILocation(line: 330, column: 45, scope: !19155)
!19174 = !DILocation(line: 330, column: 16, scope: !19155)
!19175 = !DILocalVariable(name: "co", scope: !19155, file: !3, line: 331, type: !2417)
!19176 = !DILocation(line: 331, column: 15, scope: !19155)
!19177 = !DILocation(line: 331, column: 22, scope: !19155)
!19178 = !DILocation(line: 331, column: 27, scope: !19155)
!19179 = !DILocation(line: 331, column: 31, scope: !19155)
!19180 = !DILocation(line: 331, column: 20, scope: !19155)
!19181 = !DILocation(line: 331, column: 44, scope: !19155)
!19182 = !DILocation(line: 332, column: 13, scope: !19155)
!19183 = !DILocation(line: 332, column: 19, scope: !19155)
!19184 = !DILocation(line: 332, column: 2, scope: !19155)
!19185 = !DILocation(line: 333, column: 1, scope: !19155)
!19186 = distinct !DISubprogram(name: "GetTextureCoordinate", scope: !3, file: !3, line: 335, type: !17030, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19187 = !DILocalVariable(name: "pContext", arg: 1, scope: !19186, file: !3, line: 335, type: !17022)
!19188 = !DILocation(line: 335, column: 60, scope: !19186)
!19189 = !DILocalVariable(name: "r_uv", arg: 2, scope: !19186, file: !3, line: 335, type: !44)
!19190 = !DILocation(line: 335, column: 76, scope: !19186)
!19191 = !DILocalVariable(name: "face_num", arg: 3, scope: !19186, file: !3, line: 335, type: !7772)
!19192 = !DILocation(line: 335, column: 95, scope: !19186)
!19193 = !DILocalVariable(name: "vert_index", arg: 4, scope: !19186, file: !3, line: 335, type: !7772)
!19194 = !DILocation(line: 335, column: 115, scope: !19186)
!19195 = !DILocalVariable(name: "pMesh", scope: !19186, file: !3, line: 338, type: !4149)
!19196 = !DILocation(line: 338, column: 24, scope: !19186)
!19197 = !DILocation(line: 338, column: 57, scope: !19186)
!19198 = !DILocation(line: 338, column: 67, scope: !19186)
!19199 = !DILocation(line: 338, column: 32, scope: !19186)
!19200 = !DILocalVariable(name: "vlr", scope: !19186, file: !3, line: 339, type: !13020)
!19201 = !DILocation(line: 339, column: 11, scope: !19186)
!19202 = !DILocation(line: 339, column: 33, scope: !19186)
!19203 = !DILocation(line: 339, column: 40, scope: !19186)
!19204 = !DILocation(line: 339, column: 45, scope: !19186)
!19205 = !DILocation(line: 339, column: 16, scope: !19186)
!19206 = !DILocalVariable(name: "tface", scope: !19186, file: !3, line: 340, type: !4145)
!19207 = !DILocation(line: 340, column: 10, scope: !19186)
!19208 = !DILocation(line: 340, column: 38, scope: !19186)
!19209 = !DILocation(line: 340, column: 45, scope: !19186)
!19210 = !DILocation(line: 340, column: 50, scope: !19186)
!19211 = !DILocation(line: 340, column: 55, scope: !19186)
!19212 = !DILocation(line: 340, column: 62, scope: !19186)
!19213 = !DILocation(line: 340, column: 67, scope: !19186)
!19214 = !DILocation(line: 340, column: 17, scope: !19186)
!19215 = !DILocalVariable(name: "coord", scope: !19186, file: !3, line: 341, type: !2417)
!19216 = !DILocation(line: 341, column: 15, scope: !19186)
!19217 = !DILocation(line: 343, column: 6, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19186, file: !3, line: 343, column: 6)
!19219 = !DILocation(line: 343, column: 13, scope: !19218)
!19220 = !DILocation(line: 343, column: 6, scope: !19186)
!19221 = !DILocation(line: 344, column: 10, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 343, column: 22)
!19223 = !DILocation(line: 344, column: 17, scope: !19222)
!19224 = !DILocation(line: 344, column: 20, scope: !19222)
!19225 = !DILocation(line: 344, column: 8, scope: !19222)
!19226 = !DILocation(line: 345, column: 14, scope: !19222)
!19227 = !DILocation(line: 345, column: 20, scope: !19222)
!19228 = !DILocation(line: 345, column: 3, scope: !19222)
!19229 = !DILocation(line: 346, column: 2, scope: !19222)
!19230 = !DILocation(line: 347, column: 22, scope: !19231)
!19231 = distinct !DILexicalBlock(scope: !19218, file: !3, line: 347, column: 11)
!19232 = !DILocation(line: 347, column: 27, scope: !19231)
!19233 = !DILocation(line: 347, column: 31, scope: !19231)
!19234 = !DILocation(line: 347, column: 20, scope: !19231)
!19235 = !DILocation(line: 347, column: 44, scope: !19231)
!19236 = !DILocation(line: 347, column: 18, scope: !19231)
!19237 = !DILocation(line: 347, column: 11, scope: !19218)
!19238 = !DILocation(line: 348, column: 18, scope: !19239)
!19239 = distinct !DILexicalBlock(scope: !19231, file: !3, line: 347, column: 51)
!19240 = !DILocation(line: 348, column: 28, scope: !19239)
!19241 = !DILocation(line: 348, column: 37, scope: !19239)
!19242 = !DILocation(line: 348, column: 47, scope: !19239)
!19243 = !DILocation(line: 348, column: 57, scope: !19239)
!19244 = !DILocation(line: 348, column: 3, scope: !19239)
!19245 = !DILocation(line: 349, column: 2, scope: !19239)
!19246 = !DILocation(line: 351, column: 11, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19231, file: !3, line: 350, column: 7)
!19248 = !DILocation(line: 351, column: 3, scope: !19247)
!19249 = !DILocation(line: 353, column: 1, scope: !19186)
!19250 = distinct !DISubprogram(name: "GetNormal", scope: !3, file: !3, line: 355, type: !17030, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19251 = !DILocalVariable(name: "pContext", arg: 1, scope: !19250, file: !3, line: 355, type: !17022)
!19252 = !DILocation(line: 355, column: 49, scope: !19250)
!19253 = !DILocalVariable(name: "r_no", arg: 2, scope: !19250, file: !3, line: 355, type: !44)
!19254 = !DILocation(line: 355, column: 65, scope: !19250)
!19255 = !DILocalVariable(name: "face_num", arg: 3, scope: !19250, file: !3, line: 355, type: !7772)
!19256 = !DILocation(line: 355, column: 84, scope: !19250)
!19257 = !DILocalVariable(name: "vert_index", arg: 4, scope: !19250, file: !3, line: 355, type: !7772)
!19258 = !DILocation(line: 355, column: 104, scope: !19250)
!19259 = !DILocalVariable(name: "pMesh", scope: !19250, file: !3, line: 358, type: !4149)
!19260 = !DILocation(line: 358, column: 24, scope: !19250)
!19261 = !DILocation(line: 358, column: 57, scope: !19250)
!19262 = !DILocation(line: 358, column: 67, scope: !19250)
!19263 = !DILocation(line: 358, column: 32, scope: !19250)
!19264 = !DILocalVariable(name: "vlr", scope: !19250, file: !3, line: 359, type: !13020)
!19265 = !DILocation(line: 359, column: 11, scope: !19250)
!19266 = !DILocation(line: 359, column: 33, scope: !19250)
!19267 = !DILocation(line: 359, column: 40, scope: !19250)
!19268 = !DILocation(line: 359, column: 45, scope: !19250)
!19269 = !DILocation(line: 359, column: 16, scope: !19250)
!19270 = !DILocation(line: 361, column: 6, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19250, file: !3, line: 361, column: 6)
!19272 = !DILocation(line: 361, column: 11, scope: !19271)
!19273 = !DILocation(line: 361, column: 16, scope: !19271)
!19274 = !DILocation(line: 361, column: 6, scope: !19250)
!19275 = !DILocalVariable(name: "n", scope: !19276, file: !3, line: 362, type: !2417)
!19276 = distinct !DILexicalBlock(scope: !19271, file: !3, line: 361, column: 29)
!19277 = !DILocation(line: 362, column: 16, scope: !19276)
!19278 = !DILocation(line: 362, column: 22, scope: !19276)
!19279 = !DILocation(line: 362, column: 27, scope: !19276)
!19280 = !DILocation(line: 362, column: 31, scope: !19276)
!19281 = !DILocation(line: 362, column: 20, scope: !19276)
!19282 = !DILocation(line: 362, column: 44, scope: !19276)
!19283 = !DILocation(line: 363, column: 14, scope: !19276)
!19284 = !DILocation(line: 363, column: 20, scope: !19276)
!19285 = !DILocation(line: 363, column: 3, scope: !19276)
!19286 = !DILocation(line: 364, column: 2, scope: !19276)
!19287 = !DILocation(line: 366, column: 16, scope: !19288)
!19288 = distinct !DILexicalBlock(scope: !19271, file: !3, line: 365, column: 7)
!19289 = !DILocation(line: 366, column: 22, scope: !19288)
!19290 = !DILocation(line: 366, column: 27, scope: !19288)
!19291 = !DILocation(line: 366, column: 3, scope: !19288)
!19292 = !DILocation(line: 368, column: 1, scope: !19250)
!19293 = distinct !DISubprogram(name: "SetTSpace", scope: !3, file: !3, line: 369, type: !17036, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19294 = !DILocalVariable(name: "pContext", arg: 1, scope: !19293, file: !3, line: 369, type: !17022)
!19295 = !DILocation(line: 369, column: 49, scope: !19293)
!19296 = !DILocalVariable(name: "fvTangent", arg: 2, scope: !19293, file: !3, line: 369, type: !2417)
!19297 = !DILocation(line: 369, column: 71, scope: !19293)
!19298 = !DILocalVariable(name: "fSign", arg: 3, scope: !19293, file: !3, line: 369, type: !2269)
!19299 = !DILocation(line: 369, column: 97, scope: !19293)
!19300 = !DILocalVariable(name: "face_num", arg: 4, scope: !19293, file: !3, line: 369, type: !7772)
!19301 = !DILocation(line: 369, column: 114, scope: !19293)
!19302 = !DILocalVariable(name: "iVert", arg: 5, scope: !19293, file: !3, line: 369, type: !7772)
!19303 = !DILocation(line: 369, column: 134, scope: !19293)
!19304 = !DILocalVariable(name: "pMesh", scope: !19293, file: !3, line: 372, type: !4149)
!19305 = !DILocation(line: 372, column: 24, scope: !19293)
!19306 = !DILocation(line: 372, column: 57, scope: !19293)
!19307 = !DILocation(line: 372, column: 67, scope: !19293)
!19308 = !DILocation(line: 372, column: 32, scope: !19293)
!19309 = !DILocalVariable(name: "vlr", scope: !19293, file: !3, line: 373, type: !13020)
!19310 = !DILocation(line: 373, column: 11, scope: !19293)
!19311 = !DILocation(line: 373, column: 34, scope: !19293)
!19312 = !DILocation(line: 373, column: 41, scope: !19293)
!19313 = !DILocation(line: 373, column: 46, scope: !19293)
!19314 = !DILocation(line: 373, column: 17, scope: !19293)
!19315 = !DILocalVariable(name: "ftang", scope: !19293, file: !3, line: 374, type: !44)
!19316 = !DILocation(line: 374, column: 9, scope: !19293)
!19317 = !DILocation(line: 374, column: 45, scope: !19293)
!19318 = !DILocation(line: 374, column: 52, scope: !19293)
!19319 = !DILocation(line: 374, column: 57, scope: !19293)
!19320 = !DILocation(line: 374, column: 17, scope: !19293)
!19321 = !DILocation(line: 375, column: 6, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19293, file: !3, line: 375, column: 6)
!19323 = !DILocation(line: 375, column: 11, scope: !19322)
!19324 = !DILocation(line: 375, column: 6, scope: !19293)
!19325 = !DILocation(line: 376, column: 15, scope: !19326)
!19326 = distinct !DILexicalBlock(scope: !19322, file: !3, line: 375, column: 19)
!19327 = !DILocation(line: 376, column: 21, scope: !19326)
!19328 = !DILocation(line: 376, column: 26, scope: !19326)
!19329 = !DILocation(line: 376, column: 28, scope: !19326)
!19330 = !DILocation(line: 376, column: 33, scope: !19326)
!19331 = !DILocation(line: 376, column: 3, scope: !19326)
!19332 = !DILocation(line: 377, column: 20, scope: !19326)
!19333 = !DILocation(line: 377, column: 3, scope: !19326)
!19334 = !DILocation(line: 377, column: 9, scope: !19326)
!19335 = !DILocation(line: 377, column: 14, scope: !19326)
!19336 = !DILocation(line: 377, column: 16, scope: !19326)
!19337 = !DILocation(line: 377, column: 19, scope: !19326)
!19338 = !DILocation(line: 378, column: 2, scope: !19326)
!19339 = !DILocation(line: 379, column: 1, scope: !19293)
!19340 = distinct !DISubprogram(name: "zero_v2", scope: !4629, file: !4629, line: 37, type: !8169, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19341 = !DILocalVariable(name: "r", arg: 1, scope: !19340, file: !4629, line: 37, type: !44)
!19342 = !DILocation(line: 37, column: 28, scope: !19340)
!19343 = !DILocation(line: 39, column: 2, scope: !19340)
!19344 = !DILocation(line: 39, column: 7, scope: !19340)
!19345 = !DILocation(line: 40, column: 2, scope: !19340)
!19346 = !DILocation(line: 40, column: 7, scope: !19340)
!19347 = !DILocation(line: 41, column: 1, scope: !19340)
!19348 = distinct !DISubprogram(name: "negate_v3_v3", scope: !4629, file: !4629, line: 583, type: !4630, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19349 = !DILocalVariable(name: "r", arg: 1, scope: !19348, file: !4629, line: 583, type: !44)
!19350 = !DILocation(line: 583, column: 33, scope: !19348)
!19351 = !DILocalVariable(name: "a", arg: 2, scope: !19348, file: !4629, line: 583, type: !2417)
!19352 = !DILocation(line: 583, column: 51, scope: !19348)
!19353 = !DILocation(line: 585, column: 10, scope: !19348)
!19354 = !DILocation(line: 585, column: 9, scope: !19348)
!19355 = !DILocation(line: 585, column: 2, scope: !19348)
!19356 = !DILocation(line: 585, column: 7, scope: !19348)
!19357 = !DILocation(line: 586, column: 10, scope: !19348)
!19358 = !DILocation(line: 586, column: 9, scope: !19348)
!19359 = !DILocation(line: 586, column: 2, scope: !19348)
!19360 = !DILocation(line: 586, column: 7, scope: !19348)
!19361 = !DILocation(line: 587, column: 10, scope: !19348)
!19362 = !DILocation(line: 587, column: 9, scope: !19348)
!19363 = !DILocation(line: 587, column: 2, scope: !19348)
!19364 = !DILocation(line: 587, column: 7, scope: !19348)
!19365 = !DILocation(line: 588, column: 1, scope: !19348)
!19366 = distinct !DISubprogram(name: "init_render_dm", scope: !3, file: !3, line: 2428, type: !19367, scopeLine: 2430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19367 = !DISubroutineType(types: !19368)
!19368 = !{null, !2263, !6, !3063, !21, !44, !2482}
!19369 = !DILocalVariable(name: "dm", arg: 1, scope: !19366, file: !3, line: 2428, type: !2263)
!19370 = !DILocation(line: 2428, column: 41, scope: !19366)
!19371 = !DILocalVariable(name: "re", arg: 2, scope: !19366, file: !3, line: 2428, type: !6)
!19372 = !DILocation(line: 2428, column: 53, scope: !19366)
!19373 = !DILocalVariable(name: "obr", arg: 3, scope: !19366, file: !3, line: 2428, type: !3063)
!19374 = !DILocation(line: 2428, column: 68, scope: !19366)
!19375 = !DILocalVariable(name: "timeoffset", arg: 4, scope: !19366, file: !3, line: 2429, type: !21)
!19376 = !DILocation(line: 2429, column: 6, scope: !19366)
!19377 = !DILocalVariable(name: "orco", arg: 5, scope: !19366, file: !3, line: 2429, type: !44)
!19378 = !DILocation(line: 2429, column: 25, scope: !19366)
!19379 = !DILocalVariable(name: "mat", arg: 6, scope: !19366, file: !3, line: 2429, type: !2482)
!19380 = !DILocation(line: 2429, column: 37, scope: !19366)
!19381 = !DILocalVariable(name: "ob", scope: !19366, file: !3, line: 2431, type: !3236)
!19382 = !DILocation(line: 2431, column: 10, scope: !19366)
!19383 = !DILocation(line: 2431, column: 14, scope: !19366)
!19384 = !DILocation(line: 2431, column: 19, scope: !19366)
!19385 = !DILocalVariable(name: "a", scope: !19366, file: !3, line: 2432, type: !21)
!19386 = !DILocation(line: 2432, column: 6, scope: !19366)
!19387 = !DILocalVariable(name: "end", scope: !19366, file: !3, line: 2432, type: !21)
!19388 = !DILocation(line: 2432, column: 9, scope: !19366)
!19389 = !DILocalVariable(name: "totvert", scope: !19366, file: !3, line: 2432, type: !21)
!19390 = !DILocation(line: 2432, column: 14, scope: !19366)
!19391 = !DILocalVariable(name: "vertofs", scope: !19366, file: !3, line: 2432, type: !21)
!19392 = !DILocation(line: 2432, column: 23, scope: !19366)
!19393 = !DILocalVariable(name: "mat_iter", scope: !19366, file: !3, line: 2433, type: !23)
!19394 = !DILocation(line: 2433, column: 8, scope: !19366)
!19395 = !DILocalVariable(name: "ver", scope: !19366, file: !3, line: 2434, type: !4179)
!19396 = !DILocation(line: 2434, column: 11, scope: !19366)
!19397 = !DILocalVariable(name: "vlr", scope: !19366, file: !3, line: 2435, type: !13020)
!19398 = !DILocation(line: 2435, column: 11, scope: !19366)
!19399 = !DILocalVariable(name: "mvert", scope: !19366, file: !3, line: 2436, type: !2145)
!19400 = !DILocation(line: 2436, column: 9, scope: !19366)
!19401 = !DILocalVariable(name: "mface", scope: !19366, file: !3, line: 2437, type: !14191)
!19402 = !DILocation(line: 2437, column: 9, scope: !19366)
!19403 = !DILocalVariable(name: "ma", scope: !19366, file: !3, line: 2438, type: !4157)
!19404 = !DILocation(line: 2438, column: 12, scope: !19366)
!19405 = !DILocation(line: 2446, column: 9, scope: !19366)
!19406 = !DILocation(line: 2446, column: 13, scope: !19366)
!19407 = !DILocation(line: 2446, column: 26, scope: !19366)
!19408 = !DILocation(line: 2446, column: 7, scope: !19366)
!19409 = !DILocation(line: 2447, column: 11, scope: !19366)
!19410 = !DILocation(line: 2447, column: 15, scope: !19366)
!19411 = !DILocation(line: 2447, column: 27, scope: !19366)
!19412 = !DILocation(line: 2447, column: 9, scope: !19366)
!19413 = !DILocation(line: 2449, column: 8, scope: !19414)
!19414 = distinct !DILexicalBlock(scope: !19366, file: !3, line: 2449, column: 2)
!19415 = !DILocation(line: 2449, column: 7, scope: !19414)
!19416 = !DILocation(line: 2449, column: 12, scope: !19417)
!19417 = distinct !DILexicalBlock(scope: !19414, file: !3, line: 2449, column: 2)
!19418 = !DILocation(line: 2449, column: 14, scope: !19417)
!19419 = !DILocation(line: 2449, column: 13, scope: !19417)
!19420 = !DILocation(line: 2449, column: 2, scope: !19414)
!19421 = !DILocation(line: 2450, column: 25, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19417, file: !3, line: 2449, column: 37)
!19423 = !DILocation(line: 2450, column: 30, scope: !19422)
!19424 = !DILocation(line: 2450, column: 35, scope: !19422)
!19425 = !DILocation(line: 2450, column: 42, scope: !19422)
!19426 = !DILocation(line: 2450, column: 8, scope: !19422)
!19427 = !DILocation(line: 2450, column: 6, scope: !19422)
!19428 = !DILocation(line: 2451, column: 14, scope: !19422)
!19429 = !DILocation(line: 2451, column: 19, scope: !19422)
!19430 = !DILocation(line: 2451, column: 23, scope: !19422)
!19431 = !DILocation(line: 2451, column: 30, scope: !19422)
!19432 = !DILocation(line: 2451, column: 3, scope: !19422)
!19433 = !DILocation(line: 2452, column: 13, scope: !19422)
!19434 = !DILocation(line: 2452, column: 18, scope: !19422)
!19435 = !DILocation(line: 2452, column: 23, scope: !19422)
!19436 = !DILocation(line: 2452, column: 3, scope: !19422)
!19437 = !DILocation(line: 2454, column: 7, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19422, file: !3, line: 2454, column: 7)
!19439 = !DILocation(line: 2454, column: 7, scope: !19422)
!19440 = !DILocation(line: 2455, column: 15, scope: !19441)
!19441 = distinct !DILexicalBlock(scope: !19438, file: !3, line: 2454, column: 13)
!19442 = !DILocation(line: 2455, column: 4, scope: !19441)
!19443 = !DILocation(line: 2455, column: 9, scope: !19441)
!19444 = !DILocation(line: 2455, column: 13, scope: !19441)
!19445 = !DILocation(line: 2456, column: 8, scope: !19441)
!19446 = !DILocation(line: 2457, column: 3, scope: !19441)
!19447 = !DILocation(line: 2458, column: 2, scope: !19422)
!19448 = !DILocation(line: 2449, column: 24, scope: !19417)
!19449 = !DILocation(line: 2449, column: 33, scope: !19417)
!19450 = !DILocation(line: 2449, column: 2, scope: !19417)
!19451 = distinct !{!19451, !19420, !19452}
!19452 = !DILocation(line: 2458, column: 2, scope: !19414)
!19453 = !DILocation(line: 2460, column: 7, scope: !19454)
!19454 = distinct !DILexicalBlock(scope: !19366, file: !3, line: 2460, column: 6)
!19455 = !DILocation(line: 2460, column: 6, scope: !19366)
!19456 = !DILocation(line: 2462, column: 27, scope: !19457)
!19457 = distinct !DILexicalBlock(scope: !19454, file: !3, line: 2460, column: 19)
!19458 = !DILocation(line: 2462, column: 33, scope: !19457)
!19459 = !DILocation(line: 2462, column: 37, scope: !19457)
!19460 = !DILocation(line: 2462, column: 3, scope: !19457)
!19461 = !DILocation(line: 2467, column: 12, scope: !19457)
!19462 = !DILocation(line: 2467, column: 17, scope: !19457)
!19463 = !DILocation(line: 2467, column: 27, scope: !19457)
!19464 = !DILocation(line: 2467, column: 25, scope: !19457)
!19465 = !DILocation(line: 2467, column: 10, scope: !19457)
!19466 = !DILocation(line: 2468, column: 16, scope: !19467)
!19467 = distinct !DILexicalBlock(scope: !19457, file: !3, line: 2468, column: 3)
!19468 = !DILocation(line: 2468, column: 8, scope: !19467)
!19469 = !DILocation(line: 2468, column: 22, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19467, file: !3, line: 2468, column: 3)
!19471 = !DILocation(line: 2468, column: 33, scope: !19470)
!19472 = !DILocation(line: 2468, column: 37, scope: !19470)
!19473 = !DILocation(line: 2468, column: 31, scope: !19470)
!19474 = !DILocation(line: 2468, column: 44, scope: !19470)
!19475 = !DILocation(line: 2468, column: 48, scope: !19470)
!19476 = !DILocation(line: 2468, column: 56, scope: !19470)
!19477 = !DILocation(line: 2468, column: 60, scope: !19470)
!19478 = !DILocation(line: 2468, column: 63, scope: !19470)
!19479 = !DILocation(line: 2468, column: 67, scope: !19470)
!19480 = !DILocation(line: 2468, column: 73, scope: !19470)
!19481 = !DILocation(line: 0, scope: !19470)
!19482 = !DILocation(line: 2468, column: 3, scope: !19467)
!19483 = !DILocation(line: 2470, column: 29, scope: !19484)
!19484 = distinct !DILexicalBlock(scope: !19470, file: !3, line: 2468, column: 92)
!19485 = !DILocation(line: 2470, column: 33, scope: !19484)
!19486 = !DILocation(line: 2470, column: 37, scope: !19484)
!19487 = !DILocation(line: 2470, column: 45, scope: !19484)
!19488 = !DILocation(line: 2470, column: 8, scope: !19484)
!19489 = !DILocation(line: 2470, column: 6, scope: !19484)
!19490 = !DILocation(line: 2471, column: 9, scope: !19484)
!19491 = !DILocation(line: 2471, column: 13, scope: !19484)
!19492 = !DILocation(line: 2471, column: 29, scope: !19484)
!19493 = !DILocation(line: 2471, column: 7, scope: !19484)
!19494 = !DILocation(line: 2472, column: 11, scope: !19484)
!19495 = !DILocation(line: 2472, column: 15, scope: !19484)
!19496 = !DILocation(line: 2472, column: 32, scope: !19484)
!19497 = !DILocation(line: 2472, column: 9, scope: !19484)
!19498 = !DILocation(line: 2483, column: 10, scope: !19499)
!19499 = distinct !DILexicalBlock(scope: !19484, file: !3, line: 2483, column: 4)
!19500 = !DILocation(line: 2483, column: 9, scope: !19499)
!19501 = !DILocation(line: 2483, column: 14, scope: !19502)
!19502 = distinct !DILexicalBlock(scope: !19499, file: !3, line: 2483, column: 4)
!19503 = !DILocation(line: 2483, column: 16, scope: !19502)
!19504 = !DILocation(line: 2483, column: 15, scope: !19502)
!19505 = !DILocation(line: 2483, column: 4, scope: !19499)
!19506 = !DILocalVariable(name: "v1", scope: !19507, file: !3, line: 2484, type: !21)
!19507 = distinct !DILexicalBlock(scope: !19502, file: !3, line: 2483, column: 35)
!19508 = !DILocation(line: 2484, column: 9, scope: !19507)
!19509 = !DILocalVariable(name: "v2", scope: !19507, file: !3, line: 2484, type: !21)
!19510 = !DILocation(line: 2484, column: 13, scope: !19507)
!19511 = !DILocalVariable(name: "v3", scope: !19507, file: !3, line: 2484, type: !21)
!19512 = !DILocation(line: 2484, column: 17, scope: !19507)
!19513 = !DILocalVariable(name: "v4", scope: !19507, file: !3, line: 2484, type: !21)
!19514 = !DILocation(line: 2484, column: 21, scope: !19507)
!19515 = !DILocalVariable(name: "flag", scope: !19507, file: !3, line: 2484, type: !21)
!19516 = !DILocation(line: 2484, column: 25, scope: !19507)
!19517 = !DILocation(line: 2486, column: 9, scope: !19518)
!19518 = distinct !DILexicalBlock(scope: !19507, file: !3, line: 2486, column: 9)
!19519 = !DILocation(line: 2486, column: 16, scope: !19518)
!19520 = !DILocation(line: 2486, column: 26, scope: !19518)
!19521 = !DILocation(line: 2486, column: 23, scope: !19518)
!19522 = !DILocation(line: 2486, column: 9, scope: !19507)
!19523 = !DILocalVariable(name: "len", scope: !19524, file: !3, line: 2487, type: !45)
!19524 = distinct !DILexicalBlock(scope: !19518, file: !3, line: 2486, column: 36)
!19525 = !DILocation(line: 2487, column: 12, scope: !19524)
!19526 = !DILocation(line: 2489, column: 10, scope: !19524)
!19527 = !DILocation(line: 2489, column: 17, scope: !19524)
!19528 = !DILocation(line: 2489, column: 8, scope: !19524)
!19529 = !DILocation(line: 2490, column: 10, scope: !19524)
!19530 = !DILocation(line: 2490, column: 17, scope: !19524)
!19531 = !DILocation(line: 2490, column: 8, scope: !19524)
!19532 = !DILocation(line: 2491, column: 10, scope: !19524)
!19533 = !DILocation(line: 2491, column: 17, scope: !19524)
!19534 = !DILocation(line: 2491, column: 8, scope: !19524)
!19535 = !DILocation(line: 2492, column: 10, scope: !19524)
!19536 = !DILocation(line: 2492, column: 17, scope: !19524)
!19537 = !DILocation(line: 2492, column: 8, scope: !19524)
!19538 = !DILocation(line: 2493, column: 12, scope: !19524)
!19539 = !DILocation(line: 2493, column: 19, scope: !19524)
!19540 = !DILocation(line: 2493, column: 24, scope: !19524)
!19541 = !DILocation(line: 2493, column: 10, scope: !19524)
!19542 = !DILocation(line: 2495, column: 28, scope: !19524)
!19543 = !DILocation(line: 2495, column: 33, scope: !19524)
!19544 = !DILocation(line: 2495, column: 38, scope: !19524)
!19545 = !DILocation(line: 2495, column: 45, scope: !19524)
!19546 = !DILocation(line: 2495, column: 11, scope: !19524)
!19547 = !DILocation(line: 2495, column: 9, scope: !19524)
!19548 = !DILocation(line: 2496, column: 32, scope: !19524)
!19549 = !DILocation(line: 2496, column: 37, scope: !19524)
!19550 = !DILocation(line: 2496, column: 45, scope: !19524)
!19551 = !DILocation(line: 2496, column: 44, scope: !19524)
!19552 = !DILocation(line: 2496, column: 15, scope: !19524)
!19553 = !DILocation(line: 2496, column: 6, scope: !19524)
!19554 = !DILocation(line: 2496, column: 11, scope: !19524)
!19555 = !DILocation(line: 2496, column: 13, scope: !19524)
!19556 = !DILocation(line: 2497, column: 32, scope: !19524)
!19557 = !DILocation(line: 2497, column: 37, scope: !19524)
!19558 = !DILocation(line: 2497, column: 45, scope: !19524)
!19559 = !DILocation(line: 2497, column: 44, scope: !19524)
!19560 = !DILocation(line: 2497, column: 15, scope: !19524)
!19561 = !DILocation(line: 2497, column: 6, scope: !19524)
!19562 = !DILocation(line: 2497, column: 11, scope: !19524)
!19563 = !DILocation(line: 2497, column: 13, scope: !19524)
!19564 = !DILocation(line: 2498, column: 32, scope: !19524)
!19565 = !DILocation(line: 2498, column: 37, scope: !19524)
!19566 = !DILocation(line: 2498, column: 45, scope: !19524)
!19567 = !DILocation(line: 2498, column: 44, scope: !19524)
!19568 = !DILocation(line: 2498, column: 15, scope: !19524)
!19569 = !DILocation(line: 2498, column: 6, scope: !19524)
!19570 = !DILocation(line: 2498, column: 11, scope: !19524)
!19571 = !DILocation(line: 2498, column: 13, scope: !19524)
!19572 = !DILocation(line: 2499, column: 10, scope: !19573)
!19573 = distinct !DILexicalBlock(scope: !19524, file: !3, line: 2499, column: 10)
!19574 = !DILocation(line: 2499, column: 10, scope: !19524)
!19575 = !DILocation(line: 2499, column: 40, scope: !19573)
!19576 = !DILocation(line: 2499, column: 45, scope: !19573)
!19577 = !DILocation(line: 2499, column: 53, scope: !19573)
!19578 = !DILocation(line: 2499, column: 52, scope: !19573)
!19579 = !DILocation(line: 2499, column: 23, scope: !19573)
!19580 = !DILocation(line: 2499, column: 14, scope: !19573)
!19581 = !DILocation(line: 2499, column: 19, scope: !19573)
!19582 = !DILocation(line: 2499, column: 21, scope: !19573)
!19583 = !DILocation(line: 2500, column: 11, scope: !19573)
!19584 = !DILocation(line: 2500, column: 16, scope: !19573)
!19585 = !DILocation(line: 2500, column: 19, scope: !19573)
!19586 = !DILocation(line: 2503, column: 10, scope: !19587)
!19587 = distinct !DILexicalBlock(scope: !19524, file: !3, line: 2503, column: 10)
!19588 = !DILocation(line: 2503, column: 15, scope: !19587)
!19589 = !DILocation(line: 2503, column: 10, scope: !19524)
!19590 = !DILocation(line: 2504, column: 27, scope: !19587)
!19591 = !DILocation(line: 2504, column: 32, scope: !19587)
!19592 = !DILocation(line: 2504, column: 35, scope: !19587)
!19593 = !DILocation(line: 2504, column: 40, scope: !19587)
!19594 = !DILocation(line: 2504, column: 44, scope: !19587)
!19595 = !DILocation(line: 2504, column: 48, scope: !19587)
!19596 = !DILocation(line: 2504, column: 53, scope: !19587)
!19597 = !DILocation(line: 2504, column: 57, scope: !19587)
!19598 = !DILocation(line: 2504, column: 61, scope: !19587)
!19599 = !DILocation(line: 2504, column: 66, scope: !19587)
!19600 = !DILocation(line: 2504, column: 70, scope: !19587)
!19601 = !DILocation(line: 2504, column: 74, scope: !19587)
!19602 = !DILocation(line: 2504, column: 79, scope: !19587)
!19603 = !DILocation(line: 2504, column: 83, scope: !19587)
!19604 = !DILocation(line: 2504, column: 12, scope: !19587)
!19605 = !DILocation(line: 2504, column: 10, scope: !19587)
!19606 = !DILocation(line: 2504, column: 7, scope: !19587)
!19607 = !DILocation(line: 2506, column: 26, scope: !19587)
!19608 = !DILocation(line: 2506, column: 31, scope: !19587)
!19609 = !DILocation(line: 2506, column: 34, scope: !19587)
!19610 = !DILocation(line: 2506, column: 39, scope: !19587)
!19611 = !DILocation(line: 2506, column: 43, scope: !19587)
!19612 = !DILocation(line: 2506, column: 47, scope: !19587)
!19613 = !DILocation(line: 2506, column: 52, scope: !19587)
!19614 = !DILocation(line: 2506, column: 56, scope: !19587)
!19615 = !DILocation(line: 2506, column: 60, scope: !19587)
!19616 = !DILocation(line: 2506, column: 65, scope: !19587)
!19617 = !DILocation(line: 2506, column: 69, scope: !19587)
!19618 = !DILocation(line: 2506, column: 12, scope: !19587)
!19619 = !DILocation(line: 2506, column: 10, scope: !19587)
!19620 = !DILocation(line: 2508, column: 16, scope: !19524)
!19621 = !DILocation(line: 2508, column: 6, scope: !19524)
!19622 = !DILocation(line: 2508, column: 11, scope: !19524)
!19623 = !DILocation(line: 2508, column: 14, scope: !19524)
!19624 = !DILocation(line: 2509, column: 17, scope: !19524)
!19625 = !DILocation(line: 2509, column: 6, scope: !19524)
!19626 = !DILocation(line: 2509, column: 11, scope: !19524)
!19627 = !DILocation(line: 2509, column: 15, scope: !19524)
!19628 = !DILocation(line: 2510, column: 6, scope: !19524)
!19629 = !DILocation(line: 2510, column: 11, scope: !19524)
!19630 = !DILocation(line: 2510, column: 13, scope: !19524)
!19631 = !DILocation(line: 2521, column: 10, scope: !19632)
!19632 = distinct !DILexicalBlock(scope: !19524, file: !3, line: 2521, column: 10)
!19633 = !DILocation(line: 2521, column: 13, scope: !19632)
!19634 = !DILocation(line: 2521, column: 10, scope: !19524)
!19635 = !DILocation(line: 2521, column: 18, scope: !19632)
!19636 = !DILocation(line: 2521, column: 23, scope: !19632)
!19637 = !DILocation(line: 2521, column: 30, scope: !19632)
!19638 = !DILocalVariable(name: "layer", scope: !19639, file: !3, line: 2523, type: !2083)
!19639 = distinct !DILexicalBlock(scope: !19632, file: !3, line: 2522, column: 11)
!19640 = !DILocation(line: 2523, column: 24, scope: !19639)
!19641 = !DILocalVariable(name: "mtface", scope: !19639, file: !3, line: 2524, type: !4145)
!19642 = !DILocation(line: 2524, column: 15, scope: !19639)
!19643 = !DILocalVariable(name: "mtf", scope: !19639, file: !3, line: 2524, type: !4145)
!19644 = !DILocation(line: 2524, column: 24, scope: !19639)
!19645 = !DILocalVariable(name: "mcol", scope: !19639, file: !3, line: 2525, type: !4147)
!19646 = !DILocation(line: 2525, column: 13, scope: !19639)
!19647 = !DILocalVariable(name: "mc", scope: !19639, file: !3, line: 2525, type: !4147)
!19648 = !DILocation(line: 2525, column: 20, scope: !19639)
!19649 = !DILocalVariable(name: "index", scope: !19639, file: !3, line: 2526, type: !21)
!19650 = !DILocation(line: 2526, column: 11, scope: !19639)
!19651 = !DILocalVariable(name: "mtfn", scope: !19639, file: !3, line: 2526, type: !21)
!19652 = !DILocation(line: 2526, column: 18, scope: !19639)
!19653 = !DILocalVariable(name: "mcn", scope: !19639, file: !3, line: 2526, type: !21)
!19654 = !DILocation(line: 2526, column: 27, scope: !19639)
!19655 = !DILocalVariable(name: "name", scope: !19639, file: !3, line: 2527, type: !444)
!19656 = !DILocation(line: 2527, column: 13, scope: !19639)
!19657 = !DILocation(line: 2529, column: 17, scope: !19658)
!19658 = distinct !DILexicalBlock(scope: !19639, file: !3, line: 2529, column: 7)
!19659 = !DILocation(line: 2529, column: 12, scope: !19658)
!19660 = !DILocation(line: 2529, column: 21, scope: !19661)
!19661 = distinct !DILexicalBlock(scope: !19658, file: !3, line: 2529, column: 7)
!19662 = !DILocation(line: 2529, column: 27, scope: !19661)
!19663 = !DILocation(line: 2529, column: 31, scope: !19661)
!19664 = !DILocation(line: 2529, column: 40, scope: !19661)
!19665 = !DILocation(line: 2529, column: 26, scope: !19661)
!19666 = !DILocation(line: 2529, column: 7, scope: !19658)
!19667 = !DILocation(line: 2530, column: 16, scope: !19668)
!19668 = distinct !DILexicalBlock(scope: !19661, file: !3, line: 2529, column: 59)
!19669 = !DILocation(line: 2530, column: 20, scope: !19668)
!19670 = !DILocation(line: 2530, column: 29, scope: !19668)
!19671 = !DILocation(line: 2530, column: 36, scope: !19668)
!19672 = !DILocation(line: 2530, column: 13, scope: !19668)
!19673 = !DILocation(line: 2531, column: 14, scope: !19668)
!19674 = !DILocation(line: 2531, column: 21, scope: !19668)
!19675 = !DILocation(line: 2531, column: 12, scope: !19668)
!19676 = !DILocation(line: 2533, column: 12, scope: !19677)
!19677 = distinct !DILexicalBlock(scope: !19668, file: !3, line: 2533, column: 12)
!19678 = !DILocation(line: 2533, column: 19, scope: !19677)
!19679 = !DILocation(line: 2533, column: 24, scope: !19677)
!19680 = !DILocation(line: 2533, column: 37, scope: !19677)
!19681 = !DILocation(line: 2533, column: 40, scope: !19677)
!19682 = !DILocation(line: 2533, column: 45, scope: !19677)
!19683 = !DILocation(line: 2533, column: 12, scope: !19668)
!19684 = !DILocation(line: 2534, column: 35, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 2533, column: 59)
!19686 = !DILocation(line: 2534, column: 40, scope: !19685)
!19687 = !DILocation(line: 2534, column: 49, scope: !19685)
!19688 = !DILocation(line: 2534, column: 14, scope: !19685)
!19689 = !DILocation(line: 2534, column: 12, scope: !19685)
!19690 = !DILocation(line: 2535, column: 26, scope: !19685)
!19691 = !DILocation(line: 2535, column: 33, scope: !19685)
!19692 = !DILocation(line: 2535, column: 17, scope: !19685)
!19693 = !DILocation(line: 2535, column: 15, scope: !19685)
!19694 = !DILocation(line: 2536, column: 10, scope: !19685)
!19695 = !DILocation(line: 2536, column: 15, scope: !19685)
!19696 = !DILocation(line: 2536, column: 22, scope: !19685)
!19697 = !DILocation(line: 2537, column: 8, scope: !19685)
!19698 = !DILocation(line: 2538, column: 17, scope: !19699)
!19699 = distinct !DILexicalBlock(scope: !19677, file: !3, line: 2538, column: 17)
!19700 = !DILocation(line: 2538, column: 24, scope: !19699)
!19701 = !DILocation(line: 2538, column: 29, scope: !19699)
!19702 = !DILocation(line: 2538, column: 40, scope: !19699)
!19703 = !DILocation(line: 2538, column: 43, scope: !19699)
!19704 = !DILocation(line: 2538, column: 47, scope: !19699)
!19705 = !DILocation(line: 2538, column: 17, scope: !19677)
!19706 = !DILocation(line: 2539, column: 33, scope: !19707)
!19707 = distinct !DILexicalBlock(scope: !19699, file: !3, line: 2538, column: 59)
!19708 = !DILocation(line: 2539, column: 38, scope: !19707)
!19709 = !DILocation(line: 2539, column: 46, scope: !19707)
!19710 = !DILocation(line: 2539, column: 13, scope: !19707)
!19711 = !DILocation(line: 2539, column: 11, scope: !19707)
!19712 = !DILocation(line: 2540, column: 22, scope: !19707)
!19713 = !DILocation(line: 2540, column: 29, scope: !19707)
!19714 = !DILocation(line: 2540, column: 15, scope: !19707)
!19715 = !DILocation(line: 2540, column: 13, scope: !19707)
!19716 = !DILocation(line: 2541, column: 16, scope: !19707)
!19717 = !DILocation(line: 2541, column: 9, scope: !19707)
!19718 = !DILocation(line: 2541, column: 21, scope: !19707)
!19719 = !DILocation(line: 2541, column: 26, scope: !19707)
!19720 = !DILocation(line: 2541, column: 27, scope: !19707)
!19721 = !DILocation(line: 2542, column: 8, scope: !19707)
!19722 = !DILocation(line: 2543, column: 7, scope: !19668)
!19723 = !DILocation(line: 2529, column: 55, scope: !19661)
!19724 = !DILocation(line: 2529, column: 7, scope: !19661)
!19725 = distinct !{!19725, !19666, !19726}
!19726 = !DILocation(line: 2543, column: 7, scope: !19658)
!19727 = !DILocation(line: 2545, column: 5, scope: !19524)
!19728 = !DILocation(line: 2546, column: 4, scope: !19507)
!19729 = !DILocation(line: 2483, column: 22, scope: !19502)
!19730 = !DILocation(line: 2483, column: 31, scope: !19502)
!19731 = !DILocation(line: 2483, column: 4, scope: !19502)
!19732 = distinct !{!19732, !19505, !19733}
!19733 = !DILocation(line: 2546, column: 4, scope: !19499)
!19734 = !DILocation(line: 2547, column: 3, scope: !19484)
!19735 = !DILocation(line: 2468, column: 88, scope: !19470)
!19736 = !DILocation(line: 2468, column: 3, scope: !19470)
!19737 = distinct !{!19737, !19482, !19738}
!19738 = !DILocation(line: 2547, column: 3, scope: !19467)
!19739 = !DILocation(line: 2550, column: 22, scope: !19457)
!19740 = !DILocation(line: 2550, column: 26, scope: !19457)
!19741 = !DILocation(line: 2550, column: 3, scope: !19457)
!19742 = !DILocation(line: 2551, column: 2, scope: !19457)
!19743 = !DILocation(line: 2553, column: 1, scope: !19366)
!19744 = distinct !DISubprogram(name: "dl_surf_to_renderdata", scope: !3, file: !3, line: 2270, type: !19745, scopeLine: 2271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!19745 = !DISubroutineType(types: !19746)
!19746 = !{!21, !3063, !13024, !8204, !44, !2482}
!19747 = !DILocalVariable(name: "obr", arg: 1, scope: !19744, file: !3, line: 2270, type: !3063)
!19748 = !DILocation(line: 2270, column: 45, scope: !19744)
!19749 = !DILocalVariable(name: "dl", arg: 2, scope: !19744, file: !3, line: 2270, type: !13024)
!19750 = !DILocation(line: 2270, column: 60, scope: !19744)
!19751 = !DILocalVariable(name: "matar", arg: 3, scope: !19744, file: !3, line: 2270, type: !8204)
!19752 = !DILocation(line: 2270, column: 75, scope: !19744)
!19753 = !DILocalVariable(name: "orco", arg: 4, scope: !19744, file: !3, line: 2270, type: !44)
!19754 = !DILocation(line: 2270, column: 89, scope: !19744)
!19755 = !DILocalVariable(name: "mat", arg: 5, scope: !19744, file: !3, line: 2270, type: !2482)
!19756 = !DILocation(line: 2270, column: 101, scope: !19744)
!19757 = !DILocalVariable(name: "v1", scope: !19744, file: !3, line: 2272, type: !4179)
!19758 = !DILocation(line: 2272, column: 11, scope: !19744)
!19759 = !DILocalVariable(name: "v2", scope: !19744, file: !3, line: 2272, type: !4179)
!19760 = !DILocation(line: 2272, column: 16, scope: !19744)
!19761 = !DILocalVariable(name: "v3", scope: !19744, file: !3, line: 2272, type: !4179)
!19762 = !DILocation(line: 2272, column: 21, scope: !19744)
!19763 = !DILocalVariable(name: "v4", scope: !19744, file: !3, line: 2272, type: !4179)
!19764 = !DILocation(line: 2272, column: 26, scope: !19744)
!19765 = !DILocalVariable(name: "ver", scope: !19744, file: !3, line: 2272, type: !4179)
!19766 = !DILocation(line: 2272, column: 31, scope: !19744)
!19767 = !DILocalVariable(name: "vlr", scope: !19744, file: !3, line: 2273, type: !13020)
!19768 = !DILocation(line: 2273, column: 11, scope: !19744)
!19769 = !DILocalVariable(name: "vlr1", scope: !19744, file: !3, line: 2273, type: !13020)
!19770 = !DILocation(line: 2273, column: 17, scope: !19744)
!19771 = !DILocalVariable(name: "vlr2", scope: !19744, file: !3, line: 2273, type: !13020)
!19772 = !DILocation(line: 2273, column: 24, scope: !19744)
!19773 = !DILocalVariable(name: "vlr3", scope: !19744, file: !3, line: 2273, type: !13020)
!19774 = !DILocation(line: 2273, column: 31, scope: !19744)
!19775 = !DILocalVariable(name: "data", scope: !19744, file: !3, line: 2274, type: !44)
!19776 = !DILocation(line: 2274, column: 9, scope: !19744)
!19777 = !DILocalVariable(name: "n1", scope: !19744, file: !3, line: 2274, type: !188)
!19778 = !DILocation(line: 2274, column: 15, scope: !19744)
!19779 = !DILocalVariable(name: "u", scope: !19744, file: !3, line: 2275, type: !21)
!19780 = !DILocation(line: 2275, column: 6, scope: !19744)
!19781 = !DILocalVariable(name: "v", scope: !19744, file: !3, line: 2275, type: !21)
!19782 = !DILocation(line: 2275, column: 9, scope: !19744)
!19783 = !DILocalVariable(name: "orcoret", scope: !19744, file: !3, line: 2275, type: !21)
!19784 = !DILocation(line: 2275, column: 12, scope: !19744)
!19785 = !DILocalVariable(name: "p1", scope: !19744, file: !3, line: 2276, type: !21)
!19786 = !DILocation(line: 2276, column: 6, scope: !19744)
!19787 = !DILocalVariable(name: "p2", scope: !19744, file: !3, line: 2276, type: !21)
!19788 = !DILocation(line: 2276, column: 10, scope: !19744)
!19789 = !DILocalVariable(name: "p3", scope: !19744, file: !3, line: 2276, type: !21)
!19790 = !DILocation(line: 2276, column: 14, scope: !19744)
!19791 = !DILocalVariable(name: "p4", scope: !19744, file: !3, line: 2276, type: !21)
!19792 = !DILocation(line: 2276, column: 18, scope: !19744)
!19793 = !DILocalVariable(name: "a", scope: !19744, file: !3, line: 2276, type: !21)
!19794 = !DILocation(line: 2276, column: 22, scope: !19744)
!19795 = !DILocalVariable(name: "sizeu", scope: !19744, file: !3, line: 2277, type: !21)
!19796 = !DILocation(line: 2277, column: 6, scope: !19744)
!19797 = !DILocalVariable(name: "nsizeu", scope: !19744, file: !3, line: 2277, type: !21)
!19798 = !DILocation(line: 2277, column: 13, scope: !19744)
!19799 = !DILocalVariable(name: "sizev", scope: !19744, file: !3, line: 2277, type: !21)
!19800 = !DILocation(line: 2277, column: 21, scope: !19744)
!19801 = !DILocalVariable(name: "nsizev", scope: !19744, file: !3, line: 2277, type: !21)
!19802 = !DILocation(line: 2277, column: 28, scope: !19744)
!19803 = !DILocalVariable(name: "startvert", scope: !19744, file: !3, line: 2278, type: !21)
!19804 = !DILocation(line: 2278, column: 6, scope: !19744)
!19805 = !DILocalVariable(name: "startvlak", scope: !19744, file: !3, line: 2278, type: !21)
!19806 = !DILocation(line: 2278, column: 17, scope: !19744)
!19807 = !DILocation(line: 2280, column: 13, scope: !19744)
!19808 = !DILocation(line: 2280, column: 18, scope: !19744)
!19809 = !DILocation(line: 2280, column: 11, scope: !19744)
!19810 = !DILocation(line: 2281, column: 19, scope: !19744)
!19811 = !DILocation(line: 2281, column: 23, scope: !19744)
!19812 = !DILocation(line: 2281, column: 17, scope: !19744)
!19813 = !DILocation(line: 2281, column: 9, scope: !19744)
!19814 = !DILocation(line: 2281, column: 47, scope: !19744)
!19815 = !DILocation(line: 2281, column: 51, scope: !19744)
!19816 = !DILocation(line: 2281, column: 45, scope: !19744)
!19817 = !DILocation(line: 2281, column: 37, scope: !19744)
!19818 = !DILocation(line: 2283, column: 8, scope: !19744)
!19819 = !DILocation(line: 2283, column: 12, scope: !19744)
!19820 = !DILocation(line: 2283, column: 6, scope: !19744)
!19821 = !DILocation(line: 2284, column: 9, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2284, column: 2)
!19823 = !DILocation(line: 2284, column: 7, scope: !19822)
!19824 = !DILocation(line: 2284, column: 14, scope: !19825)
!19825 = distinct !DILexicalBlock(scope: !19822, file: !3, line: 2284, column: 2)
!19826 = !DILocation(line: 2284, column: 18, scope: !19825)
!19827 = !DILocation(line: 2284, column: 16, scope: !19825)
!19828 = !DILocation(line: 2284, column: 2, scope: !19822)
!19829 = !DILocation(line: 2285, column: 25, scope: !19830)
!19830 = distinct !DILexicalBlock(scope: !19825, file: !3, line: 2284, column: 30)
!19831 = !DILocation(line: 2285, column: 30, scope: !19830)
!19832 = !DILocation(line: 2285, column: 35, scope: !19830)
!19833 = !DILocation(line: 2285, column: 42, scope: !19830)
!19834 = !DILocation(line: 2285, column: 8, scope: !19830)
!19835 = !DILocation(line: 2285, column: 6, scope: !19830)
!19836 = !DILocation(line: 2286, column: 14, scope: !19830)
!19837 = !DILocation(line: 2286, column: 18, scope: !19830)
!19838 = !DILocation(line: 2286, column: 22, scope: !19830)
!19839 = !DILocation(line: 2286, column: 3, scope: !19830)
!19840 = !DILocation(line: 2286, column: 34, scope: !19830)
!19841 = !DILocation(line: 2287, column: 7, scope: !19842)
!19842 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 2287, column: 7)
!19843 = !DILocation(line: 2287, column: 7, scope: !19830)
!19844 = !DILocation(line: 2288, column: 14, scope: !19845)
!19845 = distinct !DILexicalBlock(scope: !19842, file: !3, line: 2287, column: 13)
!19846 = !DILocation(line: 2288, column: 4, scope: !19845)
!19847 = !DILocation(line: 2288, column: 8, scope: !19845)
!19848 = !DILocation(line: 2288, column: 12, scope: !19845)
!19849 = !DILocation(line: 2288, column: 24, scope: !19845)
!19850 = !DILocation(line: 2288, column: 37, scope: !19845)
!19851 = !DILocation(line: 2289, column: 3, scope: !19845)
!19852 = !DILocation(line: 2290, column: 13, scope: !19830)
!19853 = !DILocation(line: 2290, column: 18, scope: !19830)
!19854 = !DILocation(line: 2290, column: 22, scope: !19830)
!19855 = !DILocation(line: 2290, column: 3, scope: !19830)
!19856 = !DILocation(line: 2292, column: 10, scope: !19857)
!19857 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 2292, column: 3)
!19858 = !DILocation(line: 2292, column: 8, scope: !19857)
!19859 = !DILocation(line: 2292, column: 15, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19857, file: !3, line: 2292, column: 3)
!19861 = !DILocation(line: 2292, column: 19, scope: !19860)
!19862 = !DILocation(line: 2292, column: 17, scope: !19860)
!19863 = !DILocation(line: 2292, column: 3, scope: !19857)
!19864 = !DILocation(line: 2293, column: 26, scope: !19865)
!19865 = distinct !DILexicalBlock(scope: !19860, file: !3, line: 2292, column: 31)
!19866 = !DILocation(line: 2293, column: 31, scope: !19865)
!19867 = !DILocation(line: 2293, column: 36, scope: !19865)
!19868 = !DILocation(line: 2293, column: 43, scope: !19865)
!19869 = !DILocation(line: 2293, column: 9, scope: !19865)
!19870 = !DILocation(line: 2293, column: 7, scope: !19865)
!19871 = !DILocation(line: 2294, column: 15, scope: !19865)
!19872 = !DILocation(line: 2294, column: 20, scope: !19865)
!19873 = !DILocation(line: 2294, column: 24, scope: !19865)
!19874 = !DILocation(line: 2294, column: 4, scope: !19865)
!19875 = !DILocation(line: 2294, column: 36, scope: !19865)
!19876 = !DILocation(line: 2295, column: 8, scope: !19877)
!19877 = distinct !DILexicalBlock(scope: !19865, file: !3, line: 2295, column: 8)
!19878 = !DILocation(line: 2295, column: 8, scope: !19865)
!19879 = !DILocation(line: 2296, column: 16, scope: !19880)
!19880 = distinct !DILexicalBlock(scope: !19877, file: !3, line: 2295, column: 14)
!19881 = !DILocation(line: 2296, column: 5, scope: !19880)
!19882 = !DILocation(line: 2296, column: 10, scope: !19880)
!19883 = !DILocation(line: 2296, column: 14, scope: !19880)
!19884 = !DILocation(line: 2296, column: 26, scope: !19880)
!19885 = !DILocation(line: 2296, column: 39, scope: !19880)
!19886 = !DILocation(line: 2297, column: 4, scope: !19880)
!19887 = !DILocation(line: 2298, column: 14, scope: !19865)
!19888 = !DILocation(line: 2298, column: 19, scope: !19865)
!19889 = !DILocation(line: 2298, column: 24, scope: !19865)
!19890 = !DILocation(line: 2298, column: 4, scope: !19865)
!19891 = !DILocation(line: 2299, column: 3, scope: !19865)
!19892 = !DILocation(line: 2292, column: 27, scope: !19860)
!19893 = !DILocation(line: 2292, column: 3, scope: !19860)
!19894 = distinct !{!19894, !19863, !19895}
!19895 = !DILocation(line: 2299, column: 3, scope: !19857)
!19896 = !DILocation(line: 2301, column: 7, scope: !19897)
!19897 = distinct !DILexicalBlock(scope: !19830, file: !3, line: 2301, column: 7)
!19898 = !DILocation(line: 2301, column: 11, scope: !19897)
!19899 = !DILocation(line: 2301, column: 16, scope: !19897)
!19900 = !DILocation(line: 2301, column: 7, scope: !19830)
!19901 = !DILocation(line: 2302, column: 26, scope: !19902)
!19902 = distinct !DILexicalBlock(scope: !19897, file: !3, line: 2301, column: 29)
!19903 = !DILocation(line: 2302, column: 31, scope: !19902)
!19904 = !DILocation(line: 2302, column: 36, scope: !19902)
!19905 = !DILocation(line: 2302, column: 43, scope: !19902)
!19906 = !DILocation(line: 2302, column: 9, scope: !19902)
!19907 = !DILocation(line: 2302, column: 7, scope: !19902)
!19908 = !DILocation(line: 2303, column: 15, scope: !19902)
!19909 = !DILocation(line: 2303, column: 20, scope: !19902)
!19910 = !DILocation(line: 2303, column: 24, scope: !19902)
!19911 = !DILocation(line: 2303, column: 28, scope: !19902)
!19912 = !DILocation(line: 2303, column: 4, scope: !19902)
!19913 = !DILocation(line: 2304, column: 8, scope: !19914)
!19914 = distinct !DILexicalBlock(scope: !19902, file: !3, line: 2304, column: 8)
!19915 = !DILocation(line: 2304, column: 8, scope: !19902)
!19916 = !DILocation(line: 2305, column: 16, scope: !19917)
!19917 = distinct !DILexicalBlock(scope: !19914, file: !3, line: 2304, column: 14)
!19918 = !DILocation(line: 2305, column: 5, scope: !19917)
!19919 = !DILocation(line: 2305, column: 10, scope: !19917)
!19920 = !DILocation(line: 2305, column: 14, scope: !19917)
!19921 = !DILocation(line: 2305, column: 26, scope: !19917)
!19922 = !DILocation(line: 2305, column: 38, scope: !19917)
!19923 = !DILocation(line: 2306, column: 4, scope: !19917)
!19924 = !DILocation(line: 2307, column: 3, scope: !19902)
!19925 = !DILocation(line: 2308, column: 2, scope: !19830)
!19926 = !DILocation(line: 2284, column: 26, scope: !19825)
!19927 = !DILocation(line: 2284, column: 2, scope: !19825)
!19928 = distinct !{!19928, !19828, !19929}
!19929 = !DILocation(line: 2308, column: 2, scope: !19822)
!19930 = !DILocation(line: 2311, column: 6, scope: !19931)
!19931 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2311, column: 6)
!19932 = !DILocation(line: 2311, column: 10, scope: !19931)
!19933 = !DILocation(line: 2311, column: 15, scope: !19931)
!19934 = !DILocation(line: 2311, column: 6, scope: !19744)
!19935 = !DILocation(line: 2311, column: 34, scope: !19931)
!19936 = !DILocation(line: 2311, column: 28, scope: !19931)
!19937 = !DILocation(line: 2312, column: 6, scope: !19938)
!19938 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2312, column: 6)
!19939 = !DILocation(line: 2312, column: 10, scope: !19938)
!19940 = !DILocation(line: 2312, column: 15, scope: !19938)
!19941 = !DILocation(line: 2312, column: 6, scope: !19744)
!19942 = !DILocation(line: 2312, column: 34, scope: !19938)
!19943 = !DILocation(line: 2312, column: 28, scope: !19938)
!19944 = !DILocation(line: 2315, column: 6, scope: !19945)
!19945 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2315, column: 6)
!19946 = !DILocation(line: 2315, column: 10, scope: !19945)
!19947 = !DILocation(line: 2315, column: 15, scope: !19945)
!19948 = !DILocation(line: 2315, column: 6, scope: !19744)
!19949 = !DILocation(line: 2316, column: 10, scope: !19950)
!19950 = distinct !DILexicalBlock(scope: !19951, file: !3, line: 2316, column: 3)
!19951 = distinct !DILexicalBlock(scope: !19945, file: !3, line: 2315, column: 28)
!19952 = !DILocation(line: 2316, column: 8, scope: !19950)
!19953 = !DILocation(line: 2316, column: 15, scope: !19954)
!19954 = distinct !DILexicalBlock(scope: !19950, file: !3, line: 2316, column: 3)
!19955 = !DILocation(line: 2316, column: 19, scope: !19954)
!19956 = !DILocation(line: 2316, column: 17, scope: !19954)
!19957 = !DILocation(line: 2316, column: 3, scope: !19950)
!19958 = !DILocation(line: 2317, column: 25, scope: !19959)
!19959 = distinct !DILexicalBlock(scope: !19954, file: !3, line: 2316, column: 32)
!19960 = !DILocation(line: 2317, column: 30, scope: !19959)
!19961 = !DILocation(line: 2317, column: 42, scope: !19959)
!19962 = !DILocation(line: 2317, column: 40, scope: !19959)
!19963 = !DILocation(line: 2317, column: 8, scope: !19959)
!19964 = !DILocation(line: 2317, column: 6, scope: !19959)
!19965 = !DILocation(line: 2318, column: 26, scope: !19959)
!19966 = !DILocation(line: 2318, column: 31, scope: !19959)
!19967 = !DILocation(line: 2318, column: 36, scope: !19959)
!19968 = !DILocation(line: 2318, column: 43, scope: !19959)
!19969 = !DILocation(line: 2318, column: 9, scope: !19959)
!19970 = !DILocation(line: 2318, column: 7, scope: !19959)
!19971 = !DILocation(line: 2319, column: 15, scope: !19959)
!19972 = !DILocation(line: 2319, column: 20, scope: !19959)
!19973 = !DILocation(line: 2319, column: 24, scope: !19959)
!19974 = !DILocation(line: 2319, column: 28, scope: !19959)
!19975 = !DILocation(line: 2319, column: 4, scope: !19959)
!19976 = !DILocation(line: 2320, column: 8, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19959, file: !3, line: 2320, column: 8)
!19978 = !DILocation(line: 2320, column: 8, scope: !19959)
!19979 = !DILocation(line: 2321, column: 16, scope: !19980)
!19980 = distinct !DILexicalBlock(scope: !19977, file: !3, line: 2320, column: 14)
!19981 = !DILocation(line: 2321, column: 5, scope: !19980)
!19982 = !DILocation(line: 2321, column: 10, scope: !19980)
!19983 = !DILocation(line: 2321, column: 14, scope: !19980)
!19984 = !DILocation(line: 2321, column: 26, scope: !19980)
!19985 = !DILocation(line: 2321, column: 38, scope: !19980)
!19986 = !DILocation(line: 2322, column: 4, scope: !19980)
!19987 = !DILocation(line: 2323, column: 3, scope: !19959)
!19988 = !DILocation(line: 2316, column: 28, scope: !19954)
!19989 = !DILocation(line: 2316, column: 3, scope: !19954)
!19990 = distinct !{!19990, !19957, !19991}
!19991 = !DILocation(line: 2323, column: 3, scope: !19950)
!19992 = !DILocation(line: 2324, column: 2, scope: !19951)
!19993 = !DILocation(line: 2326, column: 10, scope: !19744)
!19994 = !DILocation(line: 2326, column: 8, scope: !19744)
!19995 = !DILocation(line: 2327, column: 10, scope: !19744)
!19996 = !DILocation(line: 2327, column: 8, scope: !19744)
!19997 = !DILocation(line: 2329, column: 13, scope: !19744)
!19998 = !DILocation(line: 2329, column: 18, scope: !19744)
!19999 = !DILocation(line: 2329, column: 11, scope: !19744)
!20000 = !DILocation(line: 2331, column: 9, scope: !20001)
!20001 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2331, column: 2)
!20002 = !DILocation(line: 2331, column: 7, scope: !20001)
!20003 = !DILocation(line: 2331, column: 14, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !20001, file: !3, line: 2331, column: 2)
!20005 = !DILocation(line: 2331, column: 18, scope: !20004)
!20006 = !DILocation(line: 2331, column: 24, scope: !20004)
!20007 = !DILocation(line: 2331, column: 16, scope: !20004)
!20008 = !DILocation(line: 2331, column: 2, scope: !20001)
!20009 = !DILocation(line: 2332, column: 8, scope: !20010)
!20010 = distinct !DILexicalBlock(scope: !20004, file: !3, line: 2331, column: 34)
!20011 = !DILocation(line: 2332, column: 20, scope: !20010)
!20012 = !DILocation(line: 2332, column: 24, scope: !20010)
!20013 = !DILocation(line: 2332, column: 22, scope: !20010)
!20014 = !DILocation(line: 2332, column: 18, scope: !20010)
!20015 = !DILocation(line: 2332, column: 6, scope: !20010)
!20016 = !DILocation(line: 2333, column: 8, scope: !20010)
!20017 = !DILocation(line: 2333, column: 11, scope: !20010)
!20018 = !DILocation(line: 2333, column: 6, scope: !20010)
!20019 = !DILocation(line: 2334, column: 8, scope: !20010)
!20020 = !DILocation(line: 2334, column: 13, scope: !20010)
!20021 = !DILocation(line: 2334, column: 11, scope: !20010)
!20022 = !DILocation(line: 2334, column: 6, scope: !20010)
!20023 = !DILocation(line: 2335, column: 8, scope: !20010)
!20024 = !DILocation(line: 2335, column: 11, scope: !20010)
!20025 = !DILocation(line: 2335, column: 6, scope: !20010)
!20026 = !DILocation(line: 2337, column: 10, scope: !20027)
!20027 = distinct !DILexicalBlock(scope: !20010, file: !3, line: 2337, column: 3)
!20028 = !DILocation(line: 2337, column: 8, scope: !20027)
!20029 = !DILocation(line: 2337, column: 15, scope: !20030)
!20030 = distinct !DILexicalBlock(scope: !20027, file: !3, line: 2337, column: 3)
!20031 = !DILocation(line: 2337, column: 19, scope: !20030)
!20032 = !DILocation(line: 2337, column: 25, scope: !20030)
!20033 = !DILocation(line: 2337, column: 17, scope: !20030)
!20034 = !DILocation(line: 2337, column: 3, scope: !20027)
!20035 = !DILocation(line: 2338, column: 25, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !20030, file: !3, line: 2337, column: 35)
!20037 = !DILocation(line: 2338, column: 30, scope: !20036)
!20038 = !DILocation(line: 2338, column: 8, scope: !20036)
!20039 = !DILocation(line: 2338, column: 6, scope: !20036)
!20040 = !DILocation(line: 2339, column: 25, scope: !20036)
!20041 = !DILocation(line: 2339, column: 30, scope: !20036)
!20042 = !DILocation(line: 2339, column: 8, scope: !20036)
!20043 = !DILocation(line: 2339, column: 6, scope: !20036)
!20044 = !DILocation(line: 2340, column: 25, scope: !20036)
!20045 = !DILocation(line: 2340, column: 30, scope: !20036)
!20046 = !DILocation(line: 2340, column: 8, scope: !20036)
!20047 = !DILocation(line: 2340, column: 6, scope: !20036)
!20048 = !DILocation(line: 2341, column: 25, scope: !20036)
!20049 = !DILocation(line: 2341, column: 30, scope: !20036)
!20050 = !DILocation(line: 2341, column: 8, scope: !20036)
!20051 = !DILocation(line: 2341, column: 6, scope: !20036)
!20052 = !DILocation(line: 2343, column: 26, scope: !20036)
!20053 = !DILocation(line: 2343, column: 31, scope: !20036)
!20054 = !DILocation(line: 2343, column: 36, scope: !20036)
!20055 = !DILocation(line: 2343, column: 43, scope: !20036)
!20056 = !DILocation(line: 2343, column: 9, scope: !20036)
!20057 = !DILocation(line: 2343, column: 7, scope: !20036)
!20058 = !DILocation(line: 2344, column: 13, scope: !20036)
!20059 = !DILocation(line: 2344, column: 4, scope: !20036)
!20060 = !DILocation(line: 2344, column: 9, scope: !20036)
!20061 = !DILocation(line: 2344, column: 11, scope: !20036)
!20062 = !DILocation(line: 2344, column: 26, scope: !20036)
!20063 = !DILocation(line: 2344, column: 17, scope: !20036)
!20064 = !DILocation(line: 2344, column: 22, scope: !20036)
!20065 = !DILocation(line: 2344, column: 24, scope: !20036)
!20066 = !DILocation(line: 2344, column: 39, scope: !20036)
!20067 = !DILocation(line: 2344, column: 30, scope: !20036)
!20068 = !DILocation(line: 2344, column: 35, scope: !20036)
!20069 = !DILocation(line: 2344, column: 37, scope: !20036)
!20070 = !DILocation(line: 2344, column: 52, scope: !20036)
!20071 = !DILocation(line: 2344, column: 43, scope: !20036)
!20072 = !DILocation(line: 2344, column: 48, scope: !20036)
!20073 = !DILocation(line: 2344, column: 50, scope: !20036)
!20074 = !DILocation(line: 2346, column: 19, scope: !20036)
!20075 = !DILocation(line: 2346, column: 23, scope: !20036)
!20076 = !DILocation(line: 2346, column: 28, scope: !20036)
!20077 = !DILocation(line: 2346, column: 32, scope: !20036)
!20078 = !DILocation(line: 2346, column: 36, scope: !20036)
!20079 = !DILocation(line: 2346, column: 41, scope: !20036)
!20080 = !DILocation(line: 2346, column: 45, scope: !20036)
!20081 = !DILocation(line: 2346, column: 49, scope: !20036)
!20082 = !DILocation(line: 2346, column: 54, scope: !20036)
!20083 = !DILocation(line: 2346, column: 58, scope: !20036)
!20084 = !DILocation(line: 2346, column: 62, scope: !20036)
!20085 = !DILocation(line: 2346, column: 67, scope: !20036)
!20086 = !DILocation(line: 2346, column: 71, scope: !20036)
!20087 = !DILocation(line: 2346, column: 4, scope: !20036)
!20088 = !DILocation(line: 2348, column: 15, scope: !20036)
!20089 = !DILocation(line: 2348, column: 20, scope: !20036)
!20090 = !DILocation(line: 2348, column: 23, scope: !20036)
!20091 = !DILocation(line: 2348, column: 4, scope: !20036)
!20092 = !DILocation(line: 2350, column: 14, scope: !20036)
!20093 = !DILocation(line: 2350, column: 21, scope: !20036)
!20094 = !DILocation(line: 2350, column: 25, scope: !20036)
!20095 = !DILocation(line: 2350, column: 4, scope: !20036)
!20096 = !DILocation(line: 2350, column: 9, scope: !20036)
!20097 = !DILocation(line: 2350, column: 12, scope: !20036)
!20098 = !DILocation(line: 2351, column: 4, scope: !20036)
!20099 = !DILocation(line: 2351, column: 9, scope: !20036)
!20100 = !DILocation(line: 2351, column: 11, scope: !20036)
!20101 = !DILocation(line: 2352, column: 15, scope: !20036)
!20102 = !DILocation(line: 2352, column: 19, scope: !20036)
!20103 = !DILocation(line: 2352, column: 4, scope: !20036)
!20104 = !DILocation(line: 2352, column: 9, scope: !20036)
!20105 = !DILocation(line: 2352, column: 13, scope: !20036)
!20106 = !DILocation(line: 2354, column: 14, scope: !20036)
!20107 = !DILocation(line: 2354, column: 18, scope: !20036)
!20108 = !DILocation(line: 2354, column: 21, scope: !20036)
!20109 = !DILocation(line: 2354, column: 4, scope: !20036)
!20110 = !DILocation(line: 2355, column: 14, scope: !20036)
!20111 = !DILocation(line: 2355, column: 18, scope: !20036)
!20112 = !DILocation(line: 2355, column: 21, scope: !20036)
!20113 = !DILocation(line: 2355, column: 4, scope: !20036)
!20114 = !DILocation(line: 2356, column: 14, scope: !20036)
!20115 = !DILocation(line: 2356, column: 18, scope: !20036)
!20116 = !DILocation(line: 2356, column: 21, scope: !20036)
!20117 = !DILocation(line: 2356, column: 4, scope: !20036)
!20118 = !DILocation(line: 2357, column: 14, scope: !20036)
!20119 = !DILocation(line: 2357, column: 18, scope: !20036)
!20120 = !DILocation(line: 2357, column: 21, scope: !20036)
!20121 = !DILocation(line: 2357, column: 4, scope: !20036)
!20122 = !DILocation(line: 2359, column: 6, scope: !20036)
!20123 = !DILocation(line: 2359, column: 12, scope: !20036)
!20124 = !DILocation(line: 2359, column: 18, scope: !20036)
!20125 = !DILocation(line: 2359, column: 24, scope: !20036)
!20126 = !DILocation(line: 2360, column: 3, scope: !20036)
!20127 = !DILocation(line: 2337, column: 31, scope: !20030)
!20128 = !DILocation(line: 2337, column: 3, scope: !20030)
!20129 = distinct !{!20129, !20034, !20130}
!20130 = !DILocation(line: 2360, column: 3, scope: !20027)
!20131 = !DILocation(line: 2361, column: 2, scope: !20010)
!20132 = !DILocation(line: 2331, column: 30, scope: !20004)
!20133 = !DILocation(line: 2331, column: 2, scope: !20004)
!20134 = distinct !{!20134, !20008, !20135}
!20135 = !DILocation(line: 2361, column: 2, scope: !20001)
!20136 = !DILocation(line: 2363, column: 7, scope: !19744)
!20137 = !DILocation(line: 2363, column: 16, scope: !19744)
!20138 = !DILocation(line: 2364, column: 6, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2364, column: 6)
!20140 = !DILocation(line: 2364, column: 10, scope: !20139)
!20141 = !DILocation(line: 2364, column: 15, scope: !20139)
!20142 = !DILocation(line: 2364, column: 6, scope: !19744)
!20143 = !DILocation(line: 2366, column: 10, scope: !20144)
!20144 = distinct !DILexicalBlock(scope: !20145, file: !3, line: 2366, column: 3)
!20145 = distinct !DILexicalBlock(scope: !20139, file: !3, line: 2364, column: 28)
!20146 = !DILocation(line: 2366, column: 8, scope: !20144)
!20147 = !DILocation(line: 2366, column: 15, scope: !20148)
!20148 = distinct !DILexicalBlock(scope: !20144, file: !3, line: 2366, column: 3)
!20149 = !DILocation(line: 2366, column: 19, scope: !20148)
!20150 = !DILocation(line: 2366, column: 17, scope: !20148)
!20151 = !DILocation(line: 2366, column: 3, scope: !20144)
!20152 = !DILocation(line: 2368, column: 26, scope: !20153)
!20153 = distinct !DILexicalBlock(scope: !20148, file: !3, line: 2366, column: 31)
!20154 = !DILocation(line: 2368, column: 31, scope: !20153)
!20155 = !DILocation(line: 2368, column: 9, scope: !20153)
!20156 = !DILocation(line: 2368, column: 7, scope: !20153)
!20157 = !DILocation(line: 2369, column: 27, scope: !20153)
!20158 = !DILocation(line: 2369, column: 32, scope: !20153)
!20159 = !DILocation(line: 2369, column: 10, scope: !20153)
!20160 = !DILocation(line: 2369, column: 8, scope: !20153)
!20161 = !DILocation(line: 2370, column: 14, scope: !20153)
!20162 = !DILocation(line: 2370, column: 20, scope: !20153)
!20163 = !DILocation(line: 2370, column: 24, scope: !20153)
!20164 = !DILocation(line: 2370, column: 27, scope: !20153)
!20165 = !DILocation(line: 2370, column: 32, scope: !20153)
!20166 = !DILocation(line: 2370, column: 4, scope: !20153)
!20167 = !DILocation(line: 2371, column: 14, scope: !20153)
!20168 = !DILocation(line: 2371, column: 20, scope: !20153)
!20169 = !DILocation(line: 2371, column: 24, scope: !20153)
!20170 = !DILocation(line: 2371, column: 27, scope: !20153)
!20171 = !DILocation(line: 2371, column: 32, scope: !20153)
!20172 = !DILocation(line: 2371, column: 4, scope: !20153)
!20173 = !DILocation(line: 2372, column: 14, scope: !20153)
!20174 = !DILocation(line: 2372, column: 19, scope: !20153)
!20175 = !DILocation(line: 2372, column: 23, scope: !20153)
!20176 = !DILocation(line: 2372, column: 26, scope: !20153)
!20177 = !DILocation(line: 2372, column: 32, scope: !20153)
!20178 = !DILocation(line: 2372, column: 4, scope: !20153)
!20179 = !DILocation(line: 2373, column: 14, scope: !20153)
!20180 = !DILocation(line: 2373, column: 19, scope: !20153)
!20181 = !DILocation(line: 2373, column: 23, scope: !20153)
!20182 = !DILocation(line: 2373, column: 26, scope: !20153)
!20183 = !DILocation(line: 2373, column: 32, scope: !20153)
!20184 = !DILocation(line: 2373, column: 4, scope: !20153)
!20185 = !DILocation(line: 2374, column: 3, scope: !20153)
!20186 = !DILocation(line: 2366, column: 27, scope: !20148)
!20187 = !DILocation(line: 2366, column: 3, scope: !20148)
!20188 = distinct !{!20188, !20151, !20189}
!20189 = !DILocation(line: 2374, column: 3, scope: !20144)
!20190 = !DILocation(line: 2375, column: 2, scope: !20145)
!20191 = !DILocation(line: 2376, column: 6, scope: !20192)
!20192 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2376, column: 6)
!20193 = !DILocation(line: 2376, column: 10, scope: !20192)
!20194 = !DILocation(line: 2376, column: 15, scope: !20192)
!20195 = !DILocation(line: 2376, column: 6, scope: !19744)
!20196 = !DILocation(line: 2378, column: 10, scope: !20197)
!20197 = distinct !DILexicalBlock(scope: !20198, file: !3, line: 2378, column: 3)
!20198 = distinct !DILexicalBlock(scope: !20192, file: !3, line: 2376, column: 28)
!20199 = !DILocation(line: 2378, column: 8, scope: !20197)
!20200 = !DILocation(line: 2378, column: 15, scope: !20201)
!20201 = distinct !DILexicalBlock(scope: !20197, file: !3, line: 2378, column: 3)
!20202 = !DILocation(line: 2378, column: 19, scope: !20201)
!20203 = !DILocation(line: 2378, column: 17, scope: !20201)
!20204 = !DILocation(line: 2378, column: 3, scope: !20197)
!20205 = !DILocation(line: 2380, column: 26, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !20201, file: !3, line: 2378, column: 31)
!20207 = !DILocation(line: 2380, column: 31, scope: !20206)
!20208 = !DILocation(line: 2380, column: 9, scope: !20206)
!20209 = !DILocation(line: 2380, column: 7, scope: !20206)
!20210 = !DILocation(line: 2381, column: 27, scope: !20206)
!20211 = !DILocation(line: 2381, column: 32, scope: !20206)
!20212 = !DILocation(line: 2381, column: 10, scope: !20206)
!20213 = !DILocation(line: 2381, column: 8, scope: !20206)
!20214 = !DILocation(line: 2382, column: 14, scope: !20206)
!20215 = !DILocation(line: 2382, column: 20, scope: !20206)
!20216 = !DILocation(line: 2382, column: 24, scope: !20206)
!20217 = !DILocation(line: 2382, column: 27, scope: !20206)
!20218 = !DILocation(line: 2382, column: 32, scope: !20206)
!20219 = !DILocation(line: 2382, column: 4, scope: !20206)
!20220 = !DILocation(line: 2383, column: 14, scope: !20206)
!20221 = !DILocation(line: 2383, column: 20, scope: !20206)
!20222 = !DILocation(line: 2383, column: 24, scope: !20206)
!20223 = !DILocation(line: 2383, column: 27, scope: !20206)
!20224 = !DILocation(line: 2383, column: 32, scope: !20206)
!20225 = !DILocation(line: 2383, column: 4, scope: !20206)
!20226 = !DILocation(line: 2384, column: 14, scope: !20206)
!20227 = !DILocation(line: 2384, column: 19, scope: !20206)
!20228 = !DILocation(line: 2384, column: 23, scope: !20206)
!20229 = !DILocation(line: 2384, column: 26, scope: !20206)
!20230 = !DILocation(line: 2384, column: 32, scope: !20206)
!20231 = !DILocation(line: 2384, column: 4, scope: !20206)
!20232 = !DILocation(line: 2385, column: 14, scope: !20206)
!20233 = !DILocation(line: 2385, column: 19, scope: !20206)
!20234 = !DILocation(line: 2385, column: 23, scope: !20206)
!20235 = !DILocation(line: 2385, column: 26, scope: !20206)
!20236 = !DILocation(line: 2385, column: 32, scope: !20206)
!20237 = !DILocation(line: 2385, column: 4, scope: !20206)
!20238 = !DILocation(line: 2386, column: 3, scope: !20206)
!20239 = !DILocation(line: 2378, column: 27, scope: !20201)
!20240 = !DILocation(line: 2378, column: 3, scope: !20201)
!20241 = distinct !{!20241, !20204, !20242}
!20242 = !DILocation(line: 2386, column: 3, scope: !20197)
!20243 = !DILocation(line: 2387, column: 2, scope: !20198)
!20244 = !DILocation(line: 2406, column: 7, scope: !20245)
!20245 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2406, column: 6)
!20246 = !DILocation(line: 2406, column: 11, scope: !20245)
!20247 = !DILocation(line: 2406, column: 16, scope: !20245)
!20248 = !DILocation(line: 2406, column: 29, scope: !20245)
!20249 = !DILocation(line: 2406, column: 33, scope: !20245)
!20250 = !DILocation(line: 2406, column: 37, scope: !20245)
!20251 = !DILocation(line: 2406, column: 42, scope: !20245)
!20252 = !DILocation(line: 2406, column: 6, scope: !19744)
!20253 = !DILocation(line: 2407, column: 25, scope: !20254)
!20254 = distinct !DILexicalBlock(scope: !20245, file: !3, line: 2406, column: 56)
!20255 = !DILocation(line: 2407, column: 30, scope: !20254)
!20256 = !DILocation(line: 2407, column: 8, scope: !20254)
!20257 = !DILocation(line: 2407, column: 6, scope: !20254)
!20258 = !DILocation(line: 2408, column: 26, scope: !20254)
!20259 = !DILocation(line: 2408, column: 31, scope: !20254)
!20260 = !DILocation(line: 2408, column: 9, scope: !20254)
!20261 = !DILocation(line: 2408, column: 7, scope: !20254)
!20262 = !DILocation(line: 2409, column: 15, scope: !20254)
!20263 = !DILocation(line: 2409, column: 19, scope: !20254)
!20264 = !DILocation(line: 2409, column: 24, scope: !20254)
!20265 = !DILocation(line: 2409, column: 27, scope: !20254)
!20266 = !DILocation(line: 2409, column: 33, scope: !20254)
!20267 = !DILocation(line: 2409, column: 3, scope: !20254)
!20268 = !DILocation(line: 2410, column: 26, scope: !20254)
!20269 = !DILocation(line: 2410, column: 31, scope: !20254)
!20270 = !DILocation(line: 2410, column: 9, scope: !20254)
!20271 = !DILocation(line: 2410, column: 7, scope: !20254)
!20272 = !DILocation(line: 2411, column: 13, scope: !20254)
!20273 = !DILocation(line: 2411, column: 17, scope: !20254)
!20274 = !DILocation(line: 2411, column: 23, scope: !20254)
!20275 = !DILocation(line: 2411, column: 3, scope: !20254)
!20276 = !DILocation(line: 2412, column: 26, scope: !20254)
!20277 = !DILocation(line: 2412, column: 31, scope: !20254)
!20278 = !DILocation(line: 2412, column: 9, scope: !20254)
!20279 = !DILocation(line: 2412, column: 7, scope: !20254)
!20280 = !DILocation(line: 2413, column: 13, scope: !20254)
!20281 = !DILocation(line: 2413, column: 17, scope: !20254)
!20282 = !DILocation(line: 2413, column: 23, scope: !20254)
!20283 = !DILocation(line: 2413, column: 3, scope: !20254)
!20284 = !DILocation(line: 2414, column: 14, scope: !20254)
!20285 = !DILocation(line: 2414, column: 19, scope: !20254)
!20286 = !DILocation(line: 2414, column: 23, scope: !20254)
!20287 = !DILocation(line: 2414, column: 26, scope: !20254)
!20288 = !DILocation(line: 2414, column: 3, scope: !20254)
!20289 = !DILocation(line: 2415, column: 14, scope: !20254)
!20290 = !DILocation(line: 2415, column: 20, scope: !20254)
!20291 = !DILocation(line: 2415, column: 24, scope: !20254)
!20292 = !DILocation(line: 2415, column: 27, scope: !20254)
!20293 = !DILocation(line: 2415, column: 3, scope: !20254)
!20294 = !DILocation(line: 2416, column: 14, scope: !20254)
!20295 = !DILocation(line: 2416, column: 20, scope: !20254)
!20296 = !DILocation(line: 2416, column: 24, scope: !20254)
!20297 = !DILocation(line: 2416, column: 27, scope: !20254)
!20298 = !DILocation(line: 2416, column: 3, scope: !20254)
!20299 = !DILocation(line: 2417, column: 14, scope: !20254)
!20300 = !DILocation(line: 2417, column: 20, scope: !20254)
!20301 = !DILocation(line: 2417, column: 24, scope: !20254)
!20302 = !DILocation(line: 2417, column: 27, scope: !20254)
!20303 = !DILocation(line: 2417, column: 3, scope: !20254)
!20304 = !DILocation(line: 2418, column: 2, scope: !20254)
!20305 = !DILocation(line: 2419, column: 11, scope: !20306)
!20306 = distinct !DILexicalBlock(scope: !19744, file: !3, line: 2419, column: 2)
!20307 = !DILocation(line: 2419, column: 9, scope: !20306)
!20308 = !DILocation(line: 2419, column: 7, scope: !20306)
!20309 = !DILocation(line: 2419, column: 22, scope: !20310)
!20310 = distinct !DILexicalBlock(scope: !20306, file: !3, line: 2419, column: 2)
!20311 = !DILocation(line: 2419, column: 26, scope: !20310)
!20312 = !DILocation(line: 2419, column: 31, scope: !20310)
!20313 = !DILocation(line: 2419, column: 24, scope: !20310)
!20314 = !DILocation(line: 2419, column: 2, scope: !20306)
!20315 = !DILocation(line: 2420, column: 25, scope: !20316)
!20316 = distinct !DILexicalBlock(scope: !20310, file: !3, line: 2419, column: 45)
!20317 = !DILocation(line: 2420, column: 30, scope: !20316)
!20318 = !DILocation(line: 2420, column: 8, scope: !20316)
!20319 = !DILocation(line: 2420, column: 6, scope: !20316)
!20320 = !DILocation(line: 2421, column: 16, scope: !20316)
!20321 = !DILocation(line: 2421, column: 21, scope: !20316)
!20322 = !DILocation(line: 2421, column: 3, scope: !20316)
!20323 = !DILocation(line: 2422, column: 2, scope: !20316)
!20324 = !DILocation(line: 2419, column: 41, scope: !20310)
!20325 = !DILocation(line: 2419, column: 2, scope: !20310)
!20326 = distinct !{!20326, !20314, !20327}
!20327 = !DILocation(line: 2422, column: 2, scope: !20306)
!20328 = !DILocation(line: 2425, column: 9, scope: !19744)
!20329 = !DILocation(line: 2425, column: 2, scope: !19744)
!20330 = distinct !DISubprogram(name: "split_v_renderfaces", scope: !3, file: !3, line: 137, type: !20331, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20331 = !DISubroutineType(types: !20332)
!20332 = !{null, !3063, !21, !21, !21, !21, !21, !21, !21}
!20333 = !DILocalVariable(name: "obr", arg: 1, scope: !20330, file: !3, line: 137, type: !3063)
!20334 = !DILocation(line: 137, column: 44, scope: !20330)
!20335 = !DILocalVariable(name: "startvlak", arg: 2, scope: !20330, file: !3, line: 137, type: !21)
!20336 = !DILocation(line: 137, column: 53, scope: !20330)
!20337 = !DILocalVariable(name: "UNUSED_startvert", arg: 3, scope: !20330, file: !3, line: 137, type: !21)
!20338 = !DILocation(line: 137, column: 68, scope: !20330)
!20339 = !DILocalVariable(name: "UNUSED_usize", arg: 4, scope: !20330, file: !3, line: 137, type: !21)
!20340 = !DILocation(line: 137, column: 91, scope: !20330)
!20341 = !DILocalVariable(name: "vsize", arg: 5, scope: !20330, file: !3, line: 137, type: !21)
!20342 = !DILocation(line: 137, column: 110, scope: !20330)
!20343 = !DILocalVariable(name: "uIndex", arg: 6, scope: !20330, file: !3, line: 137, type: !21)
!20344 = !DILocation(line: 137, column: 121, scope: !20330)
!20345 = !DILocalVariable(name: "UNUSED_cyclu", arg: 7, scope: !20330, file: !3, line: 137, type: !21)
!20346 = !DILocation(line: 137, column: 133, scope: !20330)
!20347 = !DILocalVariable(name: "cyclv", arg: 8, scope: !20330, file: !3, line: 137, type: !21)
!20348 = !DILocation(line: 137, column: 152, scope: !20330)
!20349 = !DILocalVariable(name: "vLen", scope: !20330, file: !3, line: 139, type: !21)
!20350 = !DILocation(line: 139, column: 6, scope: !20330)
!20351 = !DILocation(line: 139, column: 13, scope: !20330)
!20352 = !DILocation(line: 139, column: 18, scope: !20330)
!20353 = !DILocation(line: 139, column: 24, scope: !20330)
!20354 = !DILocation(line: 139, column: 23, scope: !20330)
!20355 = !DILocation(line: 139, column: 22, scope: !20330)
!20356 = !DILocation(line: 139, column: 20, scope: !20330)
!20357 = !DILocalVariable(name: "v", scope: !20330, file: !3, line: 140, type: !21)
!20358 = !DILocation(line: 140, column: 6, scope: !20330)
!20359 = !DILocation(line: 142, column: 8, scope: !20360)
!20360 = distinct !DILexicalBlock(scope: !20330, file: !3, line: 142, column: 2)
!20361 = !DILocation(line: 142, column: 7, scope: !20360)
!20362 = !DILocation(line: 142, column: 12, scope: !20363)
!20363 = distinct !DILexicalBlock(scope: !20360, file: !3, line: 142, column: 2)
!20364 = !DILocation(line: 142, column: 14, scope: !20363)
!20365 = !DILocation(line: 142, column: 13, scope: !20363)
!20366 = !DILocation(line: 142, column: 2, scope: !20360)
!20367 = !DILocalVariable(name: "vlr", scope: !20368, file: !3, line: 143, type: !13020)
!20368 = distinct !DILexicalBlock(scope: !20363, file: !3, line: 142, column: 25)
!20369 = !DILocation(line: 143, column: 12, scope: !20368)
!20370 = !DILocation(line: 143, column: 35, scope: !20368)
!20371 = !DILocation(line: 143, column: 40, scope: !20368)
!20372 = !DILocation(line: 143, column: 52, scope: !20368)
!20373 = !DILocation(line: 143, column: 57, scope: !20368)
!20374 = !DILocation(line: 143, column: 56, scope: !20368)
!20375 = !DILocation(line: 143, column: 50, scope: !20368)
!20376 = !DILocation(line: 143, column: 66, scope: !20368)
!20377 = !DILocation(line: 143, column: 64, scope: !20368)
!20378 = !DILocation(line: 143, column: 18, scope: !20368)
!20379 = !DILocalVariable(name: "vert", scope: !20368, file: !3, line: 144, type: !4179)
!20380 = !DILocation(line: 144, column: 12, scope: !20368)
!20381 = !DILocation(line: 144, column: 35, scope: !20368)
!20382 = !DILocation(line: 144, column: 40, scope: !20368)
!20383 = !DILocation(line: 144, column: 45, scope: !20368)
!20384 = !DILocation(line: 144, column: 19, scope: !20368)
!20385 = !DILocation(line: 146, column: 7, scope: !20386)
!20386 = distinct !DILexicalBlock(scope: !20368, file: !3, line: 146, column: 7)
!20387 = !DILocation(line: 146, column: 7, scope: !20368)
!20388 = !DILocation(line: 147, column: 14, scope: !20389)
!20389 = distinct !DILexicalBlock(scope: !20386, file: !3, line: 146, column: 14)
!20390 = !DILocation(line: 147, column: 4, scope: !20389)
!20391 = !DILocation(line: 147, column: 9, scope: !20389)
!20392 = !DILocation(line: 147, column: 12, scope: !20389)
!20393 = !DILocation(line: 149, column: 8, scope: !20394)
!20394 = distinct !DILexicalBlock(scope: !20389, file: !3, line: 149, column: 8)
!20395 = !DILocation(line: 149, column: 11, scope: !20394)
!20396 = !DILocation(line: 149, column: 15, scope: !20394)
!20397 = !DILocation(line: 149, column: 9, scope: !20394)
!20398 = !DILocation(line: 149, column: 8, scope: !20389)
!20399 = !DILocalVariable(name: "vlr", scope: !20400, file: !3, line: 150, type: !13020)
!20400 = distinct !DILexicalBlock(scope: !20394, file: !3, line: 149, column: 19)
!20401 = !DILocation(line: 150, column: 14, scope: !20400)
!20402 = !DILocation(line: 150, column: 37, scope: !20400)
!20403 = !DILocation(line: 150, column: 42, scope: !20400)
!20404 = !DILocation(line: 150, column: 54, scope: !20400)
!20405 = !DILocation(line: 150, column: 59, scope: !20400)
!20406 = !DILocation(line: 150, column: 58, scope: !20400)
!20407 = !DILocation(line: 150, column: 52, scope: !20400)
!20408 = !DILocation(line: 150, column: 66, scope: !20400)
!20409 = !DILocation(line: 150, column: 20, scope: !20400)
!20410 = !DILocation(line: 151, column: 15, scope: !20400)
!20411 = !DILocation(line: 151, column: 5, scope: !20400)
!20412 = !DILocation(line: 151, column: 10, scope: !20400)
!20413 = !DILocation(line: 151, column: 13, scope: !20400)
!20414 = !DILocation(line: 152, column: 4, scope: !20400)
!20415 = !DILocalVariable(name: "vlr", scope: !20416, file: !3, line: 154, type: !13020)
!20416 = distinct !DILexicalBlock(scope: !20394, file: !3, line: 153, column: 9)
!20417 = !DILocation(line: 154, column: 14, scope: !20416)
!20418 = !DILocation(line: 154, column: 37, scope: !20416)
!20419 = !DILocation(line: 154, column: 42, scope: !20416)
!20420 = !DILocation(line: 154, column: 54, scope: !20416)
!20421 = !DILocation(line: 154, column: 59, scope: !20416)
!20422 = !DILocation(line: 154, column: 58, scope: !20416)
!20423 = !DILocation(line: 154, column: 52, scope: !20416)
!20424 = !DILocation(line: 154, column: 68, scope: !20416)
!20425 = !DILocation(line: 154, column: 66, scope: !20416)
!20426 = !DILocation(line: 154, column: 69, scope: !20416)
!20427 = !DILocation(line: 154, column: 20, scope: !20416)
!20428 = !DILocation(line: 155, column: 15, scope: !20416)
!20429 = !DILocation(line: 155, column: 5, scope: !20416)
!20430 = !DILocation(line: 155, column: 10, scope: !20416)
!20431 = !DILocation(line: 155, column: 13, scope: !20416)
!20432 = !DILocation(line: 157, column: 3, scope: !20389)
!20433 = !DILocation(line: 159, column: 14, scope: !20434)
!20434 = distinct !DILexicalBlock(scope: !20386, file: !3, line: 158, column: 8)
!20435 = !DILocation(line: 159, column: 4, scope: !20434)
!20436 = !DILocation(line: 159, column: 9, scope: !20434)
!20437 = !DILocation(line: 159, column: 12, scope: !20434)
!20438 = !DILocation(line: 161, column: 8, scope: !20439)
!20439 = distinct !DILexicalBlock(scope: !20434, file: !3, line: 161, column: 8)
!20440 = !DILocation(line: 161, column: 10, scope: !20439)
!20441 = !DILocation(line: 161, column: 14, scope: !20439)
!20442 = !DILocation(line: 161, column: 9, scope: !20439)
!20443 = !DILocation(line: 161, column: 8, scope: !20434)
!20444 = !DILocalVariable(name: "vlr", scope: !20445, file: !3, line: 162, type: !13020)
!20445 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 161, column: 18)
!20446 = !DILocation(line: 162, column: 14, scope: !20445)
!20447 = !DILocation(line: 162, column: 37, scope: !20445)
!20448 = !DILocation(line: 162, column: 42, scope: !20445)
!20449 = !DILocation(line: 162, column: 54, scope: !20445)
!20450 = !DILocation(line: 162, column: 59, scope: !20445)
!20451 = !DILocation(line: 162, column: 58, scope: !20445)
!20452 = !DILocation(line: 162, column: 52, scope: !20445)
!20453 = !DILocation(line: 162, column: 68, scope: !20445)
!20454 = !DILocation(line: 162, column: 66, scope: !20445)
!20455 = !DILocation(line: 162, column: 69, scope: !20445)
!20456 = !DILocation(line: 162, column: 20, scope: !20445)
!20457 = !DILocation(line: 163, column: 15, scope: !20445)
!20458 = !DILocation(line: 163, column: 5, scope: !20445)
!20459 = !DILocation(line: 163, column: 10, scope: !20445)
!20460 = !DILocation(line: 163, column: 13, scope: !20445)
!20461 = !DILocation(line: 164, column: 4, scope: !20445)
!20462 = !DILocation(line: 166, column: 8, scope: !20463)
!20463 = distinct !DILexicalBlock(scope: !20434, file: !3, line: 166, column: 8)
!20464 = !DILocation(line: 166, column: 9, scope: !20463)
!20465 = !DILocation(line: 166, column: 8, scope: !20434)
!20466 = !DILocation(line: 167, column: 31, scope: !20467)
!20467 = distinct !DILexicalBlock(scope: !20463, file: !3, line: 166, column: 14)
!20468 = !DILocation(line: 167, column: 36, scope: !20467)
!20469 = !DILocation(line: 167, column: 41, scope: !20467)
!20470 = !DILocation(line: 167, column: 15, scope: !20467)
!20471 = !DILocation(line: 167, column: 5, scope: !20467)
!20472 = !DILocation(line: 167, column: 10, scope: !20467)
!20473 = !DILocation(line: 167, column: 13, scope: !20467)
!20474 = !DILocation(line: 168, column: 4, scope: !20467)
!20475 = !DILocation(line: 170, column: 2, scope: !20368)
!20476 = !DILocation(line: 142, column: 21, scope: !20363)
!20477 = !DILocation(line: 142, column: 2, scope: !20363)
!20478 = distinct !{!20478, !20366, !20479}
!20479 = !DILocation(line: 170, column: 2, scope: !20360)
!20480 = !DILocation(line: 171, column: 1, scope: !20330)
!20481 = distinct !DISubprogram(name: "test_for_displace", scope: !3, file: !3, line: 1970, type: !20482, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20482 = !DISubroutineType(types: !20483)
!20483 = !{!23, !6, !3236}
!20484 = !DILocalVariable(name: "re", arg: 1, scope: !20481, file: !3, line: 1970, type: !6)
!20485 = !DILocation(line: 1970, column: 40, scope: !20481)
!20486 = !DILocalVariable(name: "ob", arg: 2, scope: !20481, file: !3, line: 1970, type: !3236)
!20487 = !DILocation(line: 1970, column: 52, scope: !20481)
!20488 = !DILocalVariable(name: "ma", scope: !20481, file: !3, line: 1973, type: !4157)
!20489 = !DILocation(line: 1973, column: 12, scope: !20481)
!20490 = !DILocalVariable(name: "i", scope: !20481, file: !3, line: 1974, type: !21)
!20491 = !DILocation(line: 1974, column: 6, scope: !20481)
!20492 = !DILocation(line: 1976, column: 8, scope: !20493)
!20493 = distinct !DILexicalBlock(scope: !20481, file: !3, line: 1976, column: 2)
!20494 = !DILocation(line: 1976, column: 7, scope: !20493)
!20495 = !DILocation(line: 1976, column: 12, scope: !20496)
!20496 = distinct !DILexicalBlock(scope: !20493, file: !3, line: 1976, column: 2)
!20497 = !DILocation(line: 1976, column: 15, scope: !20496)
!20498 = !DILocation(line: 1976, column: 19, scope: !20496)
!20499 = !DILocation(line: 1976, column: 13, scope: !20496)
!20500 = !DILocation(line: 1976, column: 2, scope: !20493)
!20501 = !DILocation(line: 1977, column: 27, scope: !20502)
!20502 = distinct !DILexicalBlock(scope: !20496, file: !3, line: 1976, column: 32)
!20503 = !DILocation(line: 1977, column: 31, scope: !20502)
!20504 = !DILocation(line: 1977, column: 35, scope: !20502)
!20505 = !DILocation(line: 1977, column: 6, scope: !20502)
!20506 = !DILocation(line: 1977, column: 5, scope: !20502)
!20507 = !DILocation(line: 1979, column: 7, scope: !20508)
!20508 = distinct !DILexicalBlock(scope: !20502, file: !3, line: 1979, column: 7)
!20509 = !DILocation(line: 1979, column: 10, scope: !20508)
!20510 = !DILocation(line: 1979, column: 14, scope: !20508)
!20511 = !DILocation(line: 1979, column: 18, scope: !20508)
!20512 = !DILocation(line: 1979, column: 24, scope: !20508)
!20513 = !DILocation(line: 1979, column: 7, scope: !20502)
!20514 = !DILocation(line: 1979, column: 41, scope: !20508)
!20515 = !DILocation(line: 1980, column: 2, scope: !20502)
!20516 = !DILocation(line: 1976, column: 28, scope: !20496)
!20517 = !DILocation(line: 1976, column: 2, scope: !20496)
!20518 = distinct !{!20518, !20500, !20519}
!20519 = !DILocation(line: 1980, column: 2, scope: !20493)
!20520 = !DILocation(line: 1981, column: 2, scope: !20481)
!20521 = !DILocation(line: 1982, column: 1, scope: !20481)
!20522 = distinct !DISubprogram(name: "make_render_halos", scope: !3, file: !3, line: 1883, type: !20523, scopeLine: 1884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20523 = !DISubroutineType(types: !20524)
!20524 = !{null, !6, !3063, !14185, !21, !2145, !4157, !44}
!20525 = !DILocalVariable(name: "re", arg: 1, scope: !20522, file: !3, line: 1883, type: !6)
!20526 = !DILocation(line: 1883, column: 39, scope: !20522)
!20527 = !DILocalVariable(name: "obr", arg: 2, scope: !20522, file: !3, line: 1883, type: !3063)
!20528 = !DILocation(line: 1883, column: 54, scope: !20522)
!20529 = !DILocalVariable(name: "UNUSED_me", arg: 3, scope: !20522, file: !3, line: 1883, type: !14185)
!20530 = !DILocation(line: 1883, column: 65, scope: !20522)
!20531 = !DILocalVariable(name: "totvert", arg: 4, scope: !20522, file: !3, line: 1883, type: !21)
!20532 = !DILocation(line: 1883, column: 81, scope: !20522)
!20533 = !DILocalVariable(name: "mvert", arg: 5, scope: !20522, file: !3, line: 1883, type: !2145)
!20534 = !DILocation(line: 1883, column: 97, scope: !20522)
!20535 = !DILocalVariable(name: "ma", arg: 6, scope: !20522, file: !3, line: 1883, type: !4157)
!20536 = !DILocation(line: 1883, column: 114, scope: !20522)
!20537 = !DILocalVariable(name: "orco", arg: 7, scope: !20522, file: !3, line: 1883, type: !44)
!20538 = !DILocation(line: 1883, column: 125, scope: !20522)
!20539 = !DILocalVariable(name: "ob", scope: !20522, file: !3, line: 1885, type: !3236)
!20540 = !DILocation(line: 1885, column: 10, scope: !20522)
!20541 = !DILocation(line: 1885, column: 14, scope: !20522)
!20542 = !DILocation(line: 1885, column: 19, scope: !20522)
!20543 = !DILocalVariable(name: "har", scope: !20522, file: !3, line: 1886, type: !6075)
!20544 = !DILocation(line: 1886, column: 11, scope: !20522)
!20545 = !DILocalVariable(name: "xn", scope: !20522, file: !3, line: 1887, type: !45)
!20546 = !DILocation(line: 1887, column: 8, scope: !20522)
!20547 = !DILocalVariable(name: "yn", scope: !20522, file: !3, line: 1887, type: !45)
!20548 = !DILocation(line: 1887, column: 12, scope: !20522)
!20549 = !DILocalVariable(name: "zn", scope: !20522, file: !3, line: 1887, type: !45)
!20550 = !DILocation(line: 1887, column: 16, scope: !20522)
!20551 = !DILocalVariable(name: "nor", scope: !20522, file: !3, line: 1887, type: !188)
!20552 = !DILocation(line: 1887, column: 20, scope: !20522)
!20553 = !DILocalVariable(name: "view", scope: !20522, file: !3, line: 1887, type: !188)
!20554 = !DILocation(line: 1887, column: 28, scope: !20522)
!20555 = !DILocalVariable(name: "vec", scope: !20522, file: !3, line: 1888, type: !188)
!20556 = !DILocation(line: 1888, column: 8, scope: !20522)
!20557 = !DILocalVariable(name: "hasize", scope: !20522, file: !3, line: 1888, type: !45)
!20558 = !DILocation(line: 1888, column: 16, scope: !20522)
!20559 = !DILocalVariable(name: "mat", scope: !20522, file: !3, line: 1888, type: !462)
!20560 = !DILocation(line: 1888, column: 24, scope: !20522)
!20561 = !DILocalVariable(name: "imat", scope: !20522, file: !3, line: 1888, type: !2674)
!20562 = !DILocation(line: 1888, column: 35, scope: !20522)
!20563 = !DILocalVariable(name: "a", scope: !20522, file: !3, line: 1889, type: !21)
!20564 = !DILocation(line: 1889, column: 6, scope: !20522)
!20565 = !DILocalVariable(name: "ok", scope: !20522, file: !3, line: 1889, type: !21)
!20566 = !DILocation(line: 1889, column: 9, scope: !20522)
!20567 = !DILocalVariable(name: "seed", scope: !20522, file: !3, line: 1889, type: !21)
!20568 = !DILocation(line: 1889, column: 13, scope: !20522)
!20569 = !DILocation(line: 1889, column: 19, scope: !20522)
!20570 = !DILocation(line: 1889, column: 23, scope: !20522)
!20571 = !DILocation(line: 1891, column: 14, scope: !20522)
!20572 = !DILocation(line: 1891, column: 19, scope: !20522)
!20573 = !DILocation(line: 1891, column: 23, scope: !20522)
!20574 = !DILocation(line: 1891, column: 32, scope: !20522)
!20575 = !DILocation(line: 1891, column: 36, scope: !20522)
!20576 = !DILocation(line: 1891, column: 2, scope: !20522)
!20577 = !DILocation(line: 1892, column: 13, scope: !20522)
!20578 = !DILocation(line: 1892, column: 19, scope: !20522)
!20579 = !DILocation(line: 1892, column: 23, scope: !20522)
!20580 = !DILocation(line: 1892, column: 2, scope: !20522)
!20581 = !DILocation(line: 1894, column: 2, scope: !20522)
!20582 = !DILocation(line: 1894, column: 6, scope: !20522)
!20583 = !DILocation(line: 1894, column: 11, scope: !20522)
!20584 = !DILocation(line: 1896, column: 8, scope: !20585)
!20585 = distinct !DILexicalBlock(scope: !20522, file: !3, line: 1896, column: 2)
!20586 = !DILocation(line: 1896, column: 7, scope: !20585)
!20587 = !DILocation(line: 1896, column: 12, scope: !20588)
!20588 = distinct !DILexicalBlock(scope: !20585, file: !3, line: 1896, column: 2)
!20589 = !DILocation(line: 1896, column: 14, scope: !20588)
!20590 = !DILocation(line: 1896, column: 13, scope: !20588)
!20591 = !DILocation(line: 1896, column: 2, scope: !20585)
!20592 = !DILocation(line: 1897, column: 5, scope: !20593)
!20593 = distinct !DILexicalBlock(scope: !20588, file: !3, line: 1896, column: 37)
!20594 = !DILocation(line: 1899, column: 7, scope: !20595)
!20595 = distinct !DILexicalBlock(scope: !20593, file: !3, line: 1899, column: 7)
!20596 = !DILocation(line: 1899, column: 7, scope: !20593)
!20597 = !DILocation(line: 1900, column: 12, scope: !20598)
!20598 = distinct !DILexicalBlock(scope: !20595, file: !3, line: 1899, column: 11)
!20599 = !DILocation(line: 1900, column: 16, scope: !20598)
!20600 = !DILocation(line: 1900, column: 10, scope: !20598)
!20601 = !DILocation(line: 1902, column: 15, scope: !20598)
!20602 = !DILocation(line: 1902, column: 20, scope: !20598)
!20603 = !DILocation(line: 1902, column: 27, scope: !20598)
!20604 = !DILocation(line: 1902, column: 4, scope: !20598)
!20605 = !DILocation(line: 1903, column: 14, scope: !20598)
!20606 = !DILocation(line: 1903, column: 19, scope: !20598)
!20607 = !DILocation(line: 1903, column: 4, scope: !20598)
!20608 = !DILocation(line: 1905, column: 8, scope: !20609)
!20609 = distinct !DILexicalBlock(scope: !20598, file: !3, line: 1905, column: 8)
!20610 = !DILocation(line: 1905, column: 12, scope: !20609)
!20611 = !DILocation(line: 1905, column: 17, scope: !20609)
!20612 = !DILocation(line: 1905, column: 8, scope: !20598)
!20613 = !DILocation(line: 1906, column: 9, scope: !20614)
!20614 = distinct !DILexicalBlock(scope: !20609, file: !3, line: 1905, column: 32)
!20615 = !DILocation(line: 1906, column: 16, scope: !20614)
!20616 = !DILocation(line: 1906, column: 7, scope: !20614)
!20617 = !DILocation(line: 1907, column: 9, scope: !20614)
!20618 = !DILocation(line: 1907, column: 16, scope: !20614)
!20619 = !DILocation(line: 1907, column: 7, scope: !20614)
!20620 = !DILocation(line: 1908, column: 9, scope: !20614)
!20621 = !DILocation(line: 1908, column: 16, scope: !20614)
!20622 = !DILocation(line: 1908, column: 7, scope: !20614)
!20623 = !DILocation(line: 1911, column: 13, scope: !20614)
!20624 = !DILocation(line: 1911, column: 24, scope: !20614)
!20625 = !DILocation(line: 1911, column: 23, scope: !20614)
!20626 = !DILocation(line: 1911, column: 27, scope: !20614)
!20627 = !DILocation(line: 1911, column: 38, scope: !20614)
!20628 = !DILocation(line: 1911, column: 37, scope: !20614)
!20629 = !DILocation(line: 1911, column: 26, scope: !20614)
!20630 = !DILocation(line: 1911, column: 41, scope: !20614)
!20631 = !DILocation(line: 1911, column: 52, scope: !20614)
!20632 = !DILocation(line: 1911, column: 51, scope: !20614)
!20633 = !DILocation(line: 1911, column: 40, scope: !20614)
!20634 = !DILocation(line: 1911, column: 5, scope: !20614)
!20635 = !DILocation(line: 1911, column: 11, scope: !20614)
!20636 = !DILocation(line: 1912, column: 13, scope: !20614)
!20637 = !DILocation(line: 1912, column: 24, scope: !20614)
!20638 = !DILocation(line: 1912, column: 23, scope: !20614)
!20639 = !DILocation(line: 1912, column: 27, scope: !20614)
!20640 = !DILocation(line: 1912, column: 38, scope: !20614)
!20641 = !DILocation(line: 1912, column: 37, scope: !20614)
!20642 = !DILocation(line: 1912, column: 26, scope: !20614)
!20643 = !DILocation(line: 1912, column: 41, scope: !20614)
!20644 = !DILocation(line: 1912, column: 52, scope: !20614)
!20645 = !DILocation(line: 1912, column: 51, scope: !20614)
!20646 = !DILocation(line: 1912, column: 40, scope: !20614)
!20647 = !DILocation(line: 1912, column: 5, scope: !20614)
!20648 = !DILocation(line: 1912, column: 11, scope: !20614)
!20649 = !DILocation(line: 1913, column: 13, scope: !20614)
!20650 = !DILocation(line: 1913, column: 24, scope: !20614)
!20651 = !DILocation(line: 1913, column: 23, scope: !20614)
!20652 = !DILocation(line: 1913, column: 27, scope: !20614)
!20653 = !DILocation(line: 1913, column: 38, scope: !20614)
!20654 = !DILocation(line: 1913, column: 37, scope: !20614)
!20655 = !DILocation(line: 1913, column: 26, scope: !20614)
!20656 = !DILocation(line: 1913, column: 41, scope: !20614)
!20657 = !DILocation(line: 1913, column: 52, scope: !20614)
!20658 = !DILocation(line: 1913, column: 51, scope: !20614)
!20659 = !DILocation(line: 1913, column: 40, scope: !20614)
!20660 = !DILocation(line: 1913, column: 5, scope: !20614)
!20661 = !DILocation(line: 1913, column: 11, scope: !20614)
!20662 = !DILocation(line: 1914, column: 18, scope: !20614)
!20663 = !DILocation(line: 1914, column: 5, scope: !20614)
!20664 = !DILocation(line: 1916, column: 16, scope: !20614)
!20665 = !DILocation(line: 1916, column: 22, scope: !20614)
!20666 = !DILocation(line: 1916, column: 5, scope: !20614)
!20667 = !DILocation(line: 1917, column: 18, scope: !20614)
!20668 = !DILocation(line: 1917, column: 5, scope: !20614)
!20669 = !DILocation(line: 1919, column: 19, scope: !20614)
!20670 = !DILocation(line: 1919, column: 24, scope: !20614)
!20671 = !DILocation(line: 1919, column: 10, scope: !20614)
!20672 = !DILocation(line: 1919, column: 8, scope: !20614)
!20673 = !DILocation(line: 1920, column: 9, scope: !20674)
!20674 = distinct !DILexicalBlock(scope: !20614, file: !3, line: 1920, column: 9)
!20675 = !DILocation(line: 1920, column: 11, scope: !20674)
!20676 = !DILocation(line: 1920, column: 9, scope: !20614)
!20677 = !DILocation(line: 1920, column: 25, scope: !20674)
!20678 = !DILocation(line: 1920, column: 19, scope: !20674)
!20679 = !DILocation(line: 1921, column: 19, scope: !20674)
!20680 = !DILocation(line: 1921, column: 22, scope: !20674)
!20681 = !DILocation(line: 1921, column: 21, scope: !20674)
!20682 = !DILocation(line: 1921, column: 25, scope: !20674)
!20683 = !DILocation(line: 1921, column: 24, scope: !20674)
!20684 = !DILocation(line: 1921, column: 28, scope: !20674)
!20685 = !DILocation(line: 1921, column: 27, scope: !20674)
!20686 = !DILocation(line: 1921, column: 16, scope: !20674)
!20687 = !DILocation(line: 1922, column: 4, scope: !20614)
!20688 = !DILocation(line: 1924, column: 8, scope: !20689)
!20689 = distinct !DILexicalBlock(scope: !20598, file: !3, line: 1924, column: 8)
!20690 = !DILocation(line: 1924, column: 8, scope: !20598)
!20691 = !DILocation(line: 1924, column: 31, scope: !20689)
!20692 = !DILocation(line: 1924, column: 35, scope: !20689)
!20693 = !DILocation(line: 1924, column: 40, scope: !20689)
!20694 = !DILocation(line: 1924, column: 44, scope: !20689)
!20695 = !DILocation(line: 1924, column: 55, scope: !20689)
!20696 = !DILocation(line: 1924, column: 61, scope: !20689)
!20697 = !DILocation(line: 1924, column: 74, scope: !20689)
!20698 = !DILocation(line: 1924, column: 19, scope: !20689)
!20699 = !DILocation(line: 1924, column: 17, scope: !20689)
!20700 = !DILocation(line: 1924, column: 14, scope: !20689)
!20701 = !DILocation(line: 1925, column: 26, scope: !20689)
!20702 = !DILocation(line: 1925, column: 30, scope: !20689)
!20703 = !DILocation(line: 1925, column: 35, scope: !20689)
!20704 = !DILocation(line: 1925, column: 39, scope: !20689)
!20705 = !DILocation(line: 1925, column: 50, scope: !20689)
!20706 = !DILocation(line: 1925, column: 57, scope: !20689)
!20707 = !DILocation(line: 1925, column: 61, scope: !20689)
!20708 = !DILocation(line: 1925, column: 74, scope: !20689)
!20709 = !DILocation(line: 1925, column: 14, scope: !20689)
!20710 = !DILocation(line: 1925, column: 12, scope: !20689)
!20711 = !DILocation(line: 1926, column: 8, scope: !20712)
!20712 = distinct !DILexicalBlock(scope: !20598, file: !3, line: 1926, column: 8)
!20713 = !DILocation(line: 1926, column: 8, scope: !20598)
!20714 = !DILocation(line: 1926, column: 23, scope: !20712)
!20715 = !DILocation(line: 1926, column: 27, scope: !20712)
!20716 = !DILocation(line: 1926, column: 13, scope: !20712)
!20717 = !DILocation(line: 1926, column: 18, scope: !20712)
!20718 = !DILocation(line: 1926, column: 21, scope: !20712)
!20719 = !DILocation(line: 1927, column: 3, scope: !20598)
!20720 = !DILocation(line: 1928, column: 7, scope: !20721)
!20721 = distinct !DILexicalBlock(scope: !20593, file: !3, line: 1928, column: 7)
!20722 = !DILocation(line: 1928, column: 7, scope: !20593)
!20723 = !DILocation(line: 1928, column: 17, scope: !20721)
!20724 = !DILocation(line: 1928, column: 13, scope: !20721)
!20725 = !DILocation(line: 1929, column: 7, scope: !20593)
!20726 = !DILocation(line: 1930, column: 2, scope: !20593)
!20727 = !DILocation(line: 1896, column: 24, scope: !20588)
!20728 = !DILocation(line: 1896, column: 33, scope: !20588)
!20729 = !DILocation(line: 1896, column: 2, scope: !20588)
!20730 = distinct !{!20730, !20591, !20731}
!20731 = !DILocation(line: 1930, column: 2, scope: !20585)
!20732 = !DILocation(line: 1931, column: 1, scope: !20522)
!20733 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !4629, file: !4629, line: 835, type: !20734, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20734 = !DISubroutineType(types: !20735)
!20735 = !{null, !44, !2418}
!20736 = !DILocalVariable(name: "out", arg: 1, scope: !20733, file: !4629, line: 835, type: !44)
!20737 = !DILocation(line: 835, column: 45, scope: !20733)
!20738 = !DILocalVariable(name: "in", arg: 2, scope: !20733, file: !4629, line: 835, type: !2418)
!20739 = !DILocation(line: 835, column: 65, scope: !20733)
!20740 = !DILocation(line: 837, column: 11, scope: !20733)
!20741 = !DILocation(line: 837, column: 17, scope: !20733)
!20742 = !DILocation(line: 837, column: 2, scope: !20733)
!20743 = !DILocation(line: 837, column: 9, scope: !20733)
!20744 = !DILocation(line: 838, column: 11, scope: !20733)
!20745 = !DILocation(line: 838, column: 17, scope: !20733)
!20746 = !DILocation(line: 838, column: 2, scope: !20733)
!20747 = !DILocation(line: 838, column: 9, scope: !20733)
!20748 = !DILocation(line: 839, column: 11, scope: !20733)
!20749 = !DILocation(line: 839, column: 17, scope: !20733)
!20750 = !DILocation(line: 839, column: 2, scope: !20733)
!20751 = !DILocation(line: 839, column: 9, scope: !20733)
!20752 = !DILocation(line: 840, column: 1, scope: !20733)
!20753 = distinct !DISubprogram(name: "negate_v3", scope: !4629, file: !4629, line: 576, type: !8169, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20754 = !DILocalVariable(name: "r", arg: 1, scope: !20753, file: !4629, line: 576, type: !44)
!20755 = !DILocation(line: 576, column: 30, scope: !20753)
!20756 = !DILocation(line: 578, column: 10, scope: !20753)
!20757 = !DILocation(line: 578, column: 9, scope: !20753)
!20758 = !DILocation(line: 578, column: 2, scope: !20753)
!20759 = !DILocation(line: 578, column: 7, scope: !20753)
!20760 = !DILocation(line: 579, column: 10, scope: !20753)
!20761 = !DILocation(line: 579, column: 9, scope: !20753)
!20762 = !DILocation(line: 579, column: 2, scope: !20753)
!20763 = !DILocation(line: 579, column: 7, scope: !20753)
!20764 = !DILocation(line: 580, column: 10, scope: !20753)
!20765 = !DILocation(line: 580, column: 9, scope: !20753)
!20766 = !DILocation(line: 580, column: 2, scope: !20753)
!20767 = !DILocation(line: 580, column: 7, scope: !20753)
!20768 = !DILocation(line: 581, column: 1, scope: !20753)
!20769 = distinct !DISubprogram(name: "copy_v4_v4", scope: !4629, file: !4629, line: 71, type: !4630, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20770 = !DILocalVariable(name: "r", arg: 1, scope: !20769, file: !4629, line: 71, type: !44)
!20771 = !DILocation(line: 71, column: 31, scope: !20769)
!20772 = !DILocalVariable(name: "a", arg: 2, scope: !20769, file: !4629, line: 71, type: !2417)
!20773 = !DILocation(line: 71, column: 49, scope: !20769)
!20774 = !DILocation(line: 73, column: 9, scope: !20769)
!20775 = !DILocation(line: 73, column: 2, scope: !20769)
!20776 = !DILocation(line: 73, column: 7, scope: !20769)
!20777 = !DILocation(line: 74, column: 9, scope: !20769)
!20778 = !DILocation(line: 74, column: 2, scope: !20769)
!20779 = !DILocation(line: 74, column: 7, scope: !20769)
!20780 = !DILocation(line: 75, column: 9, scope: !20769)
!20781 = !DILocation(line: 75, column: 2, scope: !20769)
!20782 = !DILocation(line: 75, column: 7, scope: !20769)
!20783 = !DILocation(line: 76, column: 9, scope: !20769)
!20784 = !DILocation(line: 76, column: 2, scope: !20769)
!20785 = !DILocation(line: 76, column: 7, scope: !20769)
!20786 = !DILocation(line: 77, column: 1, scope: !20769)
!20787 = distinct !DISubprogram(name: "copy_v3_v3_short", scope: !4629, file: !4629, line: 136, type: !20788, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20788 = !DISubroutineType(types: !20789)
!20789 = !{null, !2159, !2418}
!20790 = !DILocalVariable(name: "r", arg: 1, scope: !20787, file: !4629, line: 136, type: !2159)
!20791 = !DILocation(line: 136, column: 37, scope: !20787)
!20792 = !DILocalVariable(name: "a", arg: 2, scope: !20787, file: !4629, line: 136, type: !2418)
!20793 = !DILocation(line: 136, column: 55, scope: !20787)
!20794 = !DILocation(line: 138, column: 9, scope: !20787)
!20795 = !DILocation(line: 138, column: 2, scope: !20787)
!20796 = !DILocation(line: 138, column: 7, scope: !20787)
!20797 = !DILocation(line: 139, column: 9, scope: !20787)
!20798 = !DILocation(line: 139, column: 2, scope: !20787)
!20799 = !DILocation(line: 139, column: 7, scope: !20787)
!20800 = !DILocation(line: 140, column: 9, scope: !20787)
!20801 = !DILocation(line: 140, column: 2, scope: !20787)
!20802 = !DILocation(line: 140, column: 7, scope: !20787)
!20803 = !DILocation(line: 141, column: 1, scope: !20787)
!20804 = distinct !DISubprogram(name: "make_mesh_edge_lookup", scope: !3, file: !3, line: 2916, type: !20805, scopeLine: 2917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20805 = !DISubroutineType(types: !20806)
!20806 = !{!15317, !2263, !42}
!20807 = !DILocalVariable(name: "dm", arg: 1, scope: !20804, file: !3, line: 2916, type: !2263)
!20808 = !DILocation(line: 2916, column: 60, scope: !20804)
!20809 = !DILocalVariable(name: "totedgesort", arg: 2, scope: !20804, file: !3, line: 2916, type: !42)
!20810 = !DILocation(line: 2916, column: 69, scope: !20804)
!20811 = !DILocalVariable(name: "mf", scope: !20804, file: !3, line: 2918, type: !14191)
!20812 = !DILocation(line: 2918, column: 9, scope: !20804)
!20813 = !DILocalVariable(name: "mface", scope: !20804, file: !3, line: 2918, type: !14191)
!20814 = !DILocation(line: 2918, column: 14, scope: !20804)
!20815 = !DILocalVariable(name: "tface", scope: !20804, file: !3, line: 2919, type: !4145)
!20816 = !DILocation(line: 2919, column: 10, scope: !20804)
!20817 = !DILocalVariable(name: "edsort", scope: !20804, file: !3, line: 2920, type: !15317)
!20818 = !DILocation(line: 2920, column: 19, scope: !20804)
!20819 = !DILocalVariable(name: "ed", scope: !20804, file: !3, line: 2920, type: !15317)
!20820 = !DILocation(line: 2920, column: 28, scope: !20804)
!20821 = !DILocalVariable(name: "mcol", scope: !20804, file: !3, line: 2921, type: !670)
!20822 = !DILocation(line: 2921, column: 16, scope: !20804)
!20823 = !DILocalVariable(name: "a", scope: !20804, file: !3, line: 2922, type: !21)
!20824 = !DILocation(line: 2922, column: 6, scope: !20804)
!20825 = !DILocalVariable(name: "totedge", scope: !20804, file: !3, line: 2922, type: !21)
!20826 = !DILocation(line: 2922, column: 9, scope: !20804)
!20827 = !DILocalVariable(name: "totface", scope: !20804, file: !3, line: 2922, type: !21)
!20828 = !DILocation(line: 2922, column: 20, scope: !20804)
!20829 = !DILocation(line: 2924, column: 9, scope: !20804)
!20830 = !DILocation(line: 2924, column: 13, scope: !20804)
!20831 = !DILocation(line: 2924, column: 30, scope: !20804)
!20832 = !DILocation(line: 2924, column: 7, scope: !20804)
!20833 = !DILocation(line: 2925, column: 11, scope: !20804)
!20834 = !DILocation(line: 2925, column: 15, scope: !20804)
!20835 = !DILocation(line: 2925, column: 31, scope: !20804)
!20836 = !DILocation(line: 2925, column: 9, scope: !20804)
!20837 = !DILocation(line: 2926, column: 9, scope: !20804)
!20838 = !DILocation(line: 2926, column: 13, scope: !20804)
!20839 = !DILocation(line: 2926, column: 34, scope: !20804)
!20840 = !DILocation(line: 2926, column: 7, scope: !20804)
!20841 = !DILocation(line: 2927, column: 8, scope: !20804)
!20842 = !DILocation(line: 2927, column: 12, scope: !20804)
!20843 = !DILocation(line: 2927, column: 33, scope: !20804)
!20844 = !DILocation(line: 2927, column: 6, scope: !20804)
!20845 = !DILocation(line: 2929, column: 6, scope: !20846)
!20846 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 2929, column: 6)
!20847 = !DILocation(line: 2929, column: 10, scope: !20846)
!20848 = !DILocation(line: 2929, column: 17, scope: !20846)
!20849 = !DILocation(line: 2929, column: 20, scope: !20846)
!20850 = !DILocation(line: 2929, column: 25, scope: !20846)
!20851 = !DILocation(line: 2929, column: 6, scope: !20804)
!20852 = !DILocation(line: 2929, column: 33, scope: !20846)
!20853 = !DILocation(line: 2932, column: 10, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 2932, column: 2)
!20855 = !DILocation(line: 2932, column: 8, scope: !20854)
!20856 = !DILocation(line: 2932, column: 23, scope: !20854)
!20857 = !DILocation(line: 2932, column: 21, scope: !20854)
!20858 = !DILocation(line: 2932, column: 7, scope: !20854)
!20859 = !DILocation(line: 2932, column: 30, scope: !20860)
!20860 = distinct !DILexicalBlock(scope: !20854, file: !3, line: 2932, column: 2)
!20861 = !DILocation(line: 2932, column: 31, scope: !20860)
!20862 = !DILocation(line: 2932, column: 2, scope: !20854)
!20863 = !DILocation(line: 2933, column: 14, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20860, file: !3, line: 2932, column: 46)
!20865 = !DILocation(line: 2933, column: 18, scope: !20864)
!20866 = !DILocation(line: 2933, column: 11, scope: !20864)
!20867 = !DILocation(line: 2934, column: 2, scope: !20864)
!20868 = !DILocation(line: 2932, column: 36, scope: !20860)
!20869 = !DILocation(line: 2932, column: 42, scope: !20860)
!20870 = !DILocation(line: 2932, column: 2, scope: !20860)
!20871 = distinct !{!20871, !20862, !20872}
!20872 = !DILocation(line: 2934, column: 2, scope: !20854)
!20873 = !DILocation(line: 2936, column: 6, scope: !20874)
!20874 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 2936, column: 6)
!20875 = !DILocation(line: 2936, column: 13, scope: !20874)
!20876 = !DILocation(line: 2936, column: 6, scope: !20804)
!20877 = !DILocation(line: 2937, column: 3, scope: !20874)
!20878 = !DILocation(line: 2939, column: 14, scope: !20804)
!20879 = !DILocation(line: 2939, column: 26, scope: !20804)
!20880 = !DILocation(line: 2939, column: 33, scope: !20804)
!20881 = !DILocation(line: 2939, column: 12, scope: !20804)
!20882 = !DILocation(line: 2939, column: 4, scope: !20804)
!20883 = !DILocation(line: 2941, column: 8, scope: !20884)
!20884 = distinct !DILexicalBlock(scope: !20804, file: !3, line: 2941, column: 2)
!20885 = !DILocation(line: 2941, column: 15, scope: !20884)
!20886 = !DILocation(line: 2941, column: 14, scope: !20884)
!20887 = !DILocation(line: 2941, column: 7, scope: !20884)
!20888 = !DILocation(line: 2941, column: 22, scope: !20889)
!20889 = distinct !DILexicalBlock(scope: !20884, file: !3, line: 2941, column: 2)
!20890 = !DILocation(line: 2941, column: 24, scope: !20889)
!20891 = !DILocation(line: 2941, column: 23, scope: !20889)
!20892 = !DILocation(line: 2941, column: 2, scope: !20884)
!20893 = !DILocation(line: 2942, column: 17, scope: !20894)
!20894 = distinct !DILexicalBlock(scope: !20889, file: !3, line: 2941, column: 44)
!20895 = !DILocation(line: 2942, column: 27, scope: !20894)
!20896 = !DILocation(line: 2942, column: 31, scope: !20894)
!20897 = !DILocation(line: 2942, column: 35, scope: !20894)
!20898 = !DILocation(line: 2942, column: 39, scope: !20894)
!20899 = !DILocation(line: 2942, column: 43, scope: !20894)
!20900 = !DILocation(line: 2942, column: 3, scope: !20894)
!20901 = !DILocation(line: 2943, column: 17, scope: !20894)
!20902 = !DILocation(line: 2943, column: 27, scope: !20894)
!20903 = !DILocation(line: 2943, column: 31, scope: !20894)
!20904 = !DILocation(line: 2943, column: 35, scope: !20894)
!20905 = !DILocation(line: 2943, column: 39, scope: !20894)
!20906 = !DILocation(line: 2943, column: 43, scope: !20894)
!20907 = !DILocation(line: 2943, column: 3, scope: !20894)
!20908 = !DILocation(line: 2944, column: 7, scope: !20909)
!20909 = distinct !DILexicalBlock(scope: !20894, file: !3, line: 2944, column: 7)
!20910 = !DILocation(line: 2944, column: 11, scope: !20909)
!20911 = !DILocation(line: 2944, column: 7, scope: !20894)
!20912 = !DILocation(line: 2945, column: 18, scope: !20913)
!20913 = distinct !DILexicalBlock(scope: !20909, file: !3, line: 2944, column: 15)
!20914 = !DILocation(line: 2945, column: 28, scope: !20913)
!20915 = !DILocation(line: 2945, column: 32, scope: !20913)
!20916 = !DILocation(line: 2945, column: 36, scope: !20913)
!20917 = !DILocation(line: 2945, column: 40, scope: !20913)
!20918 = !DILocation(line: 2945, column: 44, scope: !20913)
!20919 = !DILocation(line: 2945, column: 4, scope: !20913)
!20920 = !DILocation(line: 2946, column: 18, scope: !20913)
!20921 = !DILocation(line: 2946, column: 28, scope: !20913)
!20922 = !DILocation(line: 2946, column: 32, scope: !20913)
!20923 = !DILocation(line: 2946, column: 36, scope: !20913)
!20924 = !DILocation(line: 2946, column: 40, scope: !20913)
!20925 = !DILocation(line: 2946, column: 44, scope: !20913)
!20926 = !DILocation(line: 2946, column: 4, scope: !20913)
!20927 = !DILocation(line: 2947, column: 3, scope: !20913)
!20928 = !DILocation(line: 2949, column: 18, scope: !20929)
!20929 = distinct !DILexicalBlock(scope: !20909, file: !3, line: 2948, column: 8)
!20930 = !DILocation(line: 2949, column: 28, scope: !20929)
!20931 = !DILocation(line: 2949, column: 32, scope: !20929)
!20932 = !DILocation(line: 2949, column: 36, scope: !20929)
!20933 = !DILocation(line: 2949, column: 40, scope: !20929)
!20934 = !DILocation(line: 2949, column: 44, scope: !20929)
!20935 = !DILocation(line: 2949, column: 4, scope: !20929)
!20936 = !DILocation(line: 2951, column: 2, scope: !20894)
!20937 = !DILocation(line: 2941, column: 34, scope: !20889)
!20938 = !DILocation(line: 2941, column: 40, scope: !20889)
!20939 = !DILocation(line: 2941, column: 2, scope: !20889)
!20940 = distinct !{!20940, !20892, !20941}
!20941 = !DILocation(line: 2951, column: 2, scope: !20884)
!20942 = !DILocation(line: 2953, column: 8, scope: !20804)
!20943 = !DILocation(line: 2953, column: 16, scope: !20804)
!20944 = !DILocation(line: 2953, column: 2, scope: !20804)
!20945 = !DILocation(line: 2955, column: 16, scope: !20804)
!20946 = !DILocation(line: 2955, column: 3, scope: !20804)
!20947 = !DILocation(line: 2955, column: 14, scope: !20804)
!20948 = !DILocation(line: 2957, column: 9, scope: !20804)
!20949 = !DILocation(line: 2957, column: 2, scope: !20804)
!20950 = !DILocation(line: 2958, column: 1, scope: !20804)
!20951 = distinct !DISubprogram(name: "use_mesh_edge_lookup", scope: !3, file: !3, line: 2960, type: !20952, scopeLine: 2961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!20952 = !DISubroutineType(types: !20953)
!20953 = !{null, !3063, !2263, !15313, !13020, !15317, !21}
!20954 = !DILocalVariable(name: "obr", arg: 1, scope: !20951, file: !3, line: 2960, type: !3063)
!20955 = !DILocation(line: 2960, column: 45, scope: !20951)
!20956 = !DILocalVariable(name: "dm", arg: 2, scope: !20951, file: !3, line: 2960, type: !2263)
!20957 = !DILocation(line: 2960, column: 63, scope: !20951)
!20958 = !DILocalVariable(name: "medge", arg: 3, scope: !20951, file: !3, line: 2960, type: !15313)
!20959 = !DILocation(line: 2960, column: 74, scope: !20951)
!20960 = !DILocalVariable(name: "vlr", arg: 4, scope: !20951, file: !3, line: 2960, type: !13020)
!20961 = !DILocation(line: 2960, column: 90, scope: !20951)
!20962 = !DILocalVariable(name: "edgetable", arg: 5, scope: !20951, file: !3, line: 2960, type: !15317)
!20963 = !DILocation(line: 2960, column: 112, scope: !20951)
!20964 = !DILocalVariable(name: "totedge", arg: 6, scope: !20951, file: !3, line: 2960, type: !21)
!20965 = !DILocation(line: 2960, column: 127, scope: !20951)
!20966 = !DILocalVariable(name: "ed", scope: !20951, file: !3, line: 2962, type: !15318)
!20967 = !DILocation(line: 2962, column: 18, scope: !20951)
!20968 = !DILocalVariable(name: "edp", scope: !20951, file: !3, line: 2962, type: !15317)
!20969 = !DILocation(line: 2962, column: 23, scope: !20951)
!20970 = !DILocalVariable(name: "layer", scope: !20951, file: !3, line: 2963, type: !2083)
!20971 = !DILocation(line: 2963, column: 19, scope: !20951)
!20972 = !DILocalVariable(name: "mtface", scope: !20951, file: !3, line: 2964, type: !4145)
!20973 = !DILocation(line: 2964, column: 10, scope: !20951)
!20974 = !DILocalVariable(name: "mtf", scope: !20951, file: !3, line: 2964, type: !4145)
!20975 = !DILocation(line: 2964, column: 19, scope: !20951)
!20976 = !DILocalVariable(name: "mcol", scope: !20951, file: !3, line: 2965, type: !4147)
!20977 = !DILocation(line: 2965, column: 8, scope: !20951)
!20978 = !DILocalVariable(name: "mc", scope: !20951, file: !3, line: 2965, type: !4147)
!20979 = !DILocation(line: 2965, column: 15, scope: !20951)
!20980 = !DILocalVariable(name: "index", scope: !20951, file: !3, line: 2966, type: !21)
!20981 = !DILocation(line: 2966, column: 6, scope: !20951)
!20982 = !DILocalVariable(name: "mtfn", scope: !20951, file: !3, line: 2966, type: !21)
!20983 = !DILocation(line: 2966, column: 13, scope: !20951)
!20984 = !DILocalVariable(name: "mcn", scope: !20951, file: !3, line: 2966, type: !21)
!20985 = !DILocation(line: 2966, column: 19, scope: !20951)
!20986 = !DILocalVariable(name: "name", scope: !20951, file: !3, line: 2967, type: !444)
!20987 = !DILocation(line: 2967, column: 8, scope: !20951)
!20988 = !DILocation(line: 2969, column: 6, scope: !20989)
!20989 = distinct !DILexicalBlock(scope: !20951, file: !3, line: 2969, column: 6)
!20990 = !DILocation(line: 2969, column: 13, scope: !20989)
!20991 = !DILocation(line: 2969, column: 18, scope: !20989)
!20992 = !DILocation(line: 2969, column: 25, scope: !20989)
!20993 = !DILocation(line: 2969, column: 16, scope: !20989)
!20994 = !DILocation(line: 2969, column: 6, scope: !20951)
!20995 = !DILocation(line: 2970, column: 10, scope: !20996)
!20996 = distinct !DILexicalBlock(scope: !20989, file: !3, line: 2969, column: 29)
!20997 = !DILocation(line: 2970, column: 17, scope: !20996)
!20998 = !DILocation(line: 2970, column: 6, scope: !20996)
!20999 = !DILocation(line: 2970, column: 8, scope: !20996)
!21000 = !DILocation(line: 2971, column: 10, scope: !20996)
!21001 = !DILocation(line: 2971, column: 17, scope: !20996)
!21002 = !DILocation(line: 2971, column: 6, scope: !20996)
!21003 = !DILocation(line: 2971, column: 8, scope: !20996)
!21004 = !DILocation(line: 2972, column: 2, scope: !20996)
!21005 = !DILocation(line: 2974, column: 10, scope: !21006)
!21006 = distinct !DILexicalBlock(scope: !20989, file: !3, line: 2973, column: 7)
!21007 = !DILocation(line: 2974, column: 17, scope: !21006)
!21008 = !DILocation(line: 2974, column: 6, scope: !21006)
!21009 = !DILocation(line: 2974, column: 8, scope: !21006)
!21010 = !DILocation(line: 2975, column: 10, scope: !21006)
!21011 = !DILocation(line: 2975, column: 17, scope: !21006)
!21012 = !DILocation(line: 2975, column: 6, scope: !21006)
!21013 = !DILocation(line: 2975, column: 8, scope: !21006)
!21014 = !DILocation(line: 2978, column: 15, scope: !20951)
!21015 = !DILocation(line: 2978, column: 20, scope: !20951)
!21016 = !DILocation(line: 2978, column: 31, scope: !20951)
!21017 = !DILocation(line: 2978, column: 7, scope: !20951)
!21018 = !DILocation(line: 2978, column: 5, scope: !20951)
!21019 = !DILocation(line: 2981, column: 6, scope: !21020)
!21020 = distinct !DILexicalBlock(scope: !20951, file: !3, line: 2981, column: 6)
!21021 = !DILocation(line: 2981, column: 6, scope: !20951)
!21022 = !DILocation(line: 2982, column: 12, scope: !21023)
!21023 = distinct !DILexicalBlock(scope: !21020, file: !3, line: 2981, column: 11)
!21024 = !DILocation(line: 2982, column: 7, scope: !21023)
!21025 = !DILocation(line: 2984, column: 13, scope: !21026)
!21026 = distinct !DILexicalBlock(scope: !21023, file: !3, line: 2984, column: 3)
!21027 = !DILocation(line: 2984, column: 8, scope: !21026)
!21028 = !DILocation(line: 2984, column: 17, scope: !21029)
!21029 = distinct !DILexicalBlock(scope: !21026, file: !3, line: 2984, column: 3)
!21030 = !DILocation(line: 2984, column: 23, scope: !21029)
!21031 = !DILocation(line: 2984, column: 27, scope: !21029)
!21032 = !DILocation(line: 2984, column: 36, scope: !21029)
!21033 = !DILocation(line: 2984, column: 22, scope: !21029)
!21034 = !DILocation(line: 2984, column: 3, scope: !21026)
!21035 = !DILocation(line: 2985, column: 12, scope: !21036)
!21036 = distinct !DILexicalBlock(scope: !21029, file: !3, line: 2984, column: 55)
!21037 = !DILocation(line: 2985, column: 16, scope: !21036)
!21038 = !DILocation(line: 2985, column: 25, scope: !21036)
!21039 = !DILocation(line: 2985, column: 32, scope: !21036)
!21040 = !DILocation(line: 2985, column: 9, scope: !21036)
!21041 = !DILocation(line: 2986, column: 10, scope: !21036)
!21042 = !DILocation(line: 2986, column: 17, scope: !21036)
!21043 = !DILocation(line: 2986, column: 8, scope: !21036)
!21044 = !DILocation(line: 2988, column: 8, scope: !21045)
!21045 = distinct !DILexicalBlock(scope: !21036, file: !3, line: 2988, column: 8)
!21046 = !DILocation(line: 2988, column: 15, scope: !21045)
!21047 = !DILocation(line: 2988, column: 20, scope: !21045)
!21048 = !DILocation(line: 2988, column: 33, scope: !21045)
!21049 = !DILocation(line: 2988, column: 36, scope: !21045)
!21050 = !DILocation(line: 2988, column: 41, scope: !21045)
!21051 = !DILocation(line: 2988, column: 8, scope: !21036)
!21052 = !DILocation(line: 2989, column: 24, scope: !21053)
!21053 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 2988, column: 55)
!21054 = !DILocation(line: 2989, column: 31, scope: !21053)
!21055 = !DILocation(line: 2989, column: 15, scope: !21053)
!21056 = !DILocation(line: 2989, column: 37, scope: !21053)
!21057 = !DILocation(line: 2989, column: 42, scope: !21053)
!21058 = !DILocation(line: 2989, column: 14, scope: !21053)
!21059 = !DILocation(line: 2989, column: 11, scope: !21053)
!21060 = !DILocation(line: 2990, column: 31, scope: !21053)
!21061 = !DILocation(line: 2990, column: 36, scope: !21053)
!21062 = !DILocation(line: 2990, column: 45, scope: !21053)
!21063 = !DILocation(line: 2990, column: 10, scope: !21053)
!21064 = !DILocation(line: 2990, column: 8, scope: !21053)
!21065 = !DILocation(line: 2992, column: 6, scope: !21053)
!21066 = !DILocation(line: 2992, column: 12, scope: !21053)
!21067 = !DILocation(line: 2992, column: 11, scope: !21053)
!21068 = !DILocation(line: 2994, column: 12, scope: !21053)
!21069 = !DILocation(line: 2994, column: 17, scope: !21053)
!21070 = !DILocation(line: 2994, column: 5, scope: !21053)
!21071 = !DILocation(line: 2994, column: 24, scope: !21053)
!21072 = !DILocation(line: 2994, column: 32, scope: !21053)
!21073 = !DILocation(line: 2994, column: 35, scope: !21053)
!21074 = !DILocation(line: 2994, column: 40, scope: !21053)
!21075 = !DILocation(line: 2995, column: 12, scope: !21053)
!21076 = !DILocation(line: 2995, column: 17, scope: !21053)
!21077 = !DILocation(line: 2995, column: 5, scope: !21053)
!21078 = !DILocation(line: 2995, column: 24, scope: !21053)
!21079 = !DILocation(line: 2995, column: 32, scope: !21053)
!21080 = !DILocation(line: 2995, column: 35, scope: !21053)
!21081 = !DILocation(line: 2995, column: 40, scope: !21053)
!21082 = !DILocation(line: 2996, column: 12, scope: !21053)
!21083 = !DILocation(line: 2996, column: 17, scope: !21053)
!21084 = !DILocation(line: 2996, column: 5, scope: !21053)
!21085 = !DILocation(line: 2996, column: 24, scope: !21053)
!21086 = !DILocation(line: 2996, column: 32, scope: !21053)
!21087 = !DILocation(line: 2997, column: 12, scope: !21053)
!21088 = !DILocation(line: 2997, column: 17, scope: !21053)
!21089 = !DILocation(line: 2997, column: 5, scope: !21053)
!21090 = !DILocation(line: 2997, column: 24, scope: !21053)
!21091 = !DILocation(line: 2997, column: 32, scope: !21053)
!21092 = !DILocation(line: 2998, column: 4, scope: !21053)
!21093 = !DILocation(line: 2999, column: 13, scope: !21094)
!21094 = distinct !DILexicalBlock(scope: !21045, file: !3, line: 2999, column: 13)
!21095 = !DILocation(line: 2999, column: 20, scope: !21094)
!21096 = !DILocation(line: 2999, column: 25, scope: !21094)
!21097 = !DILocation(line: 2999, column: 36, scope: !21094)
!21098 = !DILocation(line: 2999, column: 39, scope: !21094)
!21099 = !DILocation(line: 2999, column: 43, scope: !21094)
!21100 = !DILocation(line: 2999, column: 13, scope: !21045)
!21101 = !DILocation(line: 3000, column: 20, scope: !21102)
!21102 = distinct !DILexicalBlock(scope: !21094, file: !3, line: 2999, column: 55)
!21103 = !DILocation(line: 3000, column: 27, scope: !21102)
!21104 = !DILocation(line: 3000, column: 13, scope: !21102)
!21105 = !DILocation(line: 3000, column: 33, scope: !21102)
!21106 = !DILocation(line: 3000, column: 38, scope: !21102)
!21107 = !DILocation(line: 3000, column: 39, scope: !21102)
!21108 = !DILocation(line: 3000, column: 12, scope: !21102)
!21109 = !DILocation(line: 3000, column: 9, scope: !21102)
!21110 = !DILocation(line: 3001, column: 29, scope: !21102)
!21111 = !DILocation(line: 3001, column: 34, scope: !21102)
!21112 = !DILocation(line: 3001, column: 42, scope: !21102)
!21113 = !DILocation(line: 3001, column: 9, scope: !21102)
!21114 = !DILocation(line: 3001, column: 7, scope: !21102)
!21115 = !DILocation(line: 3003, column: 5, scope: !21102)
!21116 = !DILocation(line: 3003, column: 12, scope: !21102)
!21117 = !DILocation(line: 3003, column: 17, scope: !21102)
!21118 = !DILocation(line: 3003, column: 22, scope: !21102)
!21119 = !DILocation(line: 3004, column: 5, scope: !21102)
!21120 = !DILocation(line: 3004, column: 12, scope: !21102)
!21121 = !DILocation(line: 3004, column: 19, scope: !21102)
!21122 = !DILocation(line: 3004, column: 26, scope: !21102)
!21123 = !DILocation(line: 3004, column: 31, scope: !21102)
!21124 = !DILocation(line: 3004, column: 36, scope: !21102)
!21125 = !DILocation(line: 3004, column: 24, scope: !21102)
!21126 = !DILocation(line: 3004, column: 17, scope: !21102)
!21127 = !DILocation(line: 3005, column: 4, scope: !21102)
!21128 = !DILocation(line: 3006, column: 3, scope: !21036)
!21129 = !DILocation(line: 2984, column: 51, scope: !21029)
!21130 = !DILocation(line: 2984, column: 3, scope: !21029)
!21131 = distinct !{!21131, !21034, !21132}
!21132 = !DILocation(line: 3006, column: 3, scope: !21026)
!21133 = !DILocation(line: 3007, column: 2, scope: !21023)
!21134 = !DILocation(line: 3008, column: 1, scope: !20951)
!21135 = distinct !DISubprogram(name: "calc_edge_stress", scope: !3, file: !3, line: 191, type: !21136, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21136 = !DISubroutineType(types: !21137)
!21137 = !{null, !6, !3063, !14185}
!21138 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !21135, file: !3, line: 191, type: !6)
!21139 = !DILocation(line: 191, column: 38, scope: !21135)
!21140 = !DILocalVariable(name: "obr", arg: 2, scope: !21135, file: !3, line: 191, type: !3063)
!21141 = !DILocation(line: 191, column: 61, scope: !21135)
!21142 = !DILocalVariable(name: "me", arg: 3, scope: !21135, file: !3, line: 191, type: !14185)
!21143 = !DILocation(line: 191, column: 72, scope: !21135)
!21144 = !DILocalVariable(name: "loc", scope: !21135, file: !3, line: 193, type: !188)
!21145 = !DILocation(line: 193, column: 8, scope: !21135)
!21146 = !DILocalVariable(name: "size", scope: !21135, file: !3, line: 193, type: !188)
!21147 = !DILocation(line: 193, column: 16, scope: !21135)
!21148 = !DILocalVariable(name: "accum", scope: !21135, file: !3, line: 193, type: !44)
!21149 = !DILocation(line: 193, column: 26, scope: !21135)
!21150 = !DILocalVariable(name: "acc", scope: !21135, file: !3, line: 193, type: !44)
!21151 = !DILocation(line: 193, column: 34, scope: !21135)
!21152 = !DILocalVariable(name: "accumoffs", scope: !21135, file: !3, line: 193, type: !44)
!21153 = !DILocation(line: 193, column: 40, scope: !21135)
!21154 = !DILocalVariable(name: "stress", scope: !21135, file: !3, line: 193, type: !44)
!21155 = !DILocation(line: 193, column: 52, scope: !21135)
!21156 = !DILocalVariable(name: "a", scope: !21135, file: !3, line: 194, type: !21)
!21157 = !DILocation(line: 194, column: 6, scope: !21135)
!21158 = !DILocation(line: 196, column: 6, scope: !21159)
!21159 = distinct !DILexicalBlock(scope: !21135, file: !3, line: 196, column: 6)
!21160 = !DILocation(line: 196, column: 11, scope: !21159)
!21161 = !DILocation(line: 196, column: 18, scope: !21159)
!21162 = !DILocation(line: 196, column: 6, scope: !21135)
!21163 = !DILocation(line: 196, column: 23, scope: !21159)
!21164 = !DILocation(line: 198, column: 24, scope: !21135)
!21165 = !DILocation(line: 198, column: 28, scope: !21135)
!21166 = !DILocation(line: 198, column: 39, scope: !21135)
!21167 = !DILocation(line: 198, column: 2, scope: !21135)
!21168 = !DILocation(line: 200, column: 9, scope: !21135)
!21169 = !DILocation(line: 200, column: 37, scope: !21135)
!21170 = !DILocation(line: 200, column: 42, scope: !21135)
!21171 = !DILocation(line: 200, column: 36, scope: !21135)
!21172 = !DILocation(line: 200, column: 7, scope: !21135)
!21173 = !DILocation(line: 203, column: 8, scope: !21174)
!21174 = distinct !DILexicalBlock(scope: !21135, file: !3, line: 203, column: 2)
!21175 = !DILocation(line: 203, column: 7, scope: !21174)
!21176 = !DILocation(line: 203, column: 12, scope: !21177)
!21177 = distinct !DILexicalBlock(scope: !21174, file: !3, line: 203, column: 2)
!21178 = !DILocation(line: 203, column: 14, scope: !21177)
!21179 = !DILocation(line: 203, column: 19, scope: !21177)
!21180 = !DILocation(line: 203, column: 13, scope: !21177)
!21181 = !DILocation(line: 203, column: 2, scope: !21174)
!21182 = !DILocalVariable(name: "ver", scope: !21183, file: !3, line: 204, type: !4179)
!21183 = distinct !DILexicalBlock(scope: !21177, file: !3, line: 203, column: 33)
!21184 = !DILocation(line: 204, column: 12, scope: !21183)
!21185 = !DILocation(line: 204, column: 34, scope: !21183)
!21186 = !DILocation(line: 204, column: 39, scope: !21183)
!21187 = !DILocation(line: 204, column: 17, scope: !21183)
!21188 = !DILocation(line: 205, column: 7, scope: !21189)
!21189 = distinct !DILexicalBlock(scope: !21183, file: !3, line: 205, column: 7)
!21190 = !DILocation(line: 205, column: 12, scope: !21189)
!21191 = !DILocation(line: 205, column: 7, scope: !21183)
!21192 = !DILocation(line: 206, column: 18, scope: !21193)
!21193 = distinct !DILexicalBlock(scope: !21189, file: !3, line: 205, column: 18)
!21194 = !DILocation(line: 206, column: 23, scope: !21193)
!21195 = !DILocation(line: 206, column: 31, scope: !21193)
!21196 = !DILocation(line: 206, column: 30, scope: !21193)
!21197 = !DILocation(line: 206, column: 40, scope: !21193)
!21198 = !DILocation(line: 206, column: 39, scope: !21193)
!21199 = !DILocation(line: 206, column: 4, scope: !21193)
!21200 = !DILocation(line: 206, column: 9, scope: !21193)
!21201 = !DILocation(line: 206, column: 16, scope: !21193)
!21202 = !DILocation(line: 207, column: 18, scope: !21193)
!21203 = !DILocation(line: 207, column: 23, scope: !21193)
!21204 = !DILocation(line: 207, column: 31, scope: !21193)
!21205 = !DILocation(line: 207, column: 30, scope: !21193)
!21206 = !DILocation(line: 207, column: 40, scope: !21193)
!21207 = !DILocation(line: 207, column: 39, scope: !21193)
!21208 = !DILocation(line: 207, column: 4, scope: !21193)
!21209 = !DILocation(line: 207, column: 9, scope: !21193)
!21210 = !DILocation(line: 207, column: 16, scope: !21193)
!21211 = !DILocation(line: 208, column: 18, scope: !21193)
!21212 = !DILocation(line: 208, column: 23, scope: !21193)
!21213 = !DILocation(line: 208, column: 31, scope: !21193)
!21214 = !DILocation(line: 208, column: 30, scope: !21193)
!21215 = !DILocation(line: 208, column: 40, scope: !21193)
!21216 = !DILocation(line: 208, column: 39, scope: !21193)
!21217 = !DILocation(line: 208, column: 4, scope: !21193)
!21218 = !DILocation(line: 208, column: 9, scope: !21193)
!21219 = !DILocation(line: 208, column: 16, scope: !21193)
!21220 = !DILocation(line: 209, column: 3, scope: !21193)
!21221 = !DILocation(line: 210, column: 2, scope: !21183)
!21222 = !DILocation(line: 203, column: 29, scope: !21177)
!21223 = !DILocation(line: 203, column: 2, scope: !21177)
!21224 = distinct !{!21224, !21181, !21225}
!21225 = !DILocation(line: 210, column: 2, scope: !21174)
!21226 = !DILocation(line: 213, column: 13, scope: !21135)
!21227 = !DILocation(line: 213, column: 11, scope: !21135)
!21228 = !DILocation(line: 214, column: 8, scope: !21229)
!21229 = distinct !DILexicalBlock(scope: !21135, file: !3, line: 214, column: 2)
!21230 = !DILocation(line: 214, column: 7, scope: !21229)
!21231 = !DILocation(line: 214, column: 12, scope: !21232)
!21232 = distinct !DILexicalBlock(scope: !21229, file: !3, line: 214, column: 2)
!21233 = !DILocation(line: 214, column: 14, scope: !21232)
!21234 = !DILocation(line: 214, column: 19, scope: !21232)
!21235 = !DILocation(line: 214, column: 13, scope: !21232)
!21236 = !DILocation(line: 214, column: 2, scope: !21229)
!21237 = !DILocalVariable(name: "vlr", scope: !21238, file: !3, line: 215, type: !13020)
!21238 = distinct !DILexicalBlock(scope: !21232, file: !3, line: 214, column: 33)
!21239 = !DILocation(line: 215, column: 12, scope: !21238)
!21240 = !DILocation(line: 215, column: 34, scope: !21238)
!21241 = !DILocation(line: 215, column: 39, scope: !21238)
!21242 = !DILocation(line: 215, column: 17, scope: !21238)
!21243 = !DILocation(line: 217, column: 7, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21238, file: !3, line: 217, column: 7)
!21245 = !DILocation(line: 217, column: 12, scope: !21244)
!21246 = !DILocation(line: 217, column: 16, scope: !21244)
!21247 = !DILocation(line: 217, column: 21, scope: !21244)
!21248 = !DILocation(line: 217, column: 24, scope: !21244)
!21249 = !DILocation(line: 217, column: 29, scope: !21244)
!21250 = !DILocation(line: 217, column: 7, scope: !21238)
!21251 = !DILocation(line: 218, column: 25, scope: !21252)
!21252 = distinct !DILexicalBlock(scope: !21244, file: !3, line: 217, column: 33)
!21253 = !DILocation(line: 218, column: 36, scope: !21252)
!21254 = !DILocation(line: 218, column: 41, scope: !21252)
!21255 = !DILocation(line: 218, column: 45, scope: !21252)
!21256 = !DILocation(line: 218, column: 50, scope: !21252)
!21257 = !DILocation(line: 218, column: 4, scope: !21252)
!21258 = !DILocation(line: 219, column: 25, scope: !21252)
!21259 = !DILocation(line: 219, column: 36, scope: !21252)
!21260 = !DILocation(line: 219, column: 41, scope: !21252)
!21261 = !DILocation(line: 219, column: 45, scope: !21252)
!21262 = !DILocation(line: 219, column: 50, scope: !21252)
!21263 = !DILocation(line: 219, column: 4, scope: !21252)
!21264 = !DILocation(line: 220, column: 25, scope: !21252)
!21265 = !DILocation(line: 220, column: 36, scope: !21252)
!21266 = !DILocation(line: 220, column: 41, scope: !21252)
!21267 = !DILocation(line: 220, column: 45, scope: !21252)
!21268 = !DILocation(line: 220, column: 50, scope: !21252)
!21269 = !DILocation(line: 220, column: 4, scope: !21252)
!21270 = !DILocation(line: 221, column: 8, scope: !21271)
!21271 = distinct !DILexicalBlock(scope: !21252, file: !3, line: 221, column: 8)
!21272 = !DILocation(line: 221, column: 13, scope: !21271)
!21273 = !DILocation(line: 221, column: 8, scope: !21252)
!21274 = !DILocation(line: 222, column: 26, scope: !21275)
!21275 = distinct !DILexicalBlock(scope: !21271, file: !3, line: 221, column: 17)
!21276 = !DILocation(line: 222, column: 37, scope: !21275)
!21277 = !DILocation(line: 222, column: 42, scope: !21275)
!21278 = !DILocation(line: 222, column: 46, scope: !21275)
!21279 = !DILocation(line: 222, column: 51, scope: !21275)
!21280 = !DILocation(line: 222, column: 5, scope: !21275)
!21281 = !DILocation(line: 223, column: 26, scope: !21275)
!21282 = !DILocation(line: 223, column: 37, scope: !21275)
!21283 = !DILocation(line: 223, column: 42, scope: !21275)
!21284 = !DILocation(line: 223, column: 46, scope: !21275)
!21285 = !DILocation(line: 223, column: 51, scope: !21275)
!21286 = !DILocation(line: 223, column: 5, scope: !21275)
!21287 = !DILocation(line: 224, column: 26, scope: !21275)
!21288 = !DILocation(line: 224, column: 37, scope: !21275)
!21289 = !DILocation(line: 224, column: 42, scope: !21275)
!21290 = !DILocation(line: 224, column: 46, scope: !21275)
!21291 = !DILocation(line: 224, column: 51, scope: !21275)
!21292 = !DILocation(line: 224, column: 5, scope: !21275)
!21293 = !DILocation(line: 225, column: 4, scope: !21275)
!21294 = !DILocation(line: 226, column: 3, scope: !21252)
!21295 = !DILocation(line: 227, column: 2, scope: !21238)
!21296 = !DILocation(line: 214, column: 29, scope: !21232)
!21297 = !DILocation(line: 214, column: 2, scope: !21232)
!21298 = distinct !{!21298, !21236, !21299}
!21299 = !DILocation(line: 227, column: 2, scope: !21229)
!21300 = !DILocation(line: 229, column: 8, scope: !21301)
!21301 = distinct !DILexicalBlock(scope: !21135, file: !3, line: 229, column: 2)
!21302 = !DILocation(line: 229, column: 7, scope: !21301)
!21303 = !DILocation(line: 229, column: 12, scope: !21304)
!21304 = distinct !DILexicalBlock(scope: !21301, file: !3, line: 229, column: 2)
!21305 = !DILocation(line: 229, column: 14, scope: !21304)
!21306 = !DILocation(line: 229, column: 19, scope: !21304)
!21307 = !DILocation(line: 229, column: 13, scope: !21304)
!21308 = !DILocation(line: 229, column: 2, scope: !21301)
!21309 = !DILocalVariable(name: "ver", scope: !21310, file: !3, line: 230, type: !4179)
!21310 = distinct !DILexicalBlock(scope: !21304, file: !3, line: 229, column: 33)
!21311 = !DILocation(line: 230, column: 12, scope: !21310)
!21312 = !DILocation(line: 230, column: 34, scope: !21310)
!21313 = !DILocation(line: 230, column: 39, scope: !21310)
!21314 = !DILocation(line: 230, column: 17, scope: !21310)
!21315 = !DILocation(line: 231, column: 7, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21310, file: !3, line: 231, column: 7)
!21317 = !DILocation(line: 231, column: 12, scope: !21316)
!21318 = !DILocation(line: 231, column: 7, scope: !21310)
!21319 = !DILocation(line: 233, column: 9, scope: !21320)
!21320 = distinct !DILexicalBlock(scope: !21316, file: !3, line: 231, column: 18)
!21321 = !DILocation(line: 233, column: 23, scope: !21320)
!21322 = !DILocation(line: 233, column: 28, scope: !21320)
!21323 = !DILocation(line: 233, column: 22, scope: !21320)
!21324 = !DILocation(line: 233, column: 19, scope: !21320)
!21325 = !DILocation(line: 233, column: 7, scope: !21320)
!21326 = !DILocation(line: 234, column: 8, scope: !21327)
!21327 = distinct !DILexicalBlock(scope: !21320, file: !3, line: 234, column: 8)
!21328 = !DILocation(line: 234, column: 14, scope: !21327)
!21329 = !DILocation(line: 234, column: 8, scope: !21320)
!21330 = !DILocation(line: 235, column: 14, scope: !21327)
!21331 = !DILocation(line: 235, column: 5, scope: !21327)
!21332 = !DILocation(line: 235, column: 11, scope: !21327)
!21333 = !DILocation(line: 236, column: 34, scope: !21320)
!21334 = !DILocation(line: 236, column: 39, scope: !21320)
!21335 = !DILocation(line: 236, column: 12, scope: !21320)
!21336 = !DILocation(line: 236, column: 10, scope: !21320)
!21337 = !DILocation(line: 237, column: 14, scope: !21320)
!21338 = !DILocation(line: 237, column: 13, scope: !21320)
!21339 = !DILocation(line: 237, column: 5, scope: !21320)
!21340 = !DILocation(line: 237, column: 11, scope: !21320)
!21341 = !DILocation(line: 240, column: 20, scope: !21320)
!21342 = !DILocation(line: 240, column: 25, scope: !21320)
!21343 = !DILocation(line: 240, column: 33, scope: !21320)
!21344 = !DILocation(line: 240, column: 32, scope: !21320)
!21345 = !DILocation(line: 240, column: 41, scope: !21320)
!21346 = !DILocation(line: 240, column: 40, scope: !21320)
!21347 = !DILocation(line: 240, column: 4, scope: !21320)
!21348 = !DILocation(line: 240, column: 9, scope: !21320)
!21349 = !DILocation(line: 240, column: 17, scope: !21320)
!21350 = !DILocation(line: 241, column: 20, scope: !21320)
!21351 = !DILocation(line: 241, column: 25, scope: !21320)
!21352 = !DILocation(line: 241, column: 33, scope: !21320)
!21353 = !DILocation(line: 241, column: 32, scope: !21320)
!21354 = !DILocation(line: 241, column: 41, scope: !21320)
!21355 = !DILocation(line: 241, column: 40, scope: !21320)
!21356 = !DILocation(line: 241, column: 4, scope: !21320)
!21357 = !DILocation(line: 241, column: 9, scope: !21320)
!21358 = !DILocation(line: 241, column: 17, scope: !21320)
!21359 = !DILocation(line: 242, column: 20, scope: !21320)
!21360 = !DILocation(line: 242, column: 25, scope: !21320)
!21361 = !DILocation(line: 242, column: 33, scope: !21320)
!21362 = !DILocation(line: 242, column: 32, scope: !21320)
!21363 = !DILocation(line: 242, column: 41, scope: !21320)
!21364 = !DILocation(line: 242, column: 40, scope: !21320)
!21365 = !DILocation(line: 242, column: 4, scope: !21320)
!21366 = !DILocation(line: 242, column: 9, scope: !21320)
!21367 = !DILocation(line: 242, column: 17, scope: !21320)
!21368 = !DILocation(line: 243, column: 3, scope: !21320)
!21369 = !DILocation(line: 244, column: 2, scope: !21310)
!21370 = !DILocation(line: 229, column: 29, scope: !21304)
!21371 = !DILocation(line: 229, column: 2, scope: !21304)
!21372 = distinct !{!21372, !21308, !21373}
!21373 = !DILocation(line: 244, column: 2, scope: !21301)
!21374 = !DILocation(line: 246, column: 2, scope: !21135)
!21375 = !DILocation(line: 246, column: 12, scope: !21135)
!21376 = !DILocation(line: 247, column: 1, scope: !21135)
!21377 = distinct !DISubprogram(name: "displace", scope: !3, file: !3, line: 2126, type: !15553, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21378 = !DILocalVariable(name: "re", arg: 1, scope: !21377, file: !3, line: 2126, type: !6)
!21379 = !DILocation(line: 2126, column: 30, scope: !21377)
!21380 = !DILocalVariable(name: "obr", arg: 2, scope: !21377, file: !3, line: 2126, type: !3063)
!21381 = !DILocation(line: 2126, column: 45, scope: !21377)
!21382 = !DILocalVariable(name: "vr", scope: !21377, file: !3, line: 2128, type: !4179)
!21383 = !DILocation(line: 2128, column: 11, scope: !21377)
!21384 = !DILocalVariable(name: "vlr", scope: !21377, file: !3, line: 2129, type: !13020)
!21385 = !DILocation(line: 2129, column: 11, scope: !21377)
!21386 = !DILocalVariable(name: "scale", scope: !21377, file: !3, line: 2131, type: !188)
!21387 = !DILocation(line: 2131, column: 8, scope: !21377)
!21388 = !DILocalVariable(name: "temp", scope: !21377, file: !3, line: 2131, type: !188)
!21389 = !DILocation(line: 2131, column: 37, scope: !21377)
!21390 = !DILocalVariable(name: "i", scope: !21377, file: !3, line: 2132, type: !21)
!21391 = !DILocation(line: 2132, column: 6, scope: !21377)
!21392 = !DILocalVariable(name: "obt", scope: !21377, file: !3, line: 2133, type: !3236)
!21393 = !DILocation(line: 2133, column: 10, scope: !21377)
!21394 = !DILocation(line: 2136, column: 6, scope: !21377)
!21395 = !DILocation(line: 2136, column: 11, scope: !21377)
!21396 = !DILocation(line: 2136, column: 5, scope: !21377)
!21397 = !DILocation(line: 2137, column: 2, scope: !21377)
!21398 = !DILocation(line: 2137, column: 9, scope: !21377)
!21399 = !DILocation(line: 2138, column: 15, scope: !21400)
!21400 = distinct !DILexicalBlock(scope: !21377, file: !3, line: 2137, column: 14)
!21401 = !DILocation(line: 2138, column: 21, scope: !21400)
!21402 = !DILocation(line: 2138, column: 26, scope: !21400)
!21403 = !DILocation(line: 2138, column: 32, scope: !21400)
!21404 = !DILocation(line: 2138, column: 37, scope: !21400)
!21405 = !DILocation(line: 2138, column: 3, scope: !21400)
!21406 = !DILocation(line: 2139, column: 13, scope: !21400)
!21407 = !DILocation(line: 2139, column: 3, scope: !21400)
!21408 = !DILocation(line: 2139, column: 11, scope: !21400)
!21409 = !DILocation(line: 2139, column: 32, scope: !21400)
!21410 = !DILocation(line: 2139, column: 22, scope: !21400)
!21411 = !DILocation(line: 2139, column: 30, scope: !21400)
!21412 = !DILocation(line: 2139, column: 51, scope: !21400)
!21413 = !DILocation(line: 2139, column: 41, scope: !21400)
!21414 = !DILocation(line: 2139, column: 49, scope: !21400)
!21415 = !DILocation(line: 2140, column: 7, scope: !21400)
!21416 = !DILocation(line: 2140, column: 12, scope: !21400)
!21417 = !DILocation(line: 2140, column: 6, scope: !21400)
!21418 = distinct !{!21418, !21397, !21419}
!21419 = !DILocation(line: 2141, column: 2, scope: !21377)
!21420 = !DILocation(line: 2144, column: 8, scope: !21421)
!21421 = distinct !DILexicalBlock(scope: !21377, file: !3, line: 2144, column: 2)
!21422 = !DILocation(line: 2144, column: 7, scope: !21421)
!21423 = !DILocation(line: 2144, column: 12, scope: !21424)
!21424 = distinct !DILexicalBlock(scope: !21421, file: !3, line: 2144, column: 2)
!21425 = !DILocation(line: 2144, column: 14, scope: !21424)
!21426 = !DILocation(line: 2144, column: 19, scope: !21424)
!21427 = !DILocation(line: 2144, column: 13, scope: !21424)
!21428 = !DILocation(line: 2144, column: 2, scope: !21421)
!21429 = !DILocation(line: 2145, column: 24, scope: !21430)
!21430 = distinct !DILexicalBlock(scope: !21424, file: !3, line: 2144, column: 33)
!21431 = !DILocation(line: 2145, column: 29, scope: !21430)
!21432 = !DILocation(line: 2145, column: 7, scope: !21430)
!21433 = !DILocation(line: 2145, column: 5, scope: !21430)
!21434 = !DILocation(line: 2146, column: 3, scope: !21430)
!21435 = !DILocation(line: 2146, column: 7, scope: !21430)
!21436 = !DILocation(line: 2146, column: 11, scope: !21430)
!21437 = !DILocation(line: 2147, column: 2, scope: !21430)
!21438 = !DILocation(line: 2144, column: 29, scope: !21424)
!21439 = !DILocation(line: 2144, column: 2, scope: !21424)
!21440 = distinct !{!21440, !21428, !21441}
!21441 = !DILocation(line: 2147, column: 2, scope: !21421)
!21442 = !DILocation(line: 2149, column: 8, scope: !21443)
!21443 = distinct !DILexicalBlock(scope: !21377, file: !3, line: 2149, column: 2)
!21444 = !DILocation(line: 2149, column: 7, scope: !21443)
!21445 = !DILocation(line: 2149, column: 12, scope: !21446)
!21446 = distinct !DILexicalBlock(scope: !21443, file: !3, line: 2149, column: 2)
!21447 = !DILocation(line: 2149, column: 14, scope: !21446)
!21448 = !DILocation(line: 2149, column: 19, scope: !21446)
!21449 = !DILocation(line: 2149, column: 13, scope: !21446)
!21450 = !DILocation(line: 2149, column: 2, scope: !21443)
!21451 = !DILocation(line: 2150, column: 24, scope: !21452)
!21452 = distinct !DILexicalBlock(scope: !21446, file: !3, line: 2149, column: 33)
!21453 = !DILocation(line: 2150, column: 29, scope: !21452)
!21454 = !DILocation(line: 2150, column: 7, scope: !21452)
!21455 = !DILocation(line: 2150, column: 6, scope: !21452)
!21456 = !DILocation(line: 2151, column: 24, scope: !21452)
!21457 = !DILocation(line: 2151, column: 28, scope: !21452)
!21458 = !DILocation(line: 2151, column: 33, scope: !21452)
!21459 = !DILocation(line: 2151, column: 38, scope: !21452)
!21460 = !DILocation(line: 2151, column: 3, scope: !21452)
!21461 = !DILocation(line: 2152, column: 2, scope: !21452)
!21462 = !DILocation(line: 2149, column: 29, scope: !21446)
!21463 = !DILocation(line: 2149, column: 2, scope: !21446)
!21464 = distinct !{!21464, !21450, !21465}
!21465 = !DILocation(line: 2152, column: 2, scope: !21443)
!21466 = !DILocation(line: 2155, column: 21, scope: !21377)
!21467 = !DILocation(line: 2155, column: 25, scope: !21377)
!21468 = !DILocation(line: 2155, column: 2, scope: !21377)
!21469 = !DILocation(line: 2156, column: 1, scope: !21377)
!21470 = distinct !DISubprogram(name: "autosmooth", scope: !3, file: !3, line: 577, type: !21471, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21471 = !DISubroutineType(types: !21472)
!21472 = !{null, !6, !3063, !2482, !14219}
!21473 = !DILocalVariable(name: "UNUSED_re", arg: 1, scope: !21470, file: !3, line: 577, type: !6)
!21474 = !DILocation(line: 577, column: 32, scope: !21470)
!21475 = !DILocalVariable(name: "obr", arg: 2, scope: !21470, file: !3, line: 577, type: !3063)
!21476 = !DILocation(line: 577, column: 55, scope: !21470)
!21477 = !DILocalVariable(name: "mat", arg: 3, scope: !21470, file: !3, line: 577, type: !2482)
!21478 = !DILocation(line: 577, column: 66, scope: !21470)
!21479 = !DILocalVariable(name: "lnors", arg: 4, scope: !21470, file: !3, line: 577, type: !14219)
!21480 = !DILocation(line: 577, column: 85, scope: !21470)
!21481 = !DILocalVariable(name: "asverts", scope: !21470, file: !3, line: 579, type: !21482)
!21482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21483, size: 64)
!21483 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASvert", file: !3, line: 471, baseType: !21484)
!21484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ASvert", file: !3, line: 468, size: 192, elements: !21485)
!21485 = !{!21486, !21487}
!21486 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !21484, file: !3, line: 469, baseType: !21, size: 32)
!21487 = !DIDerivedType(tag: DW_TAG_member, name: "faces", scope: !21484, file: !3, line: 470, baseType: !59, size: 128, offset: 64)
!21488 = !DILocation(line: 579, column: 10, scope: !21470)
!21489 = !DILocalVariable(name: "ver", scope: !21470, file: !3, line: 580, type: !4179)
!21490 = !DILocation(line: 580, column: 11, scope: !21470)
!21491 = !DILocalVariable(name: "vlr", scope: !21470, file: !3, line: 581, type: !13020)
!21492 = !DILocation(line: 581, column: 11, scope: !21470)
!21493 = !DILocalVariable(name: "a", scope: !21470, file: !3, line: 582, type: !21)
!21494 = !DILocation(line: 582, column: 6, scope: !21470)
!21495 = !DILocalVariable(name: "totvert", scope: !21470, file: !3, line: 582, type: !21)
!21496 = !DILocation(line: 582, column: 9, scope: !21470)
!21497 = !DILocation(line: 584, column: 6, scope: !21498)
!21498 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 584, column: 6)
!21499 = !DILocation(line: 584, column: 11, scope: !21498)
!21500 = !DILocation(line: 584, column: 19, scope: !21498)
!21501 = !DILocation(line: 584, column: 6, scope: !21470)
!21502 = !DILocation(line: 585, column: 3, scope: !21498)
!21503 = !DILocation(line: 587, column: 12, scope: !21470)
!21504 = !DILocation(line: 587, column: 17, scope: !21470)
!21505 = !DILocation(line: 587, column: 10, scope: !21470)
!21506 = !DILocation(line: 588, column: 12, scope: !21470)
!21507 = !DILocation(line: 588, column: 41, scope: !21470)
!21508 = !DILocation(line: 588, column: 39, scope: !21470)
!21509 = !DILocation(line: 588, column: 10, scope: !21470)
!21510 = !DILocation(line: 590, column: 6, scope: !21511)
!21511 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 590, column: 6)
!21512 = !DILocation(line: 590, column: 6, scope: !21470)
!21513 = !DILocation(line: 594, column: 10, scope: !21514)
!21514 = distinct !DILexicalBlock(scope: !21515, file: !3, line: 594, column: 3)
!21515 = distinct !DILexicalBlock(scope: !21511, file: !3, line: 590, column: 13)
!21516 = !DILocation(line: 594, column: 8, scope: !21514)
!21517 = !DILocation(line: 594, column: 15, scope: !21518)
!21518 = distinct !DILexicalBlock(scope: !21514, file: !3, line: 594, column: 3)
!21519 = !DILocation(line: 594, column: 19, scope: !21518)
!21520 = !DILocation(line: 594, column: 24, scope: !21518)
!21521 = !DILocation(line: 594, column: 17, scope: !21518)
!21522 = !DILocation(line: 594, column: 3, scope: !21514)
!21523 = !DILocation(line: 595, column: 27, scope: !21524)
!21524 = distinct !DILexicalBlock(scope: !21518, file: !3, line: 594, column: 47)
!21525 = !DILocation(line: 595, column: 32, scope: !21524)
!21526 = !DILocation(line: 595, column: 10, scope: !21524)
!21527 = !DILocation(line: 595, column: 8, scope: !21524)
!21528 = !DILocation(line: 597, column: 8, scope: !21529)
!21529 = distinct !DILexicalBlock(scope: !21524, file: !3, line: 597, column: 8)
!21530 = !DILocation(line: 597, column: 13, scope: !21529)
!21531 = !DILocation(line: 597, column: 19, scope: !21529)
!21532 = !DILocation(line: 597, column: 24, scope: !21529)
!21533 = !DILocation(line: 597, column: 16, scope: !21529)
!21534 = !DILocation(line: 597, column: 8, scope: !21524)
!21535 = !DILocation(line: 598, column: 21, scope: !21536)
!21536 = distinct !DILexicalBlock(scope: !21529, file: !3, line: 597, column: 28)
!21537 = !DILocation(line: 598, column: 26, scope: !21536)
!21538 = !DILocation(line: 598, column: 34, scope: !21536)
!21539 = !DILocation(line: 598, column: 39, scope: !21536)
!21540 = !DILocation(line: 598, column: 43, scope: !21536)
!21541 = !DILocation(line: 598, column: 33, scope: !21536)
!21542 = !DILocation(line: 598, column: 50, scope: !21536)
!21543 = !DILocation(line: 598, column: 55, scope: !21536)
!21544 = !DILocation(line: 598, column: 59, scope: !21536)
!21545 = !DILocation(line: 598, column: 78, scope: !21536)
!21546 = !DILocation(line: 598, column: 5, scope: !21536)
!21547 = !DILocation(line: 599, column: 21, scope: !21536)
!21548 = !DILocation(line: 599, column: 26, scope: !21536)
!21549 = !DILocation(line: 599, column: 34, scope: !21536)
!21550 = !DILocation(line: 599, column: 39, scope: !21536)
!21551 = !DILocation(line: 599, column: 43, scope: !21536)
!21552 = !DILocation(line: 599, column: 33, scope: !21536)
!21553 = !DILocation(line: 599, column: 50, scope: !21536)
!21554 = !DILocation(line: 599, column: 55, scope: !21536)
!21555 = !DILocation(line: 599, column: 59, scope: !21536)
!21556 = !DILocation(line: 599, column: 78, scope: !21536)
!21557 = !DILocation(line: 599, column: 5, scope: !21536)
!21558 = !DILocation(line: 600, column: 21, scope: !21536)
!21559 = !DILocation(line: 600, column: 26, scope: !21536)
!21560 = !DILocation(line: 600, column: 34, scope: !21536)
!21561 = !DILocation(line: 600, column: 39, scope: !21536)
!21562 = !DILocation(line: 600, column: 43, scope: !21536)
!21563 = !DILocation(line: 600, column: 33, scope: !21536)
!21564 = !DILocation(line: 600, column: 50, scope: !21536)
!21565 = !DILocation(line: 600, column: 55, scope: !21536)
!21566 = !DILocation(line: 600, column: 59, scope: !21536)
!21567 = !DILocation(line: 600, column: 78, scope: !21536)
!21568 = !DILocation(line: 600, column: 5, scope: !21536)
!21569 = !DILocation(line: 601, column: 9, scope: !21570)
!21570 = distinct !DILexicalBlock(scope: !21536, file: !3, line: 601, column: 9)
!21571 = !DILocation(line: 601, column: 14, scope: !21570)
!21572 = !DILocation(line: 601, column: 9, scope: !21536)
!21573 = !DILocation(line: 602, column: 22, scope: !21570)
!21574 = !DILocation(line: 602, column: 27, scope: !21570)
!21575 = !DILocation(line: 602, column: 35, scope: !21570)
!21576 = !DILocation(line: 602, column: 40, scope: !21570)
!21577 = !DILocation(line: 602, column: 44, scope: !21570)
!21578 = !DILocation(line: 602, column: 34, scope: !21570)
!21579 = !DILocation(line: 602, column: 51, scope: !21570)
!21580 = !DILocation(line: 602, column: 56, scope: !21570)
!21581 = !DILocation(line: 602, column: 60, scope: !21570)
!21582 = !DILocation(line: 602, column: 79, scope: !21570)
!21583 = !DILocation(line: 602, column: 6, scope: !21570)
!21584 = !DILocation(line: 603, column: 4, scope: !21536)
!21585 = !DILocation(line: 604, column: 3, scope: !21524)
!21586 = !DILocation(line: 594, column: 34, scope: !21518)
!21587 = !DILocation(line: 594, column: 43, scope: !21518)
!21588 = !DILocation(line: 594, column: 3, scope: !21518)
!21589 = distinct !{!21589, !21522, !21590}
!21590 = !DILocation(line: 604, column: 3, scope: !21514)
!21591 = !DILocation(line: 605, column: 2, scope: !21515)
!21592 = !DILocation(line: 608, column: 9, scope: !21593)
!21593 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 608, column: 2)
!21594 = !DILocation(line: 608, column: 7, scope: !21593)
!21595 = !DILocation(line: 608, column: 14, scope: !21596)
!21596 = distinct !DILexicalBlock(scope: !21593, file: !3, line: 608, column: 2)
!21597 = !DILocation(line: 608, column: 18, scope: !21596)
!21598 = !DILocation(line: 608, column: 16, scope: !21596)
!21599 = !DILocation(line: 608, column: 2, scope: !21593)
!21600 = !DILocation(line: 609, column: 18, scope: !21601)
!21601 = distinct !DILexicalBlock(scope: !21596, file: !3, line: 608, column: 32)
!21602 = !DILocation(line: 609, column: 26, scope: !21601)
!21603 = !DILocation(line: 609, column: 29, scope: !21601)
!21604 = !DILocation(line: 609, column: 3, scope: !21601)
!21605 = !DILocation(line: 610, column: 2, scope: !21601)
!21606 = !DILocation(line: 608, column: 28, scope: !21596)
!21607 = !DILocation(line: 608, column: 2, scope: !21596)
!21608 = distinct !{!21608, !21599, !21609}
!21609 = !DILocation(line: 610, column: 2, scope: !21593)
!21610 = !DILocation(line: 611, column: 2, scope: !21470)
!21611 = !DILocation(line: 611, column: 12, scope: !21470)
!21612 = !DILocation(line: 614, column: 9, scope: !21613)
!21613 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 614, column: 2)
!21614 = !DILocation(line: 614, column: 7, scope: !21613)
!21615 = !DILocation(line: 614, column: 14, scope: !21616)
!21616 = distinct !DILexicalBlock(scope: !21613, file: !3, line: 614, column: 2)
!21617 = !DILocation(line: 614, column: 18, scope: !21616)
!21618 = !DILocation(line: 614, column: 23, scope: !21616)
!21619 = !DILocation(line: 614, column: 16, scope: !21616)
!21620 = !DILocation(line: 614, column: 2, scope: !21613)
!21621 = !DILocation(line: 615, column: 26, scope: !21622)
!21622 = distinct !DILexicalBlock(scope: !21616, file: !3, line: 614, column: 37)
!21623 = !DILocation(line: 615, column: 31, scope: !21622)
!21624 = !DILocation(line: 615, column: 9, scope: !21622)
!21625 = !DILocation(line: 615, column: 7, scope: !21622)
!21626 = !DILocation(line: 616, column: 13, scope: !21622)
!21627 = !DILocation(line: 616, column: 18, scope: !21622)
!21628 = !DILocation(line: 616, column: 23, scope: !21622)
!21629 = !DILocation(line: 616, column: 3, scope: !21622)
!21630 = !DILocation(line: 617, column: 7, scope: !21631)
!21631 = distinct !DILexicalBlock(scope: !21622, file: !3, line: 617, column: 7)
!21632 = !DILocation(line: 617, column: 7, scope: !21622)
!21633 = !DILocation(line: 618, column: 19, scope: !21634)
!21634 = distinct !DILexicalBlock(scope: !21631, file: !3, line: 617, column: 14)
!21635 = !DILocation(line: 618, column: 24, scope: !21634)
!21636 = !DILocation(line: 618, column: 29, scope: !21634)
!21637 = !DILocation(line: 618, column: 4, scope: !21634)
!21638 = !DILocation(line: 619, column: 14, scope: !21634)
!21639 = !DILocation(line: 619, column: 19, scope: !21634)
!21640 = !DILocation(line: 619, column: 4, scope: !21634)
!21641 = !DILocation(line: 620, column: 17, scope: !21634)
!21642 = !DILocation(line: 620, column: 22, scope: !21634)
!21643 = !DILocation(line: 620, column: 4, scope: !21634)
!21644 = !DILocation(line: 621, column: 3, scope: !21634)
!21645 = !DILocation(line: 622, column: 2, scope: !21622)
!21646 = !DILocation(line: 614, column: 33, scope: !21616)
!21647 = !DILocation(line: 614, column: 2, scope: !21616)
!21648 = distinct !{!21648, !21620, !21649}
!21649 = !DILocation(line: 622, column: 2, scope: !21613)
!21650 = !DILocation(line: 623, column: 9, scope: !21651)
!21651 = distinct !DILexicalBlock(scope: !21470, file: !3, line: 623, column: 2)
!21652 = !DILocation(line: 623, column: 7, scope: !21651)
!21653 = !DILocation(line: 623, column: 14, scope: !21654)
!21654 = distinct !DILexicalBlock(scope: !21651, file: !3, line: 623, column: 2)
!21655 = !DILocation(line: 623, column: 18, scope: !21654)
!21656 = !DILocation(line: 623, column: 23, scope: !21654)
!21657 = !DILocation(line: 623, column: 16, scope: !21654)
!21658 = !DILocation(line: 623, column: 2, scope: !21651)
!21659 = !DILocation(line: 624, column: 26, scope: !21660)
!21660 = distinct !DILexicalBlock(scope: !21654, file: !3, line: 623, column: 37)
!21661 = !DILocation(line: 624, column: 31, scope: !21660)
!21662 = !DILocation(line: 624, column: 9, scope: !21660)
!21663 = !DILocation(line: 624, column: 7, scope: !21660)
!21664 = !DILocation(line: 627, column: 7, scope: !21665)
!21665 = distinct !DILexicalBlock(scope: !21660, file: !3, line: 627, column: 7)
!21666 = !DILocation(line: 627, column: 12, scope: !21665)
!21667 = !DILocation(line: 627, column: 18, scope: !21665)
!21668 = !DILocation(line: 627, column: 23, scope: !21665)
!21669 = !DILocation(line: 627, column: 15, scope: !21665)
!21670 = !DILocation(line: 627, column: 7, scope: !21660)
!21671 = !DILocation(line: 628, column: 8, scope: !21672)
!21672 = distinct !DILexicalBlock(scope: !21673, file: !3, line: 628, column: 8)
!21673 = distinct !DILexicalBlock(scope: !21665, file: !3, line: 627, column: 27)
!21674 = !DILocation(line: 628, column: 13, scope: !21672)
!21675 = !DILocation(line: 628, column: 8, scope: !21673)
!21676 = !DILocation(line: 629, column: 20, scope: !21672)
!21677 = !DILocation(line: 629, column: 25, scope: !21672)
!21678 = !DILocation(line: 629, column: 28, scope: !21672)
!21679 = !DILocation(line: 629, column: 33, scope: !21672)
!21680 = !DILocation(line: 629, column: 37, scope: !21672)
!21681 = !DILocation(line: 629, column: 41, scope: !21672)
!21682 = !DILocation(line: 629, column: 46, scope: !21672)
!21683 = !DILocation(line: 629, column: 50, scope: !21672)
!21684 = !DILocation(line: 629, column: 54, scope: !21672)
!21685 = !DILocation(line: 629, column: 59, scope: !21672)
!21686 = !DILocation(line: 629, column: 63, scope: !21672)
!21687 = !DILocation(line: 629, column: 67, scope: !21672)
!21688 = !DILocation(line: 629, column: 72, scope: !21672)
!21689 = !DILocation(line: 629, column: 76, scope: !21672)
!21690 = !DILocation(line: 629, column: 5, scope: !21672)
!21691 = !DILocation(line: 631, column: 19, scope: !21672)
!21692 = !DILocation(line: 631, column: 24, scope: !21672)
!21693 = !DILocation(line: 631, column: 27, scope: !21672)
!21694 = !DILocation(line: 631, column: 32, scope: !21672)
!21695 = !DILocation(line: 631, column: 36, scope: !21672)
!21696 = !DILocation(line: 631, column: 40, scope: !21672)
!21697 = !DILocation(line: 631, column: 45, scope: !21672)
!21698 = !DILocation(line: 631, column: 49, scope: !21672)
!21699 = !DILocation(line: 631, column: 53, scope: !21672)
!21700 = !DILocation(line: 631, column: 58, scope: !21672)
!21701 = !DILocation(line: 631, column: 62, scope: !21672)
!21702 = !DILocation(line: 631, column: 5, scope: !21672)
!21703 = !DILocation(line: 632, column: 3, scope: !21673)
!21704 = !DILocation(line: 633, column: 2, scope: !21660)
!21705 = !DILocation(line: 623, column: 33, scope: !21654)
!21706 = !DILocation(line: 623, column: 2, scope: !21654)
!21707 = distinct !{!21707, !21658, !21708}
!21708 = !DILocation(line: 633, column: 2, scope: !21651)
!21709 = !DILocation(line: 634, column: 1, scope: !21470)
!21710 = distinct !DISubprogram(name: "to_edgesort", scope: !3, file: !3, line: 2888, type: !21711, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21711 = !DISubroutineType(types: !21712)
!21712 = !{null, !15317, !79, !79, !79, !79, !21}
!21713 = !DILocalVariable(name: "ed", arg: 1, scope: !21710, file: !3, line: 2888, type: !15317)
!21714 = !DILocation(line: 2888, column: 42, scope: !21710)
!21715 = !DILocalVariable(name: "i1", arg: 2, scope: !21710, file: !3, line: 2889, type: !79)
!21716 = !DILocation(line: 2889, column: 38, scope: !21710)
!21717 = !DILocalVariable(name: "i2", arg: 3, scope: !21710, file: !3, line: 2889, type: !79)
!21718 = !DILocation(line: 2889, column: 55, scope: !21710)
!21719 = !DILocalVariable(name: "v1", arg: 4, scope: !21710, file: !3, line: 2890, type: !79)
!21720 = !DILocation(line: 2890, column: 38, scope: !21710)
!21721 = !DILocalVariable(name: "v2", arg: 5, scope: !21710, file: !3, line: 2890, type: !79)
!21722 = !DILocation(line: 2890, column: 55, scope: !21710)
!21723 = !DILocalVariable(name: "f", arg: 6, scope: !21710, file: !3, line: 2890, type: !21)
!21724 = !DILocation(line: 2890, column: 63, scope: !21710)
!21725 = !DILocation(line: 2892, column: 6, scope: !21726)
!21726 = distinct !DILexicalBlock(scope: !21710, file: !3, line: 2892, column: 6)
!21727 = !DILocation(line: 2892, column: 11, scope: !21726)
!21728 = !DILocation(line: 2892, column: 9, scope: !21726)
!21729 = !DILocation(line: 2892, column: 6, scope: !21710)
!21730 = !DILocalVariable(name: "sw_ap", scope: !21731, file: !3, line: 2893, type: !79)
!21731 = distinct !DILexicalBlock(scope: !21732, file: !3, line: 2893, column: 3)
!21732 = distinct !DILexicalBlock(scope: !21726, file: !3, line: 2892, column: 15)
!21733 = !DILocation(line: 2893, column: 3, scope: !21731)
!21734 = !DILocalVariable(name: "sw_ap", scope: !21735, file: !3, line: 2894, type: !79)
!21735 = distinct !DILexicalBlock(scope: !21732, file: !3, line: 2894, column: 3)
!21736 = !DILocation(line: 2894, column: 3, scope: !21735)
!21737 = !DILocation(line: 2895, column: 2, scope: !21732)
!21738 = !DILocation(line: 2897, column: 10, scope: !21710)
!21739 = !DILocation(line: 2897, column: 2, scope: !21710)
!21740 = !DILocation(line: 2897, column: 6, scope: !21710)
!21741 = !DILocation(line: 2897, column: 8, scope: !21710)
!21742 = !DILocation(line: 2898, column: 10, scope: !21710)
!21743 = !DILocation(line: 2898, column: 2, scope: !21710)
!21744 = !DILocation(line: 2898, column: 6, scope: !21710)
!21745 = !DILocation(line: 2898, column: 8, scope: !21710)
!21746 = !DILocation(line: 2899, column: 10, scope: !21710)
!21747 = !DILocation(line: 2899, column: 2, scope: !21710)
!21748 = !DILocation(line: 2899, column: 6, scope: !21710)
!21749 = !DILocation(line: 2899, column: 8, scope: !21710)
!21750 = !DILocation(line: 2900, column: 10, scope: !21710)
!21751 = !DILocation(line: 2900, column: 2, scope: !21710)
!21752 = !DILocation(line: 2900, column: 6, scope: !21710)
!21753 = !DILocation(line: 2900, column: 8, scope: !21710)
!21754 = !DILocation(line: 2901, column: 10, scope: !21710)
!21755 = !DILocation(line: 2901, column: 2, scope: !21710)
!21756 = !DILocation(line: 2901, column: 6, scope: !21710)
!21757 = !DILocation(line: 2901, column: 8, scope: !21710)
!21758 = !DILocation(line: 2902, column: 1, scope: !21710)
!21759 = distinct !DISubprogram(name: "vergedgesort", scope: !3, file: !3, line: 2904, type: !21760, scopeLine: 2905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21760 = !DISubroutineType(types: !21761)
!21761 = !{!21, !21762, !21762}
!21762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21763, size: 64)
!21763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!21764 = !DILocalVariable(name: "v1", arg: 1, scope: !21759, file: !3, line: 2904, type: !21762)
!21765 = !DILocation(line: 2904, column: 37, scope: !21759)
!21766 = !DILocalVariable(name: "v2", arg: 2, scope: !21759, file: !3, line: 2904, type: !21762)
!21767 = !DILocation(line: 2904, column: 53, scope: !21759)
!21768 = !DILocalVariable(name: "x1", scope: !21759, file: !3, line: 2906, type: !21769)
!21769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21770, size: 64)
!21770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15318)
!21771 = !DILocation(line: 2906, column: 25, scope: !21759)
!21772 = !DILocation(line: 2906, column: 28, scope: !21759)
!21773 = !DILocalVariable(name: "x2", scope: !21759, file: !3, line: 2906, type: !21769)
!21774 = !DILocation(line: 2906, column: 33, scope: !21759)
!21775 = !DILocation(line: 2906, column: 36, scope: !21759)
!21776 = !DILocation(line: 2908, column: 7, scope: !21777)
!21777 = distinct !DILexicalBlock(scope: !21759, file: !3, line: 2908, column: 7)
!21778 = !DILocation(line: 2908, column: 11, scope: !21777)
!21779 = !DILocation(line: 2908, column: 16, scope: !21777)
!21780 = !DILocation(line: 2908, column: 20, scope: !21777)
!21781 = !DILocation(line: 2908, column: 14, scope: !21777)
!21782 = !DILocation(line: 2908, column: 7, scope: !21759)
!21783 = !DILocation(line: 2908, column: 24, scope: !21777)
!21784 = !DILocation(line: 2909, column: 12, scope: !21785)
!21785 = distinct !DILexicalBlock(scope: !21777, file: !3, line: 2909, column: 12)
!21786 = !DILocation(line: 2909, column: 16, scope: !21785)
!21787 = !DILocation(line: 2909, column: 21, scope: !21785)
!21788 = !DILocation(line: 2909, column: 25, scope: !21785)
!21789 = !DILocation(line: 2909, column: 19, scope: !21785)
!21790 = !DILocation(line: 2909, column: 12, scope: !21777)
!21791 = !DILocation(line: 2909, column: 29, scope: !21785)
!21792 = !DILocation(line: 2910, column: 12, scope: !21793)
!21793 = distinct !DILexicalBlock(scope: !21785, file: !3, line: 2910, column: 12)
!21794 = !DILocation(line: 2910, column: 16, scope: !21793)
!21795 = !DILocation(line: 2910, column: 21, scope: !21793)
!21796 = !DILocation(line: 2910, column: 25, scope: !21793)
!21797 = !DILocation(line: 2910, column: 19, scope: !21793)
!21798 = !DILocation(line: 2910, column: 12, scope: !21785)
!21799 = !DILocation(line: 2910, column: 29, scope: !21793)
!21800 = !DILocation(line: 2911, column: 12, scope: !21801)
!21801 = distinct !DILexicalBlock(scope: !21793, file: !3, line: 2911, column: 12)
!21802 = !DILocation(line: 2911, column: 16, scope: !21801)
!21803 = !DILocation(line: 2911, column: 21, scope: !21801)
!21804 = !DILocation(line: 2911, column: 25, scope: !21801)
!21805 = !DILocation(line: 2911, column: 19, scope: !21801)
!21806 = !DILocation(line: 2911, column: 12, scope: !21793)
!21807 = !DILocation(line: 2911, column: 29, scope: !21801)
!21808 = !DILocation(line: 2913, column: 2, scope: !21759)
!21809 = !DILocation(line: 2914, column: 1, scope: !21759)
!21810 = distinct !DISubprogram(name: "calc_edge_stress_add", scope: !3, file: !3, line: 177, type: !21811, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21811 = !DISubroutineType(types: !21812)
!21812 = !{null, !44, !4179, !4179}
!21813 = !DILocalVariable(name: "accum", arg: 1, scope: !21810, file: !3, line: 177, type: !44)
!21814 = !DILocation(line: 177, column: 41, scope: !21810)
!21815 = !DILocalVariable(name: "v1", arg: 2, scope: !21810, file: !3, line: 177, type: !4179)
!21816 = !DILocation(line: 177, column: 57, scope: !21810)
!21817 = !DILocalVariable(name: "v2", arg: 3, scope: !21810, file: !3, line: 177, type: !4179)
!21818 = !DILocation(line: 177, column: 70, scope: !21810)
!21819 = !DILocalVariable(name: "len", scope: !21810, file: !3, line: 179, type: !45)
!21820 = !DILocation(line: 179, column: 8, scope: !21810)
!21821 = !DILocation(line: 179, column: 22, scope: !21810)
!21822 = !DILocation(line: 179, column: 26, scope: !21810)
!21823 = !DILocation(line: 179, column: 30, scope: !21810)
!21824 = !DILocation(line: 179, column: 34, scope: !21810)
!21825 = !DILocation(line: 179, column: 13, scope: !21810)
!21826 = !DILocation(line: 179, column: 47, scope: !21810)
!21827 = !DILocation(line: 179, column: 51, scope: !21810)
!21828 = !DILocation(line: 179, column: 57, scope: !21810)
!21829 = !DILocation(line: 179, column: 61, scope: !21810)
!21830 = !DILocation(line: 179, column: 38, scope: !21810)
!21831 = !DILocation(line: 179, column: 37, scope: !21810)
!21832 = !DILocalVariable(name: "acc", scope: !21810, file: !3, line: 180, type: !44)
!21833 = !DILocation(line: 180, column: 9, scope: !21810)
!21834 = !DILocation(line: 182, column: 7, scope: !21810)
!21835 = !DILocation(line: 182, column: 17, scope: !21810)
!21836 = !DILocation(line: 182, column: 21, scope: !21810)
!21837 = !DILocation(line: 182, column: 16, scope: !21810)
!21838 = !DILocation(line: 182, column: 13, scope: !21810)
!21839 = !DILocation(line: 182, column: 5, scope: !21810)
!21840 = !DILocation(line: 183, column: 11, scope: !21810)
!21841 = !DILocation(line: 183, column: 2, scope: !21810)
!21842 = !DILocation(line: 183, column: 8, scope: !21810)
!21843 = !DILocation(line: 184, column: 2, scope: !21810)
!21844 = !DILocation(line: 184, column: 8, scope: !21810)
!21845 = !DILocation(line: 186, column: 7, scope: !21810)
!21846 = !DILocation(line: 186, column: 17, scope: !21810)
!21847 = !DILocation(line: 186, column: 21, scope: !21810)
!21848 = !DILocation(line: 186, column: 16, scope: !21810)
!21849 = !DILocation(line: 186, column: 13, scope: !21810)
!21850 = !DILocation(line: 186, column: 5, scope: !21810)
!21851 = !DILocation(line: 187, column: 11, scope: !21810)
!21852 = !DILocation(line: 187, column: 2, scope: !21810)
!21853 = !DILocation(line: 187, column: 8, scope: !21810)
!21854 = !DILocation(line: 188, column: 2, scope: !21810)
!21855 = !DILocation(line: 188, column: 8, scope: !21810)
!21856 = !DILocation(line: 189, column: 1, scope: !21810)
!21857 = distinct !DISubprogram(name: "mul_v3_v3v3", scope: !4629, file: !4629, line: 557, type: !16448, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21858 = !DILocalVariable(name: "r", arg: 1, scope: !21857, file: !4629, line: 557, type: !44)
!21859 = !DILocation(line: 557, column: 32, scope: !21857)
!21860 = !DILocalVariable(name: "v1", arg: 2, scope: !21857, file: !4629, line: 557, type: !2417)
!21861 = !DILocation(line: 557, column: 50, scope: !21857)
!21862 = !DILocalVariable(name: "v2", arg: 3, scope: !21857, file: !4629, line: 557, type: !2417)
!21863 = !DILocation(line: 557, column: 69, scope: !21857)
!21864 = !DILocation(line: 559, column: 9, scope: !21857)
!21865 = !DILocation(line: 559, column: 17, scope: !21857)
!21866 = !DILocation(line: 559, column: 15, scope: !21857)
!21867 = !DILocation(line: 559, column: 2, scope: !21857)
!21868 = !DILocation(line: 559, column: 7, scope: !21857)
!21869 = !DILocation(line: 560, column: 9, scope: !21857)
!21870 = !DILocation(line: 560, column: 17, scope: !21857)
!21871 = !DILocation(line: 560, column: 15, scope: !21857)
!21872 = !DILocation(line: 560, column: 2, scope: !21857)
!21873 = !DILocation(line: 560, column: 7, scope: !21857)
!21874 = !DILocation(line: 561, column: 9, scope: !21857)
!21875 = !DILocation(line: 561, column: 17, scope: !21857)
!21876 = !DILocation(line: 561, column: 15, scope: !21857)
!21877 = !DILocation(line: 561, column: 2, scope: !21857)
!21878 = !DILocation(line: 561, column: 7, scope: !21857)
!21879 = !DILocation(line: 562, column: 1, scope: !21857)
!21880 = distinct !DISubprogram(name: "displace_render_face", scope: !3, file: !3, line: 2071, type: !21881, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!21881 = !DISubroutineType(types: !21882)
!21882 = !{null, !6, !3063, !13020, !44}
!21883 = !DILocalVariable(name: "re", arg: 1, scope: !21880, file: !3, line: 2071, type: !6)
!21884 = !DILocation(line: 2071, column: 42, scope: !21880)
!21885 = !DILocalVariable(name: "obr", arg: 2, scope: !21880, file: !3, line: 2071, type: !3063)
!21886 = !DILocation(line: 2071, column: 57, scope: !21880)
!21887 = !DILocalVariable(name: "vlr", arg: 3, scope: !21880, file: !3, line: 2071, type: !13020)
!21888 = !DILocation(line: 2071, column: 71, scope: !21880)
!21889 = !DILocalVariable(name: "scale", arg: 4, scope: !21880, file: !3, line: 2071, type: !44)
!21890 = !DILocation(line: 2071, column: 83, scope: !21880)
!21891 = !DILocalVariable(name: "shi", scope: !21880, file: !3, line: 2073, type: !21892)
!21892 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !21893, line: 186, baseType: !21894)
!21893 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!21894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !21893, line: 98, size: 11776, elements: !21895)
!21895 = !{!21896, !21897, !21898, !21899, !21900, !21901, !21902, !21903, !21904, !21905, !21906, !21907, !21908, !21909, !21910, !21911, !21912, !21913, !21914, !21915, !21916, !21917, !21918, !21919, !21920, !21921, !21922, !21923, !21924, !21925, !21926, !21927, !21928, !21929, !21930, !21931, !21932, !21933, !21934, !21935, !21936, !21937, !21938, !21939, !21940, !21941, !21942, !21943, !21944, !21945, !21946, !21947, !21948, !21949, !21950, !21951, !21952, !21953, !21954, !21955, !21956, !21957, !21958, !21959, !21960, !21961, !21962, !21963, !21964, !21965, !21966, !21967, !21968, !21977, !21984, !21985, !21986, !21987, !21988, !21989, !21990, !21991, !21992, !21993, !21994, !21995, !21996, !21997, !21998, !21999, !22000, !22001, !22002, !22003, !22004, !22005, !22006, !22007, !22008, !22009, !22010, !22011, !22012, !22013, !22014, !22015, !22016, !22017, !22018, !22019, !22020, !22021, !22022, !22023, !22024, !22025, !22026, !22027, !22028, !22029, !22030, !22031, !22032}
!21896 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !21894, file: !21893, line: 102, baseType: !86, size: 64)
!21897 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !21894, file: !21893, line: 103, baseType: !3114, size: 64, offset: 64)
!21898 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !21894, file: !21893, line: 104, baseType: !3150, size: 64, offset: 128)
!21899 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !21894, file: !21893, line: 105, baseType: !3057, size: 64, offset: 192)
!21900 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !21894, file: !21893, line: 106, baseType: !3068, size: 64, offset: 256)
!21901 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !21894, file: !21893, line: 107, baseType: !21, size: 32, offset: 320)
!21902 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !21894, file: !21893, line: 108, baseType: !188, size: 96, offset: 352)
!21903 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !21894, file: !21893, line: 109, baseType: !23, size: 16, offset: 448)
!21904 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !21894, file: !21893, line: 110, baseType: !3094, size: 64, offset: 512)
!21905 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !21894, file: !21893, line: 110, baseType: !3094, size: 64, offset: 576)
!21906 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !21894, file: !21893, line: 110, baseType: !3094, size: 64, offset: 640)
!21907 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !21894, file: !21893, line: 111, baseType: !23, size: 16, offset: 704)
!21908 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !21894, file: !21893, line: 111, baseType: !23, size: 16, offset: 720)
!21909 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !21894, file: !21893, line: 111, baseType: !23, size: 16, offset: 736)
!21910 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !21894, file: !21893, line: 112, baseType: !23, size: 16, offset: 752)
!21911 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !21894, file: !21893, line: 113, baseType: !23, size: 16, offset: 768)
!21912 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !21894, file: !21893, line: 114, baseType: !188, size: 96, offset: 800)
!21913 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !21894, file: !21893, line: 114, baseType: !188, size: 96, offset: 896)
!21914 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !21894, file: !21893, line: 115, baseType: !188, size: 96, offset: 992)
!21915 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !21894, file: !21893, line: 115, baseType: !188, size: 96, offset: 1088)
!21916 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !21894, file: !21893, line: 115, baseType: !188, size: 96, offset: 1184)
!21917 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !21894, file: !21893, line: 116, baseType: !21, size: 32, offset: 1280)
!21918 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !21894, file: !21893, line: 116, baseType: !21, size: 32, offset: 1312)
!21919 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1344)
!21920 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1376)
!21921 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1408)
!21922 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1440)
!21923 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1472)
!21924 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !21894, file: !21893, line: 119, baseType: !45, size: 32, offset: 1504)
!21925 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !21894, file: !21893, line: 120, baseType: !188, size: 96, offset: 1536)
!21926 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !21894, file: !21893, line: 120, baseType: !188, size: 96, offset: 1632)
!21927 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !21894, file: !21893, line: 120, baseType: !188, size: 96, offset: 1728)
!21928 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !21894, file: !21893, line: 124, baseType: !45, size: 32, offset: 1824)
!21929 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !21894, file: !21893, line: 124, baseType: !45, size: 32, offset: 1856)
!21930 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !21894, file: !21893, line: 124, baseType: !45, size: 32, offset: 1888)
!21931 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !21894, file: !21893, line: 125, baseType: !45, size: 32, offset: 1920)
!21932 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !21894, file: !21893, line: 125, baseType: !45, size: 32, offset: 1952)
!21933 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !21894, file: !21893, line: 125, baseType: !45, size: 32, offset: 1984)
!21934 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !21894, file: !21893, line: 126, baseType: !45, size: 32, offset: 2016)
!21935 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !21894, file: !21893, line: 126, baseType: !45, size: 32, offset: 2048)
!21936 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !21894, file: !21893, line: 126, baseType: !45, size: 32, offset: 2080)
!21937 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !21894, file: !21893, line: 127, baseType: !45, size: 32, offset: 2112)
!21938 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !21894, file: !21893, line: 127, baseType: !45, size: 32, offset: 2144)
!21939 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !21894, file: !21893, line: 127, baseType: !45, size: 32, offset: 2176)
!21940 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !21894, file: !21893, line: 129, baseType: !45, size: 32, offset: 2208)
!21941 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !21894, file: !21893, line: 129, baseType: !45, size: 32, offset: 2240)
!21942 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !21894, file: !21893, line: 129, baseType: !45, size: 32, offset: 2272)
!21943 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !21894, file: !21893, line: 129, baseType: !45, size: 32, offset: 2304)
!21944 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !21894, file: !21893, line: 129, baseType: !45, size: 32, offset: 2336)
!21945 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !21894, file: !21893, line: 130, baseType: !45, size: 32, offset: 2368)
!21946 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !21894, file: !21893, line: 130, baseType: !45, size: 32, offset: 2400)
!21947 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !21894, file: !21893, line: 130, baseType: !45, size: 32, offset: 2432)
!21948 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !21894, file: !21893, line: 130, baseType: !45, size: 32, offset: 2464)
!21949 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !21894, file: !21893, line: 130, baseType: !45, size: 32, offset: 2496)
!21950 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !21894, file: !21893, line: 131, baseType: !45, size: 32, offset: 2528)
!21951 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !21894, file: !21893, line: 135, baseType: !21, size: 32, offset: 2560)
!21952 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !21894, file: !21893, line: 138, baseType: !188, size: 96, offset: 2592)
!21953 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !21894, file: !21893, line: 138, baseType: !188, size: 96, offset: 2688)
!21954 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !21894, file: !21893, line: 138, baseType: !188, size: 96, offset: 2784)
!21955 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !21894, file: !21893, line: 138, baseType: !188, size: 96, offset: 2880)
!21956 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !21894, file: !21893, line: 138, baseType: !188, size: 96, offset: 2976)
!21957 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !21894, file: !21893, line: 138, baseType: !270, size: 128, offset: 3072)
!21958 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !21894, file: !21893, line: 139, baseType: !270, size: 128, offset: 3200)
!21959 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !21894, file: !21893, line: 139, baseType: !188, size: 96, offset: 3328)
!21960 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !21894, file: !21893, line: 140, baseType: !45, size: 32, offset: 3424)
!21961 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !21894, file: !21893, line: 140, baseType: !188, size: 96, offset: 3456)
!21962 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !21894, file: !21893, line: 140, baseType: !188, size: 96, offset: 3552)
!21963 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !21894, file: !21893, line: 140, baseType: !270, size: 128, offset: 3648)
!21964 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !21894, file: !21893, line: 140, baseType: !45, size: 32, offset: 3776)
!21965 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !21894, file: !21893, line: 140, baseType: !270, size: 128, offset: 3808)
!21966 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !21894, file: !21893, line: 141, baseType: !188, size: 96, offset: 3936)
!21967 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !21894, file: !21893, line: 141, baseType: !188, size: 96, offset: 4032)
!21968 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !21894, file: !21893, line: 143, baseType: !21969, size: 3072, offset: 4160)
!21969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21970, size: 3072, elements: !1329)
!21970 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !21893, line: 90, baseType: !21971)
!21971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !21893, line: 87, size: 384, elements: !21972)
!21972 = !{!21973, !21974, !21975, !21976}
!21973 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !21971, file: !21893, line: 88, baseType: !188, size: 96)
!21974 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !21971, file: !21893, line: 88, baseType: !188, size: 96, offset: 96)
!21975 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !21971, file: !21893, line: 88, baseType: !188, size: 96, offset: 192)
!21976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !21971, file: !21893, line: 89, baseType: !444, size: 64, offset: 320)
!21977 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !21894, file: !21893, line: 144, baseType: !21978, size: 1536, offset: 7232)
!21978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !21979, size: 1536, elements: !1329)
!21979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !21893, line: 95, baseType: !21980)
!21980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !21893, line: 92, size: 192, elements: !21981)
!21981 = !{!21982, !21983}
!21982 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !21980, file: !21893, line: 93, baseType: !270, size: 128)
!21983 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !21980, file: !21893, line: 94, baseType: !444, size: 64, offset: 128)
!21984 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !21894, file: !21893, line: 145, baseType: !21, size: 32, offset: 8768)
!21985 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !21894, file: !21893, line: 145, baseType: !21, size: 32, offset: 8800)
!21986 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !21894, file: !21893, line: 145, baseType: !21, size: 32, offset: 8832)
!21987 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !21894, file: !21893, line: 145, baseType: !21, size: 32, offset: 8864)
!21988 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !21894, file: !21893, line: 148, baseType: !188, size: 96, offset: 8896)
!21989 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !21894, file: !21893, line: 148, baseType: !188, size: 96, offset: 8992)
!21990 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !21894, file: !21893, line: 149, baseType: !188, size: 96, offset: 9088)
!21991 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !21894, file: !21893, line: 149, baseType: !188, size: 96, offset: 9184)
!21992 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !21894, file: !21893, line: 149, baseType: !188, size: 96, offset: 9280)
!21993 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !21894, file: !21893, line: 149, baseType: !188, size: 96, offset: 9376)
!21994 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !21894, file: !21893, line: 150, baseType: !188, size: 96, offset: 9472)
!21995 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !21894, file: !21893, line: 150, baseType: !188, size: 96, offset: 9568)
!21996 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !21894, file: !21893, line: 150, baseType: !188, size: 96, offset: 9664)
!21997 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !21894, file: !21893, line: 150, baseType: !188, size: 96, offset: 9760)
!21998 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !21894, file: !21893, line: 151, baseType: !188, size: 96, offset: 9856)
!21999 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !21894, file: !21893, line: 151, baseType: !188, size: 96, offset: 9952)
!22000 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !21894, file: !21893, line: 151, baseType: !45, size: 32, offset: 10048)
!22001 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !21894, file: !21893, line: 151, baseType: !45, size: 32, offset: 10080)
!22002 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !21894, file: !21893, line: 152, baseType: !188, size: 96, offset: 10112)
!22003 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !21894, file: !21893, line: 152, baseType: !188, size: 96, offset: 10208)
!22004 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !21894, file: !21893, line: 153, baseType: !188, size: 96, offset: 10304)
!22005 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !21894, file: !21893, line: 153, baseType: !188, size: 96, offset: 10400)
!22006 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !21894, file: !21893, line: 154, baseType: !188, size: 96, offset: 10496)
!22007 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !21894, file: !21893, line: 154, baseType: !188, size: 96, offset: 10592)
!22008 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !21894, file: !21893, line: 155, baseType: !45, size: 32, offset: 10688)
!22009 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !21894, file: !21893, line: 155, baseType: !45, size: 32, offset: 10720)
!22010 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !21894, file: !21893, line: 158, baseType: !188, size: 96, offset: 10752)
!22011 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !21894, file: !21893, line: 158, baseType: !188, size: 96, offset: 10848)
!22012 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !21894, file: !21893, line: 158, baseType: !188, size: 96, offset: 10944)
!22013 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !21894, file: !21893, line: 160, baseType: !21, size: 32, offset: 11040)
!22014 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !21894, file: !21893, line: 160, baseType: !21, size: 32, offset: 11072)
!22015 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !21894, file: !21893, line: 161, baseType: !21, size: 32, offset: 11104)
!22016 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !21894, file: !21893, line: 162, baseType: !188, size: 96, offset: 11136)
!22017 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !21894, file: !21893, line: 164, baseType: !21, size: 32, offset: 11232)
!22018 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !21894, file: !21893, line: 165, baseType: !21, size: 32, offset: 11264)
!22019 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !21894, file: !21893, line: 166, baseType: !21, size: 32, offset: 11296)
!22020 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !21894, file: !21893, line: 169, baseType: !188, size: 96, offset: 11328)
!22021 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !21894, file: !21893, line: 169, baseType: !45, size: 32, offset: 11424)
!22022 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !21894, file: !21893, line: 172, baseType: !28, size: 8, offset: 11456)
!22023 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !21894, file: !21893, line: 173, baseType: !28, size: 8, offset: 11464)
!22024 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !21894, file: !21893, line: 174, baseType: !23, size: 16, offset: 11472)
!22025 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !21894, file: !21893, line: 174, baseType: !23, size: 16, offset: 11488)
!22026 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !21894, file: !21893, line: 175, baseType: !23, size: 16, offset: 11504)
!22027 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !21894, file: !21893, line: 177, baseType: !79, size: 32, offset: 11520)
!22028 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !21894, file: !21893, line: 178, baseType: !21, size: 32, offset: 11552)
!22029 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !21894, file: !21893, line: 178, baseType: !21, size: 32, offset: 11584)
!22030 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !21894, file: !21893, line: 178, baseType: !21, size: 32, offset: 11616)
!22031 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !21894, file: !21893, line: 179, baseType: !536, size: 64, offset: 11648)
!22032 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !21894, file: !21893, line: 180, baseType: !86, size: 64, offset: 11712)
!22033 = !DILocation(line: 2073, column: 13, scope: !21880)
!22034 = !DILocation(line: 2077, column: 2, scope: !21880)
!22035 = !DILocation(line: 2085, column: 11, scope: !21880)
!22036 = !DILocation(line: 2085, column: 6, scope: !21880)
!22037 = !DILocation(line: 2085, column: 9, scope: !21880)
!22038 = !DILocation(line: 2086, column: 11, scope: !21880)
!22039 = !DILocation(line: 2086, column: 6, scope: !21880)
!22040 = !DILocation(line: 2086, column: 9, scope: !21880)
!22041 = !DILocation(line: 2087, column: 11, scope: !21880)
!22042 = !DILocation(line: 2087, column: 16, scope: !21880)
!22043 = !DILocation(line: 2087, column: 6, scope: !21880)
!22044 = !DILocation(line: 2087, column: 9, scope: !21880)
!22045 = !DILocation(line: 2088, column: 6, scope: !21880)
!22046 = !DILocation(line: 2088, column: 12, scope: !21880)
!22047 = !DILocation(line: 2099, column: 7, scope: !22048)
!22048 = distinct !DILexicalBlock(scope: !21880, file: !3, line: 2099, column: 6)
!22049 = !DILocation(line: 2099, column: 12, scope: !22048)
!22050 = !DILocation(line: 2099, column: 16, scope: !22048)
!22051 = !DILocation(line: 2099, column: 6, scope: !21880)
!22052 = !DILocation(line: 2100, column: 24, scope: !22048)
!22053 = !DILocation(line: 2100, column: 28, scope: !22048)
!22054 = !DILocation(line: 2100, column: 39, scope: !22048)
!22055 = !DILocation(line: 2100, column: 44, scope: !22048)
!22056 = !DILocation(line: 2100, column: 52, scope: !22048)
!22057 = !DILocation(line: 2100, column: 3, scope: !22048)
!22058 = !DILocation(line: 2102, column: 7, scope: !22059)
!22059 = distinct !DILexicalBlock(scope: !21880, file: !3, line: 2102, column: 6)
!22060 = !DILocation(line: 2102, column: 12, scope: !22059)
!22061 = !DILocation(line: 2102, column: 16, scope: !22059)
!22062 = !DILocation(line: 2102, column: 6, scope: !21880)
!22063 = !DILocation(line: 2103, column: 24, scope: !22059)
!22064 = !DILocation(line: 2103, column: 28, scope: !22059)
!22065 = !DILocation(line: 2103, column: 39, scope: !22059)
!22066 = !DILocation(line: 2103, column: 44, scope: !22059)
!22067 = !DILocation(line: 2103, column: 51, scope: !22059)
!22068 = !DILocation(line: 2103, column: 3, scope: !22059)
!22069 = !DILocation(line: 2105, column: 7, scope: !22070)
!22070 = distinct !DILexicalBlock(scope: !21880, file: !3, line: 2105, column: 6)
!22071 = !DILocation(line: 2105, column: 12, scope: !22070)
!22072 = !DILocation(line: 2105, column: 16, scope: !22070)
!22073 = !DILocation(line: 2105, column: 6, scope: !21880)
!22074 = !DILocation(line: 2106, column: 24, scope: !22070)
!22075 = !DILocation(line: 2106, column: 28, scope: !22070)
!22076 = !DILocation(line: 2106, column: 39, scope: !22070)
!22077 = !DILocation(line: 2106, column: 44, scope: !22070)
!22078 = !DILocation(line: 2106, column: 51, scope: !22070)
!22079 = !DILocation(line: 2106, column: 3, scope: !22070)
!22080 = !DILocation(line: 2108, column: 6, scope: !22081)
!22081 = distinct !DILexicalBlock(scope: !21880, file: !3, line: 2108, column: 6)
!22082 = !DILocation(line: 2108, column: 11, scope: !22081)
!22083 = !DILocation(line: 2108, column: 6, scope: !21880)
!22084 = !DILocation(line: 2109, column: 8, scope: !22085)
!22085 = distinct !DILexicalBlock(scope: !22086, file: !3, line: 2109, column: 7)
!22086 = distinct !DILexicalBlock(scope: !22081, file: !3, line: 2108, column: 15)
!22087 = !DILocation(line: 2109, column: 13, scope: !22085)
!22088 = !DILocation(line: 2109, column: 17, scope: !22085)
!22089 = !DILocation(line: 2109, column: 7, scope: !22086)
!22090 = !DILocation(line: 2110, column: 25, scope: !22085)
!22091 = !DILocation(line: 2110, column: 29, scope: !22085)
!22092 = !DILocation(line: 2110, column: 40, scope: !22085)
!22093 = !DILocation(line: 2110, column: 45, scope: !22085)
!22094 = !DILocation(line: 2110, column: 52, scope: !22085)
!22095 = !DILocation(line: 2110, column: 4, scope: !22085)
!22096 = !DILocation(line: 2113, column: 13, scope: !22097)
!22097 = distinct !DILexicalBlock(scope: !22086, file: !3, line: 2113, column: 7)
!22098 = !DILocation(line: 2113, column: 18, scope: !22097)
!22099 = !DILocation(line: 2113, column: 22, scope: !22097)
!22100 = !DILocation(line: 2113, column: 30, scope: !22097)
!22101 = !DILocation(line: 2113, column: 35, scope: !22097)
!22102 = !DILocation(line: 2113, column: 39, scope: !22097)
!22103 = !DILocation(line: 2113, column: 28, scope: !22097)
!22104 = !DILocation(line: 2113, column: 7, scope: !22097)
!22105 = !DILocation(line: 2113, column: 54, scope: !22097)
!22106 = !DILocation(line: 2113, column: 59, scope: !22097)
!22107 = !DILocation(line: 2113, column: 63, scope: !22097)
!22108 = !DILocation(line: 2113, column: 71, scope: !22097)
!22109 = !DILocation(line: 2113, column: 76, scope: !22097)
!22110 = !DILocation(line: 2113, column: 80, scope: !22097)
!22111 = !DILocation(line: 2113, column: 69, scope: !22097)
!22112 = !DILocation(line: 2113, column: 48, scope: !22097)
!22113 = !DILocation(line: 2113, column: 46, scope: !22097)
!22114 = !DILocation(line: 2113, column: 7, scope: !22086)
!22115 = !DILocation(line: 2113, column: 88, scope: !22097)
!22116 = !DILocation(line: 2113, column: 93, scope: !22097)
!22117 = !DILocation(line: 2113, column: 98, scope: !22097)
!22118 = !DILocation(line: 2114, column: 88, scope: !22097)
!22119 = !DILocation(line: 2114, column: 93, scope: !22097)
!22120 = !DILocation(line: 2114, column: 98, scope: !22097)
!22121 = !DILocation(line: 2115, column: 2, scope: !22086)
!22122 = !DILocation(line: 2118, column: 6, scope: !22123)
!22123 = distinct !DILexicalBlock(scope: !21880, file: !3, line: 2118, column: 6)
!22124 = !DILocation(line: 2118, column: 11, scope: !22123)
!22125 = !DILocation(line: 2118, column: 6, scope: !21880)
!22126 = !DILocation(line: 2119, column: 18, scope: !22127)
!22127 = distinct !DILexicalBlock(scope: !22123, file: !3, line: 2118, column: 15)
!22128 = !DILocation(line: 2119, column: 23, scope: !22127)
!22129 = !DILocation(line: 2119, column: 26, scope: !22127)
!22130 = !DILocation(line: 2119, column: 31, scope: !22127)
!22131 = !DILocation(line: 2119, column: 35, scope: !22127)
!22132 = !DILocation(line: 2119, column: 39, scope: !22127)
!22133 = !DILocation(line: 2119, column: 44, scope: !22127)
!22134 = !DILocation(line: 2119, column: 48, scope: !22127)
!22135 = !DILocation(line: 2119, column: 52, scope: !22127)
!22136 = !DILocation(line: 2119, column: 57, scope: !22127)
!22137 = !DILocation(line: 2119, column: 61, scope: !22127)
!22138 = !DILocation(line: 2119, column: 65, scope: !22127)
!22139 = !DILocation(line: 2119, column: 70, scope: !22127)
!22140 = !DILocation(line: 2119, column: 74, scope: !22127)
!22141 = !DILocation(line: 2119, column: 3, scope: !22127)
!22142 = !DILocation(line: 2120, column: 2, scope: !22127)
!22143 = !DILocation(line: 2122, column: 17, scope: !22144)
!22144 = distinct !DILexicalBlock(scope: !22123, file: !3, line: 2121, column: 7)
!22145 = !DILocation(line: 2122, column: 22, scope: !22144)
!22146 = !DILocation(line: 2122, column: 25, scope: !22144)
!22147 = !DILocation(line: 2122, column: 30, scope: !22144)
!22148 = !DILocation(line: 2122, column: 34, scope: !22144)
!22149 = !DILocation(line: 2122, column: 38, scope: !22144)
!22150 = !DILocation(line: 2122, column: 43, scope: !22144)
!22151 = !DILocation(line: 2122, column: 47, scope: !22144)
!22152 = !DILocation(line: 2122, column: 51, scope: !22144)
!22153 = !DILocation(line: 2122, column: 56, scope: !22144)
!22154 = !DILocation(line: 2122, column: 60, scope: !22144)
!22155 = !DILocation(line: 2122, column: 3, scope: !22144)
!22156 = !DILocation(line: 2124, column: 1, scope: !21880)
!22157 = distinct !DISubprogram(name: "displace_render_vert", scope: !3, file: !3, line: 1984, type: !22158, scopeLine: 1985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22158 = !DISubroutineType(types: !22159)
!22159 = !{null, !6, !3063, !22160, !4179, !21, !44}
!22160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21892, size: 64)
!22161 = !DILocalVariable(name: "re", arg: 1, scope: !22157, file: !3, line: 1984, type: !6)
!22162 = !DILocation(line: 1984, column: 42, scope: !22157)
!22163 = !DILocalVariable(name: "obr", arg: 2, scope: !22157, file: !3, line: 1984, type: !3063)
!22164 = !DILocation(line: 1984, column: 57, scope: !22157)
!22165 = !DILocalVariable(name: "shi", arg: 3, scope: !22157, file: !3, line: 1984, type: !22160)
!22166 = !DILocation(line: 1984, column: 74, scope: !22157)
!22167 = !DILocalVariable(name: "vr", arg: 4, scope: !22157, file: !3, line: 1984, type: !4179)
!22168 = !DILocation(line: 1984, column: 88, scope: !22157)
!22169 = !DILocalVariable(name: "vindex", arg: 5, scope: !22157, file: !3, line: 1984, type: !21)
!22170 = !DILocation(line: 1984, column: 96, scope: !22157)
!22171 = !DILocalVariable(name: "scale", arg: 6, scope: !22157, file: !3, line: 1984, type: !44)
!22172 = !DILocation(line: 1984, column: 111, scope: !22157)
!22173 = !DILocalVariable(name: "tface", scope: !22157, file: !3, line: 1986, type: !4145)
!22174 = !DILocation(line: 1986, column: 10, scope: !22157)
!22175 = !DILocalVariable(name: "texco", scope: !22157, file: !3, line: 1987, type: !23)
!22176 = !DILocation(line: 1987, column: 8, scope: !22157)
!22177 = !DILocation(line: 1987, column: 15, scope: !22157)
!22178 = !DILocation(line: 1987, column: 20, scope: !22157)
!22179 = !DILocation(line: 1987, column: 25, scope: !22157)
!22180 = !DILocalVariable(name: "sample", scope: !22157, file: !3, line: 1988, type: !45)
!22181 = !DILocation(line: 1988, column: 8, scope: !22157)
!22182 = !DILocalVariable(name: "displace", scope: !22157, file: !3, line: 1988, type: !188)
!22183 = !DILocation(line: 1988, column: 18, scope: !22157)
!22184 = !DILocalVariable(name: "name", scope: !22157, file: !3, line: 1989, type: !444)
!22185 = !DILocation(line: 1989, column: 8, scope: !22157)
!22186 = !DILocalVariable(name: "i", scope: !22157, file: !3, line: 1990, type: !21)
!22187 = !DILocation(line: 1990, column: 6, scope: !22157)
!22188 = !DILocation(line: 1993, column: 13, scope: !22157)
!22189 = !DILocation(line: 1993, column: 18, scope: !22157)
!22190 = !DILocation(line: 1993, column: 22, scope: !22157)
!22191 = !DILocation(line: 1993, column: 26, scope: !22157)
!22192 = !DILocation(line: 1993, column: 2, scope: !22157)
!22193 = !DILocation(line: 1995, column: 13, scope: !22157)
!22194 = !DILocation(line: 1995, column: 18, scope: !22157)
!22195 = !DILocation(line: 1995, column: 22, scope: !22157)
!22196 = !DILocation(line: 1995, column: 26, scope: !22157)
!22197 = !DILocation(line: 1995, column: 2, scope: !22157)
!22198 = !DILocation(line: 1997, column: 6, scope: !22199)
!22199 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 1997, column: 6)
!22200 = !DILocation(line: 1997, column: 12, scope: !22199)
!22201 = !DILocation(line: 1997, column: 6, scope: !22157)
!22202 = !DILocation(line: 1998, column: 3, scope: !22203)
!22203 = distinct !DILexicalBlock(scope: !22199, file: !3, line: 1997, column: 24)
!22204 = !DILocation(line: 1998, column: 8, scope: !22203)
!22205 = !DILocation(line: 1998, column: 13, scope: !22203)
!22206 = !DILocation(line: 1999, column: 15, scope: !22203)
!22207 = !DILocation(line: 1999, column: 20, scope: !22203)
!22208 = !DILocation(line: 1999, column: 3, scope: !22203)
!22209 = !DILocation(line: 1999, column: 8, scope: !22203)
!22210 = !DILocation(line: 1999, column: 13, scope: !22203)
!22211 = !DILocation(line: 2001, column: 9, scope: !22212)
!22212 = distinct !DILexicalBlock(scope: !22203, file: !3, line: 2001, column: 3)
!22213 = !DILocation(line: 2001, column: 8, scope: !22212)
!22214 = !DILocation(line: 2001, column: 41, scope: !22215)
!22215 = distinct !DILexicalBlock(scope: !22212, file: !3, line: 2001, column: 3)
!22216 = !DILocation(line: 2001, column: 46, scope: !22215)
!22217 = !DILocation(line: 2001, column: 51, scope: !22215)
!22218 = !DILocation(line: 2001, column: 56, scope: !22215)
!22219 = !DILocation(line: 2001, column: 20, scope: !22215)
!22220 = !DILocation(line: 2001, column: 19, scope: !22215)
!22221 = !DILocation(line: 2001, column: 3, scope: !22212)
!22222 = !DILocalVariable(name: "suv", scope: !22223, file: !3, line: 2002, type: !22224)
!22223 = distinct !DILexicalBlock(scope: !22215, file: !3, line: 2001, column: 76)
!22224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21970, size: 64)
!22225 = !DILocation(line: 2002, column: 18, scope: !22223)
!22226 = !DILocation(line: 2002, column: 24, scope: !22223)
!22227 = !DILocation(line: 2002, column: 29, scope: !22223)
!22228 = !DILocation(line: 2002, column: 32, scope: !22223)
!22229 = !DILocation(line: 2005, column: 18, scope: !22223)
!22230 = !DILocation(line: 2005, column: 25, scope: !22223)
!22231 = !DILocation(line: 2005, column: 28, scope: !22223)
!22232 = !DILocation(line: 2005, column: 17, scope: !22223)
!22233 = !DILocation(line: 2005, column: 38, scope: !22223)
!22234 = !DILocation(line: 2005, column: 4, scope: !22223)
!22235 = !DILocation(line: 2005, column: 9, scope: !22223)
!22236 = !DILocation(line: 2005, column: 14, scope: !22223)
!22237 = !DILocation(line: 2006, column: 18, scope: !22223)
!22238 = !DILocation(line: 2006, column: 25, scope: !22223)
!22239 = !DILocation(line: 2006, column: 28, scope: !22223)
!22240 = !DILocation(line: 2006, column: 17, scope: !22223)
!22241 = !DILocation(line: 2006, column: 38, scope: !22223)
!22242 = !DILocation(line: 2006, column: 4, scope: !22223)
!22243 = !DILocation(line: 2006, column: 9, scope: !22223)
!22244 = !DILocation(line: 2006, column: 14, scope: !22223)
!22245 = !DILocation(line: 2007, column: 4, scope: !22223)
!22246 = !DILocation(line: 2007, column: 9, scope: !22223)
!22247 = !DILocation(line: 2007, column: 14, scope: !22223)
!22248 = !DILocation(line: 2008, column: 15, scope: !22223)
!22249 = !DILocation(line: 2008, column: 4, scope: !22223)
!22250 = !DILocation(line: 2008, column: 9, scope: !22223)
!22251 = !DILocation(line: 2008, column: 13, scope: !22223)
!22252 = !DILocation(line: 2009, column: 4, scope: !22223)
!22253 = !DILocation(line: 2009, column: 9, scope: !22223)
!22254 = !DILocation(line: 2009, column: 14, scope: !22223)
!22255 = !DILocation(line: 2010, column: 3, scope: !22223)
!22256 = !DILocation(line: 2001, column: 72, scope: !22215)
!22257 = !DILocation(line: 2001, column: 3, scope: !22215)
!22258 = distinct !{!22258, !22221, !22259}
!22259 = !DILocation(line: 2010, column: 3, scope: !22212)
!22260 = !DILocation(line: 2011, column: 2, scope: !22203)
!22261 = !DILocation(line: 2014, column: 7, scope: !22262)
!22262 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 2014, column: 6)
!22263 = !DILocation(line: 2014, column: 13, scope: !22262)
!22264 = !DILocation(line: 2014, column: 27, scope: !22262)
!22265 = !DILocation(line: 2014, column: 31, scope: !22262)
!22266 = !DILocation(line: 2014, column: 35, scope: !22262)
!22267 = !DILocation(line: 2014, column: 30, scope: !22262)
!22268 = !DILocation(line: 2014, column: 6, scope: !22157)
!22269 = !DILocation(line: 2015, column: 14, scope: !22270)
!22270 = distinct !DILexicalBlock(scope: !22262, file: !3, line: 2014, column: 42)
!22271 = !DILocation(line: 2015, column: 19, scope: !22270)
!22272 = !DILocation(line: 2015, column: 23, scope: !22270)
!22273 = !DILocation(line: 2015, column: 27, scope: !22270)
!22274 = !DILocation(line: 2015, column: 3, scope: !22270)
!22275 = !DILocation(line: 2016, column: 2, scope: !22270)
!22276 = !DILocation(line: 2017, column: 6, scope: !22277)
!22277 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 2017, column: 6)
!22278 = !DILocation(line: 2017, column: 12, scope: !22277)
!22279 = !DILocation(line: 2017, column: 6, scope: !22157)
!22280 = !DILocation(line: 2018, column: 14, scope: !22281)
!22281 = distinct !DILexicalBlock(scope: !22277, file: !3, line: 2017, column: 26)
!22282 = !DILocation(line: 2018, column: 19, scope: !22281)
!22283 = !DILocation(line: 2018, column: 23, scope: !22281)
!22284 = !DILocation(line: 2018, column: 28, scope: !22281)
!22285 = !DILocation(line: 2018, column: 3, scope: !22281)
!22286 = !DILocation(line: 2019, column: 13, scope: !22281)
!22287 = !DILocation(line: 2019, column: 17, scope: !22281)
!22288 = !DILocation(line: 2019, column: 26, scope: !22281)
!22289 = !DILocation(line: 2019, column: 31, scope: !22281)
!22290 = !DILocation(line: 2019, column: 3, scope: !22281)
!22291 = !DILocation(line: 2020, column: 2, scope: !22281)
!22292 = !DILocation(line: 2021, column: 6, scope: !22293)
!22293 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 2021, column: 6)
!22294 = !DILocation(line: 2021, column: 12, scope: !22293)
!22295 = !DILocation(line: 2021, column: 6, scope: !22157)
!22296 = !DILocation(line: 2022, column: 14, scope: !22297)
!22297 = distinct !DILexicalBlock(scope: !22293, file: !3, line: 2021, column: 26)
!22298 = !DILocation(line: 2022, column: 19, scope: !22297)
!22299 = !DILocation(line: 2022, column: 24, scope: !22297)
!22300 = !DILocation(line: 2022, column: 29, scope: !22297)
!22301 = !DILocation(line: 2022, column: 3, scope: !22297)
!22302 = !DILocation(line: 2023, column: 2, scope: !22297)
!22303 = !DILocation(line: 2024, column: 6, scope: !22304)
!22304 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 2024, column: 6)
!22305 = !DILocation(line: 2024, column: 12, scope: !22304)
!22306 = !DILocation(line: 2024, column: 6, scope: !22157)
!22307 = !DILocation(line: 2026, column: 2, scope: !22308)
!22308 = distinct !DILexicalBlock(scope: !22304, file: !3, line: 2024, column: 26)
!22309 = !DILocation(line: 2027, column: 6, scope: !22310)
!22310 = distinct !DILexicalBlock(scope: !22157, file: !3, line: 2027, column: 6)
!22311 = !DILocation(line: 2027, column: 12, scope: !22310)
!22312 = !DILocation(line: 2027, column: 6, scope: !22157)
!22313 = !DILocalVariable(name: "s", scope: !22314, file: !3, line: 2028, type: !2417)
!22314 = distinct !DILexicalBlock(scope: !22310, file: !3, line: 2027, column: 28)
!22315 = !DILocation(line: 2028, column: 16, scope: !22314)
!22316 = !DILocation(line: 2028, column: 41, scope: !22314)
!22317 = !DILocation(line: 2028, column: 46, scope: !22314)
!22318 = !DILocation(line: 2028, column: 19, scope: !22314)
!22319 = !DILocation(line: 2030, column: 7, scope: !22320)
!22320 = distinct !DILexicalBlock(scope: !22314, file: !3, line: 2030, column: 7)
!22321 = !DILocation(line: 2030, column: 7, scope: !22314)
!22322 = !DILocation(line: 2031, column: 18, scope: !22323)
!22323 = distinct !DILexicalBlock(scope: !22320, file: !3, line: 2030, column: 10)
!22324 = !DILocation(line: 2031, column: 17, scope: !22323)
!22325 = !DILocation(line: 2031, column: 4, scope: !22323)
!22326 = !DILocation(line: 2031, column: 9, scope: !22323)
!22327 = !DILocation(line: 2031, column: 15, scope: !22323)
!22328 = !DILocation(line: 2032, column: 8, scope: !22329)
!22329 = distinct !DILexicalBlock(scope: !22323, file: !3, line: 2032, column: 8)
!22330 = !DILocation(line: 2032, column: 13, scope: !22329)
!22331 = !DILocation(line: 2032, column: 19, scope: !22329)
!22332 = !DILocation(line: 2032, column: 8, scope: !22323)
!22333 = !DILocation(line: 2032, column: 26, scope: !22329)
!22334 = !DILocation(line: 2032, column: 31, scope: !22329)
!22335 = !DILocation(line: 2032, column: 37, scope: !22329)
!22336 = !DILocation(line: 2033, column: 23, scope: !22329)
!22337 = !DILocation(line: 2033, column: 28, scope: !22329)
!22338 = !DILocation(line: 2033, column: 34, scope: !22329)
!22339 = !DILocation(line: 2033, column: 41, scope: !22329)
!22340 = !DILocation(line: 2033, column: 46, scope: !22329)
!22341 = !DILocation(line: 2033, column: 40, scope: !22329)
!22342 = !DILocation(line: 2033, column: 9, scope: !22329)
!22343 = !DILocation(line: 2033, column: 14, scope: !22329)
!22344 = !DILocation(line: 2033, column: 20, scope: !22329)
!22345 = !DILocation(line: 2034, column: 3, scope: !22323)
!22346 = !DILocation(line: 2036, column: 4, scope: !22320)
!22347 = !DILocation(line: 2036, column: 9, scope: !22320)
!22348 = !DILocation(line: 2036, column: 15, scope: !22320)
!22349 = !DILocation(line: 2037, column: 2, scope: !22314)
!22350 = !DILocation(line: 2039, column: 38, scope: !22157)
!22351 = !DILocation(line: 2039, column: 43, scope: !22157)
!22352 = !DILocation(line: 2039, column: 54, scope: !22157)
!22353 = !DILocation(line: 2039, column: 20, scope: !22157)
!22354 = !DILocation(line: 2039, column: 25, scope: !22157)
!22355 = !DILocation(line: 2039, column: 36, scope: !22157)
!22356 = !DILocation(line: 2039, column: 2, scope: !22157)
!22357 = !DILocation(line: 2039, column: 7, scope: !22157)
!22358 = !DILocation(line: 2039, column: 18, scope: !22157)
!22359 = !DILocation(line: 2041, column: 18, scope: !22157)
!22360 = !DILocation(line: 2041, column: 23, scope: !22157)
!22361 = !DILocation(line: 2041, column: 2, scope: !22157)
!22362 = !DILocation(line: 2046, column: 15, scope: !22157)
!22363 = !DILocation(line: 2046, column: 20, scope: !22157)
!22364 = !DILocation(line: 2046, column: 34, scope: !22157)
!22365 = !DILocation(line: 2046, column: 32, scope: !22157)
!22366 = !DILocation(line: 2046, column: 2, scope: !22157)
!22367 = !DILocation(line: 2046, column: 13, scope: !22157)
!22368 = !DILocation(line: 2047, column: 15, scope: !22157)
!22369 = !DILocation(line: 2047, column: 20, scope: !22157)
!22370 = !DILocation(line: 2047, column: 34, scope: !22157)
!22371 = !DILocation(line: 2047, column: 32, scope: !22157)
!22372 = !DILocation(line: 2047, column: 2, scope: !22157)
!22373 = !DILocation(line: 2047, column: 13, scope: !22157)
!22374 = !DILocation(line: 2048, column: 15, scope: !22157)
!22375 = !DILocation(line: 2048, column: 20, scope: !22157)
!22376 = !DILocation(line: 2048, column: 34, scope: !22157)
!22377 = !DILocation(line: 2048, column: 32, scope: !22157)
!22378 = !DILocation(line: 2048, column: 2, scope: !22157)
!22379 = !DILocation(line: 2048, column: 13, scope: !22157)
!22380 = !DILocation(line: 2051, column: 15, scope: !22157)
!22381 = !DILocation(line: 2051, column: 2, scope: !22157)
!22382 = !DILocation(line: 2051, column: 6, scope: !22157)
!22383 = !DILocation(line: 2051, column: 12, scope: !22157)
!22384 = !DILocation(line: 2052, column: 15, scope: !22157)
!22385 = !DILocation(line: 2052, column: 2, scope: !22157)
!22386 = !DILocation(line: 2052, column: 6, scope: !22157)
!22387 = !DILocation(line: 2052, column: 12, scope: !22157)
!22388 = !DILocation(line: 2053, column: 15, scope: !22157)
!22389 = !DILocation(line: 2053, column: 2, scope: !22157)
!22390 = !DILocation(line: 2053, column: 6, scope: !22157)
!22391 = !DILocation(line: 2053, column: 12, scope: !22157)
!22392 = !DILocation(line: 2059, column: 2, scope: !22157)
!22393 = !DILocation(line: 2059, column: 6, scope: !22157)
!22394 = !DILocation(line: 2059, column: 11, scope: !22157)
!22395 = !DILocation(line: 2062, column: 12, scope: !22157)
!22396 = !DILocation(line: 2062, column: 17, scope: !22157)
!22397 = !DILocation(line: 2062, column: 29, scope: !22157)
!22398 = !DILocation(line: 2062, column: 34, scope: !22157)
!22399 = !DILocation(line: 2062, column: 28, scope: !22157)
!22400 = !DILocation(line: 2062, column: 10, scope: !22157)
!22401 = !DILocation(line: 2063, column: 12, scope: !22157)
!22402 = !DILocation(line: 2063, column: 17, scope: !22157)
!22403 = !DILocation(line: 2063, column: 29, scope: !22157)
!22404 = !DILocation(line: 2063, column: 34, scope: !22157)
!22405 = !DILocation(line: 2063, column: 28, scope: !22157)
!22406 = !DILocation(line: 2063, column: 9, scope: !22157)
!22407 = !DILocation(line: 2064, column: 12, scope: !22157)
!22408 = !DILocation(line: 2064, column: 17, scope: !22157)
!22409 = !DILocation(line: 2064, column: 29, scope: !22157)
!22410 = !DILocation(line: 2064, column: 34, scope: !22157)
!22411 = !DILocation(line: 2064, column: 28, scope: !22157)
!22412 = !DILocation(line: 2064, column: 9, scope: !22157)
!22413 = !DILocation(line: 2066, column: 12, scope: !22157)
!22414 = !DILocation(line: 2066, column: 2, scope: !22157)
!22415 = !DILocation(line: 2066, column: 6, scope: !22157)
!22416 = !DILocation(line: 2066, column: 11, scope: !22157)
!22417 = !DILocation(line: 2068, column: 2, scope: !22157)
!22418 = distinct !DISubprogram(name: "as_addvert_lnor", scope: !3, file: !3, line: 544, type: !22419, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22419 = !DISubroutineType(types: !22420)
!22420 = !{null, !3063, !21482, !4179, !13020, !2418}
!22421 = !DILocalVariable(name: "obr", arg: 1, scope: !22418, file: !3, line: 544, type: !3063)
!22422 = !DILocation(line: 544, column: 40, scope: !22418)
!22423 = !DILocalVariable(name: "asv", arg: 2, scope: !22418, file: !3, line: 544, type: !21482)
!22424 = !DILocation(line: 544, column: 53, scope: !22418)
!22425 = !DILocalVariable(name: "ver", arg: 3, scope: !22418, file: !3, line: 544, type: !4179)
!22426 = !DILocation(line: 544, column: 67, scope: !22418)
!22427 = !DILocalVariable(name: "vlr", arg: 4, scope: !22418, file: !3, line: 544, type: !13020)
!22428 = !DILocation(line: 544, column: 81, scope: !22418)
!22429 = !DILocalVariable(name: "_lnor", arg: 5, scope: !22418, file: !3, line: 544, type: !2418)
!22430 = !DILocation(line: 544, column: 98, scope: !22418)
!22431 = !DILocalVariable(name: "v1", scope: !22418, file: !3, line: 546, type: !4179)
!22432 = !DILocation(line: 546, column: 11, scope: !22418)
!22433 = !DILocalVariable(name: "asf", scope: !22418, file: !3, line: 547, type: !22434)
!22434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22435, size: 64)
!22435 = !DIDerivedType(tag: DW_TAG_typedef, name: "ASface", file: !3, line: 477, baseType: !22436)
!22436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ASface", file: !3, line: 473, size: 640, elements: !22437)
!22437 = !{!22438, !22440, !22441, !22443}
!22438 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !22436, file: !3, line: 474, baseType: !22439, size: 64)
!22439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22436, size: 64)
!22440 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !22436, file: !3, line: 474, baseType: !22439, size: 64, offset: 64)
!22441 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !22436, file: !3, line: 475, baseType: !22442, size: 256, offset: 128)
!22442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13020, size: 256, elements: !271)
!22443 = !DIDerivedType(tag: DW_TAG_member, name: "nver", scope: !22436, file: !3, line: 476, baseType: !22444, size: 256, offset: 384)
!22444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4179, size: 256, elements: !271)
!22445 = !DILocation(line: 547, column: 10, scope: !22418)
!22446 = !DILocalVariable(name: "asf_idx", scope: !22418, file: !3, line: 548, type: !21)
!22447 = !DILocation(line: 548, column: 6, scope: !22418)
!22448 = !DILocalVariable(name: "lnor", scope: !22418, file: !3, line: 549, type: !188)
!22449 = !DILocation(line: 549, column: 8, scope: !22418)
!22450 = !DILocation(line: 551, column: 27, scope: !22418)
!22451 = !DILocation(line: 551, column: 33, scope: !22418)
!22452 = !DILocation(line: 551, column: 2, scope: !22418)
!22453 = !DILocation(line: 553, column: 23, scope: !22418)
!22454 = !DILocation(line: 553, column: 28, scope: !22418)
!22455 = !DILocation(line: 553, column: 33, scope: !22418)
!22456 = !DILocation(line: 553, column: 12, scope: !22418)
!22457 = !DILocation(line: 553, column: 10, scope: !22418)
!22458 = !DILocation(line: 554, column: 6, scope: !22459)
!22459 = distinct !DILexicalBlock(scope: !22418, file: !3, line: 554, column: 6)
!22460 = !DILocation(line: 554, column: 14, scope: !22459)
!22461 = !DILocation(line: 554, column: 6, scope: !22418)
!22462 = !DILocation(line: 555, column: 3, scope: !22463)
!22463 = distinct !DILexicalBlock(scope: !22459, file: !3, line: 554, column: 19)
!22464 = !DILocation(line: 557, column: 8, scope: !22418)
!22465 = !DILocation(line: 557, column: 13, scope: !22418)
!22466 = !DILocation(line: 557, column: 19, scope: !22418)
!22467 = !DILocation(line: 557, column: 6, scope: !22418)
!22468 = !DILocation(line: 560, column: 26, scope: !22418)
!22469 = !DILocation(line: 560, column: 31, scope: !22418)
!22470 = !DILocation(line: 560, column: 36, scope: !22418)
!22471 = !DILocation(line: 560, column: 41, scope: !22418)
!22472 = !DILocation(line: 560, column: 7, scope: !22418)
!22473 = !DILocation(line: 560, column: 5, scope: !22418)
!22474 = !DILocation(line: 561, column: 6, scope: !22475)
!22475 = distinct !DILexicalBlock(scope: !22418, file: !3, line: 561, column: 6)
!22476 = !DILocation(line: 561, column: 9, scope: !22475)
!22477 = !DILocation(line: 561, column: 6, scope: !22418)
!22478 = !DILocation(line: 563, column: 24, scope: !22479)
!22479 = distinct !DILexicalBlock(scope: !22475, file: !3, line: 561, column: 18)
!22480 = !DILocation(line: 563, column: 29, scope: !22479)
!22481 = !DILocation(line: 563, column: 8, scope: !22479)
!22482 = !DILocation(line: 563, column: 6, scope: !22479)
!22483 = !DILocation(line: 564, column: 14, scope: !22479)
!22484 = !DILocation(line: 564, column: 18, scope: !22479)
!22485 = !DILocation(line: 564, column: 21, scope: !22479)
!22486 = !DILocation(line: 564, column: 3, scope: !22479)
!22487 = !DILocation(line: 565, column: 2, scope: !22479)
!22488 = !DILocation(line: 566, column: 6, scope: !22489)
!22489 = distinct !DILexicalBlock(scope: !22418, file: !3, line: 566, column: 6)
!22490 = !DILocation(line: 566, column: 12, scope: !22489)
!22491 = !DILocation(line: 566, column: 9, scope: !22489)
!22492 = !DILocation(line: 566, column: 6, scope: !22418)
!22493 = !DILocation(line: 567, column: 24, scope: !22494)
!22494 = distinct !DILexicalBlock(scope: !22489, file: !3, line: 566, column: 17)
!22495 = !DILocation(line: 567, column: 3, scope: !22494)
!22496 = !DILocation(line: 567, column: 8, scope: !22494)
!22497 = !DILocation(line: 567, column: 13, scope: !22494)
!22498 = !DILocation(line: 567, column: 22, scope: !22494)
!22499 = !DILocation(line: 568, column: 7, scope: !22500)
!22500 = distinct !DILexicalBlock(scope: !22494, file: !3, line: 568, column: 7)
!22501 = !DILocation(line: 568, column: 12, scope: !22500)
!22502 = !DILocation(line: 568, column: 18, scope: !22500)
!22503 = !DILocation(line: 568, column: 15, scope: !22500)
!22504 = !DILocation(line: 568, column: 7, scope: !22494)
!22505 = !DILocation(line: 568, column: 33, scope: !22500)
!22506 = !DILocation(line: 568, column: 23, scope: !22500)
!22507 = !DILocation(line: 568, column: 28, scope: !22500)
!22508 = !DILocation(line: 568, column: 31, scope: !22500)
!22509 = !DILocation(line: 569, column: 7, scope: !22510)
!22510 = distinct !DILexicalBlock(scope: !22494, file: !3, line: 569, column: 7)
!22511 = !DILocation(line: 569, column: 12, scope: !22510)
!22512 = !DILocation(line: 569, column: 18, scope: !22510)
!22513 = !DILocation(line: 569, column: 15, scope: !22510)
!22514 = !DILocation(line: 569, column: 7, scope: !22494)
!22515 = !DILocation(line: 569, column: 33, scope: !22510)
!22516 = !DILocation(line: 569, column: 23, scope: !22510)
!22517 = !DILocation(line: 569, column: 28, scope: !22510)
!22518 = !DILocation(line: 569, column: 31, scope: !22510)
!22519 = !DILocation(line: 570, column: 7, scope: !22520)
!22520 = distinct !DILexicalBlock(scope: !22494, file: !3, line: 570, column: 7)
!22521 = !DILocation(line: 570, column: 12, scope: !22520)
!22522 = !DILocation(line: 570, column: 18, scope: !22520)
!22523 = !DILocation(line: 570, column: 15, scope: !22520)
!22524 = !DILocation(line: 570, column: 7, scope: !22494)
!22525 = !DILocation(line: 570, column: 33, scope: !22520)
!22526 = !DILocation(line: 570, column: 23, scope: !22520)
!22527 = !DILocation(line: 570, column: 28, scope: !22520)
!22528 = !DILocation(line: 570, column: 31, scope: !22520)
!22529 = !DILocation(line: 571, column: 7, scope: !22530)
!22530 = distinct !DILexicalBlock(scope: !22494, file: !3, line: 571, column: 7)
!22531 = !DILocation(line: 571, column: 12, scope: !22530)
!22532 = !DILocation(line: 571, column: 18, scope: !22530)
!22533 = !DILocation(line: 571, column: 15, scope: !22530)
!22534 = !DILocation(line: 571, column: 7, scope: !22494)
!22535 = !DILocation(line: 571, column: 33, scope: !22530)
!22536 = !DILocation(line: 571, column: 23, scope: !22530)
!22537 = !DILocation(line: 571, column: 28, scope: !22530)
!22538 = !DILocation(line: 571, column: 31, scope: !22530)
!22539 = !DILocation(line: 572, column: 2, scope: !22494)
!22540 = !DILocation(line: 573, column: 1, scope: !22418)
!22541 = distinct !DISubprogram(name: "as_addvert", scope: !3, file: !3, line: 479, type: !22542, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22542 = !DISubroutineType(types: !22543)
!22543 = !{!21, !21482, !4179, !13020}
!22544 = !DILocalVariable(name: "asv", arg: 1, scope: !22541, file: !3, line: 479, type: !21482)
!22545 = !DILocation(line: 479, column: 31, scope: !22541)
!22546 = !DILocalVariable(name: "v1", arg: 2, scope: !22541, file: !3, line: 479, type: !4179)
!22547 = !DILocation(line: 479, column: 45, scope: !22541)
!22548 = !DILocalVariable(name: "vlr", arg: 3, scope: !22541, file: !3, line: 479, type: !13020)
!22549 = !DILocation(line: 479, column: 58, scope: !22541)
!22550 = !DILocalVariable(name: "asf", scope: !22541, file: !3, line: 481, type: !22434)
!22551 = !DILocation(line: 481, column: 10, scope: !22541)
!22552 = !DILocalVariable(name: "a", scope: !22541, file: !3, line: 482, type: !21)
!22553 = !DILocation(line: 482, column: 6, scope: !22541)
!22554 = !DILocation(line: 484, column: 6, scope: !22555)
!22555 = distinct !DILexicalBlock(scope: !22541, file: !3, line: 484, column: 6)
!22556 = !DILocation(line: 484, column: 9, scope: !22555)
!22557 = !DILocation(line: 484, column: 6, scope: !22541)
!22558 = !DILocation(line: 485, column: 10, scope: !22555)
!22559 = !DILocation(line: 485, column: 3, scope: !22555)
!22560 = !DILocation(line: 487, column: 8, scope: !22541)
!22561 = !DILocation(line: 487, column: 13, scope: !22541)
!22562 = !DILocation(line: 487, column: 19, scope: !22541)
!22563 = !DILocation(line: 487, column: 6, scope: !22541)
!22564 = !DILocation(line: 488, column: 6, scope: !22565)
!22565 = distinct !DILexicalBlock(scope: !22541, file: !3, line: 488, column: 6)
!22566 = !DILocation(line: 488, column: 6, scope: !22541)
!22567 = !DILocation(line: 489, column: 10, scope: !22568)
!22568 = distinct !DILexicalBlock(scope: !22569, file: !3, line: 489, column: 3)
!22569 = distinct !DILexicalBlock(scope: !22565, file: !3, line: 488, column: 11)
!22570 = !DILocation(line: 489, column: 8, scope: !22568)
!22571 = !DILocation(line: 489, column: 15, scope: !22572)
!22572 = distinct !DILexicalBlock(scope: !22568, file: !3, line: 489, column: 3)
!22573 = !DILocation(line: 489, column: 17, scope: !22572)
!22574 = !DILocation(line: 489, column: 21, scope: !22572)
!22575 = !DILocation(line: 489, column: 24, scope: !22572)
!22576 = !DILocation(line: 489, column: 29, scope: !22572)
!22577 = !DILocation(line: 489, column: 33, scope: !22572)
!22578 = !DILocation(line: 0, scope: !22572)
!22579 = !DILocation(line: 489, column: 3, scope: !22568)
!22580 = !DILocation(line: 490, column: 3, scope: !22581)
!22581 = distinct !DILexicalBlock(scope: !22572, file: !3, line: 489, column: 42)
!22582 = !DILocation(line: 489, column: 38, scope: !22572)
!22583 = !DILocation(line: 489, column: 3, scope: !22572)
!22584 = distinct !{!22584, !22579, !22585}
!22585 = !DILocation(line: 490, column: 3, scope: !22568)
!22586 = !DILocation(line: 491, column: 2, scope: !22569)
!22587 = !DILocation(line: 493, column: 5, scope: !22588)
!22588 = distinct !DILexicalBlock(scope: !22565, file: !3, line: 492, column: 7)
!22589 = !DILocation(line: 497, column: 6, scope: !22590)
!22590 = distinct !DILexicalBlock(scope: !22541, file: !3, line: 497, column: 6)
!22591 = !DILocation(line: 497, column: 8, scope: !22590)
!22592 = !DILocation(line: 497, column: 6, scope: !22541)
!22593 = !DILocation(line: 498, column: 5, scope: !22594)
!22594 = distinct !DILexicalBlock(scope: !22590, file: !3, line: 497, column: 14)
!22595 = !DILocation(line: 499, column: 9, scope: !22594)
!22596 = !DILocation(line: 499, column: 7, scope: !22594)
!22597 = !DILocation(line: 500, column: 16, scope: !22594)
!22598 = !DILocation(line: 500, column: 21, scope: !22594)
!22599 = !DILocation(line: 500, column: 28, scope: !22594)
!22600 = !DILocation(line: 500, column: 3, scope: !22594)
!22601 = !DILocation(line: 501, column: 2, scope: !22594)
!22602 = !DILocation(line: 503, column: 16, scope: !22541)
!22603 = !DILocation(line: 503, column: 2, scope: !22541)
!22604 = !DILocation(line: 503, column: 7, scope: !22541)
!22605 = !DILocation(line: 503, column: 11, scope: !22541)
!22606 = !DILocation(line: 503, column: 14, scope: !22541)
!22607 = !DILocation(line: 504, column: 2, scope: !22541)
!22608 = !DILocation(line: 504, column: 7, scope: !22541)
!22609 = !DILocation(line: 504, column: 14, scope: !22541)
!22610 = !DILocation(line: 506, column: 9, scope: !22541)
!22611 = !DILocation(line: 506, column: 2, scope: !22541)
!22612 = !DILocation(line: 507, column: 1, scope: !22541)
!22613 = distinct !DISubprogram(name: "as_findvertex_lnor", scope: !3, file: !3, line: 509, type: !22614, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22614 = !DISubroutineType(types: !22615)
!22615 = !{!4179, !13020, !4179, !21482, !2417}
!22616 = !DILocalVariable(name: "vlr", arg: 1, scope: !22613, file: !3, line: 509, type: !13020)
!22617 = !DILocation(line: 509, column: 45, scope: !22613)
!22618 = !DILocalVariable(name: "ver", arg: 2, scope: !22613, file: !3, line: 509, type: !4179)
!22619 = !DILocation(line: 509, column: 59, scope: !22613)
!22620 = !DILocalVariable(name: "asv", arg: 3, scope: !22613, file: !3, line: 509, type: !21482)
!22621 = !DILocation(line: 509, column: 72, scope: !22613)
!22622 = !DILocalVariable(name: "lnor", arg: 4, scope: !22613, file: !3, line: 509, type: !2417)
!22623 = !DILocation(line: 509, column: 89, scope: !22613)
!22624 = !DILocalVariable(name: "asf", scope: !22613, file: !3, line: 512, type: !22434)
!22625 = !DILocation(line: 512, column: 10, scope: !22613)
!22626 = !DILocalVariable(name: "a", scope: !22613, file: !3, line: 513, type: !21)
!22627 = !DILocation(line: 513, column: 6, scope: !22613)
!22628 = !DILocation(line: 516, column: 6, scope: !22629)
!22629 = distinct !DILexicalBlock(scope: !22613, file: !3, line: 516, column: 6)
!22630 = !DILocation(line: 516, column: 11, scope: !22629)
!22631 = !DILocation(line: 516, column: 19, scope: !22629)
!22632 = !DILocation(line: 516, column: 6, scope: !22613)
!22633 = !DILocation(line: 517, column: 14, scope: !22634)
!22634 = distinct !DILexicalBlock(scope: !22629, file: !3, line: 516, column: 25)
!22635 = !DILocation(line: 517, column: 19, scope: !22634)
!22636 = !DILocation(line: 517, column: 22, scope: !22634)
!22637 = !DILocation(line: 517, column: 3, scope: !22634)
!22638 = !DILocation(line: 518, column: 10, scope: !22634)
!22639 = !DILocation(line: 518, column: 3, scope: !22634)
!22640 = !DILocation(line: 522, column: 18, scope: !22641)
!22641 = distinct !DILexicalBlock(scope: !22613, file: !3, line: 522, column: 6)
!22642 = !DILocation(line: 522, column: 24, scope: !22641)
!22643 = !DILocation(line: 522, column: 29, scope: !22641)
!22644 = !DILocation(line: 522, column: 6, scope: !22641)
!22645 = !DILocation(line: 522, column: 6, scope: !22613)
!22646 = !DILocation(line: 523, column: 10, scope: !22647)
!22647 = distinct !DILexicalBlock(scope: !22641, file: !3, line: 522, column: 33)
!22648 = !DILocation(line: 523, column: 3, scope: !22647)
!22649 = !DILocation(line: 526, column: 8, scope: !22613)
!22650 = !DILocation(line: 526, column: 13, scope: !22613)
!22651 = !DILocation(line: 526, column: 19, scope: !22613)
!22652 = !DILocation(line: 526, column: 6, scope: !22613)
!22653 = !DILocation(line: 527, column: 2, scope: !22613)
!22654 = !DILocation(line: 527, column: 9, scope: !22613)
!22655 = !DILocation(line: 528, column: 10, scope: !22656)
!22656 = distinct !DILexicalBlock(scope: !22657, file: !3, line: 528, column: 3)
!22657 = distinct !DILexicalBlock(scope: !22613, file: !3, line: 527, column: 14)
!22658 = !DILocation(line: 528, column: 8, scope: !22656)
!22659 = !DILocation(line: 528, column: 15, scope: !22660)
!22660 = distinct !DILexicalBlock(scope: !22656, file: !3, line: 528, column: 3)
!22661 = !DILocation(line: 528, column: 17, scope: !22660)
!22662 = !DILocation(line: 528, column: 3, scope: !22656)
!22663 = !DILocation(line: 529, column: 8, scope: !22664)
!22664 = distinct !DILexicalBlock(scope: !22665, file: !3, line: 529, column: 8)
!22665 = distinct !DILexicalBlock(scope: !22660, file: !3, line: 528, column: 27)
!22666 = !DILocation(line: 529, column: 13, scope: !22664)
!22667 = !DILocation(line: 529, column: 17, scope: !22664)
!22668 = !DILocation(line: 529, column: 20, scope: !22664)
!22669 = !DILocation(line: 529, column: 23, scope: !22664)
!22670 = !DILocation(line: 529, column: 28, scope: !22664)
!22671 = !DILocation(line: 529, column: 32, scope: !22664)
!22672 = !DILocation(line: 529, column: 38, scope: !22664)
!22673 = !DILocation(line: 529, column: 35, scope: !22664)
!22674 = !DILocation(line: 529, column: 8, scope: !22665)
!22675 = !DILocation(line: 531, column: 9, scope: !22676)
!22676 = distinct !DILexicalBlock(scope: !22677, file: !3, line: 531, column: 9)
!22677 = distinct !DILexicalBlock(scope: !22664, file: !3, line: 529, column: 43)
!22678 = !DILocation(line: 531, column: 14, scope: !22676)
!22679 = !DILocation(line: 531, column: 19, scope: !22676)
!22680 = !DILocation(line: 531, column: 9, scope: !22677)
!22681 = !DILocation(line: 532, column: 22, scope: !22682)
!22682 = distinct !DILexicalBlock(scope: !22683, file: !3, line: 532, column: 10)
!22683 = distinct !DILexicalBlock(scope: !22676, file: !3, line: 531, column: 23)
!22684 = !DILocation(line: 532, column: 28, scope: !22682)
!22685 = !DILocation(line: 532, column: 33, scope: !22682)
!22686 = !DILocation(line: 532, column: 38, scope: !22682)
!22687 = !DILocation(line: 532, column: 42, scope: !22682)
!22688 = !DILocation(line: 532, column: 10, scope: !22682)
!22689 = !DILocation(line: 532, column: 10, scope: !22683)
!22690 = !DILocation(line: 533, column: 14, scope: !22691)
!22691 = distinct !DILexicalBlock(scope: !22682, file: !3, line: 532, column: 46)
!22692 = !DILocation(line: 533, column: 19, scope: !22691)
!22693 = !DILocation(line: 533, column: 24, scope: !22691)
!22694 = !DILocation(line: 533, column: 7, scope: !22691)
!22695 = !DILocation(line: 535, column: 5, scope: !22683)
!22696 = !DILocation(line: 536, column: 4, scope: !22677)
!22697 = !DILocation(line: 537, column: 3, scope: !22665)
!22698 = !DILocation(line: 528, column: 23, scope: !22660)
!22699 = !DILocation(line: 528, column: 3, scope: !22660)
!22700 = distinct !{!22700, !22662, !22701}
!22701 = !DILocation(line: 537, column: 3, scope: !22656)
!22702 = !DILocation(line: 538, column: 9, scope: !22657)
!22703 = !DILocation(line: 538, column: 14, scope: !22657)
!22704 = !DILocation(line: 538, column: 7, scope: !22657)
!22705 = distinct !{!22705, !22653, !22706}
!22706 = !DILocation(line: 539, column: 2, scope: !22613)
!22707 = !DILocation(line: 541, column: 2, scope: !22613)
!22708 = !DILocation(line: 542, column: 1, scope: !22613)
!22709 = distinct !DISubprogram(name: "equals_v3v3", scope: !4629, file: !4629, line: 928, type: !22710, scopeLine: 929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22710 = !DISubroutineType(types: !22711)
!22711 = !{!28, !2417, !2417}
!22712 = !DILocalVariable(name: "v1", arg: 1, scope: !22709, file: !4629, line: 928, type: !2417)
!22713 = !DILocation(line: 928, column: 38, scope: !22709)
!22714 = !DILocalVariable(name: "v2", arg: 2, scope: !22709, file: !4629, line: 928, type: !2417)
!22715 = !DILocation(line: 928, column: 57, scope: !22709)
!22716 = !DILocation(line: 930, column: 11, scope: !22709)
!22717 = !DILocation(line: 930, column: 20, scope: !22709)
!22718 = !DILocation(line: 930, column: 17, scope: !22709)
!22719 = !DILocation(line: 930, column: 27, scope: !22709)
!22720 = !DILocation(line: 930, column: 31, scope: !22709)
!22721 = !DILocation(line: 930, column: 40, scope: !22709)
!22722 = !DILocation(line: 930, column: 37, scope: !22709)
!22723 = !DILocation(line: 930, column: 47, scope: !22709)
!22724 = !DILocation(line: 930, column: 51, scope: !22709)
!22725 = !DILocation(line: 930, column: 60, scope: !22709)
!22726 = !DILocation(line: 930, column: 57, scope: !22709)
!22727 = !DILocation(line: 0, scope: !22709)
!22728 = !DILocation(line: 930, column: 9, scope: !22709)
!22729 = !DILocation(line: 930, column: 2, scope: !22709)
!22730 = distinct !DISubprogram(name: "set_phong_threshold", scope: !3, file: !3, line: 4048, type: !22731, scopeLine: 4049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22731 = !DISubroutineType(types: !22732)
!22732 = !{null, !3063}
!22733 = !DILocalVariable(name: "obr", arg: 1, scope: !22730, file: !3, line: 4048, type: !3063)
!22734 = !DILocation(line: 4048, column: 44, scope: !22730)
!22735 = !DILocalVariable(name: "vlr", scope: !22730, file: !3, line: 4051, type: !13020)
!22736 = !DILocation(line: 4051, column: 11, scope: !22730)
!22737 = !DILocalVariable(name: "thresh", scope: !22730, file: !3, line: 4052, type: !45)
!22738 = !DILocation(line: 4052, column: 8, scope: !22730)
!22739 = !DILocalVariable(name: "dot", scope: !22730, file: !3, line: 4052, type: !45)
!22740 = !DILocation(line: 4052, column: 21, scope: !22730)
!22741 = !DILocalVariable(name: "tot", scope: !22730, file: !3, line: 4053, type: !21)
!22742 = !DILocation(line: 4053, column: 6, scope: !22730)
!22743 = !DILocalVariable(name: "i", scope: !22730, file: !3, line: 4053, type: !21)
!22744 = !DILocation(line: 4053, column: 13, scope: !22730)
!22745 = !DILocation(line: 4059, column: 8, scope: !22746)
!22746 = distinct !DILexicalBlock(scope: !22730, file: !3, line: 4059, column: 2)
!22747 = !DILocation(line: 4059, column: 7, scope: !22746)
!22748 = !DILocation(line: 4059, column: 12, scope: !22749)
!22749 = distinct !DILexicalBlock(scope: !22746, file: !3, line: 4059, column: 2)
!22750 = !DILocation(line: 4059, column: 14, scope: !22749)
!22751 = !DILocation(line: 4059, column: 19, scope: !22749)
!22752 = !DILocation(line: 4059, column: 13, scope: !22749)
!22753 = !DILocation(line: 4059, column: 2, scope: !22746)
!22754 = !DILocation(line: 4060, column: 25, scope: !22755)
!22755 = distinct !DILexicalBlock(scope: !22749, file: !3, line: 4059, column: 33)
!22756 = !DILocation(line: 4060, column: 30, scope: !22755)
!22757 = !DILocation(line: 4060, column: 8, scope: !22755)
!22758 = !DILocation(line: 4060, column: 6, scope: !22755)
!22759 = !DILocation(line: 4061, column: 8, scope: !22760)
!22760 = distinct !DILexicalBlock(scope: !22755, file: !3, line: 4061, column: 7)
!22761 = !DILocation(line: 4061, column: 13, scope: !22760)
!22762 = !DILocation(line: 4061, column: 18, scope: !22760)
!22763 = !DILocation(line: 4061, column: 30, scope: !22760)
!22764 = !DILocation(line: 4061, column: 34, scope: !22760)
!22765 = !DILocation(line: 4061, column: 39, scope: !22760)
!22766 = !DILocation(line: 4061, column: 44, scope: !22760)
!22767 = !DILocation(line: 4061, column: 55, scope: !22760)
!22768 = !DILocation(line: 4061, column: 7, scope: !22755)
!22769 = !DILocation(line: 4062, column: 18, scope: !22770)
!22770 = distinct !DILexicalBlock(scope: !22760, file: !3, line: 4061, column: 60)
!22771 = !DILocation(line: 4062, column: 23, scope: !22770)
!22772 = !DILocation(line: 4062, column: 26, scope: !22770)
!22773 = !DILocation(line: 4062, column: 31, scope: !22770)
!22774 = !DILocation(line: 4062, column: 35, scope: !22770)
!22775 = !DILocation(line: 4062, column: 9, scope: !22770)
!22776 = !DILocation(line: 4062, column: 7, scope: !22770)
!22777 = !DILocation(line: 4063, column: 9, scope: !22770)
!22778 = !DILocation(line: 4063, column: 7, scope: !22770)
!22779 = !DILocation(line: 4064, column: 8, scope: !22780)
!22780 = distinct !DILexicalBlock(scope: !22770, file: !3, line: 4064, column: 8)
!22781 = !DILocation(line: 4064, column: 11, scope: !22780)
!22782 = !DILocation(line: 4064, column: 8, scope: !22770)
!22783 = !DILocation(line: 4065, column: 14, scope: !22784)
!22784 = distinct !DILexicalBlock(scope: !22780, file: !3, line: 4064, column: 18)
!22785 = !DILocation(line: 4065, column: 11, scope: !22784)
!22786 = !DILocation(line: 4065, column: 22, scope: !22784)
!22787 = !DILocation(line: 4066, column: 4, scope: !22784)
!22788 = !DILocation(line: 4067, column: 18, scope: !22770)
!22789 = !DILocation(line: 4067, column: 23, scope: !22770)
!22790 = !DILocation(line: 4067, column: 26, scope: !22770)
!22791 = !DILocation(line: 4067, column: 31, scope: !22770)
!22792 = !DILocation(line: 4067, column: 35, scope: !22770)
!22793 = !DILocation(line: 4067, column: 9, scope: !22770)
!22794 = !DILocation(line: 4067, column: 7, scope: !22770)
!22795 = !DILocation(line: 4068, column: 9, scope: !22770)
!22796 = !DILocation(line: 4068, column: 7, scope: !22770)
!22797 = !DILocation(line: 4069, column: 8, scope: !22798)
!22798 = distinct !DILexicalBlock(scope: !22770, file: !3, line: 4069, column: 8)
!22799 = !DILocation(line: 4069, column: 11, scope: !22798)
!22800 = !DILocation(line: 4069, column: 8, scope: !22770)
!22801 = !DILocation(line: 4070, column: 14, scope: !22802)
!22802 = distinct !DILexicalBlock(scope: !22798, file: !3, line: 4069, column: 18)
!22803 = !DILocation(line: 4070, column: 11, scope: !22802)
!22804 = !DILocation(line: 4070, column: 22, scope: !22802)
!22805 = !DILocation(line: 4071, column: 4, scope: !22802)
!22806 = !DILocation(line: 4073, column: 18, scope: !22770)
!22807 = !DILocation(line: 4073, column: 23, scope: !22770)
!22808 = !DILocation(line: 4073, column: 26, scope: !22770)
!22809 = !DILocation(line: 4073, column: 31, scope: !22770)
!22810 = !DILocation(line: 4073, column: 35, scope: !22770)
!22811 = !DILocation(line: 4073, column: 9, scope: !22770)
!22812 = !DILocation(line: 4073, column: 7, scope: !22770)
!22813 = !DILocation(line: 4074, column: 9, scope: !22770)
!22814 = !DILocation(line: 4074, column: 7, scope: !22770)
!22815 = !DILocation(line: 4075, column: 8, scope: !22816)
!22816 = distinct !DILexicalBlock(scope: !22770, file: !3, line: 4075, column: 8)
!22817 = !DILocation(line: 4075, column: 11, scope: !22816)
!22818 = !DILocation(line: 4075, column: 8, scope: !22770)
!22819 = !DILocation(line: 4076, column: 14, scope: !22820)
!22820 = distinct !DILexicalBlock(scope: !22816, file: !3, line: 4075, column: 18)
!22821 = !DILocation(line: 4076, column: 11, scope: !22820)
!22822 = !DILocation(line: 4076, column: 22, scope: !22820)
!22823 = !DILocation(line: 4077, column: 4, scope: !22820)
!22824 = !DILocation(line: 4079, column: 8, scope: !22825)
!22825 = distinct !DILexicalBlock(scope: !22770, file: !3, line: 4079, column: 8)
!22826 = !DILocation(line: 4079, column: 13, scope: !22825)
!22827 = !DILocation(line: 4079, column: 8, scope: !22770)
!22828 = !DILocation(line: 4080, column: 19, scope: !22829)
!22829 = distinct !DILexicalBlock(scope: !22825, file: !3, line: 4079, column: 17)
!22830 = !DILocation(line: 4080, column: 24, scope: !22829)
!22831 = !DILocation(line: 4080, column: 27, scope: !22829)
!22832 = !DILocation(line: 4080, column: 32, scope: !22829)
!22833 = !DILocation(line: 4080, column: 36, scope: !22829)
!22834 = !DILocation(line: 4080, column: 10, scope: !22829)
!22835 = !DILocation(line: 4080, column: 8, scope: !22829)
!22836 = !DILocation(line: 4081, column: 10, scope: !22829)
!22837 = !DILocation(line: 4081, column: 8, scope: !22829)
!22838 = !DILocation(line: 4082, column: 9, scope: !22839)
!22839 = distinct !DILexicalBlock(scope: !22829, file: !3, line: 4082, column: 9)
!22840 = !DILocation(line: 4082, column: 12, scope: !22839)
!22841 = !DILocation(line: 4082, column: 9, scope: !22829)
!22842 = !DILocation(line: 4083, column: 15, scope: !22843)
!22843 = distinct !DILexicalBlock(scope: !22839, file: !3, line: 4082, column: 19)
!22844 = !DILocation(line: 4083, column: 12, scope: !22843)
!22845 = !DILocation(line: 4083, column: 23, scope: !22843)
!22846 = !DILocation(line: 4084, column: 5, scope: !22843)
!22847 = !DILocation(line: 4085, column: 4, scope: !22829)
!22848 = !DILocation(line: 4086, column: 3, scope: !22770)
!22849 = !DILocation(line: 4087, column: 2, scope: !22755)
!22850 = !DILocation(line: 4059, column: 29, scope: !22749)
!22851 = !DILocation(line: 4059, column: 2, scope: !22749)
!22852 = distinct !{!22852, !22753, !22853}
!22853 = !DILocation(line: 4087, column: 2, scope: !22746)
!22854 = !DILocation(line: 4089, column: 6, scope: !22855)
!22855 = distinct !DILexicalBlock(scope: !22730, file: !3, line: 4089, column: 6)
!22856 = !DILocation(line: 4089, column: 6, scope: !22730)
!22857 = !DILocation(line: 4090, column: 19, scope: !22858)
!22858 = distinct !DILexicalBlock(scope: !22855, file: !3, line: 4089, column: 11)
!22859 = !DILocation(line: 4090, column: 12, scope: !22858)
!22860 = !DILocation(line: 4090, column: 9, scope: !22858)
!22861 = !DILocation(line: 4091, column: 53, scope: !22858)
!22862 = !DILocation(line: 4091, column: 46, scope: !22858)
!22863 = !DILocation(line: 4091, column: 45, scope: !22858)
!22864 = !DILocation(line: 4091, column: 24, scope: !22858)
!22865 = !DILocation(line: 4091, column: 3, scope: !22858)
!22866 = !DILocation(line: 4091, column: 8, scope: !22858)
!22867 = !DILocation(line: 4091, column: 12, scope: !22858)
!22868 = !DILocation(line: 4091, column: 22, scope: !22858)
!22869 = !DILocation(line: 4092, column: 2, scope: !22858)
!22870 = !DILocation(line: 4093, column: 1, scope: !22730)
!22871 = distinct !DISubprogram(name: "split_quads", scope: !3, file: !3, line: 4137, type: !22872, scopeLine: 4138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!22872 = !DISubroutineType(types: !22873)
!22873 = !{null, !3063, !21}
!22874 = !DILocalVariable(name: "obr", arg: 1, scope: !22871, file: !3, line: 4137, type: !3063)
!22875 = !DILocation(line: 4137, column: 36, scope: !22871)
!22876 = !DILocalVariable(name: "dir", arg: 2, scope: !22871, file: !3, line: 4137, type: !21)
!22877 = !DILocation(line: 4137, column: 45, scope: !22871)
!22878 = !DILocalVariable(name: "vlr", scope: !22871, file: !3, line: 4139, type: !13020)
!22879 = !DILocation(line: 4139, column: 11, scope: !22871)
!22880 = !DILocalVariable(name: "vlr1", scope: !22871, file: !3, line: 4139, type: !13020)
!22881 = !DILocation(line: 4139, column: 17, scope: !22871)
!22882 = !DILocalVariable(name: "a", scope: !22871, file: !3, line: 4140, type: !21)
!22883 = !DILocation(line: 4140, column: 6, scope: !22871)
!22884 = !DILocation(line: 4142, column: 9, scope: !22885)
!22885 = distinct !DILexicalBlock(scope: !22871, file: !3, line: 4142, column: 2)
!22886 = !DILocation(line: 4142, column: 14, scope: !22885)
!22887 = !DILocation(line: 4142, column: 21, scope: !22885)
!22888 = !DILocation(line: 4142, column: 8, scope: !22885)
!22889 = !DILocation(line: 4142, column: 7, scope: !22885)
!22890 = !DILocation(line: 4142, column: 25, scope: !22891)
!22891 = distinct !DILexicalBlock(scope: !22885, file: !3, line: 4142, column: 2)
!22892 = !DILocation(line: 4142, column: 26, scope: !22891)
!22893 = !DILocation(line: 4142, column: 2, scope: !22885)
!22894 = !DILocation(line: 4143, column: 25, scope: !22895)
!22895 = distinct !DILexicalBlock(scope: !22891, file: !3, line: 4142, column: 36)
!22896 = !DILocation(line: 4143, column: 30, scope: !22895)
!22897 = !DILocation(line: 4143, column: 8, scope: !22895)
!22898 = !DILocation(line: 4143, column: 6, scope: !22895)
!22899 = !DILocation(line: 4146, column: 7, scope: !22900)
!22900 = distinct !DILexicalBlock(scope: !22895, file: !3, line: 4146, column: 7)
!22901 = !DILocation(line: 4146, column: 12, scope: !22900)
!22902 = !DILocation(line: 4146, column: 15, scope: !22900)
!22903 = !DILocation(line: 4146, column: 19, scope: !22900)
!22904 = !DILocation(line: 4146, column: 24, scope: !22900)
!22905 = !DILocation(line: 4146, column: 29, scope: !22900)
!22906 = !DILocation(line: 4146, column: 40, scope: !22900)
!22907 = !DILocation(line: 4146, column: 44, scope: !22900)
!22908 = !DILocation(line: 4146, column: 48, scope: !22900)
!22909 = !DILocation(line: 4146, column: 53, scope: !22900)
!22910 = !DILocation(line: 4146, column: 58, scope: !22900)
!22911 = !DILocation(line: 4146, column: 72, scope: !22900)
!22912 = !DILocation(line: 4146, column: 7, scope: !22895)
!22913 = !DILocation(line: 4148, column: 8, scope: !22914)
!22914 = distinct !DILexicalBlock(scope: !22915, file: !3, line: 4148, column: 8)
!22915 = distinct !DILexicalBlock(scope: !22900, file: !3, line: 4146, column: 90)
!22916 = !DILocation(line: 4148, column: 13, scope: !22914)
!22917 = !DILocation(line: 4148, column: 8, scope: !22915)
!22918 = !DILocation(line: 4150, column: 27, scope: !22919)
!22919 = distinct !DILexicalBlock(scope: !22914, file: !3, line: 4148, column: 17)
!22920 = !DILocation(line: 4150, column: 32, scope: !22919)
!22921 = !DILocation(line: 4150, column: 11, scope: !22919)
!22922 = !DILocation(line: 4150, column: 9, scope: !22919)
!22923 = !DILocation(line: 4151, column: 5, scope: !22919)
!22924 = !DILocation(line: 4151, column: 11, scope: !22919)
!22925 = !DILocation(line: 4151, column: 16, scope: !22919)
!22926 = !DILocation(line: 4153, column: 10, scope: !22927)
!22927 = distinct !DILexicalBlock(scope: !22919, file: !3, line: 4153, column: 10)
!22928 = !DILocation(line: 4153, column: 13, scope: !22927)
!22929 = !DILocation(line: 4153, column: 10, scope: !22919)
!22930 = !DILocation(line: 4153, column: 19, scope: !22927)
!22931 = !DILocation(line: 4153, column: 24, scope: !22927)
!22932 = !DILocation(line: 4153, column: 29, scope: !22927)
!22933 = !DILocation(line: 4154, column: 10, scope: !22927)
!22934 = !DILocation(line: 4154, column: 15, scope: !22927)
!22935 = !DILocation(line: 4154, column: 20, scope: !22927)
!22936 = !DILocation(line: 4157, column: 9, scope: !22937)
!22937 = distinct !DILexicalBlock(scope: !22919, file: !3, line: 4157, column: 9)
!22938 = !DILocation(line: 4157, column: 14, scope: !22937)
!22939 = !DILocation(line: 4157, column: 19, scope: !22937)
!22940 = !DILocation(line: 4157, column: 9, scope: !22919)
!22941 = !DILocation(line: 4158, column: 16, scope: !22942)
!22942 = distinct !DILexicalBlock(scope: !22937, file: !3, line: 4157, column: 34)
!22943 = !DILocation(line: 4158, column: 21, scope: !22942)
!22944 = !DILocation(line: 4158, column: 6, scope: !22942)
!22945 = !DILocation(line: 4158, column: 12, scope: !22942)
!22946 = !DILocation(line: 4158, column: 14, scope: !22942)
!22947 = !DILocation(line: 4159, column: 16, scope: !22942)
!22948 = !DILocation(line: 4159, column: 21, scope: !22942)
!22949 = !DILocation(line: 4159, column: 6, scope: !22942)
!22950 = !DILocation(line: 4159, column: 12, scope: !22942)
!22951 = !DILocation(line: 4159, column: 14, scope: !22942)
!22952 = !DILocation(line: 4160, column: 16, scope: !22942)
!22953 = !DILocation(line: 4160, column: 21, scope: !22942)
!22954 = !DILocation(line: 4160, column: 6, scope: !22942)
!22955 = !DILocation(line: 4160, column: 12, scope: !22942)
!22956 = !DILocation(line: 4160, column: 14, scope: !22942)
!22957 = !DILocation(line: 4162, column: 16, scope: !22942)
!22958 = !DILocation(line: 4162, column: 21, scope: !22942)
!22959 = !DILocation(line: 4162, column: 6, scope: !22942)
!22960 = !DILocation(line: 4162, column: 11, scope: !22942)
!22961 = !DILocation(line: 4162, column: 14, scope: !22942)
!22962 = !DILocation(line: 4164, column: 6, scope: !22942)
!22963 = !DILocation(line: 4164, column: 12, scope: !22942)
!22964 = !DILocation(line: 4164, column: 17, scope: !22942)
!22965 = !DILocation(line: 4165, column: 5, scope: !22942)
!22966 = !DILocation(line: 4167, column: 16, scope: !22967)
!22967 = distinct !DILexicalBlock(scope: !22937, file: !3, line: 4166, column: 10)
!22968 = !DILocation(line: 4167, column: 21, scope: !22967)
!22969 = !DILocation(line: 4167, column: 6, scope: !22967)
!22970 = !DILocation(line: 4167, column: 12, scope: !22967)
!22971 = !DILocation(line: 4167, column: 14, scope: !22967)
!22972 = !DILocation(line: 4168, column: 16, scope: !22967)
!22973 = !DILocation(line: 4168, column: 21, scope: !22967)
!22974 = !DILocation(line: 4168, column: 6, scope: !22967)
!22975 = !DILocation(line: 4168, column: 12, scope: !22967)
!22976 = !DILocation(line: 4168, column: 14, scope: !22967)
!22977 = !DILocation(line: 4169, column: 16, scope: !22967)
!22978 = !DILocation(line: 4169, column: 21, scope: !22967)
!22979 = !DILocation(line: 4169, column: 6, scope: !22967)
!22980 = !DILocation(line: 4169, column: 12, scope: !22967)
!22981 = !DILocation(line: 4169, column: 14, scope: !22967)
!22982 = !DILocation(line: 4171, column: 6, scope: !22967)
!22983 = !DILocation(line: 4171, column: 12, scope: !22967)
!22984 = !DILocation(line: 4171, column: 17, scope: !22967)
!22985 = !DILocation(line: 4173, column: 15, scope: !22919)
!22986 = !DILocation(line: 4173, column: 21, scope: !22919)
!22987 = !DILocation(line: 4173, column: 24, scope: !22919)
!22988 = !DILocation(line: 4173, column: 5, scope: !22919)
!22989 = !DILocation(line: 4173, column: 10, scope: !22919)
!22990 = !DILocation(line: 4173, column: 13, scope: !22919)
!22991 = !DILocation(line: 4196, column: 19, scope: !22919)
!22992 = !DILocation(line: 4196, column: 24, scope: !22919)
!22993 = !DILocation(line: 4196, column: 27, scope: !22919)
!22994 = !DILocation(line: 4196, column: 32, scope: !22919)
!22995 = !DILocation(line: 4196, column: 36, scope: !22919)
!22996 = !DILocation(line: 4196, column: 40, scope: !22919)
!22997 = !DILocation(line: 4196, column: 45, scope: !22919)
!22998 = !DILocation(line: 4196, column: 49, scope: !22919)
!22999 = !DILocation(line: 4196, column: 53, scope: !22919)
!23000 = !DILocation(line: 4196, column: 58, scope: !22919)
!23001 = !DILocation(line: 4196, column: 62, scope: !22919)
!23002 = !DILocation(line: 4196, column: 5, scope: !22919)
!23003 = !DILocation(line: 4197, column: 19, scope: !22919)
!23004 = !DILocation(line: 4197, column: 25, scope: !22919)
!23005 = !DILocation(line: 4197, column: 28, scope: !22919)
!23006 = !DILocation(line: 4197, column: 34, scope: !22919)
!23007 = !DILocation(line: 4197, column: 38, scope: !22919)
!23008 = !DILocation(line: 4197, column: 42, scope: !22919)
!23009 = !DILocation(line: 4197, column: 48, scope: !22919)
!23010 = !DILocation(line: 4197, column: 52, scope: !22919)
!23011 = !DILocation(line: 4197, column: 56, scope: !22919)
!23012 = !DILocation(line: 4197, column: 62, scope: !22919)
!23013 = !DILocation(line: 4197, column: 66, scope: !22919)
!23014 = !DILocation(line: 4197, column: 5, scope: !22919)
!23015 = !DILocation(line: 4198, column: 4, scope: !22919)
!23016 = !DILocation(line: 4200, column: 9, scope: !22914)
!23017 = !DILocation(line: 4200, column: 14, scope: !22914)
!23018 = !DILocation(line: 4200, column: 19, scope: !22914)
!23019 = !DILocation(line: 4201, column: 3, scope: !22915)
!23020 = !DILocation(line: 4202, column: 2, scope: !22895)
!23021 = !DILocation(line: 4142, column: 32, scope: !22891)
!23022 = !DILocation(line: 4142, column: 2, scope: !22891)
!23023 = distinct !{!23023, !22893, !23024}
!23024 = !DILocation(line: 4202, column: 2, scope: !22885)
!23025 = !DILocation(line: 4203, column: 1, scope: !22871)
!23026 = distinct !DISubprogram(name: "check_non_flat_quads", scope: !3, file: !3, line: 4205, type: !22731, scopeLine: 4206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23027 = !DILocalVariable(name: "obr", arg: 1, scope: !23026, file: !3, line: 4205, type: !3063)
!23028 = !DILocation(line: 4205, column: 45, scope: !23026)
!23029 = !DILocalVariable(name: "vlr", scope: !23026, file: !3, line: 4207, type: !13020)
!23030 = !DILocation(line: 4207, column: 11, scope: !23026)
!23031 = !DILocalVariable(name: "vlr1", scope: !23026, file: !3, line: 4207, type: !13020)
!23032 = !DILocation(line: 4207, column: 17, scope: !23026)
!23033 = !DILocalVariable(name: "v1", scope: !23026, file: !3, line: 4208, type: !4179)
!23034 = !DILocation(line: 4208, column: 11, scope: !23026)
!23035 = !DILocalVariable(name: "v2", scope: !23026, file: !3, line: 4208, type: !4179)
!23036 = !DILocation(line: 4208, column: 16, scope: !23026)
!23037 = !DILocalVariable(name: "v3", scope: !23026, file: !3, line: 4208, type: !4179)
!23038 = !DILocation(line: 4208, column: 21, scope: !23026)
!23039 = !DILocalVariable(name: "v4", scope: !23026, file: !3, line: 4208, type: !4179)
!23040 = !DILocation(line: 4208, column: 26, scope: !23026)
!23041 = !DILocalVariable(name: "nor", scope: !23026, file: !3, line: 4209, type: !188)
!23042 = !DILocation(line: 4209, column: 8, scope: !23026)
!23043 = !DILocalVariable(name: "xn", scope: !23026, file: !3, line: 4209, type: !45)
!23044 = !DILocation(line: 4209, column: 16, scope: !23026)
!23045 = !DILocalVariable(name: "flen", scope: !23026, file: !3, line: 4209, type: !45)
!23046 = !DILocation(line: 4209, column: 20, scope: !23026)
!23047 = !DILocalVariable(name: "a", scope: !23026, file: !3, line: 4210, type: !21)
!23048 = !DILocation(line: 4210, column: 6, scope: !23026)
!23049 = !DILocation(line: 4212, column: 9, scope: !23050)
!23050 = distinct !DILexicalBlock(scope: !23026, file: !3, line: 4212, column: 2)
!23051 = !DILocation(line: 4212, column: 14, scope: !23050)
!23052 = !DILocation(line: 4212, column: 21, scope: !23050)
!23053 = !DILocation(line: 4212, column: 8, scope: !23050)
!23054 = !DILocation(line: 4212, column: 7, scope: !23050)
!23055 = !DILocation(line: 4212, column: 25, scope: !23056)
!23056 = distinct !DILexicalBlock(scope: !23050, file: !3, line: 4212, column: 2)
!23057 = !DILocation(line: 4212, column: 26, scope: !23056)
!23058 = !DILocation(line: 4212, column: 2, scope: !23050)
!23059 = !DILocation(line: 4213, column: 25, scope: !23060)
!23060 = distinct !DILexicalBlock(scope: !23056, file: !3, line: 4212, column: 36)
!23061 = !DILocation(line: 4213, column: 30, scope: !23060)
!23062 = !DILocation(line: 4213, column: 8, scope: !23060)
!23063 = !DILocation(line: 4213, column: 6, scope: !23060)
!23064 = !DILocation(line: 4216, column: 7, scope: !23065)
!23065 = distinct !DILexicalBlock(scope: !23060, file: !3, line: 4216, column: 7)
!23066 = !DILocation(line: 4216, column: 12, scope: !23065)
!23067 = !DILocation(line: 4216, column: 15, scope: !23065)
!23068 = !DILocation(line: 4216, column: 19, scope: !23065)
!23069 = !DILocation(line: 4216, column: 24, scope: !23065)
!23070 = !DILocation(line: 4216, column: 29, scope: !23065)
!23071 = !DILocation(line: 4216, column: 40, scope: !23065)
!23072 = !DILocation(line: 4216, column: 44, scope: !23065)
!23073 = !DILocation(line: 4216, column: 48, scope: !23065)
!23074 = !DILocation(line: 4216, column: 53, scope: !23065)
!23075 = !DILocation(line: 4216, column: 58, scope: !23065)
!23076 = !DILocation(line: 4216, column: 72, scope: !23065)
!23077 = !DILocation(line: 4216, column: 7, scope: !23060)
!23078 = !DILocation(line: 4219, column: 8, scope: !23079)
!23079 = distinct !DILexicalBlock(scope: !23065, file: !3, line: 4216, column: 90)
!23080 = !DILocation(line: 4219, column: 13, scope: !23079)
!23081 = !DILocation(line: 4219, column: 6, scope: !23079)
!23082 = !DILocation(line: 4220, column: 8, scope: !23079)
!23083 = !DILocation(line: 4220, column: 13, scope: !23079)
!23084 = !DILocation(line: 4220, column: 6, scope: !23079)
!23085 = !DILocation(line: 4221, column: 8, scope: !23079)
!23086 = !DILocation(line: 4221, column: 13, scope: !23079)
!23087 = !DILocation(line: 4221, column: 6, scope: !23079)
!23088 = !DILocation(line: 4222, column: 8, scope: !23079)
!23089 = !DILocation(line: 4222, column: 13, scope: !23079)
!23090 = !DILocation(line: 4222, column: 6, scope: !23079)
!23091 = !DILocation(line: 4223, column: 16, scope: !23079)
!23092 = !DILocation(line: 4223, column: 21, scope: !23079)
!23093 = !DILocation(line: 4223, column: 25, scope: !23079)
!23094 = !DILocation(line: 4223, column: 29, scope: !23079)
!23095 = !DILocation(line: 4223, column: 33, scope: !23079)
!23096 = !DILocation(line: 4223, column: 4, scope: !23079)
!23097 = !DILocation(line: 4224, column: 9, scope: !23098)
!23098 = distinct !DILexicalBlock(scope: !23079, file: !3, line: 4224, column: 9)
!23099 = !DILocation(line: 4224, column: 20, scope: !23098)
!23100 = !DILocation(line: 4224, column: 35, scope: !23098)
!23101 = !DILocation(line: 4224, column: 39, scope: !23098)
!23102 = !DILocation(line: 4224, column: 50, scope: !23098)
!23103 = !DILocation(line: 4224, column: 65, scope: !23098)
!23104 = !DILocation(line: 4224, column: 68, scope: !23098)
!23105 = !DILocation(line: 4224, column: 79, scope: !23098)
!23106 = !DILocation(line: 4224, column: 9, scope: !23079)
!23107 = !DILocation(line: 4225, column: 14, scope: !23108)
!23108 = distinct !DILexicalBlock(scope: !23098, file: !3, line: 4224, column: 96)
!23109 = !DILocation(line: 4225, column: 5, scope: !23108)
!23110 = !DILocation(line: 4225, column: 10, scope: !23108)
!23111 = !DILocation(line: 4225, column: 12, scope: !23108)
!23112 = !DILocation(line: 4226, column: 14, scope: !23108)
!23113 = !DILocation(line: 4226, column: 5, scope: !23108)
!23114 = !DILocation(line: 4226, column: 10, scope: !23108)
!23115 = !DILocation(line: 4226, column: 12, scope: !23108)
!23116 = !DILocation(line: 4227, column: 14, scope: !23108)
!23117 = !DILocation(line: 4227, column: 5, scope: !23108)
!23118 = !DILocation(line: 4227, column: 10, scope: !23108)
!23119 = !DILocation(line: 4227, column: 12, scope: !23108)
!23120 = !DILocation(line: 4228, column: 5, scope: !23108)
!23121 = !DILocation(line: 4228, column: 10, scope: !23108)
!23122 = !DILocation(line: 4228, column: 12, scope: !23108)
!23123 = !DILocation(line: 4229, column: 4, scope: !23108)
!23124 = !DILocation(line: 4231, column: 17, scope: !23125)
!23125 = distinct !DILexicalBlock(scope: !23098, file: !3, line: 4230, column: 9)
!23126 = !DILocation(line: 4231, column: 22, scope: !23125)
!23127 = !DILocation(line: 4231, column: 26, scope: !23125)
!23128 = !DILocation(line: 4231, column: 30, scope: !23125)
!23129 = !DILocation(line: 4231, column: 34, scope: !23125)
!23130 = !DILocation(line: 4231, column: 5, scope: !23125)
!23131 = !DILocation(line: 4232, column: 10, scope: !23132)
!23132 = distinct !DILexicalBlock(scope: !23125, file: !3, line: 4232, column: 10)
!23133 = !DILocation(line: 4232, column: 21, scope: !23132)
!23134 = !DILocation(line: 4232, column: 36, scope: !23132)
!23135 = !DILocation(line: 4232, column: 40, scope: !23132)
!23136 = !DILocation(line: 4232, column: 51, scope: !23132)
!23137 = !DILocation(line: 4232, column: 66, scope: !23132)
!23138 = !DILocation(line: 4232, column: 69, scope: !23132)
!23139 = !DILocation(line: 4232, column: 80, scope: !23132)
!23140 = !DILocation(line: 4232, column: 10, scope: !23125)
!23141 = !DILocation(line: 4233, column: 15, scope: !23142)
!23142 = distinct !DILexicalBlock(scope: !23132, file: !3, line: 4232, column: 97)
!23143 = !DILocation(line: 4233, column: 6, scope: !23142)
!23144 = !DILocation(line: 4233, column: 11, scope: !23142)
!23145 = !DILocation(line: 4233, column: 13, scope: !23142)
!23146 = !DILocation(line: 4234, column: 15, scope: !23142)
!23147 = !DILocation(line: 4234, column: 6, scope: !23142)
!23148 = !DILocation(line: 4234, column: 11, scope: !23142)
!23149 = !DILocation(line: 4234, column: 13, scope: !23142)
!23150 = !DILocation(line: 4235, column: 6, scope: !23142)
!23151 = !DILocation(line: 4235, column: 11, scope: !23142)
!23152 = !DILocation(line: 4235, column: 13, scope: !23142)
!23153 = !DILocation(line: 4236, column: 5, scope: !23142)
!23154 = !DILocation(line: 4238, column: 18, scope: !23155)
!23155 = distinct !DILexicalBlock(scope: !23132, file: !3, line: 4237, column: 10)
!23156 = !DILocation(line: 4238, column: 23, scope: !23155)
!23157 = !DILocation(line: 4238, column: 27, scope: !23155)
!23158 = !DILocation(line: 4238, column: 31, scope: !23155)
!23159 = !DILocation(line: 4238, column: 35, scope: !23155)
!23160 = !DILocation(line: 4238, column: 6, scope: !23155)
!23161 = !DILocation(line: 4239, column: 11, scope: !23162)
!23162 = distinct !DILexicalBlock(scope: !23155, file: !3, line: 4239, column: 11)
!23163 = !DILocation(line: 4239, column: 22, scope: !23162)
!23164 = !DILocation(line: 4239, column: 37, scope: !23162)
!23165 = !DILocation(line: 4239, column: 41, scope: !23162)
!23166 = !DILocation(line: 4239, column: 52, scope: !23162)
!23167 = !DILocation(line: 4239, column: 67, scope: !23162)
!23168 = !DILocation(line: 4239, column: 70, scope: !23162)
!23169 = !DILocation(line: 4239, column: 81, scope: !23162)
!23170 = !DILocation(line: 4239, column: 11, scope: !23155)
!23171 = !DILocation(line: 4240, column: 7, scope: !23172)
!23172 = distinct !DILexicalBlock(scope: !23162, file: !3, line: 4239, column: 98)
!23173 = !DILocation(line: 4240, column: 12, scope: !23172)
!23174 = !DILocation(line: 4240, column: 14, scope: !23172)
!23175 = !DILocation(line: 4241, column: 6, scope: !23172)
!23176 = !DILocation(line: 4243, column: 19, scope: !23177)
!23177 = distinct !DILexicalBlock(scope: !23162, file: !3, line: 4242, column: 11)
!23178 = !DILocation(line: 4243, column: 24, scope: !23177)
!23179 = !DILocation(line: 4243, column: 28, scope: !23177)
!23180 = !DILocation(line: 4243, column: 32, scope: !23177)
!23181 = !DILocation(line: 4243, column: 36, scope: !23177)
!23182 = !DILocation(line: 4243, column: 7, scope: !23177)
!23183 = !DILocation(line: 4244, column: 12, scope: !23184)
!23184 = distinct !DILexicalBlock(scope: !23177, file: !3, line: 4244, column: 12)
!23185 = !DILocation(line: 4244, column: 23, scope: !23184)
!23186 = !DILocation(line: 4244, column: 38, scope: !23184)
!23187 = !DILocation(line: 4244, column: 42, scope: !23184)
!23188 = !DILocation(line: 4244, column: 53, scope: !23184)
!23189 = !DILocation(line: 4244, column: 68, scope: !23184)
!23190 = !DILocation(line: 4244, column: 71, scope: !23184)
!23191 = !DILocation(line: 4244, column: 82, scope: !23184)
!23192 = !DILocation(line: 4244, column: 12, scope: !23177)
!23193 = !DILocation(line: 4245, column: 8, scope: !23194)
!23194 = distinct !DILexicalBlock(scope: !23184, file: !3, line: 4244, column: 99)
!23195 = !DILocation(line: 4245, column: 13, scope: !23194)
!23196 = !DILocation(line: 4245, column: 15, scope: !23194)
!23197 = !DILocation(line: 4246, column: 7, scope: !23194)
!23198 = !DILocation(line: 4251, column: 8, scope: !23199)
!23199 = distinct !DILexicalBlock(scope: !23079, file: !3, line: 4251, column: 8)
!23200 = !DILocation(line: 4251, column: 13, scope: !23199)
!23201 = !DILocation(line: 4251, column: 8, scope: !23079)
!23202 = !DILocation(line: 4261, column: 25, scope: !23203)
!23203 = distinct !DILexicalBlock(scope: !23199, file: !3, line: 4251, column: 17)
!23204 = !DILocation(line: 4261, column: 30, scope: !23203)
!23205 = !DILocation(line: 4261, column: 35, scope: !23203)
!23206 = !DILocation(line: 4261, column: 39, scope: !23203)
!23207 = !DILocation(line: 4261, column: 43, scope: !23203)
!23208 = !DILocation(line: 4261, column: 48, scope: !23203)
!23209 = !DILocation(line: 4261, column: 52, scope: !23203)
!23210 = !DILocation(line: 4261, column: 56, scope: !23203)
!23211 = !DILocation(line: 4261, column: 61, scope: !23203)
!23212 = !DILocation(line: 4261, column: 65, scope: !23203)
!23213 = !DILocation(line: 4261, column: 11, scope: !23203)
!23214 = !DILocation(line: 4261, column: 9, scope: !23203)
!23215 = !DILocation(line: 4262, column: 9, scope: !23216)
!23216 = distinct !DILexicalBlock(scope: !23203, file: !3, line: 4262, column: 9)
!23217 = !DILocation(line: 4262, column: 13, scope: !23216)
!23218 = !DILocation(line: 4262, column: 9, scope: !23203)
!23219 = !DILocation(line: 4262, column: 35, scope: !23216)
!23220 = !DILocation(line: 4262, column: 40, scope: !23216)
!23221 = !DILocation(line: 4262, column: 45, scope: !23216)
!23222 = !DILocation(line: 4262, column: 49, scope: !23216)
!23223 = !DILocation(line: 4262, column: 53, scope: !23216)
!23224 = !DILocation(line: 4262, column: 58, scope: !23216)
!23225 = !DILocation(line: 4262, column: 62, scope: !23216)
!23226 = !DILocation(line: 4262, column: 66, scope: !23216)
!23227 = !DILocation(line: 4262, column: 71, scope: !23216)
!23228 = !DILocation(line: 4262, column: 75, scope: !23216)
!23229 = !DILocation(line: 4262, column: 21, scope: !23216)
!23230 = !DILocation(line: 4264, column: 19, scope: !23203)
!23231 = !DILocation(line: 4264, column: 24, scope: !23203)
!23232 = !DILocation(line: 4264, column: 29, scope: !23203)
!23233 = !DILocation(line: 4264, column: 10, scope: !23203)
!23234 = !DILocation(line: 4264, column: 8, scope: !23203)
!23235 = !DILocation(line: 4266, column: 9, scope: !23236)
!23236 = distinct !DILexicalBlock(scope: !23203, file: !3, line: 4266, column: 9)
!23237 = !DILocation(line: 4266, column: 17, scope: !23236)
!23238 = !DILocation(line: 4266, column: 9, scope: !23203)
!23239 = !DILocalVariable(name: "d1", scope: !23240, file: !3, line: 4268, type: !45)
!23240 = distinct !DILexicalBlock(scope: !23236, file: !3, line: 4266, column: 31)
!23241 = !DILocation(line: 4268, column: 12, scope: !23240)
!23242 = !DILocalVariable(name: "d2", scope: !23240, file: !3, line: 4268, type: !45)
!23243 = !DILocation(line: 4268, column: 16, scope: !23240)
!23244 = !DILocation(line: 4270, column: 28, scope: !23240)
!23245 = !DILocation(line: 4270, column: 33, scope: !23240)
!23246 = !DILocation(line: 4270, column: 12, scope: !23240)
!23247 = !DILocation(line: 4270, column: 10, scope: !23240)
!23248 = !DILocation(line: 4271, column: 6, scope: !23240)
!23249 = !DILocation(line: 4271, column: 12, scope: !23240)
!23250 = !DILocation(line: 4271, column: 17, scope: !23240)
!23251 = !DILocation(line: 4274, column: 20, scope: !23240)
!23252 = !DILocation(line: 4274, column: 25, scope: !23240)
!23253 = !DILocation(line: 4274, column: 30, scope: !23240)
!23254 = !DILocation(line: 4274, column: 34, scope: !23240)
!23255 = !DILocation(line: 4274, column: 38, scope: !23240)
!23256 = !DILocation(line: 4274, column: 43, scope: !23240)
!23257 = !DILocation(line: 4274, column: 47, scope: !23240)
!23258 = !DILocation(line: 4274, column: 51, scope: !23240)
!23259 = !DILocation(line: 4274, column: 56, scope: !23240)
!23260 = !DILocation(line: 4274, column: 60, scope: !23240)
!23261 = !DILocation(line: 4274, column: 6, scope: !23240)
!23262 = !DILocation(line: 4275, column: 20, scope: !23240)
!23263 = !DILocation(line: 4275, column: 25, scope: !23240)
!23264 = !DILocation(line: 4275, column: 30, scope: !23240)
!23265 = !DILocation(line: 4275, column: 34, scope: !23240)
!23266 = !DILocation(line: 4275, column: 11, scope: !23240)
!23267 = !DILocation(line: 4275, column: 9, scope: !23240)
!23268 = !DILocation(line: 4277, column: 20, scope: !23240)
!23269 = !DILocation(line: 4277, column: 25, scope: !23240)
!23270 = !DILocation(line: 4277, column: 30, scope: !23240)
!23271 = !DILocation(line: 4277, column: 34, scope: !23240)
!23272 = !DILocation(line: 4277, column: 38, scope: !23240)
!23273 = !DILocation(line: 4277, column: 43, scope: !23240)
!23274 = !DILocation(line: 4277, column: 47, scope: !23240)
!23275 = !DILocation(line: 4277, column: 51, scope: !23240)
!23276 = !DILocation(line: 4277, column: 56, scope: !23240)
!23277 = !DILocation(line: 4277, column: 60, scope: !23240)
!23278 = !DILocation(line: 4277, column: 6, scope: !23240)
!23279 = !DILocation(line: 4278, column: 20, scope: !23240)
!23280 = !DILocation(line: 4278, column: 25, scope: !23240)
!23281 = !DILocation(line: 4278, column: 30, scope: !23240)
!23282 = !DILocation(line: 4278, column: 34, scope: !23240)
!23283 = !DILocation(line: 4278, column: 11, scope: !23240)
!23284 = !DILocation(line: 4278, column: 9, scope: !23240)
!23285 = !DILocation(line: 4280, column: 16, scope: !23286)
!23286 = distinct !DILexicalBlock(scope: !23240, file: !3, line: 4280, column: 10)
!23287 = !DILocation(line: 4280, column: 10, scope: !23286)
!23288 = !DILocation(line: 4280, column: 28, scope: !23286)
!23289 = !DILocation(line: 4280, column: 22, scope: !23286)
!23290 = !DILocation(line: 4280, column: 20, scope: !23286)
!23291 = !DILocation(line: 4280, column: 10, scope: !23240)
!23292 = !DILocation(line: 4280, column: 34, scope: !23286)
!23293 = !DILocation(line: 4280, column: 39, scope: !23286)
!23294 = !DILocation(line: 4280, column: 44, scope: !23286)
!23295 = !DILocation(line: 4281, column: 34, scope: !23286)
!23296 = !DILocation(line: 4281, column: 39, scope: !23286)
!23297 = !DILocation(line: 4281, column: 44, scope: !23286)
!23298 = !DILocation(line: 4284, column: 10, scope: !23299)
!23299 = distinct !DILexicalBlock(scope: !23240, file: !3, line: 4284, column: 10)
!23300 = !DILocation(line: 4284, column: 15, scope: !23299)
!23301 = !DILocation(line: 4284, column: 20, scope: !23299)
!23302 = !DILocation(line: 4284, column: 10, scope: !23240)
!23303 = !DILocation(line: 4285, column: 17, scope: !23304)
!23304 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 4284, column: 35)
!23305 = !DILocation(line: 4285, column: 22, scope: !23304)
!23306 = !DILocation(line: 4285, column: 7, scope: !23304)
!23307 = !DILocation(line: 4285, column: 13, scope: !23304)
!23308 = !DILocation(line: 4285, column: 15, scope: !23304)
!23309 = !DILocation(line: 4286, column: 17, scope: !23304)
!23310 = !DILocation(line: 4286, column: 22, scope: !23304)
!23311 = !DILocation(line: 4286, column: 7, scope: !23304)
!23312 = !DILocation(line: 4286, column: 13, scope: !23304)
!23313 = !DILocation(line: 4286, column: 15, scope: !23304)
!23314 = !DILocation(line: 4287, column: 17, scope: !23304)
!23315 = !DILocation(line: 4287, column: 22, scope: !23304)
!23316 = !DILocation(line: 4287, column: 7, scope: !23304)
!23317 = !DILocation(line: 4287, column: 13, scope: !23304)
!23318 = !DILocation(line: 4287, column: 15, scope: !23304)
!23319 = !DILocation(line: 4289, column: 17, scope: !23304)
!23320 = !DILocation(line: 4289, column: 22, scope: !23304)
!23321 = !DILocation(line: 4289, column: 7, scope: !23304)
!23322 = !DILocation(line: 4289, column: 12, scope: !23304)
!23323 = !DILocation(line: 4289, column: 15, scope: !23304)
!23324 = !DILocation(line: 4291, column: 7, scope: !23304)
!23325 = !DILocation(line: 4291, column: 13, scope: !23304)
!23326 = !DILocation(line: 4291, column: 18, scope: !23304)
!23327 = !DILocation(line: 4292, column: 6, scope: !23304)
!23328 = !DILocation(line: 4294, column: 17, scope: !23329)
!23329 = distinct !DILexicalBlock(scope: !23299, file: !3, line: 4293, column: 11)
!23330 = !DILocation(line: 4294, column: 22, scope: !23329)
!23331 = !DILocation(line: 4294, column: 7, scope: !23329)
!23332 = !DILocation(line: 4294, column: 13, scope: !23329)
!23333 = !DILocation(line: 4294, column: 15, scope: !23329)
!23334 = !DILocation(line: 4295, column: 17, scope: !23329)
!23335 = !DILocation(line: 4295, column: 22, scope: !23329)
!23336 = !DILocation(line: 4295, column: 7, scope: !23329)
!23337 = !DILocation(line: 4295, column: 13, scope: !23329)
!23338 = !DILocation(line: 4295, column: 15, scope: !23329)
!23339 = !DILocation(line: 4296, column: 17, scope: !23329)
!23340 = !DILocation(line: 4296, column: 22, scope: !23329)
!23341 = !DILocation(line: 4296, column: 7, scope: !23329)
!23342 = !DILocation(line: 4296, column: 13, scope: !23329)
!23343 = !DILocation(line: 4296, column: 15, scope: !23329)
!23344 = !DILocation(line: 4298, column: 7, scope: !23329)
!23345 = !DILocation(line: 4298, column: 13, scope: !23329)
!23346 = !DILocation(line: 4298, column: 18, scope: !23329)
!23347 = !DILocation(line: 4300, column: 16, scope: !23240)
!23348 = !DILocation(line: 4300, column: 22, scope: !23240)
!23349 = !DILocation(line: 4300, column: 25, scope: !23240)
!23350 = !DILocation(line: 4300, column: 6, scope: !23240)
!23351 = !DILocation(line: 4300, column: 11, scope: !23240)
!23352 = !DILocation(line: 4300, column: 14, scope: !23240)
!23353 = !DILocation(line: 4303, column: 20, scope: !23240)
!23354 = !DILocation(line: 4303, column: 25, scope: !23240)
!23355 = !DILocation(line: 4303, column: 28, scope: !23240)
!23356 = !DILocation(line: 4303, column: 33, scope: !23240)
!23357 = !DILocation(line: 4303, column: 37, scope: !23240)
!23358 = !DILocation(line: 4303, column: 41, scope: !23240)
!23359 = !DILocation(line: 4303, column: 46, scope: !23240)
!23360 = !DILocation(line: 4303, column: 50, scope: !23240)
!23361 = !DILocation(line: 4303, column: 54, scope: !23240)
!23362 = !DILocation(line: 4303, column: 59, scope: !23240)
!23363 = !DILocation(line: 4303, column: 63, scope: !23240)
!23364 = !DILocation(line: 4303, column: 6, scope: !23240)
!23365 = !DILocation(line: 4304, column: 20, scope: !23240)
!23366 = !DILocation(line: 4304, column: 26, scope: !23240)
!23367 = !DILocation(line: 4304, column: 29, scope: !23240)
!23368 = !DILocation(line: 4304, column: 35, scope: !23240)
!23369 = !DILocation(line: 4304, column: 39, scope: !23240)
!23370 = !DILocation(line: 4304, column: 43, scope: !23240)
!23371 = !DILocation(line: 4304, column: 49, scope: !23240)
!23372 = !DILocation(line: 4304, column: 53, scope: !23240)
!23373 = !DILocation(line: 4304, column: 57, scope: !23240)
!23374 = !DILocation(line: 4304, column: 63, scope: !23240)
!23375 = !DILocation(line: 4304, column: 67, scope: !23240)
!23376 = !DILocation(line: 4304, column: 6, scope: !23240)
!23377 = !DILocation(line: 4325, column: 5, scope: !23240)
!23378 = !DILocation(line: 4327, column: 10, scope: !23236)
!23379 = !DILocation(line: 4327, column: 15, scope: !23236)
!23380 = !DILocation(line: 4327, column: 20, scope: !23236)
!23381 = !DILocation(line: 4328, column: 4, scope: !23203)
!23382 = !DILocation(line: 4329, column: 3, scope: !23079)
!23383 = !DILocation(line: 4330, column: 2, scope: !23060)
!23384 = !DILocation(line: 4212, column: 32, scope: !23056)
!23385 = !DILocation(line: 4212, column: 2, scope: !23056)
!23386 = distinct !{!23386, !23058, !23387}
!23387 = !DILocation(line: 4330, column: 2, scope: !23050)
!23388 = !DILocation(line: 4331, column: 1, scope: !23026)
!23389 = distinct !DISubprogram(name: "set_fullsample_trace_flag", scope: !3, file: !3, line: 4097, type: !15553, scopeLine: 4098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23390 = !DILocalVariable(name: "re", arg: 1, scope: !23389, file: !3, line: 4097, type: !6)
!23391 = !DILocation(line: 4097, column: 47, scope: !23389)
!23392 = !DILocalVariable(name: "obr", arg: 2, scope: !23389, file: !3, line: 4097, type: !3063)
!23393 = !DILocation(line: 4097, column: 62, scope: !23389)
!23394 = !DILocalVariable(name: "vlr", scope: !23389, file: !3, line: 4099, type: !13020)
!23395 = !DILocation(line: 4099, column: 11, scope: !23389)
!23396 = !DILocalVariable(name: "a", scope: !23389, file: !3, line: 4100, type: !21)
!23397 = !DILocation(line: 4100, column: 6, scope: !23389)
!23398 = !DILocalVariable(name: "trace", scope: !23389, file: !3, line: 4100, type: !21)
!23399 = !DILocation(line: 4100, column: 9, scope: !23389)
!23400 = !DILocalVariable(name: "mode", scope: !23389, file: !3, line: 4100, type: !21)
!23401 = !DILocation(line: 4100, column: 16, scope: !23389)
!23402 = !DILocalVariable(name: "osa", scope: !23389, file: !3, line: 4100, type: !21)
!23403 = !DILocation(line: 4100, column: 22, scope: !23389)
!23404 = !DILocation(line: 4102, column: 7, scope: !23389)
!23405 = !DILocation(line: 4102, column: 11, scope: !23389)
!23406 = !DILocation(line: 4102, column: 5, scope: !23389)
!23407 = !DILocation(line: 4103, column: 9, scope: !23389)
!23408 = !DILocation(line: 4103, column: 13, scope: !23389)
!23409 = !DILocation(line: 4103, column: 15, scope: !23389)
!23410 = !DILocation(line: 4103, column: 20, scope: !23389)
!23411 = !DILocation(line: 4103, column: 7, scope: !23389)
!23412 = !DILocation(line: 4105, column: 9, scope: !23413)
!23413 = distinct !DILexicalBlock(scope: !23389, file: !3, line: 4105, column: 2)
!23414 = !DILocation(line: 4105, column: 14, scope: !23413)
!23415 = !DILocation(line: 4105, column: 21, scope: !23413)
!23416 = !DILocation(line: 4105, column: 8, scope: !23413)
!23417 = !DILocation(line: 4105, column: 7, scope: !23413)
!23418 = !DILocation(line: 4105, column: 25, scope: !23419)
!23419 = distinct !DILexicalBlock(scope: !23413, file: !3, line: 4105, column: 2)
!23420 = !DILocation(line: 4105, column: 26, scope: !23419)
!23421 = !DILocation(line: 4105, column: 2, scope: !23413)
!23422 = !DILocation(line: 4106, column: 25, scope: !23423)
!23423 = distinct !DILexicalBlock(scope: !23419, file: !3, line: 4105, column: 36)
!23424 = !DILocation(line: 4106, column: 30, scope: !23423)
!23425 = !DILocation(line: 4106, column: 8, scope: !23423)
!23426 = !DILocation(line: 4106, column: 6, scope: !23423)
!23427 = !DILocation(line: 4107, column: 9, scope: !23423)
!23428 = !DILocation(line: 4107, column: 14, scope: !23423)
!23429 = !DILocation(line: 4107, column: 19, scope: !23423)
!23430 = !DILocation(line: 4107, column: 7, scope: !23423)
!23431 = !DILocation(line: 4109, column: 7, scope: !23432)
!23432 = distinct !DILexicalBlock(scope: !23423, file: !3, line: 4109, column: 7)
!23433 = !DILocation(line: 4109, column: 13, scope: !23432)
!23434 = !DILocation(line: 4109, column: 17, scope: !23432)
!23435 = !DILocation(line: 4109, column: 22, scope: !23432)
!23436 = !DILocation(line: 4109, column: 7, scope: !23423)
!23437 = !DILocation(line: 4110, column: 4, scope: !23432)
!23438 = !DILocation(line: 4110, column: 9, scope: !23432)
!23439 = !DILocation(line: 4110, column: 14, scope: !23432)
!23440 = !DILocation(line: 4112, column: 7, scope: !23441)
!23441 = distinct !DILexicalBlock(scope: !23423, file: !3, line: 4112, column: 7)
!23442 = !DILocation(line: 4112, column: 7, scope: !23423)
!23443 = !DILocation(line: 4113, column: 8, scope: !23444)
!23444 = distinct !DILexicalBlock(scope: !23445, file: !3, line: 4113, column: 8)
!23445 = distinct !DILexicalBlock(scope: !23441, file: !3, line: 4112, column: 12)
!23446 = !DILocation(line: 4113, column: 13, scope: !23444)
!23447 = !DILocation(line: 4113, column: 8, scope: !23445)
!23448 = !DILocation(line: 4114, column: 5, scope: !23449)
!23449 = distinct !DILexicalBlock(scope: !23444, file: !3, line: 4113, column: 28)
!23450 = !DILocation(line: 4114, column: 10, scope: !23449)
!23451 = !DILocation(line: 4114, column: 15, scope: !23449)
!23452 = !DILocation(line: 4115, column: 4, scope: !23449)
!23453 = !DILocation(line: 4116, column: 13, scope: !23454)
!23454 = distinct !DILexicalBlock(scope: !23444, file: !3, line: 4116, column: 13)
!23455 = !DILocation(line: 4116, column: 13, scope: !23444)
!23456 = !DILocation(line: 4117, column: 9, scope: !23457)
!23457 = distinct !DILexicalBlock(scope: !23458, file: !3, line: 4117, column: 9)
!23458 = distinct !DILexicalBlock(scope: !23454, file: !3, line: 4116, column: 20)
!23459 = !DILocation(line: 4117, column: 14, scope: !23457)
!23460 = !DILocation(line: 4117, column: 9, scope: !23458)
!23461 = !DILocation(line: 4119, column: 5, scope: !23462)
!23462 = distinct !DILexicalBlock(scope: !23457, file: !3, line: 4117, column: 27)
!23463 = !DILocation(line: 4120, column: 14, scope: !23464)
!23464 = distinct !DILexicalBlock(scope: !23457, file: !3, line: 4120, column: 14)
!23465 = !DILocation(line: 4120, column: 19, scope: !23464)
!23466 = !DILocation(line: 4120, column: 24, scope: !23464)
!23467 = !DILocation(line: 4120, column: 38, scope: !23464)
!23468 = !DILocation(line: 4120, column: 14, scope: !23457)
!23469 = !DILocation(line: 4122, column: 5, scope: !23470)
!23470 = distinct !DILexicalBlock(scope: !23464, file: !3, line: 4120, column: 57)
!23471 = !DILocation(line: 4123, column: 15, scope: !23472)
!23472 = distinct !DILexicalBlock(scope: !23464, file: !3, line: 4123, column: 14)
!23473 = !DILocation(line: 4123, column: 20, scope: !23472)
!23474 = !DILocation(line: 4123, column: 36, scope: !23472)
!23475 = !DILocation(line: 4123, column: 41, scope: !23472)
!23476 = !DILocation(line: 4123, column: 46, scope: !23472)
!23477 = !DILocation(line: 4123, column: 59, scope: !23472)
!23478 = !DILocation(line: 4123, column: 63, scope: !23472)
!23479 = !DILocation(line: 4123, column: 68, scope: !23472)
!23480 = !DILocation(line: 4123, column: 14, scope: !23464)
!23481 = !DILocation(line: 4126, column: 11, scope: !23482)
!23482 = distinct !DILexicalBlock(scope: !23483, file: !3, line: 4126, column: 10)
!23483 = distinct !DILexicalBlock(scope: !23472, file: !3, line: 4123, column: 86)
!23484 = !DILocation(line: 4126, column: 16, scope: !23482)
!23485 = !DILocation(line: 4126, column: 21, scope: !23482)
!23486 = !DILocation(line: 4126, column: 31, scope: !23482)
!23487 = !DILocation(line: 4126, column: 40, scope: !23482)
!23488 = !DILocation(line: 4126, column: 44, scope: !23482)
!23489 = !DILocation(line: 4126, column: 49, scope: !23482)
!23490 = !DILocation(line: 4126, column: 54, scope: !23482)
!23491 = !DILocation(line: 4126, column: 64, scope: !23482)
!23492 = !DILocation(line: 4126, column: 10, scope: !23483)
!23493 = !DILocation(line: 4127, column: 7, scope: !23482)
!23494 = !DILocation(line: 4127, column: 12, scope: !23482)
!23495 = !DILocation(line: 4127, column: 17, scope: !23482)
!23496 = !DILocation(line: 4128, column: 5, scope: !23483)
!23497 = !DILocation(line: 4129, column: 4, scope: !23458)
!23498 = !DILocation(line: 4130, column: 3, scope: !23445)
!23499 = !DILocation(line: 4131, column: 2, scope: !23423)
!23500 = !DILocation(line: 4105, column: 32, scope: !23419)
!23501 = !DILocation(line: 4105, column: 2, scope: !23419)
!23502 = distinct !{!23502, !23421, !23503}
!23503 = !DILocation(line: 4131, column: 2, scope: !23413)
!23504 = !DILocation(line: 4132, column: 1, scope: !23389)
!23505 = distinct !DISubprogram(name: "max_ff", scope: !10503, file: !10503, line: 206, type: !23506, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23506 = !DISubroutineType(types: !23507)
!23507 = !{!45, !45, !45}
!23508 = !DILocalVariable(name: "a", arg: 1, scope: !23505, file: !10503, line: 206, type: !45)
!23509 = !DILocation(line: 206, column: 28, scope: !23505)
!23510 = !DILocalVariable(name: "b", arg: 2, scope: !23505, file: !10503, line: 206, type: !45)
!23511 = !DILocation(line: 206, column: 37, scope: !23505)
!23512 = !DILocation(line: 208, column: 10, scope: !23505)
!23513 = !DILocation(line: 208, column: 14, scope: !23505)
!23514 = !DILocation(line: 208, column: 12, scope: !23505)
!23515 = !DILocation(line: 208, column: 9, scope: !23505)
!23516 = !DILocation(line: 208, column: 19, scope: !23505)
!23517 = !DILocation(line: 208, column: 23, scope: !23505)
!23518 = !DILocation(line: 208, column: 2, scope: !23505)
!23519 = distinct !DISubprogram(name: "flag_render_node_material", scope: !3, file: !3, line: 687, type: !23520, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23520 = !DISubroutineType(types: !23521)
!23521 = !{null, !6, !4159}
!23522 = !DILocalVariable(name: "re", arg: 1, scope: !23519, file: !3, line: 687, type: !6)
!23523 = !DILocation(line: 687, column: 47, scope: !23519)
!23524 = !DILocalVariable(name: "ntree", arg: 2, scope: !23519, file: !3, line: 687, type: !4159)
!23525 = !DILocation(line: 687, column: 62, scope: !23519)
!23526 = !DILocalVariable(name: "node", scope: !23519, file: !3, line: 689, type: !864)
!23527 = !DILocation(line: 689, column: 9, scope: !23519)
!23528 = !DILocation(line: 691, column: 14, scope: !23529)
!23529 = distinct !DILexicalBlock(scope: !23519, file: !3, line: 691, column: 2)
!23530 = !DILocation(line: 691, column: 21, scope: !23529)
!23531 = !DILocation(line: 691, column: 27, scope: !23529)
!23532 = !DILocation(line: 691, column: 12, scope: !23529)
!23533 = !DILocation(line: 691, column: 7, scope: !23529)
!23534 = !DILocation(line: 691, column: 34, scope: !23535)
!23535 = distinct !DILexicalBlock(scope: !23529, file: !3, line: 691, column: 2)
!23536 = !DILocation(line: 691, column: 2, scope: !23529)
!23537 = !DILocation(line: 692, column: 7, scope: !23538)
!23538 = distinct !DILexicalBlock(scope: !23539, file: !3, line: 692, column: 7)
!23539 = distinct !DILexicalBlock(scope: !23535, file: !3, line: 691, column: 59)
!23540 = !DILocation(line: 692, column: 13, scope: !23538)
!23541 = !DILocation(line: 692, column: 7, scope: !23539)
!23542 = !DILocation(line: 693, column: 8, scope: !23543)
!23543 = distinct !DILexicalBlock(scope: !23544, file: !3, line: 693, column: 8)
!23544 = distinct !DILexicalBlock(scope: !23538, file: !3, line: 692, column: 17)
!23545 = !DILocation(line: 693, column: 26, scope: !23543)
!23546 = !DILocation(line: 693, column: 8, scope: !23544)
!23547 = !DILocalVariable(name: "ma", scope: !23548, file: !3, line: 694, type: !4157)
!23548 = distinct !DILexicalBlock(scope: !23543, file: !3, line: 693, column: 35)
!23549 = !DILocation(line: 694, column: 15, scope: !23548)
!23550 = !DILocation(line: 694, column: 31, scope: !23548)
!23551 = !DILocation(line: 694, column: 37, scope: !23548)
!23552 = !DILocation(line: 694, column: 19, scope: !23548)
!23553 = !DILocation(line: 696, column: 10, scope: !23554)
!23554 = distinct !DILexicalBlock(scope: !23548, file: !3, line: 696, column: 9)
!23555 = !DILocation(line: 696, column: 14, scope: !23554)
!23556 = !DILocation(line: 696, column: 19, scope: !23554)
!23557 = !DILocation(line: 696, column: 32, scope: !23554)
!23558 = !DILocation(line: 696, column: 36, scope: !23554)
!23559 = !DILocation(line: 696, column: 40, scope: !23554)
!23560 = !DILocation(line: 696, column: 45, scope: !23554)
!23561 = !DILocation(line: 696, column: 9, scope: !23548)
!23562 = !DILocation(line: 697, column: 6, scope: !23554)
!23563 = !DILocation(line: 697, column: 10, scope: !23554)
!23564 = !DILocation(line: 697, column: 15, scope: !23554)
!23565 = !DILocation(line: 699, column: 5, scope: !23548)
!23566 = !DILocation(line: 699, column: 9, scope: !23548)
!23567 = !DILocation(line: 699, column: 14, scope: !23548)
!23568 = !DILocation(line: 700, column: 4, scope: !23548)
!23569 = !DILocation(line: 701, column: 13, scope: !23570)
!23570 = distinct !DILexicalBlock(scope: !23543, file: !3, line: 701, column: 13)
!23571 = !DILocation(line: 701, column: 19, scope: !23570)
!23572 = !DILocation(line: 701, column: 23, scope: !23570)
!23573 = !DILocation(line: 701, column: 13, scope: !23543)
!23574 = !DILocation(line: 702, column: 31, scope: !23570)
!23575 = !DILocation(line: 702, column: 48, scope: !23570)
!23576 = !DILocation(line: 702, column: 54, scope: !23570)
!23577 = !DILocation(line: 702, column: 35, scope: !23570)
!23578 = !DILocation(line: 702, column: 5, scope: !23570)
!23579 = !DILocation(line: 703, column: 3, scope: !23544)
!23580 = !DILocation(line: 704, column: 2, scope: !23539)
!23581 = !DILocation(line: 691, column: 47, scope: !23535)
!23582 = !DILocation(line: 691, column: 53, scope: !23535)
!23583 = !DILocation(line: 691, column: 45, scope: !23535)
!23584 = !DILocation(line: 691, column: 2, scope: !23535)
!23585 = distinct !{!23585, !23536, !23586}
!23586 = !DILocation(line: 704, column: 2, scope: !23529)
!23587 = !DILocation(line: 705, column: 1, scope: !23519)
!23588 = distinct !DISubprogram(name: "check_material_mapto", scope: !3, file: !3, line: 665, type: !23589, scopeLine: 666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23589 = !DISubroutineType(types: !23590)
!23590 = !{null, !4157}
!23591 = !DILocalVariable(name: "ma", arg: 1, scope: !23588, file: !3, line: 665, type: !4157)
!23592 = !DILocation(line: 665, column: 44, scope: !23588)
!23593 = !DILocalVariable(name: "a", scope: !23588, file: !3, line: 667, type: !21)
!23594 = !DILocation(line: 667, column: 6, scope: !23588)
!23595 = !DILocation(line: 668, column: 2, scope: !23588)
!23596 = !DILocation(line: 668, column: 6, scope: !23588)
!23597 = !DILocation(line: 668, column: 21, scope: !23588)
!23598 = !DILocation(line: 674, column: 8, scope: !23599)
!23599 = distinct !DILexicalBlock(scope: !23588, file: !3, line: 674, column: 2)
!23600 = !DILocation(line: 674, column: 7, scope: !23599)
!23601 = !DILocation(line: 674, column: 12, scope: !23602)
!23602 = distinct !DILexicalBlock(scope: !23599, file: !3, line: 674, column: 2)
!23603 = !DILocation(line: 674, column: 13, scope: !23602)
!23604 = !DILocation(line: 674, column: 2, scope: !23599)
!23605 = !DILocation(line: 675, column: 7, scope: !23606)
!23606 = distinct !DILexicalBlock(scope: !23607, file: !3, line: 675, column: 7)
!23607 = distinct !DILexicalBlock(scope: !23602, file: !3, line: 674, column: 29)
!23608 = !DILocation(line: 675, column: 11, scope: !23606)
!23609 = !DILocation(line: 675, column: 16, scope: !23606)
!23610 = !DILocation(line: 675, column: 19, scope: !23606)
!23611 = !DILocation(line: 675, column: 22, scope: !23606)
!23612 = !DILocation(line: 675, column: 26, scope: !23606)
!23613 = !DILocation(line: 675, column: 31, scope: !23606)
!23614 = !DILocation(line: 675, column: 35, scope: !23606)
!23615 = !DILocation(line: 675, column: 7, scope: !23607)
!23616 = !DILocation(line: 677, column: 8, scope: !23617)
!23617 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 677, column: 8)
!23618 = distinct !DILexicalBlock(scope: !23606, file: !3, line: 675, column: 40)
!23619 = !DILocation(line: 677, column: 12, scope: !23617)
!23620 = !DILocation(line: 677, column: 17, scope: !23617)
!23621 = !DILocation(line: 677, column: 21, scope: !23617)
!23622 = !DILocation(line: 677, column: 27, scope: !23617)
!23623 = !DILocation(line: 677, column: 8, scope: !23618)
!23624 = !DILocation(line: 677, column: 42, scope: !23617)
!23625 = !DILocation(line: 677, column: 46, scope: !23617)
!23626 = !DILocation(line: 677, column: 61, scope: !23617)
!23627 = !DILocation(line: 678, column: 8, scope: !23628)
!23628 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 678, column: 8)
!23629 = !DILocation(line: 678, column: 12, scope: !23628)
!23630 = !DILocation(line: 678, column: 17, scope: !23628)
!23631 = !DILocation(line: 678, column: 21, scope: !23628)
!23632 = !DILocation(line: 678, column: 27, scope: !23628)
!23633 = !DILocation(line: 678, column: 8, scope: !23618)
!23634 = !DILocation(line: 678, column: 43, scope: !23628)
!23635 = !DILocation(line: 678, column: 47, scope: !23628)
!23636 = !DILocation(line: 678, column: 62, scope: !23628)
!23637 = !DILocation(line: 679, column: 8, scope: !23638)
!23638 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 679, column: 8)
!23639 = !DILocation(line: 679, column: 12, scope: !23638)
!23640 = !DILocation(line: 679, column: 17, scope: !23638)
!23641 = !DILocation(line: 679, column: 21, scope: !23638)
!23642 = !DILocation(line: 679, column: 27, scope: !23638)
!23643 = !DILocation(line: 679, column: 8, scope: !23618)
!23644 = !DILocation(line: 679, column: 47, scope: !23638)
!23645 = !DILocation(line: 679, column: 51, scope: !23638)
!23646 = !DILocation(line: 679, column: 66, scope: !23638)
!23647 = !DILocation(line: 680, column: 8, scope: !23648)
!23648 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 680, column: 8)
!23649 = !DILocation(line: 680, column: 12, scope: !23648)
!23650 = !DILocation(line: 680, column: 17, scope: !23648)
!23651 = !DILocation(line: 680, column: 21, scope: !23648)
!23652 = !DILocation(line: 680, column: 27, scope: !23648)
!23653 = !DILocation(line: 680, column: 8, scope: !23618)
!23654 = !DILocation(line: 680, column: 45, scope: !23648)
!23655 = !DILocation(line: 680, column: 49, scope: !23648)
!23656 = !DILocation(line: 680, column: 64, scope: !23648)
!23657 = !DILocation(line: 681, column: 8, scope: !23658)
!23658 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 681, column: 8)
!23659 = !DILocation(line: 681, column: 12, scope: !23658)
!23660 = !DILocation(line: 681, column: 17, scope: !23658)
!23661 = !DILocation(line: 681, column: 21, scope: !23658)
!23662 = !DILocation(line: 681, column: 27, scope: !23658)
!23663 = !DILocation(line: 681, column: 8, scope: !23618)
!23664 = !DILocation(line: 681, column: 51, scope: !23658)
!23665 = !DILocation(line: 681, column: 55, scope: !23658)
!23666 = !DILocation(line: 681, column: 70, scope: !23658)
!23667 = !DILocation(line: 682, column: 8, scope: !23668)
!23668 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 682, column: 8)
!23669 = !DILocation(line: 682, column: 12, scope: !23668)
!23670 = !DILocation(line: 682, column: 17, scope: !23668)
!23671 = !DILocation(line: 682, column: 21, scope: !23668)
!23672 = !DILocation(line: 682, column: 27, scope: !23668)
!23673 = !DILocation(line: 682, column: 8, scope: !23618)
!23674 = !DILocation(line: 682, column: 45, scope: !23668)
!23675 = !DILocation(line: 682, column: 49, scope: !23668)
!23676 = !DILocation(line: 682, column: 64, scope: !23668)
!23677 = !DILocation(line: 683, column: 8, scope: !23678)
!23678 = distinct !DILexicalBlock(scope: !23618, file: !3, line: 683, column: 8)
!23679 = !DILocation(line: 683, column: 12, scope: !23678)
!23680 = !DILocation(line: 683, column: 17, scope: !23678)
!23681 = !DILocation(line: 683, column: 21, scope: !23678)
!23682 = !DILocation(line: 683, column: 27, scope: !23678)
!23683 = !DILocation(line: 683, column: 8, scope: !23618)
!23684 = !DILocation(line: 683, column: 49, scope: !23678)
!23685 = !DILocation(line: 683, column: 53, scope: !23678)
!23686 = !DILocation(line: 683, column: 68, scope: !23678)
!23687 = !DILocation(line: 684, column: 3, scope: !23618)
!23688 = !DILocation(line: 685, column: 2, scope: !23607)
!23689 = !DILocation(line: 674, column: 25, scope: !23602)
!23690 = !DILocation(line: 674, column: 2, scope: !23602)
!23691 = distinct !{!23691, !23604, !23692}
!23692 = !DILocation(line: 685, column: 2, scope: !23599)
!23693 = !DILocation(line: 686, column: 1, scope: !23588)
!23694 = distinct !DISubprogram(name: "add_lightgroup", scope: !3, file: !3, line: 3929, type: !23695, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23695 = !DISubroutineType(types: !23696)
!23696 = !{null, !6, !5213, !21}
!23697 = !DILocalVariable(name: "re", arg: 1, scope: !23694, file: !3, line: 3929, type: !6)
!23698 = !DILocation(line: 3929, column: 36, scope: !23694)
!23699 = !DILocalVariable(name: "group", arg: 2, scope: !23694, file: !3, line: 3929, type: !5213)
!23700 = !DILocation(line: 3929, column: 47, scope: !23694)
!23701 = !DILocalVariable(name: "exclusive", arg: 3, scope: !23694, file: !3, line: 3929, type: !21)
!23702 = !DILocation(line: 3929, column: 58, scope: !23694)
!23703 = !DILocalVariable(name: "go", scope: !23694, file: !3, line: 3931, type: !8499)
!23704 = !DILocation(line: 3931, column: 15, scope: !23694)
!23705 = !DILocalVariable(name: "gol", scope: !23694, file: !3, line: 3931, type: !8499)
!23706 = !DILocation(line: 3931, column: 20, scope: !23694)
!23707 = !DILocation(line: 3933, column: 2, scope: !23694)
!23708 = !DILocation(line: 3933, column: 9, scope: !23694)
!23709 = !DILocation(line: 3933, column: 12, scope: !23694)
!23710 = !DILocation(line: 3933, column: 17, scope: !23694)
!23711 = !DILocation(line: 3937, column: 11, scope: !23712)
!23712 = distinct !DILexicalBlock(scope: !23694, file: !3, line: 3937, column: 2)
!23713 = !DILocation(line: 3937, column: 18, scope: !23712)
!23714 = !DILocation(line: 3937, column: 26, scope: !23712)
!23715 = !DILocation(line: 3937, column: 9, scope: !23712)
!23716 = !DILocation(line: 3937, column: 7, scope: !23712)
!23717 = !DILocation(line: 3937, column: 33, scope: !23718)
!23718 = distinct !DILexicalBlock(scope: !23712, file: !3, line: 3937, column: 2)
!23719 = !DILocation(line: 3937, column: 2, scope: !23712)
!23720 = !DILocation(line: 3938, column: 3, scope: !23721)
!23721 = distinct !DILexicalBlock(scope: !23718, file: !3, line: 3937, column: 51)
!23722 = !DILocation(line: 3938, column: 7, scope: !23721)
!23723 = !DILocation(line: 3938, column: 14, scope: !23721)
!23724 = !DILocation(line: 3940, column: 24, scope: !23725)
!23725 = distinct !DILexicalBlock(scope: !23721, file: !3, line: 3940, column: 7)
!23726 = !DILocation(line: 3940, column: 28, scope: !23725)
!23727 = !DILocation(line: 3940, column: 32, scope: !23725)
!23728 = !DILocation(line: 3940, column: 7, scope: !23725)
!23729 = !DILocation(line: 3940, column: 7, scope: !23721)
!23730 = !DILocation(line: 3941, column: 4, scope: !23725)
!23731 = !DILocation(line: 3943, column: 7, scope: !23732)
!23732 = distinct !DILexicalBlock(scope: !23721, file: !3, line: 3943, column: 7)
!23733 = !DILocation(line: 3943, column: 11, scope: !23732)
!23734 = !DILocation(line: 3943, column: 15, scope: !23732)
!23735 = !DILocation(line: 3943, column: 21, scope: !23732)
!23736 = !DILocation(line: 3943, column: 25, scope: !23732)
!23737 = !DILocation(line: 3943, column: 19, scope: !23732)
!23738 = !DILocation(line: 3943, column: 7, scope: !23721)
!23739 = !DILocation(line: 3944, column: 8, scope: !23740)
!23740 = distinct !DILexicalBlock(scope: !23741, file: !3, line: 3944, column: 8)
!23741 = distinct !DILexicalBlock(scope: !23732, file: !3, line: 3943, column: 30)
!23742 = !DILocation(line: 3944, column: 12, scope: !23740)
!23743 = !DILocation(line: 3944, column: 15, scope: !23740)
!23744 = !DILocation(line: 3944, column: 18, scope: !23740)
!23745 = !DILocation(line: 3944, column: 22, scope: !23740)
!23746 = !DILocation(line: 3944, column: 26, scope: !23740)
!23747 = !DILocation(line: 3944, column: 30, scope: !23740)
!23748 = !DILocation(line: 3944, column: 8, scope: !23741)
!23749 = !DILocation(line: 3945, column: 15, scope: !23750)
!23750 = distinct !DILexicalBlock(scope: !23751, file: !3, line: 3945, column: 5)
!23751 = distinct !DILexicalBlock(scope: !23740, file: !3, line: 3944, column: 41)
!23752 = !DILocation(line: 3945, column: 19, scope: !23750)
!23753 = !DILocation(line: 3945, column: 26, scope: !23750)
!23754 = !DILocation(line: 3945, column: 13, scope: !23750)
!23755 = !DILocation(line: 3945, column: 10, scope: !23750)
!23756 = !DILocation(line: 3945, column: 33, scope: !23757)
!23757 = distinct !DILexicalBlock(scope: !23750, file: !3, line: 3945, column: 5)
!23758 = !DILocation(line: 3945, column: 5, scope: !23750)
!23759 = !DILocation(line: 3946, column: 10, scope: !23760)
!23760 = distinct !DILexicalBlock(scope: !23761, file: !3, line: 3946, column: 10)
!23761 = distinct !DILexicalBlock(scope: !23757, file: !3, line: 3945, column: 54)
!23762 = !DILocation(line: 3946, column: 15, scope: !23760)
!23763 = !DILocation(line: 3946, column: 19, scope: !23760)
!23764 = !DILocation(line: 3946, column: 23, scope: !23760)
!23765 = !DILocation(line: 3946, column: 17, scope: !23760)
!23766 = !DILocation(line: 3946, column: 10, scope: !23761)
!23767 = !DILocation(line: 3947, column: 20, scope: !23768)
!23768 = distinct !DILexicalBlock(scope: !23760, file: !3, line: 3946, column: 27)
!23769 = !DILocation(line: 3947, column: 25, scope: !23768)
!23770 = !DILocation(line: 3947, column: 7, scope: !23768)
!23771 = !DILocation(line: 3947, column: 11, scope: !23768)
!23772 = !DILocation(line: 3947, column: 18, scope: !23768)
!23773 = !DILocation(line: 3948, column: 7, scope: !23768)
!23774 = !DILocation(line: 3950, column: 5, scope: !23761)
!23775 = !DILocation(line: 3945, column: 43, scope: !23757)
!23776 = !DILocation(line: 3945, column: 48, scope: !23757)
!23777 = !DILocation(line: 3945, column: 41, scope: !23757)
!23778 = !DILocation(line: 3945, column: 5, scope: !23757)
!23779 = distinct !{!23779, !23758, !23780}
!23780 = !DILocation(line: 3950, column: 5, scope: !23750)
!23781 = !DILocation(line: 3951, column: 9, scope: !23782)
!23782 = distinct !DILexicalBlock(scope: !23751, file: !3, line: 3951, column: 9)
!23783 = !DILocation(line: 3951, column: 13, scope: !23782)
!23784 = !DILocation(line: 3951, column: 20, scope: !23782)
!23785 = !DILocation(line: 3951, column: 9, scope: !23751)
!23786 = !DILocation(line: 3952, column: 27, scope: !23782)
!23787 = !DILocation(line: 3952, column: 31, scope: !23782)
!23788 = !DILocation(line: 3952, column: 35, scope: !23782)
!23789 = !DILocation(line: 3952, column: 11, scope: !23782)
!23790 = !DILocation(line: 3952, column: 9, scope: !23782)
!23791 = !DILocation(line: 3952, column: 6, scope: !23782)
!23792 = !DILocation(line: 3953, column: 9, scope: !23793)
!23793 = distinct !DILexicalBlock(scope: !23751, file: !3, line: 3953, column: 9)
!23794 = !DILocation(line: 3953, column: 13, scope: !23793)
!23795 = !DILocation(line: 3953, column: 16, scope: !23793)
!23796 = !DILocation(line: 3953, column: 9, scope: !23751)
!23797 = !DILocation(line: 3954, column: 19, scope: !23798)
!23798 = distinct !DILexicalBlock(scope: !23793, file: !3, line: 3953, column: 27)
!23799 = !DILocation(line: 3954, column: 23, scope: !23798)
!23800 = !DILocation(line: 3954, column: 31, scope: !23798)
!23801 = !DILocation(line: 3954, column: 6, scope: !23798)
!23802 = !DILocation(line: 3955, column: 6, scope: !23798)
!23803 = !DILocation(line: 3955, column: 16, scope: !23798)
!23804 = !DILocation(line: 3956, column: 5, scope: !23798)
!23805 = !DILocation(line: 3957, column: 4, scope: !23751)
!23806 = !DILocation(line: 3958, column: 3, scope: !23741)
!23807 = !DILocation(line: 3959, column: 2, scope: !23721)
!23808 = !DILocation(line: 3937, column: 41, scope: !23718)
!23809 = !DILocation(line: 3937, column: 45, scope: !23718)
!23810 = !DILocation(line: 3937, column: 39, scope: !23718)
!23811 = !DILocation(line: 3937, column: 2, scope: !23718)
!23812 = distinct !{!23812, !23719, !23813}
!23813 = !DILocation(line: 3959, column: 2, scope: !23712)
!23814 = !DILocation(line: 3960, column: 1, scope: !23694)
!23815 = distinct !DISubprogram(name: "verghalo", scope: !3, file: !3, line: 1933, type: !21760, scopeLine: 1934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23816 = !DILocalVariable(name: "a1", arg: 1, scope: !23815, file: !3, line: 1933, type: !21762)
!23817 = !DILocation(line: 1933, column: 33, scope: !23815)
!23818 = !DILocalVariable(name: "a2", arg: 2, scope: !23815, file: !3, line: 1933, type: !21762)
!23819 = !DILocation(line: 1933, column: 49, scope: !23815)
!23820 = !DILocalVariable(name: "har1", scope: !23815, file: !3, line: 1935, type: !4162)
!23821 = !DILocation(line: 1935, column: 17, scope: !23815)
!23822 = !DILocation(line: 1935, column: 41, scope: !23815)
!23823 = !DILocation(line: 1935, column: 24, scope: !23815)
!23824 = !DILocation(line: 1935, column: 23, scope: !23815)
!23825 = !DILocalVariable(name: "har2", scope: !23815, file: !3, line: 1936, type: !4162)
!23826 = !DILocation(line: 1936, column: 17, scope: !23815)
!23827 = !DILocation(line: 1936, column: 41, scope: !23815)
!23828 = !DILocation(line: 1936, column: 24, scope: !23815)
!23829 = !DILocation(line: 1936, column: 23, scope: !23815)
!23830 = !DILocation(line: 1938, column: 6, scope: !23831)
!23831 = distinct !DILexicalBlock(scope: !23815, file: !3, line: 1938, column: 6)
!23832 = !DILocation(line: 1938, column: 12, scope: !23831)
!23833 = !DILocation(line: 1938, column: 17, scope: !23831)
!23834 = !DILocation(line: 1938, column: 23, scope: !23831)
!23835 = !DILocation(line: 1938, column: 15, scope: !23831)
!23836 = !DILocation(line: 1938, column: 6, scope: !23815)
!23837 = !DILocation(line: 1938, column: 27, scope: !23831)
!23838 = !DILocation(line: 1939, column: 11, scope: !23839)
!23839 = distinct !DILexicalBlock(scope: !23831, file: !3, line: 1939, column: 11)
!23840 = !DILocation(line: 1939, column: 17, scope: !23839)
!23841 = !DILocation(line: 1939, column: 22, scope: !23839)
!23842 = !DILocation(line: 1939, column: 28, scope: !23839)
!23843 = !DILocation(line: 1939, column: 20, scope: !23839)
!23844 = !DILocation(line: 1939, column: 11, scope: !23831)
!23845 = !DILocation(line: 1939, column: 32, scope: !23839)
!23846 = !DILocation(line: 1940, column: 2, scope: !23815)
!23847 = !DILocation(line: 1941, column: 1, scope: !23815)
!23848 = distinct !DISubprogram(name: "BLI_rctf_size_x", scope: !23849, file: !23849, line: 107, type: !23850, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23849 = !DIFile(filename: "blender/source/blender/blenlib/BLI_rect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!23850 = !DISubroutineType(types: !23851)
!23851 = !{!45, !23852}
!23852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23853, size: 64)
!23853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1094)
!23854 = !DILocalVariable(name: "rct", arg: 1, scope: !23848, file: !23849, line: 107, type: !23852)
!23855 = !DILocation(line: 107, column: 53, scope: !23848)
!23856 = !DILocation(line: 107, column: 68, scope: !23848)
!23857 = !DILocation(line: 107, column: 73, scope: !23848)
!23858 = !DILocation(line: 107, column: 80, scope: !23848)
!23859 = !DILocation(line: 107, column: 85, scope: !23848)
!23860 = !DILocation(line: 107, column: 78, scope: !23848)
!23861 = !DILocation(line: 107, column: 60, scope: !23848)
!23862 = distinct !DISubprogram(name: "BLI_rctf_size_y", scope: !23849, file: !23849, line: 108, type: !23850, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23863 = !DILocalVariable(name: "rct", arg: 1, scope: !23862, file: !23849, line: 108, type: !23852)
!23864 = !DILocation(line: 108, column: 53, scope: !23862)
!23865 = !DILocation(line: 108, column: 68, scope: !23862)
!23866 = !DILocation(line: 108, column: 73, scope: !23862)
!23867 = !DILocation(line: 108, column: 80, scope: !23862)
!23868 = !DILocation(line: 108, column: 85, scope: !23862)
!23869 = !DILocation(line: 108, column: 78, scope: !23862)
!23870 = !DILocation(line: 108, column: 60, scope: !23862)
!23871 = distinct !DISubprogram(name: "calculate_speedvector", scope: !3, file: !3, line: 5411, type: !23872, scopeLine: 5412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23872 = !DISubroutineType(types: !23873)
!23873 = !{null, !2417, !21, !45, !45, !2417, !2417, !44}
!23874 = !DILocalVariable(name: "vectors", arg: 1, scope: !23871, file: !3, line: 5411, type: !2417)
!23875 = !DILocation(line: 5411, column: 47, scope: !23871)
!23876 = !DILocalVariable(name: "step", arg: 2, scope: !23871, file: !3, line: 5411, type: !21)
!23877 = !DILocation(line: 5411, column: 63, scope: !23871)
!23878 = !DILocalVariable(name: "winsq", arg: 3, scope: !23871, file: !3, line: 5411, type: !45)
!23879 = !DILocation(line: 5411, column: 75, scope: !23871)
!23880 = !DILocalVariable(name: "winroot", arg: 4, scope: !23871, file: !3, line: 5411, type: !45)
!23881 = !DILocation(line: 5411, column: 88, scope: !23871)
!23882 = !DILocalVariable(name: "co", arg: 5, scope: !23871, file: !3, line: 5411, type: !2417)
!23883 = !DILocation(line: 5411, column: 109, scope: !23871)
!23884 = !DILocalVariable(name: "ho", arg: 6, scope: !23871, file: !3, line: 5411, type: !2417)
!23885 = !DILocation(line: 5411, column: 128, scope: !23871)
!23886 = !DILocalVariable(name: "speed", arg: 7, scope: !23871, file: !3, line: 5411, type: !44)
!23887 = !DILocation(line: 5411, column: 141, scope: !23871)
!23888 = !DILocalVariable(name: "zco", scope: !23871, file: !3, line: 5413, type: !1143)
!23889 = !DILocation(line: 5413, column: 8, scope: !23871)
!23890 = !DILocalVariable(name: "len", scope: !23871, file: !3, line: 5413, type: !45)
!23891 = !DILocation(line: 5413, column: 16, scope: !23871)
!23892 = !DILocation(line: 5415, column: 28, scope: !23871)
!23893 = !DILocation(line: 5415, column: 33, scope: !23871)
!23894 = !DILocation(line: 5415, column: 37, scope: !23871)
!23895 = !DILocation(line: 5415, column: 2, scope: !23871)
!23896 = !DILocation(line: 5417, column: 10, scope: !23871)
!23897 = !DILocation(line: 5417, column: 23, scope: !23871)
!23898 = !DILocation(line: 5417, column: 21, scope: !23871)
!23899 = !DILocation(line: 5417, column: 2, scope: !23871)
!23900 = !DILocation(line: 5417, column: 8, scope: !23871)
!23901 = !DILocation(line: 5418, column: 10, scope: !23871)
!23902 = !DILocation(line: 5418, column: 23, scope: !23871)
!23903 = !DILocation(line: 5418, column: 21, scope: !23871)
!23904 = !DILocation(line: 5418, column: 2, scope: !23871)
!23905 = !DILocation(line: 5418, column: 8, scope: !23871)
!23906 = !DILocation(line: 5421, column: 6, scope: !23907)
!23907 = distinct !DILexicalBlock(scope: !23871, file: !3, line: 5421, column: 6)
!23908 = !DILocation(line: 5421, column: 12, scope: !23907)
!23909 = !DILocation(line: 5421, column: 18, scope: !23907)
!23910 = !DILocation(line: 5421, column: 21, scope: !23907)
!23911 = !DILocation(line: 5421, column: 27, scope: !23907)
!23912 = !DILocation(line: 5421, column: 34, scope: !23907)
!23913 = !DILocation(line: 5421, column: 37, scope: !23907)
!23914 = !DILocation(line: 5421, column: 43, scope: !23907)
!23915 = !DILocation(line: 5421, column: 49, scope: !23907)
!23916 = !DILocation(line: 5421, column: 52, scope: !23907)
!23917 = !DILocation(line: 5421, column: 58, scope: !23907)
!23918 = !DILocation(line: 5421, column: 6, scope: !23871)
!23919 = !DILocation(line: 5422, column: 3, scope: !23920)
!23920 = distinct !DILexicalBlock(scope: !23907, file: !3, line: 5421, column: 67)
!23921 = !DILocation(line: 5422, column: 9, scope: !23920)
!23922 = !DILocation(line: 5423, column: 3, scope: !23920)
!23923 = !DILocation(line: 5423, column: 9, scope: !23920)
!23924 = !DILocation(line: 5424, column: 2, scope: !23920)
!23925 = !DILocation(line: 5427, column: 7, scope: !23871)
!23926 = !DILocation(line: 5427, column: 14, scope: !23871)
!23927 = !DILocation(line: 5427, column: 13, scope: !23871)
!23928 = !DILocation(line: 5427, column: 23, scope: !23871)
!23929 = !DILocation(line: 5427, column: 30, scope: !23871)
!23930 = !DILocation(line: 5427, column: 29, scope: !23871)
!23931 = !DILocation(line: 5427, column: 21, scope: !23871)
!23932 = !DILocation(line: 5427, column: 5, scope: !23871)
!23933 = !DILocation(line: 5428, column: 6, scope: !23934)
!23934 = distinct !DILexicalBlock(scope: !23871, file: !3, line: 5428, column: 6)
!23935 = !DILocation(line: 5428, column: 12, scope: !23934)
!23936 = !DILocation(line: 5428, column: 10, scope: !23934)
!23937 = !DILocation(line: 5428, column: 6, scope: !23871)
!23938 = !DILocation(line: 5429, column: 8, scope: !23939)
!23939 = distinct !DILexicalBlock(scope: !23934, file: !3, line: 5428, column: 19)
!23940 = !DILocation(line: 5429, column: 22, scope: !23939)
!23941 = !DILocation(line: 5429, column: 16, scope: !23939)
!23942 = !DILocation(line: 5429, column: 15, scope: !23939)
!23943 = !DILocation(line: 5429, column: 6, scope: !23939)
!23944 = !DILocation(line: 5430, column: 12, scope: !23939)
!23945 = !DILocation(line: 5430, column: 3, scope: !23939)
!23946 = !DILocation(line: 5430, column: 9, scope: !23939)
!23947 = !DILocation(line: 5431, column: 12, scope: !23939)
!23948 = !DILocation(line: 5431, column: 3, scope: !23939)
!23949 = !DILocation(line: 5431, column: 9, scope: !23939)
!23950 = !DILocation(line: 5432, column: 2, scope: !23939)
!23951 = !DILocation(line: 5435, column: 6, scope: !23952)
!23952 = distinct !DILexicalBlock(scope: !23871, file: !3, line: 5435, column: 6)
!23953 = !DILocation(line: 5435, column: 6, scope: !23871)
!23954 = !DILocation(line: 5436, column: 14, scope: !23955)
!23955 = distinct !DILexicalBlock(scope: !23952, file: !3, line: 5435, column: 12)
!23956 = !DILocation(line: 5436, column: 13, scope: !23955)
!23957 = !DILocation(line: 5436, column: 3, scope: !23955)
!23958 = !DILocation(line: 5436, column: 11, scope: !23955)
!23959 = !DILocation(line: 5437, column: 14, scope: !23955)
!23960 = !DILocation(line: 5437, column: 13, scope: !23955)
!23961 = !DILocation(line: 5437, column: 3, scope: !23955)
!23962 = !DILocation(line: 5437, column: 11, scope: !23955)
!23963 = !DILocation(line: 5438, column: 2, scope: !23955)
!23964 = !DILocation(line: 5440, column: 13, scope: !23965)
!23965 = distinct !DILexicalBlock(scope: !23952, file: !3, line: 5439, column: 7)
!23966 = !DILocation(line: 5440, column: 3, scope: !23965)
!23967 = !DILocation(line: 5440, column: 11, scope: !23965)
!23968 = !DILocation(line: 5441, column: 13, scope: !23965)
!23969 = !DILocation(line: 5441, column: 3, scope: !23965)
!23970 = !DILocation(line: 5441, column: 11, scope: !23965)
!23971 = !DILocation(line: 5443, column: 1, scope: !23871)
!23972 = distinct !DISubprogram(name: "calculate_strandsurface_speedvectors", scope: !3, file: !3, line: 5445, type: !23973, scopeLine: 5446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!23973 = !DISubroutineType(types: !23974)
!23974 = !{!44, !6, !3342, !6335}
!23975 = !DILocalVariable(name: "re", arg: 1, scope: !23972, file: !3, line: 5445, type: !6)
!23976 = !DILocation(line: 5445, column: 60, scope: !23972)
!23977 = !DILocalVariable(name: "obi", arg: 2, scope: !23972, file: !3, line: 5445, type: !3342)
!23978 = !DILocation(line: 5445, column: 83, scope: !23972)
!23979 = !DILocalVariable(name: "mesh", arg: 3, scope: !23972, file: !3, line: 5445, type: !6335)
!23980 = !DILocation(line: 5445, column: 103, scope: !23972)
!23981 = !DILocation(line: 5447, column: 6, scope: !23982)
!23982 = distinct !DILexicalBlock(scope: !23972, file: !3, line: 5447, column: 6)
!23983 = !DILocation(line: 5447, column: 12, scope: !23982)
!23984 = !DILocation(line: 5447, column: 15, scope: !23982)
!23985 = !DILocation(line: 5447, column: 18, scope: !23982)
!23986 = !DILocation(line: 5447, column: 24, scope: !23982)
!23987 = !DILocation(line: 5447, column: 31, scope: !23982)
!23988 = !DILocation(line: 5447, column: 34, scope: !23982)
!23989 = !DILocation(line: 5447, column: 40, scope: !23982)
!23990 = !DILocation(line: 5447, column: 6, scope: !23972)
!23991 = !DILocalVariable(name: "winsq", scope: !23992, file: !3, line: 5448, type: !45)
!23992 = distinct !DILexicalBlock(scope: !23982, file: !3, line: 5447, column: 48)
!23993 = !DILocation(line: 5448, column: 9, scope: !23992)
!23994 = !DILocation(line: 5448, column: 23, scope: !23992)
!23995 = !DILocation(line: 5448, column: 27, scope: !23992)
!23996 = !DILocation(line: 5448, column: 16, scope: !23992)
!23997 = !DILocation(line: 5448, column: 39, scope: !23992)
!23998 = !DILocation(line: 5448, column: 43, scope: !23992)
!23999 = !DILocation(line: 5448, column: 32, scope: !23992)
!24000 = !DILocation(line: 5448, column: 31, scope: !23992)
!24001 = !DILocalVariable(name: "winroot", scope: !23992, file: !3, line: 5449, type: !45)
!24002 = !DILocation(line: 5449, column: 9, scope: !23992)
!24003 = !DILocation(line: 5449, column: 24, scope: !23992)
!24004 = !DILocation(line: 5449, column: 18, scope: !23992)
!24005 = !DILocalVariable(name: "winspeed", scope: !23992, file: !3, line: 5450, type: !2482)
!24006 = !DILocation(line: 5450, column: 11, scope: !23992)
!24007 = !DILocalVariable(name: "ho", scope: !23992, file: !3, line: 5451, type: !270)
!24008 = !DILocation(line: 5451, column: 9, scope: !23992)
!24009 = !DILocalVariable(name: "prevho", scope: !23992, file: !3, line: 5451, type: !270)
!24010 = !DILocation(line: 5451, column: 16, scope: !23992)
!24011 = !DILocalVariable(name: "nextho", scope: !23992, file: !3, line: 5451, type: !270)
!24012 = !DILocation(line: 5451, column: 27, scope: !23992)
!24013 = !DILocalVariable(name: "winmat", scope: !23992, file: !3, line: 5451, type: !462)
!24014 = !DILocation(line: 5451, column: 38, scope: !23992)
!24015 = !DILocalVariable(name: "vec", scope: !23992, file: !3, line: 5451, type: !1143)
!24016 = !DILocation(line: 5451, column: 52, scope: !23992)
!24017 = !DILocalVariable(name: "a", scope: !23992, file: !3, line: 5452, type: !21)
!24018 = !DILocation(line: 5452, column: 7, scope: !23992)
!24019 = !DILocation(line: 5454, column: 7, scope: !24020)
!24020 = distinct !DILexicalBlock(scope: !23992, file: !3, line: 5454, column: 7)
!24021 = !DILocation(line: 5454, column: 12, scope: !24020)
!24022 = !DILocation(line: 5454, column: 17, scope: !24020)
!24023 = !DILocation(line: 5454, column: 7, scope: !23992)
!24024 = !DILocation(line: 5455, column: 16, scope: !24020)
!24025 = !DILocation(line: 5455, column: 24, scope: !24020)
!24026 = !DILocation(line: 5455, column: 28, scope: !24020)
!24027 = !DILocation(line: 5455, column: 36, scope: !24020)
!24028 = !DILocation(line: 5455, column: 41, scope: !24020)
!24029 = !DILocation(line: 5455, column: 4, scope: !24020)
!24030 = !DILocation(line: 5457, column: 15, scope: !24020)
!24031 = !DILocation(line: 5457, column: 23, scope: !24020)
!24032 = !DILocation(line: 5457, column: 27, scope: !24020)
!24033 = !DILocation(line: 5457, column: 4, scope: !24020)
!24034 = !DILocation(line: 5459, column: 13, scope: !23992)
!24035 = !DILocation(line: 5459, column: 41, scope: !23992)
!24036 = !DILocation(line: 5459, column: 47, scope: !23992)
!24037 = !DILocation(line: 5459, column: 40, scope: !23992)
!24038 = !DILocation(line: 5459, column: 11, scope: !23992)
!24039 = !DILocation(line: 5461, column: 9, scope: !24040)
!24040 = distinct !DILexicalBlock(scope: !23992, file: !3, line: 5461, column: 3)
!24041 = !DILocation(line: 5461, column: 8, scope: !24040)
!24042 = !DILocation(line: 5461, column: 13, scope: !24043)
!24043 = distinct !DILexicalBlock(scope: !24040, file: !3, line: 5461, column: 3)
!24044 = !DILocation(line: 5461, column: 15, scope: !24043)
!24045 = !DILocation(line: 5461, column: 21, scope: !24043)
!24046 = !DILocation(line: 5461, column: 14, scope: !24043)
!24047 = !DILocation(line: 5461, column: 3, scope: !24040)
!24048 = !DILocation(line: 5462, column: 16, scope: !24049)
!24049 = distinct !DILexicalBlock(scope: !24043, file: !3, line: 5461, column: 35)
!24050 = !DILocation(line: 5462, column: 22, scope: !24049)
!24051 = !DILocation(line: 5462, column: 25, scope: !24049)
!24052 = !DILocation(line: 5462, column: 29, scope: !24049)
!24053 = !DILocation(line: 5462, column: 37, scope: !24049)
!24054 = !DILocation(line: 5462, column: 4, scope: !24049)
!24055 = !DILocation(line: 5464, column: 16, scope: !24049)
!24056 = !DILocation(line: 5464, column: 22, scope: !24049)
!24057 = !DILocation(line: 5464, column: 29, scope: !24049)
!24058 = !DILocation(line: 5464, column: 33, scope: !24049)
!24059 = !DILocation(line: 5464, column: 41, scope: !24049)
!24060 = !DILocation(line: 5464, column: 4, scope: !24049)
!24061 = !DILocation(line: 5465, column: 30, scope: !24049)
!24062 = !DILocation(line: 5465, column: 35, scope: !24049)
!24063 = !DILocation(line: 5465, column: 41, scope: !24049)
!24064 = !DILocation(line: 5465, column: 48, scope: !24049)
!24065 = !DILocation(line: 5465, column: 52, scope: !24049)
!24066 = !DILocation(line: 5465, column: 4, scope: !24049)
!24067 = !DILocation(line: 5466, column: 26, scope: !24049)
!24068 = !DILocation(line: 5466, column: 34, scope: !24049)
!24069 = !DILocation(line: 5466, column: 41, scope: !24049)
!24070 = !DILocation(line: 5466, column: 50, scope: !24049)
!24071 = !DILocation(line: 5466, column: 56, scope: !24049)
!24072 = !DILocation(line: 5466, column: 59, scope: !24049)
!24073 = !DILocation(line: 5466, column: 63, scope: !24049)
!24074 = !DILocation(line: 5466, column: 67, scope: !24049)
!24075 = !DILocation(line: 5466, column: 76, scope: !24049)
!24076 = !DILocation(line: 5466, column: 4, scope: !24049)
!24077 = !DILocation(line: 5468, column: 16, scope: !24049)
!24078 = !DILocation(line: 5468, column: 22, scope: !24049)
!24079 = !DILocation(line: 5468, column: 29, scope: !24049)
!24080 = !DILocation(line: 5468, column: 33, scope: !24049)
!24081 = !DILocation(line: 5468, column: 41, scope: !24049)
!24082 = !DILocation(line: 5468, column: 4, scope: !24049)
!24083 = !DILocation(line: 5469, column: 30, scope: !24049)
!24084 = !DILocation(line: 5469, column: 35, scope: !24049)
!24085 = !DILocation(line: 5469, column: 41, scope: !24049)
!24086 = !DILocation(line: 5469, column: 48, scope: !24049)
!24087 = !DILocation(line: 5469, column: 52, scope: !24049)
!24088 = !DILocation(line: 5469, column: 4, scope: !24049)
!24089 = !DILocation(line: 5470, column: 26, scope: !24049)
!24090 = !DILocation(line: 5470, column: 34, scope: !24049)
!24091 = !DILocation(line: 5470, column: 41, scope: !24049)
!24092 = !DILocation(line: 5470, column: 50, scope: !24049)
!24093 = !DILocation(line: 5470, column: 56, scope: !24049)
!24094 = !DILocation(line: 5470, column: 59, scope: !24049)
!24095 = !DILocation(line: 5470, column: 63, scope: !24049)
!24096 = !DILocation(line: 5470, column: 67, scope: !24049)
!24097 = !DILocation(line: 5470, column: 76, scope: !24049)
!24098 = !DILocation(line: 5470, column: 4, scope: !24049)
!24099 = !DILocation(line: 5471, column: 3, scope: !24049)
!24100 = !DILocation(line: 5461, column: 31, scope: !24043)
!24101 = !DILocation(line: 5461, column: 3, scope: !24043)
!24102 = distinct !{!24102, !24047, !24103}
!24103 = !DILocation(line: 5471, column: 3, scope: !24040)
!24104 = !DILocation(line: 5473, column: 19, scope: !23992)
!24105 = !DILocation(line: 5473, column: 10, scope: !23992)
!24106 = !DILocation(line: 5473, column: 3, scope: !23992)
!24107 = !DILocation(line: 5476, column: 2, scope: !23972)
!24108 = !DILocation(line: 5477, column: 1, scope: !23972)
!24109 = distinct !DISubprogram(name: "zero_v4", scope: !4629, file: !4629, line: 50, type: !8169, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!24110 = !DILocalVariable(name: "r", arg: 1, scope: !24109, file: !4629, line: 50, type: !44)
!24111 = !DILocation(line: 50, column: 28, scope: !24109)
!24112 = !DILocation(line: 52, column: 2, scope: !24109)
!24113 = !DILocation(line: 52, column: 7, scope: !24109)
!24114 = !DILocation(line: 53, column: 2, scope: !24109)
!24115 = !DILocation(line: 53, column: 7, scope: !24109)
!24116 = !DILocation(line: 54, column: 2, scope: !24109)
!24117 = !DILocation(line: 54, column: 7, scope: !24109)
!24118 = !DILocation(line: 55, column: 2, scope: !24109)
!24119 = !DILocation(line: 55, column: 7, scope: !24109)
!24120 = !DILocation(line: 56, column: 1, scope: !24109)
!24121 = distinct !DISubprogram(name: "madd_v4_v4fl", scope: !4629, file: !4629, line: 541, type: !8144, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !3736, retainedNodes: !4173)
!24122 = !DILocalVariable(name: "r", arg: 1, scope: !24121, file: !4629, line: 541, type: !44)
!24123 = !DILocation(line: 541, column: 33, scope: !24121)
!24124 = !DILocalVariable(name: "a", arg: 2, scope: !24121, file: !4629, line: 541, type: !2417)
!24125 = !DILocation(line: 541, column: 51, scope: !24121)
!24126 = !DILocalVariable(name: "f", arg: 3, scope: !24121, file: !4629, line: 541, type: !45)
!24127 = !DILocation(line: 541, column: 63, scope: !24121)
!24128 = !DILocation(line: 543, column: 10, scope: !24121)
!24129 = !DILocation(line: 543, column: 17, scope: !24121)
!24130 = !DILocation(line: 543, column: 15, scope: !24121)
!24131 = !DILocation(line: 543, column: 2, scope: !24121)
!24132 = !DILocation(line: 543, column: 7, scope: !24121)
!24133 = !DILocation(line: 544, column: 10, scope: !24121)
!24134 = !DILocation(line: 544, column: 17, scope: !24121)
!24135 = !DILocation(line: 544, column: 15, scope: !24121)
!24136 = !DILocation(line: 544, column: 2, scope: !24121)
!24137 = !DILocation(line: 544, column: 7, scope: !24121)
!24138 = !DILocation(line: 545, column: 10, scope: !24121)
!24139 = !DILocation(line: 545, column: 17, scope: !24121)
!24140 = !DILocation(line: 545, column: 15, scope: !24121)
!24141 = !DILocation(line: 545, column: 2, scope: !24121)
!24142 = !DILocation(line: 545, column: 7, scope: !24121)
!24143 = !DILocation(line: 546, column: 10, scope: !24121)
!24144 = !DILocation(line: 546, column: 17, scope: !24121)
!24145 = !DILocation(line: 546, column: 15, scope: !24121)
!24146 = !DILocation(line: 546, column: 2, scope: !24121)
!24147 = !DILocation(line: 546, column: 7, scope: !24121)
!24148 = !DILocation(line: 547, column: 1, scope: !24121)
