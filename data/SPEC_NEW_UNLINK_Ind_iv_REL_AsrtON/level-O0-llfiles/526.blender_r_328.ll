; ModuleID = 'blender/source/blender/render/intern/source/occlusion.c'
source_filename = "blender/source/blender/render/intern/source/occlusion.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Render = type { %struct.Render*, %struct.Render*, [74 x i8], i32, i16, i16, i16, i16, i8, %struct.RenderResult*, %struct.RenderResult*, %struct.ListBase, i32, i32, i32, %struct.rcti, %struct.rctf, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, [3 x float], [3 x [3 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], float, float, %struct.SampleTables*, [32 x [2 x float]], [32 x [2 x float]], %struct.ListBase*, [1 x i32], %struct.Main*, %struct.Scene*, %struct.RenderData, %struct.World, %struct.Object*, i32, i32, %struct.ListBase, %struct.RenderEngine*, %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, float, i8*, %struct.ListBase, float, float, i32, i32, i32, i32, i32, %struct.HaloRen**, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ObjectInstanceRen*, %struct.ListBase, i32, %struct.Image*, %struct.GHash*, %struct.GHash*, %struct.ListBase*, %struct.Material*, %struct.ListBase, %struct.Object*, %struct.ListBase, %struct.ListBase, %struct.MemArena*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*)*, i8*, void (i8*, %struct.RenderResult*, %struct.rcti*)*, i8*, void (i8*, %struct.Scene*)*, i8*, void (i8*, %struct.RenderStats*)*, i8*, void (i8*, float)*, i8*, void (i8*, i32)*, i8*, i32 (i8*)*, i8*, %struct.RenderStats, %struct.ReportList*, %struct.ImagePool*, %struct.EvaluationContext* }
%struct.RenderResult = type { %struct.RenderResult*, %struct.RenderResult*, i32, i32, i16, i16, i32*, float*, float*, %struct.rcti, i32, i32, %struct.ListBase, %struct.rcti, %struct.RenderLayer*, i32, i32, i32, i8* }
%struct.RenderLayer = type { %struct.RenderLayer*, %struct.RenderLayer*, [74 x i8], i32, i32, i32, i32, i32, i32, %struct.Material*, %struct.Group*, float*, float*, float*, i32*, i32, i32, i8*, %struct.ListBase }
%struct.Group = type opaque
%struct.rcti = type { i32, i32, i32, i32 }
%struct.rctf = type { float, float, float, float }
%struct.SampleTables = type { [16 x float], [9 x float*], [9 x float*], [256 x i8], i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type { i32, [64 x i8], [64 x i8], [256 x i8], i32, void (%struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNode*)*, void (%struct.Scene*, i8*, void (i8*, i32, i8*)*)*, i32 (%struct.bContext*, %struct.bNodeTreeType*)*, void (%struct.bContext*, %struct.bNodeTreeType*, %struct.bNodeTree**, %struct.ID**, %struct.ID**)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*, %struct.bNodeTree*)*, void (%struct.bNodeTree*)*, i32 (%struct.bNodeTree*, %struct.bNodeLink*)*, void (%struct.bNodeTree*, %struct.bNode*)*, %struct.ExtensionRNA }
%struct.bContext = type opaque
%struct.bNodeLink = type { %struct.bNodeLink*, %struct.bNodeLink*, %struct.bNode*, %struct.bNode*, %struct.bNodeSocket*, %struct.bNodeSocket*, i32, i32 }
%struct.bNode = type { %struct.bNode*, %struct.bNode*, %struct.bNode*, %struct.IDProperty*, %struct.bNodeType*, [64 x i8], [64 x i8], i32, i16, i16, i16, i16, i16, i16, i16, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.bNode*, %struct.ID*, i8*, %struct.bNode*, %struct.ListBase, float, float, float, float, float, float, float, i32, [64 x i8], i16, i16, float, float, i16, i16, i8*, %struct.rctf, %struct.rctf, %struct.rctf, i16, i16, i32, %struct.uiBlock* }
%struct.bNodeType = type { i8*, i8*, i16, [64 x i8], i32, [64 x i8], [256 x i8], i32, float, float, float, float, float, float, i16, i16, i16, %struct.bNodeSocketTemplate*, %struct.bNodeSocketTemplate*, [64 x i8], void (%struct.bContext*, %struct.ARegion*, %struct.SpaceNode*, %struct.bNodeTree*, %struct.bNode*, i32)*, void (%struct.bContext*, %struct.bNodeTree*, %struct.bNode*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.uiLayout*, %struct.bContext*, %struct.PointerRNA*)*, void (%struct.SpaceNode*, %struct.ImBuf*, %struct.bNode*, i32, i32)*, void (%struct.bNodeTree*, %struct.bNode*, i8*, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, i32 (%struct.bNode*, i32, i32)*, {}*, void (%struct.bNodeTree*, %struct.bNode*, %struct.ID*)*, {}*, void (%struct.bNode*)*, void (%struct.bNodeTree*, %struct.bNode*, %struct.bNode*)*, void (%struct.bContext*, %struct.PointerRNA*)*, void (%struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.bNode*)*, i32 (%struct.bNodeType*, %struct.bNodeTree*)*, i32 (%struct.bNode*, %struct.bNodeTree*)*, {}*, i8* (%struct.bNodeExecContext*, %struct.bNode*, i32)*, void (i8*)*, void (i8*, i32, %struct.bNode*, %struct.bNodeExecData*, %struct.bNodeStack**, %struct.bNodeStack**)*, i32 (%struct.GPUMaterial*, %struct.bNode*, %struct.bNodeExecData*, %struct.GPUNodeStack*, %struct.GPUNodeStack*)*, %struct.ExtensionRNA }
%struct.bNodeSocketTemplate = type { i32, i32, [64 x i8], float, float, float, float, float, float, i32, i32, %struct.bNodeSocket*, [64 x i8] }
%struct.ARegion = type opaque
%struct.SpaceNode = type opaque
%struct.uiLayout = type opaque
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ImBuf = type opaque
%struct.bNodeExecContext = type opaque
%struct.bNodeExecData = type opaque
%struct.bNodeStack = type { [4 x float], float, float, i8*, i16, i16, i16, i16, i16, i16, [2 x i16] }
%struct.GPUMaterial = type opaque
%struct.GPUNodeStack = type opaque
%struct.uiBlock = type opaque
%struct.bNodeSocket = type { %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.bNodeSocket*, %struct.IDProperty*, [64 x i8], [64 x i8], i8*, i16, i16, i16, i16, %struct.bNodeSocketType*, [64 x i8], float, float, i8*, i16, i16, i32, i8*, i32, i32, %struct.bNodeSocket*, %struct.bNodeLink*, %struct.bNodeStack }
%struct.bNodeSocketType = type { [64 x i8], void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*, %struct.PointerRNA*, i8*)*, void (%struct.bContext*, %struct.PointerRNA*, %struct.PointerRNA*, float*)*, void (%struct.bContext*, %struct.uiLayout*, %struct.PointerRNA*)*, void (%struct.bContext*, %struct.PointerRNA*, float*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.StructRNA*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*, i8*)*, void (%struct.bNodeTree*, %struct.bNodeSocket*, %struct.bNode*, %struct.bNodeSocket*)*, %struct.ExtensionRNA, %struct.ExtensionRNA, i32, i32 }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.StructRNA = type opaque
%struct.bNodeInstanceHash = type { %struct.GHash* }
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.Text = type opaque
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.World = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, float, float, float, float, i16, i16, i16, i16, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, float*, float*, %struct.Ipo*, [18 x %struct.MTex*], i16, i16, [2 x i16], %struct.PreviewImage*, %struct.bNodeTree* }
%struct.Ipo = type opaque
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.RenderEngine = type opaque
%struct.RayObject = type opaque
%struct.RayFace = type opaque
%struct.VlakPrimitive = type opaque
%struct.HaloRen = type { i16, i16, float, float, float, float, float, float, float, [3 x float], [3 x float], float, float, float, float, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i16, float, i32, i32, %struct.Material*, %struct.ImagePool* }
%struct.ObjectInstanceRen = type { %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, i32, i32, i32, [4 x [4 x float]], [4 x [4 x float]], [3 x [3 x float]], i16, [3 x float], [2 x float], [4 x float]*, %struct.VolumePrecache*, float*, i32, %struct.RayObject*, i32 }
%struct.ObjectRen = type { %struct.ObjectRen*, %struct.ObjectRen*, %struct.Object*, %struct.Object*, %struct.Scene*, i32, i32, i32, i32, [2 x [3 x float]], i32, i32, i32, i32, i32, i32, i32, i32, %struct.VertTableNode*, %struct.VlakTableNode*, %struct.StrandTableNode*, %struct.HaloRen**, %struct.StrandBuffer*, [64 x i8]*, [64 x i8]*, i32, i32, i32, [4 x [4 x float]], %struct.RayObject*, %struct.RayFace*, %struct.VlakPrimitive*, %struct.ObjectInstanceRen* }
%struct.VertTableNode = type { %struct.VertRen*, float*, float*, float*, float*, float*, i32* }
%struct.VertRen = type { [3 x float], [3 x float], float*, i32, float, i32 }
%struct.VlakTableNode = type { %struct.VlakRen*, %struct.MTFace*, %struct.MCol*, i32*, i32, i32, float*, float*, %struct.RadFace** }
%struct.VlakRen = type { %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, [3 x float], %struct.Material*, i8, i8, i8, i32 }
%struct.MTFace = type opaque
%struct.MCol = type opaque
%struct.RadFace = type { [3 x float], [3 x float], [3 x float], [3 x float], float, i32 }
%struct.StrandTableNode = type { %struct.StrandRen*, float*, float*, float*, i32*, %struct.MCol*, float*, i32, i32 }
%struct.StrandRen = type { %struct.StrandVert*, %struct.StrandBuffer*, i32, i32, i32, i32, [3 x float] }
%struct.StrandVert = type { [3 x float], float }
%struct.StrandBuffer = type { %struct.StrandBuffer*, %struct.StrandBuffer*, %struct.StrandVert*, %struct.StrandBound*, i32, i32, %struct.ObjectRen*, %struct.Material*, %struct.StrandSurface*, i32, i32, i32, i32, float, float, float, float, [4 x [4 x float]], i32, i32 }
%struct.StrandBound = type { i32, i32, [2 x [3 x float]] }
%struct.StrandSurface = type { %struct.StrandSurface*, %struct.StrandSurface*, %struct.ObjectRen, [4 x i32]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32 }
%struct.VolumePrecache = type { [3 x i32], float*, float*, float*, float*, float* }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.GHash = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.ListBase = type { i8*, i8* }
%struct.MemArena = type opaque
%struct.RenderStats = type { i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i8, double, double, i8*, i8*, [64 x i8], float, float }
%struct.ReportList = type opaque
%struct.ImagePool = type opaque
%struct.EvaluationContext = type opaque
%struct.OcclusionThread = type { %struct.Render*, %struct.StrandSurface*, [3 x float]*, [3 x float]*, [3 x float]*, i32, i32, i32 }
%struct.OcclusionTree = type { %struct.MemArena*, [3 x float]*, %struct.OccFace*, float*, [3 x float]*, %struct.OccNode*, [1 x %struct.OccNode**], i32, i32, float, float, i32, i32, i32, %struct.OcclusionCache* }
%struct.OccFace = type { i32, i32 }
%struct.OccNode = type { [3 x float], float, [9 x float], float, float, [3 x float], i32, [8 x %union.anon] }
%union.anon = type { %struct.OccNode* }
%struct.OcclusionCache = type { %struct.OcclusionCacheSample*, i32, i32, i32, i32, i32 }
%struct.OcclusionCacheSample = type { [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, i32, i32, i32 }
%struct.ShadeInput = type { %struct.Material*, %struct.VlakRen*, %struct.StrandRen*, %struct.ObjectInstanceRen*, %struct.ObjectRen*, i32, [3 x float], i16, %struct.VertRen*, %struct.VertRen*, %struct.VertRen*, i16, i16, i16, i16, i16, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, float, float, float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], float, [3 x float], [3 x float], [4 x float], float, [4 x float], [3 x float], [3 x float], [8 x %struct.ShadeInputUV], [8 x %struct.ShadeInputCol], i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, [3 x float], [3 x float], [3 x float], i32, i32, i32, [3 x float], i32, i32, i32, [3 x float], float, i8, i8, i16, i16, i16, i32, i32, i32, i32, %struct.Group*, %struct.Material* }
%struct.ShadeInputUV = type { [3 x float], [3 x float], [3 x float], i8* }
%struct.ShadeInputCol = type { [4 x float], i8* }
%struct.RenderPart = type { %struct.RenderPart*, %struct.RenderPart*, %struct.RenderResult*, %struct.ListBase, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, %struct.rcti, i32, i32, i32, i16, i16, i16, i16, i8* }
%struct.ShadeSample = type { i32, [16 x %struct.RenderLayer*], [16 x %struct.ShadeInput], [16 x %struct.ShadeResult] }
%struct.ShadeResult = type { [4 x float], [4 x float], float, float, float, [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float] }
%struct.PixStr = type { %struct.PixStr*, i32, i32, i32, i32, i16, i16 }
%struct.OcclusionBuildThread = type { %struct.OcclusionTree*, i32, i32, i32, %struct.OccNode* }

@R = external dso_local global %struct.Render, align 8
@.str = private unnamed_addr constant [24 x i8] c"Occlusion preprocessing\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"OcclusionCount\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"StrandSurfFaceAO\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"StrandSurfFaceEnv\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"StrandSurfFaceIndirect\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"OcclusionCacheSample\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"OcclusionTree\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"occ tree arena\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"OcclusionCache\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"OcclusionFace\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"OcclusionCo\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"OcclusionOcclusion\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"OcclusionRad\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"OccStack\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"OcclusionPassOcc\00", align 1
@sh_eval.c1 = internal constant float 0x3FDB7570C0000000, align 4, !dbg !0
@sh_eval.c2 = internal constant float 0x3FE05F8D20000000, align 4, !dbg !2783
@sh_eval.c3 = internal constant float 0x3FE7C7AE20000000, align 4, !dbg !2786
@sh_eval.c4 = internal constant float 0x3FEC5BF8C0000000, align 4, !dbg !2788
@sh_eval.c5 = internal constant float 0x3FCFB4E540000000, align 4, !dbg !2790
@.str.15 = private unnamed_addr constant [19 x i8] c"OcclusionBounceRad\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local void @make_occ_tree(%struct.Render* %re) #0 !dbg !2797 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %othreads = alloca [1 x %struct.OcclusionThread], align 16
  %tree = alloca %struct.OcclusionTree*, align 8
  %mesh = alloca %struct.StrandSurface*, align 8
  %threads = alloca %struct.ListBase, align 8
  %ao = alloca [3 x float], align 4
  %env = alloca [3 x float], align 4
  %indirect = alloca [3 x float], align 4
  %faceao = alloca [3 x float]*, align 8
  %faceenv = alloca [3 x float]*, align 8
  %faceindirect = alloca [3 x float]*, align 8
  %a = alloca i32, align 4
  %totface = alloca i32, align 4
  %totthread = alloca i32, align 4
  %face = alloca i32*, align 8
  %count = alloca i32*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !2800, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.declare(metadata [1 x %struct.OcclusionThread]* %othreads, metadata !2802, metadata !DIExpression()), !dbg !2804
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree, metadata !2805, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh, metadata !2807, metadata !DIExpression()), !dbg !2808
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !2809, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.declare(metadata [3 x float]* %ao, metadata !2811, metadata !DIExpression()), !dbg !2812
  call void @llvm.dbg.declare(metadata [3 x float]* %env, metadata !2813, metadata !DIExpression()), !dbg !2814
  call void @llvm.dbg.declare(metadata [3 x float]* %indirect, metadata !2815, metadata !DIExpression()), !dbg !2816
  call void @llvm.dbg.declare(metadata [3 x float]** %faceao, metadata !2817, metadata !DIExpression()), !dbg !2818
  call void @llvm.dbg.declare(metadata [3 x float]** %faceenv, metadata !2819, metadata !DIExpression()), !dbg !2820
  call void @llvm.dbg.declare(metadata [3 x float]** %faceindirect, metadata !2821, metadata !DIExpression()), !dbg !2822
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2823, metadata !DIExpression()), !dbg !2824
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2825, metadata !DIExpression()), !dbg !2826
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !2827, metadata !DIExpression()), !dbg !2828
  call void @llvm.dbg.declare(metadata i32** %face, metadata !2829, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.declare(metadata i32** %count, metadata !2831, metadata !DIExpression()), !dbg !2832
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2833
  %1 = bitcast %struct.Render* %0 to i8*, !dbg !2834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.Render* @R to i8*), i8* align 8 %1, i64 6240, i1 false), !dbg !2834
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2835
  %i = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 98, !dbg !2836
  %infostr = getelementptr inbounds %struct.RenderStats, %struct.RenderStats* %i, i32 0, i32 16, !dbg !2837
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8** %infostr, align 8, !dbg !2838
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2839
  %stats_draw = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 90, !dbg !2840
  %4 = load void (i8*, %struct.RenderStats*)*, void (i8*, %struct.RenderStats*)** %stats_draw, align 8, !dbg !2840
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2841
  %sdh = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 91, !dbg !2842
  %6 = load i8*, i8** %sdh, align 8, !dbg !2842
  %7 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2843
  %i1 = getelementptr inbounds %struct.Render, %struct.Render* %7, i32 0, i32 98, !dbg !2844
  call void %4(i8* %6, %struct.RenderStats* %i1), !dbg !2839
  %8 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2845
  %call = call %struct.OcclusionTree* @occ_tree_build(%struct.Render* %8), !dbg !2846
  store %struct.OcclusionTree* %call, %struct.OcclusionTree** %tree, align 8, !dbg !2847
  %9 = bitcast %struct.OcclusionTree* %call to i8*, !dbg !2848
  %10 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2849
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %10, i32 0, i32 56, !dbg !2850
  store i8* %9, i8** %occlusiontree, align 8, !dbg !2851
  %11 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !2852
  %tobool = icmp ne %struct.OcclusionTree* %11, null, !dbg !2852
  br i1 %tobool, label %land.lhs.true, label %if.end248, !dbg !2854

land.lhs.true:                                    ; preds = %entry
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2855
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 96, !dbg !2856
  %13 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !2856
  %14 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2857
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %14, i32 0, i32 97, !dbg !2858
  %15 = load i8*, i8** %tbh, align 8, !dbg !2858
  %call2 = call i32 %13(i8* %15), !dbg !2855
  %tobool3 = icmp ne i32 %call2, 0, !dbg !2855
  br i1 %tobool3, label %if.end248, label %if.then, !dbg !2859

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2860
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %16, i32 0, i32 46, !dbg !2863
  %ao_approx_passes = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 65, !dbg !2864
  %17 = load i16, i16* %ao_approx_passes, align 4, !dbg !2864
  %conv = sext i16 %17 to i32, !dbg !2860
  %cmp = icmp sgt i32 %conv, 0, !dbg !2865
  br i1 %cmp, label %if.then5, label %if.end, !dbg !2866

if.then5:                                         ; preds = %if.then
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2867
  %19 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !2868
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2869
  %wrld6 = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 46, !dbg !2870
  %ao_approx_passes7 = getelementptr inbounds %struct.World, %struct.World* %wrld6, i32 0, i32 65, !dbg !2871
  %21 = load i16, i16* %ao_approx_passes7, align 4, !dbg !2871
  %conv8 = sext i16 %21 to i32, !dbg !2869
  call void @occ_compute_passes(%struct.Render* %18, %struct.OcclusionTree* %19, i32 %conv8), !dbg !2872
  br label %if.end, !dbg !2872

if.end:                                           ; preds = %if.then5, %if.then
  %22 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !2873
  %doindirect = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %22, i32 0, i32 13, !dbg !2875
  %23 = load i32, i32* %doindirect, align 8, !dbg !2875
  %tobool9 = icmp ne i32 %23, 0, !dbg !2873
  br i1 %tobool9, label %land.lhs.true10, label %if.end17, !dbg !2876

land.lhs.true10:                                  ; preds = %if.end
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2877
  %wrld11 = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 46, !dbg !2878
  %mode = getelementptr inbounds %struct.World, %struct.World* %wrld11, i32 0, i32 23, !dbg !2879
  %25 = load i16, i16* %mode, align 2, !dbg !2879
  %conv12 = sext i16 %25 to i32, !dbg !2877
  %and = and i32 %conv12, 128, !dbg !2880
  %tobool13 = icmp ne i32 %and, 0, !dbg !2880
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !2881

if.then14:                                        ; preds = %land.lhs.true10
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2882
  %27 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !2883
  %28 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2884
  %wrld15 = getelementptr inbounds %struct.Render, %struct.Render* %28, i32 0, i32 46, !dbg !2885
  %ao_indirect_bounces = getelementptr inbounds %struct.World, %struct.World* %wrld15, i32 0, i32 61, !dbg !2886
  %29 = load i16, i16* %ao_indirect_bounces, align 4, !dbg !2886
  %conv16 = sext i16 %29 to i32, !dbg !2884
  call void @occ_compute_bounces(%struct.Render* %26, %struct.OcclusionTree* %27, i32 %conv16), !dbg !2887
  br label %if.end17, !dbg !2887

if.end17:                                         ; preds = %if.then14, %land.lhs.true10, %if.end
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2888
  %strandsurface = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 57, !dbg !2890
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %strandsurface, i32 0, i32 0, !dbg !2891
  %31 = load i8*, i8** %first, align 8, !dbg !2891
  %32 = bitcast i8* %31 to %struct.StrandSurface*, !dbg !2888
  store %struct.StrandSurface* %32, %struct.StrandSurface** %mesh, align 8, !dbg !2892
  br label %for.cond, !dbg !2893

for.cond:                                         ; preds = %for.inc246, %if.end17
  %33 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2894
  %tobool18 = icmp ne %struct.StrandSurface* %33, null, !dbg !2896
  br i1 %tobool18, label %for.body, label %for.end247, !dbg !2896

for.body:                                         ; preds = %for.cond
  %34 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2897
  %face19 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %34, i32 0, i32 3, !dbg !2900
  %35 = load [4 x i32]*, [4 x i32]** %face19, align 8, !dbg !2900
  %tobool20 = icmp ne [4 x i32]* %35, null, !dbg !2897
  br i1 %tobool20, label %lor.lhs.false, label %if.then25, !dbg !2901

lor.lhs.false:                                    ; preds = %for.body
  %36 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2902
  %co = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %36, i32 0, i32 4, !dbg !2903
  %37 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !2903
  %tobool21 = icmp ne [3 x float]* %37, null, !dbg !2902
  br i1 %tobool21, label %lor.lhs.false22, label %if.then25, !dbg !2904

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %38 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2905
  %ao23 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %38, i32 0, i32 5, !dbg !2906
  %39 = load [3 x float]*, [3 x float]** %ao23, align 8, !dbg !2906
  %tobool24 = icmp ne [3 x float]* %39, null, !dbg !2905
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !2907

if.then25:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %for.body
  br label %for.inc246, !dbg !2908

if.end26:                                         ; preds = %lor.lhs.false22
  %40 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2909
  %41 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2910
  %totvert = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %41, i32 0, i32 10, !dbg !2911
  %42 = load i32, i32* %totvert, align 8, !dbg !2911
  %conv27 = sext i32 %42 to i64, !dbg !2910
  %mul = mul i64 4, %conv27, !dbg !2912
  %call28 = call i8* %40(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)), !dbg !2909
  %43 = bitcast i8* %call28 to i32*, !dbg !2909
  store i32* %43, i32** %count, align 8, !dbg !2913
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2914
  %45 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2915
  %totface29 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %45, i32 0, i32 11, !dbg !2916
  %46 = load i32, i32* %totface29, align 4, !dbg !2916
  %conv30 = sext i32 %46 to i64, !dbg !2915
  %mul31 = mul i64 12, %conv30, !dbg !2917
  %call32 = call i8* %44(i64 %mul31, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !2914
  %47 = bitcast i8* %call32 to [3 x float]*, !dbg !2914
  store [3 x float]* %47, [3 x float]** %faceao, align 8, !dbg !2918
  %48 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2919
  %49 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2920
  %totface33 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %49, i32 0, i32 11, !dbg !2921
  %50 = load i32, i32* %totface33, align 4, !dbg !2921
  %conv34 = sext i32 %50 to i64, !dbg !2920
  %mul35 = mul i64 12, %conv34, !dbg !2922
  %call36 = call i8* %48(i64 %mul35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0)), !dbg !2919
  %51 = bitcast i8* %call36 to [3 x float]*, !dbg !2919
  store [3 x float]* %51, [3 x float]** %faceenv, align 8, !dbg !2923
  %52 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2924
  %53 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2925
  %totface37 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %53, i32 0, i32 11, !dbg !2926
  %54 = load i32, i32* %totface37, align 4, !dbg !2926
  %conv38 = sext i32 %54 to i64, !dbg !2925
  %mul39 = mul i64 12, %conv38, !dbg !2927
  %call40 = call i8* %52(i64 %mul39, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)), !dbg !2924
  %55 = bitcast i8* %call40 to [3 x float]*, !dbg !2924
  store [3 x float]* %55, [3 x float]** %faceindirect, align 8, !dbg !2928
  %56 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2929
  %totface41 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %56, i32 0, i32 11, !dbg !2930
  %57 = load i32, i32* %totface41, align 4, !dbg !2930
  %cmp42 = icmp sgt i32 %57, 10000, !dbg !2931
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !2932

cond.true:                                        ; preds = %if.end26
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2933
  %r = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 45, !dbg !2934
  %threads44 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 14, !dbg !2935
  %59 = load i16, i16* %threads44, align 2, !dbg !2935
  %conv45 = sext i16 %59 to i32, !dbg !2933
  br label %cond.end, !dbg !2932

cond.false:                                       ; preds = %if.end26
  br label %cond.end, !dbg !2932

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv45, %cond.true ], [ 1, %cond.false ], !dbg !2932
  store i32 %cond, i32* %totthread, align 4, !dbg !2936
  %60 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2937
  %totface46 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %60, i32 0, i32 11, !dbg !2938
  %61 = load i32, i32* %totface46, align 4, !dbg !2938
  %62 = load i32, i32* %totthread, align 4, !dbg !2939
  %div = sdiv i32 %61, %62, !dbg !2940
  store i32 %div, i32* %totface, align 4, !dbg !2941
  store i32 0, i32* %a, align 4, !dbg !2942
  br label %for.cond47, !dbg !2944

for.cond47:                                       ; preds = %for.inc, %cond.end
  %63 = load i32, i32* %a, align 4, !dbg !2945
  %64 = load i32, i32* %totthread, align 4, !dbg !2947
  %cmp48 = icmp slt i32 %63, %64, !dbg !2948
  br i1 %cmp48, label %for.body50, label %for.end, !dbg !2949

for.body50:                                       ; preds = %for.cond47
  %65 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !2950
  %66 = load i32, i32* %a, align 4, !dbg !2952
  %idxprom = sext i32 %66 to i64, !dbg !2953
  %arrayidx = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom, !dbg !2953
  %re51 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx, i32 0, i32 0, !dbg !2954
  store %struct.Render* %65, %struct.Render** %re51, align 8, !dbg !2955
  %67 = load [3 x float]*, [3 x float]** %faceao, align 8, !dbg !2956
  %68 = load i32, i32* %a, align 4, !dbg !2957
  %idxprom52 = sext i32 %68 to i64, !dbg !2958
  %arrayidx53 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom52, !dbg !2958
  %faceao54 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx53, i32 0, i32 2, !dbg !2959
  store [3 x float]* %67, [3 x float]** %faceao54, align 8, !dbg !2960
  %69 = load [3 x float]*, [3 x float]** %faceenv, align 8, !dbg !2961
  %70 = load i32, i32* %a, align 4, !dbg !2962
  %idxprom55 = sext i32 %70 to i64, !dbg !2963
  %arrayidx56 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom55, !dbg !2963
  %faceenv57 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx56, i32 0, i32 3, !dbg !2964
  store [3 x float]* %69, [3 x float]** %faceenv57, align 8, !dbg !2965
  %71 = load [3 x float]*, [3 x float]** %faceindirect, align 8, !dbg !2966
  %72 = load i32, i32* %a, align 4, !dbg !2967
  %idxprom58 = sext i32 %72 to i64, !dbg !2968
  %arrayidx59 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom58, !dbg !2968
  %faceindirect60 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx59, i32 0, i32 4, !dbg !2969
  store [3 x float]* %71, [3 x float]** %faceindirect60, align 8, !dbg !2970
  %73 = load i32, i32* %a, align 4, !dbg !2971
  %74 = load i32, i32* %a, align 4, !dbg !2972
  %idxprom61 = sext i32 %74 to i64, !dbg !2973
  %arrayidx62 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom61, !dbg !2973
  %thread = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx62, i32 0, i32 7, !dbg !2974
  store i32 %73, i32* %thread, align 8, !dbg !2975
  %75 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2976
  %76 = load i32, i32* %a, align 4, !dbg !2977
  %idxprom63 = sext i32 %76 to i64, !dbg !2978
  %arrayidx64 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom63, !dbg !2978
  %mesh65 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx64, i32 0, i32 1, !dbg !2979
  store %struct.StrandSurface* %75, %struct.StrandSurface** %mesh65, align 8, !dbg !2980
  %77 = load i32, i32* %a, align 4, !dbg !2981
  %78 = load i32, i32* %totface, align 4, !dbg !2982
  %mul66 = mul nsw i32 %77, %78, !dbg !2983
  %79 = load i32, i32* %a, align 4, !dbg !2984
  %idxprom67 = sext i32 %79 to i64, !dbg !2985
  %arrayidx68 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom67, !dbg !2985
  %begin = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx68, i32 0, i32 5, !dbg !2986
  store i32 %mul66, i32* %begin, align 8, !dbg !2987
  %80 = load i32, i32* %a, align 4, !dbg !2988
  %81 = load i32, i32* %totthread, align 4, !dbg !2989
  %sub = sub nsw i32 %81, 1, !dbg !2990
  %cmp69 = icmp eq i32 %80, %sub, !dbg !2991
  br i1 %cmp69, label %cond.true71, label %cond.false73, !dbg !2992

cond.true71:                                      ; preds = %for.body50
  %82 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !2993
  %totface72 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %82, i32 0, i32 11, !dbg !2994
  %83 = load i32, i32* %totface72, align 4, !dbg !2994
  br label %cond.end75, !dbg !2992

cond.false73:                                     ; preds = %for.body50
  %84 = load i32, i32* %a, align 4, !dbg !2995
  %add = add nsw i32 %84, 1, !dbg !2996
  %85 = load i32, i32* %totface, align 4, !dbg !2997
  %mul74 = mul nsw i32 %add, %85, !dbg !2998
  br label %cond.end75, !dbg !2992

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i32 [ %83, %cond.true71 ], [ %mul74, %cond.false73 ], !dbg !2992
  %86 = load i32, i32* %a, align 4, !dbg !2999
  %idxprom77 = sext i32 %86 to i64, !dbg !3000
  %arrayidx78 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom77, !dbg !3000
  %end = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %arrayidx78, i32 0, i32 6, !dbg !3001
  store i32 %cond76, i32* %end, align 4, !dbg !3002
  br label %for.inc, !dbg !3003

for.inc:                                          ; preds = %cond.end75
  %87 = load i32, i32* %a, align 4, !dbg !3004
  %inc = add nsw i32 %87, 1, !dbg !3004
  store i32 %inc, i32* %a, align 4, !dbg !3004
  br label %for.cond47, !dbg !3005, !llvm.loop !3006

for.end:                                          ; preds = %for.cond47
  %88 = load i32, i32* %totthread, align 4, !dbg !3008
  %cmp79 = icmp eq i32 %88, 1, !dbg !3010
  br i1 %cmp79, label %if.then81, label %if.else, !dbg !3011

if.then81:                                        ; preds = %for.end
  %arrayidx82 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 0, !dbg !3012
  %89 = bitcast %struct.OcclusionThread* %arrayidx82 to i8*, !dbg !3014
  %call83 = call i8* @exec_strandsurface_sample(i8* %89), !dbg !3015
  br label %if.end93, !dbg !3016

if.else:                                          ; preds = %for.end
  %90 = load i32, i32* %totthread, align 4, !dbg !3017
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @exec_strandsurface_sample, i32 %90), !dbg !3019
  store i32 0, i32* %a, align 4, !dbg !3020
  br label %for.cond84, !dbg !3022

for.cond84:                                       ; preds = %for.inc90, %if.else
  %91 = load i32, i32* %a, align 4, !dbg !3023
  %92 = load i32, i32* %totthread, align 4, !dbg !3025
  %cmp85 = icmp slt i32 %91, %92, !dbg !3026
  br i1 %cmp85, label %for.body87, label %for.end92, !dbg !3027

for.body87:                                       ; preds = %for.cond84
  %93 = load i32, i32* %a, align 4, !dbg !3028
  %idxprom88 = sext i32 %93 to i64, !dbg !3029
  %arrayidx89 = getelementptr inbounds [1 x %struct.OcclusionThread], [1 x %struct.OcclusionThread]* %othreads, i64 0, i64 %idxprom88, !dbg !3029
  %94 = bitcast %struct.OcclusionThread* %arrayidx89 to i8*, !dbg !3030
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %94), !dbg !3031
  br label %for.inc90, !dbg !3031

for.inc90:                                        ; preds = %for.body87
  %95 = load i32, i32* %a, align 4, !dbg !3032
  %inc91 = add nsw i32 %95, 1, !dbg !3032
  store i32 %inc91, i32* %a, align 4, !dbg !3032
  br label %for.cond84, !dbg !3033, !llvm.loop !3034

for.end92:                                        ; preds = %for.cond84
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !3036
  br label %if.end93

if.end93:                                         ; preds = %for.end92, %if.then81
  store i32 0, i32* %a, align 4, !dbg !3037
  br label %for.cond94, !dbg !3039

for.cond94:                                       ; preds = %for.inc206, %if.end93
  %96 = load i32, i32* %a, align 4, !dbg !3040
  %97 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3042
  %totface95 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %97, i32 0, i32 11, !dbg !3043
  %98 = load i32, i32* %totface95, align 4, !dbg !3043
  %cmp96 = icmp slt i32 %96, %98, !dbg !3044
  br i1 %cmp96, label %for.body98, label %for.end208, !dbg !3045

for.body98:                                       ; preds = %for.cond94
  %99 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3046
  %face99 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %99, i32 0, i32 3, !dbg !3048
  %100 = load [4 x i32]*, [4 x i32]** %face99, align 8, !dbg !3048
  %101 = load i32, i32* %a, align 4, !dbg !3049
  %idxprom100 = sext i32 %101 to i64, !dbg !3046
  %arrayidx101 = getelementptr inbounds [4 x i32], [4 x i32]* %100, i64 %idxprom100, !dbg !3046
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 0, !dbg !3046
  store i32* %arraydecay, i32** %face, align 8, !dbg !3050
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3051
  %102 = load [3 x float]*, [3 x float]** %faceao, align 8, !dbg !3052
  %103 = load i32, i32* %a, align 4, !dbg !3053
  %idxprom103 = sext i32 %103 to i64, !dbg !3052
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %102, i64 %idxprom103, !dbg !3052
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx104, i64 0, i64 0, !dbg !3052
  call void @copy_v3_v3(float* %arraydecay102, float* %arraydecay105), !dbg !3054
  %arraydecay106 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3055
  %104 = load [3 x float]*, [3 x float]** %faceenv, align 8, !dbg !3056
  %105 = load i32, i32* %a, align 4, !dbg !3057
  %idxprom107 = sext i32 %105 to i64, !dbg !3056
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %104, i64 %idxprom107, !dbg !3056
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx108, i64 0, i64 0, !dbg !3056
  call void @copy_v3_v3(float* %arraydecay106, float* %arraydecay109), !dbg !3058
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3059
  %106 = load [3 x float]*, [3 x float]** %faceindirect, align 8, !dbg !3060
  %107 = load i32, i32* %a, align 4, !dbg !3061
  %idxprom111 = sext i32 %107 to i64, !dbg !3060
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %106, i64 %idxprom111, !dbg !3060
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 0, !dbg !3060
  call void @copy_v3_v3(float* %arraydecay110, float* %arraydecay113), !dbg !3062
  %108 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3063
  %ao114 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %108, i32 0, i32 5, !dbg !3064
  %109 = load [3 x float]*, [3 x float]** %ao114, align 8, !dbg !3064
  %110 = load i32*, i32** %face, align 8, !dbg !3065
  %arrayidx115 = getelementptr inbounds i32, i32* %110, i64 0, !dbg !3065
  %111 = load i32, i32* %arrayidx115, align 4, !dbg !3065
  %idxprom116 = sext i32 %111 to i64, !dbg !3063
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %109, i64 %idxprom116, !dbg !3063
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx117, i64 0, i64 0, !dbg !3063
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3066
  call void @add_v3_v3(float* %arraydecay118, float* %arraydecay119), !dbg !3067
  %112 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3068
  %env120 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %112, i32 0, i32 6, !dbg !3069
  %113 = load [3 x float]*, [3 x float]** %env120, align 8, !dbg !3069
  %114 = load i32*, i32** %face, align 8, !dbg !3070
  %arrayidx121 = getelementptr inbounds i32, i32* %114, i64 0, !dbg !3070
  %115 = load i32, i32* %arrayidx121, align 4, !dbg !3070
  %idxprom122 = sext i32 %115 to i64, !dbg !3068
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %113, i64 %idxprom122, !dbg !3068
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx123, i64 0, i64 0, !dbg !3068
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3071
  call void @add_v3_v3(float* %arraydecay124, float* %arraydecay125), !dbg !3072
  %116 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3073
  %indirect126 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %116, i32 0, i32 7, !dbg !3074
  %117 = load [3 x float]*, [3 x float]** %indirect126, align 8, !dbg !3074
  %118 = load i32*, i32** %face, align 8, !dbg !3075
  %arrayidx127 = getelementptr inbounds i32, i32* %118, i64 0, !dbg !3075
  %119 = load i32, i32* %arrayidx127, align 4, !dbg !3075
  %idxprom128 = sext i32 %119 to i64, !dbg !3073
  %arrayidx129 = getelementptr inbounds [3 x float], [3 x float]* %117, i64 %idxprom128, !dbg !3073
  %arraydecay130 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx129, i64 0, i64 0, !dbg !3073
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3076
  call void @add_v3_v3(float* %arraydecay130, float* %arraydecay131), !dbg !3077
  %120 = load i32*, i32** %count, align 8, !dbg !3078
  %121 = load i32*, i32** %face, align 8, !dbg !3079
  %arrayidx132 = getelementptr inbounds i32, i32* %121, i64 0, !dbg !3079
  %122 = load i32, i32* %arrayidx132, align 4, !dbg !3079
  %idxprom133 = sext i32 %122 to i64, !dbg !3078
  %arrayidx134 = getelementptr inbounds i32, i32* %120, i64 %idxprom133, !dbg !3078
  %123 = load i32, i32* %arrayidx134, align 4, !dbg !3080
  %inc135 = add nsw i32 %123, 1, !dbg !3080
  store i32 %inc135, i32* %arrayidx134, align 4, !dbg !3080
  %124 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3081
  %ao136 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %124, i32 0, i32 5, !dbg !3082
  %125 = load [3 x float]*, [3 x float]** %ao136, align 8, !dbg !3082
  %126 = load i32*, i32** %face, align 8, !dbg !3083
  %arrayidx137 = getelementptr inbounds i32, i32* %126, i64 1, !dbg !3083
  %127 = load i32, i32* %arrayidx137, align 4, !dbg !3083
  %idxprom138 = sext i32 %127 to i64, !dbg !3081
  %arrayidx139 = getelementptr inbounds [3 x float], [3 x float]* %125, i64 %idxprom138, !dbg !3081
  %arraydecay140 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx139, i64 0, i64 0, !dbg !3081
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3084
  call void @add_v3_v3(float* %arraydecay140, float* %arraydecay141), !dbg !3085
  %128 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3086
  %env142 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %128, i32 0, i32 6, !dbg !3087
  %129 = load [3 x float]*, [3 x float]** %env142, align 8, !dbg !3087
  %130 = load i32*, i32** %face, align 8, !dbg !3088
  %arrayidx143 = getelementptr inbounds i32, i32* %130, i64 1, !dbg !3088
  %131 = load i32, i32* %arrayidx143, align 4, !dbg !3088
  %idxprom144 = sext i32 %131 to i64, !dbg !3086
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %129, i64 %idxprom144, !dbg !3086
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx145, i64 0, i64 0, !dbg !3086
  %arraydecay147 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3089
  call void @add_v3_v3(float* %arraydecay146, float* %arraydecay147), !dbg !3090
  %132 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3091
  %indirect148 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %132, i32 0, i32 7, !dbg !3092
  %133 = load [3 x float]*, [3 x float]** %indirect148, align 8, !dbg !3092
  %134 = load i32*, i32** %face, align 8, !dbg !3093
  %arrayidx149 = getelementptr inbounds i32, i32* %134, i64 1, !dbg !3093
  %135 = load i32, i32* %arrayidx149, align 4, !dbg !3093
  %idxprom150 = sext i32 %135 to i64, !dbg !3091
  %arrayidx151 = getelementptr inbounds [3 x float], [3 x float]* %133, i64 %idxprom150, !dbg !3091
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx151, i64 0, i64 0, !dbg !3091
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3094
  call void @add_v3_v3(float* %arraydecay152, float* %arraydecay153), !dbg !3095
  %136 = load i32*, i32** %count, align 8, !dbg !3096
  %137 = load i32*, i32** %face, align 8, !dbg !3097
  %arrayidx154 = getelementptr inbounds i32, i32* %137, i64 1, !dbg !3097
  %138 = load i32, i32* %arrayidx154, align 4, !dbg !3097
  %idxprom155 = sext i32 %138 to i64, !dbg !3096
  %arrayidx156 = getelementptr inbounds i32, i32* %136, i64 %idxprom155, !dbg !3096
  %139 = load i32, i32* %arrayidx156, align 4, !dbg !3098
  %inc157 = add nsw i32 %139, 1, !dbg !3098
  store i32 %inc157, i32* %arrayidx156, align 4, !dbg !3098
  %140 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3099
  %ao158 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %140, i32 0, i32 5, !dbg !3100
  %141 = load [3 x float]*, [3 x float]** %ao158, align 8, !dbg !3100
  %142 = load i32*, i32** %face, align 8, !dbg !3101
  %arrayidx159 = getelementptr inbounds i32, i32* %142, i64 2, !dbg !3101
  %143 = load i32, i32* %arrayidx159, align 4, !dbg !3101
  %idxprom160 = sext i32 %143 to i64, !dbg !3099
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %141, i64 %idxprom160, !dbg !3099
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !3099
  %arraydecay163 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3102
  call void @add_v3_v3(float* %arraydecay162, float* %arraydecay163), !dbg !3103
  %144 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3104
  %env164 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %144, i32 0, i32 6, !dbg !3105
  %145 = load [3 x float]*, [3 x float]** %env164, align 8, !dbg !3105
  %146 = load i32*, i32** %face, align 8, !dbg !3106
  %arrayidx165 = getelementptr inbounds i32, i32* %146, i64 2, !dbg !3106
  %147 = load i32, i32* %arrayidx165, align 4, !dbg !3106
  %idxprom166 = sext i32 %147 to i64, !dbg !3104
  %arrayidx167 = getelementptr inbounds [3 x float], [3 x float]* %145, i64 %idxprom166, !dbg !3104
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx167, i64 0, i64 0, !dbg !3104
  %arraydecay169 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3107
  call void @add_v3_v3(float* %arraydecay168, float* %arraydecay169), !dbg !3108
  %148 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3109
  %indirect170 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %148, i32 0, i32 7, !dbg !3110
  %149 = load [3 x float]*, [3 x float]** %indirect170, align 8, !dbg !3110
  %150 = load i32*, i32** %face, align 8, !dbg !3111
  %arrayidx171 = getelementptr inbounds i32, i32* %150, i64 2, !dbg !3111
  %151 = load i32, i32* %arrayidx171, align 4, !dbg !3111
  %idxprom172 = sext i32 %151 to i64, !dbg !3109
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %149, i64 %idxprom172, !dbg !3109
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 0, !dbg !3109
  %arraydecay175 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3112
  call void @add_v3_v3(float* %arraydecay174, float* %arraydecay175), !dbg !3113
  %152 = load i32*, i32** %count, align 8, !dbg !3114
  %153 = load i32*, i32** %face, align 8, !dbg !3115
  %arrayidx176 = getelementptr inbounds i32, i32* %153, i64 2, !dbg !3115
  %154 = load i32, i32* %arrayidx176, align 4, !dbg !3115
  %idxprom177 = sext i32 %154 to i64, !dbg !3114
  %arrayidx178 = getelementptr inbounds i32, i32* %152, i64 %idxprom177, !dbg !3114
  %155 = load i32, i32* %arrayidx178, align 4, !dbg !3116
  %inc179 = add nsw i32 %155, 1, !dbg !3116
  store i32 %inc179, i32* %arrayidx178, align 4, !dbg !3116
  %156 = load i32*, i32** %face, align 8, !dbg !3117
  %arrayidx180 = getelementptr inbounds i32, i32* %156, i64 3, !dbg !3117
  %157 = load i32, i32* %arrayidx180, align 4, !dbg !3117
  %tobool181 = icmp ne i32 %157, 0, !dbg !3117
  br i1 %tobool181, label %if.then182, label %if.end205, !dbg !3119

if.then182:                                       ; preds = %for.body98
  %158 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3120
  %ao183 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %158, i32 0, i32 5, !dbg !3122
  %159 = load [3 x float]*, [3 x float]** %ao183, align 8, !dbg !3122
  %160 = load i32*, i32** %face, align 8, !dbg !3123
  %arrayidx184 = getelementptr inbounds i32, i32* %160, i64 3, !dbg !3123
  %161 = load i32, i32* %arrayidx184, align 4, !dbg !3123
  %idxprom185 = sext i32 %161 to i64, !dbg !3120
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %159, i64 %idxprom185, !dbg !3120
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx186, i64 0, i64 0, !dbg !3120
  %arraydecay188 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3124
  call void @add_v3_v3(float* %arraydecay187, float* %arraydecay188), !dbg !3125
  %162 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3126
  %env189 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %162, i32 0, i32 6, !dbg !3127
  %163 = load [3 x float]*, [3 x float]** %env189, align 8, !dbg !3127
  %164 = load i32*, i32** %face, align 8, !dbg !3128
  %arrayidx190 = getelementptr inbounds i32, i32* %164, i64 3, !dbg !3128
  %165 = load i32, i32* %arrayidx190, align 4, !dbg !3128
  %idxprom191 = sext i32 %165 to i64, !dbg !3126
  %arrayidx192 = getelementptr inbounds [3 x float], [3 x float]* %163, i64 %idxprom191, !dbg !3126
  %arraydecay193 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx192, i64 0, i64 0, !dbg !3126
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3129
  call void @add_v3_v3(float* %arraydecay193, float* %arraydecay194), !dbg !3130
  %166 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3131
  %indirect195 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %166, i32 0, i32 7, !dbg !3132
  %167 = load [3 x float]*, [3 x float]** %indirect195, align 8, !dbg !3132
  %168 = load i32*, i32** %face, align 8, !dbg !3133
  %arrayidx196 = getelementptr inbounds i32, i32* %168, i64 3, !dbg !3133
  %169 = load i32, i32* %arrayidx196, align 4, !dbg !3133
  %idxprom197 = sext i32 %169 to i64, !dbg !3131
  %arrayidx198 = getelementptr inbounds [3 x float], [3 x float]* %167, i64 %idxprom197, !dbg !3131
  %arraydecay199 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx198, i64 0, i64 0, !dbg !3131
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3134
  call void @add_v3_v3(float* %arraydecay199, float* %arraydecay200), !dbg !3135
  %170 = load i32*, i32** %count, align 8, !dbg !3136
  %171 = load i32*, i32** %face, align 8, !dbg !3137
  %arrayidx201 = getelementptr inbounds i32, i32* %171, i64 3, !dbg !3137
  %172 = load i32, i32* %arrayidx201, align 4, !dbg !3137
  %idxprom202 = sext i32 %172 to i64, !dbg !3136
  %arrayidx203 = getelementptr inbounds i32, i32* %170, i64 %idxprom202, !dbg !3136
  %173 = load i32, i32* %arrayidx203, align 4, !dbg !3138
  %inc204 = add nsw i32 %173, 1, !dbg !3138
  store i32 %inc204, i32* %arrayidx203, align 4, !dbg !3138
  br label %if.end205, !dbg !3139

if.end205:                                        ; preds = %if.then182, %for.body98
  br label %for.inc206, !dbg !3140

for.inc206:                                       ; preds = %if.end205
  %174 = load i32, i32* %a, align 4, !dbg !3141
  %inc207 = add nsw i32 %174, 1, !dbg !3141
  store i32 %inc207, i32* %a, align 4, !dbg !3141
  br label %for.cond94, !dbg !3142, !llvm.loop !3143

for.end208:                                       ; preds = %for.cond94
  store i32 0, i32* %a, align 4, !dbg !3145
  br label %for.cond209, !dbg !3147

for.cond209:                                      ; preds = %for.inc243, %for.end208
  %175 = load i32, i32* %a, align 4, !dbg !3148
  %176 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3150
  %totvert210 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %176, i32 0, i32 10, !dbg !3151
  %177 = load i32, i32* %totvert210, align 8, !dbg !3151
  %cmp211 = icmp slt i32 %175, %177, !dbg !3152
  br i1 %cmp211, label %for.body213, label %for.end245, !dbg !3153

for.body213:                                      ; preds = %for.cond209
  %178 = load i32*, i32** %count, align 8, !dbg !3154
  %179 = load i32, i32* %a, align 4, !dbg !3157
  %idxprom214 = sext i32 %179 to i64, !dbg !3154
  %arrayidx215 = getelementptr inbounds i32, i32* %178, i64 %idxprom214, !dbg !3154
  %180 = load i32, i32* %arrayidx215, align 4, !dbg !3154
  %tobool216 = icmp ne i32 %180, 0, !dbg !3154
  br i1 %tobool216, label %if.then217, label %if.end242, !dbg !3158

if.then217:                                       ; preds = %for.body213
  %181 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3159
  %ao218 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %181, i32 0, i32 5, !dbg !3161
  %182 = load [3 x float]*, [3 x float]** %ao218, align 8, !dbg !3161
  %183 = load i32, i32* %a, align 4, !dbg !3162
  %idxprom219 = sext i32 %183 to i64, !dbg !3159
  %arrayidx220 = getelementptr inbounds [3 x float], [3 x float]* %182, i64 %idxprom219, !dbg !3159
  %arraydecay221 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx220, i64 0, i64 0, !dbg !3159
  %184 = load i32*, i32** %count, align 8, !dbg !3163
  %185 = load i32, i32* %a, align 4, !dbg !3164
  %idxprom222 = sext i32 %185 to i64, !dbg !3163
  %arrayidx223 = getelementptr inbounds i32, i32* %184, i64 %idxprom222, !dbg !3163
  %186 = load i32, i32* %arrayidx223, align 4, !dbg !3163
  %conv224 = sitofp i32 %186 to float, !dbg !3163
  %div225 = fdiv float 1.000000e+00, %conv224, !dbg !3165
  call void @mul_v3_fl(float* %arraydecay221, float %div225), !dbg !3166
  %187 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3167
  %env226 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %187, i32 0, i32 6, !dbg !3168
  %188 = load [3 x float]*, [3 x float]** %env226, align 8, !dbg !3168
  %189 = load i32, i32* %a, align 4, !dbg !3169
  %idxprom227 = sext i32 %189 to i64, !dbg !3167
  %arrayidx228 = getelementptr inbounds [3 x float], [3 x float]* %188, i64 %idxprom227, !dbg !3167
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx228, i64 0, i64 0, !dbg !3167
  %190 = load i32*, i32** %count, align 8, !dbg !3170
  %191 = load i32, i32* %a, align 4, !dbg !3171
  %idxprom230 = sext i32 %191 to i64, !dbg !3170
  %arrayidx231 = getelementptr inbounds i32, i32* %190, i64 %idxprom230, !dbg !3170
  %192 = load i32, i32* %arrayidx231, align 4, !dbg !3170
  %conv232 = sitofp i32 %192 to float, !dbg !3170
  %div233 = fdiv float 1.000000e+00, %conv232, !dbg !3172
  call void @mul_v3_fl(float* %arraydecay229, float %div233), !dbg !3173
  %193 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3174
  %indirect234 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %193, i32 0, i32 7, !dbg !3175
  %194 = load [3 x float]*, [3 x float]** %indirect234, align 8, !dbg !3175
  %195 = load i32, i32* %a, align 4, !dbg !3176
  %idxprom235 = sext i32 %195 to i64, !dbg !3174
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %194, i64 %idxprom235, !dbg !3174
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx236, i64 0, i64 0, !dbg !3174
  %196 = load i32*, i32** %count, align 8, !dbg !3177
  %197 = load i32, i32* %a, align 4, !dbg !3178
  %idxprom238 = sext i32 %197 to i64, !dbg !3177
  %arrayidx239 = getelementptr inbounds i32, i32* %196, i64 %idxprom238, !dbg !3177
  %198 = load i32, i32* %arrayidx239, align 4, !dbg !3177
  %conv240 = sitofp i32 %198 to float, !dbg !3177
  %div241 = fdiv float 1.000000e+00, %conv240, !dbg !3179
  call void @mul_v3_fl(float* %arraydecay237, float %div241), !dbg !3180
  br label %if.end242, !dbg !3181

if.end242:                                        ; preds = %if.then217, %for.body213
  br label %for.inc243, !dbg !3182

for.inc243:                                       ; preds = %if.end242
  %199 = load i32, i32* %a, align 4, !dbg !3183
  %inc244 = add nsw i32 %199, 1, !dbg !3183
  store i32 %inc244, i32* %a, align 4, !dbg !3183
  br label %for.cond209, !dbg !3184, !llvm.loop !3185

for.end245:                                       ; preds = %for.cond209
  %200 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3187
  %201 = load i32*, i32** %count, align 8, !dbg !3188
  %202 = bitcast i32* %201 to i8*, !dbg !3188
  call void %200(i8* %202), !dbg !3187
  %203 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3189
  %204 = load [3 x float]*, [3 x float]** %faceao, align 8, !dbg !3190
  %205 = bitcast [3 x float]* %204 to i8*, !dbg !3190
  call void %203(i8* %205), !dbg !3189
  %206 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3191
  %207 = load [3 x float]*, [3 x float]** %faceenv, align 8, !dbg !3192
  %208 = bitcast [3 x float]* %207 to i8*, !dbg !3192
  call void %206(i8* %208), !dbg !3191
  %209 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3193
  %210 = load [3 x float]*, [3 x float]** %faceindirect, align 8, !dbg !3194
  %211 = bitcast [3 x float]* %210 to i8*, !dbg !3194
  call void %209(i8* %211), !dbg !3193
  br label %for.inc246, !dbg !3195

for.inc246:                                       ; preds = %for.end245, %if.then25
  %212 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3196
  %next = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %212, i32 0, i32 0, !dbg !3197
  %213 = load %struct.StrandSurface*, %struct.StrandSurface** %next, align 8, !dbg !3197
  store %struct.StrandSurface* %213, %struct.StrandSurface** %mesh, align 8, !dbg !3198
  br label %for.cond, !dbg !3199, !llvm.loop !3200

for.end247:                                       ; preds = %for.cond
  br label %if.end248, !dbg !3202

if.end248:                                        ; preds = %for.end247, %land.lhs.true, %entry
  ret void, !dbg !3203
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.OcclusionTree* @occ_tree_build(%struct.Render* %re) #0 !dbg !3204 {
entry:
  %retval = alloca %struct.OcclusionTree*, align 8
  %re.addr = alloca %struct.Render*, align 8
  %tree = alloca %struct.OcclusionTree*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %obr = alloca %struct.ObjectRen*, align 8
  %ma = alloca %struct.Material*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %totface = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3207, metadata !DIExpression()), !dbg !3208
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree, metadata !3209, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !3211, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.declare(metadata %struct.ObjectRen** %obr, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.Material** %ma, metadata !3217, metadata !DIExpression()), !dbg !3220
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !3221, metadata !DIExpression()), !dbg !3224
  store %struct.VlakRen* null, %struct.VlakRen** %vlr, align 8, !dbg !3224
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3225, metadata !DIExpression()), !dbg !3226
  call void @llvm.dbg.declare(metadata i32* %b, metadata !3227, metadata !DIExpression()), !dbg !3228
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3229, metadata !DIExpression()), !dbg !3230
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !3231, metadata !DIExpression()), !dbg !3232
  store i32 0, i32* %totface, align 4, !dbg !3233
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3234
  %instancetable = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 70, !dbg !3236
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable, i32 0, i32 0, !dbg !3237
  %1 = load i8*, i8** %first, align 8, !dbg !3237
  %2 = bitcast i8* %1 to %struct.ObjectInstanceRen*, !dbg !3234
  store %struct.ObjectInstanceRen* %2, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3238
  br label %for.cond, !dbg !3239

for.cond:                                         ; preds = %for.inc13, %entry
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3240
  %tobool = icmp ne %struct.ObjectInstanceRen* %3, null, !dbg !3242
  br i1 %tobool, label %for.body, label %for.end14, !dbg !3242

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3243
  %obr1 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %4, i32 0, i32 2, !dbg !3245
  %5 = load %struct.ObjectRen*, %struct.ObjectRen** %obr1, align 8, !dbg !3245
  store %struct.ObjectRen* %5, %struct.ObjectRen** %obr, align 8, !dbg !3246
  store i32 0, i32* %a, align 4, !dbg !3247
  br label %for.cond2, !dbg !3249

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %a, align 4, !dbg !3250
  %7 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3252
  %totvlak = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %7, i32 0, i32 11, !dbg !3253
  %8 = load i32, i32* %totvlak, align 4, !dbg !3253
  %cmp = icmp slt i32 %6, %8, !dbg !3254
  br i1 %cmp, label %for.body3, label %for.end, !dbg !3255

for.body3:                                        ; preds = %for.cond2
  %9 = load i32, i32* %a, align 4, !dbg !3256
  %and = and i32 %9, 255, !dbg !3259
  %cmp4 = icmp eq i32 %and, 0, !dbg !3260
  br i1 %cmp4, label %if.then, label %if.else, !dbg !3261

if.then:                                          ; preds = %for.body3
  %10 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3262
  %vlaknodes = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %10, i32 0, i32 19, !dbg !3263
  %11 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes, align 8, !dbg !3263
  %12 = load i32, i32* %a, align 4, !dbg !3264
  %shr = ashr i32 %12, 8, !dbg !3265
  %idxprom = sext i32 %shr to i64, !dbg !3262
  %arrayidx = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %11, i64 %idxprom, !dbg !3262
  %vlak = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx, i32 0, i32 0, !dbg !3266
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlak, align 8, !dbg !3266
  store %struct.VlakRen* %13, %struct.VlakRen** %vlr, align 8, !dbg !3267
  br label %if.end, !dbg !3268

if.else:                                          ; preds = %for.body3
  %14 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3269
  %incdec.ptr = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %14, i32 1, !dbg !3269
  store %struct.VlakRen* %incdec.ptr, %struct.VlakRen** %vlr, align 8, !dbg !3269
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3270
  %mat = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %15, i32 0, i32 5, !dbg !3271
  %16 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !3271
  store %struct.Material* %16, %struct.Material** %ma, align 8, !dbg !3272
  %17 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3273
  %shade_flag = getelementptr inbounds %struct.Material, %struct.Material* %17, i32 0, i32 50, !dbg !3275
  %18 = load i16, i16* %shade_flag, align 2, !dbg !3275
  %conv = sext i16 %18 to i32, !dbg !3273
  %and5 = and i32 %conv, 4, !dbg !3276
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3276
  br i1 %tobool6, label %land.lhs.true, label %if.end11, !dbg !3277

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3278
  %material_type = getelementptr inbounds %struct.Material, %struct.Material* %19, i32 0, i32 2, !dbg !3279
  %20 = load i16, i16* %material_type, align 8, !dbg !3279
  %conv7 = sext i16 %20 to i32, !dbg !3278
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !3280
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !3281

if.then10:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* %totface, align 4, !dbg !3282
  %inc = add nsw i32 %21, 1, !dbg !3282
  store i32 %inc, i32* %totface, align 4, !dbg !3282
  br label %if.end11, !dbg !3283

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %for.inc, !dbg !3284

for.inc:                                          ; preds = %if.end11
  %22 = load i32, i32* %a, align 4, !dbg !3285
  %inc12 = add nsw i32 %22, 1, !dbg !3285
  store i32 %inc12, i32* %a, align 4, !dbg !3285
  br label %for.cond2, !dbg !3286, !llvm.loop !3287

for.end:                                          ; preds = %for.cond2
  br label %for.inc13, !dbg !3289

for.inc13:                                        ; preds = %for.end
  %23 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3290
  %next = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %23, i32 0, i32 0, !dbg !3291
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next, align 8, !dbg !3291
  store %struct.ObjectInstanceRen* %24, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3292
  br label %for.cond, !dbg !3293, !llvm.loop !3294

for.end14:                                        ; preds = %for.cond
  %25 = load i32, i32* %totface, align 4, !dbg !3296
  %cmp15 = icmp eq i32 %25, 0, !dbg !3298
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !3299

if.then17:                                        ; preds = %for.end14
  store %struct.OcclusionTree* null, %struct.OcclusionTree** %retval, align 8, !dbg !3300
  br label %return, !dbg !3300

if.end18:                                         ; preds = %for.end14
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3301
  %call = call i8* %26(i64 96, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)), !dbg !3301
  %27 = bitcast i8* %call to %struct.OcclusionTree*, !dbg !3301
  store %struct.OcclusionTree* %27, %struct.OcclusionTree** %tree, align 8, !dbg !3302
  %28 = load i32, i32* %totface, align 4, !dbg !3303
  %29 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3304
  %totface19 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %29, i32 0, i32 8, !dbg !3305
  store i32 %28, i32* %totface19, align 4, !dbg !3306
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3307
  %r = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 45, !dbg !3308
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3309
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %31, i32 0, i32 46, !dbg !3310
  %ao_approx_error = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 56, !dbg !3311
  %32 = load float, float* %ao_approx_error, align 8, !dbg !3311
  %call20 = call float @get_render_aosss_error(%struct.RenderData* %r, float %32), !dbg !3312
  %33 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3313
  %error = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %33, i32 0, i32 9, !dbg !3314
  store float %call20, float* %error, align 8, !dbg !3315
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3316
  %wrld21 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 46, !dbg !3317
  %aomode = getelementptr inbounds %struct.World, %struct.World* %wrld21, i32 0, i32 50, !dbg !3318
  %35 = load i16, i16* %aomode, align 8, !dbg !3318
  %conv22 = sext i16 %35 to i32, !dbg !3316
  %and23 = and i32 %conv22, 1, !dbg !3319
  %tobool24 = icmp ne i32 %and23, 0, !dbg !3319
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !3320

cond.true:                                        ; preds = %if.end18
  %36 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3321
  %wrld25 = getelementptr inbounds %struct.Render, %struct.Render* %36, i32 0, i32 46, !dbg !3322
  %aodistfac = getelementptr inbounds %struct.World, %struct.World* %wrld25, i32 0, i32 47, !dbg !3323
  %37 = load float, float* %aodistfac, align 4, !dbg !3323
  br label %cond.end, !dbg !3320

cond.false:                                       ; preds = %if.end18
  br label %cond.end, !dbg !3320

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %37, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !3320
  %38 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3324
  %distfac = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %38, i32 0, i32 10, !dbg !3325
  store float %cond, float* %distfac, align 4, !dbg !3326
  %39 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3327
  %wrld26 = getelementptr inbounds %struct.Render, %struct.Render* %39, i32 0, i32 46, !dbg !3328
  %ao_indirect_energy = getelementptr inbounds %struct.World, %struct.World* %wrld26, i32 0, i32 58, !dbg !3329
  %40 = load float, float* %ao_indirect_energy, align 8, !dbg !3329
  %cmp27 = fcmp ogt float %40, 0.000000e+00, !dbg !3330
  br i1 %cmp27, label %land.rhs, label %land.end, !dbg !3331

land.rhs:                                         ; preds = %cond.end
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3332
  %wrld29 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 46, !dbg !3333
  %ao_indirect_bounces = getelementptr inbounds %struct.World, %struct.World* %wrld29, i32 0, i32 61, !dbg !3334
  %42 = load i16, i16* %ao_indirect_bounces, align 4, !dbg !3334
  %conv30 = sext i16 %42 to i32, !dbg !3332
  %cmp31 = icmp sgt i32 %conv30, 0, !dbg !3335
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %43 = phi i1 [ false, %cond.end ], [ %cmp31, %land.rhs ], !dbg !3336
  %land.ext = zext i1 %43 to i32, !dbg !3331
  %44 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3337
  %doindirect = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %44, i32 0, i32 13, !dbg !3338
  store i32 %land.ext, i32* %doindirect, align 8, !dbg !3339
  %call33 = call %struct.MemArena* @BLI_memarena_new(i64 4718592, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)), !dbg !3340
  %45 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3341
  %arena = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %45, i32 0, i32 0, !dbg !3342
  store %struct.MemArena* %call33, %struct.MemArena** %arena, align 8, !dbg !3343
  %46 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3344
  %arena34 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %46, i32 0, i32 0, !dbg !3345
  %47 = load %struct.MemArena*, %struct.MemArena** %arena34, align 8, !dbg !3345
  call void @BLI_memarena_use_calloc(%struct.MemArena* %47), !dbg !3346
  %48 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3347
  %wrld35 = getelementptr inbounds %struct.Render, %struct.Render* %48, i32 0, i32 46, !dbg !3349
  %aomode36 = getelementptr inbounds %struct.World, %struct.World* %wrld35, i32 0, i32 50, !dbg !3350
  %49 = load i16, i16* %aomode36, align 8, !dbg !3350
  %conv37 = sext i16 %49 to i32, !dbg !3347
  %and38 = and i32 %conv37, 4, !dbg !3351
  %tobool39 = icmp ne i32 %and38, 0, !dbg !3351
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !3352

if.then40:                                        ; preds = %land.end
  %50 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3353
  %call41 = call i8* %50(i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)), !dbg !3353
  %51 = bitcast i8* %call41 to %struct.OcclusionCache*, !dbg !3353
  %52 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3354
  %cache = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %52, i32 0, i32 14, !dbg !3355
  store %struct.OcclusionCache* %51, %struct.OcclusionCache** %cache, align 8, !dbg !3356
  br label %if.end42, !dbg !3354

if.end42:                                         ; preds = %if.then40, %land.end
  %53 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3357
  %54 = load i32, i32* %totface, align 4, !dbg !3358
  %conv43 = sext i32 %54 to i64, !dbg !3358
  %mul = mul i64 8, %conv43, !dbg !3359
  %call44 = call i8* %53(i64 %mul, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)), !dbg !3357
  %55 = bitcast i8* %call44 to %struct.OccFace*, !dbg !3357
  %56 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3360
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %56, i32 0, i32 2, !dbg !3361
  store %struct.OccFace* %55, %struct.OccFace** %face, align 8, !dbg !3362
  %57 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3363
  %58 = load i32, i32* %totface, align 4, !dbg !3364
  %conv45 = sext i32 %58 to i64, !dbg !3364
  %mul46 = mul i64 12, %conv45, !dbg !3365
  %call47 = call i8* %57(i64 %mul46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0)), !dbg !3363
  %59 = bitcast i8* %call47 to [3 x float]*, !dbg !3363
  %60 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3366
  %co = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %60, i32 0, i32 1, !dbg !3367
  store [3 x float]* %59, [3 x float]** %co, align 8, !dbg !3368
  %61 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3369
  %62 = load i32, i32* %totface, align 4, !dbg !3370
  %conv48 = sext i32 %62 to i64, !dbg !3370
  %mul49 = mul i64 4, %conv48, !dbg !3371
  %call50 = call i8* %61(i64 %mul49, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)), !dbg !3369
  %63 = bitcast i8* %call50 to float*, !dbg !3369
  %64 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3372
  %occlusion = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %64, i32 0, i32 3, !dbg !3373
  store float* %63, float** %occlusion, align 8, !dbg !3374
  %65 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3375
  %doindirect51 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %65, i32 0, i32 13, !dbg !3377
  %66 = load i32, i32* %doindirect51, align 8, !dbg !3377
  %tobool52 = icmp ne i32 %66, 0, !dbg !3375
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !3378

if.then53:                                        ; preds = %if.end42
  %67 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3379
  %68 = load i32, i32* %totface, align 4, !dbg !3380
  %conv54 = sext i32 %68 to i64, !dbg !3380
  %mul55 = mul i64 12, %conv54, !dbg !3381
  %call56 = call i8* %67(i64 %mul55, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)), !dbg !3379
  %69 = bitcast i8* %call56 to [3 x float]*, !dbg !3379
  %70 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3382
  %rad = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %70, i32 0, i32 4, !dbg !3383
  store [3 x float]* %69, [3 x float]** %rad, align 8, !dbg !3384
  br label %if.end57, !dbg !3382

if.end57:                                         ; preds = %if.then53, %if.end42
  store i32 0, i32* %b, align 4, !dbg !3385
  store i32 0, i32* %c, align 4, !dbg !3387
  %71 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3388
  %instancetable58 = getelementptr inbounds %struct.Render, %struct.Render* %71, i32 0, i32 70, !dbg !3389
  %first59 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %instancetable58, i32 0, i32 0, !dbg !3390
  %72 = load i8*, i8** %first59, align 8, !dbg !3390
  %73 = bitcast i8* %72 to %struct.ObjectInstanceRen*, !dbg !3388
  store %struct.ObjectInstanceRen* %73, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3391
  br label %for.cond60, !dbg !3392

for.cond60:                                       ; preds = %for.inc113, %if.end57
  %74 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3393
  %tobool61 = icmp ne %struct.ObjectInstanceRen* %74, null, !dbg !3395
  br i1 %tobool61, label %for.body62, label %for.end116, !dbg !3395

for.body62:                                       ; preds = %for.cond60
  %75 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3396
  %obr63 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %75, i32 0, i32 2, !dbg !3398
  %76 = load %struct.ObjectRen*, %struct.ObjectRen** %obr63, align 8, !dbg !3398
  store %struct.ObjectRen* %76, %struct.ObjectRen** %obr, align 8, !dbg !3399
  store i32 0, i32* %a, align 4, !dbg !3400
  br label %for.cond64, !dbg !3402

for.cond64:                                       ; preds = %for.inc110, %for.body62
  %77 = load i32, i32* %a, align 4, !dbg !3403
  %78 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3405
  %totvlak65 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %78, i32 0, i32 11, !dbg !3406
  %79 = load i32, i32* %totvlak65, align 4, !dbg !3406
  %cmp66 = icmp slt i32 %77, %79, !dbg !3407
  br i1 %cmp66, label %for.body68, label %for.end112, !dbg !3408

for.body68:                                       ; preds = %for.cond64
  %80 = load i32, i32* %a, align 4, !dbg !3409
  %and69 = and i32 %80, 255, !dbg !3412
  %cmp70 = icmp eq i32 %and69, 0, !dbg !3413
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !3414

if.then72:                                        ; preds = %for.body68
  %81 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !3415
  %vlaknodes73 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %81, i32 0, i32 19, !dbg !3416
  %82 = load %struct.VlakTableNode*, %struct.VlakTableNode** %vlaknodes73, align 8, !dbg !3416
  %83 = load i32, i32* %a, align 4, !dbg !3417
  %shr74 = ashr i32 %83, 8, !dbg !3418
  %idxprom75 = sext i32 %shr74 to i64, !dbg !3415
  %arrayidx76 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %82, i64 %idxprom75, !dbg !3415
  %vlak77 = getelementptr inbounds %struct.VlakTableNode, %struct.VlakTableNode* %arrayidx76, i32 0, i32 0, !dbg !3419
  %84 = load %struct.VlakRen*, %struct.VlakRen** %vlak77, align 8, !dbg !3419
  store %struct.VlakRen* %84, %struct.VlakRen** %vlr, align 8, !dbg !3420
  br label %if.end80, !dbg !3421

if.else78:                                        ; preds = %for.body68
  %85 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3422
  %incdec.ptr79 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %85, i32 1, !dbg !3422
  store %struct.VlakRen* %incdec.ptr79, %struct.VlakRen** %vlr, align 8, !dbg !3422
  br label %if.end80

if.end80:                                         ; preds = %if.else78, %if.then72
  %86 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !3423
  %mat81 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %86, i32 0, i32 5, !dbg !3424
  %87 = load %struct.Material*, %struct.Material** %mat81, align 8, !dbg !3424
  store %struct.Material* %87, %struct.Material** %ma, align 8, !dbg !3425
  %88 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3426
  %shade_flag82 = getelementptr inbounds %struct.Material, %struct.Material* %88, i32 0, i32 50, !dbg !3428
  %89 = load i16, i16* %shade_flag82, align 2, !dbg !3428
  %conv83 = sext i16 %89 to i32, !dbg !3426
  %and84 = and i32 %conv83, 4, !dbg !3429
  %tobool85 = icmp ne i32 %and84, 0, !dbg !3429
  br i1 %tobool85, label %land.lhs.true86, label %if.end109, !dbg !3430

land.lhs.true86:                                  ; preds = %if.end80
  %90 = load %struct.Material*, %struct.Material** %ma, align 8, !dbg !3431
  %material_type87 = getelementptr inbounds %struct.Material, %struct.Material* %90, i32 0, i32 2, !dbg !3432
  %91 = load i16, i16* %material_type87, align 8, !dbg !3432
  %conv88 = sext i16 %91 to i32, !dbg !3431
  %cmp89 = icmp eq i32 %conv88, 0, !dbg !3433
  br i1 %cmp89, label %if.then91, label %if.end109, !dbg !3434

if.then91:                                        ; preds = %land.lhs.true86
  %92 = load i32, i32* %c, align 4, !dbg !3435
  %93 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3437
  %face92 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %93, i32 0, i32 2, !dbg !3438
  %94 = load %struct.OccFace*, %struct.OccFace** %face92, align 8, !dbg !3438
  %95 = load i32, i32* %b, align 4, !dbg !3439
  %idxprom93 = sext i32 %95 to i64, !dbg !3437
  %arrayidx94 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %94, i64 %idxprom93, !dbg !3437
  %obi95 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %arrayidx94, i32 0, i32 0, !dbg !3440
  store i32 %92, i32* %obi95, align 4, !dbg !3441
  %96 = load i32, i32* %a, align 4, !dbg !3442
  %97 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3443
  %face96 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %97, i32 0, i32 2, !dbg !3444
  %98 = load %struct.OccFace*, %struct.OccFace** %face96, align 8, !dbg !3444
  %99 = load i32, i32* %b, align 4, !dbg !3445
  %idxprom97 = sext i32 %99 to i64, !dbg !3443
  %arrayidx98 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %98, i64 %idxprom97, !dbg !3443
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %arrayidx98, i32 0, i32 1, !dbg !3446
  store i32 %96, i32* %facenr, align 4, !dbg !3447
  %100 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3448
  %occlusion99 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %100, i32 0, i32 3, !dbg !3449
  %101 = load float*, float** %occlusion99, align 8, !dbg !3449
  %102 = load i32, i32* %b, align 4, !dbg !3450
  %idxprom100 = sext i32 %102 to i64, !dbg !3448
  %arrayidx101 = getelementptr inbounds float, float* %101, i64 %idxprom100, !dbg !3448
  store float 1.000000e+00, float* %arrayidx101, align 4, !dbg !3451
  %103 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3452
  %face102 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %103, i32 0, i32 2, !dbg !3453
  %104 = load %struct.OccFace*, %struct.OccFace** %face102, align 8, !dbg !3453
  %105 = load i32, i32* %b, align 4, !dbg !3454
  %idxprom103 = sext i32 %105 to i64, !dbg !3452
  %arrayidx104 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %104, i64 %idxprom103, !dbg !3452
  %106 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3455
  %co105 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %106, i32 0, i32 1, !dbg !3456
  %107 = load [3 x float]*, [3 x float]** %co105, align 8, !dbg !3456
  %108 = load i32, i32* %b, align 4, !dbg !3457
  %idxprom106 = sext i32 %108 to i64, !dbg !3455
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %107, i64 %idxprom106, !dbg !3455
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx107, i64 0, i64 0, !dbg !3455
  call void @occ_face(%struct.OccFace* %arrayidx104, float* %arraydecay, float* null, float* null), !dbg !3458
  %109 = load i32, i32* %b, align 4, !dbg !3459
  %inc108 = add nsw i32 %109, 1, !dbg !3459
  store i32 %inc108, i32* %b, align 4, !dbg !3459
  br label %if.end109, !dbg !3460

if.end109:                                        ; preds = %if.then91, %land.lhs.true86, %if.end80
  br label %for.inc110, !dbg !3461

for.inc110:                                       ; preds = %if.end109
  %110 = load i32, i32* %a, align 4, !dbg !3462
  %inc111 = add nsw i32 %110, 1, !dbg !3462
  store i32 %inc111, i32* %a, align 4, !dbg !3462
  br label %for.cond64, !dbg !3463, !llvm.loop !3464

for.end112:                                       ; preds = %for.cond64
  br label %for.inc113, !dbg !3466

for.inc113:                                       ; preds = %for.end112
  %111 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3467
  %next114 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %111, i32 0, i32 0, !dbg !3468
  %112 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %next114, align 8, !dbg !3468
  store %struct.ObjectInstanceRen* %112, %struct.ObjectInstanceRen** %obi, align 8, !dbg !3469
  %113 = load i32, i32* %c, align 4, !dbg !3470
  %inc115 = add nsw i32 %113, 1, !dbg !3470
  store i32 %inc115, i32* %c, align 4, !dbg !3470
  br label %for.cond60, !dbg !3471, !llvm.loop !3472

for.end116:                                       ; preds = %for.cond60
  %114 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3474
  %r117 = getelementptr inbounds %struct.Render, %struct.Render* %114, i32 0, i32 45, !dbg !3475
  %threads = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r117, i32 0, i32 14, !dbg !3476
  %115 = load i16, i16* %threads, align 2, !dbg !3476
  %conv118 = sext i16 %115 to i32, !dbg !3474
  %cmp119 = icmp sgt i32 %conv118, 1, !dbg !3477
  br i1 %cmp119, label %land.rhs121, label %land.end124, !dbg !3478

land.rhs121:                                      ; preds = %for.end116
  %116 = load i32, i32* %totface, align 4, !dbg !3479
  %cmp122 = icmp sgt i32 %116, 10000, !dbg !3480
  br label %land.end124

land.end124:                                      ; preds = %land.rhs121, %for.end116
  %117 = phi i1 [ false, %for.end116 ], [ %cmp122, %land.rhs121 ], !dbg !3336
  %118 = zext i1 %117 to i64, !dbg !3481
  %cond126 = select i1 %117, i32 8, i32 1, !dbg !3481
  %119 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3482
  %totbuildthread = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %119, i32 0, i32 12, !dbg !3483
  store i32 %cond126, i32* %totbuildthread, align 4, !dbg !3484
  %120 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3485
  %totbuildthread127 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %120, i32 0, i32 12, !dbg !3486
  %121 = load i32, i32* %totbuildthread127, align 4, !dbg !3486
  %cmp128 = icmp sgt i32 %121, 1, !dbg !3487
  %conv129 = zext i1 %cmp128 to i32, !dbg !3487
  %122 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3488
  %dothreadedbuild = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %122, i32 0, i32 11, !dbg !3489
  store i32 %conv129, i32* %dothreadedbuild, align 8, !dbg !3490
  %123 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3491
  %arena130 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %123, i32 0, i32 0, !dbg !3492
  %124 = load %struct.MemArena*, %struct.MemArena** %arena130, align 8, !dbg !3492
  %call131 = call i8* @BLI_memarena_alloc(%struct.MemArena* %124, i64 144), !dbg !3493
  %125 = bitcast i8* %call131 to %struct.OccNode*, !dbg !3493
  %126 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3494
  %root = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %126, i32 0, i32 5, !dbg !3495
  store %struct.OccNode* %125, %struct.OccNode** %root, align 8, !dbg !3496
  %127 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3497
  %maxdepth = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %127, i32 0, i32 7, !dbg !3498
  store i32 1, i32* %maxdepth, align 8, !dbg !3499
  %128 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3500
  %129 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3501
  %root132 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %129, i32 0, i32 5, !dbg !3502
  %130 = load %struct.OccNode*, %struct.OccNode** %root132, align 8, !dbg !3502
  %131 = load i32, i32* %totface, align 4, !dbg !3503
  call void @occ_build_recursive(%struct.OcclusionTree* %128, %struct.OccNode* %130, i32 0, i32 %131, i32 1), !dbg !3504
  %132 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3505
  %doindirect133 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %132, i32 0, i32 13, !dbg !3507
  %133 = load i32, i32* %doindirect133, align 8, !dbg !3507
  %tobool134 = icmp ne i32 %133, 0, !dbg !3505
  br i1 %tobool134, label %if.then135, label %if.end147, !dbg !3508

if.then135:                                       ; preds = %land.end124
  %134 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3509
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %134, i32 0, i32 96, !dbg !3512
  %135 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3512
  %136 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3513
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %136, i32 0, i32 97, !dbg !3514
  %137 = load i8*, i8** %tbh, align 8, !dbg !3514
  %call136 = call i32 %135(i8* %137), !dbg !3509
  %tobool137 = icmp ne i32 %call136, 0, !dbg !3509
  br i1 %tobool137, label %if.end139, label %if.then138, !dbg !3515

if.then138:                                       ; preds = %if.then135
  %138 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3516
  %139 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3517
  call void @occ_build_shade(%struct.Render* %138, %struct.OcclusionTree* %139), !dbg !3518
  br label %if.end139, !dbg !3518

if.end139:                                        ; preds = %if.then138, %if.then135
  %140 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3519
  %test_break140 = getelementptr inbounds %struct.Render, %struct.Render* %140, i32 0, i32 96, !dbg !3521
  %141 = load i32 (i8*)*, i32 (i8*)** %test_break140, align 8, !dbg !3521
  %142 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3522
  %tbh141 = getelementptr inbounds %struct.Render, %struct.Render* %142, i32 0, i32 97, !dbg !3523
  %143 = load i8*, i8** %tbh141, align 8, !dbg !3523
  %call142 = call i32 %141(i8* %143), !dbg !3519
  %tobool143 = icmp ne i32 %call142, 0, !dbg !3519
  br i1 %tobool143, label %if.end146, label %if.then144, !dbg !3524

if.then144:                                       ; preds = %if.end139
  %144 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3525
  %145 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3526
  %root145 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %145, i32 0, i32 5, !dbg !3527
  %146 = load %struct.OccNode*, %struct.OccNode** %root145, align 8, !dbg !3527
  call void @occ_sum_occlusion(%struct.OcclusionTree* %144, %struct.OccNode* %146), !dbg !3528
  br label %if.end146, !dbg !3528

if.end146:                                        ; preds = %if.then144, %if.end139
  br label %if.end147, !dbg !3529

if.end147:                                        ; preds = %if.end146, %land.end124
  %147 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3530
  %148 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3531
  %co148 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %148, i32 0, i32 1, !dbg !3532
  %149 = load [3 x float]*, [3 x float]** %co148, align 8, !dbg !3532
  %150 = bitcast [3 x float]* %149 to i8*, !dbg !3531
  call void %147(i8* %150), !dbg !3530
  %151 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3533
  %co149 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %151, i32 0, i32 1, !dbg !3534
  store [3 x float]* null, [3 x float]** %co149, align 8, !dbg !3535
  %152 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3536
  %test_break150 = getelementptr inbounds %struct.Render, %struct.Render* %152, i32 0, i32 96, !dbg !3538
  %153 = load i32 (i8*)*, i32 (i8*)** %test_break150, align 8, !dbg !3538
  %154 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3539
  %tbh151 = getelementptr inbounds %struct.Render, %struct.Render* %154, i32 0, i32 97, !dbg !3540
  %155 = load i8*, i8** %tbh151, align 8, !dbg !3540
  %call152 = call i32 %153(i8* %155), !dbg !3536
  %tobool153 = icmp ne i32 %call152, 0, !dbg !3536
  br i1 %tobool153, label %if.end156, label %if.then154, !dbg !3541

if.then154:                                       ; preds = %if.end147
  %156 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3542
  %root155 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %156, i32 0, i32 5, !dbg !3543
  %157 = load %struct.OccNode*, %struct.OccNode** %root155, align 8, !dbg !3543
  call void @occ_build_sh_normalize(%struct.OccNode* %157), !dbg !3544
  br label %if.end156, !dbg !3544

if.end156:                                        ; preds = %if.then154, %if.end147
  store i32 0, i32* %a, align 4, !dbg !3545
  br label %for.cond157, !dbg !3547

for.cond157:                                      ; preds = %for.inc167, %if.end156
  %158 = load i32, i32* %a, align 4, !dbg !3548
  %cmp158 = icmp slt i32 %158, 1, !dbg !3550
  br i1 %cmp158, label %for.body160, label %for.end169, !dbg !3551

for.body160:                                      ; preds = %for.cond157
  %159 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3552
  %160 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3553
  %maxdepth161 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %160, i32 0, i32 7, !dbg !3554
  %161 = load i32, i32* %maxdepth161, align 8, !dbg !3554
  %add = add nsw i32 %161, 1, !dbg !3555
  %conv162 = sext i32 %add to i64, !dbg !3556
  %mul163 = mul i64 1152, %conv162, !dbg !3557
  %call164 = call i8* %159(i64 %mul163, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0)), !dbg !3552
  %162 = bitcast i8* %call164 to %struct.OccNode**, !dbg !3552
  %163 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3558
  %stack = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %163, i32 0, i32 6, !dbg !3559
  %164 = load i32, i32* %a, align 4, !dbg !3560
  %idxprom165 = sext i32 %164 to i64, !dbg !3558
  %arrayidx166 = getelementptr inbounds [1 x %struct.OccNode**], [1 x %struct.OccNode**]* %stack, i64 0, i64 %idxprom165, !dbg !3558
  store %struct.OccNode** %162, %struct.OccNode*** %arrayidx166, align 8, !dbg !3561
  br label %for.inc167, !dbg !3558

for.inc167:                                       ; preds = %for.body160
  %165 = load i32, i32* %a, align 4, !dbg !3562
  %inc168 = add nsw i32 %165, 1, !dbg !3562
  store i32 %inc168, i32* %a, align 4, !dbg !3562
  br label %for.cond157, !dbg !3563, !llvm.loop !3564

for.end169:                                       ; preds = %for.cond157
  %166 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !3566
  store %struct.OcclusionTree* %166, %struct.OcclusionTree** %retval, align 8, !dbg !3567
  br label %return, !dbg !3567

return:                                           ; preds = %for.end169, %if.then17
  %167 = load %struct.OcclusionTree*, %struct.OcclusionTree** %retval, align 8, !dbg !3568
  ret %struct.OcclusionTree* %167, !dbg !3568
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_compute_passes(%struct.Render* %re, %struct.OcclusionTree* %tree, i32 %totpass) #0 !dbg !3569 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %totpass.addr = alloca i32, align 4
  %occ = alloca float*, align 8
  %co = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %pass = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3572, metadata !DIExpression()), !dbg !3573
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !3574, metadata !DIExpression()), !dbg !3575
  store i32 %totpass, i32* %totpass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totpass.addr, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata float** %occ, metadata !3578, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !3582, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata i32* %pass, metadata !3584, metadata !DIExpression()), !dbg !3585
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3586, metadata !DIExpression()), !dbg !3587
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3588
  %1 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3589
  %totface = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %1, i32 0, i32 8, !dbg !3590
  %2 = load i32, i32* %totface, align 4, !dbg !3590
  %conv = sext i32 %2 to i64, !dbg !3589
  %mul = mul i64 4, %conv, !dbg !3591
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !3588
  %3 = bitcast i8* %call to float*, !dbg !3588
  store float* %3, float** %occ, align 8, !dbg !3592
  store i32 0, i32* %pass, align 4, !dbg !3593
  br label %for.cond, !dbg !3595

for.cond:                                         ; preds = %for.inc47, %entry
  %4 = load i32, i32* %pass, align 4, !dbg !3596
  %5 = load i32, i32* %totpass.addr, align 4, !dbg !3598
  %cmp = icmp slt i32 %4, %5, !dbg !3599
  br i1 %cmp, label %for.body, label %for.end49, !dbg !3600

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3601
  br label %for.cond2, !dbg !3604

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %i, align 4, !dbg !3605
  %7 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3607
  %totface3 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %7, i32 0, i32 8, !dbg !3608
  %8 = load i32, i32* %totface3, align 4, !dbg !3608
  %cmp4 = icmp slt i32 %6, %8, !dbg !3609
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !3610

for.body6:                                        ; preds = %for.cond2
  %9 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3611
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %9, i32 0, i32 2, !dbg !3613
  %10 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !3613
  %11 = load i32, i32* %i, align 4, !dbg !3614
  %idxprom = sext i32 %11 to i64, !dbg !3611
  %arrayidx = getelementptr inbounds %struct.OccFace, %struct.OccFace* %10, i64 %idxprom, !dbg !3611
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3615
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3616
  call void @occ_face(%struct.OccFace* %arrayidx, float* %arraydecay, float* %arraydecay7, float* null), !dbg !3617
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3618
  call void @negate_v3(float* %arraydecay8), !dbg !3619
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3620
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3621
  call void @madd_v3_v3fl(float* %arraydecay9, float* %arraydecay10, float 0x3E45798EE0000000), !dbg !3622
  %12 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3623
  %13 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3624
  %face11 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %13, i32 0, i32 2, !dbg !3625
  %14 = load %struct.OccFace*, %struct.OccFace** %face11, align 8, !dbg !3625
  %15 = load i32, i32* %i, align 4, !dbg !3626
  %idxprom12 = sext i32 %15 to i64, !dbg !3624
  %arrayidx13 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %14, i64 %idxprom12, !dbg !3624
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3627
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3628
  %16 = load float*, float** %occ, align 8, !dbg !3629
  %17 = load i32, i32* %i, align 4, !dbg !3630
  %idxprom16 = sext i32 %17 to i64, !dbg !3629
  %arrayidx17 = getelementptr inbounds float, float* %16, i64 %idxprom16, !dbg !3629
  call void @occ_lookup(%struct.OcclusionTree* %12, i32 0, %struct.OccFace* %arrayidx13, float* %arraydecay14, float* %arraydecay15, float* %arrayidx17, float* null, float* null), !dbg !3631
  %18 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3632
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %18, i32 0, i32 96, !dbg !3634
  %19 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3634
  %20 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3635
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %20, i32 0, i32 97, !dbg !3636
  %21 = load i8*, i8** %tbh, align 8, !dbg !3636
  %call18 = call i32 %19(i8* %21), !dbg !3632
  %tobool = icmp ne i32 %call18, 0, !dbg !3632
  br i1 %tobool, label %if.then, label %if.end, !dbg !3637

if.then:                                          ; preds = %for.body6
  br label %for.end, !dbg !3638

if.end:                                           ; preds = %for.body6
  br label %for.inc, !dbg !3639

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !3640
  %inc = add nsw i32 %22, 1, !dbg !3640
  store i32 %inc, i32* %i, align 4, !dbg !3640
  br label %for.cond2, !dbg !3641, !llvm.loop !3642

for.end:                                          ; preds = %if.then, %for.cond2
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3644
  %test_break19 = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 96, !dbg !3646
  %24 = load i32 (i8*)*, i32 (i8*)** %test_break19, align 8, !dbg !3646
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3647
  %tbh20 = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 97, !dbg !3648
  %26 = load i8*, i8** %tbh20, align 8, !dbg !3648
  %call21 = call i32 %24(i8* %26), !dbg !3644
  %tobool22 = icmp ne i32 %call21, 0, !dbg !3644
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !3649

if.then23:                                        ; preds = %for.end
  br label %for.end49, !dbg !3650

if.end24:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !3651
  br label %for.cond25, !dbg !3653

for.cond25:                                       ; preds = %for.inc44, %if.end24
  %27 = load i32, i32* %i, align 4, !dbg !3654
  %28 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3656
  %totface26 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %28, i32 0, i32 8, !dbg !3657
  %29 = load i32, i32* %totface26, align 4, !dbg !3657
  %cmp27 = icmp slt i32 %27, %29, !dbg !3658
  br i1 %cmp27, label %for.body29, label %for.end46, !dbg !3659

for.body29:                                       ; preds = %for.cond25
  %30 = load float*, float** %occ, align 8, !dbg !3660
  %31 = load i32, i32* %i, align 4, !dbg !3662
  %idxprom30 = sext i32 %31 to i64, !dbg !3660
  %arrayidx31 = getelementptr inbounds float, float* %30, i64 %idxprom30, !dbg !3660
  %32 = load float, float* %arrayidx31, align 4, !dbg !3660
  %33 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3663
  %occlusion = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %33, i32 0, i32 3, !dbg !3664
  %34 = load float*, float** %occlusion, align 8, !dbg !3664
  %35 = load i32, i32* %i, align 4, !dbg !3665
  %idxprom32 = sext i32 %35 to i64, !dbg !3663
  %arrayidx33 = getelementptr inbounds float, float* %34, i64 %idxprom32, !dbg !3663
  %36 = load float, float* %arrayidx33, align 4, !dbg !3666
  %sub = fsub float %36, %32, !dbg !3666
  store float %sub, float* %arrayidx33, align 4, !dbg !3666
  %37 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3667
  %occlusion34 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %37, i32 0, i32 3, !dbg !3669
  %38 = load float*, float** %occlusion34, align 8, !dbg !3669
  %39 = load i32, i32* %i, align 4, !dbg !3670
  %idxprom35 = sext i32 %39 to i64, !dbg !3667
  %arrayidx36 = getelementptr inbounds float, float* %38, i64 %idxprom35, !dbg !3667
  %40 = load float, float* %arrayidx36, align 4, !dbg !3667
  %cmp37 = fcmp olt float %40, 0.000000e+00, !dbg !3671
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !3672

if.then39:                                        ; preds = %for.body29
  %41 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3673
  %occlusion40 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %41, i32 0, i32 3, !dbg !3674
  %42 = load float*, float** %occlusion40, align 8, !dbg !3674
  %43 = load i32, i32* %i, align 4, !dbg !3675
  %idxprom41 = sext i32 %43 to i64, !dbg !3673
  %arrayidx42 = getelementptr inbounds float, float* %42, i64 %idxprom41, !dbg !3673
  store float 0.000000e+00, float* %arrayidx42, align 4, !dbg !3676
  br label %if.end43, !dbg !3673

if.end43:                                         ; preds = %if.then39, %for.body29
  br label %for.inc44, !dbg !3677

for.inc44:                                        ; preds = %if.end43
  %44 = load i32, i32* %i, align 4, !dbg !3678
  %inc45 = add nsw i32 %44, 1, !dbg !3678
  store i32 %inc45, i32* %i, align 4, !dbg !3678
  br label %for.cond25, !dbg !3679, !llvm.loop !3680

for.end46:                                        ; preds = %for.cond25
  %45 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3682
  %46 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3683
  %root = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %46, i32 0, i32 5, !dbg !3684
  %47 = load %struct.OccNode*, %struct.OccNode** %root, align 8, !dbg !3684
  call void @occ_sum_occlusion(%struct.OcclusionTree* %45, %struct.OccNode* %47), !dbg !3685
  br label %for.inc47, !dbg !3686

for.inc47:                                        ; preds = %for.end46
  %48 = load i32, i32* %pass, align 4, !dbg !3687
  %inc48 = add nsw i32 %48, 1, !dbg !3687
  store i32 %inc48, i32* %pass, align 4, !dbg !3687
  br label %for.cond, !dbg !3688, !llvm.loop !3689

for.end49:                                        ; preds = %if.then23, %for.cond
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3691
  %50 = load float*, float** %occ, align 8, !dbg !3692
  %51 = bitcast float* %50 to i8*, !dbg !3692
  call void %49(i8* %51), !dbg !3691
  ret void, !dbg !3693
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_compute_bounces(%struct.Render* %re, %struct.OcclusionTree* %tree, i32 %totbounce) #0 !dbg !3694 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %totbounce.addr = alloca i32, align 4
  %rad = alloca [3 x float]*, align 8
  %sum = alloca [3 x float]*, align 8
  %tmp = alloca [3 x float]*, align 8
  %co = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %occ = alloca float, align 4
  %bounce = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !3697, metadata !DIExpression()), !dbg !3698
  store i32 %totbounce, i32* %totbounce.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %totbounce.addr, metadata !3699, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.declare(metadata [3 x float]** %rad, metadata !3701, metadata !DIExpression()), !dbg !3702
  call void @llvm.dbg.declare(metadata [3 x float]** %sum, metadata !3703, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.declare(metadata [3 x float]** %tmp, metadata !3705, metadata !DIExpression()), !dbg !3706
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !3707, metadata !DIExpression()), !dbg !3708
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !3709, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata float* %occ, metadata !3711, metadata !DIExpression()), !dbg !3712
  call void @llvm.dbg.declare(metadata i32* %bounce, metadata !3713, metadata !DIExpression()), !dbg !3714
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3715, metadata !DIExpression()), !dbg !3716
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3717
  %1 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3718
  %totface = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %1, i32 0, i32 8, !dbg !3719
  %2 = load i32, i32* %totface, align 4, !dbg !3719
  %conv = sext i32 %2 to i64, !dbg !3718
  %mul = mul i64 12, %conv, !dbg !3720
  %call = call i8* %0(i64 %mul, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0)), !dbg !3717
  %3 = bitcast i8* %call to [3 x float]*, !dbg !3717
  store [3 x float]* %3, [3 x float]** %rad, align 8, !dbg !3721
  %4 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !3722
  %5 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3723
  %rad1 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %5, i32 0, i32 4, !dbg !3724
  %6 = load [3 x float]*, [3 x float]** %rad1, align 8, !dbg !3724
  %7 = bitcast [3 x float]* %6 to i8*, !dbg !3723
  %call2 = call i8* %4(i8* %7), !dbg !3722
  %8 = bitcast i8* %call2 to [3 x float]*, !dbg !3722
  store [3 x float]* %8, [3 x float]** %sum, align 8, !dbg !3725
  store i32 1, i32* %bounce, align 4, !dbg !3726
  br label %for.cond, !dbg !3728

for.cond:                                         ; preds = %for.inc76, %entry
  %9 = load i32, i32* %bounce, align 4, !dbg !3729
  %10 = load i32, i32* %totbounce.addr, align 4, !dbg !3731
  %cmp = icmp slt i32 %9, %10, !dbg !3732
  br i1 %cmp, label %for.body, label %for.end78, !dbg !3733

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !3734
  br label %for.cond4, !dbg !3737

for.cond4:                                        ; preds = %for.inc, %for.body
  %11 = load i32, i32* %i, align 4, !dbg !3738
  %12 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3740
  %totface5 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %12, i32 0, i32 8, !dbg !3741
  %13 = load i32, i32* %totface5, align 4, !dbg !3741
  %cmp6 = icmp slt i32 %11, %13, !dbg !3742
  br i1 %cmp6, label %for.body8, label %for.end, !dbg !3743

for.body8:                                        ; preds = %for.cond4
  %14 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3744
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %14, i32 0, i32 2, !dbg !3746
  %15 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !3746
  %16 = load i32, i32* %i, align 4, !dbg !3747
  %idxprom = sext i32 %16 to i64, !dbg !3744
  %arrayidx = getelementptr inbounds %struct.OccFace, %struct.OccFace* %15, i64 %idxprom, !dbg !3744
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3748
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3749
  call void @occ_face(%struct.OccFace* %arrayidx, float* %arraydecay, float* %arraydecay9, float* null), !dbg !3750
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3751
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3752
  call void @madd_v3_v3fl(float* %arraydecay10, float* %arraydecay11, float 0x3E45798EE0000000), !dbg !3753
  %17 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3754
  %18 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3755
  %face12 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %18, i32 0, i32 2, !dbg !3756
  %19 = load %struct.OccFace*, %struct.OccFace** %face12, align 8, !dbg !3756
  %20 = load i32, i32* %i, align 4, !dbg !3757
  %idxprom13 = sext i32 %20 to i64, !dbg !3755
  %arrayidx14 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %19, i64 %idxprom13, !dbg !3755
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3758
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3759
  %21 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3760
  %22 = load i32, i32* %i, align 4, !dbg !3761
  %idxprom17 = sext i32 %22 to i64, !dbg !3760
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom17, !dbg !3760
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !3760
  call void @occ_lookup(%struct.OcclusionTree* %17, i32 0, %struct.OccFace* %arrayidx14, float* %arraydecay15, float* %arraydecay16, float* %occ, float* %arraydecay19, float* null), !dbg !3762
  %23 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3763
  %24 = load i32, i32* %i, align 4, !dbg !3763
  %idxprom20 = sext i32 %24 to i64, !dbg !3763
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom20, !dbg !3763
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx21, i64 0, i64 0, !dbg !3763
  %25 = load float, float* %arrayidx22, align 4, !dbg !3763
  %cmp23 = fcmp ogt float %25, 0.000000e+00, !dbg !3763
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !3763

cond.true:                                        ; preds = %for.body8
  %26 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3763
  %27 = load i32, i32* %i, align 4, !dbg !3763
  %idxprom25 = sext i32 %27 to i64, !dbg !3763
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 %idxprom25, !dbg !3763
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !3763
  %28 = load float, float* %arrayidx27, align 4, !dbg !3763
  br label %cond.end, !dbg !3763

cond.false:                                       ; preds = %for.body8
  br label %cond.end, !dbg !3763

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %28, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !3763
  %29 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3764
  %30 = load i32, i32* %i, align 4, !dbg !3765
  %idxprom28 = sext i32 %30 to i64, !dbg !3764
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom28, !dbg !3764
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx29, i64 0, i64 0, !dbg !3764
  store float %cond, float* %arrayidx30, align 4, !dbg !3766
  %31 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3767
  %32 = load i32, i32* %i, align 4, !dbg !3767
  %idxprom31 = sext i32 %32 to i64, !dbg !3767
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %31, i64 %idxprom31, !dbg !3767
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx32, i64 0, i64 1, !dbg !3767
  %33 = load float, float* %arrayidx33, align 4, !dbg !3767
  %cmp34 = fcmp ogt float %33, 0.000000e+00, !dbg !3767
  br i1 %cmp34, label %cond.true36, label %cond.false40, !dbg !3767

cond.true36:                                      ; preds = %cond.end
  %34 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3767
  %35 = load i32, i32* %i, align 4, !dbg !3767
  %idxprom37 = sext i32 %35 to i64, !dbg !3767
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %34, i64 %idxprom37, !dbg !3767
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 1, !dbg !3767
  %36 = load float, float* %arrayidx39, align 4, !dbg !3767
  br label %cond.end41, !dbg !3767

cond.false40:                                     ; preds = %cond.end
  br label %cond.end41, !dbg !3767

cond.end41:                                       ; preds = %cond.false40, %cond.true36
  %cond42 = phi float [ %36, %cond.true36 ], [ 0.000000e+00, %cond.false40 ], !dbg !3767
  %37 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3768
  %38 = load i32, i32* %i, align 4, !dbg !3769
  %idxprom43 = sext i32 %38 to i64, !dbg !3768
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %37, i64 %idxprom43, !dbg !3768
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 1, !dbg !3768
  store float %cond42, float* %arrayidx45, align 4, !dbg !3770
  %39 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3771
  %40 = load i32, i32* %i, align 4, !dbg !3771
  %idxprom46 = sext i32 %40 to i64, !dbg !3771
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 %idxprom46, !dbg !3771
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx47, i64 0, i64 2, !dbg !3771
  %41 = load float, float* %arrayidx48, align 4, !dbg !3771
  %cmp49 = fcmp ogt float %41, 0.000000e+00, !dbg !3771
  br i1 %cmp49, label %cond.true51, label %cond.false55, !dbg !3771

cond.true51:                                      ; preds = %cond.end41
  %42 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3771
  %43 = load i32, i32* %i, align 4, !dbg !3771
  %idxprom52 = sext i32 %43 to i64, !dbg !3771
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %42, i64 %idxprom52, !dbg !3771
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 2, !dbg !3771
  %44 = load float, float* %arrayidx54, align 4, !dbg !3771
  br label %cond.end56, !dbg !3771

cond.false55:                                     ; preds = %cond.end41
  br label %cond.end56, !dbg !3771

cond.end56:                                       ; preds = %cond.false55, %cond.true51
  %cond57 = phi float [ %44, %cond.true51 ], [ 0.000000e+00, %cond.false55 ], !dbg !3771
  %45 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3772
  %46 = load i32, i32* %i, align 4, !dbg !3773
  %idxprom58 = sext i32 %46 to i64, !dbg !3772
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %45, i64 %idxprom58, !dbg !3772
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx59, i64 0, i64 2, !dbg !3772
  store float %cond57, float* %arrayidx60, align 4, !dbg !3774
  %47 = load [3 x float]*, [3 x float]** %sum, align 8, !dbg !3775
  %48 = load i32, i32* %i, align 4, !dbg !3776
  %idxprom61 = sext i32 %48 to i64, !dbg !3775
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %47, i64 %idxprom61, !dbg !3775
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !3775
  %49 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3777
  %50 = load i32, i32* %i, align 4, !dbg !3778
  %idxprom64 = sext i32 %50 to i64, !dbg !3777
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %49, i64 %idxprom64, !dbg !3777
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !3777
  call void @add_v3_v3(float* %arraydecay63, float* %arraydecay66), !dbg !3779
  %51 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3780
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %51, i32 0, i32 96, !dbg !3782
  %52 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !3782
  %53 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3783
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %53, i32 0, i32 97, !dbg !3784
  %54 = load i8*, i8** %tbh, align 8, !dbg !3784
  %call67 = call i32 %52(i8* %54), !dbg !3780
  %tobool = icmp ne i32 %call67, 0, !dbg !3780
  br i1 %tobool, label %if.then, label %if.end, !dbg !3785

if.then:                                          ; preds = %cond.end56
  br label %for.end, !dbg !3786

if.end:                                           ; preds = %cond.end56
  br label %for.inc, !dbg !3787

for.inc:                                          ; preds = %if.end
  %55 = load i32, i32* %i, align 4, !dbg !3788
  %inc = add nsw i32 %55, 1, !dbg !3788
  store i32 %inc, i32* %i, align 4, !dbg !3788
  br label %for.cond4, !dbg !3789, !llvm.loop !3790

for.end:                                          ; preds = %if.then, %for.cond4
  %56 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3792
  %test_break68 = getelementptr inbounds %struct.Render, %struct.Render* %56, i32 0, i32 96, !dbg !3794
  %57 = load i32 (i8*)*, i32 (i8*)** %test_break68, align 8, !dbg !3794
  %58 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3795
  %tbh69 = getelementptr inbounds %struct.Render, %struct.Render* %58, i32 0, i32 97, !dbg !3796
  %59 = load i8*, i8** %tbh69, align 8, !dbg !3796
  %call70 = call i32 %57(i8* %59), !dbg !3792
  %tobool71 = icmp ne i32 %call70, 0, !dbg !3792
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !3797

if.then72:                                        ; preds = %for.end
  br label %for.end78, !dbg !3798

if.end73:                                         ; preds = %for.end
  %60 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3799
  %rad74 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %60, i32 0, i32 4, !dbg !3800
  %61 = load [3 x float]*, [3 x float]** %rad74, align 8, !dbg !3800
  store [3 x float]* %61, [3 x float]** %tmp, align 8, !dbg !3801
  %62 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3802
  %63 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3803
  %rad75 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %63, i32 0, i32 4, !dbg !3804
  store [3 x float]* %62, [3 x float]** %rad75, align 8, !dbg !3805
  %64 = load [3 x float]*, [3 x float]** %tmp, align 8, !dbg !3806
  store [3 x float]* %64, [3 x float]** %rad, align 8, !dbg !3807
  %65 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3808
  %66 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3809
  %root = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %66, i32 0, i32 5, !dbg !3810
  %67 = load %struct.OccNode*, %struct.OccNode** %root, align 8, !dbg !3810
  call void @occ_sum_occlusion(%struct.OcclusionTree* %65, %struct.OccNode* %67), !dbg !3811
  br label %for.inc76, !dbg !3812

for.inc76:                                        ; preds = %if.end73
  %68 = load i32, i32* %bounce, align 4, !dbg !3813
  %inc77 = add nsw i32 %68, 1, !dbg !3813
  store i32 %inc77, i32* %bounce, align 4, !dbg !3813
  br label %for.cond, !dbg !3814, !llvm.loop !3815

for.end78:                                        ; preds = %if.then72, %for.cond
  %69 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3817
  %70 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !3818
  %71 = bitcast [3 x float]* %70 to i8*, !dbg !3818
  call void %69(i8* %71), !dbg !3817
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3819
  %73 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3820
  %rad79 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %73, i32 0, i32 4, !dbg !3821
  %74 = load [3 x float]*, [3 x float]** %rad79, align 8, !dbg !3821
  %75 = bitcast [3 x float]* %74 to i8*, !dbg !3820
  call void %72(i8* %75), !dbg !3819
  %76 = load [3 x float]*, [3 x float]** %sum, align 8, !dbg !3822
  %77 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3823
  %rad80 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %77, i32 0, i32 4, !dbg !3824
  store [3 x float]* %76, [3 x float]** %rad80, align 8, !dbg !3825
  %78 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3826
  %test_break81 = getelementptr inbounds %struct.Render, %struct.Render* %78, i32 0, i32 96, !dbg !3828
  %79 = load i32 (i8*)*, i32 (i8*)** %test_break81, align 8, !dbg !3828
  %80 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !3829
  %tbh82 = getelementptr inbounds %struct.Render, %struct.Render* %80, i32 0, i32 97, !dbg !3830
  %81 = load i8*, i8** %tbh82, align 8, !dbg !3830
  %call83 = call i32 %79(i8* %81), !dbg !3826
  %tobool84 = icmp ne i32 %call83, 0, !dbg !3826
  br i1 %tobool84, label %if.end87, label %if.then85, !dbg !3831

if.then85:                                        ; preds = %for.end78
  %82 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3832
  %83 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !3833
  %root86 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %83, i32 0, i32 5, !dbg !3834
  %84 = load %struct.OccNode*, %struct.OccNode** %root86, align 8, !dbg !3834
  call void @occ_sum_occlusion(%struct.OcclusionTree* %82, %struct.OccNode* %84), !dbg !3835
  br label %if.end87, !dbg !3835

if.end87:                                         ; preds = %if.then85, %for.end78
  ret void, !dbg !3836
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @exec_strandsurface_sample(i8* %data) #0 !dbg !3837 {
entry:
  %data.addr = alloca i8*, align 8
  %othread = alloca %struct.OcclusionThread*, align 8
  %re = alloca %struct.Render*, align 8
  %mesh = alloca %struct.StrandSurface*, align 8
  %ao = alloca [3 x float], align 4
  %env = alloca [3 x float], align 4
  %indirect = alloca [3 x float], align 4
  %co = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  %co4 = alloca float*, align 8
  %a = alloca i32, align 4
  %face = alloca i32*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !3840, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.declare(metadata %struct.OcclusionThread** %othread, metadata !3842, metadata !DIExpression()), !dbg !3843
  %0 = load i8*, i8** %data.addr, align 8, !dbg !3844
  %1 = bitcast i8* %0 to %struct.OcclusionThread*, !dbg !3845
  store %struct.OcclusionThread* %1, %struct.OcclusionThread** %othread, align 8, !dbg !3843
  call void @llvm.dbg.declare(metadata %struct.Render** %re, metadata !3846, metadata !DIExpression()), !dbg !3847
  %2 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3848
  %re1 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %2, i32 0, i32 0, !dbg !3849
  %3 = load %struct.Render*, %struct.Render** %re1, align 8, !dbg !3849
  store %struct.Render* %3, %struct.Render** %re, align 8, !dbg !3847
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh, metadata !3850, metadata !DIExpression()), !dbg !3851
  %4 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3852
  %mesh2 = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %4, i32 0, i32 1, !dbg !3853
  %5 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh2, align 8, !dbg !3853
  store %struct.StrandSurface* %5, %struct.StrandSurface** %mesh, align 8, !dbg !3851
  call void @llvm.dbg.declare(metadata [3 x float]* %ao, metadata !3854, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.declare(metadata [3 x float]* %env, metadata !3856, metadata !DIExpression()), !dbg !3857
  call void @llvm.dbg.declare(metadata [3 x float]* %indirect, metadata !3858, metadata !DIExpression()), !dbg !3859
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !3860, metadata !DIExpression()), !dbg !3861
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !3862, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.declare(metadata float** %co1, metadata !3864, metadata !DIExpression()), !dbg !3865
  call void @llvm.dbg.declare(metadata float** %co2, metadata !3866, metadata !DIExpression()), !dbg !3867
  call void @llvm.dbg.declare(metadata float** %co3, metadata !3868, metadata !DIExpression()), !dbg !3869
  call void @llvm.dbg.declare(metadata float** %co4, metadata !3870, metadata !DIExpression()), !dbg !3871
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3872, metadata !DIExpression()), !dbg !3873
  call void @llvm.dbg.declare(metadata i32** %face, metadata !3874, metadata !DIExpression()), !dbg !3875
  %6 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3876
  %begin = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %6, i32 0, i32 5, !dbg !3878
  %7 = load i32, i32* %begin, align 8, !dbg !3878
  store i32 %7, i32* %a, align 4, !dbg !3879
  br label %for.cond, !dbg !3880

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %a, align 4, !dbg !3881
  %9 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3883
  %end = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %9, i32 0, i32 6, !dbg !3884
  %10 = load i32, i32* %end, align 4, !dbg !3884
  %cmp = icmp slt i32 %8, %10, !dbg !3885
  br i1 %cmp, label %for.body, label %for.end, !dbg !3886

for.body:                                         ; preds = %for.cond
  %11 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3887
  %face3 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %11, i32 0, i32 3, !dbg !3889
  %12 = load [4 x i32]*, [4 x i32]** %face3, align 8, !dbg !3889
  %13 = load i32, i32* %a, align 4, !dbg !3890
  %idxprom = sext i32 %13 to i64, !dbg !3887
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %12, i64 %idxprom, !dbg !3887
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 0, !dbg !3887
  store i32* %arraydecay, i32** %face, align 8, !dbg !3891
  %14 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3892
  %co5 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %14, i32 0, i32 4, !dbg !3893
  %15 = load [3 x float]*, [3 x float]** %co5, align 8, !dbg !3893
  %16 = load i32*, i32** %face, align 8, !dbg !3894
  %arrayidx6 = getelementptr inbounds i32, i32* %16, i64 0, !dbg !3894
  %17 = load i32, i32* %arrayidx6, align 4, !dbg !3894
  %idxprom7 = sext i32 %17 to i64, !dbg !3892
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom7, !dbg !3892
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !3892
  store float* %arraydecay9, float** %co1, align 8, !dbg !3895
  %18 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3896
  %co10 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %18, i32 0, i32 4, !dbg !3897
  %19 = load [3 x float]*, [3 x float]** %co10, align 8, !dbg !3897
  %20 = load i32*, i32** %face, align 8, !dbg !3898
  %arrayidx11 = getelementptr inbounds i32, i32* %20, i64 1, !dbg !3898
  %21 = load i32, i32* %arrayidx11, align 4, !dbg !3898
  %idxprom12 = sext i32 %21 to i64, !dbg !3896
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %19, i64 %idxprom12, !dbg !3896
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !3896
  store float* %arraydecay14, float** %co2, align 8, !dbg !3899
  %22 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3900
  %co15 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %22, i32 0, i32 4, !dbg !3901
  %23 = load [3 x float]*, [3 x float]** %co15, align 8, !dbg !3901
  %24 = load i32*, i32** %face, align 8, !dbg !3902
  %arrayidx16 = getelementptr inbounds i32, i32* %24, i64 2, !dbg !3902
  %25 = load i32, i32* %arrayidx16, align 4, !dbg !3902
  %idxprom17 = sext i32 %25 to i64, !dbg !3900
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %23, i64 %idxprom17, !dbg !3900
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !3900
  store float* %arraydecay19, float** %co3, align 8, !dbg !3903
  %26 = load i32*, i32** %face, align 8, !dbg !3904
  %arrayidx20 = getelementptr inbounds i32, i32* %26, i64 3, !dbg !3904
  %27 = load i32, i32* %arrayidx20, align 4, !dbg !3904
  %tobool = icmp ne i32 %27, 0, !dbg !3904
  br i1 %tobool, label %if.then, label %if.else, !dbg !3906

if.then:                                          ; preds = %for.body
  %28 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !3907
  %co21 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %28, i32 0, i32 4, !dbg !3909
  %29 = load [3 x float]*, [3 x float]** %co21, align 8, !dbg !3909
  %30 = load i32*, i32** %face, align 8, !dbg !3910
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 3, !dbg !3910
  %31 = load i32, i32* %arrayidx22, align 4, !dbg !3910
  %idxprom23 = sext i32 %31 to i64, !dbg !3907
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom23, !dbg !3907
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !3907
  store float* %arraydecay25, float** %co4, align 8, !dbg !3911
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3912
  %32 = load float*, float** %co1, align 8, !dbg !3913
  %33 = load float*, float** %co3, align 8, !dbg !3914
  call void @mid_v3_v3v3(float* %arraydecay26, float* %32, float* %33), !dbg !3915
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3916
  %34 = load float*, float** %co1, align 8, !dbg !3917
  %35 = load float*, float** %co2, align 8, !dbg !3918
  %36 = load float*, float** %co3, align 8, !dbg !3919
  %37 = load float*, float** %co4, align 8, !dbg !3920
  %call = call float @normal_quad_v3(float* %arraydecay27, float* %34, float* %35, float* %36, float* %37), !dbg !3921
  br label %if.end, !dbg !3922

if.else:                                          ; preds = %for.body
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3923
  %38 = load float*, float** %co1, align 8, !dbg !3925
  %39 = load float*, float** %co2, align 8, !dbg !3926
  %40 = load float*, float** %co3, align 8, !dbg !3927
  call void @cent_tri_v3(float* %arraydecay28, float* %38, float* %39, float* %40), !dbg !3928
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3929
  %41 = load float*, float** %co1, align 8, !dbg !3930
  %42 = load float*, float** %co2, align 8, !dbg !3931
  %43 = load float*, float** %co3, align 8, !dbg !3932
  %call30 = call float @normal_tri_v3(float* %arraydecay29, float* %41, float* %42, float* %43), !dbg !3933
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3934
  call void @negate_v3(float* %arraydecay31), !dbg !3935
  %44 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3936
  %45 = load %struct.Render*, %struct.Render** %re, align 8, !dbg !3937
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %45, i32 0, i32 56, !dbg !3938
  %46 = load i8*, i8** %occlusiontree, align 8, !dbg !3938
  %47 = bitcast i8* %46 to %struct.OcclusionTree*, !dbg !3937
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3939
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !3940
  %48 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3941
  %thread = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %48, i32 0, i32 7, !dbg !3942
  %49 = load i32, i32* %thread, align 8, !dbg !3942
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3943
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3944
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3945
  call void @sample_occ_tree(%struct.Render* %44, %struct.OcclusionTree* %47, %struct.OccFace* null, float* %arraydecay32, float* %arraydecay33, i32 %49, i32 0, float* %arraydecay34, float* %arraydecay35, float* %arraydecay36), !dbg !3946
  %50 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3947
  %faceao = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %50, i32 0, i32 2, !dbg !3948
  %51 = load [3 x float]*, [3 x float]** %faceao, align 8, !dbg !3948
  %52 = load i32, i32* %a, align 4, !dbg !3949
  %idxprom37 = sext i32 %52 to i64, !dbg !3947
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %51, i64 %idxprom37, !dbg !3947
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !3947
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !3950
  call void @copy_v3_v3(float* %arraydecay39, float* %arraydecay40), !dbg !3951
  %53 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3952
  %faceenv = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %53, i32 0, i32 3, !dbg !3953
  %54 = load [3 x float]*, [3 x float]** %faceenv, align 8, !dbg !3953
  %55 = load i32, i32* %a, align 4, !dbg !3954
  %idxprom41 = sext i32 %55 to i64, !dbg !3952
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %54, i64 %idxprom41, !dbg !3952
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !3952
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !3955
  call void @copy_v3_v3(float* %arraydecay43, float* %arraydecay44), !dbg !3956
  %56 = load %struct.OcclusionThread*, %struct.OcclusionThread** %othread, align 8, !dbg !3957
  %faceindirect = getelementptr inbounds %struct.OcclusionThread, %struct.OcclusionThread* %56, i32 0, i32 4, !dbg !3958
  %57 = load [3 x float]*, [3 x float]** %faceindirect, align 8, !dbg !3958
  %58 = load i32, i32* %a, align 4, !dbg !3959
  %idxprom45 = sext i32 %58 to i64, !dbg !3957
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %57, i64 %idxprom45, !dbg !3957
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx46, i64 0, i64 0, !dbg !3957
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !3960
  call void @copy_v3_v3(float* %arraydecay47, float* %arraydecay48), !dbg !3961
  br label %for.inc, !dbg !3962

for.inc:                                          ; preds = %if.end
  %59 = load i32, i32* %a, align 4, !dbg !3963
  %inc = add nsw i32 %59, 1, !dbg !3963
  store i32 %inc, i32* %a, align 4, !dbg !3963
  br label %for.cond, !dbg !3964, !llvm.loop !3965

for.end:                                          ; preds = %for.cond
  ret i8* null, !dbg !3967
}

declare dso_local void @BLI_init_threads(%struct.ListBase*, i8* (i8*)*, i32) #3

declare dso_local void @BLI_insert_thread(%struct.ListBase*, i8*) #3

declare dso_local void @BLI_end_threads(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3968 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3973, metadata !DIExpression()), !dbg !3974
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3975, metadata !DIExpression()), !dbg !3976
  %0 = load float*, float** %a.addr, align 8, !dbg !3977
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3977
  %1 = load float, float* %arrayidx, align 4, !dbg !3977
  %2 = load float*, float** %r.addr, align 8, !dbg !3978
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3978
  store float %1, float* %arrayidx1, align 4, !dbg !3979
  %3 = load float*, float** %a.addr, align 8, !dbg !3980
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3980
  %4 = load float, float* %arrayidx2, align 4, !dbg !3980
  %5 = load float*, float** %r.addr, align 8, !dbg !3981
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3981
  store float %4, float* %arrayidx3, align 4, !dbg !3982
  %6 = load float*, float** %a.addr, align 8, !dbg !3983
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3983
  %7 = load float, float* %arrayidx4, align 4, !dbg !3983
  %8 = load float*, float** %r.addr, align 8, !dbg !3984
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3984
  store float %7, float* %arrayidx5, align 4, !dbg !3985
  ret void, !dbg !3986
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !3987 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3988, metadata !DIExpression()), !dbg !3989
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3990, metadata !DIExpression()), !dbg !3991
  %0 = load float*, float** %a.addr, align 8, !dbg !3992
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3992
  %1 = load float, float* %arrayidx, align 4, !dbg !3992
  %2 = load float*, float** %r.addr, align 8, !dbg !3993
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3993
  %3 = load float, float* %arrayidx1, align 4, !dbg !3994
  %add = fadd float %3, %1, !dbg !3994
  store float %add, float* %arrayidx1, align 4, !dbg !3994
  %4 = load float*, float** %a.addr, align 8, !dbg !3995
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3995
  %5 = load float, float* %arrayidx2, align 4, !dbg !3995
  %6 = load float*, float** %r.addr, align 8, !dbg !3996
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3996
  %7 = load float, float* %arrayidx3, align 4, !dbg !3997
  %add4 = fadd float %7, %5, !dbg !3997
  store float %add4, float* %arrayidx3, align 4, !dbg !3997
  %8 = load float*, float** %a.addr, align 8, !dbg !3998
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3998
  %9 = load float, float* %arrayidx5, align 4, !dbg !3998
  %10 = load float*, float** %r.addr, align 8, !dbg !3999
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !3999
  %11 = load float, float* %arrayidx6, align 4, !dbg !4000
  %add7 = fadd float %11, %9, !dbg !4000
  store float %add7, float* %arrayidx6, align 4, !dbg !4000
  ret void, !dbg !4001
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !4002 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !4005, metadata !DIExpression()), !dbg !4006
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !4007, metadata !DIExpression()), !dbg !4008
  %0 = load float, float* %f.addr, align 4, !dbg !4009
  %1 = load float*, float** %r.addr, align 8, !dbg !4010
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !4010
  %2 = load float, float* %arrayidx, align 4, !dbg !4011
  %mul = fmul float %2, %0, !dbg !4011
  store float %mul, float* %arrayidx, align 4, !dbg !4011
  %3 = load float, float* %f.addr, align 4, !dbg !4012
  %4 = load float*, float** %r.addr, align 8, !dbg !4013
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !4013
  %5 = load float, float* %arrayidx1, align 4, !dbg !4014
  %mul2 = fmul float %5, %3, !dbg !4014
  store float %mul2, float* %arrayidx1, align 4, !dbg !4014
  %6 = load float, float* %f.addr, align 4, !dbg !4015
  %7 = load float*, float** %r.addr, align 8, !dbg !4016
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !4016
  %8 = load float, float* %arrayidx3, align 4, !dbg !4017
  %mul4 = fmul float %8, %6, !dbg !4017
  store float %mul4, float* %arrayidx3, align 4, !dbg !4017
  ret void, !dbg !4018
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_occ(%struct.Render* %re) #0 !dbg !4019 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4020, metadata !DIExpression()), !dbg !4021
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4022
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 56, !dbg !4024
  %1 = load i8*, i8** %occlusiontree, align 8, !dbg !4024
  %tobool = icmp ne i8* %1, null, !dbg !4022
  br i1 %tobool, label %if.then, label %if.end, !dbg !4025

if.then:                                          ; preds = %entry
  %2 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4026
  %occlusiontree1 = getelementptr inbounds %struct.Render, %struct.Render* %2, i32 0, i32 56, !dbg !4028
  %3 = load i8*, i8** %occlusiontree1, align 8, !dbg !4028
  %4 = bitcast i8* %3 to %struct.OcclusionTree*, !dbg !4026
  call void @occ_free_tree(%struct.OcclusionTree* %4), !dbg !4029
  %5 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4030
  %occlusiontree2 = getelementptr inbounds %struct.Render, %struct.Render* %5, i32 0, i32 56, !dbg !4031
  store i8* null, i8** %occlusiontree2, align 8, !dbg !4032
  br label %if.end, !dbg !4033

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4034
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_free_tree(%struct.OcclusionTree* %tree) #0 !dbg !4035 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %a = alloca i32, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !4038, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4040, metadata !DIExpression()), !dbg !4041
  %0 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4042
  %tobool = icmp ne %struct.OcclusionTree* %0, null, !dbg !4042
  br i1 %tobool, label %if.then, label %if.end26, !dbg !4044

if.then:                                          ; preds = %entry
  %1 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4045
  %arena = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %1, i32 0, i32 0, !dbg !4048
  %2 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !4048
  %tobool1 = icmp ne %struct.MemArena* %2, null, !dbg !4045
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4049

if.then2:                                         ; preds = %if.then
  %3 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4050
  %arena3 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %3, i32 0, i32 0, !dbg !4051
  %4 = load %struct.MemArena*, %struct.MemArena** %arena3, align 8, !dbg !4051
  call void @BLI_memarena_free(%struct.MemArena* %4), !dbg !4052
  br label %if.end, !dbg !4052

if.end:                                           ; preds = %if.then2, %if.then
  store i32 0, i32* %a, align 4, !dbg !4053
  br label %for.cond, !dbg !4055

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %a, align 4, !dbg !4056
  %cmp = icmp slt i32 %5, 1, !dbg !4058
  br i1 %cmp, label %for.body, label %for.end, !dbg !4059

for.body:                                         ; preds = %for.cond
  %6 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4060
  %stack = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %6, i32 0, i32 6, !dbg !4062
  %7 = load i32, i32* %a, align 4, !dbg !4063
  %idxprom = sext i32 %7 to i64, !dbg !4060
  %arrayidx = getelementptr inbounds [1 x %struct.OccNode**], [1 x %struct.OccNode**]* %stack, i64 0, i64 %idxprom, !dbg !4060
  %8 = load %struct.OccNode**, %struct.OccNode*** %arrayidx, align 8, !dbg !4060
  %tobool4 = icmp ne %struct.OccNode** %8, null, !dbg !4060
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !4064

if.then5:                                         ; preds = %for.body
  %9 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4065
  %10 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4066
  %stack6 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %10, i32 0, i32 6, !dbg !4067
  %11 = load i32, i32* %a, align 4, !dbg !4068
  %idxprom7 = sext i32 %11 to i64, !dbg !4066
  %arrayidx8 = getelementptr inbounds [1 x %struct.OccNode**], [1 x %struct.OccNode**]* %stack6, i64 0, i64 %idxprom7, !dbg !4066
  %12 = load %struct.OccNode**, %struct.OccNode*** %arrayidx8, align 8, !dbg !4066
  %13 = bitcast %struct.OccNode** %12 to i8*, !dbg !4066
  call void %9(i8* %13), !dbg !4065
  br label %if.end9, !dbg !4065

if.end9:                                          ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !4069

for.inc:                                          ; preds = %if.end9
  %14 = load i32, i32* %a, align 4, !dbg !4070
  %inc = add nsw i32 %14, 1, !dbg !4070
  store i32 %inc, i32* %a, align 4, !dbg !4070
  br label %for.cond, !dbg !4071, !llvm.loop !4072

for.end:                                          ; preds = %for.cond
  %15 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4074
  %occlusion = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %15, i32 0, i32 3, !dbg !4076
  %16 = load float*, float** %occlusion, align 8, !dbg !4076
  %tobool10 = icmp ne float* %16, null, !dbg !4074
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !4077

if.then11:                                        ; preds = %for.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4078
  %18 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4079
  %occlusion12 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %18, i32 0, i32 3, !dbg !4080
  %19 = load float*, float** %occlusion12, align 8, !dbg !4080
  %20 = bitcast float* %19 to i8*, !dbg !4079
  call void %17(i8* %20), !dbg !4078
  br label %if.end13, !dbg !4078

if.end13:                                         ; preds = %if.then11, %for.end
  %21 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4081
  %cache = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %21, i32 0, i32 14, !dbg !4083
  %22 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4083
  %tobool14 = icmp ne %struct.OcclusionCache* %22, null, !dbg !4081
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !4084

if.then15:                                        ; preds = %if.end13
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4085
  %24 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4086
  %cache16 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %24, i32 0, i32 14, !dbg !4087
  %25 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache16, align 8, !dbg !4087
  %26 = bitcast %struct.OcclusionCache* %25 to i8*, !dbg !4086
  call void %23(i8* %26), !dbg !4085
  br label %if.end17, !dbg !4085

if.end17:                                         ; preds = %if.then15, %if.end13
  %27 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4088
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %27, i32 0, i32 2, !dbg !4090
  %28 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !4090
  %tobool18 = icmp ne %struct.OccFace* %28, null, !dbg !4088
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !4091

if.then19:                                        ; preds = %if.end17
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4092
  %30 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4093
  %face20 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %30, i32 0, i32 2, !dbg !4094
  %31 = load %struct.OccFace*, %struct.OccFace** %face20, align 8, !dbg !4094
  %32 = bitcast %struct.OccFace* %31 to i8*, !dbg !4093
  call void %29(i8* %32), !dbg !4092
  br label %if.end21, !dbg !4092

if.end21:                                         ; preds = %if.then19, %if.end17
  %33 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4095
  %rad = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %33, i32 0, i32 4, !dbg !4097
  %34 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !4097
  %tobool22 = icmp ne [3 x float]* %34, null, !dbg !4095
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !4098

if.then23:                                        ; preds = %if.end21
  %35 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4099
  %36 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4100
  %rad24 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %36, i32 0, i32 4, !dbg !4101
  %37 = load [3 x float]*, [3 x float]** %rad24, align 8, !dbg !4101
  %38 = bitcast [3 x float]* %37 to i8*, !dbg !4100
  call void %35(i8* %38), !dbg !4099
  br label %if.end25, !dbg !4099

if.end25:                                         ; preds = %if.then23, %if.end21
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4102
  %40 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4103
  %41 = bitcast %struct.OcclusionTree* %40 to i8*, !dbg !4103
  call void %39(i8* %41), !dbg !4102
  br label %if.end26, !dbg !4104

if.end26:                                         ; preds = %if.end25, %entry
  ret void, !dbg !4105
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @sample_occ(%struct.Render* %re, %struct.ShadeInput* %shi) #0 !dbg !4106 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %tree = alloca %struct.OcclusionTree*, align 8
  %cache = alloca %struct.OcclusionCache*, align 8
  %sample = alloca %struct.OcclusionCacheSample*, align 8
  %exclude = alloca %struct.OccFace, align 4
  %onlyshadow = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !4250, metadata !DIExpression()), !dbg !4251
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4252, metadata !DIExpression()), !dbg !4253
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree, metadata !4254, metadata !DIExpression()), !dbg !4255
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4256
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 56, !dbg !4257
  %1 = load i8*, i8** %occlusiontree, align 8, !dbg !4257
  %2 = bitcast i8* %1 to %struct.OcclusionTree*, !dbg !4256
  store %struct.OcclusionTree* %2, %struct.OcclusionTree** %tree, align 8, !dbg !4255
  call void @llvm.dbg.declare(metadata %struct.OcclusionCache** %cache, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.OcclusionCacheSample** %sample, metadata !4260, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata %struct.OccFace* %exclude, metadata !4262, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.declare(metadata i32* %onlyshadow, metadata !4264, metadata !DIExpression()), !dbg !4265
  %3 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !4266
  %tobool = icmp ne %struct.OcclusionTree* %3, null, !dbg !4266
  br i1 %tobool, label %if.then, label %if.else96, !dbg !4268

if.then:                                          ; preds = %entry
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4269
  %strand = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 2, !dbg !4272
  %5 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !4272
  %tobool1 = icmp ne %struct.StrandRen* %5, null, !dbg !4269
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !4273

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4274
  call void @sample_occ_surface(%struct.ShadeInput* %6), !dbg !4276
  br label %if.end95, !dbg !4277

if.else:                                          ; preds = %if.then
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4278
  %depth = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 108, !dbg !4280
  %8 = load i32, i32* %depth, align 8, !dbg !4280
  %cmp = icmp ne i32 %8, 0, !dbg !4281
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !4282

lor.lhs.false:                                    ; preds = %if.else
  %9 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !4283
  %10 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4284
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %10, i32 0, i32 29, !dbg !4285
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4284
  %11 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4286
  %vno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %11, i32 0, i32 17, !dbg !4287
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vno, i64 0, i64 0, !dbg !4286
  %12 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4288
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %12, i32 0, i32 103, !dbg !4289
  %13 = load i32, i32* %xs, align 4, !dbg !4289
  %14 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4290
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %14, i32 0, i32 104, !dbg !4291
  %15 = load i32, i32* %ys, align 8, !dbg !4291
  %16 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4292
  %thread = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %16, i32 0, i32 114, !dbg !4293
  %17 = load i16, i16* %thread, align 2, !dbg !4293
  %conv = sext i16 %17 to i32, !dbg !4292
  %18 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4294
  %ao = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %18, i32 0, i32 100, !dbg !4295
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !4294
  %19 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4296
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %19, i32 0, i32 102, !dbg !4297
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !4296
  %20 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4298
  %indirect = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %20, i32 0, i32 101, !dbg !4299
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !4298
  %call = call i32 @sample_occ_cache(%struct.OcclusionTree* %9, float* %arraydecay, float* %arraydecay3, i32 %13, i32 %15, i32 %conv, float* %arraydecay4, float* %arraydecay5, float* %arraydecay6), !dbg !4300
  %tobool7 = icmp ne i32 %call, 0, !dbg !4300
  br i1 %tobool7, label %if.end94, label %if.then8, !dbg !4301

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  %21 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4302
  %obi = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %21, i32 0, i32 3, !dbg !4304
  %22 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !4304
  %23 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4305
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %23, i32 0, i32 69, !dbg !4306
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !4306
  %sub.ptr.lhs.cast = ptrtoint %struct.ObjectInstanceRen* %22 to i64, !dbg !4307
  %sub.ptr.rhs.cast = ptrtoint %struct.ObjectInstanceRen* %24 to i64, !dbg !4307
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4307
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 288, !dbg !4307
  %conv9 = trunc i64 %sub.ptr.div to i32, !dbg !4302
  %obi10 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %exclude, i32 0, i32 0, !dbg !4308
  store i32 %conv9, i32* %obi10, align 4, !dbg !4309
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4310
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 1, !dbg !4311
  %26 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !4311
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %26, i32 0, i32 9, !dbg !4312
  %27 = load i32, i32* %index, align 4, !dbg !4312
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %exclude, i32 0, i32 1, !dbg !4313
  store i32 %27, i32* %facenr, align 4, !dbg !4314
  %28 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4315
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %28, i32 0, i32 0, !dbg !4316
  %29 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4316
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %29, i32 0, i32 51, !dbg !4317
  %30 = load i32, i32* %mode, align 4, !dbg !4317
  %and = and i32 %30, 1024, !dbg !4318
  store i32 %and, i32* %onlyshadow, align 4, !dbg !4319
  %31 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !4320
  %32 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !4321
  %33 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4322
  %co11 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %33, i32 0, i32 29, !dbg !4323
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !4322
  %34 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4324
  %vno13 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %34, i32 0, i32 17, !dbg !4325
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %vno13, i64 0, i64 0, !dbg !4324
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4326
  %thread15 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 114, !dbg !4327
  %36 = load i16, i16* %thread15, align 2, !dbg !4327
  %conv16 = sext i16 %36 to i32, !dbg !4326
  %37 = load i32, i32* %onlyshadow, align 4, !dbg !4328
  %38 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4329
  %ao17 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %38, i32 0, i32 100, !dbg !4330
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %ao17, i64 0, i64 0, !dbg !4329
  %39 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4331
  %env19 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %39, i32 0, i32 102, !dbg !4332
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %env19, i64 0, i64 0, !dbg !4331
  %40 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4333
  %indirect21 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %40, i32 0, i32 101, !dbg !4334
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %indirect21, i64 0, i64 0, !dbg !4333
  call void @sample_occ_tree(%struct.Render* %31, %struct.OcclusionTree* %32, %struct.OccFace* %exclude, float* %arraydecay12, float* %arraydecay14, i32 %conv16, i32 %37, float* %arraydecay18, float* %arraydecay20, float* %arraydecay22), !dbg !4335
  %41 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !4336
  %cache23 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %41, i32 0, i32 14, !dbg !4338
  %42 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache23, align 8, !dbg !4338
  %tobool24 = icmp ne %struct.OcclusionCache* %42, null, !dbg !4336
  br i1 %tobool24, label %if.then25, label %if.end93, !dbg !4339

if.then25:                                        ; preds = %if.then8
  %43 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !4340
  %cache26 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %43, i32 0, i32 14, !dbg !4342
  %44 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache26, align 8, !dbg !4342
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4343
  %thread27 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 114, !dbg !4344
  %46 = load i16, i16* %thread27, align 2, !dbg !4344
  %idxprom = sext i16 %46 to i64, !dbg !4340
  %arrayidx = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %44, i64 %idxprom, !dbg !4340
  store %struct.OcclusionCache* %arrayidx, %struct.OcclusionCache** %cache, align 8, !dbg !4345
  %47 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4346
  %sample28 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %47, i32 0, i32 0, !dbg !4348
  %48 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample28, align 8, !dbg !4348
  %tobool29 = icmp ne %struct.OcclusionCacheSample* %48, null, !dbg !4346
  br i1 %tobool29, label %land.lhs.true, label %if.end, !dbg !4349

land.lhs.true:                                    ; preds = %if.then25
  %49 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4350
  %step = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %49, i32 0, i32 5, !dbg !4351
  %50 = load i32, i32* %step, align 8, !dbg !4351
  %tobool30 = icmp ne i32 %50, 0, !dbg !4350
  br i1 %tobool30, label %if.then31, label %if.end, !dbg !4352

if.then31:                                        ; preds = %land.lhs.true
  %51 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4353
  %sample32 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %51, i32 0, i32 0, !dbg !4355
  %52 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample32, align 8, !dbg !4355
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4356
  %ys33 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 104, !dbg !4357
  %54 = load i32, i32* %ys33, align 8, !dbg !4357
  %55 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4358
  %y = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %55, i32 0, i32 2, !dbg !4359
  %56 = load i32, i32* %y, align 4, !dbg !4359
  %sub = sub nsw i32 %54, %56, !dbg !4360
  %57 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4361
  %w = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %57, i32 0, i32 3, !dbg !4362
  %58 = load i32, i32* %w, align 8, !dbg !4362
  %mul = mul nsw i32 %sub, %58, !dbg !4363
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4364
  %xs34 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 103, !dbg !4365
  %60 = load i32, i32* %xs34, align 4, !dbg !4365
  %61 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4366
  %x = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %61, i32 0, i32 1, !dbg !4367
  %62 = load i32, i32* %x, align 8, !dbg !4367
  %sub35 = sub nsw i32 %60, %62, !dbg !4368
  %add = add nsw i32 %mul, %sub35, !dbg !4369
  %idxprom36 = sext i32 %add to i64, !dbg !4353
  %arrayidx37 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %52, i64 %idxprom36, !dbg !4353
  store %struct.OcclusionCacheSample* %arrayidx37, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4370
  %63 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4371
  %co38 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %63, i32 0, i32 0, !dbg !4372
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 0, !dbg !4371
  %64 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4373
  %co40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %64, i32 0, i32 29, !dbg !4374
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %co40, i64 0, i64 0, !dbg !4373
  call void @copy_v3_v3(float* %arraydecay39, float* %arraydecay41), !dbg !4375
  %65 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4376
  %n = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %65, i32 0, i32 1, !dbg !4377
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !4376
  %66 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4378
  %vno43 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %66, i32 0, i32 17, !dbg !4379
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %vno43, i64 0, i64 0, !dbg !4378
  call void @copy_v3_v3(float* %arraydecay42, float* %arraydecay44), !dbg !4380
  %67 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4381
  %ao45 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %67, i32 0, i32 2, !dbg !4382
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %ao45, i64 0, i64 0, !dbg !4381
  %68 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4383
  %ao47 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %68, i32 0, i32 100, !dbg !4384
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %ao47, i64 0, i64 0, !dbg !4383
  call void @copy_v3_v3(float* %arraydecay46, float* %arraydecay48), !dbg !4385
  %69 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4386
  %env49 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %69, i32 0, i32 3, !dbg !4387
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %env49, i64 0, i64 0, !dbg !4386
  %70 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4388
  %env51 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %70, i32 0, i32 102, !dbg !4389
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %env51, i64 0, i64 0, !dbg !4388
  call void @copy_v3_v3(float* %arraydecay50, float* %arraydecay52), !dbg !4390
  %71 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4391
  %indirect53 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %71, i32 0, i32 4, !dbg !4392
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %indirect53, i64 0, i64 0, !dbg !4391
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4393
  %indirect55 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %72, i32 0, i32 101, !dbg !4394
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %indirect55, i64 0, i64 0, !dbg !4393
  call void @copy_v3_v3(float* %arraydecay54, float* %arraydecay56), !dbg !4395
  %73 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4396
  %ao57 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %73, i32 0, i32 2, !dbg !4397
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %ao57, i64 0, i64 0, !dbg !4396
  %74 = load float, float* %arrayidx58, align 4, !dbg !4396
  %75 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4398
  %ao59 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %75, i32 0, i32 2, !dbg !4399
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %ao59, i64 0, i64 1, !dbg !4398
  %76 = load float, float* %arrayidx60, align 4, !dbg !4398
  %77 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4400
  %ao61 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %77, i32 0, i32 2, !dbg !4401
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %ao61, i64 0, i64 2, !dbg !4400
  %78 = load float, float* %arrayidx62, align 4, !dbg !4400
  %call63 = call float @max_fff(float %74, float %76, float %78), !dbg !4402
  %79 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4403
  %intensity = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %79, i32 0, i32 5, !dbg !4404
  store float %call63, float* %intensity, align 4, !dbg !4405
  %80 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4406
  %intensity64 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %80, i32 0, i32 5, !dbg !4407
  %81 = load float, float* %intensity64, align 4, !dbg !4407
  %82 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4408
  %env65 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %82, i32 0, i32 3, !dbg !4409
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %env65, i64 0, i64 0, !dbg !4408
  %83 = load float, float* %arrayidx66, align 4, !dbg !4408
  %84 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4410
  %env67 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %84, i32 0, i32 3, !dbg !4411
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %env67, i64 0, i64 1, !dbg !4410
  %85 = load float, float* %arrayidx68, align 4, !dbg !4410
  %86 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4412
  %env69 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %86, i32 0, i32 3, !dbg !4413
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %env69, i64 0, i64 2, !dbg !4412
  %87 = load float, float* %arrayidx70, align 4, !dbg !4412
  %call71 = call float @max_fff(float %83, float %85, float %87), !dbg !4414
  %call72 = call float @max_ff(float %81, float %call71), !dbg !4415
  %88 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4416
  %intensity73 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %88, i32 0, i32 5, !dbg !4417
  store float %call72, float* %intensity73, align 4, !dbg !4418
  %89 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4419
  %intensity74 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %89, i32 0, i32 5, !dbg !4420
  %90 = load float, float* %intensity74, align 4, !dbg !4420
  %91 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4421
  %indirect75 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %91, i32 0, i32 4, !dbg !4422
  %arrayidx76 = getelementptr inbounds [3 x float], [3 x float]* %indirect75, i64 0, i64 0, !dbg !4421
  %92 = load float, float* %arrayidx76, align 4, !dbg !4421
  %93 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4423
  %indirect77 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %93, i32 0, i32 4, !dbg !4424
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %indirect77, i64 0, i64 1, !dbg !4423
  %94 = load float, float* %arrayidx78, align 4, !dbg !4423
  %95 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4425
  %indirect79 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %95, i32 0, i32 4, !dbg !4426
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %indirect79, i64 0, i64 2, !dbg !4425
  %96 = load float, float* %arrayidx80, align 4, !dbg !4425
  %call81 = call float @max_fff(float %92, float %94, float %96), !dbg !4427
  %call82 = call float @max_ff(float %90, float %call81), !dbg !4428
  %97 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4429
  %intensity83 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %97, i32 0, i32 5, !dbg !4430
  store float %call82, float* %intensity83, align 4, !dbg !4431
  %98 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4432
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %98, i32 0, i32 78, !dbg !4433
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !4432
  %99 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4434
  %dxco85 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %99, i32 0, i32 78, !dbg !4435
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %dxco85, i64 0, i64 0, !dbg !4434
  %call87 = call float @dot_v3v3(float* %arraydecay84, float* %arraydecay86), !dbg !4436
  %100 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4437
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %100, i32 0, i32 79, !dbg !4438
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !4437
  %101 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4439
  %dyco89 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %101, i32 0, i32 79, !dbg !4440
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %dyco89, i64 0, i64 0, !dbg !4439
  %call91 = call float @dot_v3v3(float* %arraydecay88, float* %arraydecay90), !dbg !4441
  %add92 = fadd float %call87, %call91, !dbg !4442
  %102 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4443
  %dist2 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %102, i32 0, i32 6, !dbg !4444
  store float %add92, float* %dist2, align 4, !dbg !4445
  %103 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4446
  %filled = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %103, i32 0, i32 9, !dbg !4447
  store i32 1, i32* %filled, align 4, !dbg !4448
  br label %if.end, !dbg !4449

if.end:                                           ; preds = %if.then31, %land.lhs.true, %if.then25
  br label %if.end93, !dbg !4450

if.end93:                                         ; preds = %if.end, %if.then8
  br label %if.end94, !dbg !4451

if.end94:                                         ; preds = %if.end93, %lor.lhs.false
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then2
  br label %if.end115, !dbg !4452

if.else96:                                        ; preds = %entry
  %104 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4453
  %ao97 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %104, i32 0, i32 100, !dbg !4455
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %ao97, i64 0, i64 0, !dbg !4453
  store float 1.000000e+00, float* %arrayidx98, align 8, !dbg !4456
  %105 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4457
  %ao99 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %105, i32 0, i32 100, !dbg !4458
  %arrayidx100 = getelementptr inbounds [3 x float], [3 x float]* %ao99, i64 0, i64 1, !dbg !4457
  store float 1.000000e+00, float* %arrayidx100, align 4, !dbg !4459
  %106 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4460
  %ao101 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %106, i32 0, i32 100, !dbg !4461
  %arrayidx102 = getelementptr inbounds [3 x float], [3 x float]* %ao101, i64 0, i64 2, !dbg !4460
  store float 1.000000e+00, float* %arrayidx102, align 8, !dbg !4462
  %107 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4463
  %env103 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %107, i32 0, i32 102, !dbg !4464
  %arrayidx104 = getelementptr inbounds [3 x float], [3 x float]* %env103, i64 0, i64 0, !dbg !4463
  store float 0.000000e+00, float* %arrayidx104, align 8, !dbg !4465
  %108 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4466
  %env105 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %108, i32 0, i32 102, !dbg !4467
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %env105, i64 0, i64 1, !dbg !4466
  store float 0.000000e+00, float* %arrayidx106, align 4, !dbg !4468
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4469
  %env107 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 102, !dbg !4470
  %arrayidx108 = getelementptr inbounds [3 x float], [3 x float]* %env107, i64 0, i64 2, !dbg !4469
  store float 0.000000e+00, float* %arrayidx108, align 8, !dbg !4471
  %110 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4472
  %indirect109 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %110, i32 0, i32 101, !dbg !4473
  %arrayidx110 = getelementptr inbounds [3 x float], [3 x float]* %indirect109, i64 0, i64 0, !dbg !4472
  store float 0.000000e+00, float* %arrayidx110, align 4, !dbg !4474
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4475
  %indirect111 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 101, !dbg !4476
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %indirect111, i64 0, i64 1, !dbg !4475
  store float 0.000000e+00, float* %arrayidx112, align 4, !dbg !4477
  %112 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4478
  %indirect113 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %112, i32 0, i32 101, !dbg !4479
  %arrayidx114 = getelementptr inbounds [3 x float], [3 x float]* %indirect113, i64 0, i64 2, !dbg !4478
  store float 0.000000e+00, float* %arrayidx114, align 4, !dbg !4480
  br label %if.end115

if.end115:                                        ; preds = %if.else96, %if.end95
  ret void, !dbg !4481
}

; Function Attrs: noinline nounwind uwtable
define internal void @sample_occ_surface(%struct.ShadeInput* %shi) #0 !dbg !4482 {
entry:
  %shi.addr = alloca %struct.ShadeInput*, align 8
  %strand = alloca %struct.StrandRen*, align 8
  %mesh = alloca %struct.StrandSurface*, align 8
  %face = alloca i32*, align 8
  %index = alloca i32*, align 8
  %w = alloca [4 x float], align 16
  %co1 = alloca float*, align 8
  %co2 = alloca float*, align 8
  %co3 = alloca float*, align 8
  %co4 = alloca float*, align 8
  store %struct.ShadeInput* %shi, %struct.ShadeInput** %shi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.declare(metadata %struct.StrandRen** %strand, metadata !4487, metadata !DIExpression()), !dbg !4490
  %0 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4491
  %strand1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %0, i32 0, i32 2, !dbg !4492
  %1 = load %struct.StrandRen*, %struct.StrandRen** %strand1, align 8, !dbg !4492
  store %struct.StrandRen* %1, %struct.StrandRen** %strand, align 8, !dbg !4490
  call void @llvm.dbg.declare(metadata %struct.StrandSurface** %mesh, metadata !4493, metadata !DIExpression()), !dbg !4494
  %2 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !4495
  %buffer = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %2, i32 0, i32 1, !dbg !4496
  %3 = load %struct.StrandBuffer*, %struct.StrandBuffer** %buffer, align 8, !dbg !4496
  %surface = getelementptr inbounds %struct.StrandBuffer, %struct.StrandBuffer* %3, i32 0, i32 8, !dbg !4497
  %4 = load %struct.StrandSurface*, %struct.StrandSurface** %surface, align 8, !dbg !4497
  store %struct.StrandSurface* %4, %struct.StrandSurface** %mesh, align 8, !dbg !4494
  call void @llvm.dbg.declare(metadata i32** %face, metadata !4498, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.declare(metadata i32** %index, metadata !4502, metadata !DIExpression()), !dbg !4503
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4504
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 4, !dbg !4505
  %6 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !4505
  %7 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !4506
  %call = call i32* @RE_strandren_get_face(%struct.ObjectRen* %6, %struct.StrandRen* %7, i32 0), !dbg !4507
  store i32* %call, i32** %index, align 8, !dbg !4503
  call void @llvm.dbg.declare(metadata [4 x float]* %w, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata float** %co1, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata float** %co2, metadata !4512, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.declare(metadata float** %co3, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata float** %co4, metadata !4516, metadata !DIExpression()), !dbg !4517
  %8 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4518
  %tobool = icmp ne %struct.StrandSurface* %8, null, !dbg !4518
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !4520

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4521
  %face2 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %9, i32 0, i32 3, !dbg !4522
  %10 = load [4 x i32]*, [4 x i32]** %face2, align 8, !dbg !4522
  %tobool3 = icmp ne [4 x i32]* %10, null, !dbg !4521
  br i1 %tobool3, label %land.lhs.true4, label %if.else, !dbg !4523

land.lhs.true4:                                   ; preds = %land.lhs.true
  %11 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4524
  %co = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %11, i32 0, i32 4, !dbg !4525
  %12 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !4525
  %tobool5 = icmp ne [3 x float]* %12, null, !dbg !4524
  br i1 %tobool5, label %land.lhs.true6, label %if.else, !dbg !4526

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %13 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4527
  %ao = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %13, i32 0, i32 5, !dbg !4528
  %14 = load [3 x float]*, [3 x float]** %ao, align 8, !dbg !4528
  %tobool7 = icmp ne [3 x float]* %14, null, !dbg !4527
  br i1 %tobool7, label %land.lhs.true8, label %if.else, !dbg !4529

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %15 = load i32*, i32** %index, align 8, !dbg !4530
  %tobool9 = icmp ne i32* %15, null, !dbg !4530
  br i1 %tobool9, label %if.then, label %if.else, !dbg !4531

if.then:                                          ; preds = %land.lhs.true8
  %16 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4532
  %face10 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %16, i32 0, i32 3, !dbg !4534
  %17 = load [4 x i32]*, [4 x i32]** %face10, align 8, !dbg !4534
  %18 = load i32*, i32** %index, align 8, !dbg !4535
  %19 = load i32, i32* %18, align 4, !dbg !4536
  %idxprom = sext i32 %19 to i64, !dbg !4532
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %17, i64 %idxprom, !dbg !4532
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx, i64 0, i64 0, !dbg !4532
  store i32* %arraydecay, i32** %face, align 8, !dbg !4537
  %20 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4538
  %co11 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %20, i32 0, i32 4, !dbg !4539
  %21 = load [3 x float]*, [3 x float]** %co11, align 8, !dbg !4539
  %22 = load i32*, i32** %face, align 8, !dbg !4540
  %arrayidx12 = getelementptr inbounds i32, i32* %22, i64 0, !dbg !4540
  %23 = load i32, i32* %arrayidx12, align 4, !dbg !4540
  %idxprom13 = sext i32 %23 to i64, !dbg !4538
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom13, !dbg !4538
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !4538
  store float* %arraydecay15, float** %co1, align 8, !dbg !4541
  %24 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4542
  %co16 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %24, i32 0, i32 4, !dbg !4543
  %25 = load [3 x float]*, [3 x float]** %co16, align 8, !dbg !4543
  %26 = load i32*, i32** %face, align 8, !dbg !4544
  %arrayidx17 = getelementptr inbounds i32, i32* %26, i64 1, !dbg !4544
  %27 = load i32, i32* %arrayidx17, align 4, !dbg !4544
  %idxprom18 = sext i32 %27 to i64, !dbg !4542
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %25, i64 %idxprom18, !dbg !4542
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx19, i64 0, i64 0, !dbg !4542
  store float* %arraydecay20, float** %co2, align 8, !dbg !4545
  %28 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4546
  %co21 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %28, i32 0, i32 4, !dbg !4547
  %29 = load [3 x float]*, [3 x float]** %co21, align 8, !dbg !4547
  %30 = load i32*, i32** %face, align 8, !dbg !4548
  %arrayidx22 = getelementptr inbounds i32, i32* %30, i64 2, !dbg !4548
  %31 = load i32, i32* %arrayidx22, align 4, !dbg !4548
  %idxprom23 = sext i32 %31 to i64, !dbg !4546
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %29, i64 %idxprom23, !dbg !4546
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !4546
  store float* %arraydecay25, float** %co3, align 8, !dbg !4549
  %32 = load i32*, i32** %face, align 8, !dbg !4550
  %arrayidx26 = getelementptr inbounds i32, i32* %32, i64 3, !dbg !4550
  %33 = load i32, i32* %arrayidx26, align 4, !dbg !4550
  %tobool27 = icmp ne i32 %33, 0, !dbg !4551
  br i1 %tobool27, label %cond.true, label %cond.false, !dbg !4551

cond.true:                                        ; preds = %if.then
  %34 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4552
  %co28 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %34, i32 0, i32 4, !dbg !4553
  %35 = load [3 x float]*, [3 x float]** %co28, align 8, !dbg !4553
  %36 = load i32*, i32** %face, align 8, !dbg !4554
  %arrayidx29 = getelementptr inbounds i32, i32* %36, i64 3, !dbg !4554
  %37 = load i32, i32* %arrayidx29, align 4, !dbg !4554
  %idxprom30 = sext i32 %37 to i64, !dbg !4552
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %35, i64 %idxprom30, !dbg !4552
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !4552
  br label %cond.end, !dbg !4551

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay32, %cond.true ], [ null, %cond.false ], !dbg !4551
  store float* %cond, float** %co4, align 8, !dbg !4555
  %arraydecay33 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !4556
  %38 = load float*, float** %co1, align 8, !dbg !4557
  %39 = load float*, float** %co2, align 8, !dbg !4558
  %40 = load float*, float** %co3, align 8, !dbg !4559
  %41 = load float*, float** %co4, align 8, !dbg !4560
  %42 = load %struct.StrandRen*, %struct.StrandRen** %strand, align 8, !dbg !4561
  %vert = getelementptr inbounds %struct.StrandRen, %struct.StrandRen* %42, i32 0, i32 0, !dbg !4562
  %43 = load %struct.StrandVert*, %struct.StrandVert** %vert, align 8, !dbg !4562
  %co34 = getelementptr inbounds %struct.StrandVert, %struct.StrandVert* %43, i32 0, i32 0, !dbg !4563
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !4561
  call void @interp_weights_face_v3(float* %arraydecay33, float* %38, float* %39, float* %40, float* %41, float* %arraydecay35), !dbg !4564
  %44 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4565
  %ao36 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %44, i32 0, i32 100, !dbg !4566
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %ao36, i64 0, i64 0, !dbg !4565
  call void @zero_v3(float* %arraydecay37), !dbg !4567
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4568
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 102, !dbg !4569
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !4568
  call void @zero_v3(float* %arraydecay38), !dbg !4570
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4571
  %indirect = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %46, i32 0, i32 101, !dbg !4572
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !4571
  call void @zero_v3(float* %arraydecay39), !dbg !4573
  %47 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4574
  %ao40 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %47, i32 0, i32 100, !dbg !4575
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %ao40, i64 0, i64 0, !dbg !4574
  %48 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4576
  %ao42 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %48, i32 0, i32 5, !dbg !4577
  %49 = load [3 x float]*, [3 x float]** %ao42, align 8, !dbg !4577
  %50 = load i32*, i32** %face, align 8, !dbg !4578
  %arrayidx43 = getelementptr inbounds i32, i32* %50, i64 0, !dbg !4578
  %51 = load i32, i32* %arrayidx43, align 4, !dbg !4578
  %idxprom44 = sext i32 %51 to i64, !dbg !4576
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %49, i64 %idxprom44, !dbg !4576
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx45, i64 0, i64 0, !dbg !4576
  %arrayidx47 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !4579
  %52 = load float, float* %arrayidx47, align 16, !dbg !4579
  call void @madd_v3_v3fl(float* %arraydecay41, float* %arraydecay46, float %52), !dbg !4580
  %53 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4581
  %env48 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %53, i32 0, i32 102, !dbg !4582
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %env48, i64 0, i64 0, !dbg !4581
  %54 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4583
  %env50 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %54, i32 0, i32 6, !dbg !4584
  %55 = load [3 x float]*, [3 x float]** %env50, align 8, !dbg !4584
  %56 = load i32*, i32** %face, align 8, !dbg !4585
  %arrayidx51 = getelementptr inbounds i32, i32* %56, i64 0, !dbg !4585
  %57 = load i32, i32* %arrayidx51, align 4, !dbg !4585
  %idxprom52 = sext i32 %57 to i64, !dbg !4583
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %55, i64 %idxprom52, !dbg !4583
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !4583
  %arrayidx55 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !4586
  %58 = load float, float* %arrayidx55, align 16, !dbg !4586
  call void @madd_v3_v3fl(float* %arraydecay49, float* %arraydecay54, float %58), !dbg !4587
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4588
  %indirect56 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %59, i32 0, i32 101, !dbg !4589
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %indirect56, i64 0, i64 0, !dbg !4588
  %60 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4590
  %indirect58 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %60, i32 0, i32 7, !dbg !4591
  %61 = load [3 x float]*, [3 x float]** %indirect58, align 8, !dbg !4591
  %62 = load i32*, i32** %face, align 8, !dbg !4592
  %arrayidx59 = getelementptr inbounds i32, i32* %62, i64 0, !dbg !4592
  %63 = load i32, i32* %arrayidx59, align 4, !dbg !4592
  %idxprom60 = sext i32 %63 to i64, !dbg !4590
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %61, i64 %idxprom60, !dbg !4590
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx61, i64 0, i64 0, !dbg !4590
  %arrayidx63 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 0, !dbg !4593
  %64 = load float, float* %arrayidx63, align 16, !dbg !4593
  call void @madd_v3_v3fl(float* %arraydecay57, float* %arraydecay62, float %64), !dbg !4594
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4595
  %ao64 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 100, !dbg !4596
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %ao64, i64 0, i64 0, !dbg !4595
  %66 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4597
  %ao66 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %66, i32 0, i32 5, !dbg !4598
  %67 = load [3 x float]*, [3 x float]** %ao66, align 8, !dbg !4598
  %68 = load i32*, i32** %face, align 8, !dbg !4599
  %arrayidx67 = getelementptr inbounds i32, i32* %68, i64 1, !dbg !4599
  %69 = load i32, i32* %arrayidx67, align 4, !dbg !4599
  %idxprom68 = sext i32 %69 to i64, !dbg !4597
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %67, i64 %idxprom68, !dbg !4597
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 0, !dbg !4597
  %arrayidx71 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 1, !dbg !4600
  %70 = load float, float* %arrayidx71, align 4, !dbg !4600
  call void @madd_v3_v3fl(float* %arraydecay65, float* %arraydecay70, float %70), !dbg !4601
  %71 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4602
  %env72 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %71, i32 0, i32 102, !dbg !4603
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %env72, i64 0, i64 0, !dbg !4602
  %72 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4604
  %env74 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %72, i32 0, i32 6, !dbg !4605
  %73 = load [3 x float]*, [3 x float]** %env74, align 8, !dbg !4605
  %74 = load i32*, i32** %face, align 8, !dbg !4606
  %arrayidx75 = getelementptr inbounds i32, i32* %74, i64 1, !dbg !4606
  %75 = load i32, i32* %arrayidx75, align 4, !dbg !4606
  %idxprom76 = sext i32 %75 to i64, !dbg !4604
  %arrayidx77 = getelementptr inbounds [3 x float], [3 x float]* %73, i64 %idxprom76, !dbg !4604
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 0, !dbg !4604
  %arrayidx79 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 1, !dbg !4607
  %76 = load float, float* %arrayidx79, align 4, !dbg !4607
  call void @madd_v3_v3fl(float* %arraydecay73, float* %arraydecay78, float %76), !dbg !4608
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4609
  %indirect80 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 101, !dbg !4610
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %indirect80, i64 0, i64 0, !dbg !4609
  %78 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4611
  %indirect82 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %78, i32 0, i32 7, !dbg !4612
  %79 = load [3 x float]*, [3 x float]** %indirect82, align 8, !dbg !4612
  %80 = load i32*, i32** %face, align 8, !dbg !4613
  %arrayidx83 = getelementptr inbounds i32, i32* %80, i64 1, !dbg !4613
  %81 = load i32, i32* %arrayidx83, align 4, !dbg !4613
  %idxprom84 = sext i32 %81 to i64, !dbg !4611
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %79, i64 %idxprom84, !dbg !4611
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !4611
  %arrayidx87 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 1, !dbg !4614
  %82 = load float, float* %arrayidx87, align 4, !dbg !4614
  call void @madd_v3_v3fl(float* %arraydecay81, float* %arraydecay86, float %82), !dbg !4615
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4616
  %ao88 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %83, i32 0, i32 100, !dbg !4617
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %ao88, i64 0, i64 0, !dbg !4616
  %84 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4618
  %ao90 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %84, i32 0, i32 5, !dbg !4619
  %85 = load [3 x float]*, [3 x float]** %ao90, align 8, !dbg !4619
  %86 = load i32*, i32** %face, align 8, !dbg !4620
  %arrayidx91 = getelementptr inbounds i32, i32* %86, i64 2, !dbg !4620
  %87 = load i32, i32* %arrayidx91, align 4, !dbg !4620
  %idxprom92 = sext i32 %87 to i64, !dbg !4618
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %85, i64 %idxprom92, !dbg !4618
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !4618
  %arrayidx95 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 2, !dbg !4621
  %88 = load float, float* %arrayidx95, align 8, !dbg !4621
  call void @madd_v3_v3fl(float* %arraydecay89, float* %arraydecay94, float %88), !dbg !4622
  %89 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4623
  %env96 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %89, i32 0, i32 102, !dbg !4624
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %env96, i64 0, i64 0, !dbg !4623
  %90 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4625
  %env98 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %90, i32 0, i32 6, !dbg !4626
  %91 = load [3 x float]*, [3 x float]** %env98, align 8, !dbg !4626
  %92 = load i32*, i32** %face, align 8, !dbg !4627
  %arrayidx99 = getelementptr inbounds i32, i32* %92, i64 2, !dbg !4627
  %93 = load i32, i32* %arrayidx99, align 4, !dbg !4627
  %idxprom100 = sext i32 %93 to i64, !dbg !4625
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %91, i64 %idxprom100, !dbg !4625
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !4625
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 2, !dbg !4628
  %94 = load float, float* %arrayidx103, align 8, !dbg !4628
  call void @madd_v3_v3fl(float* %arraydecay97, float* %arraydecay102, float %94), !dbg !4629
  %95 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4630
  %indirect104 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %95, i32 0, i32 101, !dbg !4631
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %indirect104, i64 0, i64 0, !dbg !4630
  %96 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4632
  %indirect106 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %96, i32 0, i32 7, !dbg !4633
  %97 = load [3 x float]*, [3 x float]** %indirect106, align 8, !dbg !4633
  %98 = load i32*, i32** %face, align 8, !dbg !4634
  %arrayidx107 = getelementptr inbounds i32, i32* %98, i64 2, !dbg !4634
  %99 = load i32, i32* %arrayidx107, align 4, !dbg !4634
  %idxprom108 = sext i32 %99 to i64, !dbg !4632
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %97, i64 %idxprom108, !dbg !4632
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx109, i64 0, i64 0, !dbg !4632
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 2, !dbg !4635
  %100 = load float, float* %arrayidx111, align 8, !dbg !4635
  call void @madd_v3_v3fl(float* %arraydecay105, float* %arraydecay110, float %100), !dbg !4636
  %101 = load i32*, i32** %face, align 8, !dbg !4637
  %arrayidx112 = getelementptr inbounds i32, i32* %101, i64 3, !dbg !4637
  %102 = load i32, i32* %arrayidx112, align 4, !dbg !4637
  %tobool113 = icmp ne i32 %102, 0, !dbg !4637
  br i1 %tobool113, label %if.then114, label %if.end, !dbg !4639

if.then114:                                       ; preds = %cond.end
  %103 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4640
  %ao115 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %103, i32 0, i32 100, !dbg !4642
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %ao115, i64 0, i64 0, !dbg !4640
  %104 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4643
  %ao117 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %104, i32 0, i32 5, !dbg !4644
  %105 = load [3 x float]*, [3 x float]** %ao117, align 8, !dbg !4644
  %106 = load i32*, i32** %face, align 8, !dbg !4645
  %arrayidx118 = getelementptr inbounds i32, i32* %106, i64 3, !dbg !4645
  %107 = load i32, i32* %arrayidx118, align 4, !dbg !4645
  %idxprom119 = sext i32 %107 to i64, !dbg !4643
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %105, i64 %idxprom119, !dbg !4643
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx120, i64 0, i64 0, !dbg !4643
  %arrayidx122 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 3, !dbg !4646
  %108 = load float, float* %arrayidx122, align 4, !dbg !4646
  call void @madd_v3_v3fl(float* %arraydecay116, float* %arraydecay121, float %108), !dbg !4647
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4648
  %env123 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 102, !dbg !4649
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %env123, i64 0, i64 0, !dbg !4648
  %110 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4650
  %env125 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %110, i32 0, i32 6, !dbg !4651
  %111 = load [3 x float]*, [3 x float]** %env125, align 8, !dbg !4651
  %112 = load i32*, i32** %face, align 8, !dbg !4652
  %arrayidx126 = getelementptr inbounds i32, i32* %112, i64 3, !dbg !4652
  %113 = load i32, i32* %arrayidx126, align 4, !dbg !4652
  %idxprom127 = sext i32 %113 to i64, !dbg !4650
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %111, i64 %idxprom127, !dbg !4650
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx128, i64 0, i64 0, !dbg !4650
  %arrayidx130 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 3, !dbg !4653
  %114 = load float, float* %arrayidx130, align 4, !dbg !4653
  call void @madd_v3_v3fl(float* %arraydecay124, float* %arraydecay129, float %114), !dbg !4654
  %115 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4655
  %indirect131 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %115, i32 0, i32 101, !dbg !4656
  %arraydecay132 = getelementptr inbounds [3 x float], [3 x float]* %indirect131, i64 0, i64 0, !dbg !4655
  %116 = load %struct.StrandSurface*, %struct.StrandSurface** %mesh, align 8, !dbg !4657
  %indirect133 = getelementptr inbounds %struct.StrandSurface, %struct.StrandSurface* %116, i32 0, i32 7, !dbg !4658
  %117 = load [3 x float]*, [3 x float]** %indirect133, align 8, !dbg !4658
  %118 = load i32*, i32** %face, align 8, !dbg !4659
  %arrayidx134 = getelementptr inbounds i32, i32* %118, i64 3, !dbg !4659
  %119 = load i32, i32* %arrayidx134, align 4, !dbg !4659
  %idxprom135 = sext i32 %119 to i64, !dbg !4657
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %117, i64 %idxprom135, !dbg !4657
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx136, i64 0, i64 0, !dbg !4657
  %arrayidx138 = getelementptr inbounds [4 x float], [4 x float]* %w, i64 0, i64 3, !dbg !4660
  %120 = load float, float* %arrayidx138, align 4, !dbg !4660
  call void @madd_v3_v3fl(float* %arraydecay132, float* %arraydecay137, float %120), !dbg !4661
  br label %if.end, !dbg !4662

if.end:                                           ; preds = %if.then114, %cond.end
  br label %if.end149, !dbg !4663

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %land.lhs.true, %entry
  %121 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4664
  %ao139 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %121, i32 0, i32 100, !dbg !4666
  %arrayidx140 = getelementptr inbounds [3 x float], [3 x float]* %ao139, i64 0, i64 0, !dbg !4664
  store float 1.000000e+00, float* %arrayidx140, align 8, !dbg !4667
  %122 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4668
  %ao141 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %122, i32 0, i32 100, !dbg !4669
  %arrayidx142 = getelementptr inbounds [3 x float], [3 x float]* %ao141, i64 0, i64 1, !dbg !4668
  store float 1.000000e+00, float* %arrayidx142, align 4, !dbg !4670
  %123 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4671
  %ao143 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %123, i32 0, i32 100, !dbg !4672
  %arrayidx144 = getelementptr inbounds [3 x float], [3 x float]* %ao143, i64 0, i64 2, !dbg !4671
  store float 1.000000e+00, float* %arrayidx144, align 8, !dbg !4673
  %124 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4674
  %env145 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %124, i32 0, i32 102, !dbg !4675
  %arraydecay146 = getelementptr inbounds [3 x float], [3 x float]* %env145, i64 0, i64 0, !dbg !4674
  call void @zero_v3(float* %arraydecay146), !dbg !4676
  %125 = load %struct.ShadeInput*, %struct.ShadeInput** %shi.addr, align 8, !dbg !4677
  %indirect147 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %125, i32 0, i32 101, !dbg !4678
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %indirect147, i64 0, i64 0, !dbg !4677
  call void @zero_v3(float* %arraydecay148), !dbg !4679
  br label %if.end149

if.end149:                                        ; preds = %if.else, %if.end
  ret void, !dbg !4680
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @sample_occ_cache(%struct.OcclusionTree* %tree, float* %co, float* %n, i32 %x, i32 %y, i32 %thread, float* %ao, float* %env, float* %indirect) #0 !dbg !4681 {
entry:
  %retval = alloca i32, align 4
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %co.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %thread.addr = alloca i32, align 4
  %ao.addr = alloca float*, align 8
  %env.addr = alloca float*, align 8
  %indirect.addr = alloca float*, align 8
  %cache = alloca %struct.OcclusionCache*, align 8
  %samples = alloca [4 x %struct.OcclusionCacheSample*], align 16
  %sample = alloca %struct.OcclusionCacheSample*, align 8
  %wn = alloca [4 x float], align 16
  %wz = alloca [4 x float], align 16
  %wb = alloca [4 x float], align 16
  %tx = alloca float, align 4
  %ty = alloca float, align 4
  %w = alloca float, align 4
  %totw = alloca float, align 4
  %mino = alloca float, align 4
  %maxo = alloca float, align 4
  %d = alloca [3 x float], align 4
  %dist2 = alloca float, align 4
  %i = alloca i32, align 4
  %x1 = alloca i32, align 4
  %y1 = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !4684, metadata !DIExpression()), !dbg !4685
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !4686, metadata !DIExpression()), !dbg !4687
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !4688, metadata !DIExpression()), !dbg !4689
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !4690, metadata !DIExpression()), !dbg !4691
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !4692, metadata !DIExpression()), !dbg !4693
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !4694, metadata !DIExpression()), !dbg !4695
  store float* %ao, float** %ao.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ao.addr, metadata !4696, metadata !DIExpression()), !dbg !4697
  store float* %env, float** %env.addr, align 8
  call void @llvm.dbg.declare(metadata float** %env.addr, metadata !4698, metadata !DIExpression()), !dbg !4699
  store float* %indirect, float** %indirect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %indirect.addr, metadata !4700, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.declare(metadata %struct.OcclusionCache** %cache, metadata !4702, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.declare(metadata [4 x %struct.OcclusionCacheSample*]* %samples, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.declare(metadata %struct.OcclusionCacheSample** %sample, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata [4 x float]* %wn, metadata !4709, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.declare(metadata [4 x float]* %wz, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata [4 x float]* %wb, metadata !4713, metadata !DIExpression()), !dbg !4714
  call void @llvm.dbg.declare(metadata float* %tx, metadata !4715, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata float* %ty, metadata !4717, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.declare(metadata float* %w, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata float* %totw, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.declare(metadata float* %mino, metadata !4723, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.declare(metadata float* %maxo, metadata !4725, metadata !DIExpression()), !dbg !4726
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !4727, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata float* %dist2, metadata !4729, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4731, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.declare(metadata i32* %x1, metadata !4733, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.declare(metadata i32* %y1, metadata !4735, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.declare(metadata i32* %x2, metadata !4737, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.declare(metadata i32* %y2, metadata !4739, metadata !DIExpression()), !dbg !4740
  %0 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4741
  %cache1 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %0, i32 0, i32 14, !dbg !4743
  %1 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache1, align 8, !dbg !4743
  %tobool = icmp ne %struct.OcclusionCache* %1, null, !dbg !4741
  br i1 %tobool, label %if.end, label %if.then, !dbg !4744

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4745
  br label %return, !dbg !4745

if.end:                                           ; preds = %entry
  %2 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !4746
  %cache2 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %2, i32 0, i32 14, !dbg !4747
  %3 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache2, align 8, !dbg !4747
  %4 = load i32, i32* %thread.addr, align 4, !dbg !4748
  %idxprom = sext i32 %4 to i64, !dbg !4746
  %arrayidx = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %3, i64 %idxprom, !dbg !4746
  store %struct.OcclusionCache* %arrayidx, %struct.OcclusionCache** %cache, align 8, !dbg !4749
  %5 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4750
  %sample3 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %5, i32 0, i32 0, !dbg !4752
  %6 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample3, align 8, !dbg !4752
  %tobool4 = icmp ne %struct.OcclusionCacheSample* %6, null, !dbg !4750
  br i1 %tobool4, label %land.lhs.true, label %if.else, !dbg !4753

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4754
  %step = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %7, i32 0, i32 5, !dbg !4755
  %8 = load i32, i32* %step, align 8, !dbg !4755
  %tobool5 = icmp ne i32 %8, 0, !dbg !4754
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4756

if.then6:                                         ; preds = %land.lhs.true
  %9 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4757
  %sample7 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %9, i32 0, i32 0, !dbg !4759
  %10 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample7, align 8, !dbg !4759
  %11 = load i32, i32* %y.addr, align 4, !dbg !4760
  %12 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4761
  %y8 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %12, i32 0, i32 2, !dbg !4762
  %13 = load i32, i32* %y8, align 4, !dbg !4762
  %sub = sub nsw i32 %11, %13, !dbg !4763
  %14 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4764
  %w9 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %14, i32 0, i32 3, !dbg !4765
  %15 = load i32, i32* %w9, align 8, !dbg !4765
  %mul = mul nsw i32 %sub, %15, !dbg !4766
  %16 = load i32, i32* %x.addr, align 4, !dbg !4767
  %17 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4768
  %x10 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %17, i32 0, i32 1, !dbg !4769
  %18 = load i32, i32* %x10, align 8, !dbg !4769
  %sub11 = sub nsw i32 %16, %18, !dbg !4770
  %add = add nsw i32 %mul, %sub11, !dbg !4771
  %idxprom12 = sext i32 %add to i64, !dbg !4757
  %arrayidx13 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %10, i64 %idxprom12, !dbg !4757
  store %struct.OcclusionCacheSample* %arrayidx13, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4772
  %19 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4773
  %filled = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %19, i32 0, i32 9, !dbg !4775
  %20 = load i32, i32* %filled, align 4, !dbg !4775
  %tobool14 = icmp ne i32 %20, 0, !dbg !4773
  br i1 %tobool14, label %if.then15, label %if.end35, !dbg !4776

if.then15:                                        ; preds = %if.then6
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4777
  %21 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4779
  %co16 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %21, i32 0, i32 0, !dbg !4780
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co16, i64 0, i64 0, !dbg !4779
  %22 = load float*, float** %co.addr, align 8, !dbg !4781
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay17, float* %22), !dbg !4782
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4783
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4784
  %call = call float @dot_v3v3(float* %arraydecay18, float* %arraydecay19), !dbg !4785
  store float %call, float* %dist2, align 4, !dbg !4786
  %23 = load float, float* %dist2, align 4, !dbg !4787
  %24 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4789
  %dist220 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %24, i32 0, i32 6, !dbg !4790
  %25 = load float, float* %dist220, align 4, !dbg !4790
  %mul21 = fmul float 5.000000e-01, %25, !dbg !4791
  %cmp = fcmp olt float %23, %mul21, !dbg !4792
  br i1 %cmp, label %land.lhs.true22, label %if.end34, !dbg !4793

land.lhs.true22:                                  ; preds = %if.then15
  %26 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4794
  %n23 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %26, i32 0, i32 1, !dbg !4795
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %n23, i64 0, i64 0, !dbg !4794
  %27 = load float*, float** %n.addr, align 8, !dbg !4796
  %call25 = call float @dot_v3v3(float* %arraydecay24, float* %27), !dbg !4797
  %cmp26 = fcmp ogt float %call25, 0x3FEF5C2900000000, !dbg !4798
  br i1 %cmp26, label %if.then27, label %if.end34, !dbg !4799

if.then27:                                        ; preds = %land.lhs.true22
  %28 = load float*, float** %ao.addr, align 8, !dbg !4800
  %29 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4802
  %ao28 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %29, i32 0, i32 2, !dbg !4803
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %ao28, i64 0, i64 0, !dbg !4802
  call void @copy_v3_v3(float* %28, float* %arraydecay29), !dbg !4804
  %30 = load float*, float** %env.addr, align 8, !dbg !4805
  %31 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4806
  %env30 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %31, i32 0, i32 3, !dbg !4807
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %env30, i64 0, i64 0, !dbg !4806
  call void @copy_v3_v3(float* %30, float* %arraydecay31), !dbg !4808
  %32 = load float*, float** %indirect.addr, align 8, !dbg !4809
  %33 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !4810
  %indirect32 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %33, i32 0, i32 4, !dbg !4811
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %indirect32, i64 0, i64 0, !dbg !4810
  call void @copy_v3_v3(float* %32, float* %arraydecay33), !dbg !4812
  store i32 1, i32* %retval, align 4, !dbg !4813
  br label %return, !dbg !4813

if.end34:                                         ; preds = %land.lhs.true22, %if.then15
  br label %if.end35, !dbg !4814

if.end35:                                         ; preds = %if.end34, %if.then6
  br label %if.end36, !dbg !4815

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !4816
  br label %return, !dbg !4816

if.end36:                                         ; preds = %if.end35
  %34 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4817
  %35 = load i32, i32* %x.addr, align 4, !dbg !4818
  %36 = load i32, i32* %y.addr, align 4, !dbg !4819
  %call37 = call %struct.OcclusionCacheSample* @find_occ_sample(%struct.OcclusionCache* %34, i32 %35, i32 %36), !dbg !4820
  %arrayidx38 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 0, !dbg !4821
  store %struct.OcclusionCacheSample* %call37, %struct.OcclusionCacheSample** %arrayidx38, align 16, !dbg !4822
  %37 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4823
  %38 = load i32, i32* %x.addr, align 4, !dbg !4824
  %39 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4825
  %step39 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %39, i32 0, i32 5, !dbg !4826
  %40 = load i32, i32* %step39, align 8, !dbg !4826
  %add40 = add nsw i32 %38, %40, !dbg !4827
  %41 = load i32, i32* %y.addr, align 4, !dbg !4828
  %call41 = call %struct.OcclusionCacheSample* @find_occ_sample(%struct.OcclusionCache* %37, i32 %add40, i32 %41), !dbg !4829
  %arrayidx42 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 1, !dbg !4830
  store %struct.OcclusionCacheSample* %call41, %struct.OcclusionCacheSample** %arrayidx42, align 8, !dbg !4831
  %42 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4832
  %43 = load i32, i32* %x.addr, align 4, !dbg !4833
  %44 = load i32, i32* %y.addr, align 4, !dbg !4834
  %45 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4835
  %step43 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %45, i32 0, i32 5, !dbg !4836
  %46 = load i32, i32* %step43, align 8, !dbg !4836
  %add44 = add nsw i32 %44, %46, !dbg !4837
  %call45 = call %struct.OcclusionCacheSample* @find_occ_sample(%struct.OcclusionCache* %42, i32 %43, i32 %add44), !dbg !4838
  %arrayidx46 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 2, !dbg !4839
  store %struct.OcclusionCacheSample* %call45, %struct.OcclusionCacheSample** %arrayidx46, align 16, !dbg !4840
  %47 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4841
  %48 = load i32, i32* %x.addr, align 4, !dbg !4842
  %49 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4843
  %step47 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %49, i32 0, i32 5, !dbg !4844
  %50 = load i32, i32* %step47, align 8, !dbg !4844
  %add48 = add nsw i32 %48, %50, !dbg !4845
  %51 = load i32, i32* %y.addr, align 4, !dbg !4846
  %52 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !4847
  %step49 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %52, i32 0, i32 5, !dbg !4848
  %53 = load i32, i32* %step49, align 8, !dbg !4848
  %add50 = add nsw i32 %51, %53, !dbg !4849
  %call51 = call %struct.OcclusionCacheSample* @find_occ_sample(%struct.OcclusionCache* %47, i32 %add48, i32 %add50), !dbg !4850
  %arrayidx52 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 3, !dbg !4851
  store %struct.OcclusionCacheSample* %call51, %struct.OcclusionCacheSample** %arrayidx52, align 8, !dbg !4852
  store i32 0, i32* %i, align 4, !dbg !4853
  br label %for.cond, !dbg !4855

for.cond:                                         ; preds = %for.inc, %if.end36
  %54 = load i32, i32* %i, align 4, !dbg !4856
  %cmp53 = icmp slt i32 %54, 4, !dbg !4858
  br i1 %cmp53, label %for.body, label %for.end, !dbg !4859

for.body:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4, !dbg !4860
  %idxprom54 = sext i32 %55 to i64, !dbg !4862
  %arrayidx55 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom54, !dbg !4862
  %56 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx55, align 8, !dbg !4862
  %tobool56 = icmp ne %struct.OcclusionCacheSample* %56, null, !dbg !4862
  br i1 %tobool56, label %lor.lhs.false, label %if.then61, !dbg !4863

lor.lhs.false:                                    ; preds = %for.body
  %57 = load i32, i32* %i, align 4, !dbg !4864
  %idxprom57 = sext i32 %57 to i64, !dbg !4865
  %arrayidx58 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom57, !dbg !4865
  %58 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx58, align 8, !dbg !4865
  %filled59 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %58, i32 0, i32 9, !dbg !4866
  %59 = load i32, i32* %filled59, align 4, !dbg !4866
  %tobool60 = icmp ne i32 %59, 0, !dbg !4865
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !4867

if.then61:                                        ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* %retval, align 4, !dbg !4868
  br label %return, !dbg !4868

if.end62:                                         ; preds = %lor.lhs.false
  br label %for.inc, !dbg !4866

for.inc:                                          ; preds = %if.end62
  %60 = load i32, i32* %i, align 4, !dbg !4869
  %inc = add nsw i32 %60, 1, !dbg !4869
  store i32 %inc, i32* %i, align 4, !dbg !4869
  br label %for.cond, !dbg !4870, !llvm.loop !4871

for.end:                                          ; preds = %for.cond
  %arrayidx63 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 0, !dbg !4873
  %61 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx63, align 16, !dbg !4873
  %intensity = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %61, i32 0, i32 5, !dbg !4874
  %62 = load float, float* %intensity, align 4, !dbg !4874
  %arrayidx64 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 1, !dbg !4875
  %63 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx64, align 8, !dbg !4875
  %intensity65 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %63, i32 0, i32 5, !dbg !4876
  %64 = load float, float* %intensity65, align 4, !dbg !4876
  %arrayidx66 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 2, !dbg !4877
  %65 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx66, align 16, !dbg !4877
  %intensity67 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %65, i32 0, i32 5, !dbg !4878
  %66 = load float, float* %intensity67, align 4, !dbg !4878
  %arrayidx68 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 3, !dbg !4879
  %67 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx68, align 8, !dbg !4879
  %intensity69 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %67, i32 0, i32 5, !dbg !4880
  %68 = load float, float* %intensity69, align 4, !dbg !4880
  %call70 = call float @min_ffff(float %62, float %64, float %66, float %68), !dbg !4881
  store float %call70, float* %mino, align 4, !dbg !4882
  %arrayidx71 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 0, !dbg !4883
  %69 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx71, align 16, !dbg !4883
  %intensity72 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %69, i32 0, i32 5, !dbg !4884
  %70 = load float, float* %intensity72, align 4, !dbg !4884
  %arrayidx73 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 1, !dbg !4885
  %71 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx73, align 8, !dbg !4885
  %intensity74 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %71, i32 0, i32 5, !dbg !4886
  %72 = load float, float* %intensity74, align 4, !dbg !4886
  %arrayidx75 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 2, !dbg !4887
  %73 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx75, align 16, !dbg !4887
  %intensity76 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %73, i32 0, i32 5, !dbg !4888
  %74 = load float, float* %intensity76, align 4, !dbg !4888
  %arrayidx77 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 3, !dbg !4889
  %75 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx77, align 8, !dbg !4889
  %intensity78 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %75, i32 0, i32 5, !dbg !4890
  %76 = load float, float* %intensity78, align 4, !dbg !4890
  %call79 = call float @max_ffff(float %70, float %72, float %74, float %76), !dbg !4891
  store float %call79, float* %maxo, align 4, !dbg !4892
  %77 = load float, float* %maxo, align 4, !dbg !4893
  %78 = load float, float* %mino, align 4, !dbg !4895
  %sub80 = fsub float %77, %78, !dbg !4896
  %cmp81 = fcmp ogt float %sub80, 0x3FA99999A0000000, !dbg !4897
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !4898

if.then82:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !4899
  br label %return, !dbg !4899

if.end83:                                         ; preds = %for.end
  %79 = load float*, float** %ao.addr, align 8, !dbg !4900
  call void @zero_v3(float* %79), !dbg !4901
  %80 = load float*, float** %env.addr, align 8, !dbg !4902
  call void @zero_v3(float* %80), !dbg !4903
  %81 = load float*, float** %indirect.addr, align 8, !dbg !4904
  call void @zero_v3(float* %81), !dbg !4905
  store float 0.000000e+00, float* %totw, align 4, !dbg !4906
  %arrayidx84 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 0, !dbg !4907
  %82 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx84, align 16, !dbg !4907
  %x85 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %82, i32 0, i32 7, !dbg !4908
  %83 = load i32, i32* %x85, align 4, !dbg !4908
  store i32 %83, i32* %x1, align 4, !dbg !4909
  %arrayidx86 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 0, !dbg !4910
  %84 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx86, align 16, !dbg !4910
  %y87 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %84, i32 0, i32 8, !dbg !4911
  %85 = load i32, i32* %y87, align 4, !dbg !4911
  store i32 %85, i32* %y1, align 4, !dbg !4912
  %arrayidx88 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 3, !dbg !4913
  %86 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx88, align 8, !dbg !4913
  %x89 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %86, i32 0, i32 7, !dbg !4914
  %87 = load i32, i32* %x89, align 4, !dbg !4914
  store i32 %87, i32* %x2, align 4, !dbg !4915
  %arrayidx90 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 3, !dbg !4916
  %88 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx90, align 8, !dbg !4916
  %y91 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %88, i32 0, i32 8, !dbg !4917
  %89 = load i32, i32* %y91, align 4, !dbg !4917
  store i32 %89, i32* %y2, align 4, !dbg !4918
  %90 = load i32, i32* %x2, align 4, !dbg !4919
  %91 = load i32, i32* %x.addr, align 4, !dbg !4920
  %sub92 = sub nsw i32 %90, %91, !dbg !4921
  %conv = sitofp i32 %sub92 to float, !dbg !4922
  %92 = load i32, i32* %x2, align 4, !dbg !4923
  %93 = load i32, i32* %x1, align 4, !dbg !4924
  %sub93 = sub nsw i32 %92, %93, !dbg !4925
  %conv94 = sitofp i32 %sub93 to float, !dbg !4926
  %div = fdiv float %conv, %conv94, !dbg !4927
  store float %div, float* %tx, align 4, !dbg !4928
  %94 = load i32, i32* %y2, align 4, !dbg !4929
  %95 = load i32, i32* %y.addr, align 4, !dbg !4930
  %sub95 = sub nsw i32 %94, %95, !dbg !4931
  %conv96 = sitofp i32 %sub95 to float, !dbg !4932
  %96 = load i32, i32* %y2, align 4, !dbg !4933
  %97 = load i32, i32* %y1, align 4, !dbg !4934
  %sub97 = sub nsw i32 %96, %97, !dbg !4935
  %conv98 = sitofp i32 %sub97 to float, !dbg !4936
  %div99 = fdiv float %conv96, %conv98, !dbg !4937
  store float %div99, float* %ty, align 4, !dbg !4938
  %98 = load float, float* %tx, align 4, !dbg !4939
  %sub100 = fsub float 1.000000e+00, %98, !dbg !4940
  %99 = load float, float* %ty, align 4, !dbg !4941
  %sub101 = fsub float 1.000000e+00, %99, !dbg !4942
  %mul102 = fmul float %sub100, %sub101, !dbg !4943
  %arrayidx103 = getelementptr inbounds [4 x float], [4 x float]* %wb, i64 0, i64 3, !dbg !4944
  store float %mul102, float* %arrayidx103, align 4, !dbg !4945
  %100 = load float, float* %tx, align 4, !dbg !4946
  %101 = load float, float* %ty, align 4, !dbg !4947
  %sub104 = fsub float 1.000000e+00, %101, !dbg !4948
  %mul105 = fmul float %100, %sub104, !dbg !4949
  %arrayidx106 = getelementptr inbounds [4 x float], [4 x float]* %wb, i64 0, i64 2, !dbg !4950
  store float %mul105, float* %arrayidx106, align 8, !dbg !4951
  %102 = load float, float* %tx, align 4, !dbg !4952
  %sub107 = fsub float 1.000000e+00, %102, !dbg !4953
  %103 = load float, float* %ty, align 4, !dbg !4954
  %mul108 = fmul float %sub107, %103, !dbg !4955
  %arrayidx109 = getelementptr inbounds [4 x float], [4 x float]* %wb, i64 0, i64 1, !dbg !4956
  store float %mul108, float* %arrayidx109, align 4, !dbg !4957
  %104 = load float, float* %tx, align 4, !dbg !4958
  %105 = load float, float* %ty, align 4, !dbg !4959
  %mul110 = fmul float %104, %105, !dbg !4960
  %arrayidx111 = getelementptr inbounds [4 x float], [4 x float]* %wb, i64 0, i64 0, !dbg !4961
  store float %mul110, float* %arrayidx111, align 16, !dbg !4962
  store i32 0, i32* %i, align 4, !dbg !4963
  br label %for.cond112, !dbg !4965

for.cond112:                                      ; preds = %for.inc154, %if.end83
  %106 = load i32, i32* %i, align 4, !dbg !4966
  %cmp113 = icmp slt i32 %106, 4, !dbg !4968
  br i1 %cmp113, label %for.body115, label %for.end156, !dbg !4969

for.body115:                                      ; preds = %for.cond112
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !4970
  %107 = load i32, i32* %i, align 4, !dbg !4972
  %idxprom117 = sext i32 %107 to i64, !dbg !4973
  %arrayidx118 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom117, !dbg !4973
  %108 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx118, align 8, !dbg !4973
  %co119 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %108, i32 0, i32 0, !dbg !4974
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %co119, i64 0, i64 0, !dbg !4973
  %109 = load float*, float** %co.addr, align 8, !dbg !4975
  call void @sub_v3_v3v3(float* %arraydecay116, float* %arraydecay120, float* %109), !dbg !4976
  %110 = load i32, i32* %i, align 4, !dbg !4977
  %idxprom121 = sext i32 %110 to i64, !dbg !4978
  %arrayidx122 = getelementptr inbounds [4 x float], [4 x float]* %wz, i64 0, i64 %idxprom121, !dbg !4978
  store float 1.000000e+00, float* %arrayidx122, align 4, !dbg !4979
  %111 = load i32, i32* %i, align 4, !dbg !4980
  %idxprom123 = sext i32 %111 to i64, !dbg !4981
  %arrayidx124 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom123, !dbg !4981
  %112 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx124, align 8, !dbg !4981
  %n125 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %112, i32 0, i32 1, !dbg !4982
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %n125, i64 0, i64 0, !dbg !4981
  %113 = load float*, float** %n.addr, align 8, !dbg !4983
  %call127 = call float @dot_v3v3(float* %arraydecay126, float* %113), !dbg !4984
  %conv128 = fpext float %call127 to double, !dbg !4984
  %call129 = call double @pow(double %conv128, double 3.200000e+01) #5, !dbg !4985
  %conv130 = fptrunc double %call129 to float, !dbg !4985
  %114 = load i32, i32* %i, align 4, !dbg !4986
  %idxprom131 = sext i32 %114 to i64, !dbg !4987
  %arrayidx132 = getelementptr inbounds [4 x float], [4 x float]* %wn, i64 0, i64 %idxprom131, !dbg !4987
  store float %conv130, float* %arrayidx132, align 4, !dbg !4988
  %115 = load i32, i32* %i, align 4, !dbg !4989
  %idxprom133 = sext i32 %115 to i64, !dbg !4990
  %arrayidx134 = getelementptr inbounds [4 x float], [4 x float]* %wb, i64 0, i64 %idxprom133, !dbg !4990
  %116 = load float, float* %arrayidx134, align 4, !dbg !4990
  %117 = load i32, i32* %i, align 4, !dbg !4991
  %idxprom135 = sext i32 %117 to i64, !dbg !4992
  %arrayidx136 = getelementptr inbounds [4 x float], [4 x float]* %wn, i64 0, i64 %idxprom135, !dbg !4992
  %118 = load float, float* %arrayidx136, align 4, !dbg !4992
  %mul137 = fmul float %116, %118, !dbg !4993
  %119 = load i32, i32* %i, align 4, !dbg !4994
  %idxprom138 = sext i32 %119 to i64, !dbg !4995
  %arrayidx139 = getelementptr inbounds [4 x float], [4 x float]* %wz, i64 0, i64 %idxprom138, !dbg !4995
  %120 = load float, float* %arrayidx139, align 4, !dbg !4995
  %mul140 = fmul float %mul137, %120, !dbg !4996
  store float %mul140, float* %w, align 4, !dbg !4997
  %121 = load float, float* %w, align 4, !dbg !4998
  %122 = load float, float* %totw, align 4, !dbg !4999
  %add141 = fadd float %122, %121, !dbg !4999
  store float %add141, float* %totw, align 4, !dbg !4999
  %123 = load float*, float** %ao.addr, align 8, !dbg !5000
  %124 = load i32, i32* %i, align 4, !dbg !5001
  %idxprom142 = sext i32 %124 to i64, !dbg !5002
  %arrayidx143 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom142, !dbg !5002
  %125 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx143, align 8, !dbg !5002
  %ao144 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %125, i32 0, i32 2, !dbg !5003
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %ao144, i64 0, i64 0, !dbg !5002
  %126 = load float, float* %w, align 4, !dbg !5004
  call void @madd_v3_v3fl(float* %123, float* %arraydecay145, float %126), !dbg !5005
  %127 = load float*, float** %env.addr, align 8, !dbg !5006
  %128 = load i32, i32* %i, align 4, !dbg !5007
  %idxprom146 = sext i32 %128 to i64, !dbg !5008
  %arrayidx147 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom146, !dbg !5008
  %129 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx147, align 8, !dbg !5008
  %env148 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %129, i32 0, i32 3, !dbg !5009
  %arraydecay149 = getelementptr inbounds [3 x float], [3 x float]* %env148, i64 0, i64 0, !dbg !5008
  %130 = load float, float* %w, align 4, !dbg !5010
  call void @madd_v3_v3fl(float* %127, float* %arraydecay149, float %130), !dbg !5011
  %131 = load float*, float** %indirect.addr, align 8, !dbg !5012
  %132 = load i32, i32* %i, align 4, !dbg !5013
  %idxprom150 = sext i32 %132 to i64, !dbg !5014
  %arrayidx151 = getelementptr inbounds [4 x %struct.OcclusionCacheSample*], [4 x %struct.OcclusionCacheSample*]* %samples, i64 0, i64 %idxprom150, !dbg !5014
  %133 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %arrayidx151, align 8, !dbg !5014
  %indirect152 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %133, i32 0, i32 4, !dbg !5015
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %indirect152, i64 0, i64 0, !dbg !5014
  %134 = load float, float* %w, align 4, !dbg !5016
  call void @madd_v3_v3fl(float* %131, float* %arraydecay153, float %134), !dbg !5017
  br label %for.inc154, !dbg !5018

for.inc154:                                       ; preds = %for.body115
  %135 = load i32, i32* %i, align 4, !dbg !5019
  %inc155 = add nsw i32 %135, 1, !dbg !5019
  store i32 %inc155, i32* %i, align 4, !dbg !5019
  br label %for.cond112, !dbg !5020, !llvm.loop !5021

for.end156:                                       ; preds = %for.cond112
  %136 = load float, float* %totw, align 4, !dbg !5023
  %cmp157 = fcmp oge float %136, 0x3FECCCCCC0000000, !dbg !5025
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !5026

if.then159:                                       ; preds = %for.end156
  %137 = load float, float* %totw, align 4, !dbg !5027
  %div160 = fdiv float 1.000000e+00, %137, !dbg !5029
  store float %div160, float* %totw, align 4, !dbg !5030
  %138 = load float*, float** %ao.addr, align 8, !dbg !5031
  %139 = load float, float* %totw, align 4, !dbg !5032
  call void @mul_v3_fl(float* %138, float %139), !dbg !5033
  %140 = load float*, float** %env.addr, align 8, !dbg !5034
  %141 = load float, float* %totw, align 4, !dbg !5035
  call void @mul_v3_fl(float* %140, float %141), !dbg !5036
  %142 = load float*, float** %indirect.addr, align 8, !dbg !5037
  %143 = load float, float* %totw, align 4, !dbg !5038
  call void @mul_v3_fl(float* %142, float %143), !dbg !5039
  store i32 1, i32* %retval, align 4, !dbg !5040
  br label %return, !dbg !5040

if.end161:                                        ; preds = %for.end156
  store i32 0, i32* %retval, align 4, !dbg !5041
  br label %return, !dbg !5041

return:                                           ; preds = %if.end161, %if.then159, %if.then82, %if.then61, %if.else, %if.then27, %if.then
  %144 = load i32, i32* %retval, align 4, !dbg !5042
  ret i32 %144, !dbg !5042
}

; Function Attrs: noinline nounwind uwtable
define internal void @sample_occ_tree(%struct.Render* %re, %struct.OcclusionTree* %tree, %struct.OccFace* %exclude, float* %co, float* %n, i32 %thread, i32 %onlyshadow, float* %ao, float* %env, float* %indirect) #0 !dbg !5043 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %exclude.addr = alloca %struct.OccFace*, align 8
  %co.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %thread.addr = alloca i32, align 4
  %onlyshadow.addr = alloca i32, align 4
  %ao.addr = alloca float*, align 8
  %env.addr = alloca float*, align 8
  %indirect.addr = alloca float*, align 8
  %nn = alloca [3 x float], align 4
  %bn = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %occ = alloca float, align 4
  %occlusion = alloca float, align 4
  %correction = alloca float, align 4
  %rad = alloca [3 x float], align 4
  %envcolor = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !5048, metadata !DIExpression()), !dbg !5049
  store %struct.OccFace* %exclude, %struct.OccFace** %exclude.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccFace** %exclude.addr, metadata !5050, metadata !DIExpression()), !dbg !5051
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5052, metadata !DIExpression()), !dbg !5053
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !5054, metadata !DIExpression()), !dbg !5055
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !5056, metadata !DIExpression()), !dbg !5057
  store i32 %onlyshadow, i32* %onlyshadow.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onlyshadow.addr, metadata !5058, metadata !DIExpression()), !dbg !5059
  store float* %ao, float** %ao.addr, align 8
  call void @llvm.dbg.declare(metadata float** %ao.addr, metadata !5060, metadata !DIExpression()), !dbg !5061
  store float* %env, float** %env.addr, align 8
  call void @llvm.dbg.declare(metadata float** %env.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store float* %indirect, float** %indirect.addr, align 8
  call void @llvm.dbg.declare(metadata float** %indirect.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata [3 x float]* %nn, metadata !5066, metadata !DIExpression()), !dbg !5067
  call void @llvm.dbg.declare(metadata [3 x float]* %bn, metadata !5068, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5070, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.declare(metadata float* %occ, metadata !5072, metadata !DIExpression()), !dbg !5073
  call void @llvm.dbg.declare(metadata float* %occlusion, metadata !5074, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.declare(metadata float* %correction, metadata !5076, metadata !DIExpression()), !dbg !5077
  call void @llvm.dbg.declare(metadata [3 x float]* %rad, metadata !5078, metadata !DIExpression()), !dbg !5079
  call void @llvm.dbg.declare(metadata i32* %envcolor, metadata !5080, metadata !DIExpression()), !dbg !5081
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5082
  %wrld = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 46, !dbg !5083
  %aocolor = getelementptr inbounds %struct.World, %struct.World* %wrld, i32 0, i32 53, !dbg !5084
  %1 = load i16, i16* %aocolor, align 2, !dbg !5084
  %conv = sext i16 %1 to i32, !dbg !5082
  store i32 %conv, i32* %envcolor, align 4, !dbg !5085
  %2 = load i32, i32* %onlyshadow.addr, align 4, !dbg !5086
  %tobool = icmp ne i32 %2, 0, !dbg !5086
  br i1 %tobool, label %if.then, label %if.end, !dbg !5088

if.then:                                          ; preds = %entry
  store i32 0, i32* %envcolor, align 4, !dbg !5089
  br label %if.end, !dbg !5090

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nn, i64 0, i64 0, !dbg !5091
  %3 = load float*, float** %n.addr, align 8, !dbg !5092
  call void @negate_v3_v3(float* %arraydecay, float* %3), !dbg !5093
  %4 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !5094
  %5 = load i32, i32* %thread.addr, align 4, !dbg !5095
  %6 = load %struct.OccFace*, %struct.OccFace** %exclude.addr, align 8, !dbg !5096
  %7 = load float*, float** %co.addr, align 8, !dbg !5097
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %nn, i64 0, i64 0, !dbg !5098
  %8 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !5099
  %doindirect = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %8, i32 0, i32 13, !dbg !5100
  %9 = load i32, i32* %doindirect, align 8, !dbg !5100
  %tobool2 = icmp ne i32 %9, 0, !dbg !5101
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !5101

cond.true:                                        ; preds = %if.end
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !5102
  br label %cond.end, !dbg !5101

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !5101

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay3, %cond.true ], [ null, %cond.false ], !dbg !5101
  %10 = load float*, float** %env.addr, align 8, !dbg !5103
  %tobool4 = icmp ne float* %10, null, !dbg !5103
  br i1 %tobool4, label %land.lhs.true, label %cond.false8, !dbg !5104

land.lhs.true:                                    ; preds = %cond.end
  %11 = load i32, i32* %envcolor, align 4, !dbg !5105
  %tobool5 = icmp ne i32 %11, 0, !dbg !5105
  br i1 %tobool5, label %cond.true6, label %cond.false8, !dbg !5106

cond.true6:                                       ; preds = %land.lhs.true
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %bn, i64 0, i64 0, !dbg !5107
  br label %cond.end9, !dbg !5106

cond.false8:                                      ; preds = %land.lhs.true, %cond.end
  br label %cond.end9, !dbg !5106

cond.end9:                                        ; preds = %cond.false8, %cond.true6
  %cond10 = phi float* [ %arraydecay7, %cond.true6 ], [ null, %cond.false8 ], !dbg !5106
  call void @occ_lookup(%struct.OcclusionTree* %4, i32 %5, %struct.OccFace* %6, float* %7, float* %arraydecay1, float* %occ, float* %cond, float* %cond10), !dbg !5108
  %12 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5109
  %wrld11 = getelementptr inbounds %struct.Render, %struct.Render* %12, i32 0, i32 46, !dbg !5110
  %ao_approx_correction = getelementptr inbounds %struct.World, %struct.World* %wrld11, i32 0, i32 57, !dbg !5111
  %13 = load float, float* %ao_approx_correction, align 4, !dbg !5111
  store float %13, float* %correction, align 4, !dbg !5112
  %14 = load float, float* %correction, align 4, !dbg !5113
  %sub = fsub float 1.000000e+00, %14, !dbg !5114
  %15 = load float, float* %occ, align 4, !dbg !5115
  %sub12 = fsub float 1.000000e+00, %15, !dbg !5116
  %mul = fmul float %sub, %sub12, !dbg !5117
  store float %mul, float* %occlusion, align 4, !dbg !5118
  %16 = load float, float* %occlusion, align 4, !dbg !5119
  %cmp = fcmp olt float %16, 0.000000e+00, !dbg !5119
  br i1 %cmp, label %if.then14, label %if.else, !dbg !5122

if.then14:                                        ; preds = %cond.end9
  store float 0.000000e+00, float* %occlusion, align 4, !dbg !5119
  br label %if.end19, !dbg !5119

if.else:                                          ; preds = %cond.end9
  %17 = load float, float* %occlusion, align 4, !dbg !5123
  %cmp15 = fcmp ogt float %17, 1.000000e+00, !dbg !5123
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5119

if.then17:                                        ; preds = %if.else
  store float 1.000000e+00, float* %occlusion, align 4, !dbg !5123
  br label %if.end18, !dbg !5123

if.end18:                                         ; preds = %if.then17, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then14
  %18 = load float, float* %correction, align 4, !dbg !5125
  %cmp20 = fcmp une float %18, 0.000000e+00, !dbg !5127
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !5128

if.then22:                                        ; preds = %if.end19
  %19 = load float, float* %correction, align 4, !dbg !5129
  %20 = load float, float* %occ, align 4, !dbg !5130
  %fneg = fneg float %20, !dbg !5131
  %call = call float @expf(float %fneg) #5, !dbg !5132
  %mul23 = fmul float %19, %call, !dbg !5133
  %21 = load float, float* %occlusion, align 4, !dbg !5134
  %add = fadd float %21, %mul23, !dbg !5134
  store float %add, float* %occlusion, align 4, !dbg !5134
  br label %if.end24, !dbg !5135

if.end24:                                         ; preds = %if.then22, %if.end19
  %22 = load float*, float** %env.addr, align 8, !dbg !5136
  %tobool25 = icmp ne float* %22, null, !dbg !5136
  br i1 %tobool25, label %if.then26, label %if.end62, !dbg !5138

if.then26:                                        ; preds = %if.end24
  %23 = load i32, i32* %envcolor, align 4, !dbg !5139
  %cmp27 = icmp eq i32 %23, 1, !dbg !5139
  br i1 %cmp27, label %if.then31, label %lor.lhs.false, !dbg !5139

lor.lhs.false:                                    ; preds = %if.then26
  %24 = load i32, i32* %envcolor, align 4, !dbg !5139
  %cmp29 = icmp eq i32 %24, 2, !dbg !5139
  br i1 %cmp29, label %if.then31, label %if.else57, !dbg !5142

if.then31:                                        ; preds = %lor.lhs.false, %if.then26
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %bn, i64 0, i64 0, !dbg !5143
  %25 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5145
  %grvec = getelementptr inbounds %struct.Render, %struct.Render* %25, i32 0, i32 30, !dbg !5146
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %grvec, i64 0, i64 0, !dbg !5145
  %call34 = call float @dot_v3v3(float* %arraydecay32, float* %arraydecay33), !dbg !5147
  %add35 = fadd float 1.000000e+00, %call34, !dbg !5148
  %mul36 = fmul float 5.000000e-01, %add35, !dbg !5149
  store float %mul36, float* %fac, align 4, !dbg !5150
  %26 = load float, float* %fac, align 4, !dbg !5151
  %sub37 = fsub float 1.000000e+00, %26, !dbg !5152
  %27 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5153
  %wrld38 = getelementptr inbounds %struct.Render, %struct.Render* %27, i32 0, i32 46, !dbg !5154
  %horr = getelementptr inbounds %struct.World, %struct.World* %wrld38, i32 0, i32 6, !dbg !5155
  %28 = load float, float* %horr, align 8, !dbg !5155
  %mul39 = fmul float %sub37, %28, !dbg !5156
  %29 = load float, float* %fac, align 4, !dbg !5157
  %30 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5158
  %wrld40 = getelementptr inbounds %struct.Render, %struct.Render* %30, i32 0, i32 46, !dbg !5159
  %zenr = getelementptr inbounds %struct.World, %struct.World* %wrld40, i32 0, i32 9, !dbg !5160
  %31 = load float, float* %zenr, align 4, !dbg !5160
  %mul41 = fmul float %29, %31, !dbg !5161
  %add42 = fadd float %mul39, %mul41, !dbg !5162
  %32 = load float*, float** %env.addr, align 8, !dbg !5163
  %arrayidx = getelementptr inbounds float, float* %32, i64 0, !dbg !5163
  store float %add42, float* %arrayidx, align 4, !dbg !5164
  %33 = load float, float* %fac, align 4, !dbg !5165
  %sub43 = fsub float 1.000000e+00, %33, !dbg !5166
  %34 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5167
  %wrld44 = getelementptr inbounds %struct.Render, %struct.Render* %34, i32 0, i32 46, !dbg !5168
  %horg = getelementptr inbounds %struct.World, %struct.World* %wrld44, i32 0, i32 7, !dbg !5169
  %35 = load float, float* %horg, align 4, !dbg !5169
  %mul45 = fmul float %sub43, %35, !dbg !5170
  %36 = load float, float* %fac, align 4, !dbg !5171
  %37 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5172
  %wrld46 = getelementptr inbounds %struct.Render, %struct.Render* %37, i32 0, i32 46, !dbg !5173
  %zeng = getelementptr inbounds %struct.World, %struct.World* %wrld46, i32 0, i32 10, !dbg !5174
  %38 = load float, float* %zeng, align 8, !dbg !5174
  %mul47 = fmul float %36, %38, !dbg !5175
  %add48 = fadd float %mul45, %mul47, !dbg !5176
  %39 = load float*, float** %env.addr, align 8, !dbg !5177
  %arrayidx49 = getelementptr inbounds float, float* %39, i64 1, !dbg !5177
  store float %add48, float* %arrayidx49, align 4, !dbg !5178
  %40 = load float, float* %fac, align 4, !dbg !5179
  %sub50 = fsub float 1.000000e+00, %40, !dbg !5180
  %41 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5181
  %wrld51 = getelementptr inbounds %struct.Render, %struct.Render* %41, i32 0, i32 46, !dbg !5182
  %horb = getelementptr inbounds %struct.World, %struct.World* %wrld51, i32 0, i32 8, !dbg !5183
  %42 = load float, float* %horb, align 8, !dbg !5183
  %mul52 = fmul float %sub50, %42, !dbg !5184
  %43 = load float, float* %fac, align 4, !dbg !5185
  %44 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5186
  %wrld53 = getelementptr inbounds %struct.Render, %struct.Render* %44, i32 0, i32 46, !dbg !5187
  %zenb = getelementptr inbounds %struct.World, %struct.World* %wrld53, i32 0, i32 11, !dbg !5188
  %45 = load float, float* %zenb, align 4, !dbg !5188
  %mul54 = fmul float %43, %45, !dbg !5189
  %add55 = fadd float %mul52, %mul54, !dbg !5190
  %46 = load float*, float** %env.addr, align 8, !dbg !5191
  %arrayidx56 = getelementptr inbounds float, float* %46, i64 2, !dbg !5191
  store float %add55, float* %arrayidx56, align 4, !dbg !5192
  %47 = load float*, float** %env.addr, align 8, !dbg !5193
  %48 = load float, float* %occlusion, align 4, !dbg !5194
  call void @mul_v3_fl(float* %47, float %48), !dbg !5195
  br label %if.end61, !dbg !5196

if.else57:                                        ; preds = %lor.lhs.false
  %49 = load float, float* %occlusion, align 4, !dbg !5197
  %50 = load float*, float** %env.addr, align 8, !dbg !5199
  %arrayidx58 = getelementptr inbounds float, float* %50, i64 0, !dbg !5199
  store float %49, float* %arrayidx58, align 4, !dbg !5200
  %51 = load float, float* %occlusion, align 4, !dbg !5201
  %52 = load float*, float** %env.addr, align 8, !dbg !5202
  %arrayidx59 = getelementptr inbounds float, float* %52, i64 1, !dbg !5202
  store float %51, float* %arrayidx59, align 4, !dbg !5203
  %53 = load float, float* %occlusion, align 4, !dbg !5204
  %54 = load float*, float** %env.addr, align 8, !dbg !5205
  %arrayidx60 = getelementptr inbounds float, float* %54, i64 2, !dbg !5205
  store float %53, float* %arrayidx60, align 4, !dbg !5206
  br label %if.end61

if.end61:                                         ; preds = %if.else57, %if.then31
  br label %if.end62, !dbg !5207

if.end62:                                         ; preds = %if.end61, %if.end24
  %55 = load float*, float** %ao.addr, align 8, !dbg !5208
  %tobool63 = icmp ne float* %55, null, !dbg !5208
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !5210

if.then64:                                        ; preds = %if.end62
  %56 = load float, float* %occlusion, align 4, !dbg !5211
  %57 = load float*, float** %ao.addr, align 8, !dbg !5213
  %arrayidx65 = getelementptr inbounds float, float* %57, i64 0, !dbg !5213
  store float %56, float* %arrayidx65, align 4, !dbg !5214
  %58 = load float, float* %occlusion, align 4, !dbg !5215
  %59 = load float*, float** %ao.addr, align 8, !dbg !5216
  %arrayidx66 = getelementptr inbounds float, float* %59, i64 1, !dbg !5216
  store float %58, float* %arrayidx66, align 4, !dbg !5217
  %60 = load float, float* %occlusion, align 4, !dbg !5218
  %61 = load float*, float** %ao.addr, align 8, !dbg !5219
  %arrayidx67 = getelementptr inbounds float, float* %61, i64 2, !dbg !5219
  store float %60, float* %arrayidx67, align 4, !dbg !5220
  br label %if.end68, !dbg !5221

if.end68:                                         ; preds = %if.then64, %if.end62
  %62 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !5222
  %doindirect69 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %62, i32 0, i32 13, !dbg !5224
  %63 = load i32, i32* %doindirect69, align 8, !dbg !5224
  %tobool70 = icmp ne i32 %63, 0, !dbg !5222
  br i1 %tobool70, label %if.then71, label %if.else73, !dbg !5225

if.then71:                                        ; preds = %if.end68
  %64 = load float*, float** %indirect.addr, align 8, !dbg !5226
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !5227
  call void @copy_v3_v3(float* %64, float* %arraydecay72), !dbg !5228
  br label %if.end74, !dbg !5228

if.else73:                                        ; preds = %if.end68
  %65 = load float*, float** %indirect.addr, align 8, !dbg !5229
  call void @zero_v3(float* %65), !dbg !5230
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then71
  ret void, !dbg !5231
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !5232 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5236, metadata !DIExpression()), !dbg !5237
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5238, metadata !DIExpression()), !dbg !5239
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  %0 = load float, float* %a.addr, align 4, !dbg !5242
  %1 = load float, float* %b.addr, align 4, !dbg !5243
  %call = call float @max_ff(float %0, float %1), !dbg !5244
  %2 = load float, float* %c.addr, align 4, !dbg !5245
  %call1 = call float @max_ff(float %call, float %2), !dbg !5246
  ret float %call1, !dbg !5247
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !5248 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !5251, metadata !DIExpression()), !dbg !5252
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !5253, metadata !DIExpression()), !dbg !5254
  %0 = load float, float* %a.addr, align 4, !dbg !5255
  %1 = load float, float* %b.addr, align 4, !dbg !5256
  %cmp = fcmp ogt float %0, %1, !dbg !5257
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5258

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !5259
  br label %cond.end, !dbg !5258

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !5260
  br label %cond.end, !dbg !5258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !5258
  ret float %cond, !dbg !5261
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !5262 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5265, metadata !DIExpression()), !dbg !5266
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5267, metadata !DIExpression()), !dbg !5268
  %0 = load float*, float** %a.addr, align 8, !dbg !5269
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5269
  %1 = load float, float* %arrayidx, align 4, !dbg !5269
  %2 = load float*, float** %b.addr, align 8, !dbg !5270
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5270
  %3 = load float, float* %arrayidx1, align 4, !dbg !5270
  %mul = fmul float %1, %3, !dbg !5271
  %4 = load float*, float** %a.addr, align 8, !dbg !5272
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5272
  %5 = load float, float* %arrayidx2, align 4, !dbg !5272
  %6 = load float*, float** %b.addr, align 8, !dbg !5273
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5273
  %7 = load float, float* %arrayidx3, align 4, !dbg !5273
  %mul4 = fmul float %5, %7, !dbg !5274
  %add = fadd float %mul, %mul4, !dbg !5275
  %8 = load float*, float** %a.addr, align 8, !dbg !5276
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5276
  %9 = load float, float* %arrayidx5, align 4, !dbg !5276
  %10 = load float*, float** %b.addr, align 8, !dbg !5277
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5277
  %11 = load float, float* %arrayidx6, align 4, !dbg !5277
  %mul7 = fmul float %9, %11, !dbg !5278
  %add8 = fadd float %add, %mul7, !dbg !5279
  ret float %add8, !dbg !5280
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @cache_occ_samples(%struct.Render* %re, %struct.RenderPart* %pa, %struct.ShadeSample* %ssamp) #0 !dbg !5281 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %tree = alloca %struct.OcclusionTree*, align 8
  %ps = alloca %struct.PixStr, align 8
  %cache = alloca %struct.OcclusionCache*, align 8
  %sample = alloca %struct.OcclusionCacheSample*, align 8
  %exclude = alloca %struct.OccFace, align 4
  %shi = alloca %struct.ShadeInput*, align 8
  %rd = alloca i64*, align 8
  %ro = alloca i32*, align 8
  %rp = alloca i32*, align 8
  %rz = alloca i32*, align 8
  %onlyshadow = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %step = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5349, metadata !DIExpression()), !dbg !5350
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5351, metadata !DIExpression()), !dbg !5352
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !5353, metadata !DIExpression()), !dbg !5354
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree, metadata !5355, metadata !DIExpression()), !dbg !5356
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5357
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 56, !dbg !5358
  %1 = load i8*, i8** %occlusiontree, align 8, !dbg !5358
  %2 = bitcast i8* %1 to %struct.OcclusionTree*, !dbg !5357
  store %struct.OcclusionTree* %2, %struct.OcclusionTree** %tree, align 8, !dbg !5356
  call void @llvm.dbg.declare(metadata %struct.PixStr* %ps, metadata !5359, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.declare(metadata %struct.OcclusionCache** %cache, metadata !5361, metadata !DIExpression()), !dbg !5362
  call void @llvm.dbg.declare(metadata %struct.OcclusionCacheSample** %sample, metadata !5363, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.declare(metadata %struct.OccFace* %exclude, metadata !5365, metadata !DIExpression()), !dbg !5366
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata i64** %rd, metadata !5369, metadata !DIExpression()), !dbg !5370
  store i64* null, i64** %rd, align 8, !dbg !5370
  call void @llvm.dbg.declare(metadata i32** %ro, metadata !5371, metadata !DIExpression()), !dbg !5372
  store i32* null, i32** %ro, align 8, !dbg !5372
  call void @llvm.dbg.declare(metadata i32** %rp, metadata !5373, metadata !DIExpression()), !dbg !5374
  store i32* null, i32** %rp, align 8, !dbg !5374
  call void @llvm.dbg.declare(metadata i32** %rz, metadata !5375, metadata !DIExpression()), !dbg !5376
  store i32* null, i32** %rz, align 8, !dbg !5376
  call void @llvm.dbg.declare(metadata i32* %onlyshadow, metadata !5377, metadata !DIExpression()), !dbg !5378
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5379, metadata !DIExpression()), !dbg !5380
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.declare(metadata i32* %step, metadata !5383, metadata !DIExpression()), !dbg !5384
  store i32 3, i32* %step, align 4, !dbg !5384
  %3 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !5385
  %cache1 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %3, i32 0, i32 14, !dbg !5387
  %4 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache1, align 8, !dbg !5387
  %tobool = icmp ne %struct.OcclusionCache* %4, null, !dbg !5385
  br i1 %tobool, label %if.end, label %if.then, !dbg !5388

if.then:                                          ; preds = %entry
  br label %for.end147, !dbg !5389

if.end:                                           ; preds = %entry
  %5 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !5390
  %cache2 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %5, i32 0, i32 14, !dbg !5391
  %6 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache2, align 8, !dbg !5391
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5392
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 20, !dbg !5393
  %8 = load i16, i16* %thread, align 2, !dbg !5393
  %idxprom = sext i16 %8 to i64, !dbg !5390
  %arrayidx = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %6, i64 %idxprom, !dbg !5390
  store %struct.OcclusionCache* %arrayidx, %struct.OcclusionCache** %cache, align 8, !dbg !5394
  %9 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5395
  %rectx = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %9, i32 0, i32 14, !dbg !5396
  %10 = load i32, i32* %rectx, align 8, !dbg !5396
  %11 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5397
  %w = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %11, i32 0, i32 3, !dbg !5398
  store i32 %10, i32* %w, align 8, !dbg !5399
  %12 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5400
  %recty = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %12, i32 0, i32 15, !dbg !5401
  %13 = load i32, i32* %recty, align 4, !dbg !5401
  %14 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5402
  %h = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %14, i32 0, i32 4, !dbg !5403
  store i32 %13, i32* %h, align 4, !dbg !5404
  %15 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5405
  %disprect = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %15, i32 0, i32 13, !dbg !5406
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect, i32 0, i32 0, !dbg !5407
  %16 = load i32, i32* %xmin, align 8, !dbg !5407
  %17 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5408
  %x3 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %17, i32 0, i32 1, !dbg !5409
  store i32 %16, i32* %x3, align 8, !dbg !5410
  %18 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5411
  %disprect4 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %18, i32 0, i32 13, !dbg !5412
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect4, i32 0, i32 2, !dbg !5413
  %19 = load i32, i32* %ymin, align 8, !dbg !5413
  %20 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5414
  %y5 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %20, i32 0, i32 2, !dbg !5415
  store i32 %19, i32* %y5, align 4, !dbg !5416
  %21 = load i32, i32* %step, align 4, !dbg !5417
  %22 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5418
  %step6 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %22, i32 0, i32 5, !dbg !5419
  store i32 %21, i32* %step6, align 8, !dbg !5420
  %23 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5421
  %24 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5422
  %w7 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %24, i32 0, i32 3, !dbg !5423
  %25 = load i32, i32* %w7, align 8, !dbg !5423
  %conv = sext i32 %25 to i64, !dbg !5422
  %mul = mul i64 80, %conv, !dbg !5424
  %26 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5425
  %h8 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %26, i32 0, i32 4, !dbg !5426
  %27 = load i32, i32* %h8, align 4, !dbg !5426
  %conv9 = sext i32 %27 to i64, !dbg !5425
  %mul10 = mul i64 %mul, %conv9, !dbg !5427
  %call = call i8* %23(i64 %mul10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)), !dbg !5421
  %28 = bitcast i8* %call to %struct.OcclusionCacheSample*, !dbg !5421
  %29 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5428
  %sample11 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %29, i32 0, i32 0, !dbg !5429
  store %struct.OcclusionCacheSample* %28, %struct.OcclusionCacheSample** %sample11, align 8, !dbg !5430
  %30 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5431
  %sample12 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %30, i32 0, i32 0, !dbg !5432
  %31 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample12, align 8, !dbg !5432
  store %struct.OcclusionCacheSample* %31, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5433
  %32 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5434
  %osa = getelementptr inbounds %struct.Render, %struct.Render* %32, i32 0, i32 5, !dbg !5436
  %33 = load i16, i16* %osa, align 2, !dbg !5436
  %tobool13 = icmp ne i16 %33, 0, !dbg !5434
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !5437

if.then14:                                        ; preds = %if.end
  %34 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5438
  %rectdaps = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %34, i32 0, i32 8, !dbg !5440
  %35 = load i64*, i64** %rectdaps, align 8, !dbg !5440
  store i64* %35, i64** %rd, align 8, !dbg !5441
  br label %if.end15, !dbg !5442

if.else:                                          ; preds = %if.end
  %next = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 0, !dbg !5443
  store %struct.PixStr* null, %struct.PixStr** %next, align 8, !dbg !5445
  %mask = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 5, !dbg !5446
  store i16 -1, i16* %mask, align 8, !dbg !5447
  %36 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5448
  %recto = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %36, i32 0, i32 4, !dbg !5449
  %37 = load i32*, i32** %recto, align 8, !dbg !5449
  store i32* %37, i32** %ro, align 8, !dbg !5450
  %38 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5451
  %rectp = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %38, i32 0, i32 5, !dbg !5452
  %39 = load i32*, i32** %rectp, align 8, !dbg !5452
  store i32* %39, i32** %rp, align 8, !dbg !5453
  %40 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5454
  %rectz = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %40, i32 0, i32 6, !dbg !5455
  %41 = load i32*, i32** %rectz, align 8, !dbg !5455
  store i32* %41, i32** %rz, align 8, !dbg !5456
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  %42 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5457
  %disprect16 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %42, i32 0, i32 13, !dbg !5459
  %ymin17 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect16, i32 0, i32 2, !dbg !5460
  %43 = load i32, i32* %ymin17, align 8, !dbg !5460
  store i32 %43, i32* %y, align 4, !dbg !5461
  br label %for.cond, !dbg !5462

for.cond:                                         ; preds = %for.inc145, %if.end15
  %44 = load i32, i32* %y, align 4, !dbg !5463
  %45 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5465
  %disprect18 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %45, i32 0, i32 13, !dbg !5466
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect18, i32 0, i32 3, !dbg !5467
  %46 = load i32, i32* %ymax, align 4, !dbg !5467
  %cmp = icmp slt i32 %44, %46, !dbg !5468
  br i1 %cmp, label %for.body, label %for.end147, !dbg !5469

for.body:                                         ; preds = %for.cond
  %47 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5470
  %disprect20 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %47, i32 0, i32 13, !dbg !5473
  %xmin21 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect20, i32 0, i32 0, !dbg !5474
  %48 = load i32, i32* %xmin21, align 8, !dbg !5474
  store i32 %48, i32* %x, align 4, !dbg !5475
  br label %for.cond22, !dbg !5476

for.cond22:                                       ; preds = %for.inc, %for.body
  %49 = load i32, i32* %x, align 4, !dbg !5477
  %50 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5479
  %disprect23 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %50, i32 0, i32 13, !dbg !5480
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect23, i32 0, i32 1, !dbg !5481
  %51 = load i32, i32* %xmax, align 4, !dbg !5481
  %cmp24 = icmp slt i32 %49, %51, !dbg !5482
  br i1 %cmp24, label %for.body26, label %for.end, !dbg !5483

for.body26:                                       ; preds = %for.cond22
  %52 = load i32, i32* %x, align 4, !dbg !5484
  %53 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5487
  %disprect27 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %53, i32 0, i32 13, !dbg !5488
  %xmin28 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect27, i32 0, i32 0, !dbg !5489
  %54 = load i32, i32* %xmin28, align 8, !dbg !5489
  %sub = sub nsw i32 %52, %54, !dbg !5490
  %55 = load i32, i32* %step, align 4, !dbg !5491
  %add = add nsw i32 %sub, %55, !dbg !5492
  %56 = load i32, i32* %step, align 4, !dbg !5493
  %rem = srem i32 %add, %56, !dbg !5494
  %cmp29 = icmp eq i32 %rem, 0, !dbg !5495
  br i1 %cmp29, label %if.end37, label %lor.lhs.false, !dbg !5496

lor.lhs.false:                                    ; preds = %for.body26
  %57 = load i32, i32* %x, align 4, !dbg !5497
  %58 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5498
  %disprect31 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %58, i32 0, i32 13, !dbg !5499
  %xmax32 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect31, i32 0, i32 1, !dbg !5500
  %59 = load i32, i32* %xmax32, align 4, !dbg !5500
  %sub33 = sub nsw i32 %59, 1, !dbg !5501
  %cmp34 = icmp eq i32 %57, %sub33, !dbg !5502
  br i1 %cmp34, label %if.end37, label %if.then36, !dbg !5503

if.then36:                                        ; preds = %lor.lhs.false
  br label %for.inc, !dbg !5504

if.end37:                                         ; preds = %lor.lhs.false, %for.body26
  %60 = load i32, i32* %y, align 4, !dbg !5505
  %61 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5507
  %disprect38 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %61, i32 0, i32 13, !dbg !5508
  %ymin39 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect38, i32 0, i32 2, !dbg !5509
  %62 = load i32, i32* %ymin39, align 8, !dbg !5509
  %sub40 = sub nsw i32 %60, %62, !dbg !5510
  %63 = load i32, i32* %step, align 4, !dbg !5511
  %add41 = add nsw i32 %sub40, %63, !dbg !5512
  %64 = load i32, i32* %step, align 4, !dbg !5513
  %rem42 = srem i32 %add41, %64, !dbg !5514
  %cmp43 = icmp eq i32 %rem42, 0, !dbg !5515
  br i1 %cmp43, label %if.end52, label %lor.lhs.false45, !dbg !5516

lor.lhs.false45:                                  ; preds = %if.end37
  %65 = load i32, i32* %y, align 4, !dbg !5517
  %66 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5518
  %disprect46 = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %66, i32 0, i32 13, !dbg !5519
  %ymax47 = getelementptr inbounds %struct.rcti, %struct.rcti* %disprect46, i32 0, i32 3, !dbg !5520
  %67 = load i32, i32* %ymax47, align 4, !dbg !5520
  %sub48 = sub nsw i32 %67, 1, !dbg !5521
  %cmp49 = icmp eq i32 %65, %sub48, !dbg !5522
  br i1 %cmp49, label %if.end52, label %if.then51, !dbg !5523

if.then51:                                        ; preds = %lor.lhs.false45
  br label %for.inc, !dbg !5524

if.end52:                                         ; preds = %lor.lhs.false45, %if.end37
  %68 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5525
  %osa53 = getelementptr inbounds %struct.Render, %struct.Render* %68, i32 0, i32 5, !dbg !5527
  %69 = load i16, i16* %osa53, align 2, !dbg !5527
  %tobool54 = icmp ne i16 %69, 0, !dbg !5525
  br i1 %tobool54, label %if.then55, label %if.else59, !dbg !5528

if.then55:                                        ; preds = %if.end52
  %70 = load i64*, i64** %rd, align 8, !dbg !5529
  %71 = load i64, i64* %70, align 8, !dbg !5532
  %tobool56 = icmp ne i64 %71, 0, !dbg !5532
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !5533

if.then57:                                        ; preds = %if.then55
  br label %for.inc, !dbg !5534

if.end58:                                         ; preds = %if.then55
  %72 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !5535
  %73 = load i64*, i64** %rd, align 8, !dbg !5536
  %74 = load i64, i64* %73, align 8, !dbg !5537
  %75 = inttoptr i64 %74 to %struct.PixStr*, !dbg !5538
  %76 = load i32, i32* %x, align 4, !dbg !5539
  %77 = load i32, i32* %y, align 4, !dbg !5540
  call void @shade_samples_fill_with_ps(%struct.ShadeSample* %72, %struct.PixStr* %75, i32 %76, i32 %77), !dbg !5541
  br label %if.end63, !dbg !5542

if.else59:                                        ; preds = %if.end52
  %78 = load i32*, i32** %rp, align 8, !dbg !5543
  %79 = load i32, i32* %78, align 4, !dbg !5546
  %tobool60 = icmp ne i32 %79, 0, !dbg !5546
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !5547

if.then61:                                        ; preds = %if.else59
  br label %for.inc, !dbg !5548

if.end62:                                         ; preds = %if.else59
  %80 = load i32*, i32** %ro, align 8, !dbg !5549
  %81 = load i32, i32* %80, align 4, !dbg !5550
  %obi = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 1, !dbg !5551
  store i32 %81, i32* %obi, align 8, !dbg !5552
  %82 = load i32*, i32** %rp, align 8, !dbg !5553
  %83 = load i32, i32* %82, align 4, !dbg !5554
  %facenr = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 2, !dbg !5555
  store i32 %83, i32* %facenr, align 4, !dbg !5556
  %84 = load i32*, i32** %rz, align 8, !dbg !5557
  %85 = load i32, i32* %84, align 4, !dbg !5558
  %z = getelementptr inbounds %struct.PixStr, %struct.PixStr* %ps, i32 0, i32 3, !dbg !5559
  store i32 %85, i32* %z, align 8, !dbg !5560
  %86 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !5561
  %87 = load i32, i32* %x, align 4, !dbg !5562
  %88 = load i32, i32* %y, align 4, !dbg !5563
  call void @shade_samples_fill_with_ps(%struct.ShadeSample* %86, %struct.PixStr* %ps, i32 %87, i32 %88), !dbg !5564
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end58
  %89 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !5565
  %shi64 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %89, i32 0, i32 2, !dbg !5566
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi64, i64 0, i64 0, !dbg !5565
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !5567
  %90 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5568
  %vlr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %90, i32 0, i32 1, !dbg !5570
  %91 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5570
  %tobool65 = icmp ne %struct.VlakRen* %91, null, !dbg !5568
  br i1 %tobool65, label %if.then66, label %if.end136, !dbg !5571

if.then66:                                        ; preds = %if.end63
  %92 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5572
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %92, i32 0, i32 0, !dbg !5574
  %93 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !5574
  %mode = getelementptr inbounds %struct.Material, %struct.Material* %93, i32 0, i32 51, !dbg !5575
  %94 = load i32, i32* %mode, align 4, !dbg !5575
  %and = and i32 %94, 1024, !dbg !5576
  store i32 %and, i32* %onlyshadow, align 4, !dbg !5577
  %95 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5578
  %obi67 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %95, i32 0, i32 3, !dbg !5579
  %96 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi67, align 8, !dbg !5579
  %97 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5580
  %objectinstance = getelementptr inbounds %struct.Render, %struct.Render* %97, i32 0, i32 69, !dbg !5581
  %98 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %objectinstance, align 8, !dbg !5581
  %sub.ptr.lhs.cast = ptrtoint %struct.ObjectInstanceRen* %96 to i64, !dbg !5582
  %sub.ptr.rhs.cast = ptrtoint %struct.ObjectInstanceRen* %98 to i64, !dbg !5582
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5582
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 288, !dbg !5582
  %conv68 = trunc i64 %sub.ptr.div to i32, !dbg !5578
  %obi69 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %exclude, i32 0, i32 0, !dbg !5583
  store i32 %conv68, i32* %obi69, align 4, !dbg !5584
  %99 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5585
  %vlr70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %99, i32 0, i32 1, !dbg !5586
  %100 = load %struct.VlakRen*, %struct.VlakRen** %vlr70, align 8, !dbg !5586
  %index = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %100, i32 0, i32 9, !dbg !5587
  %101 = load i32, i32* %index, align 4, !dbg !5587
  %facenr71 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %exclude, i32 0, i32 1, !dbg !5588
  store i32 %101, i32* %facenr71, align 4, !dbg !5589
  %102 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5590
  %103 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !5591
  %104 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5592
  %co = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %104, i32 0, i32 29, !dbg !5593
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5592
  %105 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5594
  %vno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %105, i32 0, i32 17, !dbg !5595
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %vno, i64 0, i64 0, !dbg !5594
  %106 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5596
  %thread74 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %106, i32 0, i32 114, !dbg !5597
  %107 = load i16, i16* %thread74, align 2, !dbg !5597
  %conv75 = sext i16 %107 to i32, !dbg !5596
  %108 = load i32, i32* %onlyshadow, align 4, !dbg !5598
  %109 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5599
  %ao = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %109, i32 0, i32 100, !dbg !5600
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %ao, i64 0, i64 0, !dbg !5599
  %110 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5601
  %env = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %110, i32 0, i32 102, !dbg !5602
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %env, i64 0, i64 0, !dbg !5601
  %111 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5603
  %indirect = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %111, i32 0, i32 101, !dbg !5604
  %arraydecay78 = getelementptr inbounds [3 x float], [3 x float]* %indirect, i64 0, i64 0, !dbg !5603
  call void @sample_occ_tree(%struct.Render* %102, %struct.OcclusionTree* %103, %struct.OccFace* %exclude, float* %arraydecay72, float* %arraydecay73, i32 %conv75, i32 %108, float* %arraydecay76, float* %arraydecay77, float* %arraydecay78), !dbg !5605
  %112 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5606
  %co79 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %112, i32 0, i32 0, !dbg !5607
  %arraydecay80 = getelementptr inbounds [3 x float], [3 x float]* %co79, i64 0, i64 0, !dbg !5606
  %113 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5608
  %co81 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %113, i32 0, i32 29, !dbg !5609
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %co81, i64 0, i64 0, !dbg !5608
  call void @copy_v3_v3(float* %arraydecay80, float* %arraydecay82), !dbg !5610
  %114 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5611
  %n = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %114, i32 0, i32 1, !dbg !5612
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5611
  %115 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5613
  %vno84 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %115, i32 0, i32 17, !dbg !5614
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %vno84, i64 0, i64 0, !dbg !5613
  call void @copy_v3_v3(float* %arraydecay83, float* %arraydecay85), !dbg !5615
  %116 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5616
  %ao86 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %116, i32 0, i32 2, !dbg !5617
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %ao86, i64 0, i64 0, !dbg !5616
  %117 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5618
  %ao88 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %117, i32 0, i32 100, !dbg !5619
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %ao88, i64 0, i64 0, !dbg !5618
  call void @copy_v3_v3(float* %arraydecay87, float* %arraydecay89), !dbg !5620
  %118 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5621
  %env90 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %118, i32 0, i32 3, !dbg !5622
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %env90, i64 0, i64 0, !dbg !5621
  %119 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5623
  %env92 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %119, i32 0, i32 102, !dbg !5624
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %env92, i64 0, i64 0, !dbg !5623
  call void @copy_v3_v3(float* %arraydecay91, float* %arraydecay93), !dbg !5625
  %120 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5626
  %indirect94 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %120, i32 0, i32 4, !dbg !5627
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %indirect94, i64 0, i64 0, !dbg !5626
  %121 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5628
  %indirect96 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %121, i32 0, i32 101, !dbg !5629
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %indirect96, i64 0, i64 0, !dbg !5628
  call void @copy_v3_v3(float* %arraydecay95, float* %arraydecay97), !dbg !5630
  %122 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5631
  %ao98 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %122, i32 0, i32 2, !dbg !5632
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %ao98, i64 0, i64 0, !dbg !5631
  %123 = load float, float* %arrayidx99, align 4, !dbg !5631
  %124 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5633
  %ao100 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %124, i32 0, i32 2, !dbg !5634
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %ao100, i64 0, i64 1, !dbg !5633
  %125 = load float, float* %arrayidx101, align 4, !dbg !5633
  %126 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5635
  %ao102 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %126, i32 0, i32 2, !dbg !5636
  %arrayidx103 = getelementptr inbounds [3 x float], [3 x float]* %ao102, i64 0, i64 2, !dbg !5635
  %127 = load float, float* %arrayidx103, align 4, !dbg !5635
  %call104 = call float @max_fff(float %123, float %125, float %127), !dbg !5637
  %128 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5638
  %intensity = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %128, i32 0, i32 5, !dbg !5639
  store float %call104, float* %intensity, align 4, !dbg !5640
  %129 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5641
  %intensity105 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %129, i32 0, i32 5, !dbg !5642
  %130 = load float, float* %intensity105, align 4, !dbg !5642
  %131 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5643
  %env106 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %131, i32 0, i32 3, !dbg !5644
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %env106, i64 0, i64 0, !dbg !5643
  %132 = load float, float* %arrayidx107, align 4, !dbg !5643
  %133 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5645
  %env108 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %133, i32 0, i32 3, !dbg !5646
  %arrayidx109 = getelementptr inbounds [3 x float], [3 x float]* %env108, i64 0, i64 1, !dbg !5645
  %134 = load float, float* %arrayidx109, align 4, !dbg !5645
  %135 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5647
  %env110 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %135, i32 0, i32 3, !dbg !5648
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %env110, i64 0, i64 2, !dbg !5647
  %136 = load float, float* %arrayidx111, align 4, !dbg !5647
  %call112 = call float @max_fff(float %132, float %134, float %136), !dbg !5649
  %call113 = call float @max_ff(float %130, float %call112), !dbg !5650
  %137 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5651
  %intensity114 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %137, i32 0, i32 5, !dbg !5652
  store float %call113, float* %intensity114, align 4, !dbg !5653
  %138 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5654
  %intensity115 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %138, i32 0, i32 5, !dbg !5655
  %139 = load float, float* %intensity115, align 4, !dbg !5655
  %140 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5656
  %indirect116 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %140, i32 0, i32 4, !dbg !5657
  %arrayidx117 = getelementptr inbounds [3 x float], [3 x float]* %indirect116, i64 0, i64 0, !dbg !5656
  %141 = load float, float* %arrayidx117, align 4, !dbg !5656
  %142 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5658
  %indirect118 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %142, i32 0, i32 4, !dbg !5659
  %arrayidx119 = getelementptr inbounds [3 x float], [3 x float]* %indirect118, i64 0, i64 1, !dbg !5658
  %143 = load float, float* %arrayidx119, align 4, !dbg !5658
  %144 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5660
  %indirect120 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %144, i32 0, i32 4, !dbg !5661
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %indirect120, i64 0, i64 2, !dbg !5660
  %145 = load float, float* %arrayidx121, align 4, !dbg !5660
  %call122 = call float @max_fff(float %141, float %143, float %145), !dbg !5662
  %call123 = call float @max_ff(float %139, float %call122), !dbg !5663
  %146 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5664
  %intensity124 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %146, i32 0, i32 5, !dbg !5665
  store float %call123, float* %intensity124, align 4, !dbg !5666
  %147 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5667
  %dxco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %147, i32 0, i32 78, !dbg !5668
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %dxco, i64 0, i64 0, !dbg !5667
  %148 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5669
  %dxco126 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %148, i32 0, i32 78, !dbg !5670
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %dxco126, i64 0, i64 0, !dbg !5669
  %call128 = call float @dot_v3v3(float* %arraydecay125, float* %arraydecay127), !dbg !5671
  %149 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5672
  %dyco = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %149, i32 0, i32 79, !dbg !5673
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %dyco, i64 0, i64 0, !dbg !5672
  %150 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5674
  %dyco130 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %150, i32 0, i32 79, !dbg !5675
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %dyco130, i64 0, i64 0, !dbg !5674
  %call132 = call float @dot_v3v3(float* %arraydecay129, float* %arraydecay131), !dbg !5676
  %add133 = fadd float %call128, %call132, !dbg !5677
  %151 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5678
  %dist2 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %151, i32 0, i32 6, !dbg !5679
  store float %add133, float* %dist2, align 4, !dbg !5680
  %152 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5681
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %152, i32 0, i32 103, !dbg !5682
  %153 = load i32, i32* %xs, align 4, !dbg !5682
  %154 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5683
  %x134 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %154, i32 0, i32 7, !dbg !5684
  store i32 %153, i32* %x134, align 4, !dbg !5685
  %155 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !5686
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %155, i32 0, i32 104, !dbg !5687
  %156 = load i32, i32* %ys, align 8, !dbg !5687
  %157 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5688
  %y135 = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %157, i32 0, i32 8, !dbg !5689
  store i32 %156, i32* %y135, align 4, !dbg !5690
  %158 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5691
  %filled = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %158, i32 0, i32 9, !dbg !5692
  store i32 1, i32* %filled, align 4, !dbg !5693
  br label %if.end136, !dbg !5694

if.end136:                                        ; preds = %if.then66, %if.end63
  %159 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5695
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %159, i32 0, i32 96, !dbg !5697
  %160 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !5697
  %161 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5698
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %161, i32 0, i32 97, !dbg !5699
  %162 = load i8*, i8** %tbh, align 8, !dbg !5699
  %call137 = call i32 %160(i8* %162), !dbg !5695
  %tobool138 = icmp ne i32 %call137, 0, !dbg !5695
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !5700

if.then139:                                       ; preds = %if.end136
  br label %for.end, !dbg !5701

if.end140:                                        ; preds = %if.end136
  br label %for.inc, !dbg !5702

for.inc:                                          ; preds = %if.end140, %if.then61, %if.then57, %if.then51, %if.then36
  %163 = load i32, i32* %x, align 4, !dbg !5703
  %inc = add nsw i32 %163, 1, !dbg !5703
  store i32 %inc, i32* %x, align 4, !dbg !5703
  %164 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5704
  %incdec.ptr = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %164, i32 1, !dbg !5704
  store %struct.OcclusionCacheSample* %incdec.ptr, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5704
  %165 = load i64*, i64** %rd, align 8, !dbg !5705
  %incdec.ptr141 = getelementptr inbounds i64, i64* %165, i32 1, !dbg !5705
  store i64* %incdec.ptr141, i64** %rd, align 8, !dbg !5705
  %166 = load i32*, i32** %ro, align 8, !dbg !5706
  %incdec.ptr142 = getelementptr inbounds i32, i32* %166, i32 1, !dbg !5706
  store i32* %incdec.ptr142, i32** %ro, align 8, !dbg !5706
  %167 = load i32*, i32** %rp, align 8, !dbg !5707
  %incdec.ptr143 = getelementptr inbounds i32, i32* %167, i32 1, !dbg !5707
  store i32* %incdec.ptr143, i32** %rp, align 8, !dbg !5707
  %168 = load i32*, i32** %rz, align 8, !dbg !5708
  %incdec.ptr144 = getelementptr inbounds i32, i32* %168, i32 1, !dbg !5708
  store i32* %incdec.ptr144, i32** %rz, align 8, !dbg !5708
  br label %for.cond22, !dbg !5709, !llvm.loop !5710

for.end:                                          ; preds = %if.then139, %for.cond22
  br label %for.inc145, !dbg !5712

for.inc145:                                       ; preds = %for.end
  %169 = load i32, i32* %y, align 4, !dbg !5713
  %inc146 = add nsw i32 %169, 1, !dbg !5713
  store i32 %inc146, i32* %y, align 4, !dbg !5713
  br label %for.cond, !dbg !5714, !llvm.loop !5715

for.end147:                                       ; preds = %if.then, %for.cond
  ret void, !dbg !5717
}

declare dso_local void @shade_samples_fill_with_ps(%struct.ShadeSample*, %struct.PixStr*, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @free_occ_samples(%struct.Render* %re, %struct.RenderPart* %pa) #0 !dbg !5718 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %pa.addr = alloca %struct.RenderPart*, align 8
  %tree = alloca %struct.OcclusionTree*, align 8
  %cache = alloca %struct.OcclusionCache*, align 8
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !5721, metadata !DIExpression()), !dbg !5722
  store %struct.RenderPart* %pa, %struct.RenderPart** %pa.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RenderPart** %pa.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !5727
  %occlusiontree = getelementptr inbounds %struct.Render, %struct.Render* %0, i32 0, i32 56, !dbg !5728
  %1 = load i8*, i8** %occlusiontree, align 8, !dbg !5728
  %2 = bitcast i8* %1 to %struct.OcclusionTree*, !dbg !5727
  store %struct.OcclusionTree* %2, %struct.OcclusionTree** %tree, align 8, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.OcclusionCache** %cache, metadata !5729, metadata !DIExpression()), !dbg !5730
  %3 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !5731
  %cache1 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %3, i32 0, i32 14, !dbg !5733
  %4 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache1, align 8, !dbg !5733
  %tobool = icmp ne %struct.OcclusionCache* %4, null, !dbg !5731
  br i1 %tobool, label %if.then, label %if.end6, !dbg !5734

if.then:                                          ; preds = %entry
  %5 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !5735
  %cache2 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %5, i32 0, i32 14, !dbg !5737
  %6 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache2, align 8, !dbg !5737
  %7 = load %struct.RenderPart*, %struct.RenderPart** %pa.addr, align 8, !dbg !5738
  %thread = getelementptr inbounds %struct.RenderPart, %struct.RenderPart* %7, i32 0, i32 20, !dbg !5739
  %8 = load i16, i16* %thread, align 2, !dbg !5739
  %idxprom = sext i16 %8 to i64, !dbg !5735
  %arrayidx = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %6, i64 %idxprom, !dbg !5735
  store %struct.OcclusionCache* %arrayidx, %struct.OcclusionCache** %cache, align 8, !dbg !5740
  %9 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5741
  %sample = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %9, i32 0, i32 0, !dbg !5743
  %10 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !5743
  %tobool3 = icmp ne %struct.OcclusionCacheSample* %10, null, !dbg !5741
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5744

if.then4:                                         ; preds = %if.then
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5745
  %12 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5746
  %sample5 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %12, i32 0, i32 0, !dbg !5747
  %13 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample5, align 8, !dbg !5747
  %14 = bitcast %struct.OcclusionCacheSample* %13 to i8*, !dbg !5746
  call void %11(i8* %14), !dbg !5745
  br label %if.end, !dbg !5745

if.end:                                           ; preds = %if.then4, %if.then
  %15 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5748
  %w = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %15, i32 0, i32 3, !dbg !5749
  store i32 0, i32* %w, align 8, !dbg !5750
  %16 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5751
  %h = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %16, i32 0, i32 4, !dbg !5752
  store i32 0, i32* %h, align 4, !dbg !5753
  %17 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache, align 8, !dbg !5754
  %step = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %17, i32 0, i32 5, !dbg !5755
  store i32 0, i32* %step, align 8, !dbg !5756
  br label %if.end6, !dbg !5757

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !5758
}

declare dso_local float @get_render_aosss_error(%struct.RenderData*, float) #3

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #3

declare dso_local void @BLI_memarena_use_calloc(%struct.MemArena*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @occ_face(%struct.OccFace* %face, float* %co, float* %normal, float* %area) #0 !dbg !5759 {
entry:
  %face.addr = alloca %struct.OccFace*, align 8
  %co.addr = alloca float*, align 8
  %normal.addr = alloca float*, align 8
  %area.addr = alloca float*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v4 = alloca [3 x float], align 4
  store %struct.OccFace* %face, %struct.OccFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccFace** %face.addr, metadata !5764, metadata !DIExpression()), !dbg !5765
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !5766, metadata !DIExpression()), !dbg !5767
  store float* %normal, float** %normal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %normal.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store float* %area, float** %area.addr, align 8
  call void @llvm.dbg.declare(metadata float** %area.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !5772, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !5774, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !5778, metadata !DIExpression()), !dbg !5779
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !5780, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.declare(metadata [3 x float]* %v4, metadata !5782, metadata !DIExpression()), !dbg !5783
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !5784
  %1 = load %struct.OccFace*, %struct.OccFace** %face.addr, align 8, !dbg !5785
  %obi1 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %1, i32 0, i32 0, !dbg !5786
  %2 = load i32, i32* %obi1, align 4, !dbg !5786
  %idxprom = sext i32 %2 to i64, !dbg !5787
  %arrayidx = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i64 %idxprom, !dbg !5787
  store %struct.ObjectInstanceRen* %arrayidx, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5788
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5789
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %3, i32 0, i32 2, !dbg !5790
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !5790
  %5 = load %struct.OccFace*, %struct.OccFace** %face.addr, align 8, !dbg !5791
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %5, i32 0, i32 1, !dbg !5792
  %6 = load i32, i32* %facenr, align 4, !dbg !5792
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %6), !dbg !5793
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !5794
  %7 = load float*, float** %co.addr, align 8, !dbg !5795
  %tobool = icmp ne float* %7, null, !dbg !5795
  br i1 %tobool, label %if.then, label %if.end23, !dbg !5797

if.then:                                          ; preds = %entry
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5798
  %v42 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 3, !dbg !5801
  %9 = load %struct.VertRen*, %struct.VertRen** %v42, align 8, !dbg !5801
  %tobool3 = icmp ne %struct.VertRen* %9, null, !dbg !5798
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !5802

if.then4:                                         ; preds = %if.then
  %10 = load float*, float** %co.addr, align 8, !dbg !5803
  %11 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5804
  %v15 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %11, i32 0, i32 0, !dbg !5805
  %12 = load %struct.VertRen*, %struct.VertRen** %v15, align 8, !dbg !5805
  %co6 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %12, i32 0, i32 0, !dbg !5806
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !5804
  %13 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5807
  %v37 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %13, i32 0, i32 2, !dbg !5808
  %14 = load %struct.VertRen*, %struct.VertRen** %v37, align 8, !dbg !5808
  %co8 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %14, i32 0, i32 0, !dbg !5809
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %co8, i64 0, i64 0, !dbg !5807
  call void @mid_v3_v3v3(float* %10, float* %arraydecay, float* %arraydecay9), !dbg !5810
  br label %if.end, !dbg !5810

if.else:                                          ; preds = %if.then
  %15 = load float*, float** %co.addr, align 8, !dbg !5811
  %16 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5812
  %v110 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %16, i32 0, i32 0, !dbg !5813
  %17 = load %struct.VertRen*, %struct.VertRen** %v110, align 8, !dbg !5813
  %co11 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %17, i32 0, i32 0, !dbg !5814
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !5812
  %18 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5815
  %v213 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %18, i32 0, i32 1, !dbg !5816
  %19 = load %struct.VertRen*, %struct.VertRen** %v213, align 8, !dbg !5816
  %co14 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %19, i32 0, i32 0, !dbg !5817
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !5815
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5818
  %v316 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %20, i32 0, i32 2, !dbg !5819
  %21 = load %struct.VertRen*, %struct.VertRen** %v316, align 8, !dbg !5819
  %co17 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %21, i32 0, i32 0, !dbg !5820
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co17, i64 0, i64 0, !dbg !5818
  call void @cent_tri_v3(float* %15, float* %arraydecay12, float* %arraydecay15, float* %arraydecay18), !dbg !5821
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %22 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5822
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %22, i32 0, i32 11, !dbg !5824
  %23 = load i16, i16* %flag, align 8, !dbg !5824
  %conv = sext i16 %23 to i32, !dbg !5822
  %and = and i32 %conv, 3, !dbg !5825
  %tobool19 = icmp ne i32 %and, 0, !dbg !5825
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !5826

if.then20:                                        ; preds = %if.end
  %24 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5827
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %24, i32 0, i32 8, !dbg !5828
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !5827
  %25 = load float*, float** %co.addr, align 8, !dbg !5829
  call void @mul_m4_v3([4 x float]* %arraydecay21, float* %25), !dbg !5830
  br label %if.end22, !dbg !5830

if.end22:                                         ; preds = %if.then20, %if.end
  br label %if.end23, !dbg !5831

if.end23:                                         ; preds = %if.end22, %entry
  %26 = load float*, float** %normal.addr, align 8, !dbg !5832
  %tobool24 = icmp ne float* %26, null, !dbg !5832
  br i1 %tobool24, label %if.then25, label %if.end43, !dbg !5834

if.then25:                                        ; preds = %if.end23
  %27 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5835
  %n = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %27, i32 0, i32 4, !dbg !5837
  %arrayidx26 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !5835
  %28 = load float, float* %arrayidx26, align 8, !dbg !5835
  %fneg = fneg float %28, !dbg !5838
  %29 = load float*, float** %normal.addr, align 8, !dbg !5839
  %arrayidx27 = getelementptr inbounds float, float* %29, i64 0, !dbg !5839
  store float %fneg, float* %arrayidx27, align 4, !dbg !5840
  %30 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5841
  %n28 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %30, i32 0, i32 4, !dbg !5842
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %n28, i64 0, i64 1, !dbg !5841
  %31 = load float, float* %arrayidx29, align 4, !dbg !5841
  %fneg30 = fneg float %31, !dbg !5843
  %32 = load float*, float** %normal.addr, align 8, !dbg !5844
  %arrayidx31 = getelementptr inbounds float, float* %32, i64 1, !dbg !5844
  store float %fneg30, float* %arrayidx31, align 4, !dbg !5845
  %33 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5846
  %n32 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %33, i32 0, i32 4, !dbg !5847
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %n32, i64 0, i64 2, !dbg !5846
  %34 = load float, float* %arrayidx33, align 8, !dbg !5846
  %fneg34 = fneg float %34, !dbg !5848
  %35 = load float*, float** %normal.addr, align 8, !dbg !5849
  %arrayidx35 = getelementptr inbounds float, float* %35, i64 2, !dbg !5849
  store float %fneg34, float* %arrayidx35, align 4, !dbg !5850
  %36 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5851
  %flag36 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %36, i32 0, i32 11, !dbg !5853
  %37 = load i16, i16* %flag36, align 8, !dbg !5853
  %conv37 = sext i16 %37 to i32, !dbg !5851
  %and38 = and i32 %conv37, 3, !dbg !5854
  %tobool39 = icmp ne i32 %and38, 0, !dbg !5854
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !5855

if.then40:                                        ; preds = %if.then25
  %38 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5856
  %nmat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %38, i32 0, i32 10, !dbg !5857
  %arraydecay41 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %nmat, i64 0, i64 0, !dbg !5856
  %39 = load float*, float** %normal.addr, align 8, !dbg !5858
  call void @mul_m3_v3([3 x float]* %arraydecay41, float* %39), !dbg !5859
  br label %if.end42, !dbg !5859

if.end42:                                         ; preds = %if.then40, %if.then25
  br label %if.end43, !dbg !5860

if.end43:                                         ; preds = %if.end42, %if.end23
  %40 = load float*, float** %area.addr, align 8, !dbg !5861
  %tobool44 = icmp ne float* %40, null, !dbg !5861
  br i1 %tobool44, label %if.then45, label %if.end102, !dbg !5863

if.then45:                                        ; preds = %if.end43
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !5864
  %41 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5866
  %v147 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %41, i32 0, i32 0, !dbg !5867
  %42 = load %struct.VertRen*, %struct.VertRen** %v147, align 8, !dbg !5867
  %co48 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %42, i32 0, i32 0, !dbg !5868
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %co48, i64 0, i64 0, !dbg !5866
  call void @copy_v3_v3(float* %arraydecay46, float* %arraydecay49), !dbg !5869
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !5870
  %43 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5871
  %v251 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %43, i32 0, i32 1, !dbg !5872
  %44 = load %struct.VertRen*, %struct.VertRen** %v251, align 8, !dbg !5872
  %co52 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %44, i32 0, i32 0, !dbg !5873
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !5871
  call void @copy_v3_v3(float* %arraydecay50, float* %arraydecay53), !dbg !5874
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !5875
  %45 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5876
  %v355 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %45, i32 0, i32 2, !dbg !5877
  %46 = load %struct.VertRen*, %struct.VertRen** %v355, align 8, !dbg !5877
  %co56 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %46, i32 0, i32 0, !dbg !5878
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %co56, i64 0, i64 0, !dbg !5876
  call void @copy_v3_v3(float* %arraydecay54, float* %arraydecay57), !dbg !5879
  %47 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5880
  %v458 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %47, i32 0, i32 3, !dbg !5882
  %48 = load %struct.VertRen*, %struct.VertRen** %v458, align 8, !dbg !5882
  %tobool59 = icmp ne %struct.VertRen* %48, null, !dbg !5880
  br i1 %tobool59, label %if.then60, label %if.end65, !dbg !5883

if.then60:                                        ; preds = %if.then45
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !5884
  %49 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5885
  %v462 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %49, i32 0, i32 3, !dbg !5886
  %50 = load %struct.VertRen*, %struct.VertRen** %v462, align 8, !dbg !5886
  %co63 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %50, i32 0, i32 0, !dbg !5887
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %co63, i64 0, i64 0, !dbg !5885
  call void @copy_v3_v3(float* %arraydecay61, float* %arraydecay64), !dbg !5888
  br label %if.end65, !dbg !5888

if.end65:                                         ; preds = %if.then60, %if.then45
  %51 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5889
  %flag66 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %51, i32 0, i32 11, !dbg !5891
  %52 = load i16, i16* %flag66, align 8, !dbg !5891
  %conv67 = sext i16 %52 to i32, !dbg !5889
  %and68 = and i32 %conv67, 3, !dbg !5892
  %tobool69 = icmp ne i32 %and68, 0, !dbg !5892
  br i1 %tobool69, label %if.then70, label %if.end87, !dbg !5893

if.then70:                                        ; preds = %if.end65
  %53 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5894
  %mat71 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %53, i32 0, i32 8, !dbg !5896
  %arraydecay72 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat71, i64 0, i64 0, !dbg !5894
  %arraydecay73 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !5897
  call void @mul_m4_v3([4 x float]* %arraydecay72, float* %arraydecay73), !dbg !5898
  %54 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5899
  %mat74 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %54, i32 0, i32 8, !dbg !5900
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat74, i64 0, i64 0, !dbg !5899
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !5901
  call void @mul_m4_v3([4 x float]* %arraydecay75, float* %arraydecay76), !dbg !5902
  %55 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5903
  %mat77 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %55, i32 0, i32 8, !dbg !5904
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat77, i64 0, i64 0, !dbg !5903
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !5905
  call void @mul_m4_v3([4 x float]* %arraydecay78, float* %arraydecay79), !dbg !5906
  %56 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5907
  %v480 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %56, i32 0, i32 3, !dbg !5909
  %57 = load %struct.VertRen*, %struct.VertRen** %v480, align 8, !dbg !5909
  %tobool81 = icmp ne %struct.VertRen* %57, null, !dbg !5907
  br i1 %tobool81, label %if.then82, label %if.end86, !dbg !5910

if.then82:                                        ; preds = %if.then70
  %58 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !5911
  %mat83 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %58, i32 0, i32 8, !dbg !5912
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat83, i64 0, i64 0, !dbg !5911
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !5913
  call void @mul_m4_v3([4 x float]* %arraydecay84, float* %arraydecay85), !dbg !5914
  br label %if.end86, !dbg !5914

if.end86:                                         ; preds = %if.then82, %if.then70
  br label %if.end87, !dbg !5915

if.end87:                                         ; preds = %if.end86, %if.end65
  %59 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !5916
  %v488 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %59, i32 0, i32 3, !dbg !5918
  %60 = load %struct.VertRen*, %struct.VertRen** %v488, align 8, !dbg !5918
  %tobool89 = icmp ne %struct.VertRen* %60, null, !dbg !5916
  br i1 %tobool89, label %if.then90, label %if.else96, !dbg !5919

if.then90:                                        ; preds = %if.end87
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !5920
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !5921
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !5922
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !5923
  %call95 = call float @area_quad_v3(float* %arraydecay91, float* %arraydecay92, float* %arraydecay93, float* %arraydecay94), !dbg !5924
  %61 = load float*, float** %area.addr, align 8, !dbg !5925
  store float %call95, float* %61, align 4, !dbg !5926
  br label %if.end101, !dbg !5927

if.else96:                                        ; preds = %if.end87
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !5928
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !5929
  %arraydecay99 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !5930
  %call100 = call float @area_tri_v3(float* %arraydecay97, float* %arraydecay98, float* %arraydecay99), !dbg !5931
  %62 = load float*, float** %area.addr, align 8, !dbg !5932
  store float %call100, float* %62, align 4, !dbg !5933
  br label %if.end101

if.end101:                                        ; preds = %if.else96, %if.then90
  br label %if.end102, !dbg !5934

if.end102:                                        ; preds = %if.end101, %if.end43
  ret void, !dbg !5935
}

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_recursive(%struct.OcclusionTree* %tree, %struct.OccNode* %node, i32 %begin, i32 %end, i32 %depth) #0 !dbg !5936 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %node.addr = alloca %struct.OccNode*, align 8
  %begin.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %depth.addr = alloca i32, align 4
  %threads = alloca %struct.ListBase, align 8
  %othreads = alloca [1 x %struct.OcclusionBuildThread], align 16
  %child = alloca %struct.OccNode*, align 8
  %tmpnode = alloca %struct.OccNode, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %totthread = alloca i32, align 4
  %offset = alloca [8 x i32], align 16
  %count = alloca [8 x i32], align 16
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !5939, metadata !DIExpression()), !dbg !5940
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !5941, metadata !DIExpression()), !dbg !5942
  store i32 %begin, i32* %begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %begin.addr, metadata !5943, metadata !DIExpression()), !dbg !5944
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  store i32 %depth, i32* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %depth.addr, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata %struct.ListBase* %threads, metadata !5949, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.declare(metadata [1 x %struct.OcclusionBuildThread]* %othreads, metadata !5951, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.declare(metadata %struct.OccNode** %child, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata %struct.OccNode* %tmpnode, metadata !5956, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.declare(metadata i32* %a, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata i32* %b, metadata !5960, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.declare(metadata i32* %totthread, metadata !5962, metadata !DIExpression()), !dbg !5963
  store i32 0, i32* %totthread, align 4, !dbg !5963
  call void @llvm.dbg.declare(metadata [8 x i32]* %offset, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.declare(metadata [8 x i32]* %count, metadata !5967, metadata !DIExpression()), !dbg !5968
  %0 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !5969
  %occlusion = getelementptr inbounds %struct.OccNode, %struct.OccNode* %0, i32 0, i32 4, !dbg !5970
  store float 1.000000e+00, float* %occlusion, align 8, !dbg !5971
  %1 = load i32, i32* %end.addr, align 4, !dbg !5972
  %2 = load i32, i32* %begin.addr, align 4, !dbg !5974
  %sub = sub nsw i32 %1, %2, !dbg !5975
  %cmp = icmp sle i32 %sub, 8, !dbg !5976
  br i1 %cmp, label %if.then, label %if.else, !dbg !5977

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %begin.addr, align 4, !dbg !5978
  store i32 %3, i32* %a, align 4, !dbg !5981
  store i32 0, i32* %b, align 4, !dbg !5982
  br label %for.cond, !dbg !5983

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %a, align 4, !dbg !5984
  %5 = load i32, i32* %end.addr, align 4, !dbg !5986
  %cmp1 = icmp slt i32 %4, %5, !dbg !5987
  br i1 %cmp1, label %for.body, label %for.end, !dbg !5988

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %a, align 4, !dbg !5989
  %7 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !5991
  %child2 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %7, i32 0, i32 7, !dbg !5992
  %8 = load i32, i32* %b, align 4, !dbg !5993
  %idxprom = sext i32 %8 to i64, !dbg !5991
  %arrayidx = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child2, i64 0, i64 %idxprom, !dbg !5991
  %face = bitcast %union.anon* %arrayidx to i32*, !dbg !5994
  store i32 %6, i32* %face, align 8, !dbg !5995
  %9 = load i32, i32* %b, align 4, !dbg !5996
  %shl = shl i32 1, %9, !dbg !5997
  %10 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !5998
  %childflag = getelementptr inbounds %struct.OccNode, %struct.OccNode* %10, i32 0, i32 6, !dbg !5999
  %11 = load i32, i32* %childflag, align 8, !dbg !6000
  %or = or i32 %11, %shl, !dbg !6000
  store i32 %or, i32* %childflag, align 8, !dbg !6000
  br label %for.inc, !dbg !6001

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %a, align 4, !dbg !6002
  %inc = add nsw i32 %12, 1, !dbg !6002
  store i32 %inc, i32* %a, align 4, !dbg !6002
  %13 = load i32, i32* %b, align 4, !dbg !6003
  %inc3 = add nsw i32 %13, 1, !dbg !6003
  store i32 %inc3, i32* %b, align 4, !dbg !6003
  br label %for.cond, !dbg !6004, !llvm.loop !6005

for.end:                                          ; preds = %for.cond
  br label %if.end101, !dbg !6007

if.else:                                          ; preds = %entry
  %14 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6008
  %15 = load i32, i32* %begin.addr, align 4, !dbg !6010
  %16 = load i32, i32* %end.addr, align 4, !dbg !6011
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 0, !dbg !6012
  %arraydecay4 = getelementptr inbounds [8 x i32], [8 x i32]* %count, i64 0, i64 0, !dbg !6013
  call void @occ_build_8_split(%struct.OcclusionTree* %14, i32 %15, i32 %16, i32* %arraydecay, i32* %arraydecay4), !dbg !6014
  %17 = load i32, i32* %depth.addr, align 4, !dbg !6015
  %cmp5 = icmp eq i32 %17, 1, !dbg !6017
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !6018

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6019
  %dothreadedbuild = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %18, i32 0, i32 11, !dbg !6020
  %19 = load i32, i32* %dothreadedbuild, align 8, !dbg !6020
  %tobool = icmp ne i32 %19, 0, !dbg !6019
  br i1 %tobool, label %if.then6, label %if.end, !dbg !6021

if.then6:                                         ; preds = %land.lhs.true
  %20 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6022
  %totbuildthread = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %20, i32 0, i32 12, !dbg !6023
  %21 = load i32, i32* %totbuildthread, align 4, !dbg !6023
  call void @BLI_init_threads(%struct.ListBase* %threads, i8* (i8*)* @exec_occ_build, i32 %21), !dbg !6024
  br label %if.end, !dbg !6024

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.else
  store i32 0, i32* %b, align 4, !dbg !6025
  br label %for.cond7, !dbg !6027

for.cond7:                                        ; preds = %for.inc92, %if.end
  %22 = load i32, i32* %b, align 4, !dbg !6028
  %cmp8 = icmp slt i32 %22, 8, !dbg !6030
  br i1 %cmp8, label %for.body9, label %for.end94, !dbg !6031

for.body9:                                        ; preds = %for.cond7
  %23 = load i32, i32* %b, align 4, !dbg !6032
  %idxprom10 = sext i32 %23 to i64, !dbg !6035
  %arrayidx11 = getelementptr inbounds [8 x i32], [8 x i32]* %count, i64 0, i64 %idxprom10, !dbg !6035
  %24 = load i32, i32* %arrayidx11, align 4, !dbg !6035
  %cmp12 = icmp eq i32 %24, 0, !dbg !6036
  br i1 %cmp12, label %if.then13, label %if.else18, !dbg !6037

if.then13:                                        ; preds = %for.body9
  %25 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6038
  %child14 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %25, i32 0, i32 7, !dbg !6040
  %26 = load i32, i32* %b, align 4, !dbg !6041
  %idxprom15 = sext i32 %26 to i64, !dbg !6038
  %arrayidx16 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child14, i64 0, i64 %idxprom15, !dbg !6038
  %node17 = bitcast %union.anon* %arrayidx16 to %struct.OccNode**, !dbg !6042
  store %struct.OccNode* null, %struct.OccNode** %node17, align 8, !dbg !6043
  br label %if.end91, !dbg !6044

if.else18:                                        ; preds = %for.body9
  %27 = load i32, i32* %b, align 4, !dbg !6045
  %idxprom19 = sext i32 %27 to i64, !dbg !6047
  %arrayidx20 = getelementptr inbounds [8 x i32], [8 x i32]* %count, i64 0, i64 %idxprom19, !dbg !6047
  %28 = load i32, i32* %arrayidx20, align 4, !dbg !6047
  %cmp21 = icmp eq i32 %28, 1, !dbg !6048
  br i1 %cmp21, label %if.then22, label %if.else32, !dbg !6049

if.then22:                                        ; preds = %if.else18
  %29 = load i32, i32* %b, align 4, !dbg !6050
  %idxprom23 = sext i32 %29 to i64, !dbg !6052
  %arrayidx24 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom23, !dbg !6052
  %30 = load i32, i32* %arrayidx24, align 4, !dbg !6052
  %31 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6053
  %child25 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %31, i32 0, i32 7, !dbg !6054
  %32 = load i32, i32* %b, align 4, !dbg !6055
  %idxprom26 = sext i32 %32 to i64, !dbg !6053
  %arrayidx27 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child25, i64 0, i64 %idxprom26, !dbg !6053
  %face28 = bitcast %union.anon* %arrayidx27 to i32*, !dbg !6056
  store i32 %30, i32* %face28, align 8, !dbg !6057
  %33 = load i32, i32* %b, align 4, !dbg !6058
  %shl29 = shl i32 1, %33, !dbg !6059
  %34 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6060
  %childflag30 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %34, i32 0, i32 6, !dbg !6061
  %35 = load i32, i32* %childflag30, align 8, !dbg !6062
  %or31 = or i32 %35, %shl29, !dbg !6062
  store i32 %or31, i32* %childflag30, align 8, !dbg !6062
  br label %if.end90, !dbg !6063

if.else32:                                        ; preds = %if.else18
  %36 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6064
  %dothreadedbuild33 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %36, i32 0, i32 11, !dbg !6067
  %37 = load i32, i32* %dothreadedbuild33, align 8, !dbg !6067
  %tobool34 = icmp ne i32 %37, 0, !dbg !6064
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !6068

if.then35:                                        ; preds = %if.else32
  call void @BLI_lock_thread(i32 3), !dbg !6069
  br label %if.end36, !dbg !6069

if.end36:                                         ; preds = %if.then35, %if.else32
  %38 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6070
  %arena = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %38, i32 0, i32 0, !dbg !6071
  %39 = load %struct.MemArena*, %struct.MemArena** %arena, align 8, !dbg !6071
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %39, i64 144), !dbg !6072
  %40 = bitcast i8* %call to %struct.OccNode*, !dbg !6072
  store %struct.OccNode* %40, %struct.OccNode** %child, align 8, !dbg !6073
  %41 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6074
  %42 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6075
  %child37 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %42, i32 0, i32 7, !dbg !6076
  %43 = load i32, i32* %b, align 4, !dbg !6077
  %idxprom38 = sext i32 %43 to i64, !dbg !6075
  %arrayidx39 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child37, i64 0, i64 %idxprom38, !dbg !6075
  %node40 = bitcast %union.anon* %arrayidx39 to %struct.OccNode**, !dbg !6078
  store %struct.OccNode* %41, %struct.OccNode** %node40, align 8, !dbg !6079
  %44 = load i32, i32* %depth.addr, align 4, !dbg !6080
  %45 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6082
  %maxdepth = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %45, i32 0, i32 7, !dbg !6083
  %46 = load i32, i32* %maxdepth, align 8, !dbg !6083
  %cmp41 = icmp sge i32 %44, %46, !dbg !6084
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !6085

if.then42:                                        ; preds = %if.end36
  %47 = load i32, i32* %depth.addr, align 4, !dbg !6086
  %add = add nsw i32 %47, 1, !dbg !6087
  %48 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6088
  %maxdepth43 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %48, i32 0, i32 7, !dbg !6089
  store i32 %add, i32* %maxdepth43, align 8, !dbg !6090
  br label %if.end44, !dbg !6088

if.end44:                                         ; preds = %if.then42, %if.end36
  %49 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6091
  %dothreadedbuild45 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %49, i32 0, i32 11, !dbg !6093
  %50 = load i32, i32* %dothreadedbuild45, align 8, !dbg !6093
  %tobool46 = icmp ne i32 %50, 0, !dbg !6091
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6094

if.then47:                                        ; preds = %if.end44
  call void @BLI_unlock_thread(i32 3), !dbg !6095
  br label %if.end48, !dbg !6095

if.end48:                                         ; preds = %if.then47, %if.end44
  %51 = load i32, i32* %depth.addr, align 4, !dbg !6096
  %cmp49 = icmp eq i32 %51, 1, !dbg !6098
  br i1 %cmp49, label %land.lhs.true50, label %if.else80, !dbg !6099

land.lhs.true50:                                  ; preds = %if.end48
  %52 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6100
  %dothreadedbuild51 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %52, i32 0, i32 11, !dbg !6101
  %53 = load i32, i32* %dothreadedbuild51, align 8, !dbg !6101
  %tobool52 = icmp ne i32 %53, 0, !dbg !6100
  br i1 %tobool52, label %if.then53, label %if.else80, !dbg !6102

if.then53:                                        ; preds = %land.lhs.true50
  %54 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6103
  %55 = load i32, i32* %totthread, align 4, !dbg !6105
  %idxprom54 = sext i32 %55 to i64, !dbg !6106
  %arrayidx55 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom54, !dbg !6106
  %tree56 = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %arrayidx55, i32 0, i32 0, !dbg !6107
  store %struct.OcclusionTree* %54, %struct.OcclusionTree** %tree56, align 16, !dbg !6108
  %56 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6109
  %57 = load i32, i32* %totthread, align 4, !dbg !6110
  %idxprom57 = sext i32 %57 to i64, !dbg !6111
  %arrayidx58 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom57, !dbg !6111
  %node59 = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %arrayidx58, i32 0, i32 4, !dbg !6112
  store %struct.OccNode* %56, %struct.OccNode** %node59, align 8, !dbg !6113
  %58 = load i32, i32* %b, align 4, !dbg !6114
  %idxprom60 = sext i32 %58 to i64, !dbg !6115
  %arrayidx61 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom60, !dbg !6115
  %59 = load i32, i32* %arrayidx61, align 4, !dbg !6115
  %60 = load i32, i32* %totthread, align 4, !dbg !6116
  %idxprom62 = sext i32 %60 to i64, !dbg !6117
  %arrayidx63 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom62, !dbg !6117
  %begin64 = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %arrayidx63, i32 0, i32 1, !dbg !6118
  store i32 %59, i32* %begin64, align 8, !dbg !6119
  %61 = load i32, i32* %b, align 4, !dbg !6120
  %idxprom65 = sext i32 %61 to i64, !dbg !6121
  %arrayidx66 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom65, !dbg !6121
  %62 = load i32, i32* %arrayidx66, align 4, !dbg !6121
  %63 = load i32, i32* %b, align 4, !dbg !6122
  %idxprom67 = sext i32 %63 to i64, !dbg !6123
  %arrayidx68 = getelementptr inbounds [8 x i32], [8 x i32]* %count, i64 0, i64 %idxprom67, !dbg !6123
  %64 = load i32, i32* %arrayidx68, align 4, !dbg !6123
  %add69 = add nsw i32 %62, %64, !dbg !6124
  %65 = load i32, i32* %totthread, align 4, !dbg !6125
  %idxprom70 = sext i32 %65 to i64, !dbg !6126
  %arrayidx71 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom70, !dbg !6126
  %end72 = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %arrayidx71, i32 0, i32 2, !dbg !6127
  store i32 %add69, i32* %end72, align 4, !dbg !6128
  %66 = load i32, i32* %depth.addr, align 4, !dbg !6129
  %add73 = add nsw i32 %66, 1, !dbg !6130
  %67 = load i32, i32* %totthread, align 4, !dbg !6131
  %idxprom74 = sext i32 %67 to i64, !dbg !6132
  %arrayidx75 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom74, !dbg !6132
  %depth76 = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %arrayidx75, i32 0, i32 3, !dbg !6133
  store i32 %add73, i32* %depth76, align 16, !dbg !6134
  %68 = load i32, i32* %totthread, align 4, !dbg !6135
  %idxprom77 = sext i32 %68 to i64, !dbg !6136
  %arrayidx78 = getelementptr inbounds [1 x %struct.OcclusionBuildThread], [1 x %struct.OcclusionBuildThread]* %othreads, i64 0, i64 %idxprom77, !dbg !6136
  %69 = bitcast %struct.OcclusionBuildThread* %arrayidx78 to i8*, !dbg !6137
  call void @BLI_insert_thread(%struct.ListBase* %threads, i8* %69), !dbg !6138
  %70 = load i32, i32* %totthread, align 4, !dbg !6139
  %inc79 = add nsw i32 %70, 1, !dbg !6139
  store i32 %inc79, i32* %totthread, align 4, !dbg !6139
  br label %if.end89, !dbg !6140

if.else80:                                        ; preds = %land.lhs.true50, %if.end48
  %71 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6141
  %72 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6142
  %73 = load i32, i32* %b, align 4, !dbg !6143
  %idxprom81 = sext i32 %73 to i64, !dbg !6144
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom81, !dbg !6144
  %74 = load i32, i32* %arrayidx82, align 4, !dbg !6144
  %75 = load i32, i32* %b, align 4, !dbg !6145
  %idxprom83 = sext i32 %75 to i64, !dbg !6146
  %arrayidx84 = getelementptr inbounds [8 x i32], [8 x i32]* %offset, i64 0, i64 %idxprom83, !dbg !6146
  %76 = load i32, i32* %arrayidx84, align 4, !dbg !6146
  %77 = load i32, i32* %b, align 4, !dbg !6147
  %idxprom85 = sext i32 %77 to i64, !dbg !6148
  %arrayidx86 = getelementptr inbounds [8 x i32], [8 x i32]* %count, i64 0, i64 %idxprom85, !dbg !6148
  %78 = load i32, i32* %arrayidx86, align 4, !dbg !6148
  %add87 = add nsw i32 %76, %78, !dbg !6149
  %79 = load i32, i32* %depth.addr, align 4, !dbg !6150
  %add88 = add nsw i32 %79, 1, !dbg !6151
  call void @occ_build_recursive(%struct.OcclusionTree* %71, %struct.OccNode* %72, i32 %74, i32 %add87, i32 %add88), !dbg !6152
  br label %if.end89

if.end89:                                         ; preds = %if.else80, %if.then53
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then22
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.then13
  br label %for.inc92, !dbg !6153

for.inc92:                                        ; preds = %if.end91
  %80 = load i32, i32* %b, align 4, !dbg !6154
  %inc93 = add nsw i32 %80, 1, !dbg !6154
  store i32 %inc93, i32* %b, align 4, !dbg !6154
  br label %for.cond7, !dbg !6155, !llvm.loop !6156

for.end94:                                        ; preds = %for.cond7
  %81 = load i32, i32* %depth.addr, align 4, !dbg !6158
  %cmp95 = icmp eq i32 %81, 1, !dbg !6160
  br i1 %cmp95, label %land.lhs.true96, label %if.end100, !dbg !6161

land.lhs.true96:                                  ; preds = %for.end94
  %82 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6162
  %dothreadedbuild97 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %82, i32 0, i32 11, !dbg !6163
  %83 = load i32, i32* %dothreadedbuild97, align 8, !dbg !6163
  %tobool98 = icmp ne i32 %83, 0, !dbg !6162
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !6164

if.then99:                                        ; preds = %land.lhs.true96
  call void @BLI_end_threads(%struct.ListBase* %threads), !dbg !6165
  br label %if.end100, !dbg !6165

if.end100:                                        ; preds = %if.then99, %land.lhs.true96, %for.end94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %for.end
  store i32 0, i32* %b, align 4, !dbg !6166
  br label %for.cond102, !dbg !6168

for.cond102:                                      ; preds = %for.inc134, %if.end101
  %84 = load i32, i32* %b, align 4, !dbg !6169
  %cmp103 = icmp slt i32 %84, 8, !dbg !6171
  br i1 %cmp103, label %for.body104, label %for.end136, !dbg !6172

for.body104:                                      ; preds = %for.cond102
  %85 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6173
  %childflag105 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %85, i32 0, i32 6, !dbg !6176
  %86 = load i32, i32* %childflag105, align 8, !dbg !6176
  %87 = load i32, i32* %b, align 4, !dbg !6177
  %shl106 = shl i32 1, %87, !dbg !6178
  %and = and i32 %86, %shl106, !dbg !6179
  %tobool107 = icmp ne i32 %and, 0, !dbg !6179
  br i1 %tobool107, label %if.then108, label %if.else114, !dbg !6180

if.then108:                                       ; preds = %for.body104
  store %struct.OccNode* %tmpnode, %struct.OccNode** %child, align 8, !dbg !6181
  %88 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6183
  %face109 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %88, i32 0, i32 2, !dbg !6184
  %89 = load %struct.OccFace*, %struct.OccFace** %face109, align 8, !dbg !6184
  %90 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6185
  %child110 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %90, i32 0, i32 7, !dbg !6186
  %91 = load i32, i32* %b, align 4, !dbg !6187
  %idxprom111 = sext i32 %91 to i64, !dbg !6185
  %arrayidx112 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child110, i64 0, i64 %idxprom111, !dbg !6185
  %face113 = bitcast %union.anon* %arrayidx112 to i32*, !dbg !6188
  %92 = load i32, i32* %face113, align 8, !dbg !6188
  %idx.ext = sext i32 %92 to i64, !dbg !6189
  %add.ptr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %89, i64 %idx.ext, !dbg !6189
  call void @occ_node_from_face(%struct.OccFace* %add.ptr, %struct.OccNode* %tmpnode), !dbg !6190
  br label %if.end119, !dbg !6191

if.else114:                                       ; preds = %for.body104
  %93 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6192
  %child115 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %93, i32 0, i32 7, !dbg !6194
  %94 = load i32, i32* %b, align 4, !dbg !6195
  %idxprom116 = sext i32 %94 to i64, !dbg !6192
  %arrayidx117 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child115, i64 0, i64 %idxprom116, !dbg !6192
  %node118 = bitcast %union.anon* %arrayidx117 to %struct.OccNode**, !dbg !6196
  %95 = load %struct.OccNode*, %struct.OccNode** %node118, align 8, !dbg !6196
  store %struct.OccNode* %95, %struct.OccNode** %child, align 8, !dbg !6197
  br label %if.end119

if.end119:                                        ; preds = %if.else114, %if.then108
  %96 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6198
  %tobool120 = icmp ne %struct.OccNode* %96, null, !dbg !6198
  br i1 %tobool120, label %if.then121, label %if.end133, !dbg !6200

if.then121:                                       ; preds = %if.end119
  %97 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6201
  %area = getelementptr inbounds %struct.OccNode, %struct.OccNode* %97, i32 0, i32 1, !dbg !6203
  %98 = load float, float* %area, align 4, !dbg !6203
  %99 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6204
  %area122 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %99, i32 0, i32 1, !dbg !6205
  %100 = load float, float* %area122, align 4, !dbg !6206
  %add123 = fadd float %100, %98, !dbg !6206
  store float %add123, float* %area122, align 4, !dbg !6206
  %101 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6207
  %sh = getelementptr inbounds %struct.OccNode, %struct.OccNode* %101, i32 0, i32 2, !dbg !6208
  %arraydecay124 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !6207
  %102 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6209
  %sh125 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %102, i32 0, i32 2, !dbg !6210
  %arraydecay126 = getelementptr inbounds [9 x float], [9 x float]* %sh125, i64 0, i64 0, !dbg !6209
  %103 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6211
  %sh127 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %103, i32 0, i32 2, !dbg !6212
  %arraydecay128 = getelementptr inbounds [9 x float], [9 x float]* %sh127, i64 0, i64 0, !dbg !6211
  call void @sh_add(float* %arraydecay124, float* %arraydecay126, float* %arraydecay128), !dbg !6213
  %104 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6214
  %co = getelementptr inbounds %struct.OccNode, %struct.OccNode* %104, i32 0, i32 0, !dbg !6215
  %arraydecay129 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6214
  %105 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6216
  %co130 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %105, i32 0, i32 0, !dbg !6217
  %arraydecay131 = getelementptr inbounds [3 x float], [3 x float]* %co130, i64 0, i64 0, !dbg !6216
  %106 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6218
  %area132 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %106, i32 0, i32 1, !dbg !6219
  %107 = load float, float* %area132, align 4, !dbg !6219
  call void @madd_v3_v3fl(float* %arraydecay129, float* %arraydecay131, float %107), !dbg !6220
  br label %if.end133, !dbg !6221

if.end133:                                        ; preds = %if.then121, %if.end119
  br label %for.inc134, !dbg !6222

for.inc134:                                       ; preds = %if.end133
  %108 = load i32, i32* %b, align 4, !dbg !6223
  %inc135 = add nsw i32 %108, 1, !dbg !6223
  store i32 %inc135, i32* %b, align 4, !dbg !6223
  br label %for.cond102, !dbg !6224, !llvm.loop !6225

for.end136:                                       ; preds = %for.cond102
  %109 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6227
  %area137 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %109, i32 0, i32 1, !dbg !6229
  %110 = load float, float* %area137, align 4, !dbg !6229
  %cmp138 = fcmp une float %110, 0.000000e+00, !dbg !6230
  br i1 %cmp138, label %if.then139, label %if.end143, !dbg !6231

if.then139:                                       ; preds = %for.end136
  %111 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6232
  %co140 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %111, i32 0, i32 0, !dbg !6233
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %co140, i64 0, i64 0, !dbg !6232
  %112 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6234
  %area142 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %112, i32 0, i32 1, !dbg !6235
  %113 = load float, float* %area142, align 4, !dbg !6235
  %div = fdiv float 1.000000e+00, %113, !dbg !6236
  call void @mul_v3_fl(float* %arraydecay141, float %div), !dbg !6237
  br label %if.end143, !dbg !6237

if.end143:                                        ; preds = %if.then139, %for.end136
  %114 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6238
  %dco = getelementptr inbounds %struct.OccNode, %struct.OccNode* %114, i32 0, i32 3, !dbg !6239
  store float 0.000000e+00, float* %dco, align 4, !dbg !6240
  %115 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6241
  %area144 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %115, i32 0, i32 1, !dbg !6243
  %116 = load float, float* %area144, align 4, !dbg !6243
  %cmp145 = fcmp ogt float %116, 0.000000e+00, !dbg !6244
  br i1 %cmp145, label %if.then146, label %if.end150, !dbg !6245

if.then146:                                       ; preds = %if.end143
  %117 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6246
  %118 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6247
  %119 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6248
  %co147 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %119, i32 0, i32 0, !dbg !6249
  %arraydecay148 = getelementptr inbounds [3 x float], [3 x float]* %co147, i64 0, i64 0, !dbg !6248
  %120 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6250
  %dco149 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %120, i32 0, i32 3, !dbg !6251
  call void @occ_build_dco(%struct.OcclusionTree* %117, %struct.OccNode* %118, float* %arraydecay148, float* %dco149), !dbg !6252
  br label %if.end150, !dbg !6252

if.end150:                                        ; preds = %if.then146, %if.end143
  ret void, !dbg !6253
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_shade(%struct.Render* %re, %struct.OcclusionTree* %tree) #0 !dbg !6254 {
entry:
  %re.addr = alloca %struct.Render*, align 8
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %ssamp = alloca %struct.ShadeSample, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %a = alloca i32, align 4
  store %struct.Render* %re, %struct.Render** %re.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Render** %re.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.ShadeSample* %ssamp, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !6263, metadata !DIExpression()), !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !6265, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6267, metadata !DIExpression()), !dbg !6268
  %0 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6269
  %1 = bitcast %struct.Render* %0 to i8*, !dbg !6270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 bitcast (%struct.Render* @R to i8*), i8* align 8 %1, i64 6240, i1 false), !dbg !6270
  %2 = bitcast %struct.ShadeSample* %ssamp to i8*, !dbg !6271
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 27080, i1 false), !dbg !6271
  %3 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6272
  %lay = getelementptr inbounds %struct.Render, %struct.Render* %3, i32 0, i32 48, !dbg !6273
  %4 = load i32, i32* %lay, align 8, !dbg !6273
  %shi = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6274
  %arrayidx = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi, i64 0, i64 0, !dbg !6275
  %lay1 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx, i32 0, i32 117, !dbg !6276
  store i32 %4, i32* %lay1, align 8, !dbg !6277
  %shi2 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6278
  %arrayidx3 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi2, i64 0, i64 0, !dbg !6279
  %passflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx3, i32 0, i32 119, !dbg !6280
  store i32 12, i32* %passflag, align 8, !dbg !6281
  %shi4 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 2, !dbg !6282
  %arrayidx5 = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi4, i64 0, i64 0, !dbg !6283
  %combinedflag = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %arrayidx5, i32 0, i32 120, !dbg !6284
  store i32 -17, i32* %combinedflag, align 4, !dbg !6285
  %tot = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %ssamp, i32 0, i32 0, !dbg !6286
  store i32 1, i32* %tot, align 8, !dbg !6287
  store i32 0, i32* %a, align 4, !dbg !6288
  br label %for.cond, !dbg !6290

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %a, align 4, !dbg !6291
  %6 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6293
  %totface = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %6, i32 0, i32 8, !dbg !6294
  %7 = load i32, i32* %totface, align 4, !dbg !6294
  %cmp = icmp slt i32 %5, %7, !dbg !6295
  br i1 %cmp, label %for.body, label %for.end, !dbg !6296

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !6297
  %9 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6299
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %9, i32 0, i32 2, !dbg !6300
  %10 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !6300
  %11 = load i32, i32* %a, align 4, !dbg !6301
  %idxprom = sext i32 %11 to i64, !dbg !6299
  %arrayidx6 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %10, i64 %idxprom, !dbg !6299
  %obi7 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %arrayidx6, i32 0, i32 0, !dbg !6302
  %12 = load i32, i32* %obi7, align 4, !dbg !6302
  %idxprom8 = sext i32 %12 to i64, !dbg !6303
  %arrayidx9 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %8, i64 %idxprom8, !dbg !6303
  store %struct.ObjectInstanceRen* %arrayidx9, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6304
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6305
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 2, !dbg !6306
  %14 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !6306
  %15 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6307
  %face10 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %15, i32 0, i32 2, !dbg !6308
  %16 = load %struct.OccFace*, %struct.OccFace** %face10, align 8, !dbg !6308
  %17 = load i32, i32* %a, align 4, !dbg !6309
  %idxprom11 = sext i32 %17 to i64, !dbg !6307
  %arrayidx12 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %16, i64 %idxprom11, !dbg !6307
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %arrayidx12, i32 0, i32 1, !dbg !6310
  %18 = load i32, i32* %facenr, align 4, !dbg !6310
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %14, i32 %18), !dbg !6311
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !6312
  %19 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !6313
  %20 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !6314
  %21 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6315
  %rad = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %21, i32 0, i32 4, !dbg !6316
  %22 = load [3 x float]*, [3 x float]** %rad, align 8, !dbg !6316
  %23 = load i32, i32* %a, align 4, !dbg !6317
  %idxprom13 = sext i32 %23 to i64, !dbg !6315
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %22, i64 %idxprom13, !dbg !6315
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !6315
  call void @occ_shade(%struct.ShadeSample* %ssamp, %struct.ObjectInstanceRen* %19, %struct.VlakRen* %20, float* %arraydecay), !dbg !6318
  %24 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6319
  %test_break = getelementptr inbounds %struct.Render, %struct.Render* %24, i32 0, i32 96, !dbg !6321
  %25 = load i32 (i8*)*, i32 (i8*)** %test_break, align 8, !dbg !6321
  %26 = load %struct.Render*, %struct.Render** %re.addr, align 8, !dbg !6322
  %tbh = getelementptr inbounds %struct.Render, %struct.Render* %26, i32 0, i32 97, !dbg !6323
  %27 = load i8*, i8** %tbh, align 8, !dbg !6323
  %call15 = call i32 %25(i8* %27), !dbg !6319
  %tobool = icmp ne i32 %call15, 0, !dbg !6319
  br i1 %tobool, label %if.then, label %if.end, !dbg !6324

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6325

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6326

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %a, align 4, !dbg !6327
  %inc = add nsw i32 %28, 1, !dbg !6327
  store i32 %inc, i32* %a, align 4, !dbg !6327
  br label %for.cond, !dbg !6328, !llvm.loop !6329

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6331
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_sum_occlusion(%struct.OcclusionTree* %tree, %struct.OccNode* %node) #0 !dbg !6332 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %node.addr = alloca %struct.OccNode*, align 8
  %child = alloca %struct.OccNode*, align 8
  %occ = alloca float, align 4
  %area = alloca float, align 4
  %totarea = alloca float, align 4
  %rad = alloca [3 x float], align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %indirect = alloca i32, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.declare(metadata %struct.OccNode** %child, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata float* %occ, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata float* %area, metadata !6343, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.declare(metadata float* %totarea, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata [3 x float]* %rad, metadata !6347, metadata !DIExpression()), !dbg !6348
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6349, metadata !DIExpression()), !dbg !6350
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6351, metadata !DIExpression()), !dbg !6352
  call void @llvm.dbg.declare(metadata i32* %indirect, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6355
  %doindirect = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %0, i32 0, i32 13, !dbg !6356
  %1 = load i32, i32* %doindirect, align 8, !dbg !6356
  store i32 %1, i32* %indirect, align 4, !dbg !6354
  store float 0.000000e+00, float* %occ, align 4, !dbg !6357
  store float 0.000000e+00, float* %totarea, align 4, !dbg !6358
  %2 = load i32, i32* %indirect, align 4, !dbg !6359
  %tobool = icmp ne i32 %2, 0, !dbg !6359
  br i1 %tobool, label %if.then, label %if.end, !dbg !6361

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !6362
  call void @zero_v3(float* %arraydecay), !dbg !6363
  br label %if.end, !dbg !6363

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %b, align 4, !dbg !6364
  br label %for.cond, !dbg !6366

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %b, align 4, !dbg !6367
  %cmp = icmp slt i32 %3, 8, !dbg !6369
  br i1 %cmp, label %for.body, label %for.end, !dbg !6370

for.body:                                         ; preds = %for.cond
  %4 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6371
  %childflag = getelementptr inbounds %struct.OccNode, %struct.OccNode* %4, i32 0, i32 6, !dbg !6374
  %5 = load i32, i32* %childflag, align 8, !dbg !6374
  %6 = load i32, i32* %b, align 4, !dbg !6375
  %shl = shl i32 1, %6, !dbg !6376
  %and = and i32 %5, %shl, !dbg !6377
  %tobool1 = icmp ne i32 %and, 0, !dbg !6377
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6378

if.then2:                                         ; preds = %for.body
  %7 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6379
  %child3 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %7, i32 0, i32 7, !dbg !6381
  %8 = load i32, i32* %b, align 4, !dbg !6382
  %idxprom = sext i32 %8 to i64, !dbg !6379
  %arrayidx = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child3, i64 0, i64 %idxprom, !dbg !6379
  %face = bitcast %union.anon* %arrayidx to i32*, !dbg !6383
  %9 = load i32, i32* %face, align 8, !dbg !6383
  store i32 %9, i32* %a, align 4, !dbg !6384
  %10 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6385
  %face4 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %10, i32 0, i32 2, !dbg !6386
  %11 = load %struct.OccFace*, %struct.OccFace** %face4, align 8, !dbg !6386
  %12 = load i32, i32* %a, align 4, !dbg !6387
  %idxprom5 = sext i32 %12 to i64, !dbg !6385
  %arrayidx6 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %11, i64 %idxprom5, !dbg !6385
  call void @occ_face(%struct.OccFace* %arrayidx6, float* null, float* null, float* %area), !dbg !6388
  %13 = load float, float* %area, align 4, !dbg !6389
  %14 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6390
  %occlusion = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %14, i32 0, i32 3, !dbg !6391
  %15 = load float*, float** %occlusion, align 8, !dbg !6391
  %16 = load i32, i32* %a, align 4, !dbg !6392
  %idxprom7 = sext i32 %16 to i64, !dbg !6390
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 %idxprom7, !dbg !6390
  %17 = load float, float* %arrayidx8, align 4, !dbg !6390
  %mul = fmul float %13, %17, !dbg !6393
  %18 = load float, float* %occ, align 4, !dbg !6394
  %add = fadd float %18, %mul, !dbg !6394
  store float %add, float* %occ, align 4, !dbg !6394
  %19 = load i32, i32* %indirect, align 4, !dbg !6395
  %tobool9 = icmp ne i32 %19, 0, !dbg !6395
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !6397

if.then10:                                        ; preds = %if.then2
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !6398
  %20 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6399
  %rad12 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %20, i32 0, i32 4, !dbg !6400
  %21 = load [3 x float]*, [3 x float]** %rad12, align 8, !dbg !6400
  %22 = load i32, i32* %a, align 4, !dbg !6401
  %idxprom13 = sext i32 %22 to i64, !dbg !6399
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom13, !dbg !6399
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !6399
  %23 = load float, float* %area, align 4, !dbg !6402
  call void @madd_v3_v3fl(float* %arraydecay11, float* %arraydecay15, float %23), !dbg !6403
  br label %if.end16, !dbg !6403

if.end16:                                         ; preds = %if.then10, %if.then2
  %24 = load float, float* %area, align 4, !dbg !6404
  %25 = load float, float* %totarea, align 4, !dbg !6405
  %add17 = fadd float %25, %24, !dbg !6405
  store float %add17, float* %totarea, align 4, !dbg !6405
  br label %if.end42, !dbg !6406

if.else:                                          ; preds = %for.body
  %26 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6407
  %child18 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %26, i32 0, i32 7, !dbg !6409
  %27 = load i32, i32* %b, align 4, !dbg !6410
  %idxprom19 = sext i32 %27 to i64, !dbg !6407
  %arrayidx20 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child18, i64 0, i64 %idxprom19, !dbg !6407
  %node21 = bitcast %union.anon* %arrayidx20 to %struct.OccNode**, !dbg !6411
  %28 = load %struct.OccNode*, %struct.OccNode** %node21, align 8, !dbg !6411
  %tobool22 = icmp ne %struct.OccNode* %28, null, !dbg !6407
  br i1 %tobool22, label %if.then23, label %if.end41, !dbg !6412

if.then23:                                        ; preds = %if.else
  %29 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6413
  %child24 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %29, i32 0, i32 7, !dbg !6415
  %30 = load i32, i32* %b, align 4, !dbg !6416
  %idxprom25 = sext i32 %30 to i64, !dbg !6413
  %arrayidx26 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child24, i64 0, i64 %idxprom25, !dbg !6413
  %node27 = bitcast %union.anon* %arrayidx26 to %struct.OccNode**, !dbg !6417
  %31 = load %struct.OccNode*, %struct.OccNode** %node27, align 8, !dbg !6417
  store %struct.OccNode* %31, %struct.OccNode** %child, align 8, !dbg !6418
  %32 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6419
  %33 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6420
  call void @occ_sum_occlusion(%struct.OcclusionTree* %32, %struct.OccNode* %33), !dbg !6421
  %34 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6422
  %area28 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %34, i32 0, i32 1, !dbg !6423
  %35 = load float, float* %area28, align 4, !dbg !6423
  %36 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6424
  %occlusion29 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %36, i32 0, i32 4, !dbg !6425
  %37 = load float, float* %occlusion29, align 8, !dbg !6425
  %mul30 = fmul float %35, %37, !dbg !6426
  %38 = load float, float* %occ, align 4, !dbg !6427
  %add31 = fadd float %38, %mul30, !dbg !6427
  store float %add31, float* %occ, align 4, !dbg !6427
  %39 = load i32, i32* %indirect, align 4, !dbg !6428
  %tobool32 = icmp ne i32 %39, 0, !dbg !6428
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !6430

if.then33:                                        ; preds = %if.then23
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !6431
  %40 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6432
  %rad35 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %40, i32 0, i32 5, !dbg !6433
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %rad35, i64 0, i64 0, !dbg !6432
  %41 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6434
  %area37 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %41, i32 0, i32 1, !dbg !6435
  %42 = load float, float* %area37, align 4, !dbg !6435
  call void @madd_v3_v3fl(float* %arraydecay34, float* %arraydecay36, float %42), !dbg !6436
  br label %if.end38, !dbg !6436

if.end38:                                         ; preds = %if.then33, %if.then23
  %43 = load %struct.OccNode*, %struct.OccNode** %child, align 8, !dbg !6437
  %area39 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %43, i32 0, i32 1, !dbg !6438
  %44 = load float, float* %area39, align 4, !dbg !6438
  %45 = load float, float* %totarea, align 4, !dbg !6439
  %add40 = fadd float %45, %44, !dbg !6439
  store float %add40, float* %totarea, align 4, !dbg !6439
  br label %if.end41, !dbg !6440

if.end41:                                         ; preds = %if.end38, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end16
  br label %for.inc, !dbg !6441

for.inc:                                          ; preds = %if.end42
  %46 = load i32, i32* %b, align 4, !dbg !6442
  %inc = add nsw i32 %46, 1, !dbg !6442
  store i32 %inc, i32* %b, align 4, !dbg !6442
  br label %for.cond, !dbg !6443, !llvm.loop !6444

for.end:                                          ; preds = %for.cond
  %47 = load float, float* %totarea, align 4, !dbg !6446
  %cmp43 = fcmp une float %47, 0.000000e+00, !dbg !6448
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !6449

if.then44:                                        ; preds = %for.end
  %48 = load float, float* %totarea, align 4, !dbg !6450
  %49 = load float, float* %occ, align 4, !dbg !6452
  %div = fdiv float %49, %48, !dbg !6452
  store float %div, float* %occ, align 4, !dbg !6452
  %50 = load i32, i32* %indirect, align 4, !dbg !6453
  %tobool45 = icmp ne i32 %50, 0, !dbg !6453
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !6455

if.then46:                                        ; preds = %if.then44
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !6456
  %51 = load float, float* %totarea, align 4, !dbg !6457
  %div48 = fdiv float 1.000000e+00, %51, !dbg !6458
  call void @mul_v3_fl(float* %arraydecay47, float %div48), !dbg !6459
  br label %if.end49, !dbg !6459

if.end49:                                         ; preds = %if.then46, %if.then44
  br label %if.end50, !dbg !6460

if.end50:                                         ; preds = %if.end49, %for.end
  %52 = load float, float* %occ, align 4, !dbg !6461
  %53 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6462
  %occlusion51 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %53, i32 0, i32 4, !dbg !6463
  store float %52, float* %occlusion51, align 8, !dbg !6464
  %54 = load i32, i32* %indirect, align 4, !dbg !6465
  %tobool52 = icmp ne i32 %54, 0, !dbg !6465
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !6467

if.then53:                                        ; preds = %if.end50
  %55 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6468
  %rad54 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %55, i32 0, i32 5, !dbg !6469
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %rad54, i64 0, i64 0, !dbg !6468
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %rad, i64 0, i64 0, !dbg !6470
  call void @copy_v3_v3(float* %arraydecay55, float* %arraydecay56), !dbg !6471
  br label %if.end57, !dbg !6471

if.end57:                                         ; preds = %if.then53, %if.end50
  ret void, !dbg !6472
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_sh_normalize(%struct.OccNode* %node) #0 !dbg !6473 {
entry:
  %node.addr = alloca %struct.OccNode*, align 8
  %b = alloca i32, align 4
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6478, metadata !DIExpression()), !dbg !6479
  %0 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6480
  %area = getelementptr inbounds %struct.OccNode, %struct.OccNode* %0, i32 0, i32 1, !dbg !6482
  %1 = load float, float* %area, align 4, !dbg !6482
  %cmp = fcmp une float %1, 0.000000e+00, !dbg !6483
  br i1 %cmp, label %if.then, label %if.end, !dbg !6484

if.then:                                          ; preds = %entry
  %2 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6485
  %sh = getelementptr inbounds %struct.OccNode, %struct.OccNode* %2, i32 0, i32 2, !dbg !6486
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !6485
  %3 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6487
  %area1 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %3, i32 0, i32 1, !dbg !6488
  %4 = load float, float* %area1, align 4, !dbg !6488
  %div = fdiv float 1.000000e+00, %4, !dbg !6489
  call void @sh_mul(float* %arraydecay, float %div), !dbg !6490
  br label %if.end, !dbg !6490

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %b, align 4, !dbg !6491
  br label %for.cond, !dbg !6493

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %b, align 4, !dbg !6494
  %cmp2 = icmp slt i32 %5, 8, !dbg !6496
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6497

for.body:                                         ; preds = %for.cond
  %6 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6498
  %childflag = getelementptr inbounds %struct.OccNode, %struct.OccNode* %6, i32 0, i32 6, !dbg !6501
  %7 = load i32, i32* %childflag, align 8, !dbg !6501
  %8 = load i32, i32* %b, align 4, !dbg !6502
  %shl = shl i32 1, %8, !dbg !6503
  %and = and i32 %7, %shl, !dbg !6504
  %tobool = icmp ne i32 %and, 0, !dbg !6504
  br i1 %tobool, label %if.then3, label %if.else, !dbg !6505

if.then3:                                         ; preds = %for.body
  br label %if.end12, !dbg !6506

if.else:                                          ; preds = %for.body
  %9 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6508
  %child = getelementptr inbounds %struct.OccNode, %struct.OccNode* %9, i32 0, i32 7, !dbg !6510
  %10 = load i32, i32* %b, align 4, !dbg !6511
  %idxprom = sext i32 %10 to i64, !dbg !6508
  %arrayidx = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child, i64 0, i64 %idxprom, !dbg !6508
  %node4 = bitcast %union.anon* %arrayidx to %struct.OccNode**, !dbg !6512
  %11 = load %struct.OccNode*, %struct.OccNode** %node4, align 8, !dbg !6512
  %tobool5 = icmp ne %struct.OccNode* %11, null, !dbg !6508
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !6513

if.then6:                                         ; preds = %if.else
  %12 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6514
  %child7 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %12, i32 0, i32 7, !dbg !6516
  %13 = load i32, i32* %b, align 4, !dbg !6517
  %idxprom8 = sext i32 %13 to i64, !dbg !6514
  %arrayidx9 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child7, i64 0, i64 %idxprom8, !dbg !6514
  %node10 = bitcast %union.anon* %arrayidx9 to %struct.OccNode**, !dbg !6518
  %14 = load %struct.OccNode*, %struct.OccNode** %node10, align 8, !dbg !6518
  call void @occ_build_sh_normalize(%struct.OccNode* %14), !dbg !6519
  br label %if.end11, !dbg !6520

if.end11:                                         ; preds = %if.then6, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  br label %for.inc, !dbg !6521

for.inc:                                          ; preds = %if.end12
  %15 = load i32, i32* %b, align 4, !dbg !6522
  %inc = add nsw i32 %15, 1, !dbg !6522
  store i32 %inc, i32* %b, align 4, !dbg !6522
  br label %for.cond, !dbg !6523, !llvm.loop !6524

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6526
}

declare dso_local %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen*, i32) #3

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #3

declare dso_local void @cent_tri_v3(float*, float*, float*, float*) #3

declare dso_local void @mul_m4_v3([4 x float]*, float*) #3

declare dso_local void @mul_m3_v3([3 x float]*, float*) #3

declare dso_local float @area_quad_v3(float*, float*, float*, float*) #3

declare dso_local float @area_tri_v3(float*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_8_split(%struct.OcclusionTree* %tree, i32 %begin, i32 %end, i32* %offset, i32* %count) #0 !dbg !6527 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %begin.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %offset.addr = alloca i32*, align 8
  %count.addr = alloca i32*, align 8
  %b = alloca i32, align 4
  %splitx = alloca i32, align 4
  %splity = alloca [2 x i32], align 4
  %splitz = alloca [4 x i32], align 16
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store i32 %begin, i32* %begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %begin.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6540, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.declare(metadata i32* %splitx, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata [2 x i32]* %splity, metadata !6544, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.declare(metadata [4 x i32]* %splitz, metadata !6547, metadata !DIExpression()), !dbg !6548
  %0 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6549
  %1 = load i32, i32* %begin.addr, align 4, !dbg !6550
  %2 = load i32, i32* %end.addr, align 4, !dbg !6551
  call void @occ_build_split(%struct.OcclusionTree* %0, i32 %1, i32 %2, i32* %splitx), !dbg !6552
  %3 = load i32, i32* %splitx, align 4, !dbg !6553
  %4 = load i32, i32* %begin.addr, align 4, !dbg !6555
  %cmp = icmp eq i32 %3, %4, !dbg !6556
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6557

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %splitx, align 4, !dbg !6558
  %6 = load i32, i32* %end.addr, align 4, !dbg !6559
  %cmp1 = icmp eq i32 %5, %6, !dbg !6560
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6561

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32, i32* %begin.addr, align 4, !dbg !6562
  %8 = load i32, i32* %end.addr, align 4, !dbg !6563
  %add = add nsw i32 %7, %8, !dbg !6564
  %div = sdiv i32 %add, 2, !dbg !6565
  store i32 %div, i32* %splitx, align 4, !dbg !6566
  br label %if.end, !dbg !6567

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %9 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6568
  %10 = load i32, i32* %begin.addr, align 4, !dbg !6569
  %11 = load i32, i32* %splitx, align 4, !dbg !6570
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 0, !dbg !6571
  call void @occ_build_split(%struct.OcclusionTree* %9, i32 %10, i32 %11, i32* %arrayidx), !dbg !6572
  %12 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6573
  %13 = load i32, i32* %splitx, align 4, !dbg !6574
  %14 = load i32, i32* %end.addr, align 4, !dbg !6575
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 1, !dbg !6576
  call void @occ_build_split(%struct.OcclusionTree* %12, i32 %13, i32 %14, i32* %arrayidx2), !dbg !6577
  %15 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6578
  %16 = load i32, i32* %begin.addr, align 4, !dbg !6579
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 0, !dbg !6580
  %17 = load i32, i32* %arrayidx3, align 4, !dbg !6580
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 0, !dbg !6581
  call void @occ_build_split(%struct.OcclusionTree* %15, i32 %16, i32 %17, i32* %arrayidx4), !dbg !6582
  %18 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6583
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 0, !dbg !6584
  %19 = load i32, i32* %arrayidx5, align 4, !dbg !6584
  %20 = load i32, i32* %splitx, align 4, !dbg !6585
  %arrayidx6 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 1, !dbg !6586
  call void @occ_build_split(%struct.OcclusionTree* %18, i32 %19, i32 %20, i32* %arrayidx6), !dbg !6587
  %21 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6588
  %22 = load i32, i32* %splitx, align 4, !dbg !6589
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 1, !dbg !6590
  %23 = load i32, i32* %arrayidx7, align 4, !dbg !6590
  %arrayidx8 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 2, !dbg !6591
  call void @occ_build_split(%struct.OcclusionTree* %21, i32 %22, i32 %23, i32* %arrayidx8), !dbg !6592
  %24 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6593
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 1, !dbg !6594
  %25 = load i32, i32* %arrayidx9, align 4, !dbg !6594
  %26 = load i32, i32* %end.addr, align 4, !dbg !6595
  %arrayidx10 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 3, !dbg !6596
  call void @occ_build_split(%struct.OcclusionTree* %24, i32 %25, i32 %26, i32* %arrayidx10), !dbg !6597
  %27 = load i32, i32* %begin.addr, align 4, !dbg !6598
  %28 = load i32*, i32** %offset.addr, align 8, !dbg !6599
  %arrayidx11 = getelementptr inbounds i32, i32* %28, i64 0, !dbg !6599
  store i32 %27, i32* %arrayidx11, align 4, !dbg !6600
  %arrayidx12 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 0, !dbg !6601
  %29 = load i32, i32* %arrayidx12, align 16, !dbg !6601
  %30 = load i32*, i32** %offset.addr, align 8, !dbg !6602
  %arrayidx13 = getelementptr inbounds i32, i32* %30, i64 1, !dbg !6602
  store i32 %29, i32* %arrayidx13, align 4, !dbg !6603
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 0, !dbg !6604
  %31 = load i32, i32* %arrayidx14, align 4, !dbg !6604
  %32 = load i32*, i32** %offset.addr, align 8, !dbg !6605
  %arrayidx15 = getelementptr inbounds i32, i32* %32, i64 2, !dbg !6605
  store i32 %31, i32* %arrayidx15, align 4, !dbg !6606
  %arrayidx16 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 1, !dbg !6607
  %33 = load i32, i32* %arrayidx16, align 4, !dbg !6607
  %34 = load i32*, i32** %offset.addr, align 8, !dbg !6608
  %arrayidx17 = getelementptr inbounds i32, i32* %34, i64 3, !dbg !6608
  store i32 %33, i32* %arrayidx17, align 4, !dbg !6609
  %35 = load i32, i32* %splitx, align 4, !dbg !6610
  %36 = load i32*, i32** %offset.addr, align 8, !dbg !6611
  %arrayidx18 = getelementptr inbounds i32, i32* %36, i64 4, !dbg !6611
  store i32 %35, i32* %arrayidx18, align 4, !dbg !6612
  %arrayidx19 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 2, !dbg !6613
  %37 = load i32, i32* %arrayidx19, align 8, !dbg !6613
  %38 = load i32*, i32** %offset.addr, align 8, !dbg !6614
  %arrayidx20 = getelementptr inbounds i32, i32* %38, i64 5, !dbg !6614
  store i32 %37, i32* %arrayidx20, align 4, !dbg !6615
  %arrayidx21 = getelementptr inbounds [2 x i32], [2 x i32]* %splity, i64 0, i64 1, !dbg !6616
  %39 = load i32, i32* %arrayidx21, align 4, !dbg !6616
  %40 = load i32*, i32** %offset.addr, align 8, !dbg !6617
  %arrayidx22 = getelementptr inbounds i32, i32* %40, i64 6, !dbg !6617
  store i32 %39, i32* %arrayidx22, align 4, !dbg !6618
  %arrayidx23 = getelementptr inbounds [4 x i32], [4 x i32]* %splitz, i64 0, i64 3, !dbg !6619
  %41 = load i32, i32* %arrayidx23, align 4, !dbg !6619
  %42 = load i32*, i32** %offset.addr, align 8, !dbg !6620
  %arrayidx24 = getelementptr inbounds i32, i32* %42, i64 7, !dbg !6620
  store i32 %41, i32* %arrayidx24, align 4, !dbg !6621
  store i32 0, i32* %b, align 4, !dbg !6622
  br label %for.cond, !dbg !6624

for.cond:                                         ; preds = %for.inc, %if.end
  %43 = load i32, i32* %b, align 4, !dbg !6625
  %cmp25 = icmp slt i32 %43, 7, !dbg !6627
  br i1 %cmp25, label %for.body, label %for.end, !dbg !6628

for.body:                                         ; preds = %for.cond
  %44 = load i32*, i32** %offset.addr, align 8, !dbg !6629
  %45 = load i32, i32* %b, align 4, !dbg !6630
  %add26 = add nsw i32 %45, 1, !dbg !6631
  %idxprom = sext i32 %add26 to i64, !dbg !6629
  %arrayidx27 = getelementptr inbounds i32, i32* %44, i64 %idxprom, !dbg !6629
  %46 = load i32, i32* %arrayidx27, align 4, !dbg !6629
  %47 = load i32*, i32** %offset.addr, align 8, !dbg !6632
  %48 = load i32, i32* %b, align 4, !dbg !6633
  %idxprom28 = sext i32 %48 to i64, !dbg !6632
  %arrayidx29 = getelementptr inbounds i32, i32* %47, i64 %idxprom28, !dbg !6632
  %49 = load i32, i32* %arrayidx29, align 4, !dbg !6632
  %sub = sub nsw i32 %46, %49, !dbg !6634
  %50 = load i32*, i32** %count.addr, align 8, !dbg !6635
  %51 = load i32, i32* %b, align 4, !dbg !6636
  %idxprom30 = sext i32 %51 to i64, !dbg !6635
  %arrayidx31 = getelementptr inbounds i32, i32* %50, i64 %idxprom30, !dbg !6635
  store i32 %sub, i32* %arrayidx31, align 4, !dbg !6637
  br label %for.inc, !dbg !6635

for.inc:                                          ; preds = %for.body
  %52 = load i32, i32* %b, align 4, !dbg !6638
  %inc = add nsw i32 %52, 1, !dbg !6638
  store i32 %inc, i32* %b, align 4, !dbg !6638
  br label %for.cond, !dbg !6639, !llvm.loop !6640

for.end:                                          ; preds = %for.cond
  %53 = load i32, i32* %end.addr, align 4, !dbg !6642
  %54 = load i32*, i32** %offset.addr, align 8, !dbg !6643
  %arrayidx32 = getelementptr inbounds i32, i32* %54, i64 7, !dbg !6643
  %55 = load i32, i32* %arrayidx32, align 4, !dbg !6643
  %sub33 = sub nsw i32 %53, %55, !dbg !6644
  %56 = load i32*, i32** %count.addr, align 8, !dbg !6645
  %arrayidx34 = getelementptr inbounds i32, i32* %56, i64 7, !dbg !6645
  store i32 %sub33, i32* %arrayidx34, align 4, !dbg !6646
  ret void, !dbg !6647
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @exec_occ_build(i8* %data) #0 !dbg !6648 {
entry:
  %data.addr = alloca i8*, align 8
  %othread = alloca %struct.OcclusionBuildThread*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata %struct.OcclusionBuildThread** %othread, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6653
  %1 = bitcast i8* %0 to %struct.OcclusionBuildThread*, !dbg !6654
  store %struct.OcclusionBuildThread* %1, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6652
  %2 = load %struct.OcclusionBuildThread*, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6655
  %tree = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %2, i32 0, i32 0, !dbg !6656
  %3 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree, align 8, !dbg !6656
  %4 = load %struct.OcclusionBuildThread*, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6657
  %node = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %4, i32 0, i32 4, !dbg !6658
  %5 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !6658
  %6 = load %struct.OcclusionBuildThread*, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6659
  %begin = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %6, i32 0, i32 1, !dbg !6660
  %7 = load i32, i32* %begin, align 8, !dbg !6660
  %8 = load %struct.OcclusionBuildThread*, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6661
  %end = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %8, i32 0, i32 2, !dbg !6662
  %9 = load i32, i32* %end, align 4, !dbg !6662
  %10 = load %struct.OcclusionBuildThread*, %struct.OcclusionBuildThread** %othread, align 8, !dbg !6663
  %depth = getelementptr inbounds %struct.OcclusionBuildThread, %struct.OcclusionBuildThread* %10, i32 0, i32 3, !dbg !6664
  %11 = load i32, i32* %depth, align 8, !dbg !6664
  call void @occ_build_recursive(%struct.OcclusionTree* %3, %struct.OccNode* %5, i32 %7, i32 %9, i32 %11), !dbg !6665
  ret i8* null, !dbg !6666
}

declare dso_local void @BLI_lock_thread(i32) #3

declare dso_local void @BLI_unlock_thread(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @occ_node_from_face(%struct.OccFace* %face, %struct.OccNode* %node) #0 !dbg !6667 {
entry:
  %face.addr = alloca %struct.OccFace*, align 8
  %node.addr = alloca %struct.OccNode*, align 8
  %n = alloca [3 x float], align 4
  store %struct.OccFace* %face, %struct.OccFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccFace** %face.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !6672, metadata !DIExpression()), !dbg !6673
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !6674, metadata !DIExpression()), !dbg !6675
  %0 = load %struct.OccFace*, %struct.OccFace** %face.addr, align 8, !dbg !6676
  %1 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6677
  %co = getelementptr inbounds %struct.OccNode, %struct.OccNode* %1, i32 0, i32 0, !dbg !6678
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6677
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6679
  %2 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6680
  %area = getelementptr inbounds %struct.OccNode, %struct.OccNode* %2, i32 0, i32 1, !dbg !6681
  call void @occ_face(%struct.OccFace* %0, float* %arraydecay, float* %arraydecay1, float* %area), !dbg !6682
  %3 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6683
  %dco = getelementptr inbounds %struct.OccNode, %struct.OccNode* %3, i32 0, i32 3, !dbg !6684
  store float 0.000000e+00, float* %dco, align 4, !dbg !6685
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !6686
  %4 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6687
  %area3 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %4, i32 0, i32 1, !dbg !6688
  %5 = load float, float* %area3, align 4, !dbg !6688
  %6 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6689
  %sh = getelementptr inbounds %struct.OccNode, %struct.OccNode* %6, i32 0, i32 2, !dbg !6690
  %arraydecay4 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !6689
  call void @sh_from_disc(float* %arraydecay2, float %5, float* %arraydecay4), !dbg !6691
  ret void, !dbg !6692
}

; Function Attrs: noinline nounwind uwtable
define internal void @sh_add(float* %shresult, float* %sh1, float* %sh2) #0 !dbg !6693 {
entry:
  %shresult.addr = alloca float*, align 8
  %sh1.addr = alloca float*, align 8
  %sh2.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store float* %shresult, float** %shresult.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shresult.addr, metadata !6696, metadata !DIExpression()), !dbg !6697
  store float* %sh1, float** %sh1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sh1.addr, metadata !6698, metadata !DIExpression()), !dbg !6699
  store float* %sh2, float** %sh2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sh2.addr, metadata !6700, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6702, metadata !DIExpression()), !dbg !6703
  store i32 0, i32* %i, align 4, !dbg !6704
  br label %for.cond, !dbg !6706

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6707
  %cmp = icmp slt i32 %0, 9, !dbg !6709
  br i1 %cmp, label %for.body, label %for.end, !dbg !6710

for.body:                                         ; preds = %for.cond
  %1 = load float*, float** %sh1.addr, align 8, !dbg !6711
  %2 = load i32, i32* %i, align 4, !dbg !6712
  %idxprom = sext i32 %2 to i64, !dbg !6711
  %arrayidx = getelementptr inbounds float, float* %1, i64 %idxprom, !dbg !6711
  %3 = load float, float* %arrayidx, align 4, !dbg !6711
  %4 = load float*, float** %sh2.addr, align 8, !dbg !6713
  %5 = load i32, i32* %i, align 4, !dbg !6714
  %idxprom1 = sext i32 %5 to i64, !dbg !6713
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 %idxprom1, !dbg !6713
  %6 = load float, float* %arrayidx2, align 4, !dbg !6713
  %add = fadd float %3, %6, !dbg !6715
  %7 = load float*, float** %shresult.addr, align 8, !dbg !6716
  %8 = load i32, i32* %i, align 4, !dbg !6717
  %idxprom3 = sext i32 %8 to i64, !dbg !6716
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 %idxprom3, !dbg !6716
  store float %add, float* %arrayidx4, align 4, !dbg !6718
  br label %for.inc, !dbg !6716

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !6719
  %inc = add nsw i32 %9, 1, !dbg !6719
  store i32 %inc, i32* %i, align 4, !dbg !6719
  br label %for.cond, !dbg !6720, !llvm.loop !6721

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6723
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !6724 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  %0 = load float*, float** %a.addr, align 8, !dbg !6733
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6733
  %1 = load float, float* %arrayidx, align 4, !dbg !6733
  %2 = load float, float* %f.addr, align 4, !dbg !6734
  %mul = fmul float %1, %2, !dbg !6735
  %3 = load float*, float** %r.addr, align 8, !dbg !6736
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !6736
  %4 = load float, float* %arrayidx1, align 4, !dbg !6737
  %add = fadd float %4, %mul, !dbg !6737
  store float %add, float* %arrayidx1, align 4, !dbg !6737
  %5 = load float*, float** %a.addr, align 8, !dbg !6738
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !6738
  %6 = load float, float* %arrayidx2, align 4, !dbg !6738
  %7 = load float, float* %f.addr, align 4, !dbg !6739
  %mul3 = fmul float %6, %7, !dbg !6740
  %8 = load float*, float** %r.addr, align 8, !dbg !6741
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !6741
  %9 = load float, float* %arrayidx4, align 4, !dbg !6742
  %add5 = fadd float %9, %mul3, !dbg !6742
  store float %add5, float* %arrayidx4, align 4, !dbg !6742
  %10 = load float*, float** %a.addr, align 8, !dbg !6743
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !6743
  %11 = load float, float* %arrayidx6, align 4, !dbg !6743
  %12 = load float, float* %f.addr, align 4, !dbg !6744
  %mul7 = fmul float %11, %12, !dbg !6745
  %13 = load float*, float** %r.addr, align 8, !dbg !6746
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !6746
  %14 = load float, float* %arrayidx8, align 4, !dbg !6747
  %add9 = fadd float %14, %mul7, !dbg !6747
  store float %add9, float* %arrayidx8, align 4, !dbg !6747
  ret void, !dbg !6748
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_dco(%struct.OcclusionTree* %tree, %struct.OccNode* %node, float* %co, float* %dco) #0 !dbg !6749 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %node.addr = alloca %struct.OccNode*, align 8
  %co.addr = alloca float*, align 8
  %dco.addr = alloca float*, align 8
  %b = alloca i32, align 4
  %dist = alloca float, align 4
  %d = alloca [3 x float], align 4
  %nco = alloca [3 x float], align 4
  %child8 = alloca %struct.OccNode*, align 8
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6752, metadata !DIExpression()), !dbg !6753
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !6754, metadata !DIExpression()), !dbg !6755
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6756, metadata !DIExpression()), !dbg !6757
  store float* %dco, float** %dco.addr, align 8
  call void @llvm.dbg.declare(metadata float** %dco.addr, metadata !6758, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6760, metadata !DIExpression()), !dbg !6761
  store i32 0, i32* %b, align 4, !dbg !6762
  br label %for.cond, !dbg !6764

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %b, align 4, !dbg !6765
  %cmp = icmp slt i32 %0, 8, !dbg !6767
  br i1 %cmp, label %for.body, label %for.end, !dbg !6768

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %dist, metadata !6769, metadata !DIExpression()), !dbg !6771
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.declare(metadata [3 x float]* %nco, metadata !6774, metadata !DIExpression()), !dbg !6775
  %1 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6776
  %childflag = getelementptr inbounds %struct.OccNode, %struct.OccNode* %1, i32 0, i32 6, !dbg !6778
  %2 = load i32, i32* %childflag, align 8, !dbg !6778
  %3 = load i32, i32* %b, align 4, !dbg !6779
  %shl = shl i32 1, %3, !dbg !6780
  %and = and i32 %2, %shl, !dbg !6781
  %tobool = icmp ne i32 %and, 0, !dbg !6781
  br i1 %tobool, label %if.then, label %if.else, !dbg !6782

if.then:                                          ; preds = %for.body
  %4 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6783
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %4, i32 0, i32 2, !dbg !6785
  %5 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !6785
  %6 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6786
  %child = getelementptr inbounds %struct.OccNode, %struct.OccNode* %6, i32 0, i32 7, !dbg !6787
  %7 = load i32, i32* %b, align 4, !dbg !6788
  %idxprom = sext i32 %7 to i64, !dbg !6786
  %arrayidx = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child, i64 0, i64 %idxprom, !dbg !6786
  %face1 = bitcast %union.anon* %arrayidx to i32*, !dbg !6789
  %8 = load i32, i32* %face1, align 8, !dbg !6789
  %idx.ext = sext i32 %8 to i64, !dbg !6790
  %add.ptr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %5, i64 %idx.ext, !dbg !6790
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nco, i64 0, i64 0, !dbg !6791
  call void @occ_face(%struct.OccFace* %add.ptr, float* %arraydecay, float* null, float* null), !dbg !6792
  br label %if.end17, !dbg !6793

if.else:                                          ; preds = %for.body
  %9 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6794
  %child2 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %9, i32 0, i32 7, !dbg !6796
  %10 = load i32, i32* %b, align 4, !dbg !6797
  %idxprom3 = sext i32 %10 to i64, !dbg !6794
  %arrayidx4 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child2, i64 0, i64 %idxprom3, !dbg !6794
  %node5 = bitcast %union.anon* %arrayidx4 to %struct.OccNode**, !dbg !6798
  %11 = load %struct.OccNode*, %struct.OccNode** %node5, align 8, !dbg !6798
  %tobool6 = icmp ne %struct.OccNode* %11, null, !dbg !6794
  br i1 %tobool6, label %if.then7, label %if.else16, !dbg !6799

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.OccNode** %child8, metadata !6800, metadata !DIExpression()), !dbg !6802
  %12 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !6803
  %child9 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %12, i32 0, i32 7, !dbg !6804
  %13 = load i32, i32* %b, align 4, !dbg !6805
  %idxprom10 = sext i32 %13 to i64, !dbg !6803
  %arrayidx11 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child9, i64 0, i64 %idxprom10, !dbg !6803
  %node12 = bitcast %union.anon* %arrayidx11 to %struct.OccNode**, !dbg !6806
  %14 = load %struct.OccNode*, %struct.OccNode** %node12, align 8, !dbg !6806
  store %struct.OccNode* %14, %struct.OccNode** %child8, align 8, !dbg !6802
  %15 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6807
  %16 = load %struct.OccNode*, %struct.OccNode** %child8, align 8, !dbg !6808
  %17 = load float*, float** %co.addr, align 8, !dbg !6809
  %18 = load float*, float** %dco.addr, align 8, !dbg !6810
  call void @occ_build_dco(%struct.OcclusionTree* %15, %struct.OccNode* %16, float* %17, float* %18), !dbg !6811
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %nco, i64 0, i64 0, !dbg !6812
  %19 = load %struct.OccNode*, %struct.OccNode** %child8, align 8, !dbg !6813
  %co14 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %19, i32 0, i32 0, !dbg !6814
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !6813
  call void @copy_v3_v3(float* %arraydecay13, float* %arraydecay15), !dbg !6815
  br label %if.end, !dbg !6816

if.else16:                                        ; preds = %if.else
  br label %for.inc, !dbg !6817

if.end:                                           ; preds = %if.then7
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6819
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %nco, i64 0, i64 0, !dbg !6820
  %20 = load float*, float** %co.addr, align 8, !dbg !6821
  call void @sub_v3_v3v3(float* %arraydecay18, float* %arraydecay19, float* %20), !dbg !6822
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6823
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6824
  %call = call float @dot_v3v3(float* %arraydecay20, float* %arraydecay21), !dbg !6825
  store float %call, float* %dist, align 4, !dbg !6826
  %21 = load float, float* %dist, align 4, !dbg !6827
  %22 = load float*, float** %dco.addr, align 8, !dbg !6829
  %23 = load float, float* %22, align 4, !dbg !6830
  %cmp22 = fcmp ogt float %21, %23, !dbg !6831
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !6832

if.then23:                                        ; preds = %if.end17
  %24 = load float, float* %dist, align 4, !dbg !6833
  %25 = load float*, float** %dco.addr, align 8, !dbg !6834
  store float %24, float* %25, align 4, !dbg !6835
  br label %if.end24, !dbg !6836

if.end24:                                         ; preds = %if.then23, %if.end17
  br label %for.inc, !dbg !6837

for.inc:                                          ; preds = %if.end24, %if.else16
  %26 = load i32, i32* %b, align 4, !dbg !6838
  %inc = add nsw i32 %26, 1, !dbg !6838
  store i32 %inc, i32* %b, align 4, !dbg !6838
  br label %for.cond, !dbg !6839, !llvm.loop !6840

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6842
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_build_split(%struct.OcclusionTree* %tree, i32 %begin, i32 %end, i32* %split) #0 !dbg !6843 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %begin.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %split.addr = alloca i32*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %mid = alloca float, align 4
  %axis = alloca i32, align 4
  %a = alloca i32, align 4
  %enda = alloca i32, align 4
  %sw_ap = alloca %struct.OccFace, align 4
  %sw_ap20 = alloca float, align 4
  %sw_ap37 = alloca float, align 4
  %sw_ap54 = alloca float, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store i32 %begin, i32* %begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %begin.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  store i32* %split, i32** %split.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %split.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.declare(metadata float* %mid, metadata !6858, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !6860, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %enda, metadata !6864, metadata !DIExpression()), !dbg !6865
  %0 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6866
  %1 = load i32, i32* %begin.addr, align 4, !dbg !6867
  %2 = load i32, i32* %end.addr, align 4, !dbg !6868
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !6869
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !6870
  %call = call i32 @occ_find_bbox_axis(%struct.OcclusionTree* %0, i32 %1, i32 %2, float* %arraydecay, float* %arraydecay1), !dbg !6871
  store i32 %call, i32* %axis, align 4, !dbg !6872
  %3 = load i32, i32* %axis, align 4, !dbg !6873
  %idxprom = sext i32 %3 to i64, !dbg !6874
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom, !dbg !6874
  %4 = load float, float* %arrayidx, align 4, !dbg !6874
  %5 = load i32, i32* %axis, align 4, !dbg !6875
  %idxprom2 = sext i32 %5 to i64, !dbg !6876
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom2, !dbg !6876
  %6 = load float, float* %arrayidx3, align 4, !dbg !6876
  %add = fadd float %4, %6, !dbg !6877
  %mul = fmul float 5.000000e-01, %add, !dbg !6878
  store float %mul, float* %mid, align 4, !dbg !6879
  %7 = load i32, i32* %begin.addr, align 4, !dbg !6880
  store i32 %7, i32* %a, align 4, !dbg !6881
  %8 = load i32, i32* %end.addr, align 4, !dbg !6882
  store i32 %8, i32* %enda, align 4, !dbg !6883
  br label %while.cond, !dbg !6884

while.cond:                                       ; preds = %if.end, %entry
  %9 = load i32, i32* %a, align 4, !dbg !6885
  %10 = load i32, i32* %enda, align 4, !dbg !6886
  %cmp = icmp slt i32 %9, %10, !dbg !6887
  br i1 %cmp, label %while.body, label %while.end, !dbg !6884

while.body:                                       ; preds = %while.cond
  %11 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6888
  %co = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %11, i32 0, i32 1, !dbg !6891
  %12 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !6891
  %13 = load i32, i32* %a, align 4, !dbg !6892
  %idxprom4 = sext i32 %13 to i64, !dbg !6888
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 %idxprom4, !dbg !6888
  %14 = load i32, i32* %axis, align 4, !dbg !6893
  %idxprom6 = sext i32 %14 to i64, !dbg !6888
  %arrayidx7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 %idxprom6, !dbg !6888
  %15 = load float, float* %arrayidx7, align 4, !dbg !6888
  %16 = load float, float* %mid, align 4, !dbg !6894
  %cmp8 = fcmp ogt float %15, %16, !dbg !6895
  br i1 %cmp8, label %if.then, label %if.else, !dbg !6896

if.then:                                          ; preds = %while.body
  %17 = load i32, i32* %enda, align 4, !dbg !6897
  %dec = add nsw i32 %17, -1, !dbg !6897
  store i32 %dec, i32* %enda, align 4, !dbg !6897
  call void @llvm.dbg.declare(metadata %struct.OccFace* %sw_ap, metadata !6899, metadata !DIExpression()), !dbg !6901
  %18 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6901
  %face = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %18, i32 0, i32 2, !dbg !6901
  %19 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !6901
  %20 = load i32, i32* %a, align 4, !dbg !6901
  %idxprom9 = sext i32 %20 to i64, !dbg !6901
  %arrayidx10 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %19, i64 %idxprom9, !dbg !6901
  %21 = bitcast %struct.OccFace* %sw_ap to i8*, !dbg !6901
  %22 = bitcast %struct.OccFace* %arrayidx10 to i8*, !dbg !6901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 8, i1 false), !dbg !6901
  %23 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6901
  %face11 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %23, i32 0, i32 2, !dbg !6901
  %24 = load %struct.OccFace*, %struct.OccFace** %face11, align 8, !dbg !6901
  %25 = load i32, i32* %a, align 4, !dbg !6901
  %idxprom12 = sext i32 %25 to i64, !dbg !6901
  %arrayidx13 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %24, i64 %idxprom12, !dbg !6901
  %26 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6901
  %face14 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %26, i32 0, i32 2, !dbg !6901
  %27 = load %struct.OccFace*, %struct.OccFace** %face14, align 8, !dbg !6901
  %28 = load i32, i32* %enda, align 4, !dbg !6901
  %idxprom15 = sext i32 %28 to i64, !dbg !6901
  %arrayidx16 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %27, i64 %idxprom15, !dbg !6901
  %29 = bitcast %struct.OccFace* %arrayidx13 to i8*, !dbg !6901
  %30 = bitcast %struct.OccFace* %arrayidx16 to i8*, !dbg !6901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 8, i1 false), !dbg !6901
  %31 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6901
  %face17 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %31, i32 0, i32 2, !dbg !6901
  %32 = load %struct.OccFace*, %struct.OccFace** %face17, align 8, !dbg !6901
  %33 = load i32, i32* %enda, align 4, !dbg !6901
  %idxprom18 = sext i32 %33 to i64, !dbg !6901
  %arrayidx19 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %32, i64 %idxprom18, !dbg !6901
  %34 = bitcast %struct.OccFace* %arrayidx19 to i8*, !dbg !6901
  %35 = bitcast %struct.OccFace* %sw_ap to i8*, !dbg !6901
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 8, i1 false), !dbg !6901
  call void @llvm.dbg.declare(metadata float* %sw_ap20, metadata !6902, metadata !DIExpression()), !dbg !6904
  %36 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6904
  %co21 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %36, i32 0, i32 1, !dbg !6904
  %37 = load [3 x float]*, [3 x float]** %co21, align 8, !dbg !6904
  %38 = load i32, i32* %a, align 4, !dbg !6904
  %idxprom22 = sext i32 %38 to i64, !dbg !6904
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %37, i64 %idxprom22, !dbg !6904
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx23, i64 0, i64 0, !dbg !6904
  %39 = load float, float* %arrayidx24, align 4, !dbg !6904
  store float %39, float* %sw_ap20, align 4, !dbg !6904
  %40 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6904
  %co25 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %40, i32 0, i32 1, !dbg !6904
  %41 = load [3 x float]*, [3 x float]** %co25, align 8, !dbg !6904
  %42 = load i32, i32* %enda, align 4, !dbg !6904
  %idxprom26 = sext i32 %42 to i64, !dbg !6904
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %41, i64 %idxprom26, !dbg !6904
  %arrayidx28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !6904
  %43 = load float, float* %arrayidx28, align 4, !dbg !6904
  %44 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6904
  %co29 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %44, i32 0, i32 1, !dbg !6904
  %45 = load [3 x float]*, [3 x float]** %co29, align 8, !dbg !6904
  %46 = load i32, i32* %a, align 4, !dbg !6904
  %idxprom30 = sext i32 %46 to i64, !dbg !6904
  %arrayidx31 = getelementptr inbounds [3 x float], [3 x float]* %45, i64 %idxprom30, !dbg !6904
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !6904
  store float %43, float* %arrayidx32, align 4, !dbg !6904
  %47 = load float, float* %sw_ap20, align 4, !dbg !6904
  %48 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6904
  %co33 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %48, i32 0, i32 1, !dbg !6904
  %49 = load [3 x float]*, [3 x float]** %co33, align 8, !dbg !6904
  %50 = load i32, i32* %enda, align 4, !dbg !6904
  %idxprom34 = sext i32 %50 to i64, !dbg !6904
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %49, i64 %idxprom34, !dbg !6904
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !6904
  store float %47, float* %arrayidx36, align 4, !dbg !6904
  call void @llvm.dbg.declare(metadata float* %sw_ap37, metadata !6905, metadata !DIExpression()), !dbg !6907
  %51 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6907
  %co38 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %51, i32 0, i32 1, !dbg !6907
  %52 = load [3 x float]*, [3 x float]** %co38, align 8, !dbg !6907
  %53 = load i32, i32* %a, align 4, !dbg !6907
  %idxprom39 = sext i32 %53 to i64, !dbg !6907
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %52, i64 %idxprom39, !dbg !6907
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 1, !dbg !6907
  %54 = load float, float* %arrayidx41, align 4, !dbg !6907
  store float %54, float* %sw_ap37, align 4, !dbg !6907
  %55 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6907
  %co42 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %55, i32 0, i32 1, !dbg !6907
  %56 = load [3 x float]*, [3 x float]** %co42, align 8, !dbg !6907
  %57 = load i32, i32* %enda, align 4, !dbg !6907
  %idxprom43 = sext i32 %57 to i64, !dbg !6907
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %56, i64 %idxprom43, !dbg !6907
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 1, !dbg !6907
  %58 = load float, float* %arrayidx45, align 4, !dbg !6907
  %59 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6907
  %co46 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %59, i32 0, i32 1, !dbg !6907
  %60 = load [3 x float]*, [3 x float]** %co46, align 8, !dbg !6907
  %61 = load i32, i32* %a, align 4, !dbg !6907
  %idxprom47 = sext i32 %61 to i64, !dbg !6907
  %arrayidx48 = getelementptr inbounds [3 x float], [3 x float]* %60, i64 %idxprom47, !dbg !6907
  %arrayidx49 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx48, i64 0, i64 1, !dbg !6907
  store float %58, float* %arrayidx49, align 4, !dbg !6907
  %62 = load float, float* %sw_ap37, align 4, !dbg !6907
  %63 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6907
  %co50 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %63, i32 0, i32 1, !dbg !6907
  %64 = load [3 x float]*, [3 x float]** %co50, align 8, !dbg !6907
  %65 = load i32, i32* %enda, align 4, !dbg !6907
  %idxprom51 = sext i32 %65 to i64, !dbg !6907
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %64, i64 %idxprom51, !dbg !6907
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx52, i64 0, i64 1, !dbg !6907
  store float %62, float* %arrayidx53, align 4, !dbg !6907
  call void @llvm.dbg.declare(metadata float* %sw_ap54, metadata !6908, metadata !DIExpression()), !dbg !6910
  %66 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6910
  %co55 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %66, i32 0, i32 1, !dbg !6910
  %67 = load [3 x float]*, [3 x float]** %co55, align 8, !dbg !6910
  %68 = load i32, i32* %a, align 4, !dbg !6910
  %idxprom56 = sext i32 %68 to i64, !dbg !6910
  %arrayidx57 = getelementptr inbounds [3 x float], [3 x float]* %67, i64 %idxprom56, !dbg !6910
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx57, i64 0, i64 2, !dbg !6910
  %69 = load float, float* %arrayidx58, align 4, !dbg !6910
  store float %69, float* %sw_ap54, align 4, !dbg !6910
  %70 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6910
  %co59 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %70, i32 0, i32 1, !dbg !6910
  %71 = load [3 x float]*, [3 x float]** %co59, align 8, !dbg !6910
  %72 = load i32, i32* %enda, align 4, !dbg !6910
  %idxprom60 = sext i32 %72 to i64, !dbg !6910
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %71, i64 %idxprom60, !dbg !6910
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx61, i64 0, i64 2, !dbg !6910
  %73 = load float, float* %arrayidx62, align 4, !dbg !6910
  %74 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6910
  %co63 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %74, i32 0, i32 1, !dbg !6910
  %75 = load [3 x float]*, [3 x float]** %co63, align 8, !dbg !6910
  %76 = load i32, i32* %a, align 4, !dbg !6910
  %idxprom64 = sext i32 %76 to i64, !dbg !6910
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %75, i64 %idxprom64, !dbg !6910
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 2, !dbg !6910
  store float %73, float* %arrayidx66, align 4, !dbg !6910
  %77 = load float, float* %sw_ap54, align 4, !dbg !6910
  %78 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6910
  %co67 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %78, i32 0, i32 1, !dbg !6910
  %79 = load [3 x float]*, [3 x float]** %co67, align 8, !dbg !6910
  %80 = load i32, i32* %enda, align 4, !dbg !6910
  %idxprom68 = sext i32 %80 to i64, !dbg !6910
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %79, i64 %idxprom68, !dbg !6910
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx69, i64 0, i64 2, !dbg !6910
  store float %77, float* %arrayidx70, align 4, !dbg !6910
  br label %if.end, !dbg !6911

if.else:                                          ; preds = %while.body
  %81 = load i32, i32* %a, align 4, !dbg !6912
  %inc = add nsw i32 %81, 1, !dbg !6912
  store i32 %inc, i32* %a, align 4, !dbg !6912
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !6884, !llvm.loop !6913

while.end:                                        ; preds = %while.cond
  %82 = load i32, i32* %enda, align 4, !dbg !6915
  %83 = load i32*, i32** %split.addr, align 8, !dbg !6916
  store i32 %82, i32* %83, align 4, !dbg !6917
  ret void, !dbg !6918
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @occ_find_bbox_axis(%struct.OcclusionTree* %tree, i32 %begin, i32 %end, float* %min, float* %max) #0 !dbg !6919 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %begin.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  %len = alloca float, align 4
  %maxlen = alloca float, align 4
  %a = alloca i32, align 4
  %axis = alloca i32, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !6922, metadata !DIExpression()), !dbg !6923
  store i32 %begin, i32* %begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %begin.addr, metadata !6924, metadata !DIExpression()), !dbg !6925
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !6926, metadata !DIExpression()), !dbg !6927
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !6928, metadata !DIExpression()), !dbg !6929
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata float* %len, metadata !6932, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.declare(metadata float* %maxlen, metadata !6934, metadata !DIExpression()), !dbg !6935
  store float -1.000000e+00, float* %maxlen, align 4, !dbg !6935
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !6938, metadata !DIExpression()), !dbg !6939
  store i32 0, i32* %axis, align 4, !dbg !6939
  %0 = load float*, float** %min.addr, align 8, !dbg !6940
  %arrayidx = getelementptr inbounds float, float* %0, i64 2, !dbg !6940
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !6940
  %1 = load float*, float** %min.addr, align 8, !dbg !6940
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6940
  store float 0x46293E5940000000, float* %arrayidx1, align 4, !dbg !6940
  %2 = load float*, float** %min.addr, align 8, !dbg !6940
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !6940
  store float 0x46293E5940000000, float* %arrayidx2, align 4, !dbg !6940
  %3 = load float*, float** %max.addr, align 8, !dbg !6940
  %arrayidx3 = getelementptr inbounds float, float* %3, i64 2, !dbg !6940
  store float 0xC6293E5940000000, float* %arrayidx3, align 4, !dbg !6940
  %4 = load float*, float** %max.addr, align 8, !dbg !6940
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 1, !dbg !6940
  store float 0xC6293E5940000000, float* %arrayidx4, align 4, !dbg !6940
  %5 = load float*, float** %max.addr, align 8, !dbg !6940
  %arrayidx5 = getelementptr inbounds float, float* %5, i64 0, !dbg !6940
  store float 0xC6293E5940000000, float* %arrayidx5, align 4, !dbg !6940
  %6 = load i32, i32* %begin.addr, align 4, !dbg !6942
  store i32 %6, i32* %a, align 4, !dbg !6944
  br label %for.cond, !dbg !6945

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %a, align 4, !dbg !6946
  %8 = load i32, i32* %end.addr, align 4, !dbg !6948
  %cmp = icmp slt i32 %7, %8, !dbg !6949
  br i1 %cmp, label %for.body, label %for.end, !dbg !6950

for.body:                                         ; preds = %for.cond
  %9 = load float*, float** %min.addr, align 8, !dbg !6951
  %10 = load float*, float** %max.addr, align 8, !dbg !6953
  %11 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !6954
  %co = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %11, i32 0, i32 1, !dbg !6955
  %12 = load [3 x float]*, [3 x float]** %co, align 8, !dbg !6955
  %13 = load i32, i32* %a, align 4, !dbg !6956
  %idxprom = sext i32 %13 to i64, !dbg !6954
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 %idxprom, !dbg !6954
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !6954
  call void @minmax_v3v3_v3(float* %9, float* %10, float* %arraydecay), !dbg !6957
  br label %for.inc, !dbg !6958

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %a, align 4, !dbg !6959
  %inc = add nsw i32 %14, 1, !dbg !6959
  store i32 %inc, i32* %a, align 4, !dbg !6959
  br label %for.cond, !dbg !6960, !llvm.loop !6961

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %a, align 4, !dbg !6963
  br label %for.cond7, !dbg !6965

for.cond7:                                        ; preds = %for.inc15, %for.end
  %15 = load i32, i32* %a, align 4, !dbg !6966
  %cmp8 = icmp slt i32 %15, 3, !dbg !6968
  br i1 %cmp8, label %for.body9, label %for.end17, !dbg !6969

for.body9:                                        ; preds = %for.cond7
  %16 = load float*, float** %max.addr, align 8, !dbg !6970
  %17 = load i32, i32* %a, align 4, !dbg !6972
  %idxprom10 = sext i32 %17 to i64, !dbg !6970
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 %idxprom10, !dbg !6970
  %18 = load float, float* %arrayidx11, align 4, !dbg !6970
  %19 = load float*, float** %min.addr, align 8, !dbg !6973
  %20 = load i32, i32* %a, align 4, !dbg !6974
  %idxprom12 = sext i32 %20 to i64, !dbg !6973
  %arrayidx13 = getelementptr inbounds float, float* %19, i64 %idxprom12, !dbg !6973
  %21 = load float, float* %arrayidx13, align 4, !dbg !6973
  %sub = fsub float %18, %21, !dbg !6975
  store float %sub, float* %len, align 4, !dbg !6976
  %22 = load float, float* %len, align 4, !dbg !6977
  %23 = load float, float* %maxlen, align 4, !dbg !6979
  %cmp14 = fcmp ogt float %22, %23, !dbg !6980
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6981

if.then:                                          ; preds = %for.body9
  %24 = load float, float* %len, align 4, !dbg !6982
  store float %24, float* %maxlen, align 4, !dbg !6984
  %25 = load i32, i32* %a, align 4, !dbg !6985
  store i32 %25, i32* %axis, align 4, !dbg !6986
  br label %if.end, !dbg !6987

if.end:                                           ; preds = %if.then, %for.body9
  br label %for.inc15, !dbg !6988

for.inc15:                                        ; preds = %if.end
  %26 = load i32, i32* %a, align 4, !dbg !6989
  %inc16 = add nsw i32 %26, 1, !dbg !6989
  store i32 %inc16, i32* %a, align 4, !dbg !6989
  br label %for.cond7, !dbg !6990, !llvm.loop !6991

for.end17:                                        ; preds = %for.cond7
  %27 = load i32, i32* %axis, align 4, !dbg !6993
  ret i32 %27, !dbg !6994
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sh_from_disc(float* %n, float %area, float* %shresult) #0 !dbg !6995 {
entry:
  %n.addr = alloca float*, align 8
  %area.addr = alloca float, align 4
  %shresult.addr = alloca float*, align 8
  %sh = alloca [9 x float], align 16
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !6998, metadata !DIExpression()), !dbg !6999
  store float %area, float* %area.addr, align 4
  call void @llvm.dbg.declare(metadata float* %area.addr, metadata !7000, metadata !DIExpression()), !dbg !7001
  store float* %shresult, float** %shresult.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shresult.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  call void @llvm.dbg.declare(metadata [9 x float]* %sh, metadata !7004, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.declare(metadata float* %x, metadata !7006, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.declare(metadata float* %y, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata float* %z, metadata !7010, metadata !DIExpression()), !dbg !7011
  %0 = load float*, float** %n.addr, align 8, !dbg !7012
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7012
  %1 = load float, float* %arrayidx, align 4, !dbg !7012
  store float %1, float* %x, align 4, !dbg !7013
  %2 = load float*, float** %n.addr, align 8, !dbg !7014
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !7014
  %3 = load float, float* %arrayidx1, align 4, !dbg !7014
  store float %3, float* %y, align 4, !dbg !7015
  %4 = load float*, float** %n.addr, align 8, !dbg !7016
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !7016
  %5 = load float, float* %arrayidx2, align 4, !dbg !7016
  store float %5, float* %z, align 4, !dbg !7017
  %arrayidx3 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !7018
  store float 0x3FD20DD820000000, float* %arrayidx3, align 16, !dbg !7019
  %6 = load float, float* %y, align 4, !dbg !7020
  %mul = fmul float 0x3FDF454580000000, %6, !dbg !7021
  %arrayidx4 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 1, !dbg !7022
  store float %mul, float* %arrayidx4, align 4, !dbg !7023
  %7 = load float, float* %z, align 4, !dbg !7024
  %mul5 = fmul float 0x3FDF454580000000, %7, !dbg !7025
  %arrayidx6 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 2, !dbg !7026
  store float %mul5, float* %arrayidx6, align 8, !dbg !7027
  %8 = load float, float* %x, align 4, !dbg !7028
  %mul7 = fmul float 0x3FDF454580000000, %8, !dbg !7029
  %arrayidx8 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 3, !dbg !7030
  store float %mul7, float* %arrayidx8, align 4, !dbg !7031
  %9 = load float, float* %x, align 4, !dbg !7032
  %mul9 = fmul float 0x3FF17B13A0000000, %9, !dbg !7033
  %10 = load float, float* %y, align 4, !dbg !7034
  %mul10 = fmul float %mul9, %10, !dbg !7035
  %arrayidx11 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 4, !dbg !7036
  store float %mul10, float* %arrayidx11, align 16, !dbg !7037
  %11 = load float, float* %y, align 4, !dbg !7038
  %mul12 = fmul float 0x3FF17B13A0000000, %11, !dbg !7039
  %12 = load float, float* %z, align 4, !dbg !7040
  %mul13 = fmul float %mul12, %12, !dbg !7041
  %arrayidx14 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 5, !dbg !7042
  store float %mul13, float* %arrayidx14, align 4, !dbg !7043
  %13 = load float, float* %z, align 4, !dbg !7044
  %mul15 = fmul float 3.000000e+00, %13, !dbg !7045
  %14 = load float, float* %z, align 4, !dbg !7046
  %mul16 = fmul float %mul15, %14, !dbg !7047
  %sub = fsub float %mul16, 1.000000e+00, !dbg !7048
  %mul17 = fmul float 0x3FD42F61E0000000, %sub, !dbg !7049
  %arrayidx18 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 6, !dbg !7050
  store float %mul17, float* %arrayidx18, align 8, !dbg !7051
  %15 = load float, float* %x, align 4, !dbg !7052
  %mul19 = fmul float 0x3FF17B13A0000000, %15, !dbg !7053
  %16 = load float, float* %z, align 4, !dbg !7054
  %mul20 = fmul float %mul19, %16, !dbg !7055
  %arrayidx21 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 7, !dbg !7056
  store float %mul20, float* %arrayidx21, align 4, !dbg !7057
  %17 = load float, float* %x, align 4, !dbg !7058
  %18 = load float, float* %x, align 4, !dbg !7059
  %mul22 = fmul float %17, %18, !dbg !7060
  %19 = load float, float* %y, align 4, !dbg !7061
  %20 = load float, float* %y, align 4, !dbg !7062
  %mul23 = fmul float %19, %20, !dbg !7063
  %sub24 = fsub float %mul22, %mul23, !dbg !7064
  %mul25 = fmul float 0x3FE17B13A0000000, %sub24, !dbg !7065
  %arrayidx26 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 8, !dbg !7066
  store float %mul25, float* %arrayidx26, align 16, !dbg !7067
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !7068
  %21 = load float, float* %area.addr, align 4, !dbg !7069
  call void @sh_mul(float* %arraydecay, float %21), !dbg !7070
  %22 = load float*, float** %shresult.addr, align 8, !dbg !7071
  %arraydecay27 = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !7072
  call void @sh_copy(float* %22, float* %arraydecay27), !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: noinline nounwind uwtable
define internal void @sh_mul(float* %sh, float %f) #0 !dbg !7075 {
entry:
  %sh.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  %i = alloca i32, align 4
  store float* %sh, float** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sh.addr, metadata !7076, metadata !DIExpression()), !dbg !7077
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7078, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7080, metadata !DIExpression()), !dbg !7081
  store i32 0, i32* %i, align 4, !dbg !7082
  br label %for.cond, !dbg !7084

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7085
  %cmp = icmp slt i32 %0, 9, !dbg !7087
  br i1 %cmp, label %for.body, label %for.end, !dbg !7088

for.body:                                         ; preds = %for.cond
  %1 = load float, float* %f.addr, align 4, !dbg !7089
  %2 = load float*, float** %sh.addr, align 8, !dbg !7090
  %3 = load i32, i32* %i, align 4, !dbg !7091
  %idxprom = sext i32 %3 to i64, !dbg !7090
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !7090
  %4 = load float, float* %arrayidx, align 4, !dbg !7092
  %mul = fmul float %4, %1, !dbg !7092
  store float %mul, float* %arrayidx, align 4, !dbg !7092
  br label %for.inc, !dbg !7090

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !7093
  %inc = add nsw i32 %5, 1, !dbg !7093
  store i32 %inc, i32* %i, align 4, !dbg !7093
  br label %for.cond, !dbg !7094, !llvm.loop !7095

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7097
}

; Function Attrs: noinline nounwind uwtable
define internal void @sh_copy(float* %shresult, float* %sh) #0 !dbg !7098 {
entry:
  %shresult.addr = alloca float*, align 8
  %sh.addr = alloca float*, align 8
  store float* %shresult, float** %shresult.addr, align 8
  call void @llvm.dbg.declare(metadata float** %shresult.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store float* %sh, float** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sh.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  %0 = load float*, float** %shresult.addr, align 8, !dbg !7105
  %1 = bitcast float* %0 to i8*, !dbg !7106
  %2 = load float*, float** %sh.addr, align 8, !dbg !7107
  %3 = bitcast float* %2 to i8*, !dbg !7106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 36, i1 false), !dbg !7106
  ret void, !dbg !7108
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !7109 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7114, metadata !DIExpression()), !dbg !7115
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  %0 = load float*, float** %a.addr, align 8, !dbg !7118
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7118
  %1 = load float, float* %arrayidx, align 4, !dbg !7118
  %2 = load float*, float** %b.addr, align 8, !dbg !7119
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7119
  %3 = load float, float* %arrayidx1, align 4, !dbg !7119
  %sub = fsub float %1, %3, !dbg !7120
  %4 = load float*, float** %r.addr, align 8, !dbg !7121
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !7121
  store float %sub, float* %arrayidx2, align 4, !dbg !7122
  %5 = load float*, float** %a.addr, align 8, !dbg !7123
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !7123
  %6 = load float, float* %arrayidx3, align 4, !dbg !7123
  %7 = load float*, float** %b.addr, align 8, !dbg !7124
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7124
  %8 = load float, float* %arrayidx4, align 4, !dbg !7124
  %sub5 = fsub float %6, %8, !dbg !7125
  %9 = load float*, float** %r.addr, align 8, !dbg !7126
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !7126
  store float %sub5, float* %arrayidx6, align 4, !dbg !7127
  %10 = load float*, float** %a.addr, align 8, !dbg !7128
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !7128
  %11 = load float, float* %arrayidx7, align 4, !dbg !7128
  %12 = load float*, float** %b.addr, align 8, !dbg !7129
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !7129
  %13 = load float, float* %arrayidx8, align 4, !dbg !7129
  %sub9 = fsub float %11, %13, !dbg !7130
  %14 = load float*, float** %r.addr, align 8, !dbg !7131
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !7131
  store float %sub9, float* %arrayidx10, align 4, !dbg !7132
  ret void, !dbg !7133
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal void @occ_shade(%struct.ShadeSample* %ssamp, %struct.ObjectInstanceRen* %obi, %struct.VlakRen* %vlr, float* %rad) #0 !dbg !7134 {
entry:
  %ssamp.addr = alloca %struct.ShadeSample*, align 8
  %obi.addr = alloca %struct.ObjectInstanceRen*, align 8
  %vlr.addr = alloca %struct.VlakRen*, align 8
  %rad.addr = alloca float*, align 8
  %shi = alloca %struct.ShadeInput*, align 8
  %shr = alloca %struct.ShadeResult*, align 8
  %l = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %v1 = alloca float*, align 8
  %v2 = alloca float*, align 8
  %v3 = alloca float*, align 8
  store %struct.ShadeSample* %ssamp, %struct.ShadeSample** %ssamp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ShadeSample** %ssamp.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store %struct.ObjectInstanceRen* %obi, %struct.ObjectInstanceRen** %obi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  store %struct.VlakRen* %vlr, %struct.VlakRen** %vlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  store float* %rad, float** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rad.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata %struct.ShadeInput** %shi, metadata !7145, metadata !DIExpression()), !dbg !7146
  %0 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !7147
  %shi1 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %0, i32 0, i32 2, !dbg !7148
  %arraydecay = getelementptr inbounds [16 x %struct.ShadeInput], [16 x %struct.ShadeInput]* %shi1, i64 0, i64 0, !dbg !7147
  store %struct.ShadeInput* %arraydecay, %struct.ShadeInput** %shi, align 8, !dbg !7146
  call void @llvm.dbg.declare(metadata %struct.ShadeResult** %shr, metadata !7149, metadata !DIExpression()), !dbg !7151
  %1 = load %struct.ShadeSample*, %struct.ShadeSample** %ssamp.addr, align 8, !dbg !7152
  %shr2 = getelementptr inbounds %struct.ShadeSample, %struct.ShadeSample* %1, i32 0, i32 3, !dbg !7153
  %arraydecay3 = getelementptr inbounds [16 x %struct.ShadeResult], [16 x %struct.ShadeResult]* %shr2, i64 0, i64 0, !dbg !7152
  store %struct.ShadeResult* %arraydecay3, %struct.ShadeResult** %shr, align 8, !dbg !7151
  call void @llvm.dbg.declare(metadata float* %l, metadata !7154, metadata !DIExpression()), !dbg !7155
  call void @llvm.dbg.declare(metadata float* %u, metadata !7156, metadata !DIExpression()), !dbg !7157
  call void @llvm.dbg.declare(metadata float* %v, metadata !7158, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata float** %v1, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata float** %v2, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata float** %v3, metadata !7164, metadata !DIExpression()), !dbg !7165
  %2 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7166
  %v4 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %2, i32 0, i32 3, !dbg !7168
  %3 = load %struct.VertRen*, %struct.VertRen** %v4, align 8, !dbg !7168
  %tobool = icmp ne %struct.VertRen* %3, null, !dbg !7166
  br i1 %tobool, label %if.then, label %if.else, !dbg !7169

if.then:                                          ; preds = %entry
  store float 5.000000e-01, float* %u, align 4, !dbg !7170
  %4 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7172
  %u4 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %4, i32 0, i32 23, !dbg !7173
  store float 5.000000e-01, float* %u4, align 8, !dbg !7174
  store float 5.000000e-01, float* %v, align 4, !dbg !7175
  %5 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7176
  %v5 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %5, i32 0, i32 24, !dbg !7177
  store float 5.000000e-01, float* %v5, align 4, !dbg !7178
  br label %if.end, !dbg !7179

if.else:                                          ; preds = %entry
  store float 0x3FD5555560000000, float* %u, align 4, !dbg !7180
  %6 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7182
  %u6 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %6, i32 0, i32 23, !dbg !7183
  store float 0x3FD5555560000000, float* %u6, align 8, !dbg !7184
  store float 0x3FD5555560000000, float* %v, align 4, !dbg !7185
  %7 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7186
  %v7 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %7, i32 0, i32 24, !dbg !7187
  store float 0x3FD5555560000000, float* %v7, align 4, !dbg !7188
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7189
  %v18 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %8, i32 0, i32 0, !dbg !7190
  %9 = load %struct.VertRen*, %struct.VertRen** %v18, align 8, !dbg !7190
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %9, i32 0, i32 0, !dbg !7191
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7189
  store float* %arraydecay9, float** %v1, align 8, !dbg !7192
  %10 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7193
  %v210 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %10, i32 0, i32 1, !dbg !7194
  %11 = load %struct.VertRen*, %struct.VertRen** %v210, align 8, !dbg !7194
  %co11 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %11, i32 0, i32 0, !dbg !7195
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %co11, i64 0, i64 0, !dbg !7193
  store float* %arraydecay12, float** %v2, align 8, !dbg !7196
  %12 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7197
  %v313 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %12, i32 0, i32 2, !dbg !7198
  %13 = load %struct.VertRen*, %struct.VertRen** %v313, align 8, !dbg !7198
  %co14 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %13, i32 0, i32 0, !dbg !7199
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !7197
  store float* %arraydecay15, float** %v3, align 8, !dbg !7200
  %14 = load float, float* %u, align 4, !dbg !7201
  %sub = fsub float 1.000000e+00, %14, !dbg !7202
  %15 = load float, float* %v, align 4, !dbg !7203
  %sub16 = fsub float %sub, %15, !dbg !7204
  store float %sub16, float* %l, align 4, !dbg !7205
  %16 = load float, float* %l, align 4, !dbg !7206
  %17 = load float*, float** %v3, align 8, !dbg !7207
  %arrayidx = getelementptr inbounds float, float* %17, i64 0, !dbg !7207
  %18 = load float, float* %arrayidx, align 4, !dbg !7207
  %mul = fmul float %16, %18, !dbg !7208
  %19 = load float, float* %u, align 4, !dbg !7209
  %20 = load float*, float** %v1, align 8, !dbg !7210
  %arrayidx17 = getelementptr inbounds float, float* %20, i64 0, !dbg !7210
  %21 = load float, float* %arrayidx17, align 4, !dbg !7210
  %mul18 = fmul float %19, %21, !dbg !7211
  %add = fadd float %mul, %mul18, !dbg !7212
  %22 = load float, float* %v, align 4, !dbg !7213
  %23 = load float*, float** %v2, align 8, !dbg !7214
  %arrayidx19 = getelementptr inbounds float, float* %23, i64 0, !dbg !7214
  %24 = load float, float* %arrayidx19, align 4, !dbg !7214
  %mul20 = fmul float %22, %24, !dbg !7215
  %add21 = fadd float %add, %mul20, !dbg !7216
  %25 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7217
  %co22 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %25, i32 0, i32 29, !dbg !7218
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !7217
  store float %add21, float* %arrayidx23, align 8, !dbg !7219
  %26 = load float, float* %l, align 4, !dbg !7220
  %27 = load float*, float** %v3, align 8, !dbg !7221
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 1, !dbg !7221
  %28 = load float, float* %arrayidx24, align 4, !dbg !7221
  %mul25 = fmul float %26, %28, !dbg !7222
  %29 = load float, float* %u, align 4, !dbg !7223
  %30 = load float*, float** %v1, align 8, !dbg !7224
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 1, !dbg !7224
  %31 = load float, float* %arrayidx26, align 4, !dbg !7224
  %mul27 = fmul float %29, %31, !dbg !7225
  %add28 = fadd float %mul25, %mul27, !dbg !7226
  %32 = load float, float* %v, align 4, !dbg !7227
  %33 = load float*, float** %v2, align 8, !dbg !7228
  %arrayidx29 = getelementptr inbounds float, float* %33, i64 1, !dbg !7228
  %34 = load float, float* %arrayidx29, align 4, !dbg !7228
  %mul30 = fmul float %32, %34, !dbg !7229
  %add31 = fadd float %add28, %mul30, !dbg !7230
  %35 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7231
  %co32 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %35, i32 0, i32 29, !dbg !7232
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %co32, i64 0, i64 1, !dbg !7231
  store float %add31, float* %arrayidx33, align 4, !dbg !7233
  %36 = load float, float* %l, align 4, !dbg !7234
  %37 = load float*, float** %v3, align 8, !dbg !7235
  %arrayidx34 = getelementptr inbounds float, float* %37, i64 2, !dbg !7235
  %38 = load float, float* %arrayidx34, align 4, !dbg !7235
  %mul35 = fmul float %36, %38, !dbg !7236
  %39 = load float, float* %u, align 4, !dbg !7237
  %40 = load float*, float** %v1, align 8, !dbg !7238
  %arrayidx36 = getelementptr inbounds float, float* %40, i64 2, !dbg !7238
  %41 = load float, float* %arrayidx36, align 4, !dbg !7238
  %mul37 = fmul float %39, %41, !dbg !7239
  %add38 = fadd float %mul35, %mul37, !dbg !7240
  %42 = load float, float* %v, align 4, !dbg !7241
  %43 = load float*, float** %v2, align 8, !dbg !7242
  %arrayidx39 = getelementptr inbounds float, float* %43, i64 2, !dbg !7242
  %44 = load float, float* %arrayidx39, align 4, !dbg !7242
  %mul40 = fmul float %42, %44, !dbg !7243
  %add41 = fadd float %add38, %mul40, !dbg !7244
  %45 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7245
  %co42 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %45, i32 0, i32 29, !dbg !7246
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %co42, i64 0, i64 2, !dbg !7245
  store float %add41, float* %arrayidx43, align 8, !dbg !7247
  %46 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7248
  %47 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi.addr, align 8, !dbg !7249
  %48 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7250
  call void @shade_input_set_triangle_i(%struct.ShadeInput* %46, %struct.ObjectInstanceRen* %47, %struct.VlakRen* %48, i16 signext 0, i16 signext 1, i16 signext 2), !dbg !7251
  %49 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7252
  %view = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %49, i32 0, i32 30, !dbg !7253
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %view, i64 0, i64 0, !dbg !7252
  %50 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7254
  %co45 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %50, i32 0, i32 29, !dbg !7255
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %co45, i64 0, i64 0, !dbg !7254
  call void @copy_v3_v3(float* %arraydecay44, float* %arraydecay46), !dbg !7256
  %51 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7257
  %view47 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %51, i32 0, i32 30, !dbg !7258
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %view47, i64 0, i64 0, !dbg !7257
  %call = call float @normalize_v3(float* %arraydecay48), !dbg !7259
  %52 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7260
  %samplenr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %52, i32 0, i32 107, !dbg !7261
  %53 = load i32, i32* %samplenr, align 4, !dbg !7262
  %inc = add nsw i32 %53, 1, !dbg !7262
  store i32 %inc, i32* %samplenr, align 4, !dbg !7262
  %54 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7263
  %xs = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %54, i32 0, i32 103, !dbg !7264
  store i32 0, i32* %xs, align 4, !dbg !7265
  %55 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7266
  %ys = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %55, i32 0, i32 104, !dbg !7267
  store i32 0, i32* %ys, align 8, !dbg !7268
  %56 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7269
  call void @shade_input_set_normals(%struct.ShadeInput* %56), !dbg !7270
  %57 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7271
  %flippednor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %57, i32 0, i32 7, !dbg !7273
  %58 = load i16, i16* %flippednor, align 8, !dbg !7273
  %tobool49 = icmp ne i16 %58, 0, !dbg !7271
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !7274

if.then50:                                        ; preds = %if.end
  %59 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7275
  call void @shade_input_flip_normals(%struct.ShadeInput* %59), !dbg !7276
  br label %if.end51, !dbg !7276

if.end51:                                         ; preds = %if.then50, %if.end
  %60 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7277
  %co52 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %60, i32 0, i32 29, !dbg !7278
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !7277
  %61 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7279
  %facenor = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %61, i32 0, i32 6, !dbg !7280
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %facenor, i64 0, i64 0, !dbg !7279
  call void @madd_v3_v3fl(float* %arraydecay53, float* %arraydecay54, float 0xBF1A36E2E0000000), !dbg !7281
  %62 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7282
  %obr = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %62, i32 0, i32 4, !dbg !7284
  %63 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7284
  %ob = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %63, i32 0, i32 2, !dbg !7285
  %64 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !7285
  %tobool55 = icmp ne %struct.Object* %64, null, !dbg !7282
  br i1 %tobool55, label %land.lhs.true, label %if.end63, !dbg !7286

land.lhs.true:                                    ; preds = %if.end51
  %65 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7287
  %obr56 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %65, i32 0, i32 4, !dbg !7288
  %66 = load %struct.ObjectRen*, %struct.ObjectRen** %obr56, align 8, !dbg !7288
  %ob57 = getelementptr inbounds %struct.ObjectRen, %struct.ObjectRen* %66, i32 0, i32 2, !dbg !7289
  %67 = load %struct.Object*, %struct.Object** %ob57, align 8, !dbg !7289
  %transflag = getelementptr inbounds %struct.Object, %struct.Object* %67, i32 0, i32 55, !dbg !7290
  %68 = load i16, i16* %transflag, align 8, !dbg !7290
  %conv = sext i16 %68 to i32, !dbg !7287
  %and = and i32 %conv, 4, !dbg !7291
  %tobool58 = icmp ne i32 %and, 0, !dbg !7291
  br i1 %tobool58, label %if.then59, label %if.end63, !dbg !7292

if.then59:                                        ; preds = %land.lhs.true
  %69 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7293
  %vn = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %69, i32 0, i32 16, !dbg !7295
  %arraydecay60 = getelementptr inbounds [3 x float], [3 x float]* %vn, i64 0, i64 0, !dbg !7293
  call void @negate_v3(float* %arraydecay60), !dbg !7296
  %70 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7297
  %vno = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %70, i32 0, i32 17, !dbg !7298
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %vno, i64 0, i64 0, !dbg !7297
  call void @negate_v3(float* %arraydecay61), !dbg !7299
  %71 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7300
  %nmapnorm = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %71, i32 0, i32 66, !dbg !7301
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %nmapnorm, i64 0, i64 0, !dbg !7300
  call void @negate_v3(float* %arraydecay62), !dbg !7302
  br label %if.end63, !dbg !7303

if.end63:                                         ; preds = %if.then59, %land.lhs.true, %if.end51
  %72 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7304
  call void @shade_input_init_material(%struct.ShadeInput* %72), !dbg !7305
  %73 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7306
  call void @shade_input_set_shade_texco(%struct.ShadeInput* %73), !dbg !7307
  %74 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7308
  %mat = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %74, i32 0, i32 0, !dbg !7310
  %75 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !7310
  %nodetree = getelementptr inbounds %struct.Material, %struct.Material* %75, i32 0, i32 103, !dbg !7311
  %76 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree, align 8, !dbg !7311
  %tobool64 = icmp ne %struct.bNodeTree* %76, null, !dbg !7308
  br i1 %tobool64, label %land.lhs.true65, label %if.else75, !dbg !7312

land.lhs.true65:                                  ; preds = %if.end63
  %77 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7313
  %mat66 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %77, i32 0, i32 0, !dbg !7314
  %78 = load %struct.Material*, %struct.Material** %mat66, align 8, !dbg !7314
  %use_nodes = getelementptr inbounds %struct.Material, %struct.Material* %78, i32 0, i32 77, !dbg !7315
  %79 = load i8, i8* %use_nodes, align 1, !dbg !7315
  %conv67 = zext i8 %79 to i32, !dbg !7313
  %tobool68 = icmp ne i32 %conv67, 0, !dbg !7313
  br i1 %tobool68, label %if.then69, label %if.else75, !dbg !7316

if.then69:                                        ; preds = %land.lhs.true65
  %80 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7317
  %mat70 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %80, i32 0, i32 0, !dbg !7319
  %81 = load %struct.Material*, %struct.Material** %mat70, align 8, !dbg !7319
  %nodetree71 = getelementptr inbounds %struct.Material, %struct.Material* %81, i32 0, i32 103, !dbg !7320
  %82 = load %struct.bNodeTree*, %struct.bNodeTree** %nodetree71, align 8, !dbg !7320
  %83 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7321
  %84 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !7322
  %call72 = call zeroext i8 @ntreeShaderExecTree(%struct.bNodeTree* %82, %struct.ShadeInput* %83, %struct.ShadeResult* %84), !dbg !7323
  %85 = load %struct.VlakRen*, %struct.VlakRen** %vlr.addr, align 8, !dbg !7324
  %mat73 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %85, i32 0, i32 5, !dbg !7325
  %86 = load %struct.Material*, %struct.Material** %mat73, align 8, !dbg !7325
  %87 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7326
  %mat74 = getelementptr inbounds %struct.ShadeInput, %struct.ShadeInput* %87, i32 0, i32 0, !dbg !7327
  store %struct.Material* %86, %struct.Material** %mat74, align 8, !dbg !7328
  br label %if.end76, !dbg !7329

if.else75:                                        ; preds = %land.lhs.true65, %if.end63
  %88 = load %struct.ShadeInput*, %struct.ShadeInput** %shi, align 8, !dbg !7330
  %89 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !7332
  call void @shade_material_loop(%struct.ShadeInput* %88, %struct.ShadeResult* %89), !dbg !7333
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then69
  %90 = load float*, float** %rad.addr, align 8, !dbg !7334
  %91 = load %struct.ShadeResult*, %struct.ShadeResult** %shr, align 8, !dbg !7335
  %combined = getelementptr inbounds %struct.ShadeResult, %struct.ShadeResult* %91, i32 0, i32 0, !dbg !7336
  %arraydecay77 = getelementptr inbounds [4 x float], [4 x float]* %combined, i64 0, i64 0, !dbg !7335
  call void @copy_v3_v3(float* %90, float* %arraydecay77), !dbg !7337
  ret void, !dbg !7338
}

declare dso_local void @shade_input_set_triangle_i(%struct.ShadeInput*, %struct.ObjectInstanceRen*, %struct.VlakRen*, i16 signext, i16 signext, i16 signext) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !7339 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !7342, metadata !DIExpression()), !dbg !7343
  %0 = load float*, float** %n.addr, align 8, !dbg !7344
  %1 = load float*, float** %n.addr, align 8, !dbg !7345
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !7346
  ret float %call, !dbg !7347
}

declare dso_local void @shade_input_set_normals(%struct.ShadeInput*) #3

declare dso_local void @shade_input_flip_normals(%struct.ShadeInput*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !7348 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7351, metadata !DIExpression()), !dbg !7352
  %0 = load float*, float** %r.addr, align 8, !dbg !7353
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7353
  %1 = load float, float* %arrayidx, align 4, !dbg !7353
  %fneg = fneg float %1, !dbg !7354
  %2 = load float*, float** %r.addr, align 8, !dbg !7355
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !7355
  store float %fneg, float* %arrayidx1, align 4, !dbg !7356
  %3 = load float*, float** %r.addr, align 8, !dbg !7357
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7357
  %4 = load float, float* %arrayidx2, align 4, !dbg !7357
  %fneg3 = fneg float %4, !dbg !7358
  %5 = load float*, float** %r.addr, align 8, !dbg !7359
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !7359
  store float %fneg3, float* %arrayidx4, align 4, !dbg !7360
  %6 = load float*, float** %r.addr, align 8, !dbg !7361
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !7361
  %7 = load float, float* %arrayidx5, align 4, !dbg !7361
  %fneg6 = fneg float %7, !dbg !7362
  %8 = load float*, float** %r.addr, align 8, !dbg !7363
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !7363
  store float %fneg6, float* %arrayidx7, align 4, !dbg !7364
  ret void, !dbg !7365
}

declare dso_local void @shade_input_init_material(%struct.ShadeInput*) #3

declare dso_local void @shade_input_set_shade_texco(%struct.ShadeInput*) #3

declare dso_local zeroext i8 @ntreeShaderExecTree(%struct.bNodeTree*, %struct.ShadeInput*, %struct.ShadeResult*) #3

declare dso_local void @shade_material_loop(%struct.ShadeInput*, %struct.ShadeResult*) #3

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !7366 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7369, metadata !DIExpression()), !dbg !7370
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7371, metadata !DIExpression()), !dbg !7372
  call void @llvm.dbg.declare(metadata float* %d, metadata !7373, metadata !DIExpression()), !dbg !7374
  %0 = load float*, float** %a.addr, align 8, !dbg !7375
  %1 = load float*, float** %a.addr, align 8, !dbg !7376
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !7377
  store float %call, float* %d, align 4, !dbg !7374
  %2 = load float, float* %d, align 4, !dbg !7378
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !7380
  br i1 %cmp, label %if.then, label %if.else, !dbg !7381

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !7382
  %call1 = call float @sqrtf(float %3) #5, !dbg !7384
  store float %call1, float* %d, align 4, !dbg !7385
  %4 = load float*, float** %r.addr, align 8, !dbg !7386
  %5 = load float*, float** %a.addr, align 8, !dbg !7387
  %6 = load float, float* %d, align 4, !dbg !7388
  %div = fdiv float 1.000000e+00, %6, !dbg !7389
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !7390
  br label %if.end, !dbg !7391

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !7392
  call void @zero_v3(float* %7), !dbg !7394
  store float 0.000000e+00, float* %d, align 4, !dbg !7395
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !7396
  ret float %8, !dbg !7397
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7398 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  %0 = load float*, float** %a.addr, align 8, !dbg !7405
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7405
  %1 = load float, float* %arrayidx, align 4, !dbg !7405
  %2 = load float, float* %f.addr, align 4, !dbg !7406
  %mul = fmul float %1, %2, !dbg !7407
  %3 = load float*, float** %r.addr, align 8, !dbg !7408
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7408
  store float %mul, float* %arrayidx1, align 4, !dbg !7409
  %4 = load float*, float** %a.addr, align 8, !dbg !7410
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7410
  %5 = load float, float* %arrayidx2, align 4, !dbg !7410
  %6 = load float, float* %f.addr, align 4, !dbg !7411
  %mul3 = fmul float %5, %6, !dbg !7412
  %7 = load float*, float** %r.addr, align 8, !dbg !7413
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7413
  store float %mul3, float* %arrayidx4, align 4, !dbg !7414
  %8 = load float*, float** %a.addr, align 8, !dbg !7415
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7415
  %9 = load float, float* %arrayidx5, align 4, !dbg !7415
  %10 = load float, float* %f.addr, align 4, !dbg !7416
  %mul6 = fmul float %9, %10, !dbg !7417
  %11 = load float*, float** %r.addr, align 8, !dbg !7418
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !7418
  store float %mul6, float* %arrayidx7, align 4, !dbg !7419
  ret void, !dbg !7420
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !7421 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  %0 = load float*, float** %r.addr, align 8, !dbg !7424
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7424
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7425
  %1 = load float*, float** %r.addr, align 8, !dbg !7426
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7426
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7427
  %2 = load float*, float** %r.addr, align 8, !dbg !7428
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7428
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7429
  ret void, !dbg !7430
}

; Function Attrs: noinline nounwind uwtable
define internal void @occ_lookup(%struct.OcclusionTree* %tree, i32 %thread, %struct.OccFace* %exclude, float* %pp, float* %pn, float* %occ, float* %rad, float* %bentn) #0 !dbg !7431 {
entry:
  %tree.addr = alloca %struct.OcclusionTree*, align 8
  %thread.addr = alloca i32, align 4
  %exclude.addr = alloca %struct.OccFace*, align 8
  %pp.addr = alloca float*, align 8
  %pn.addr = alloca float*, align 8
  %occ.addr = alloca float*, align 8
  %rad.addr = alloca float*, align 8
  %bentn.addr = alloca float*, align 8
  %node = alloca %struct.OccNode*, align 8
  %stack = alloca %struct.OccNode**, align 8
  %face = alloca %struct.OccFace*, align 8
  %resultocc = alloca float, align 4
  %resultrad = alloca [3 x float], align 4
  %v = alloca [3 x float], align 4
  %p = alloca [3 x float], align 4
  %n = alloca [3 x float], align 4
  %co = alloca [3 x float], align 4
  %invd2 = alloca float, align 4
  %distfac = alloca float, align 4
  %fac = alloca float, align 4
  %error = alloca float, align 4
  %d2 = alloca float, align 4
  %weight = alloca float, align 4
  %emitarea = alloca float, align 4
  %b = alloca i32, align 4
  %f = alloca i32, align 4
  %totstack = alloca i32, align 4
  store %struct.OcclusionTree* %tree, %struct.OcclusionTree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionTree** %tree.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  store i32 %thread, i32* %thread.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %thread.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  store %struct.OccFace* %exclude, %struct.OccFace** %exclude.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccFace** %exclude.addr, metadata !7438, metadata !DIExpression()), !dbg !7439
  store float* %pp, float** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pp.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  store float* %pn, float** %pn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pn.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  store float* %occ, float** %occ.addr, align 8
  call void @llvm.dbg.declare(metadata float** %occ.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  store float* %rad, float** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata float** %rad.addr, metadata !7446, metadata !DIExpression()), !dbg !7447
  store float* %bentn, float** %bentn.addr, align 8
  call void @llvm.dbg.declare(metadata float** %bentn.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata %struct.OccNode*** %stack, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata %struct.OccFace** %face, metadata !7454, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.declare(metadata float* %resultocc, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.declare(metadata [3 x float]* %resultrad, metadata !7458, metadata !DIExpression()), !dbg !7459
  call void @llvm.dbg.declare(metadata [3 x float]* %v, metadata !7460, metadata !DIExpression()), !dbg !7461
  call void @llvm.dbg.declare(metadata [3 x float]* %p, metadata !7462, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.declare(metadata [3 x float]* %n, metadata !7464, metadata !DIExpression()), !dbg !7465
  call void @llvm.dbg.declare(metadata [3 x float]* %co, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.declare(metadata float* %invd2, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata float* %distfac, metadata !7470, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata float* %error, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata float* %d2, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata float* %weight, metadata !7478, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.declare(metadata float* %emitarea, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.declare(metadata i32* %b, metadata !7482, metadata !DIExpression()), !dbg !7483
  call void @llvm.dbg.declare(metadata i32* %f, metadata !7484, metadata !DIExpression()), !dbg !7485
  call void @llvm.dbg.declare(metadata i32* %totstack, metadata !7486, metadata !DIExpression()), !dbg !7487
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7488
  %0 = load float*, float** %pp.addr, align 8, !dbg !7489
  call void @copy_v3_v3(float* %arraydecay, float* %0), !dbg !7490
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7491
  %1 = load float*, float** %pn.addr, align 8, !dbg !7492
  call void @copy_v3_v3(float* %arraydecay1, float* %1), !dbg !7493
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7494
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7495
  call void @madd_v3_v3fl(float* %arraydecay2, float* %arraydecay3, float 0x3F1A36E2E0000000), !dbg !7496
  %2 = load float*, float** %bentn.addr, align 8, !dbg !7497
  %tobool = icmp ne float* %2, null, !dbg !7497
  br i1 %tobool, label %if.then, label %if.end, !dbg !7499

if.then:                                          ; preds = %entry
  %3 = load float*, float** %bentn.addr, align 8, !dbg !7500
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7501
  call void @copy_v3_v3(float* %3, float* %arraydecay4), !dbg !7502
  br label %if.end, !dbg !7502

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7503
  %error5 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %4, i32 0, i32 9, !dbg !7504
  %5 = load float, float* %error5, align 8, !dbg !7504
  store float %5, float* %error, align 4, !dbg !7505
  %6 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7506
  %distfac6 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %6, i32 0, i32 10, !dbg !7507
  %7 = load float, float* %distfac6, align 4, !dbg !7507
  store float %7, float* %distfac, align 4, !dbg !7508
  store float 0.000000e+00, float* %resultocc, align 4, !dbg !7509
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %resultrad, i64 0, i64 0, !dbg !7510
  call void @zero_v3(float* %arraydecay7), !dbg !7511
  %8 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7512
  %stack8 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %8, i32 0, i32 6, !dbg !7513
  %9 = load i32, i32* %thread.addr, align 4, !dbg !7514
  %idxprom = sext i32 %9 to i64, !dbg !7512
  %arrayidx = getelementptr inbounds [1 x %struct.OccNode**], [1 x %struct.OccNode**]* %stack8, i64 0, i64 %idxprom, !dbg !7512
  %10 = load %struct.OccNode**, %struct.OccNode*** %arrayidx, align 8, !dbg !7512
  store %struct.OccNode** %10, %struct.OccNode*** %stack, align 8, !dbg !7515
  %11 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7516
  %root = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %11, i32 0, i32 5, !dbg !7517
  %12 = load %struct.OccNode*, %struct.OccNode** %root, align 8, !dbg !7517
  %13 = load %struct.OccNode**, %struct.OccNode*** %stack, align 8, !dbg !7518
  %arrayidx9 = getelementptr inbounds %struct.OccNode*, %struct.OccNode** %13, i64 0, !dbg !7518
  store %struct.OccNode* %12, %struct.OccNode** %arrayidx9, align 8, !dbg !7519
  store i32 1, i32* %totstack, align 4, !dbg !7520
  br label %while.cond, !dbg !7521

while.cond:                                       ; preds = %if.end159, %if.then28, %if.end
  %14 = load i32, i32* %totstack, align 4, !dbg !7522
  %tobool10 = icmp ne i32 %14, 0, !dbg !7521
  br i1 %tobool10, label %while.body, label %while.end, !dbg !7521

while.body:                                       ; preds = %while.cond
  %15 = load %struct.OccNode**, %struct.OccNode*** %stack, align 8, !dbg !7523
  %16 = load i32, i32* %totstack, align 4, !dbg !7525
  %dec = add nsw i32 %16, -1, !dbg !7525
  store i32 %dec, i32* %totstack, align 4, !dbg !7525
  %idxprom11 = sext i32 %dec to i64, !dbg !7523
  %arrayidx12 = getelementptr inbounds %struct.OccNode*, %struct.OccNode** %15, i64 %idxprom11, !dbg !7523
  %17 = load %struct.OccNode*, %struct.OccNode** %arrayidx12, align 8, !dbg !7523
  store %struct.OccNode* %17, %struct.OccNode** %node, align 8, !dbg !7526
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7527
  %18 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7528
  %co14 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %18, i32 0, i32 0, !dbg !7529
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !7528
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7530
  call void @sub_v3_v3v3(float* %arraydecay13, float* %arraydecay15, float* %arraydecay16), !dbg !7531
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7532
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7533
  %call = call float @dot_v3v3(float* %arraydecay17, float* %arraydecay18), !dbg !7534
  %add = fadd float %call, 0x3C9CD2B2A0000000, !dbg !7535
  store float %add, float* %d2, align 4, !dbg !7536
  %19 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7537
  %area = getelementptr inbounds %struct.OccNode, %struct.OccNode* %19, i32 0, i32 1, !dbg !7537
  %20 = load float, float* %area, align 4, !dbg !7537
  %21 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7537
  %dco = getelementptr inbounds %struct.OccNode, %struct.OccNode* %21, i32 0, i32 3, !dbg !7537
  %22 = load float, float* %dco, align 4, !dbg !7537
  %cmp = fcmp ogt float %20, %22, !dbg !7537
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7537

cond.true:                                        ; preds = %while.body
  %23 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7537
  %area19 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %23, i32 0, i32 1, !dbg !7537
  %24 = load float, float* %area19, align 4, !dbg !7537
  br label %cond.end, !dbg !7537

cond.false:                                       ; preds = %while.body
  %25 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7537
  %dco20 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %25, i32 0, i32 3, !dbg !7537
  %26 = load float, float* %dco20, align 4, !dbg !7537
  br label %cond.end, !dbg !7537

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %24, %cond.true ], [ %26, %cond.false ], !dbg !7537
  store float %cond, float* %emitarea, align 4, !dbg !7538
  %27 = load float, float* %d2, align 4, !dbg !7539
  %28 = load float, float* %error, align 4, !dbg !7541
  %mul = fmul float %27, %28, !dbg !7542
  %29 = load float, float* %emitarea, align 4, !dbg !7543
  %cmp21 = fcmp ogt float %mul, %29, !dbg !7544
  br i1 %cmp21, label %if.then22, label %if.else63, !dbg !7545

if.then22:                                        ; preds = %cond.end
  %30 = load float, float* %distfac, align 4, !dbg !7546
  %cmp23 = fcmp une float %30, 0.000000e+00, !dbg !7549
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !7550

if.then24:                                        ; preds = %if.then22
  %31 = load float, float* %distfac, align 4, !dbg !7551
  %32 = load float, float* %d2, align 4, !dbg !7553
  %mul25 = fmul float %31, %32, !dbg !7554
  %add26 = fadd float 1.000000e+00, %mul25, !dbg !7555
  %div = fdiv float 1.000000e+00, %add26, !dbg !7556
  store float %div, float* %fac, align 4, !dbg !7557
  %33 = load float, float* %fac, align 4, !dbg !7558
  %cmp27 = fcmp olt float %33, 0x3F847AE140000000, !dbg !7560
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !7561

if.then28:                                        ; preds = %if.then24
  br label %while.cond, !dbg !7562, !llvm.loop !7563

if.end29:                                         ; preds = %if.then24
  br label %if.end30, !dbg !7565

if.else:                                          ; preds = %if.then22
  store float 1.000000e+00, float* %fac, align 4, !dbg !7566
  br label %if.end30

if.end30:                                         ; preds = %if.else, %if.end29
  %34 = load float, float* %d2, align 4, !dbg !7567
  %call31 = call float @sqrtf(float %34) #5, !dbg !7568
  %div32 = fdiv float 1.000000e+00, %call31, !dbg !7569
  store float %div32, float* %invd2, align 4, !dbg !7570
  %35 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7571
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7572
  %36 = load float, float* %d2, align 4, !dbg !7573
  %37 = load float, float* %invd2, align 4, !dbg !7574
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7575
  %call35 = call float @occ_solid_angle(%struct.OccNode* %35, float* %arraydecay33, float %36, float %37, float* %arraydecay34), !dbg !7576
  store float %call35, float* %weight, align 4, !dbg !7577
  %38 = load float*, float** %rad.addr, align 8, !dbg !7578
  %tobool36 = icmp ne float* %38, null, !dbg !7578
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !7580

if.then37:                                        ; preds = %if.end30
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %resultrad, i64 0, i64 0, !dbg !7581
  %39 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7582
  %rad39 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %39, i32 0, i32 5, !dbg !7583
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %rad39, i64 0, i64 0, !dbg !7582
  %40 = load float, float* %weight, align 4, !dbg !7584
  %41 = load float, float* %fac, align 4, !dbg !7585
  %mul41 = fmul float %40, %41, !dbg !7586
  call void @madd_v3_v3fl(float* %arraydecay38, float* %arraydecay40, float %mul41), !dbg !7587
  br label %if.end42, !dbg !7587

if.end42:                                         ; preds = %if.then37, %if.end30
  %42 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7588
  %occlusion = getelementptr inbounds %struct.OccNode, %struct.OccNode* %42, i32 0, i32 4, !dbg !7589
  %43 = load float, float* %occlusion, align 8, !dbg !7589
  %44 = load float, float* %weight, align 4, !dbg !7590
  %mul43 = fmul float %44, %43, !dbg !7590
  store float %mul43, float* %weight, align 4, !dbg !7590
  %45 = load float*, float** %bentn.addr, align 8, !dbg !7591
  %tobool44 = icmp ne float* %45, null, !dbg !7591
  br i1 %tobool44, label %if.then45, label %if.end60, !dbg !7593

if.then45:                                        ; preds = %if.end42
  %46 = load float, float* %weight, align 4, !dbg !7594
  %47 = load float, float* %invd2, align 4, !dbg !7596
  %mul46 = fmul float %46, %47, !dbg !7597
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7598
  %48 = load float, float* %arrayidx47, align 4, !dbg !7598
  %mul48 = fmul float %mul46, %48, !dbg !7599
  %49 = load float*, float** %bentn.addr, align 8, !dbg !7600
  %arrayidx49 = getelementptr inbounds float, float* %49, i64 0, !dbg !7600
  %50 = load float, float* %arrayidx49, align 4, !dbg !7601
  %sub = fsub float %50, %mul48, !dbg !7601
  store float %sub, float* %arrayidx49, align 4, !dbg !7601
  %51 = load float, float* %weight, align 4, !dbg !7602
  %52 = load float, float* %invd2, align 4, !dbg !7603
  %mul50 = fmul float %51, %52, !dbg !7604
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !7605
  %53 = load float, float* %arrayidx51, align 4, !dbg !7605
  %mul52 = fmul float %mul50, %53, !dbg !7606
  %54 = load float*, float** %bentn.addr, align 8, !dbg !7607
  %arrayidx53 = getelementptr inbounds float, float* %54, i64 1, !dbg !7607
  %55 = load float, float* %arrayidx53, align 4, !dbg !7608
  %sub54 = fsub float %55, %mul52, !dbg !7608
  store float %sub54, float* %arrayidx53, align 4, !dbg !7608
  %56 = load float, float* %weight, align 4, !dbg !7609
  %57 = load float, float* %invd2, align 4, !dbg !7610
  %mul55 = fmul float %56, %57, !dbg !7611
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !7612
  %58 = load float, float* %arrayidx56, align 4, !dbg !7612
  %mul57 = fmul float %mul55, %58, !dbg !7613
  %59 = load float*, float** %bentn.addr, align 8, !dbg !7614
  %arrayidx58 = getelementptr inbounds float, float* %59, i64 2, !dbg !7614
  %60 = load float, float* %arrayidx58, align 4, !dbg !7615
  %sub59 = fsub float %60, %mul57, !dbg !7615
  store float %sub59, float* %arrayidx58, align 4, !dbg !7615
  br label %if.end60, !dbg !7616

if.end60:                                         ; preds = %if.then45, %if.end42
  %61 = load float, float* %weight, align 4, !dbg !7617
  %62 = load float, float* %fac, align 4, !dbg !7618
  %mul61 = fmul float %61, %62, !dbg !7619
  %63 = load float, float* %resultocc, align 4, !dbg !7620
  %add62 = fadd float %63, %mul61, !dbg !7620
  store float %add62, float* %resultocc, align 4, !dbg !7620
  br label %if.end159, !dbg !7621

if.else63:                                        ; preds = %cond.end
  store i32 0, i32* %b, align 4, !dbg !7622
  br label %for.cond, !dbg !7625

for.cond:                                         ; preds = %for.inc, %if.else63
  %64 = load i32, i32* %b, align 4, !dbg !7626
  %cmp64 = icmp slt i32 %64, 8, !dbg !7628
  br i1 %cmp64, label %for.body, label %for.end, !dbg !7629

for.body:                                         ; preds = %for.cond
  %65 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7630
  %childflag = getelementptr inbounds %struct.OccNode, %struct.OccNode* %65, i32 0, i32 6, !dbg !7633
  %66 = load i32, i32* %childflag, align 8, !dbg !7633
  %67 = load i32, i32* %b, align 4, !dbg !7634
  %shl = shl i32 1, %67, !dbg !7635
  %and = and i32 %66, %shl, !dbg !7636
  %tobool65 = icmp ne i32 %and, 0, !dbg !7636
  br i1 %tobool65, label %if.then66, label %if.else143, !dbg !7637

if.then66:                                        ; preds = %for.body
  %68 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7638
  %child = getelementptr inbounds %struct.OccNode, %struct.OccNode* %68, i32 0, i32 7, !dbg !7640
  %69 = load i32, i32* %b, align 4, !dbg !7641
  %idxprom67 = sext i32 %69 to i64, !dbg !7638
  %arrayidx68 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child, i64 0, i64 %idxprom67, !dbg !7638
  %face69 = bitcast %union.anon* %arrayidx68 to i32*, !dbg !7642
  %70 = load i32, i32* %face69, align 8, !dbg !7642
  store i32 %70, i32* %f, align 4, !dbg !7643
  %71 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7644
  %face70 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %71, i32 0, i32 2, !dbg !7645
  %72 = load %struct.OccFace*, %struct.OccFace** %face70, align 8, !dbg !7645
  %73 = load i32, i32* %f, align 4, !dbg !7646
  %idxprom71 = sext i32 %73 to i64, !dbg !7644
  %arrayidx72 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %72, i64 %idxprom71, !dbg !7644
  store %struct.OccFace* %arrayidx72, %struct.OccFace** %face, align 8, !dbg !7647
  %74 = load %struct.OccFace*, %struct.OccFace** %exclude.addr, align 8, !dbg !7648
  %tobool73 = icmp ne %struct.OccFace* %74, null, !dbg !7648
  br i1 %tobool73, label %lor.lhs.false, label %if.then78, !dbg !7650

lor.lhs.false:                                    ; preds = %if.then66
  %75 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !7651
  %obi = getelementptr inbounds %struct.OccFace, %struct.OccFace* %75, i32 0, i32 0, !dbg !7652
  %76 = load i32, i32* %obi, align 4, !dbg !7652
  %77 = load %struct.OccFace*, %struct.OccFace** %exclude.addr, align 8, !dbg !7653
  %obi74 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %77, i32 0, i32 0, !dbg !7654
  %78 = load i32, i32* %obi74, align 4, !dbg !7654
  %cmp75 = icmp eq i32 %76, %78, !dbg !7655
  br i1 %cmp75, label %land.lhs.true, label %if.then78, !dbg !7656

land.lhs.true:                                    ; preds = %lor.lhs.false
  %79 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !7657
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %79, i32 0, i32 1, !dbg !7658
  %80 = load i32, i32* %facenr, align 4, !dbg !7658
  %81 = load %struct.OccFace*, %struct.OccFace** %exclude.addr, align 8, !dbg !7659
  %facenr76 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %81, i32 0, i32 1, !dbg !7660
  %82 = load i32, i32* %facenr76, align 4, !dbg !7660
  %cmp77 = icmp eq i32 %80, %82, !dbg !7661
  br i1 %cmp77, label %if.end142, label %if.then78, !dbg !7662

if.then78:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.then66
  %83 = load float*, float** %bentn.addr, align 8, !dbg !7663
  %tobool79 = icmp ne float* %83, null, !dbg !7663
  br i1 %tobool79, label %if.then82, label %lor.lhs.false80, !dbg !7666

lor.lhs.false80:                                  ; preds = %if.then78
  %84 = load float, float* %distfac, align 4, !dbg !7667
  %cmp81 = fcmp une float %84, 0.000000e+00, !dbg !7668
  br i1 %cmp81, label %if.then82, label %if.else102, !dbg !7669

if.then82:                                        ; preds = %lor.lhs.false80, %if.then78
  %85 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !7670
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7672
  call void @occ_face(%struct.OccFace* %85, float* %arraydecay83, float* null, float* null), !dbg !7673
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7674
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7675
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7676
  call void @sub_v3_v3v3(float* %arraydecay84, float* %arraydecay85, float* %arraydecay86), !dbg !7677
  %arraydecay87 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7678
  %arraydecay88 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7679
  %call89 = call float @dot_v3v3(float* %arraydecay87, float* %arraydecay88), !dbg !7680
  %add90 = fadd float %call89, 0x3C9CD2B2A0000000, !dbg !7681
  store float %add90, float* %d2, align 4, !dbg !7682
  %86 = load float, float* %distfac, align 4, !dbg !7683
  %cmp91 = fcmp oeq float %86, 0.000000e+00, !dbg !7684
  br i1 %cmp91, label %cond.true92, label %cond.false93, !dbg !7685

cond.true92:                                      ; preds = %if.then82
  br label %cond.end97, !dbg !7685

cond.false93:                                     ; preds = %if.then82
  %87 = load float, float* %distfac, align 4, !dbg !7686
  %88 = load float, float* %d2, align 4, !dbg !7687
  %mul94 = fmul float %87, %88, !dbg !7688
  %add95 = fadd float 1.000000e+00, %mul94, !dbg !7689
  %div96 = fdiv float 1.000000e+00, %add95, !dbg !7690
  br label %cond.end97, !dbg !7685

cond.end97:                                       ; preds = %cond.false93, %cond.true92
  %cond98 = phi float [ 1.000000e+00, %cond.true92 ], [ %div96, %cond.false93 ], !dbg !7685
  store float %cond98, float* %fac, align 4, !dbg !7691
  %89 = load float, float* %fac, align 4, !dbg !7692
  %cmp99 = fcmp olt float %89, 0x3F847AE140000000, !dbg !7694
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !7695

if.then100:                                       ; preds = %cond.end97
  br label %for.inc, !dbg !7696

if.end101:                                        ; preds = %cond.end97
  br label %if.end103, !dbg !7697

if.else102:                                       ; preds = %lor.lhs.false80
  store float 1.000000e+00, float* %fac, align 4, !dbg !7698
  br label %if.end103

if.end103:                                        ; preds = %if.else102, %if.end101
  %90 = load %struct.OccFace*, %struct.OccFace** %face, align 8, !dbg !7699
  %arraydecay104 = getelementptr inbounds [3 x float], [3 x float]* %p, i64 0, i64 0, !dbg !7700
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %n, i64 0, i64 0, !dbg !7701
  %call106 = call float @occ_form_factor(%struct.OccFace* %90, float* %arraydecay104, float* %arraydecay105), !dbg !7702
  store float %call106, float* %weight, align 4, !dbg !7703
  %91 = load float*, float** %rad.addr, align 8, !dbg !7704
  %tobool107 = icmp ne float* %91, null, !dbg !7704
  br i1 %tobool107, label %if.then108, label %if.end115, !dbg !7706

if.then108:                                       ; preds = %if.end103
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %resultrad, i64 0, i64 0, !dbg !7707
  %92 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7708
  %rad110 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %92, i32 0, i32 4, !dbg !7709
  %93 = load [3 x float]*, [3 x float]** %rad110, align 8, !dbg !7709
  %94 = load i32, i32* %f, align 4, !dbg !7710
  %idxprom111 = sext i32 %94 to i64, !dbg !7708
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %93, i64 %idxprom111, !dbg !7708
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 0, !dbg !7708
  %95 = load float, float* %weight, align 4, !dbg !7711
  %96 = load float, float* %fac, align 4, !dbg !7712
  %mul114 = fmul float %95, %96, !dbg !7713
  call void @madd_v3_v3fl(float* %arraydecay109, float* %arraydecay113, float %mul114), !dbg !7714
  br label %if.end115, !dbg !7714

if.end115:                                        ; preds = %if.then108, %if.end103
  %97 = load %struct.OcclusionTree*, %struct.OcclusionTree** %tree.addr, align 8, !dbg !7715
  %occlusion116 = getelementptr inbounds %struct.OcclusionTree, %struct.OcclusionTree* %97, i32 0, i32 3, !dbg !7716
  %98 = load float*, float** %occlusion116, align 8, !dbg !7716
  %99 = load i32, i32* %f, align 4, !dbg !7717
  %idxprom117 = sext i32 %99 to i64, !dbg !7715
  %arrayidx118 = getelementptr inbounds float, float* %98, i64 %idxprom117, !dbg !7715
  %100 = load float, float* %arrayidx118, align 4, !dbg !7715
  %101 = load float, float* %weight, align 4, !dbg !7718
  %mul119 = fmul float %101, %100, !dbg !7718
  store float %mul119, float* %weight, align 4, !dbg !7718
  %102 = load float*, float** %bentn.addr, align 8, !dbg !7719
  %tobool120 = icmp ne float* %102, null, !dbg !7719
  br i1 %tobool120, label %if.then121, label %if.end139, !dbg !7721

if.then121:                                       ; preds = %if.end115
  %103 = load float, float* %d2, align 4, !dbg !7722
  %call122 = call float @sqrtf(float %103) #5, !dbg !7724
  %div123 = fdiv float 1.000000e+00, %call122, !dbg !7725
  store float %div123, float* %invd2, align 4, !dbg !7726
  %104 = load float, float* %weight, align 4, !dbg !7727
  %105 = load float, float* %invd2, align 4, !dbg !7728
  %mul124 = fmul float %104, %105, !dbg !7729
  %arrayidx125 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !7730
  %106 = load float, float* %arrayidx125, align 4, !dbg !7730
  %mul126 = fmul float %mul124, %106, !dbg !7731
  %107 = load float*, float** %bentn.addr, align 8, !dbg !7732
  %arrayidx127 = getelementptr inbounds float, float* %107, i64 0, !dbg !7732
  %108 = load float, float* %arrayidx127, align 4, !dbg !7733
  %sub128 = fsub float %108, %mul126, !dbg !7733
  store float %sub128, float* %arrayidx127, align 4, !dbg !7733
  %109 = load float, float* %weight, align 4, !dbg !7734
  %110 = load float, float* %invd2, align 4, !dbg !7735
  %mul129 = fmul float %109, %110, !dbg !7736
  %arrayidx130 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 1, !dbg !7737
  %111 = load float, float* %arrayidx130, align 4, !dbg !7737
  %mul131 = fmul float %mul129, %111, !dbg !7738
  %112 = load float*, float** %bentn.addr, align 8, !dbg !7739
  %arrayidx132 = getelementptr inbounds float, float* %112, i64 1, !dbg !7739
  %113 = load float, float* %arrayidx132, align 4, !dbg !7740
  %sub133 = fsub float %113, %mul131, !dbg !7740
  store float %sub133, float* %arrayidx132, align 4, !dbg !7740
  %114 = load float, float* %weight, align 4, !dbg !7741
  %115 = load float, float* %invd2, align 4, !dbg !7742
  %mul134 = fmul float %114, %115, !dbg !7743
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 2, !dbg !7744
  %116 = load float, float* %arrayidx135, align 4, !dbg !7744
  %mul136 = fmul float %mul134, %116, !dbg !7745
  %117 = load float*, float** %bentn.addr, align 8, !dbg !7746
  %arrayidx137 = getelementptr inbounds float, float* %117, i64 2, !dbg !7746
  %118 = load float, float* %arrayidx137, align 4, !dbg !7747
  %sub138 = fsub float %118, %mul136, !dbg !7747
  store float %sub138, float* %arrayidx137, align 4, !dbg !7747
  br label %if.end139, !dbg !7748

if.end139:                                        ; preds = %if.then121, %if.end115
  %119 = load float, float* %weight, align 4, !dbg !7749
  %120 = load float, float* %fac, align 4, !dbg !7750
  %mul140 = fmul float %119, %120, !dbg !7751
  %121 = load float, float* %resultocc, align 4, !dbg !7752
  %add141 = fadd float %121, %mul140, !dbg !7752
  store float %add141, float* %resultocc, align 4, !dbg !7752
  br label %if.end142, !dbg !7753

if.end142:                                        ; preds = %if.end139, %land.lhs.true
  br label %if.end157, !dbg !7754

if.else143:                                       ; preds = %for.body
  %122 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7755
  %child144 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %122, i32 0, i32 7, !dbg !7757
  %123 = load i32, i32* %b, align 4, !dbg !7758
  %idxprom145 = sext i32 %123 to i64, !dbg !7755
  %arrayidx146 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child144, i64 0, i64 %idxprom145, !dbg !7755
  %node147 = bitcast %union.anon* %arrayidx146 to %struct.OccNode**, !dbg !7759
  %124 = load %struct.OccNode*, %struct.OccNode** %node147, align 8, !dbg !7759
  %tobool148 = icmp ne %struct.OccNode* %124, null, !dbg !7755
  br i1 %tobool148, label %if.then149, label %if.end156, !dbg !7760

if.then149:                                       ; preds = %if.else143
  %125 = load %struct.OccNode*, %struct.OccNode** %node, align 8, !dbg !7761
  %child150 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %125, i32 0, i32 7, !dbg !7763
  %126 = load i32, i32* %b, align 4, !dbg !7764
  %idxprom151 = sext i32 %126 to i64, !dbg !7761
  %arrayidx152 = getelementptr inbounds [8 x %union.anon], [8 x %union.anon]* %child150, i64 0, i64 %idxprom151, !dbg !7761
  %node153 = bitcast %union.anon* %arrayidx152 to %struct.OccNode**, !dbg !7765
  %127 = load %struct.OccNode*, %struct.OccNode** %node153, align 8, !dbg !7765
  %128 = load %struct.OccNode**, %struct.OccNode*** %stack, align 8, !dbg !7766
  %129 = load i32, i32* %totstack, align 4, !dbg !7767
  %inc = add nsw i32 %129, 1, !dbg !7767
  store i32 %inc, i32* %totstack, align 4, !dbg !7767
  %idxprom154 = sext i32 %129 to i64, !dbg !7766
  %arrayidx155 = getelementptr inbounds %struct.OccNode*, %struct.OccNode** %128, i64 %idxprom154, !dbg !7766
  store %struct.OccNode* %127, %struct.OccNode** %arrayidx155, align 8, !dbg !7768
  br label %if.end156, !dbg !7769

if.end156:                                        ; preds = %if.then149, %if.else143
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %if.end142
  br label %for.inc, !dbg !7770

for.inc:                                          ; preds = %if.end157, %if.then100
  %130 = load i32, i32* %b, align 4, !dbg !7771
  %inc158 = add nsw i32 %130, 1, !dbg !7771
  store i32 %inc158, i32* %b, align 4, !dbg !7771
  br label %for.cond, !dbg !7772, !llvm.loop !7773

for.end:                                          ; preds = %for.cond
  br label %if.end159

if.end159:                                        ; preds = %for.end, %if.end60
  br label %while.cond, !dbg !7521, !llvm.loop !7563

while.end:                                        ; preds = %while.cond
  %131 = load float*, float** %occ.addr, align 8, !dbg !7775
  %tobool160 = icmp ne float* %131, null, !dbg !7775
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !7777

if.then161:                                       ; preds = %while.end
  %132 = load float, float* %resultocc, align 4, !dbg !7778
  %133 = load float*, float** %occ.addr, align 8, !dbg !7779
  store float %132, float* %133, align 4, !dbg !7780
  br label %if.end162, !dbg !7781

if.end162:                                        ; preds = %if.then161, %while.end
  %134 = load float*, float** %rad.addr, align 8, !dbg !7782
  %tobool163 = icmp ne float* %134, null, !dbg !7782
  br i1 %tobool163, label %if.then164, label %if.end166, !dbg !7784

if.then164:                                       ; preds = %if.end162
  %135 = load float*, float** %rad.addr, align 8, !dbg !7785
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %resultrad, i64 0, i64 0, !dbg !7786
  call void @copy_v3_v3(float* %135, float* %arraydecay165), !dbg !7787
  br label %if.end166, !dbg !7787

if.end166:                                        ; preds = %if.then164, %if.end162
  %136 = load float*, float** %bentn.addr, align 8, !dbg !7788
  %tobool167 = icmp ne float* %136, null, !dbg !7788
  br i1 %tobool167, label %if.then168, label %if.end170, !dbg !7790

if.then168:                                       ; preds = %if.end166
  %137 = load float*, float** %bentn.addr, align 8, !dbg !7791
  %call169 = call float @normalize_v3(float* %137), !dbg !7792
  br label %if.end170, !dbg !7792

if.end170:                                        ; preds = %if.then168, %if.end166
  ret void, !dbg !7793
}

; Function Attrs: noinline nounwind uwtable
define internal float @occ_solid_angle(%struct.OccNode* %node, float* %v, float %d2, float %invd2, float* %receivenormal) #0 !dbg !7794 {
entry:
  %node.addr = alloca %struct.OccNode*, align 8
  %v.addr = alloca float*, align 8
  %d2.addr = alloca float, align 4
  %invd2.addr = alloca float, align 4
  %receivenormal.addr = alloca float*, align 8
  %dotreceive = alloca float, align 4
  %dotemit = alloca float, align 4
  %ev = alloca [3 x float], align 4
  store %struct.OccNode* %node, %struct.OccNode** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccNode** %node.addr, metadata !7797, metadata !DIExpression()), !dbg !7798
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  store float %d2, float* %d2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d2.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store float %invd2, float* %invd2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %invd2.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store float* %receivenormal, float** %receivenormal.addr, align 8
  call void @llvm.dbg.declare(metadata float** %receivenormal.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  call void @llvm.dbg.declare(metadata float* %dotreceive, metadata !7807, metadata !DIExpression()), !dbg !7808
  call void @llvm.dbg.declare(metadata float* %dotemit, metadata !7809, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.declare(metadata [3 x float]* %ev, metadata !7811, metadata !DIExpression()), !dbg !7812
  %0 = load float*, float** %v.addr, align 8, !dbg !7813
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7813
  %1 = load float, float* %arrayidx, align 4, !dbg !7813
  %fneg = fneg float %1, !dbg !7814
  %2 = load float, float* %invd2.addr, align 4, !dbg !7815
  %mul = fmul float %fneg, %2, !dbg !7816
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %ev, i64 0, i64 0, !dbg !7817
  store float %mul, float* %arrayidx1, align 4, !dbg !7818
  %3 = load float*, float** %v.addr, align 8, !dbg !7819
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !7819
  %4 = load float, float* %arrayidx2, align 4, !dbg !7819
  %fneg3 = fneg float %4, !dbg !7820
  %5 = load float, float* %invd2.addr, align 4, !dbg !7821
  %mul4 = fmul float %fneg3, %5, !dbg !7822
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %ev, i64 0, i64 1, !dbg !7823
  store float %mul4, float* %arrayidx5, align 4, !dbg !7824
  %6 = load float*, float** %v.addr, align 8, !dbg !7825
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !7825
  %7 = load float, float* %arrayidx6, align 4, !dbg !7825
  %fneg7 = fneg float %7, !dbg !7826
  %8 = load float, float* %invd2.addr, align 4, !dbg !7827
  %mul8 = fmul float %fneg7, %8, !dbg !7828
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %ev, i64 0, i64 2, !dbg !7829
  store float %mul8, float* %arrayidx9, align 4, !dbg !7830
  %9 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !7831
  %sh = getelementptr inbounds %struct.OccNode, %struct.OccNode* %9, i32 0, i32 2, !dbg !7832
  %arraydecay = getelementptr inbounds [9 x float], [9 x float]* %sh, i64 0, i64 0, !dbg !7831
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %ev, i64 0, i64 0, !dbg !7833
  %call = call float @sh_eval(float* %arraydecay, float* %arraydecay10), !dbg !7834
  store float %call, float* %dotemit, align 4, !dbg !7835
  %10 = load float*, float** %receivenormal.addr, align 8, !dbg !7836
  %11 = load float*, float** %v.addr, align 8, !dbg !7837
  %call11 = call float @dot_v3v3(float* %10, float* %11), !dbg !7838
  %12 = load float, float* %invd2.addr, align 4, !dbg !7839
  %mul12 = fmul float %call11, %12, !dbg !7840
  store float %mul12, float* %dotreceive, align 4, !dbg !7841
  %13 = load float, float* %dotemit, align 4, !dbg !7842
  %cmp = fcmp olt float %13, 0.000000e+00, !dbg !7842
  br i1 %cmp, label %if.then, label %if.else, !dbg !7845

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %dotemit, align 4, !dbg !7842
  br label %if.end15, !dbg !7842

if.else:                                          ; preds = %entry
  %14 = load float, float* %dotemit, align 4, !dbg !7846
  %cmp13 = fcmp ogt float %14, 1.000000e+00, !dbg !7846
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !7842

if.then14:                                        ; preds = %if.else
  store float 1.000000e+00, float* %dotemit, align 4, !dbg !7846
  br label %if.end, !dbg !7846

if.end:                                           ; preds = %if.then14, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %15 = load float, float* %dotreceive, align 4, !dbg !7848
  %cmp16 = fcmp olt float %15, 0.000000e+00, !dbg !7848
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !7851

if.then17:                                        ; preds = %if.end15
  store float 0.000000e+00, float* %dotreceive, align 4, !dbg !7848
  br label %if.end22, !dbg !7848

if.else18:                                        ; preds = %if.end15
  %16 = load float, float* %dotreceive, align 4, !dbg !7852
  %cmp19 = fcmp ogt float %16, 1.000000e+00, !dbg !7852
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !7848

if.then20:                                        ; preds = %if.else18
  store float 1.000000e+00, float* %dotreceive, align 4, !dbg !7852
  br label %if.end21, !dbg !7852

if.end21:                                         ; preds = %if.then20, %if.else18
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then17
  %17 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !7854
  %area = getelementptr inbounds %struct.OccNode, %struct.OccNode* %17, i32 0, i32 1, !dbg !7855
  %18 = load float, float* %area, align 4, !dbg !7855
  %19 = load float, float* %dotemit, align 4, !dbg !7856
  %mul23 = fmul float %18, %19, !dbg !7857
  %20 = load float, float* %dotreceive, align 4, !dbg !7858
  %mul24 = fmul float %mul23, %20, !dbg !7859
  %21 = load float, float* %d2.addr, align 4, !dbg !7860
  %22 = load %struct.OccNode*, %struct.OccNode** %node.addr, align 8, !dbg !7861
  %area25 = getelementptr inbounds %struct.OccNode, %struct.OccNode* %22, i32 0, i32 1, !dbg !7862
  %23 = load float, float* %area25, align 4, !dbg !7862
  %mul26 = fmul float %23, 0x3FD45F3060000000, !dbg !7863
  %add = fadd float %21, %mul26, !dbg !7864
  %div = fdiv float %mul24, %add, !dbg !7865
  %mul27 = fmul float %div, 0x3FD45F3060000000, !dbg !7866
  ret float %mul27, !dbg !7867
}

; Function Attrs: noinline nounwind uwtable
define internal float @occ_form_factor(%struct.OccFace* %face, float* %p, float* %n) #0 !dbg !7868 {
entry:
  %face.addr = alloca %struct.OccFace*, align 8
  %p.addr = alloca float*, align 8
  %n.addr = alloca float*, align 8
  %obi = alloca %struct.ObjectInstanceRen*, align 8
  %vlr = alloca %struct.VlakRen*, align 8
  %v1 = alloca [3 x float], align 4
  %v2 = alloca [3 x float], align 4
  %v3 = alloca [3 x float], align 4
  %v4 = alloca [3 x float], align 4
  %q0 = alloca [3 x float], align 4
  %q1 = alloca [3 x float], align 4
  %q2 = alloca [3 x float], align 4
  %q3 = alloca [3 x float], align 4
  %contrib = alloca float, align 4
  store %struct.OccFace* %face, %struct.OccFace** %face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OccFace** %face.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  store float* %p, float** %p.addr, align 8
  call void @llvm.dbg.declare(metadata float** %p.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !7875, metadata !DIExpression()), !dbg !7876
  call void @llvm.dbg.declare(metadata %struct.ObjectInstanceRen** %obi, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.declare(metadata %struct.VlakRen** %vlr, metadata !7879, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.declare(metadata [3 x float]* %v1, metadata !7881, metadata !DIExpression()), !dbg !7882
  call void @llvm.dbg.declare(metadata [3 x float]* %v2, metadata !7883, metadata !DIExpression()), !dbg !7884
  call void @llvm.dbg.declare(metadata [3 x float]* %v3, metadata !7885, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.declare(metadata [3 x float]* %v4, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.declare(metadata [3 x float]* %q0, metadata !7889, metadata !DIExpression()), !dbg !7890
  call void @llvm.dbg.declare(metadata [3 x float]* %q1, metadata !7891, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.declare(metadata [3 x float]* %q2, metadata !7893, metadata !DIExpression()), !dbg !7894
  call void @llvm.dbg.declare(metadata [3 x float]* %q3, metadata !7895, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.declare(metadata float* %contrib, metadata !7897, metadata !DIExpression()), !dbg !7898
  store float 0.000000e+00, float* %contrib, align 4, !dbg !7898
  %0 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** getelementptr inbounds (%struct.Render, %struct.Render* @R, i32 0, i32 69), align 8, !dbg !7899
  %1 = load %struct.OccFace*, %struct.OccFace** %face.addr, align 8, !dbg !7900
  %obi1 = getelementptr inbounds %struct.OccFace, %struct.OccFace* %1, i32 0, i32 0, !dbg !7901
  %2 = load i32, i32* %obi1, align 4, !dbg !7901
  %idxprom = sext i32 %2 to i64, !dbg !7902
  %arrayidx = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %0, i64 %idxprom, !dbg !7902
  store %struct.ObjectInstanceRen* %arrayidx, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7903
  %3 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7904
  %obr = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %3, i32 0, i32 2, !dbg !7905
  %4 = load %struct.ObjectRen*, %struct.ObjectRen** %obr, align 8, !dbg !7905
  %5 = load %struct.OccFace*, %struct.OccFace** %face.addr, align 8, !dbg !7906
  %facenr = getelementptr inbounds %struct.OccFace, %struct.OccFace* %5, i32 0, i32 1, !dbg !7907
  %6 = load i32, i32* %facenr, align 4, !dbg !7907
  %call = call %struct.VlakRen* @RE_findOrAddVlak(%struct.ObjectRen* %4, i32 %6), !dbg !7908
  store %struct.VlakRen* %call, %struct.VlakRen** %vlr, align 8, !dbg !7909
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7910
  %7 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7911
  %v12 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %7, i32 0, i32 0, !dbg !7912
  %8 = load %struct.VertRen*, %struct.VertRen** %v12, align 8, !dbg !7912
  %co = getelementptr inbounds %struct.VertRen, %struct.VertRen* %8, i32 0, i32 0, !dbg !7913
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7911
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay3), !dbg !7914
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7915
  %9 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7916
  %v25 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %9, i32 0, i32 1, !dbg !7917
  %10 = load %struct.VertRen*, %struct.VertRen** %v25, align 8, !dbg !7917
  %co6 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %10, i32 0, i32 0, !dbg !7918
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !7916
  call void @copy_v3_v3(float* %arraydecay4, float* %arraydecay7), !dbg !7919
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !7920
  %11 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7921
  %v39 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %11, i32 0, i32 2, !dbg !7922
  %12 = load %struct.VertRen*, %struct.VertRen** %v39, align 8, !dbg !7922
  %co10 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %12, i32 0, i32 0, !dbg !7923
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !7921
  call void @copy_v3_v3(float* %arraydecay8, float* %arraydecay11), !dbg !7924
  %13 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7925
  %flag = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %13, i32 0, i32 11, !dbg !7927
  %14 = load i16, i16* %flag, align 8, !dbg !7927
  %conv = sext i16 %14 to i32, !dbg !7925
  %and = and i32 %conv, 3, !dbg !7928
  %tobool = icmp ne i32 %and, 0, !dbg !7928
  br i1 %tobool, label %if.then, label %if.end, !dbg !7929

if.then:                                          ; preds = %entry
  %15 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7930
  %mat = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %15, i32 0, i32 8, !dbg !7932
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !7930
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7933
  call void @mul_m4_v3([4 x float]* %arraydecay12, float* %arraydecay13), !dbg !7934
  %16 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7935
  %mat14 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %16, i32 0, i32 8, !dbg !7936
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat14, i64 0, i64 0, !dbg !7935
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7937
  call void @mul_m4_v3([4 x float]* %arraydecay15, float* %arraydecay16), !dbg !7938
  %17 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7939
  %mat17 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %17, i32 0, i32 8, !dbg !7940
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat17, i64 0, i64 0, !dbg !7939
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !7941
  call void @mul_m4_v3([4 x float]* %arraydecay18, float* %arraydecay19), !dbg !7942
  br label %if.end, !dbg !7943

if.end:                                           ; preds = %if.then, %entry
  %18 = load float*, float** %p.addr, align 8, !dbg !7944
  %19 = load float*, float** %n.addr, align 8, !dbg !7946
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7947
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %v2, i64 0, i64 0, !dbg !7948
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !7949
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !7950
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !7951
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !7952
  %arraydecay26 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !7953
  %call27 = call zeroext i8 @form_factor_visible_quad(float* %18, float* %19, float* %arraydecay20, float* %arraydecay21, float* %arraydecay22, float* %arraydecay23, float* %arraydecay24, float* %arraydecay25, float* %arraydecay26), !dbg !7954
  %tobool28 = icmp ne i8 %call27, 0, !dbg !7954
  br i1 %tobool28, label %if.then29, label %if.end35, !dbg !7955

if.then29:                                        ; preds = %if.end
  %20 = load float*, float** %p.addr, align 8, !dbg !7956
  %21 = load float*, float** %n.addr, align 8, !dbg !7957
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !7958
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !7959
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !7960
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !7961
  %call34 = call float @form_factor_quad(float* %20, float* %21, float* %arraydecay30, float* %arraydecay31, float* %arraydecay32, float* %arraydecay33), !dbg !7962
  %22 = load float, float* %contrib, align 4, !dbg !7963
  %add = fadd float %22, %call34, !dbg !7963
  store float %add, float* %contrib, align 4, !dbg !7963
  br label %if.end35, !dbg !7964

if.end35:                                         ; preds = %if.then29, %if.end
  %23 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7965
  %v436 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %23, i32 0, i32 3, !dbg !7967
  %24 = load %struct.VertRen*, %struct.VertRen** %v436, align 8, !dbg !7967
  %tobool37 = icmp ne %struct.VertRen* %24, null, !dbg !7965
  br i1 %tobool37, label %if.then38, label %if.end69, !dbg !7968

if.then38:                                        ; preds = %if.end35
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !7969
  %25 = load %struct.VlakRen*, %struct.VlakRen** %vlr, align 8, !dbg !7971
  %v440 = getelementptr inbounds %struct.VlakRen, %struct.VlakRen* %25, i32 0, i32 3, !dbg !7972
  %26 = load %struct.VertRen*, %struct.VertRen** %v440, align 8, !dbg !7972
  %co41 = getelementptr inbounds %struct.VertRen, %struct.VertRen* %26, i32 0, i32 0, !dbg !7973
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %co41, i64 0, i64 0, !dbg !7971
  call void @copy_v3_v3(float* %arraydecay39, float* %arraydecay42), !dbg !7974
  %27 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7975
  %flag43 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %27, i32 0, i32 11, !dbg !7977
  %28 = load i16, i16* %flag43, align 8, !dbg !7977
  %conv44 = sext i16 %28 to i32, !dbg !7975
  %and45 = and i32 %conv44, 3, !dbg !7978
  %tobool46 = icmp ne i32 %and45, 0, !dbg !7978
  br i1 %tobool46, label %if.then47, label %if.end51, !dbg !7979

if.then47:                                        ; preds = %if.then38
  %29 = load %struct.ObjectInstanceRen*, %struct.ObjectInstanceRen** %obi, align 8, !dbg !7980
  %mat48 = getelementptr inbounds %struct.ObjectInstanceRen, %struct.ObjectInstanceRen* %29, i32 0, i32 8, !dbg !7981
  %arraydecay49 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat48, i64 0, i64 0, !dbg !7980
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !7982
  call void @mul_m4_v3([4 x float]* %arraydecay49, float* %arraydecay50), !dbg !7983
  br label %if.end51, !dbg !7983

if.end51:                                         ; preds = %if.then47, %if.then38
  %30 = load float*, float** %p.addr, align 8, !dbg !7984
  %31 = load float*, float** %n.addr, align 8, !dbg !7986
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %v1, i64 0, i64 0, !dbg !7987
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %v3, i64 0, i64 0, !dbg !7988
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %v4, i64 0, i64 0, !dbg !7989
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !7990
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !7991
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !7992
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !7993
  %call59 = call zeroext i8 @form_factor_visible_quad(float* %30, float* %31, float* %arraydecay52, float* %arraydecay53, float* %arraydecay54, float* %arraydecay55, float* %arraydecay56, float* %arraydecay57, float* %arraydecay58), !dbg !7994
  %tobool60 = icmp ne i8 %call59, 0, !dbg !7994
  br i1 %tobool60, label %if.then61, label %if.end68, !dbg !7995

if.then61:                                        ; preds = %if.end51
  %32 = load float*, float** %p.addr, align 8, !dbg !7996
  %33 = load float*, float** %n.addr, align 8, !dbg !7997
  %arraydecay62 = getelementptr inbounds [3 x float], [3 x float]* %q0, i64 0, i64 0, !dbg !7998
  %arraydecay63 = getelementptr inbounds [3 x float], [3 x float]* %q1, i64 0, i64 0, !dbg !7999
  %arraydecay64 = getelementptr inbounds [3 x float], [3 x float]* %q2, i64 0, i64 0, !dbg !8000
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %q3, i64 0, i64 0, !dbg !8001
  %call66 = call float @form_factor_quad(float* %32, float* %33, float* %arraydecay62, float* %arraydecay63, float* %arraydecay64, float* %arraydecay65), !dbg !8002
  %34 = load float, float* %contrib, align 4, !dbg !8003
  %add67 = fadd float %34, %call66, !dbg !8003
  store float %add67, float* %contrib, align 4, !dbg !8003
  br label %if.end68, !dbg !8004

if.end68:                                         ; preds = %if.then61, %if.end51
  br label %if.end69, !dbg !8005

if.end69:                                         ; preds = %if.end68, %if.end35
  %35 = load float, float* %contrib, align 4, !dbg !8006
  ret float %35, !dbg !8007
}

; Function Attrs: noinline nounwind uwtable
define internal float @sh_eval(float* %sh, float* %v) #0 !dbg !2 {
entry:
  %sh.addr = alloca float*, align 8
  %v.addr = alloca float*, align 8
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca float, align 4
  %sum = alloca float, align 4
  store float* %sh, float** %sh.addr, align 8
  call void @llvm.dbg.declare(metadata float** %sh.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8010, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.declare(metadata float* %x, metadata !8012, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.declare(metadata float* %y, metadata !8014, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.declare(metadata float* %z, metadata !8016, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.declare(metadata float* %sum, metadata !8018, metadata !DIExpression()), !dbg !8019
  %0 = load float*, float** %v.addr, align 8, !dbg !8020
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8020
  %1 = load float, float* %arrayidx, align 4, !dbg !8020
  store float %1, float* %x, align 4, !dbg !8021
  %2 = load float*, float** %v.addr, align 8, !dbg !8022
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !8022
  %3 = load float, float* %arrayidx1, align 4, !dbg !8022
  store float %3, float* %y, align 4, !dbg !8023
  %4 = load float*, float** %v.addr, align 8, !dbg !8024
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !8024
  %5 = load float, float* %arrayidx2, align 4, !dbg !8024
  store float %5, float* %z, align 4, !dbg !8025
  %6 = load float*, float** %sh.addr, align 8, !dbg !8026
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 8, !dbg !8026
  %7 = load float, float* %arrayidx3, align 4, !dbg !8026
  %mul = fmul float 0x3FDB7570C0000000, %7, !dbg !8027
  %8 = load float, float* %x, align 4, !dbg !8028
  %9 = load float, float* %x, align 4, !dbg !8029
  %mul4 = fmul float %8, %9, !dbg !8030
  %10 = load float, float* %y, align 4, !dbg !8031
  %11 = load float, float* %y, align 4, !dbg !8032
  %mul5 = fmul float %10, %11, !dbg !8033
  %sub = fsub float %mul4, %mul5, !dbg !8034
  %mul6 = fmul float %mul, %sub, !dbg !8035
  store float %mul6, float* %sum, align 4, !dbg !8036
  %12 = load float*, float** %sh.addr, align 8, !dbg !8037
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 6, !dbg !8037
  %13 = load float, float* %arrayidx7, align 4, !dbg !8037
  %mul8 = fmul float 0x3FE7C7AE20000000, %13, !dbg !8038
  %14 = load float, float* %z, align 4, !dbg !8039
  %mul9 = fmul float %mul8, %14, !dbg !8040
  %15 = load float, float* %z, align 4, !dbg !8041
  %mul10 = fmul float %mul9, %15, !dbg !8042
  %16 = load float, float* %sum, align 4, !dbg !8043
  %add = fadd float %16, %mul10, !dbg !8043
  store float %add, float* %sum, align 4, !dbg !8043
  %17 = load float*, float** %sh.addr, align 8, !dbg !8044
  %arrayidx11 = getelementptr inbounds float, float* %17, i64 0, !dbg !8044
  %18 = load float, float* %arrayidx11, align 4, !dbg !8044
  %mul12 = fmul float 0x3FEC5BF8C0000000, %18, !dbg !8045
  %19 = load float, float* %sum, align 4, !dbg !8046
  %add13 = fadd float %19, %mul12, !dbg !8046
  store float %add13, float* %sum, align 4, !dbg !8046
  %20 = load float*, float** %sh.addr, align 8, !dbg !8047
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 6, !dbg !8047
  %21 = load float, float* %arrayidx14, align 4, !dbg !8047
  %mul15 = fmul float 0xBFCFB4E540000000, %21, !dbg !8048
  %22 = load float, float* %sum, align 4, !dbg !8049
  %add16 = fadd float %22, %mul15, !dbg !8049
  store float %add16, float* %sum, align 4, !dbg !8049
  %23 = load float*, float** %sh.addr, align 8, !dbg !8050
  %arrayidx17 = getelementptr inbounds float, float* %23, i64 4, !dbg !8050
  %24 = load float, float* %arrayidx17, align 4, !dbg !8050
  %25 = load float, float* %x, align 4, !dbg !8051
  %mul18 = fmul float %24, %25, !dbg !8052
  %26 = load float, float* %y, align 4, !dbg !8053
  %mul19 = fmul float %mul18, %26, !dbg !8054
  %27 = load float*, float** %sh.addr, align 8, !dbg !8055
  %arrayidx20 = getelementptr inbounds float, float* %27, i64 7, !dbg !8055
  %28 = load float, float* %arrayidx20, align 4, !dbg !8055
  %29 = load float, float* %x, align 4, !dbg !8056
  %mul21 = fmul float %28, %29, !dbg !8057
  %30 = load float, float* %z, align 4, !dbg !8058
  %mul22 = fmul float %mul21, %30, !dbg !8059
  %add23 = fadd float %mul19, %mul22, !dbg !8060
  %31 = load float*, float** %sh.addr, align 8, !dbg !8061
  %arrayidx24 = getelementptr inbounds float, float* %31, i64 5, !dbg !8061
  %32 = load float, float* %arrayidx24, align 4, !dbg !8061
  %33 = load float, float* %y, align 4, !dbg !8062
  %mul25 = fmul float %32, %33, !dbg !8063
  %34 = load float, float* %z, align 4, !dbg !8064
  %mul26 = fmul float %mul25, %34, !dbg !8065
  %add27 = fadd float %add23, %mul26, !dbg !8066
  %mul28 = fmul float 0x3FEB7570C0000000, %add27, !dbg !8067
  %35 = load float, float* %sum, align 4, !dbg !8068
  %add29 = fadd float %35, %mul28, !dbg !8068
  store float %add29, float* %sum, align 4, !dbg !8068
  %36 = load float*, float** %sh.addr, align 8, !dbg !8069
  %arrayidx30 = getelementptr inbounds float, float* %36, i64 3, !dbg !8069
  %37 = load float, float* %arrayidx30, align 4, !dbg !8069
  %38 = load float, float* %x, align 4, !dbg !8070
  %mul31 = fmul float %37, %38, !dbg !8071
  %39 = load float*, float** %sh.addr, align 8, !dbg !8072
  %arrayidx32 = getelementptr inbounds float, float* %39, i64 1, !dbg !8072
  %40 = load float, float* %arrayidx32, align 4, !dbg !8072
  %41 = load float, float* %y, align 4, !dbg !8073
  %mul33 = fmul float %40, %41, !dbg !8074
  %add34 = fadd float %mul31, %mul33, !dbg !8075
  %42 = load float*, float** %sh.addr, align 8, !dbg !8076
  %arrayidx35 = getelementptr inbounds float, float* %42, i64 2, !dbg !8076
  %43 = load float, float* %arrayidx35, align 4, !dbg !8076
  %44 = load float, float* %z, align 4, !dbg !8077
  %mul36 = fmul float %43, %44, !dbg !8078
  %add37 = fadd float %add34, %mul36, !dbg !8079
  %mul38 = fmul float 0x3FF05F8D20000000, %add37, !dbg !8080
  %45 = load float, float* %sum, align 4, !dbg !8081
  %add39 = fadd float %45, %mul38, !dbg !8081
  store float %add39, float* %sum, align 4, !dbg !8081
  %46 = load float, float* %sum, align 4, !dbg !8082
  ret float %46, !dbg !8083
}

declare dso_local zeroext i8 @form_factor_visible_quad(float*, float*, float*, float*, float*, float*, float*, float*, float*) #3

declare dso_local float @form_factor_quad(float*, float*, float*, float*, float*, float*) #3

declare dso_local float @normal_quad_v3(float*, float*, float*, float*, float*) #3

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #3

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #3

declare dso_local i32* @RE_strandren_get_face(%struct.ObjectRen*, %struct.StrandRen*, i32) #3

declare dso_local void @interp_weights_face_v3(float*, float*, float*, float*, float*, float*) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.OcclusionCacheSample* @find_occ_sample(%struct.OcclusionCache* %cache, i32 %x, i32 %y) #0 !dbg !8084 {
entry:
  %retval = alloca %struct.OcclusionCacheSample*, align 8
  %cache.addr = alloca %struct.OcclusionCache*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.OcclusionCache* %cache, %struct.OcclusionCache** %cache.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.OcclusionCache** %cache.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8089, metadata !DIExpression()), !dbg !8090
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !8091, metadata !DIExpression()), !dbg !8092
  %0 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8093
  %x1 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %0, i32 0, i32 1, !dbg !8094
  %1 = load i32, i32* %x1, align 8, !dbg !8094
  %2 = load i32, i32* %x.addr, align 4, !dbg !8095
  %sub = sub nsw i32 %2, %1, !dbg !8095
  store i32 %sub, i32* %x.addr, align 4, !dbg !8095
  %3 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8096
  %y2 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %3, i32 0, i32 2, !dbg !8097
  %4 = load i32, i32* %y2, align 4, !dbg !8097
  %5 = load i32, i32* %y.addr, align 4, !dbg !8098
  %sub3 = sub nsw i32 %5, %4, !dbg !8098
  store i32 %sub3, i32* %y.addr, align 4, !dbg !8098
  %6 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8099
  %step = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %6, i32 0, i32 5, !dbg !8100
  %7 = load i32, i32* %step, align 8, !dbg !8100
  %8 = load i32, i32* %x.addr, align 4, !dbg !8101
  %div = sdiv i32 %8, %7, !dbg !8101
  store i32 %div, i32* %x.addr, align 4, !dbg !8101
  %9 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8102
  %step4 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %9, i32 0, i32 5, !dbg !8103
  %10 = load i32, i32* %step4, align 8, !dbg !8103
  %11 = load i32, i32* %y.addr, align 4, !dbg !8104
  %div5 = sdiv i32 %11, %10, !dbg !8104
  store i32 %div5, i32* %y.addr, align 4, !dbg !8104
  %12 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8105
  %step6 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %12, i32 0, i32 5, !dbg !8106
  %13 = load i32, i32* %step6, align 8, !dbg !8106
  %14 = load i32, i32* %x.addr, align 4, !dbg !8107
  %mul = mul nsw i32 %14, %13, !dbg !8107
  store i32 %mul, i32* %x.addr, align 4, !dbg !8107
  %15 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8108
  %step7 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %15, i32 0, i32 5, !dbg !8109
  %16 = load i32, i32* %step7, align 8, !dbg !8109
  %17 = load i32, i32* %y.addr, align 4, !dbg !8110
  %mul8 = mul nsw i32 %17, %16, !dbg !8110
  store i32 %mul8, i32* %y.addr, align 4, !dbg !8110
  %18 = load i32, i32* %x.addr, align 4, !dbg !8111
  %cmp = icmp slt i32 %18, 0, !dbg !8113
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8114

lor.lhs.false:                                    ; preds = %entry
  %19 = load i32, i32* %x.addr, align 4, !dbg !8115
  %20 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8116
  %w = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %20, i32 0, i32 3, !dbg !8117
  %21 = load i32, i32* %w, align 8, !dbg !8117
  %cmp9 = icmp sge i32 %19, %21, !dbg !8118
  br i1 %cmp9, label %if.then, label %lor.lhs.false10, !dbg !8119

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %22 = load i32, i32* %y.addr, align 4, !dbg !8120
  %cmp11 = icmp slt i32 %22, 0, !dbg !8121
  br i1 %cmp11, label %if.then, label %lor.lhs.false12, !dbg !8122

lor.lhs.false12:                                  ; preds = %lor.lhs.false10
  %23 = load i32, i32* %y.addr, align 4, !dbg !8123
  %24 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8124
  %h = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %24, i32 0, i32 4, !dbg !8125
  %25 = load i32, i32* %h, align 4, !dbg !8125
  %cmp13 = icmp sge i32 %23, %25, !dbg !8126
  br i1 %cmp13, label %if.then, label %if.else, !dbg !8127

if.then:                                          ; preds = %lor.lhs.false12, %lor.lhs.false10, %lor.lhs.false, %entry
  store %struct.OcclusionCacheSample* null, %struct.OcclusionCacheSample** %retval, align 8, !dbg !8128
  br label %return, !dbg !8128

if.else:                                          ; preds = %lor.lhs.false12
  %26 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8129
  %sample = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %26, i32 0, i32 0, !dbg !8130
  %27 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %sample, align 8, !dbg !8130
  %28 = load i32, i32* %y.addr, align 4, !dbg !8131
  %29 = load %struct.OcclusionCache*, %struct.OcclusionCache** %cache.addr, align 8, !dbg !8132
  %w14 = getelementptr inbounds %struct.OcclusionCache, %struct.OcclusionCache* %29, i32 0, i32 3, !dbg !8133
  %30 = load i32, i32* %w14, align 8, !dbg !8133
  %mul15 = mul nsw i32 %28, %30, !dbg !8134
  %31 = load i32, i32* %x.addr, align 4, !dbg !8135
  %add = add nsw i32 %mul15, %31, !dbg !8136
  %idxprom = sext i32 %add to i64, !dbg !8129
  %arrayidx = getelementptr inbounds %struct.OcclusionCacheSample, %struct.OcclusionCacheSample* %27, i64 %idxprom, !dbg !8129
  store %struct.OcclusionCacheSample* %arrayidx, %struct.OcclusionCacheSample** %retval, align 8, !dbg !8137
  br label %return, !dbg !8137

return:                                           ; preds = %if.else, %if.then
  %32 = load %struct.OcclusionCacheSample*, %struct.OcclusionCacheSample** %retval, align 8, !dbg !8138
  ret %struct.OcclusionCacheSample* %32, !dbg !8138
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_ffff(float %a, float %b, float %c, float %d) #0 !dbg !8139 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  %d.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  %0 = load float, float* %a.addr, align 4, !dbg !8150
  %1 = load float, float* %b.addr, align 4, !dbg !8151
  %2 = load float, float* %c.addr, align 4, !dbg !8152
  %call = call float @min_fff(float %0, float %1, float %2), !dbg !8153
  %3 = load float, float* %d.addr, align 4, !dbg !8154
  %call1 = call float @min_ff(float %call, float %3), !dbg !8155
  ret float %call1, !dbg !8156
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ffff(float %a, float %b, float %c, float %d) #0 !dbg !8157 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  %d.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8158, metadata !DIExpression()), !dbg !8159
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !8162, metadata !DIExpression()), !dbg !8163
  store float %d, float* %d.addr, align 4
  call void @llvm.dbg.declare(metadata float* %d.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  %0 = load float, float* %a.addr, align 4, !dbg !8166
  %1 = load float, float* %b.addr, align 4, !dbg !8167
  %2 = load float, float* %c.addr, align 4, !dbg !8168
  %call = call float @max_fff(float %0, float %1, float %2), !dbg !8169
  %3 = load float, float* %d.addr, align 4, !dbg !8170
  %call1 = call float @max_ff(float %call, float %3), !dbg !8171
  ret float %call1, !dbg !8172
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define internal float @min_ff(float %a, float %b) #0 !dbg !8173 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8174, metadata !DIExpression()), !dbg !8175
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8176, metadata !DIExpression()), !dbg !8177
  %0 = load float, float* %a.addr, align 4, !dbg !8178
  %1 = load float, float* %b.addr, align 4, !dbg !8179
  %cmp = fcmp olt float %0, %1, !dbg !8180
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8181

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8182
  br label %cond.end, !dbg !8181

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8183
  br label %cond.end, !dbg !8181

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8181
  ret float %cond, !dbg !8184
}

; Function Attrs: noinline nounwind uwtable
define internal float @min_fff(float %a, float %b, float %c) #0 !dbg !8185 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  %0 = load float, float* %a.addr, align 4, !dbg !8192
  %1 = load float, float* %b.addr, align 4, !dbg !8193
  %call = call float @min_ff(float %0, float %1), !dbg !8194
  %2 = load float, float* %c.addr, align 4, !dbg !8195
  %call1 = call float @min_ff(float %call, float %2), !dbg !8196
  ret float %call1, !dbg !8197
}

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3_v3(float* %r, float* %a) #0 !dbg !8198 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  %0 = load float*, float** %a.addr, align 8, !dbg !8203
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8203
  %1 = load float, float* %arrayidx, align 4, !dbg !8203
  %fneg = fneg float %1, !dbg !8204
  %2 = load float*, float** %r.addr, align 8, !dbg !8205
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8205
  store float %fneg, float* %arrayidx1, align 4, !dbg !8206
  %3 = load float*, float** %a.addr, align 8, !dbg !8207
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8207
  %4 = load float, float* %arrayidx2, align 4, !dbg !8207
  %fneg3 = fneg float %4, !dbg !8208
  %5 = load float*, float** %r.addr, align 8, !dbg !8209
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !8209
  store float %fneg3, float* %arrayidx4, align 4, !dbg !8210
  %6 = load float*, float** %a.addr, align 8, !dbg !8211
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !8211
  %7 = load float, float* %arrayidx5, align 4, !dbg !8211
  %fneg6 = fneg float %7, !dbg !8212
  %8 = load float*, float** %r.addr, align 8, !dbg !8213
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !8213
  store float %fneg6, float* %arrayidx7, align 4, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: nounwind
declare dso_local float @expf(float) #4

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!8}
!llvm.module.flags = !{!2793, !2794, !2795}
!llvm.ident = !{!2796}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "c1", scope: !2, file: !3, line: 299, type: !2785, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "sh_eval", scope: !3, file: !3, line: 295, type: !4, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3 = !DIFile(filename: "blender/source/blender/render/intern/source/occlusion.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7, !7}
!6 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!8 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !9, retainedTypes: !63, globals: !2782, splitDebugInlining: false, nameTableKind: None)
!9 = !{!10, !46}
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ScenePassType", file: !11, line: 213, baseType: !12, size: 32, elements: !13)
!11 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45}
!14 = !DIEnumerator(name: "SCE_PASS_COMBINED", value: 1)
!15 = !DIEnumerator(name: "SCE_PASS_Z", value: 2)
!16 = !DIEnumerator(name: "SCE_PASS_RGBA", value: 4)
!17 = !DIEnumerator(name: "SCE_PASS_DIFFUSE", value: 8)
!18 = !DIEnumerator(name: "SCE_PASS_SPEC", value: 16)
!19 = !DIEnumerator(name: "SCE_PASS_SHADOW", value: 32)
!20 = !DIEnumerator(name: "SCE_PASS_AO", value: 64)
!21 = !DIEnumerator(name: "SCE_PASS_REFLECT", value: 128)
!22 = !DIEnumerator(name: "SCE_PASS_NORMAL", value: 256)
!23 = !DIEnumerator(name: "SCE_PASS_VECTOR", value: 512)
!24 = !DIEnumerator(name: "SCE_PASS_REFRACT", value: 1024)
!25 = !DIEnumerator(name: "SCE_PASS_INDEXOB", value: 2048)
!26 = !DIEnumerator(name: "SCE_PASS_UV", value: 4096)
!27 = !DIEnumerator(name: "SCE_PASS_INDIRECT", value: 8192)
!28 = !DIEnumerator(name: "SCE_PASS_MIST", value: 16384)
!29 = !DIEnumerator(name: "SCE_PASS_RAYHITS", value: 32768)
!30 = !DIEnumerator(name: "SCE_PASS_EMIT", value: 65536)
!31 = !DIEnumerator(name: "SCE_PASS_ENVIRONMENT", value: 131072)
!32 = !DIEnumerator(name: "SCE_PASS_INDEXMA", value: 262144)
!33 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_DIRECT", value: 524288)
!34 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_INDIRECT", value: 1048576)
!35 = !DIEnumerator(name: "SCE_PASS_DIFFUSE_COLOR", value: 2097152)
!36 = !DIEnumerator(name: "SCE_PASS_GLOSSY_DIRECT", value: 4194304)
!37 = !DIEnumerator(name: "SCE_PASS_GLOSSY_INDIRECT", value: 8388608)
!38 = !DIEnumerator(name: "SCE_PASS_GLOSSY_COLOR", value: 16777216)
!39 = !DIEnumerator(name: "SCE_PASS_TRANSM_DIRECT", value: 33554432)
!40 = !DIEnumerator(name: "SCE_PASS_TRANSM_INDIRECT", value: 67108864)
!41 = !DIEnumerator(name: "SCE_PASS_TRANSM_COLOR", value: 134217728)
!42 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_DIRECT", value: 268435456)
!43 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_INDIRECT", value: 536870912)
!44 = !DIEnumerator(name: "SCE_PASS_SUBSURFACE_COLOR", value: 1073741824)
!45 = !DIEnumerator(name: "SCE_PASS_DEBUG", value: -2147483648)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !47, line: 394, baseType: !48, size: 32, elements: !49)
!47 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!48 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62}
!50 = !DIEnumerator(name: "OB_NEG_SCALE", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "OB_DUPLIFRAMES", value: 8, isUnsigned: true)
!52 = !DIEnumerator(name: "OB_DUPLIVERTS", value: 16, isUnsigned: true)
!53 = !DIEnumerator(name: "OB_DUPLIROT", value: 32, isUnsigned: true)
!54 = !DIEnumerator(name: "OB_DUPLINOSPEED", value: 64, isUnsigned: true)
!55 = !DIEnumerator(name: "OB_DUPLIGROUP", value: 256, isUnsigned: true)
!56 = !DIEnumerator(name: "OB_DUPLIFACES", value: 512, isUnsigned: true)
!57 = !DIEnumerator(name: "OB_DUPLIFACES_SCALE", value: 1024, isUnsigned: true)
!58 = !DIEnumerator(name: "OB_DUPLIPARTS", value: 2048, isUnsigned: true)
!59 = !DIEnumerator(name: "OB_RENDER_DUPLI", value: 4096, isUnsigned: true)
!60 = !DIEnumerator(name: "OB_NO_CONSTRAINTS", value: 8192, isUnsigned: true)
!61 = !DIEnumerator(name: "OB_NO_PSYS_UPDATE", value: 16384, isUnsigned: true)
!62 = !DIEnumerator(name: "OB_DUPLI", value: 2840, isUnsigned: true)
!63 = !{!64, !65, !80, !6, !173}
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!65 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixStr", file: !67, line: 54, baseType: !68)
!67 = !DIFile(filename: "blender/source/blender/render/intern/include/rendercore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PixStr", file: !67, line: 49, size: 256, elements: !69)
!69 = !{!70, !72, !73, !74, !75, !76, !78}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !68, file: !67, line: 50, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !68, file: !67, line: 51, baseType: !12, size: 32, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !68, file: !67, line: 51, baseType: !12, size: 32, offset: 96)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !68, file: !67, line: 51, baseType: !12, size: 32, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "maskz", scope: !68, file: !67, line: 51, baseType: !12, size: 32, offset: 160)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !68, file: !67, line: 52, baseType: !77, size: 16, offset: 192)
!77 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "shadfac", scope: !68, file: !67, line: 53, baseType: !79, size: 16, offset: 208)
!79 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "OcclusionBuildThread", file: !3, line: 136, baseType: !82)
!82 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OcclusionBuildThread", file: !3, line: 132, size: 256, elements: !83)
!83 = !{!84, !169, !170, !171, !172}
!84 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !82, file: !3, line: 133, baseType: !85, size: 64)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !86, size: 64)
!86 = !DIDerivedType(tag: DW_TAG_typedef, name: "OcclusionTree", file: !3, line: 120, baseType: !87)
!87 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OcclusionTree", file: !3, line: 96, size: 768, elements: !88)
!88 = !{!89, !94, !99, !106, !107, !108, !132, !137, !138, !139, !140, !141, !142, !143, !144}
!89 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !87, file: !3, line: 97, baseType: !90, size: 64)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "MemArena", file: !92, line: 53, baseType: !93)
!92 = !DIFile(filename: "blender/source/blender/blenlib/BLI_memarena.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!93 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !92, line: 52, flags: DIFlagFwdDecl)
!94 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !87, file: !3, line: 99, baseType: !95, size: 64, offset: 64)
!95 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!96 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 96, elements: !97)
!97 = !{!98}
!98 = !DISubrange(count: 3)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !87, file: !3, line: 101, baseType: !100, size: 64, offset: 128)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_typedef, name: "OccFace", file: !3, line: 82, baseType: !102)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OccFace", file: !3, line: 79, size: 64, elements: !103)
!103 = !{!104, !105}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !102, file: !3, line: 80, baseType: !12, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !102, file: !3, line: 81, baseType: !12, size: 32, offset: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "occlusion", scope: !87, file: !3, line: 102, baseType: !7, size: 64, offset: 192)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !87, file: !3, line: 103, baseType: !95, size: 64, offset: 256)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !87, file: !3, line: 105, baseType: !109, size: 64, offset: 320)
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 64)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "OccNode", file: !3, line: 94, baseType: !111)
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OccNode", file: !3, line: 84, size: 1152, elements: !112)
!112 = !{!113, !114, !115, !119, !120, !121, !122, !123}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !111, file: !3, line: 85, baseType: !96, size: 96)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !111, file: !3, line: 85, baseType: !6, size: 32, offset: 96)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "sh", scope: !111, file: !3, line: 86, baseType: !116, size: 288, offset: 128)
!116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 288, elements: !117)
!117 = !{!118}
!118 = !DISubrange(count: 9)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "dco", scope: !111, file: !3, line: 86, baseType: !6, size: 32, offset: 416)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "occlusion", scope: !111, file: !3, line: 87, baseType: !6, size: 32, offset: 448)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !111, file: !3, line: 87, baseType: !96, size: 96, offset: 480)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "childflag", scope: !111, file: !3, line: 88, baseType: !12, size: 32, offset: 576)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !111, file: !3, line: 93, baseType: !124, size: 512, offset: 640)
!124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 512, elements: !130)
!125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !111, file: !3, line: 89, size: 64, elements: !126)
!126 = !{!127, !128}
!127 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !125, file: !3, line: 91, baseType: !12, size: 32)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !125, file: !3, line: 92, baseType: !129, size: 64)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!130 = !{!131}
!131 = !DISubrange(count: 8)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !87, file: !3, line: 107, baseType: !133, size: 64, offset: 384)
!133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !134, size: 64, elements: !135)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64)
!135 = !{!136}
!136 = !DISubrange(count: 1)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !87, file: !3, line: 108, baseType: !12, size: 32, offset: 448)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !87, file: !3, line: 110, baseType: !12, size: 32, offset: 480)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !87, file: !3, line: 112, baseType: !6, size: 32, offset: 512)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "distfac", scope: !87, file: !3, line: 113, baseType: !6, size: 32, offset: 544)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "dothreadedbuild", scope: !87, file: !3, line: 115, baseType: !12, size: 32, offset: 576)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "totbuildthread", scope: !87, file: !3, line: 116, baseType: !12, size: 32, offset: 608)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "doindirect", scope: !87, file: !3, line: 117, baseType: !12, size: 32, offset: 640)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !87, file: !3, line: 119, baseType: !145, size: 64, offset: 704)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "OcclusionCache", file: !3, line: 77, baseType: !147)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OcclusionCache", file: !3, line: 74, size: 256, elements: !148)
!148 = !{!149, !164, !165, !166, !167, !168}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !147, file: !3, line: 75, baseType: !150, size: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "OcclusionCacheSample", file: !3, line: 72, baseType: !152)
!152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OcclusionCacheSample", file: !3, line: 69, size: 640, elements: !153)
!153 = !{!154, !155, !156, !157, !158, !159, !160, !161, !162, !163}
!154 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !152, file: !3, line: 70, baseType: !96, size: 96)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !152, file: !3, line: 70, baseType: !96, size: 96, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !152, file: !3, line: 70, baseType: !96, size: 96, offset: 192)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !152, file: !3, line: 70, baseType: !96, size: 96, offset: 288)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !152, file: !3, line: 70, baseType: !96, size: 96, offset: 384)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !152, file: !3, line: 70, baseType: !6, size: 32, offset: 480)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "dist2", scope: !152, file: !3, line: 70, baseType: !6, size: 32, offset: 512)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !152, file: !3, line: 71, baseType: !12, size: 32, offset: 544)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !152, file: !3, line: 71, baseType: !12, size: 32, offset: 576)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "filled", scope: !152, file: !3, line: 71, baseType: !12, size: 32, offset: 608)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !147, file: !3, line: 76, baseType: !12, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !147, file: !3, line: 76, baseType: !12, size: 32, offset: 96)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !147, file: !3, line: 76, baseType: !12, size: 32, offset: 128)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !147, file: !3, line: 76, baseType: !12, size: 32, offset: 160)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !147, file: !3, line: 76, baseType: !12, size: 32, offset: 192)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !82, file: !3, line: 134, baseType: !12, size: 32, offset: 64)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !82, file: !3, line: 134, baseType: !12, size: 32, offset: 96)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !82, file: !3, line: 134, baseType: !12, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !82, file: !3, line: 135, baseType: !109, size: 64, offset: 192)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "OcclusionThread", file: !3, line: 130, baseType: !175)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OcclusionThread", file: !3, line: 122, size: 448, elements: !176)
!176 = !{!177, !2773, !2776, !2777, !2778, !2779, !2780, !2781}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "re", scope: !175, file: !3, line: 123, baseType: !178, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 64)
!179 = !DIDerivedType(tag: DW_TAG_typedef, name: "Render", file: !180, line: 58, baseType: !181)
!180 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_pipeline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Render", file: !182, line: 126, size: 49920, elements: !183)
!182 = !DIFile(filename: "blender/source/blender/render/intern/include/render_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!183 = !{!184, !186, !187, !192, !193, !194, !195, !196, !197, !199, !2294, !2295, !2296, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2342, !2345, !2346, !2347, !2349, !2408, !2411, !2413, !2415, !2416, !2417, !2418, !2419, !2422, !2425, !2428, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2480, !2481, !2482, !2483, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2709, !2713, !2714, !2715, !2716, !2721, !2722, !2726, !2727, !2757, !2758, !2759, !2760, !2764, !2765, !2766, !2767, !2768, !2771, !2772}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !181, file: !182, line: 128, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !181, file: !182, line: 128, baseType: !185, size: 64, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !181, file: !182, line: 129, baseType: !188, size: 592, offset: 128)
!188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 592, elements: !190)
!189 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!190 = !{!191}
!191 = !DISubrange(count: 74)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !181, file: !182, line: 130, baseType: !12, size: 32, offset: 736)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !181, file: !182, line: 133, baseType: !79, size: 16, offset: 768)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !181, file: !182, line: 133, baseType: !79, size: 16, offset: 784)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !181, file: !182, line: 133, baseType: !79, size: 16, offset: 800)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "result_ok", scope: !181, file: !182, line: 133, baseType: !79, size: 16, offset: 816)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "scene_color_manage", scope: !181, file: !182, line: 136, baseType: !198, size: 8, offset: 832)
!198 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !181, file: !182, line: 139, baseType: !200, size: 64, offset: 896)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderResult", file: !180, line: 148, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !180, line: 110, size: 1152, elements: !203)
!203 = !{!204, !206, !207, !208, !209, !210, !211, !213, !214, !215, !224, !225, !226, !233, !235, !2290, !2291, !2292, !2293}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !202, file: !180, line: 111, baseType: !205, size: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !202, file: !180, line: 111, baseType: !205, size: 64, offset: 64)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !202, file: !180, line: 114, baseType: !12, size: 32, offset: 128)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !202, file: !180, line: 114, baseType: !12, size: 32, offset: 160)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !202, file: !180, line: 115, baseType: !79, size: 16, offset: 192)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "sample_nr", scope: !202, file: !180, line: 115, baseType: !79, size: 16, offset: 208)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "rect32", scope: !202, file: !180, line: 118, baseType: !212, size: 64, offset: 256)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !202, file: !180, line: 120, baseType: !7, size: 64, offset: 320)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !202, file: !180, line: 122, baseType: !7, size: 64, offset: 384)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "tilerect", scope: !202, file: !180, line: 125, baseType: !216, size: 128, offset: 448)
!216 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !217, line: 89, baseType: !218)
!217 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !217, line: 86, size: 128, elements: !219)
!219 = !{!220, !221, !222, !223}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !218, file: !217, line: 87, baseType: !12, size: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !218, file: !217, line: 87, baseType: !12, size: 32, offset: 32)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !218, file: !217, line: 88, baseType: !12, size: 32, offset: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !218, file: !217, line: 88, baseType: !12, size: 32, offset: 96)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !202, file: !180, line: 127, baseType: !12, size: 32, offset: 576)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !202, file: !180, line: 127, baseType: !12, size: 32, offset: 608)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !202, file: !180, line: 130, baseType: !227, size: 128, offset: 640)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !228, line: 71, baseType: !229)
!228 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !228, line: 69, size: 128, elements: !230)
!230 = !{!231, !232}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !229, file: !228, line: 70, baseType: !64, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !229, file: !228, line: 70, baseType: !64, size: 64, offset: 64)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "renrect", scope: !202, file: !180, line: 133, baseType: !234, size: 128, offset: 768)
!234 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !216)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "renlay", scope: !202, file: !180, line: 134, baseType: !236, size: 64, offset: 896)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !238)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderLayer", file: !180, line: 108, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderLayer", file: !180, line: 85, size: 1600, elements: !240)
!240 = !{!241, !243, !244, !245, !246, !247, !248, !249, !250, !251, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !239, file: !180, line: 86, baseType: !242, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !239, file: !180, line: 86, baseType: !242, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !239, file: !180, line: 89, baseType: !188, size: 592, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !239, file: !180, line: 90, baseType: !48, size: 32, offset: 736)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "lay_zmask", scope: !239, file: !180, line: 90, baseType: !48, size: 32, offset: 768)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lay_exclude", scope: !239, file: !180, line: 90, baseType: !48, size: 32, offset: 800)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !239, file: !180, line: 91, baseType: !12, size: 32, offset: 832)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !239, file: !180, line: 91, baseType: !12, size: 32, offset: 864)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "pass_xor", scope: !239, file: !180, line: 91, baseType: !12, size: 32, offset: 896)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !239, file: !180, line: 93, baseType: !252, size: 64, offset: 960)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !254, line: 93, size: 7552, elements: !255)
!254 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!255 = !{!256, !318, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !367, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !436, !437, !438, !439, !440, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2280}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !253, file: !254, line: 94, baseType: !257, size: 960)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !258, line: 130, baseType: !259)
!258 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !258, line: 117, size: 960, elements: !260)
!260 = !{!261, !262, !263, !265, !284, !288, !289, !290, !291, !292}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !259, file: !258, line: 118, baseType: !64, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !259, file: !258, line: 118, baseType: !64, size: 64, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !259, file: !258, line: 119, baseType: !264, size: 64, offset: 128)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !259, file: !258, line: 120, baseType: !266, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !258, line: 136, size: 17600, elements: !268)
!268 = !{!269, !270, !272, !275, !279, !280, !281}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !267, file: !258, line: 137, baseType: !257, size: 960)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !267, file: !258, line: 138, baseType: !271, size: 64, offset: 960)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !267, file: !258, line: 139, baseType: !273, size: 64, offset: 1024)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !258, line: 43, flags: DIFlagFwdDecl)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !267, file: !258, line: 140, baseType: !276, size: 8192, offset: 1088)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 8192, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 1024)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !267, file: !258, line: 141, baseType: !276, size: 8192, offset: 9280)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !267, file: !258, line: 148, baseType: !266, size: 64, offset: 17472)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !267, file: !258, line: 150, baseType: !282, size: 64, offset: 17536)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !258, line: 45, flags: DIFlagFwdDecl)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !259, file: !258, line: 121, baseType: !285, size: 528, offset: 256)
!285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 528, elements: !286)
!286 = !{!287}
!287 = !DISubrange(count: 66)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !259, file: !258, line: 126, baseType: !79, size: 16, offset: 784)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !259, file: !258, line: 127, baseType: !12, size: 32, offset: 800)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !259, file: !258, line: 128, baseType: !12, size: 32, offset: 832)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !259, file: !258, line: 128, baseType: !12, size: 32, offset: 864)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !259, file: !258, line: 129, baseType: !293, size: 64, offset: 896)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !258, line: 75, baseType: !295)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !258, line: 62, size: 1024, elements: !296)
!296 = !{!297, !299, !300, !301, !302, !303, !307, !308, !316, !317}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !295, file: !258, line: 63, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !295, file: !258, line: 63, baseType: !298, size: 64, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !295, file: !258, line: 64, baseType: !189, size: 8, offset: 128)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !295, file: !258, line: 64, baseType: !189, size: 8, offset: 136)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !295, file: !258, line: 65, baseType: !79, size: 16, offset: 144)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !295, file: !258, line: 66, baseType: !304, size: 512, offset: 160)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !295, file: !258, line: 67, baseType: !12, size: 32, offset: 672)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !295, file: !258, line: 69, baseType: !309, size: 256, offset: 704)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !258, line: 60, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !258, line: 48, size: 256, elements: !311)
!311 = !{!312, !313, !314, !315}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !310, file: !258, line: 49, baseType: !64, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !310, file: !258, line: 58, baseType: !227, size: 128, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !310, file: !258, line: 59, baseType: !12, size: 32, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !310, file: !258, line: 59, baseType: !12, size: 32, offset: 224)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !295, file: !258, line: 70, baseType: !12, size: 32, offset: 960)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !295, file: !258, line: 74, baseType: !12, size: 32, offset: 992)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !253, file: !254, line: 95, baseType: !319, size: 64, offset: 960)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !254, line: 48, flags: DIFlagFwdDecl)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !253, file: !254, line: 97, baseType: !79, size: 16, offset: 1024)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !253, file: !254, line: 97, baseType: !79, size: 16, offset: 1040)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !253, file: !254, line: 99, baseType: !6, size: 32, offset: 1056)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !253, file: !254, line: 99, baseType: !6, size: 32, offset: 1088)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !253, file: !254, line: 99, baseType: !6, size: 32, offset: 1120)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !253, file: !254, line: 100, baseType: !6, size: 32, offset: 1152)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !253, file: !254, line: 100, baseType: !6, size: 32, offset: 1184)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !253, file: !254, line: 100, baseType: !6, size: 32, offset: 1216)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !253, file: !254, line: 101, baseType: !6, size: 32, offset: 1248)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !253, file: !254, line: 101, baseType: !6, size: 32, offset: 1280)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !253, file: !254, line: 101, baseType: !6, size: 32, offset: 1312)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !253, file: !254, line: 102, baseType: !6, size: 32, offset: 1344)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !253, file: !254, line: 102, baseType: !6, size: 32, offset: 1376)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !253, file: !254, line: 102, baseType: !6, size: 32, offset: 1408)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !253, file: !254, line: 103, baseType: !6, size: 32, offset: 1440)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !253, file: !254, line: 103, baseType: !6, size: 32, offset: 1472)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !253, file: !254, line: 103, baseType: !6, size: 32, offset: 1504)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !253, file: !254, line: 103, baseType: !6, size: 32, offset: 1536)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !253, file: !254, line: 103, baseType: !6, size: 32, offset: 1568)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !253, file: !254, line: 104, baseType: !6, size: 32, offset: 1600)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !253, file: !254, line: 104, baseType: !6, size: 32, offset: 1632)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !253, file: !254, line: 104, baseType: !6, size: 32, offset: 1664)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !253, file: !254, line: 104, baseType: !6, size: 32, offset: 1696)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !253, file: !254, line: 104, baseType: !6, size: 32, offset: 1728)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !253, file: !254, line: 105, baseType: !6, size: 32, offset: 1760)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !253, file: !254, line: 108, baseType: !347, size: 704, offset: 1792)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !254, line: 53, size: 704, elements: !348)
!348 = !{!349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !347, file: !254, line: 54, baseType: !6, size: 32)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !347, file: !254, line: 55, baseType: !6, size: 32, offset: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !347, file: !254, line: 56, baseType: !6, size: 32, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !347, file: !254, line: 57, baseType: !6, size: 32, offset: 96)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !347, file: !254, line: 59, baseType: !96, size: 96, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !347, file: !254, line: 60, baseType: !96, size: 96, offset: 224)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !347, file: !254, line: 61, baseType: !96, size: 96, offset: 320)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !347, file: !254, line: 63, baseType: !6, size: 32, offset: 416)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !347, file: !254, line: 64, baseType: !6, size: 32, offset: 448)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !347, file: !254, line: 65, baseType: !6, size: 32, offset: 480)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !347, file: !254, line: 67, baseType: !79, size: 16, offset: 512)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !347, file: !254, line: 68, baseType: !79, size: 16, offset: 528)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !347, file: !254, line: 69, baseType: !79, size: 16, offset: 544)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !347, file: !254, line: 70, baseType: !79, size: 16, offset: 560)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !347, file: !254, line: 72, baseType: !6, size: 32, offset: 576)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !347, file: !254, line: 73, baseType: !6, size: 32, offset: 608)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !347, file: !254, line: 74, baseType: !6, size: 32, offset: 640)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !347, file: !254, line: 75, baseType: !6, size: 32, offset: 672)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !253, file: !254, line: 109, baseType: !368, size: 128, offset: 2496)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !254, line: 79, size: 128, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !368, file: !254, line: 80, baseType: !12, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !368, file: !254, line: 81, baseType: !12, size: 32, offset: 32)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !368, file: !254, line: 82, baseType: !12, size: 32, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !368, file: !254, line: 83, baseType: !12, size: 32, offset: 96)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !253, file: !254, line: 111, baseType: !6, size: 32, offset: 2624)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !253, file: !254, line: 111, baseType: !6, size: 32, offset: 2656)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !253, file: !254, line: 112, baseType: !6, size: 32, offset: 2688)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !253, file: !254, line: 112, baseType: !6, size: 32, offset: 2720)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !253, file: !254, line: 113, baseType: !6, size: 32, offset: 2752)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !253, file: !254, line: 114, baseType: !6, size: 32, offset: 2784)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !253, file: !254, line: 114, baseType: !6, size: 32, offset: 2816)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !253, file: !254, line: 115, baseType: !79, size: 16, offset: 2848)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !253, file: !254, line: 115, baseType: !79, size: 16, offset: 2864)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !253, file: !254, line: 116, baseType: !79, size: 16, offset: 2880)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !253, file: !254, line: 117, baseType: !189, size: 8, offset: 2896)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !253, file: !254, line: 117, baseType: !189, size: 8, offset: 2904)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !253, file: !254, line: 119, baseType: !6, size: 32, offset: 2912)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !253, file: !254, line: 119, baseType: !6, size: 32, offset: 2944)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !253, file: !254, line: 120, baseType: !79, size: 16, offset: 2976)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !253, file: !254, line: 120, baseType: !79, size: 16, offset: 2992)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !253, file: !254, line: 121, baseType: !6, size: 32, offset: 3008)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !253, file: !254, line: 121, baseType: !6, size: 32, offset: 3040)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !253, file: !254, line: 122, baseType: !6, size: 32, offset: 3072)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !253, file: !254, line: 123, baseType: !6, size: 32, offset: 3104)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !253, file: !254, line: 124, baseType: !79, size: 16, offset: 3136)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !253, file: !254, line: 125, baseType: !79, size: 16, offset: 3152)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !253, file: !254, line: 127, baseType: !12, size: 32, offset: 3168)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !253, file: !254, line: 127, baseType: !12, size: 32, offset: 3200)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !253, file: !254, line: 128, baseType: !12, size: 32, offset: 3232)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !253, file: !254, line: 128, baseType: !12, size: 32, offset: 3264)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !253, file: !254, line: 129, baseType: !79, size: 16, offset: 3296)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !253, file: !254, line: 129, baseType: !79, size: 16, offset: 3312)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !253, file: !254, line: 129, baseType: !79, size: 16, offset: 3328)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !253, file: !254, line: 129, baseType: !79, size: 16, offset: 3344)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !253, file: !254, line: 130, baseType: !6, size: 32, offset: 3360)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !253, file: !254, line: 130, baseType: !6, size: 32, offset: 3392)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !253, file: !254, line: 130, baseType: !6, size: 32, offset: 3424)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !253, file: !254, line: 130, baseType: !6, size: 32, offset: 3456)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !253, file: !254, line: 131, baseType: !6, size: 32, offset: 3488)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !253, file: !254, line: 131, baseType: !6, size: 32, offset: 3520)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !253, file: !254, line: 131, baseType: !6, size: 32, offset: 3552)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !253, file: !254, line: 131, baseType: !6, size: 32, offset: 3584)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !253, file: !254, line: 132, baseType: !6, size: 32, offset: 3616)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !253, file: !254, line: 132, baseType: !6, size: 32, offset: 3648)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !253, file: !254, line: 133, baseType: !304, size: 512, offset: 3680)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !253, file: !254, line: 135, baseType: !6, size: 32, offset: 4192)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !253, file: !254, line: 136, baseType: !6, size: 32, offset: 4224)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !253, file: !254, line: 137, baseType: !6, size: 32, offset: 4256)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !253, file: !254, line: 138, baseType: !12, size: 32, offset: 4288)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !253, file: !254, line: 141, baseType: !189, size: 8, offset: 4320)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !253, file: !254, line: 141, baseType: !189, size: 8, offset: 4328)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !253, file: !254, line: 141, baseType: !189, size: 8, offset: 4336)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !253, file: !254, line: 141, baseType: !189, size: 8, offset: 4344)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !253, file: !254, line: 142, baseType: !79, size: 16, offset: 4352)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !253, file: !254, line: 142, baseType: !79, size: 16, offset: 4368)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !253, file: !254, line: 142, baseType: !79, size: 16, offset: 4384)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !253, file: !254, line: 145, baseType: !189, size: 8, offset: 4400)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !253, file: !254, line: 145, baseType: !189, size: 8, offset: 4408)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !253, file: !254, line: 148, baseType: !79, size: 16, offset: 4416)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !253, file: !254, line: 148, baseType: !79, size: 16, offset: 4432)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !253, file: !254, line: 149, baseType: !6, size: 32, offset: 4448)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !253, file: !254, line: 149, baseType: !6, size: 32, offset: 4480)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !253, file: !254, line: 152, baseType: !433, size: 128, offset: 4512)
!433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 128, elements: !434)
!434 = !{!435}
!435 = !DISubrange(count: 4)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !253, file: !254, line: 153, baseType: !6, size: 32, offset: 4640)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !253, file: !254, line: 154, baseType: !6, size: 32, offset: 4672)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !253, file: !254, line: 157, baseType: !79, size: 16, offset: 4704)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !253, file: !254, line: 157, baseType: !79, size: 16, offset: 4720)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !253, file: !254, line: 160, baseType: !441, size: 64, offset: 4736)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !443, line: 113, size: 6208, elements: !444)
!443 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!444 = !{!445, !446, !447, !448, !449, !450, !452}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !442, file: !443, line: 114, baseType: !79, size: 16)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !442, file: !443, line: 114, baseType: !79, size: 16, offset: 16)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !442, file: !443, line: 115, baseType: !189, size: 8, offset: 32)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !442, file: !443, line: 115, baseType: !189, size: 8, offset: 40)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !442, file: !443, line: 116, baseType: !189, size: 8, offset: 48)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !442, file: !443, line: 117, baseType: !451, size: 8, offset: 56)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 8, elements: !135)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !443, line: 119, baseType: !453, size: 6144, offset: 64)
!453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !454, size: 6144, elements: !463)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !443, line: 109, baseType: !455)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !443, line: 106, size: 192, elements: !456)
!456 = !{!457, !458, !459, !460, !461, !462}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !455, file: !443, line: 107, baseType: !6, size: 32)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !455, file: !443, line: 107, baseType: !6, size: 32, offset: 32)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !455, file: !443, line: 107, baseType: !6, size: 32, offset: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !455, file: !443, line: 107, baseType: !6, size: 32, offset: 96)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !455, file: !443, line: 107, baseType: !6, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !455, file: !443, line: 108, baseType: !12, size: 32, offset: 160)
!463 = !{!464}
!464 = !DISubrange(count: 32)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !253, file: !254, line: 161, baseType: !441, size: 64, offset: 4800)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !253, file: !254, line: 162, baseType: !189, size: 8, offset: 4864)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !253, file: !254, line: 162, baseType: !189, size: 8, offset: 4872)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !253, file: !254, line: 163, baseType: !189, size: 8, offset: 4880)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !253, file: !254, line: 163, baseType: !189, size: 8, offset: 4888)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !253, file: !254, line: 164, baseType: !79, size: 16, offset: 4896)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !253, file: !254, line: 164, baseType: !79, size: 16, offset: 4912)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !253, file: !254, line: 165, baseType: !6, size: 32, offset: 4928)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !253, file: !254, line: 165, baseType: !6, size: 32, offset: 4960)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !253, file: !254, line: 167, baseType: !475, size: 1152, offset: 4992)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 1152, elements: !2238)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !443, line: 57, size: 2496, elements: !478)
!478 = !{!479, !480, !481, !482, !483, !2035, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !477, file: !443, line: 59, baseType: !79, size: 16)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !477, file: !443, line: 59, baseType: !79, size: 16, offset: 16)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !477, file: !443, line: 59, baseType: !79, size: 16, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !477, file: !443, line: 59, baseType: !79, size: 16, offset: 48)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !477, file: !443, line: 60, baseType: !484, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !47, line: 115, size: 11392, elements: !486)
!486 = !{!487, !488, !489, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !506, !515, !529, !530, !572, !573, !576, !577, !593, !594, !595, !596, !597, !598, !599, !601, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !678, !679, !680, !681, !682, !683, !684, !685, !686, !689, !692, !695, !696, !697, !698, !699, !702, !705, !709, !710, !716, !717, !718, !719, !720, !721, !723, !726, !729, !733, !2023, !2024}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !485, file: !47, line: 116, baseType: !257, size: 960)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !485, file: !47, line: 117, baseType: !319, size: 64, offset: 960)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !485, file: !47, line: 119, baseType: !490, size: 64, offset: 1024)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !47, line: 57, flags: DIFlagFwdDecl)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !485, file: !47, line: 121, baseType: !79, size: 16, offset: 1088)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !485, file: !47, line: 121, baseType: !79, size: 16, offset: 1104)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !485, file: !47, line: 122, baseType: !12, size: 32, offset: 1120)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !485, file: !47, line: 122, baseType: !12, size: 32, offset: 1152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !485, file: !47, line: 122, baseType: !12, size: 32, offset: 1184)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !485, file: !47, line: 123, baseType: !304, size: 512, offset: 1216)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !485, file: !47, line: 124, baseType: !484, size: 64, offset: 1728)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !485, file: !47, line: 124, baseType: !484, size: 64, offset: 1792)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !485, file: !47, line: 127, baseType: !484, size: 64, offset: 1856)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !485, file: !47, line: 127, baseType: !484, size: 64, offset: 1920)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !485, file: !47, line: 127, baseType: !484, size: 64, offset: 1984)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !485, file: !47, line: 128, baseType: !504, size: 64, offset: 2048)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !254, line: 49, flags: DIFlagFwdDecl)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !485, file: !47, line: 130, baseType: !507, size: 64, offset: 2112)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !47, line: 97, size: 832, elements: !509)
!509 = !{!510, !513, !514}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !508, file: !47, line: 98, baseType: !511, size: 768)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 768, elements: !512)
!512 = !{!131, !98}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !508, file: !47, line: 99, baseType: !12, size: 32, offset: 768)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !508, file: !47, line: 99, baseType: !12, size: 32, offset: 800)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !485, file: !47, line: 131, baseType: !516, size: 64, offset: 2176)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !518, line: 486, size: 1600, elements: !519)
!518 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!519 = !{!520, !521, !522, !523, !524, !525, !526, !527, !528}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !517, file: !518, line: 487, baseType: !257, size: 960)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !517, file: !518, line: 489, baseType: !227, size: 128, offset: 960)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !517, file: !518, line: 490, baseType: !227, size: 128, offset: 1088)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !517, file: !518, line: 491, baseType: !227, size: 128, offset: 1216)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !517, file: !518, line: 492, baseType: !227, size: 128, offset: 1344)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !517, file: !518, line: 494, baseType: !12, size: 32, offset: 1472)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !517, file: !518, line: 495, baseType: !12, size: 32, offset: 1504)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !517, file: !518, line: 497, baseType: !12, size: 32, offset: 1536)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !517, file: !518, line: 498, baseType: !12, size: 32, offset: 1568)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !485, file: !47, line: 132, baseType: !516, size: 64, offset: 2240)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !485, file: !47, line: 133, baseType: !531, size: 64, offset: 2304)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !518, line: 334, size: 1728, elements: !533)
!533 = !{!534, !535, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !571}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !532, file: !518, line: 335, baseType: !227, size: 128)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !532, file: !518, line: 336, baseType: !536, size: 64, offset: 128)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !538, line: 48, flags: DIFlagFwdDecl)
!538 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!539 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !532, file: !518, line: 338, baseType: !79, size: 16, offset: 192)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !532, file: !518, line: 338, baseType: !79, size: 16, offset: 208)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !532, file: !518, line: 339, baseType: !48, size: 32, offset: 224)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !532, file: !518, line: 340, baseType: !12, size: 32, offset: 256)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !532, file: !518, line: 342, baseType: !6, size: 32, offset: 288)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !532, file: !518, line: 343, baseType: !96, size: 96, offset: 320)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !532, file: !518, line: 344, baseType: !96, size: 96, offset: 416)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !532, file: !518, line: 347, baseType: !227, size: 128, offset: 512)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !532, file: !518, line: 349, baseType: !12, size: 32, offset: 640)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !532, file: !518, line: 350, baseType: !12, size: 32, offset: 672)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !532, file: !518, line: 351, baseType: !64, size: 64, offset: 704)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !532, file: !518, line: 352, baseType: !64, size: 64, offset: 768)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !532, file: !518, line: 354, baseType: !552, size: 384, offset: 832)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !518, line: 116, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !518, line: 94, size: 384, elements: !554)
!554 = !{!555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !553, file: !518, line: 96, baseType: !12, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !553, file: !518, line: 96, baseType: !12, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !553, file: !518, line: 97, baseType: !12, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !553, file: !518, line: 97, baseType: !12, size: 32, offset: 96)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !553, file: !518, line: 99, baseType: !79, size: 16, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !553, file: !518, line: 100, baseType: !79, size: 16, offset: 144)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !553, file: !518, line: 102, baseType: !79, size: 16, offset: 160)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !553, file: !518, line: 105, baseType: !79, size: 16, offset: 176)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !553, file: !518, line: 108, baseType: !79, size: 16, offset: 192)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !553, file: !518, line: 109, baseType: !79, size: 16, offset: 208)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !553, file: !518, line: 111, baseType: !79, size: 16, offset: 224)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !553, file: !518, line: 112, baseType: !79, size: 16, offset: 240)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !553, file: !518, line: 114, baseType: !12, size: 32, offset: 256)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !553, file: !518, line: 114, baseType: !12, size: 32, offset: 288)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !553, file: !518, line: 115, baseType: !12, size: 32, offset: 320)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !553, file: !518, line: 115, baseType: !12, size: 32, offset: 352)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !532, file: !518, line: 355, baseType: !304, size: 512, offset: 1216)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !485, file: !47, line: 134, baseType: !64, size: 64, offset: 2368)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !485, file: !47, line: 136, baseType: !574, size: 64, offset: 2432)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !11, line: 61, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !485, file: !47, line: 138, baseType: !552, size: 384, offset: 2496)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !485, file: !47, line: 139, baseType: !578, size: 64, offset: 2880)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !518, line: 80, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !518, line: 72, size: 192, elements: !581)
!581 = !{!582, !589, !590, !591, !592}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !580, file: !518, line: 73, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !518, line: 59, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !518, line: 56, size: 128, elements: !586)
!586 = !{!587, !588}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !585, file: !518, line: 57, baseType: !96, size: 96)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !585, file: !518, line: 58, baseType: !12, size: 32, offset: 96)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !580, file: !518, line: 74, baseType: !12, size: 32, offset: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !580, file: !518, line: 76, baseType: !12, size: 32, offset: 96)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !580, file: !518, line: 77, baseType: !12, size: 32, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !580, file: !518, line: 79, baseType: !12, size: 32, offset: 160)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !485, file: !47, line: 141, baseType: !227, size: 128, offset: 2944)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !485, file: !47, line: 142, baseType: !227, size: 128, offset: 3072)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !485, file: !47, line: 143, baseType: !227, size: 128, offset: 3200)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !485, file: !47, line: 144, baseType: !227, size: 128, offset: 3328)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !485, file: !47, line: 146, baseType: !12, size: 32, offset: 3456)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !485, file: !47, line: 147, baseType: !12, size: 32, offset: 3488)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !485, file: !47, line: 150, baseType: !600, size: 64, offset: 3520)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !485, file: !47, line: 151, baseType: !602, size: 64, offset: 3584)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !485, file: !47, line: 152, baseType: !12, size: 32, offset: 3648)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !485, file: !47, line: 153, baseType: !12, size: 32, offset: 3680)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !485, file: !47, line: 156, baseType: !96, size: 96, offset: 3712)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !485, file: !47, line: 156, baseType: !96, size: 96, offset: 3808)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !485, file: !47, line: 156, baseType: !96, size: 96, offset: 3904)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !485, file: !47, line: 157, baseType: !96, size: 96, offset: 4000)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !485, file: !47, line: 158, baseType: !96, size: 96, offset: 4096)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !485, file: !47, line: 159, baseType: !96, size: 96, offset: 4192)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !485, file: !47, line: 160, baseType: !96, size: 96, offset: 4288)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !485, file: !47, line: 160, baseType: !96, size: 96, offset: 4384)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !485, file: !47, line: 161, baseType: !433, size: 128, offset: 4480)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !485, file: !47, line: 161, baseType: !433, size: 128, offset: 4608)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !485, file: !47, line: 162, baseType: !96, size: 96, offset: 4736)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !485, file: !47, line: 162, baseType: !96, size: 96, offset: 4832)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !485, file: !47, line: 163, baseType: !6, size: 32, offset: 4928)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !485, file: !47, line: 163, baseType: !6, size: 32, offset: 4960)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !485, file: !47, line: 164, baseType: !620, size: 512, offset: 4992)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 512, elements: !621)
!621 = !{!435, !435}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !485, file: !47, line: 165, baseType: !620, size: 512, offset: 5504)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !485, file: !47, line: 166, baseType: !620, size: 512, offset: 6016)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !485, file: !47, line: 167, baseType: !620, size: 512, offset: 6528)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !485, file: !47, line: 176, baseType: !620, size: 512, offset: 7040)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !485, file: !47, line: 178, baseType: !48, size: 32, offset: 7552)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !485, file: !47, line: 180, baseType: !79, size: 16, offset: 7584)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !485, file: !47, line: 181, baseType: !79, size: 16, offset: 7600)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !485, file: !47, line: 183, baseType: !79, size: 16, offset: 7616)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !485, file: !47, line: 183, baseType: !79, size: 16, offset: 7632)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !485, file: !47, line: 184, baseType: !79, size: 16, offset: 7648)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !485, file: !47, line: 184, baseType: !79, size: 16, offset: 7664)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !485, file: !47, line: 185, baseType: !79, size: 16, offset: 7680)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !485, file: !47, line: 186, baseType: !79, size: 16, offset: 7696)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !485, file: !47, line: 187, baseType: !79, size: 16, offset: 7712)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !485, file: !47, line: 188, baseType: !189, size: 8, offset: 7728)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !485, file: !47, line: 189, baseType: !189, size: 8, offset: 7736)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !485, file: !47, line: 192, baseType: !12, size: 32, offset: 7744)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !485, file: !47, line: 192, baseType: !12, size: 32, offset: 7776)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !485, file: !47, line: 192, baseType: !12, size: 32, offset: 7808)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !485, file: !47, line: 192, baseType: !12, size: 32, offset: 7840)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !485, file: !47, line: 194, baseType: !12, size: 32, offset: 7872)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !485, file: !47, line: 202, baseType: !6, size: 32, offset: 7904)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !485, file: !47, line: 202, baseType: !6, size: 32, offset: 7936)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !485, file: !47, line: 202, baseType: !6, size: 32, offset: 7968)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !485, file: !47, line: 211, baseType: !6, size: 32, offset: 8000)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !485, file: !47, line: 212, baseType: !6, size: 32, offset: 8032)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !485, file: !47, line: 213, baseType: !6, size: 32, offset: 8064)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !485, file: !47, line: 214, baseType: !6, size: 32, offset: 8096)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !485, file: !47, line: 215, baseType: !6, size: 32, offset: 8128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !485, file: !47, line: 216, baseType: !6, size: 32, offset: 8160)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !485, file: !47, line: 219, baseType: !6, size: 32, offset: 8192)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !485, file: !47, line: 220, baseType: !6, size: 32, offset: 8224)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !485, file: !47, line: 221, baseType: !6, size: 32, offset: 8256)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !485, file: !47, line: 224, baseType: !77, size: 16, offset: 8288)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !485, file: !47, line: 224, baseType: !77, size: 16, offset: 8304)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !485, file: !47, line: 226, baseType: !79, size: 16, offset: 8320)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !485, file: !47, line: 228, baseType: !189, size: 8, offset: 8336)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !485, file: !47, line: 229, baseType: !189, size: 8, offset: 8344)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !485, file: !47, line: 231, baseType: !79, size: 16, offset: 8352)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !485, file: !47, line: 232, baseType: !189, size: 8, offset: 8368)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !485, file: !47, line: 233, baseType: !189, size: 8, offset: 8376)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !485, file: !47, line: 234, baseType: !6, size: 32, offset: 8384)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !485, file: !47, line: 235, baseType: !6, size: 32, offset: 8416)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !485, file: !47, line: 237, baseType: !227, size: 128, offset: 8448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !485, file: !47, line: 238, baseType: !227, size: 128, offset: 8576)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !485, file: !47, line: 239, baseType: !227, size: 128, offset: 8704)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !485, file: !47, line: 240, baseType: !227, size: 128, offset: 8832)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !485, file: !47, line: 242, baseType: !6, size: 32, offset: 8960)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !485, file: !47, line: 244, baseType: !79, size: 16, offset: 8992)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !485, file: !47, line: 245, baseType: !77, size: 16, offset: 9008)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !485, file: !47, line: 246, baseType: !433, size: 128, offset: 9024)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !485, file: !47, line: 248, baseType: !12, size: 32, offset: 9152)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !485, file: !47, line: 249, baseType: !12, size: 32, offset: 9184)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !485, file: !47, line: 251, baseType: !676, size: 64, offset: 9216)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !47, line: 251, flags: DIFlagFwdDecl)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !485, file: !47, line: 253, baseType: !189, size: 8, offset: 9280)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !485, file: !47, line: 254, baseType: !189, size: 8, offset: 9288)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !485, file: !47, line: 255, baseType: !79, size: 16, offset: 9296)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !485, file: !47, line: 256, baseType: !96, size: 96, offset: 9312)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !485, file: !47, line: 258, baseType: !227, size: 128, offset: 9408)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !485, file: !47, line: 259, baseType: !227, size: 128, offset: 9536)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !485, file: !47, line: 260, baseType: !227, size: 128, offset: 9664)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !485, file: !47, line: 261, baseType: !227, size: 128, offset: 9792)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !485, file: !47, line: 263, baseType: !687, size: 64, offset: 9920)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !47, line: 52, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !485, file: !47, line: 264, baseType: !690, size: 64, offset: 9984)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !47, line: 53, flags: DIFlagFwdDecl)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !485, file: !47, line: 265, baseType: !693, size: 64, offset: 10048)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !254, line: 46, flags: DIFlagFwdDecl)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !485, file: !47, line: 267, baseType: !189, size: 8, offset: 10112)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !485, file: !47, line: 268, baseType: !189, size: 8, offset: 10120)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !485, file: !47, line: 269, baseType: !79, size: 16, offset: 10128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !485, file: !47, line: 270, baseType: !6, size: 32, offset: 10144)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !485, file: !47, line: 272, baseType: !700, size: 64, offset: 10176)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !47, line: 54, flags: DIFlagFwdDecl)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !485, file: !47, line: 275, baseType: !703, size: 64, offset: 10240)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !47, line: 275, flags: DIFlagFwdDecl)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !485, file: !47, line: 277, baseType: !706, size: 64, offset: 10304)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !708, line: 41, flags: DIFlagFwdDecl)
!708 = !DIFile(filename: "blender/source/blender/render/intern/include/occlusion.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!709 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !485, file: !47, line: 277, baseType: !706, size: 64, offset: 10368)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !485, file: !47, line: 278, baseType: !711, size: 64, offset: 10432)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !712, line: 27, baseType: !713)
!712 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !714, line: 45, baseType: !715)
!714 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!715 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !485, file: !47, line: 279, baseType: !711, size: 64, offset: 10496)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !485, file: !47, line: 280, baseType: !48, size: 32, offset: 10560)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !485, file: !47, line: 281, baseType: !48, size: 32, offset: 10592)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !485, file: !47, line: 283, baseType: !227, size: 128, offset: 10624)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !485, file: !47, line: 284, baseType: !227, size: 128, offset: 10752)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !485, file: !47, line: 285, baseType: !722, size: 64, offset: 10880)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !485, file: !47, line: 287, baseType: !724, size: 64, offset: 10944)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !47, line: 59, flags: DIFlagFwdDecl)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !485, file: !47, line: 288, baseType: !727, size: 64, offset: 11008)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !47, line: 288, flags: DIFlagFwdDecl)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !485, file: !47, line: 290, baseType: !730, size: 64, offset: 11072)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !731)
!731 = !{!732}
!732 = !DISubrange(count: 2)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !485, file: !47, line: 291, baseType: !734, size: 64, offset: 11136)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !736, line: 65, baseType: !737)
!736 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !736, line: 50, size: 320, elements: !738)
!738 = !{!739, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !737, file: !736, line: 51, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !11, line: 1216, size: 39680, elements: !742)
!742 = !{!743, !744, !745, !746, !1293, !1294, !1295, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1322, !1597, !1600, !1883, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1905, !1906, !1907, !1908, !1909, !1917, !1984, !1991, !1992, !1999, !2002, !2003, !2004, !2005, !2006, !2007}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !741, file: !11, line: 1217, baseType: !257, size: 960)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !741, file: !11, line: 1218, baseType: !319, size: 64, offset: 960)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !741, file: !11, line: 1220, baseType: !484, size: 64, offset: 1024)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !741, file: !11, line: 1221, baseType: !747, size: 64, offset: 1088)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !749, line: 52, size: 4224, elements: !750)
!749 = !DIFile(filename: "blender/source/blender/makesdna/DNA_world_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !826, !842}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !748, file: !749, line: 53, baseType: !257, size: 960)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !748, file: !749, line: 54, baseType: !319, size: 64, offset: 960)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !748, file: !749, line: 56, baseType: !79, size: 16, offset: 1024)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "totex", scope: !748, file: !749, line: 56, baseType: !79, size: 16, offset: 1040)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !748, file: !749, line: 57, baseType: !79, size: 16, offset: 1056)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "mistype", scope: !748, file: !749, line: 57, baseType: !79, size: 16, offset: 1072)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "horr", scope: !748, file: !749, line: 59, baseType: !6, size: 32, offset: 1088)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "horg", scope: !748, file: !749, line: 59, baseType: !6, size: 32, offset: 1120)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "horb", scope: !748, file: !749, line: 59, baseType: !6, size: 32, offset: 1152)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "zenr", scope: !748, file: !749, line: 60, baseType: !6, size: 32, offset: 1184)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "zeng", scope: !748, file: !749, line: 60, baseType: !6, size: 32, offset: 1216)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "zenb", scope: !748, file: !749, line: 60, baseType: !6, size: 32, offset: 1248)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !748, file: !749, line: 61, baseType: !6, size: 32, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !748, file: !749, line: 61, baseType: !6, size: 32, offset: 1312)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !748, file: !749, line: 61, baseType: !6, size: 32, offset: 1344)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !748, file: !749, line: 68, baseType: !6, size: 32, offset: 1376)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !748, file: !749, line: 68, baseType: !6, size: 32, offset: 1408)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !748, file: !749, line: 68, baseType: !6, size: 32, offset: 1440)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "linfac", scope: !748, file: !749, line: 69, baseType: !6, size: 32, offset: 1472)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "logfac", scope: !748, file: !749, line: 69, baseType: !6, size: 32, offset: 1504)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !748, file: !749, line: 74, baseType: !6, size: 32, offset: 1536)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !748, file: !749, line: 79, baseType: !6, size: 32, offset: 1568)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "skytype", scope: !748, file: !749, line: 81, baseType: !79, size: 16, offset: 1600)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !748, file: !749, line: 91, baseType: !79, size: 16, offset: 1616)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !748, file: !749, line: 92, baseType: !79, size: 16, offset: 1632)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !748, file: !749, line: 93, baseType: !79, size: 16, offset: 1648)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !748, file: !749, line: 94, baseType: !79, size: 16, offset: 1664)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !748, file: !749, line: 94, baseType: !79, size: 16, offset: 1680)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !748, file: !749, line: 94, baseType: !79, size: 16, offset: 1696)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !748, file: !749, line: 94, baseType: !79, size: 16, offset: 1712)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "misi", scope: !748, file: !749, line: 96, baseType: !6, size: 32, offset: 1728)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "miststa", scope: !748, file: !749, line: 96, baseType: !6, size: 32, offset: 1760)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "mistdist", scope: !748, file: !749, line: 96, baseType: !6, size: 32, offset: 1792)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "misthi", scope: !748, file: !749, line: 96, baseType: !6, size: 32, offset: 1824)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "starr", scope: !748, file: !749, line: 98, baseType: !6, size: 32, offset: 1856)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "starg", scope: !748, file: !749, line: 98, baseType: !6, size: 32, offset: 1888)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "starb", scope: !748, file: !749, line: 98, baseType: !6, size: 32, offset: 1920)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "stark", scope: !748, file: !749, line: 98, baseType: !6, size: 32, offset: 1952)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "starsize", scope: !748, file: !749, line: 99, baseType: !6, size: 32, offset: 1984)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "starmindist", scope: !748, file: !749, line: 99, baseType: !6, size: 32, offset: 2016)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "stardist", scope: !748, file: !749, line: 100, baseType: !6, size: 32, offset: 2048)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "starcolnoise", scope: !748, file: !749, line: 100, baseType: !6, size: 32, offset: 2080)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "dofsta", scope: !748, file: !749, line: 103, baseType: !79, size: 16, offset: 2112)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "dofend", scope: !748, file: !749, line: 103, baseType: !79, size: 16, offset: 2128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "dofmin", scope: !748, file: !749, line: 103, baseType: !79, size: 16, offset: 2144)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "dofmax", scope: !748, file: !749, line: 103, baseType: !79, size: 16, offset: 2160)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "aodist", scope: !748, file: !749, line: 106, baseType: !6, size: 32, offset: 2176)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "aodistfac", scope: !748, file: !749, line: 106, baseType: !6, size: 32, offset: 2208)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "aoenergy", scope: !748, file: !749, line: 106, baseType: !6, size: 32, offset: 2240)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "aobias", scope: !748, file: !749, line: 106, baseType: !6, size: 32, offset: 2272)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "aomode", scope: !748, file: !749, line: 107, baseType: !79, size: 16, offset: 2304)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "aosamp", scope: !748, file: !749, line: 107, baseType: !79, size: 16, offset: 2320)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "aomix", scope: !748, file: !749, line: 107, baseType: !79, size: 16, offset: 2336)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "aocolor", scope: !748, file: !749, line: 107, baseType: !79, size: 16, offset: 2352)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_thresh", scope: !748, file: !749, line: 108, baseType: !6, size: 32, offset: 2368)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "ao_adapt_speed_fac", scope: !748, file: !749, line: 108, baseType: !6, size: 32, offset: 2400)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_error", scope: !748, file: !749, line: 109, baseType: !6, size: 32, offset: 2432)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_correction", scope: !748, file: !749, line: 109, baseType: !6, size: 32, offset: 2464)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_energy", scope: !748, file: !749, line: 110, baseType: !6, size: 32, offset: 2496)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "ao_env_energy", scope: !748, file: !749, line: 110, baseType: !6, size: 32, offset: 2528)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad2", scope: !748, file: !749, line: 110, baseType: !6, size: 32, offset: 2560)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "ao_indirect_bounces", scope: !748, file: !749, line: 111, baseType: !79, size: 16, offset: 2592)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "ao_pad", scope: !748, file: !749, line: 111, baseType: !79, size: 16, offset: 2608)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "ao_samp_method", scope: !748, file: !749, line: 112, baseType: !79, size: 16, offset: 2624)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ao_gather_method", scope: !748, file: !749, line: 112, baseType: !79, size: 16, offset: 2640)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ao_approx_passes", scope: !748, file: !749, line: 112, baseType: !79, size: 16, offset: 2656)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !748, file: !749, line: 115, baseType: !79, size: 16, offset: 2672)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "aosphere", scope: !748, file: !749, line: 118, baseType: !7, size: 64, offset: 2688)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "aotables", scope: !748, file: !749, line: 118, baseType: !7, size: 64, offset: 2752)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !748, file: !749, line: 121, baseType: !504, size: 64, offset: 2816)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !748, file: !749, line: 122, baseType: !475, size: 1152, offset: 2880)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !748, file: !749, line: 123, baseType: !79, size: 16, offset: 4032)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !748, file: !749, line: 123, baseType: !79, size: 16, offset: 4048)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !748, file: !749, line: 123, baseType: !825, size: 32, offset: 4064)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 32, elements: !731)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !748, file: !749, line: 126, baseType: !827, size: 64, offset: 4096)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !258, line: 159, size: 448, elements: !829)
!829 = !{!830, !832, !833, !834, !835, !838}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !828, file: !258, line: 161, baseType: !831, size: 64)
!831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 64, elements: !731)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !828, file: !258, line: 162, baseType: !831, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !828, file: !258, line: 163, baseType: !825, size: 32, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !828, file: !258, line: 164, baseType: !825, size: 32, offset: 160)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !828, file: !258, line: 165, baseType: !836, size: 128, offset: 192)
!836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !837, size: 128, elements: !731)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !828, file: !258, line: 166, baseType: !839, size: 128, offset: 320)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 128, elements: !731)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !258, line: 46, flags: DIFlagFwdDecl)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !748, file: !749, line: 129, baseType: !843, size: 64, offset: 4160)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !845, line: 328, size: 3456, elements: !846)
!845 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!846 = !{!847, !848, !849, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1271, !1272, !1273, !1276, !1280, !1284, !1288, !1289, !1290, !1291, !1292}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !844, file: !845, line: 329, baseType: !257, size: 960)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !844, file: !845, line: 330, baseType: !319, size: 64, offset: 960)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !844, file: !845, line: 332, baseType: !850, size: 64, offset: 1024)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !852, line: 283, size: 4096, elements: !853)
!852 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_node.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!853 = !{!854, !855, !856, !857, !861, !862, !866, !1212, !1220, !1224, !1230, !1234, !1235, !1236, !1237, !1241, !1242}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !851, file: !852, line: 284, baseType: !12, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !851, file: !852, line: 285, baseType: !304, size: 512, offset: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !851, file: !852, line: 287, baseType: !304, size: 512, offset: 544)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !851, file: !852, line: 288, baseType: !858, size: 2048, offset: 1056)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 2048, elements: !859)
!859 = !{!860}
!860 = !DISubrange(count: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !851, file: !852, line: 289, baseType: !12, size: 32, offset: 3104)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "free_cache", scope: !851, file: !852, line: 292, baseType: !863, size: 64, offset: 3136)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !843}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "free_node_cache", scope: !851, file: !852, line: 293, baseType: !867, size: 64, offset: 3200)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !843, !870}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNode", file: !845, line: 167, size: 3712, elements: !872)
!872 = !{!873, !874, !875, !876, !877, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1204, !1205, !1206, !1207, !1208, !1209}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !871, file: !845, line: 168, baseType: !870, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !871, file: !845, line: 168, baseType: !870, size: 64, offset: 64)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "new_node", scope: !871, file: !845, line: 168, baseType: !870, size: 64, offset: 128)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !871, file: !845, line: 170, baseType: !293, size: 64, offset: 192)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !871, file: !845, line: 172, baseType: !878, size: 64, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeType", file: !852, line: 144, size: 6016, elements: !880)
!880 = !{!881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !1056, !1057, !1058, !1072, !1076, !1080, !1081, !1088, !1092, !1096, !1097, !1098, !1099, !1103, !1104, !1108, !1112, !1116, !1120, !1124, !1128, !1132, !1133, !1140, !1142, !1151, !1160}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !879, file: !852, line: 145, baseType: !64, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !879, file: !852, line: 145, baseType: !64, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free", scope: !879, file: !852, line: 146, baseType: !79, size: 16, offset: 128)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !879, file: !852, line: 148, baseType: !304, size: 512, offset: 144)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !879, file: !852, line: 149, baseType: !12, size: 32, offset: 672)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ui_name", scope: !879, file: !852, line: 151, baseType: !304, size: 512, offset: 704)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ui_description", scope: !879, file: !852, line: 152, baseType: !858, size: 2048, offset: 1216)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "ui_icon", scope: !879, file: !852, line: 153, baseType: !12, size: 32, offset: 3264)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !879, file: !852, line: 155, baseType: !6, size: 32, offset: 3296)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !879, file: !852, line: 155, baseType: !6, size: 32, offset: 3328)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !879, file: !852, line: 155, baseType: !6, size: 32, offset: 3360)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !879, file: !852, line: 156, baseType: !6, size: 32, offset: 3392)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "minheight", scope: !879, file: !852, line: 156, baseType: !6, size: 32, offset: 3424)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "maxheight", scope: !879, file: !852, line: 156, baseType: !6, size: 32, offset: 3456)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "nclass", scope: !879, file: !852, line: 157, baseType: !79, size: 16, offset: 3488)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !879, file: !852, line: 157, baseType: !79, size: 16, offset: 3504)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility", scope: !879, file: !852, line: 157, baseType: !79, size: 16, offset: 3520)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !879, file: !852, line: 160, baseType: !899, size: 64, offset: 3584)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocketTemplate", file: !852, line: 109, baseType: !901)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketTemplate", file: !852, line: 98, size: 1408, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !1055}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !901, file: !852, line: 99, baseType: !12, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !901, file: !852, line: 99, baseType: !12, size: 32, offset: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !901, file: !852, line: 100, baseType: !304, size: 512, offset: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "val1", scope: !901, file: !852, line: 101, baseType: !6, size: 32, offset: 576)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !901, file: !852, line: 101, baseType: !6, size: 32, offset: 608)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "val3", scope: !901, file: !852, line: 101, baseType: !6, size: 32, offset: 640)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "val4", scope: !901, file: !852, line: 101, baseType: !6, size: 32, offset: 672)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !901, file: !852, line: 102, baseType: !6, size: 32, offset: 704)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !901, file: !852, line: 102, baseType: !6, size: 32, offset: 736)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !901, file: !852, line: 103, baseType: !12, size: 32, offset: 768)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !901, file: !852, line: 104, baseType: !12, size: 32, offset: 800)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "sock", scope: !901, file: !852, line: 107, baseType: !915, size: 64, offset: 832)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocket", file: !845, line: 87, size: 2816, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1040}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !916, file: !845, line: 88, baseType: !915, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !916, file: !845, line: 88, baseType: !915, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "new_sock", scope: !916, file: !845, line: 88, baseType: !915, size: 64, offset: 128)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !916, file: !845, line: 90, baseType: !293, size: 64, offset: 192)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !916, file: !845, line: 92, baseType: !304, size: 512, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !916, file: !845, line: 94, baseType: !304, size: 512, offset: 768)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !916, file: !845, line: 99, baseType: !64, size: 64, offset: 1280)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !916, file: !845, line: 101, baseType: !79, size: 16, offset: 1344)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !916, file: !845, line: 101, baseType: !79, size: 16, offset: 1360)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !916, file: !845, line: 102, baseType: !79, size: 16, offset: 1376)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "in_out", scope: !916, file: !845, line: 103, baseType: !79, size: 16, offset: 1392)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !916, file: !845, line: 104, baseType: !930, size: 64, offset: 1408)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeSocketType", file: !852, line: 114, size: 1600, elements: !932)
!932 = !{!933, !934, !956, !960, !964, !968, !972, !976, !977, !981, !1010, !1011, !1012}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !931, file: !852, line: 115, baseType: !304, size: 512)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !931, file: !852, line: 117, baseType: !935, size: 64, offset: 512)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{null, !938, !941, !943, !943, !954}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !940, line: 44, flags: DIFlagFwdDecl)
!940 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !852, line: 73, flags: DIFlagFwdDecl)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !940, line: 55, size: 192, elements: !945)
!945 = !{!946, !950, !953}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !944, file: !940, line: 58, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !944, file: !940, line: 56, size: 64, elements: !948)
!948 = !{!949}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !947, file: !940, line: 57, baseType: !64, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !944, file: !940, line: 60, baseType: !951, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !845, line: 335, flags: DIFlagFwdDecl)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !944, file: !940, line: 61, baseType: !64, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !189)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "draw_color", scope: !931, file: !852, line: 118, baseType: !957, size: 64, offset: 576)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !938, !943, !943, !7}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw", scope: !931, file: !852, line: 120, baseType: !961, size: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{null, !938, !941, !943}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "interface_draw_color", scope: !931, file: !852, line: 121, baseType: !965, size: 64, offset: 704)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !938, !943, !7}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "interface_register_properties", scope: !931, file: !852, line: 122, baseType: !969, size: 64, offset: 768)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !843, !915, !951}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "interface_init_socket", scope: !931, file: !852, line: 123, baseType: !973, size: 64, offset: 832)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !843, !915, !870, !915, !954}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "interface_verify_socket", scope: !931, file: !852, line: 124, baseType: !973, size: 64, offset: 896)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "interface_from_socket", scope: !931, file: !852, line: 125, baseType: !978, size: 64, offset: 960)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !843, !915, !870, !915}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "ext_socket", scope: !931, file: !852, line: 128, baseType: !982, size: 256, offset: 1024)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !940, line: 436, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !940, line: 430, size: 256, elements: !984)
!984 = !{!985, !986, !989, !1005}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !983, file: !940, line: 431, baseType: !64, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !983, file: !940, line: 432, baseType: !987, size: 64, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !940, line: 417, baseType: !952)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !983, file: !940, line: 433, baseType: !990, size: 64, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !940, line: 408, baseType: !991)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!12, !938, !943, !994, !996}
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !940, line: 38, flags: DIFlagFwdDecl)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !940, line: 348, baseType: !998)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !940, line: 337, size: 256, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !998, file: !940, line: 339, baseType: !64, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !998, file: !940, line: 342, baseType: !994, size: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !998, file: !940, line: 345, baseType: !12, size: 32, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !998, file: !940, line: 347, baseType: !12, size: 32, offset: 160)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !998, file: !940, line: 347, baseType: !12, size: 32, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !983, file: !940, line: 434, baseType: !1006, size: 64, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !940, line: 409, baseType: !1007)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !64}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "ext_interface", scope: !931, file: !852, line: 129, baseType: !982, size: 256, offset: 1280)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !931, file: !852, line: 132, baseType: !12, size: 32, offset: 1536)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !931, file: !852, line: 132, baseType: !12, size: 32, offset: 1568)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !916, file: !845, line: 105, baseType: !304, size: 512, offset: 1472)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !916, file: !845, line: 107, baseType: !6, size: 32, offset: 1984)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !916, file: !845, line: 107, baseType: !6, size: 32, offset: 2016)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "default_value", scope: !916, file: !845, line: 109, baseType: !64, size: 64, offset: 2048)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !916, file: !845, line: 112, baseType: !79, size: 16, offset: 2112)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "stack_type", scope: !916, file: !845, line: 114, baseType: !79, size: 16, offset: 2128)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !916, file: !845, line: 115, baseType: !12, size: 32, offset: 2144)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !916, file: !845, line: 117, baseType: !64, size: 64, offset: 2176)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "own_index", scope: !916, file: !845, line: 122, baseType: !12, size: 32, offset: 2240)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "to_index", scope: !916, file: !845, line: 124, baseType: !12, size: 32, offset: 2272)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "groupsock", scope: !916, file: !845, line: 126, baseType: !915, size: 64, offset: 2304)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !916, file: !845, line: 128, baseType: !1025, size: 64, offset: 2368)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeLink", file: !845, line: 298, size: 448, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1033, !1034, !1037, !1038, !1039}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1026, file: !845, line: 299, baseType: !1025, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1026, file: !845, line: 299, baseType: !1025, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "fromnode", scope: !1026, file: !845, line: 301, baseType: !1031, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNode", file: !845, line: 218, baseType: !871)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "tonode", scope: !1026, file: !845, line: 301, baseType: !1031, size: 64, offset: 192)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "fromsock", scope: !1026, file: !845, line: 302, baseType: !1035, size: 64, offset: 256)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeSocket", file: !845, line: 132, baseType: !916)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "tosock", scope: !1026, file: !845, line: 302, baseType: !1035, size: 64, offset: 320)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1026, file: !845, line: 304, baseType: !12, size: 32, offset: 384)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1026, file: !845, line: 305, baseType: !12, size: 32, offset: 416)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !916, file: !845, line: 131, baseType: !1041, size: 384, offset: 2432)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeStack", file: !845, line: 73, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeStack", file: !845, line: 62, size: 384, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1042, file: !845, line: 63, baseType: !433, size: 128)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1042, file: !845, line: 64, baseType: !6, size: 32, offset: 128)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1042, file: !845, line: 64, baseType: !6, size: 32, offset: 160)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1042, file: !845, line: 65, baseType: !64, size: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "hasinput", scope: !1042, file: !845, line: 66, baseType: !79, size: 16, offset: 256)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "hasoutput", scope: !1042, file: !845, line: 67, baseType: !79, size: 16, offset: 272)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "datatype", scope: !1042, file: !845, line: 68, baseType: !79, size: 16, offset: 288)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "sockettype", scope: !1042, file: !845, line: 69, baseType: !79, size: 16, offset: 304)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "is_copy", scope: !1042, file: !845, line: 70, baseType: !79, size: 16, offset: 320)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1042, file: !845, line: 71, baseType: !79, size: 16, offset: 336)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1042, file: !845, line: 72, baseType: !825, size: 32, offset: 352)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !901, file: !852, line: 108, baseType: !304, size: 512, offset: 896)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !879, file: !852, line: 160, baseType: !899, size: 64, offset: 3648)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "storagename", scope: !879, file: !852, line: 162, baseType: !304, size: 512, offset: 3712)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype", scope: !879, file: !852, line: 165, baseType: !1059, size: 64, offset: 4224)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{null, !1062, !1064, !1066, !843, !870, !1068}
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !852, line: 81, flags: DIFlagFwdDecl)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceNode", file: !845, line: 43, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !845, line: 274, baseType: !1069)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !845, line: 271, size: 32, elements: !1070)
!1070 = !{!1071}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1069, file: !845, line: 273, baseType: !48, size: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "draw_nodetype_prepare", scope: !879, file: !852, line: 168, baseType: !1073, size: 64, offset: 4288)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{null, !1062, !843, !870}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons", scope: !879, file: !852, line: 171, baseType: !1077, size: 64, offset: 4352)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !941, !938, !943}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "draw_buttons_ex", scope: !879, file: !852, line: 173, baseType: !1077, size: 64, offset: 4416)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "draw_backdrop", scope: !879, file: !852, line: 176, baseType: !1082, size: 64, offset: 4480)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{null, !1066, !1085, !870, !12, !12}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !1087, line: 136, flags: DIFlagFwdDecl)
!1087 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "labelfunc", scope: !879, file: !852, line: 179, baseType: !1089, size: 64, offset: 4544)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{null, !843, !870, !602, !12}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "resize_area_func", scope: !879, file: !852, line: 181, baseType: !1093, size: 64, offset: 4608)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!12, !870, !12, !12}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "select_area_func", scope: !879, file: !852, line: 183, baseType: !1093, size: 64, offset: 4672)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "tweak_area_func", scope: !879, file: !852, line: 185, baseType: !1093, size: 64, offset: 4736)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "updatefunc", scope: !879, file: !852, line: 188, baseType: !867, size: 64, offset: 4800)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "verifyfunc", scope: !879, file: !852, line: 190, baseType: !1100, size: 64, offset: 4864)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{null, !843, !870, !264}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc", scope: !879, file: !852, line: 193, baseType: !867, size: 64, offset: 4928)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc", scope: !879, file: !852, line: 195, baseType: !1105, size: 64, offset: 4992)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !870}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc", scope: !879, file: !852, line: 197, baseType: !1109, size: 64, offset: 5056)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !843, !870, !870}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "initfunc_api", scope: !879, file: !852, line: 200, baseType: !1113, size: 64, offset: 5120)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{null, !1062, !943}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "freefunc_api", scope: !879, file: !852, line: 201, baseType: !1117, size: 64, offset: 5184)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{null, !943}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "copyfunc_api", scope: !879, file: !852, line: 202, baseType: !1121, size: 64, offset: 5248)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{null, !943, !870}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !879, file: !852, line: 205, baseType: !1125, size: 64, offset: 5312)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!12, !878, !843}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "poll_instance", scope: !879, file: !852, line: 207, baseType: !1129, size: 64, offset: 5376)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!12, !870, !843}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "update_internal_links", scope: !879, file: !852, line: 210, baseType: !867, size: 64, offset: 5440)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "initexecfunc", scope: !879, file: !852, line: 213, baseType: !1134, size: 64, offset: 5504)
!1134 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeInitExecFunction", file: !852, line: 135, baseType: !1135)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!64, !1138, !870, !1068}
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecContext", file: !852, line: 62, flags: DIFlagFwdDecl)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "freeexecfunc", scope: !879, file: !852, line: 214, baseType: !1141, size: 64, offset: 5568)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeFreeExecFunction", file: !852, line: 136, baseType: !1007)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "execfunc", scope: !879, file: !852, line: 215, baseType: !1143, size: 64, offset: 5632)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeExecFunction", file: !852, line: 137, baseType: !1144)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !64, !12, !870, !1147, !1149, !1149}
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeExecData", file: !852, line: 63, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "gpufunc", scope: !879, file: !852, line: 217, baseType: !1152, size: 64, offset: 5696)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "NodeGPUExecFunction", file: !852, line: 138, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!12, !1156, !870, !1147, !1158, !1158}
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUMaterial", file: !852, line: 64, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUNodeStack", file: !852, line: 66, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !879, file: !852, line: 220, baseType: !982, size: 256, offset: 5760)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !871, file: !845, line: 173, baseType: !304, size: 512, offset: 320)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !871, file: !845, line: 175, baseType: !304, size: 512, offset: 832)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !871, file: !845, line: 176, baseType: !12, size: 32, offset: 1344)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !871, file: !845, line: 177, baseType: !79, size: 16, offset: 1376)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !871, file: !845, line: 177, baseType: !79, size: 16, offset: 1392)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !871, file: !845, line: 178, baseType: !79, size: 16, offset: 1408)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !871, file: !845, line: 178, baseType: !79, size: 16, offset: 1424)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "lasty", scope: !871, file: !845, line: 179, baseType: !79, size: 16, offset: 1440)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "menunr", scope: !871, file: !845, line: 179, baseType: !79, size: 16, offset: 1456)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !871, file: !845, line: 180, baseType: !79, size: 16, offset: 1472)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !871, file: !845, line: 181, baseType: !79, size: 16, offset: 1488)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !871, file: !845, line: 182, baseType: !96, size: 96, offset: 1504)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !871, file: !845, line: 184, baseType: !227, size: 128, offset: 1600)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !871, file: !845, line: 184, baseType: !227, size: 128, offset: 1728)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !871, file: !845, line: 185, baseType: !870, size: 64, offset: 1856)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !871, file: !845, line: 186, baseType: !264, size: 64, offset: 1920)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "storage", scope: !871, file: !845, line: 187, baseType: !64, size: 64, offset: 1984)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "original", scope: !871, file: !845, line: 188, baseType: !870, size: 64, offset: 2048)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "internal_links", scope: !871, file: !845, line: 189, baseType: !227, size: 128, offset: 2112)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "locx", scope: !871, file: !845, line: 191, baseType: !6, size: 32, offset: 2240)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "locy", scope: !871, file: !845, line: 191, baseType: !6, size: 32, offset: 2272)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !871, file: !845, line: 192, baseType: !6, size: 32, offset: 2304)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !871, file: !845, line: 192, baseType: !6, size: 32, offset: 2336)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "miniwidth", scope: !871, file: !845, line: 193, baseType: !6, size: 32, offset: 2368)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "offsetx", scope: !871, file: !845, line: 194, baseType: !6, size: 32, offset: 2400)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "offsety", scope: !871, file: !845, line: 194, baseType: !6, size: 32, offset: 2432)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !871, file: !845, line: 196, baseType: !12, size: 32, offset: 2464)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !871, file: !845, line: 198, baseType: !304, size: 512, offset: 2496)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "custom1", scope: !871, file: !845, line: 199, baseType: !79, size: 16, offset: 3008)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "custom2", scope: !871, file: !845, line: 199, baseType: !79, size: 16, offset: 3024)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "custom3", scope: !871, file: !845, line: 200, baseType: !6, size: 32, offset: 3040)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "custom4", scope: !871, file: !845, line: 200, baseType: !6, size: 32, offset: 3072)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "need_exec", scope: !871, file: !845, line: 202, baseType: !79, size: 16, offset: 3104)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !871, file: !845, line: 202, baseType: !79, size: 16, offset: 3120)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "threaddata", scope: !871, file: !845, line: 203, baseType: !64, size: 64, offset: 3136)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "totr", scope: !871, file: !845, line: 204, baseType: !1197, size: 128, offset: 3200)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !217, line: 95, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !217, line: 92, size: 128, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1198, file: !217, line: 93, baseType: !6, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1198, file: !217, line: 93, baseType: !6, size: 32, offset: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1198, file: !217, line: 94, baseType: !6, size: 32, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1198, file: !217, line: 94, baseType: !6, size: 32, offset: 96)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "butr", scope: !871, file: !845, line: 205, baseType: !1197, size: 128, offset: 3328)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "prvr", scope: !871, file: !845, line: 206, baseType: !1197, size: 128, offset: 3456)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "preview_xsize", scope: !871, file: !845, line: 215, baseType: !79, size: 16, offset: 3584)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "preview_ysize", scope: !871, file: !845, line: 215, baseType: !79, size: 16, offset: 3600)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !871, file: !845, line: 216, baseType: !12, size: 32, offset: 3616)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !871, file: !845, line: 217, baseType: !1210, size: 64, offset: 3648)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !845, line: 51, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "foreach_nodeclass", scope: !851, file: !852, line: 294, baseType: !1213, size: 64, offset: 3264)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{null, !740, !64, !1216}
!1216 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeClassCallback", file: !852, line: 282, baseType: !1217)
!1217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1218, size: 64)
!1218 = !DISubroutineType(types: !1219)
!1219 = !{null, !64, !12, !954}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !851, file: !852, line: 296, baseType: !1221, size: 64, offset: 3328)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!12, !1062, !850}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "get_from_context", scope: !851, file: !852, line: 298, baseType: !1225, size: 64, offset: 3392)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{null, !1062, !850, !1228, !1229, !1229}
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "localize", scope: !851, file: !852, line: 302, baseType: !1231, size: 64, offset: 3456)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{null, !843, !843}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "local_sync", scope: !851, file: !852, line: 303, baseType: !1231, size: 64, offset: 3520)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "local_merge", scope: !851, file: !852, line: 304, baseType: !1231, size: 64, offset: 3584)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !851, file: !852, line: 307, baseType: !863, size: 64, offset: 3648)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "validate_link", scope: !851, file: !852, line: 309, baseType: !1238, size: 64, offset: 3712)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DISubroutineType(types: !1240)
!1240 = !{!12, !843, !1025}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "node_add_init", scope: !851, file: !852, line: 311, baseType: !867, size: 64, offset: 3776)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !851, file: !852, line: 314, baseType: !982, size: 256, offset: 3840)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !844, file: !845, line: 333, baseType: !304, size: 512, offset: 1088)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !844, file: !845, line: 335, baseType: !951, size: 64, offset: 1600)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !844, file: !845, line: 337, baseType: !574, size: 64, offset: 1664)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !844, file: !845, line: 338, baseType: !730, size: 64, offset: 1728)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !844, file: !845, line: 340, baseType: !227, size: 128, offset: 1792)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !844, file: !845, line: 340, baseType: !227, size: 128, offset: 1920)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !844, file: !845, line: 342, baseType: !12, size: 32, offset: 2048)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !844, file: !845, line: 342, baseType: !12, size: 32, offset: 2080)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !844, file: !845, line: 343, baseType: !12, size: 32, offset: 2112)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !844, file: !845, line: 345, baseType: !12, size: 32, offset: 2144)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !844, file: !845, line: 346, baseType: !12, size: 32, offset: 2176)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !844, file: !845, line: 347, baseType: !79, size: 16, offset: 2208)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !844, file: !845, line: 348, baseType: !79, size: 16, offset: 2224)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !844, file: !845, line: 349, baseType: !12, size: 32, offset: 2240)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !844, file: !845, line: 351, baseType: !12, size: 32, offset: 2272)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !844, file: !845, line: 353, baseType: !79, size: 16, offset: 2304)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !844, file: !845, line: 354, baseType: !79, size: 16, offset: 2320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !844, file: !845, line: 355, baseType: !12, size: 32, offset: 2336)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !844, file: !845, line: 357, baseType: !1197, size: 128, offset: 2368)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !844, file: !845, line: 363, baseType: !227, size: 128, offset: 2496)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !844, file: !845, line: 363, baseType: !227, size: 128, offset: 2624)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !844, file: !845, line: 368, baseType: !1265, size: 64, offset: 2752)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !852, line: 500, size: 64, elements: !1267)
!1267 = !{!1268}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1266, file: !852, line: 502, baseType: !1269, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !538, line: 48, baseType: !537)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !844, file: !845, line: 372, baseType: !1068, size: 32, offset: 2816)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !844, file: !845, line: 373, baseType: !12, size: 32, offset: 2848)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !844, file: !845, line: 382, baseType: !1274, size: 64, offset: 2880)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !845, line: 46, flags: DIFlagFwdDecl)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !844, file: !845, line: 385, baseType: !1277, size: 64, offset: 2944)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{null, !64, !6}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !844, file: !845, line: 386, baseType: !1281, size: 64, offset: 3008)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{null, !64, !602}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !844, file: !845, line: 387, baseType: !1285, size: 64, offset: 3072)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DISubroutineType(types: !1287)
!1287 = !{!12, !64}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !844, file: !845, line: 388, baseType: !1007, size: 64, offset: 3136)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !844, file: !845, line: 389, baseType: !64, size: 64, offset: 3200)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !844, file: !845, line: 389, baseType: !64, size: 64, offset: 3264)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !844, file: !845, line: 389, baseType: !64, size: 64, offset: 3328)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !844, file: !845, line: 389, baseType: !64, size: 64, offset: 3392)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !741, file: !11, line: 1223, baseType: !740, size: 64, offset: 1152)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !741, file: !11, line: 1225, baseType: !227, size: 128, offset: 1216)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !741, file: !11, line: 1226, baseType: !1296, size: 64, offset: 1344)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !11, line: 69, size: 320, elements: !1298)
!1298 = !{!1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1297, file: !11, line: 70, baseType: !1296, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1297, file: !11, line: 70, baseType: !1296, size: 64, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1297, file: !11, line: 71, baseType: !48, size: 32, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1297, file: !11, line: 71, baseType: !48, size: 32, offset: 160)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1297, file: !11, line: 72, baseType: !12, size: 32, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1297, file: !11, line: 73, baseType: !79, size: 16, offset: 224)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1297, file: !11, line: 73, baseType: !79, size: 16, offset: 240)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1297, file: !11, line: 74, baseType: !484, size: 64, offset: 256)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !741, file: !11, line: 1227, baseType: !484, size: 64, offset: 1408)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !741, file: !11, line: 1229, baseType: !96, size: 96, offset: 1472)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !741, file: !11, line: 1230, baseType: !96, size: 96, offset: 1568)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !741, file: !11, line: 1231, baseType: !96, size: 96, offset: 1664)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !741, file: !11, line: 1231, baseType: !96, size: 96, offset: 1760)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !741, file: !11, line: 1233, baseType: !48, size: 32, offset: 1856)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !741, file: !11, line: 1234, baseType: !12, size: 32, offset: 1888)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !741, file: !11, line: 1235, baseType: !48, size: 32, offset: 1920)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !741, file: !11, line: 1237, baseType: !79, size: 16, offset: 1952)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !741, file: !11, line: 1239, baseType: !189, size: 8, offset: 1968)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !741, file: !11, line: 1240, baseType: !451, size: 8, offset: 1976)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !741, file: !11, line: 1242, baseType: !843, size: 64, offset: 1984)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !741, file: !11, line: 1244, baseType: !1320, size: 64, offset: 2048)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !11, line: 59, flags: DIFlagFwdDecl)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !741, file: !11, line: 1246, baseType: !1323, size: 64, offset: 2112)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !11, line: 1067, size: 5184, elements: !1325)
!1325 = !{!1326, !1355, !1356, !1371, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1393, !1469, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1580}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1324, file: !11, line: 1068, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !11, line: 934, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !11, line: 925, size: 576, elements: !1330)
!1330 = !{!1331, !1347, !1348, !1349, !1350, !1351, !1354}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1329, file: !11, line: 926, baseType: !1332, size: 320)
!1332 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !11, line: 830, baseType: !1333)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !11, line: 813, size: 320, elements: !1334)
!1334 = !{!1335, !1338, !1341, !1342, !1344, !1345, !1346}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1333, file: !11, line: 814, baseType: !1336, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !11, line: 51, flags: DIFlagFwdDecl)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1333, file: !11, line: 815, baseType: !1339, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !11, line: 815, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1333, file: !11, line: 818, baseType: !64, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1333, file: !11, line: 819, baseType: !1343, size: 32, offset: 192)
!1343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !198, size: 32, elements: !434)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1333, file: !11, line: 822, baseType: !12, size: 32, offset: 224)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1333, file: !11, line: 826, baseType: !12, size: 32, offset: 256)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1333, file: !11, line: 829, baseType: !12, size: 32, offset: 288)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1329, file: !11, line: 928, baseType: !79, size: 16, offset: 320)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1329, file: !11, line: 928, baseType: !79, size: 16, offset: 336)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1329, file: !11, line: 929, baseType: !12, size: 32, offset: 352)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1329, file: !11, line: 930, baseType: !837, size: 64, offset: 384)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1329, file: !11, line: 931, baseType: !1352, size: 64, offset: 448)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !11, line: 931, flags: DIFlagFwdDecl)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1329, file: !11, line: 933, baseType: !64, size: 64, offset: 512)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1324, file: !11, line: 1069, baseType: !1327, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1324, file: !11, line: 1070, baseType: !1357, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !11, line: 916, baseType: !1359)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !11, line: 891, size: 704, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1365, !1366, !1367, !1368, !1369, !1370}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1359, file: !11, line: 892, baseType: !1332, size: 320)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1359, file: !11, line: 896, baseType: !12, size: 32, offset: 320)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1359, file: !11, line: 900, baseType: !1364, size: 96, offset: 352)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 96, elements: !97)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1359, file: !11, line: 903, baseType: !6, size: 32, offset: 448)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1359, file: !11, line: 906, baseType: !12, size: 32, offset: 480)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1359, file: !11, line: 909, baseType: !6, size: 32, offset: 512)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1359, file: !11, line: 912, baseType: !6, size: 32, offset: 544)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1359, file: !11, line: 914, baseType: !484, size: 64, offset: 576)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1359, file: !11, line: 915, baseType: !64, size: 64, offset: 640)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1324, file: !11, line: 1071, baseType: !1372, size: 64, offset: 192)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !11, line: 920, baseType: !1374)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !11, line: 918, size: 320, elements: !1375)
!1375 = !{!1376}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1374, file: !11, line: 919, baseType: !1332, size: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1324, file: !11, line: 1075, baseType: !6, size: 32, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1324, file: !11, line: 1077, baseType: !6, size: 32, offset: 288)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1324, file: !11, line: 1078, baseType: !6, size: 32, offset: 320)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1324, file: !11, line: 1079, baseType: !79, size: 16, offset: 352)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1324, file: !11, line: 1082, baseType: !79, size: 16, offset: 368)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1324, file: !11, line: 1085, baseType: !189, size: 8, offset: 384)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1324, file: !11, line: 1086, baseType: !189, size: 8, offset: 392)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1324, file: !11, line: 1087, baseType: !189, size: 8, offset: 400)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1324, file: !11, line: 1088, baseType: !189, size: 8, offset: 408)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1324, file: !11, line: 1090, baseType: !6, size: 32, offset: 416)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1324, file: !11, line: 1093, baseType: !79, size: 16, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1324, file: !11, line: 1096, baseType: !189, size: 8, offset: 464)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1324, file: !11, line: 1098, baseType: !1390, size: 40, offset: 472)
!1390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 40, elements: !1391)
!1391 = !{!1392}
!1392 = !DISubrange(count: 5)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1324, file: !11, line: 1101, baseType: !1394, size: 832, offset: 512)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !11, line: 836, size: 832, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1465, !1466, !1467, !1468}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1394, file: !11, line: 837, baseType: !1332, size: 320)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1394, file: !11, line: 839, baseType: !79, size: 16, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1394, file: !11, line: 839, baseType: !79, size: 16, offset: 336)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1394, file: !11, line: 842, baseType: !79, size: 16, offset: 352)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1394, file: !11, line: 842, baseType: !79, size: 16, offset: 368)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1394, file: !11, line: 843, baseType: !825, size: 32, offset: 384)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1394, file: !11, line: 845, baseType: !12, size: 32, offset: 416)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1394, file: !11, line: 847, baseType: !64, size: 64, offset: 448)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1394, file: !11, line: 848, baseType: !1405, size: 64, offset: 512)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !736, line: 77, size: 15424, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1413, !1414, !1417, !1418, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1454, !1455, !1459}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1406, file: !736, line: 78, baseType: !257, size: 960)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1406, file: !736, line: 80, baseType: !276, size: 8192, offset: 960)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1406, file: !736, line: 82, baseType: !1411, size: 64, offset: 9152)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !736, line: 43, flags: DIFlagFwdDecl)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1406, file: !736, line: 83, baseType: !840, size: 64, offset: 9216)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1406, file: !736, line: 86, baseType: !1415, size: 64, offset: 9280)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !736, line: 41, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1406, file: !736, line: 87, baseType: !205, size: 64, offset: 9344)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1406, file: !736, line: 89, baseType: !1419, size: 512, offset: 9408)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 512, elements: !130)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1406, file: !736, line: 90, baseType: !79, size: 16, offset: 9920)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1406, file: !736, line: 90, baseType: !79, size: 16, offset: 9936)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1406, file: !736, line: 92, baseType: !79, size: 16, offset: 9952)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1406, file: !736, line: 92, baseType: !79, size: 16, offset: 9968)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1406, file: !736, line: 93, baseType: !79, size: 16, offset: 9984)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1406, file: !736, line: 93, baseType: !79, size: 16, offset: 10000)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1406, file: !736, line: 94, baseType: !12, size: 32, offset: 10016)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1406, file: !736, line: 97, baseType: !79, size: 16, offset: 10048)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1406, file: !736, line: 97, baseType: !79, size: 16, offset: 10064)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1406, file: !736, line: 98, baseType: !79, size: 16, offset: 10080)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1406, file: !736, line: 98, baseType: !79, size: 16, offset: 10096)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1406, file: !736, line: 99, baseType: !79, size: 16, offset: 10112)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1406, file: !736, line: 99, baseType: !79, size: 16, offset: 10128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1406, file: !736, line: 100, baseType: !48, size: 32, offset: 10144)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1406, file: !736, line: 101, baseType: !837, size: 64, offset: 10176)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1406, file: !736, line: 103, baseType: !282, size: 64, offset: 10240)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1406, file: !736, line: 104, baseType: !827, size: 64, offset: 10304)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1406, file: !736, line: 107, baseType: !6, size: 32, offset: 10368)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1406, file: !736, line: 108, baseType: !12, size: 32, offset: 10400)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1406, file: !736, line: 109, baseType: !79, size: 16, offset: 10432)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1406, file: !736, line: 110, baseType: !79, size: 16, offset: 10448)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1406, file: !736, line: 113, baseType: !12, size: 32, offset: 10464)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1406, file: !736, line: 113, baseType: !12, size: 32, offset: 10496)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1406, file: !736, line: 114, baseType: !189, size: 8, offset: 10528)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1406, file: !736, line: 114, baseType: !189, size: 8, offset: 10536)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1406, file: !736, line: 115, baseType: !79, size: 16, offset: 10544)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1406, file: !736, line: 116, baseType: !433, size: 128, offset: 10560)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1406, file: !736, line: 119, baseType: !6, size: 32, offset: 10688)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1406, file: !736, line: 119, baseType: !6, size: 32, offset: 10720)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1406, file: !736, line: 122, baseType: !1450, size: 512, offset: 10752)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1087, line: 182, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1087, line: 180, size: 512, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1451, file: !1087, line: 181, baseType: !304, size: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1406, file: !736, line: 123, baseType: !189, size: 8, offset: 11264)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1406, file: !736, line: 125, baseType: !1456, size: 56, offset: 11272)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 56, elements: !1457)
!1457 = !{!1458}
!1458 = !DISubrange(count: 7)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1406, file: !736, line: 126, baseType: !1460, size: 4096, offset: 11328)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1461, size: 4096, elements: !130)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !736, line: 69, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !736, line: 67, size: 512, elements: !1463)
!1463 = !{!1464}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1462, file: !736, line: 68, baseType: !304, size: 512)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1394, file: !11, line: 849, baseType: !1405, size: 64, offset: 576)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1394, file: !11, line: 850, baseType: !1405, size: 64, offset: 640)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1394, file: !11, line: 851, baseType: !96, size: 96, offset: 704)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1394, file: !11, line: 852, baseType: !6, size: 32, offset: 800)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1324, file: !11, line: 1104, baseType: !1470, size: 1344, offset: 1344)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !11, line: 867, size: 1344, elements: !1471)
!1471 = !{!1472, !1473, !1474, !1475, !1476, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1470, file: !11, line: 868, baseType: !79, size: 16)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1470, file: !11, line: 869, baseType: !79, size: 16, offset: 16)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1470, file: !11, line: 870, baseType: !79, size: 16, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1470, file: !11, line: 871, baseType: !79, size: 16, offset: 48)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1470, file: !11, line: 873, baseType: !1477, size: 896, offset: 64)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 896, elements: !1457)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !11, line: 864, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !11, line: 859, size: 128, elements: !1480)
!1480 = !{!1481, !1482, !1483, !1484, !1485, !1486}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1479, file: !11, line: 860, baseType: !79, size: 16)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1479, file: !11, line: 861, baseType: !79, size: 16, offset: 16)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1479, file: !11, line: 861, baseType: !79, size: 16, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1479, file: !11, line: 861, baseType: !79, size: 16, offset: 48)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1479, file: !11, line: 862, baseType: !12, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1479, file: !11, line: 863, baseType: !6, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1470, file: !11, line: 874, baseType: !64, size: 64, offset: 960)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1470, file: !11, line: 876, baseType: !6, size: 32, offset: 1024)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1470, file: !11, line: 876, baseType: !6, size: 32, offset: 1056)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1470, file: !11, line: 878, baseType: !12, size: 32, offset: 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1470, file: !11, line: 879, baseType: !12, size: 32, offset: 1120)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1470, file: !11, line: 881, baseType: !12, size: 32, offset: 1152)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1470, file: !11, line: 881, baseType: !12, size: 32, offset: 1184)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1470, file: !11, line: 883, baseType: !740, size: 64, offset: 1216)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1470, file: !11, line: 884, baseType: !484, size: 64, offset: 1280)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1324, file: !11, line: 1107, baseType: !6, size: 32, offset: 2688)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1324, file: !11, line: 1110, baseType: !6, size: 32, offset: 2720)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1324, file: !11, line: 1113, baseType: !79, size: 16, offset: 2752)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1324, file: !11, line: 1113, baseType: !79, size: 16, offset: 2768)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1324, file: !11, line: 1116, baseType: !189, size: 8, offset: 2784)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1324, file: !11, line: 1117, baseType: !451, size: 8, offset: 2792)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1324, file: !11, line: 1120, baseType: !79, size: 16, offset: 2800)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1324, file: !11, line: 1121, baseType: !6, size: 32, offset: 2816)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1324, file: !11, line: 1122, baseType: !6, size: 32, offset: 2848)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1324, file: !11, line: 1123, baseType: !6, size: 32, offset: 2880)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1324, file: !11, line: 1124, baseType: !6, size: 32, offset: 2912)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1324, file: !11, line: 1125, baseType: !6, size: 32, offset: 2944)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1324, file: !11, line: 1126, baseType: !6, size: 32, offset: 2976)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1324, file: !11, line: 1127, baseType: !6, size: 32, offset: 3008)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1324, file: !11, line: 1128, baseType: !6, size: 32, offset: 3040)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1324, file: !11, line: 1129, baseType: !6, size: 32, offset: 3072)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1324, file: !11, line: 1130, baseType: !6, size: 32, offset: 3104)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1324, file: !11, line: 1131, baseType: !79, size: 16, offset: 3136)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1324, file: !11, line: 1132, baseType: !189, size: 8, offset: 3152)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1324, file: !11, line: 1133, baseType: !189, size: 8, offset: 3160)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1324, file: !11, line: 1134, baseType: !1517, size: 24, offset: 3168)
!1517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 24, elements: !97)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1324, file: !11, line: 1135, baseType: !189, size: 8, offset: 3192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1324, file: !11, line: 1138, baseType: !484, size: 64, offset: 3200)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1324, file: !11, line: 1139, baseType: !189, size: 8, offset: 3264)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1324, file: !11, line: 1140, baseType: !189, size: 8, offset: 3272)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1324, file: !11, line: 1141, baseType: !189, size: 8, offset: 3280)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1324, file: !11, line: 1142, baseType: !189, size: 8, offset: 3288)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1324, file: !11, line: 1143, baseType: !189, size: 8, offset: 3296)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1324, file: !11, line: 1144, baseType: !1526, size: 64, offset: 3304)
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 64, elements: !130)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1324, file: !11, line: 1145, baseType: !1526, size: 64, offset: 3368)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1324, file: !11, line: 1148, baseType: !189, size: 8, offset: 3432)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1324, file: !11, line: 1149, baseType: !189, size: 8, offset: 3440)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1324, file: !11, line: 1152, baseType: !189, size: 8, offset: 3448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1324, file: !11, line: 1152, baseType: !189, size: 8, offset: 3456)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1324, file: !11, line: 1153, baseType: !189, size: 8, offset: 3464)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1324, file: !11, line: 1154, baseType: !79, size: 16, offset: 3472)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1324, file: !11, line: 1154, baseType: !79, size: 16, offset: 3488)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1324, file: !11, line: 1155, baseType: !79, size: 16, offset: 3504)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1324, file: !11, line: 1155, baseType: !79, size: 16, offset: 3520)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1324, file: !11, line: 1156, baseType: !189, size: 8, offset: 3536)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1324, file: !11, line: 1157, baseType: !189, size: 8, offset: 3544)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1324, file: !11, line: 1159, baseType: !189, size: 8, offset: 3552)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1324, file: !11, line: 1160, baseType: !189, size: 8, offset: 3560)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1324, file: !11, line: 1161, baseType: !189, size: 8, offset: 3568)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1324, file: !11, line: 1162, baseType: !189, size: 8, offset: 3576)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1324, file: !11, line: 1165, baseType: !12, size: 32, offset: 3584)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1324, file: !11, line: 1166, baseType: !12, size: 32, offset: 3616)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1324, file: !11, line: 1167, baseType: !12, size: 32, offset: 3648)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1324, file: !11, line: 1168, baseType: !12, size: 32, offset: 3680)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1324, file: !11, line: 1171, baseType: !79, size: 16, offset: 3712)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1324, file: !11, line: 1171, baseType: !79, size: 16, offset: 3728)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1324, file: !11, line: 1172, baseType: !12, size: 32, offset: 3744)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1324, file: !11, line: 1173, baseType: !6, size: 32, offset: 3776)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1324, file: !11, line: 1174, baseType: !6, size: 32, offset: 3808)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1324, file: !11, line: 1177, baseType: !1553, size: 1024, offset: 3840)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !11, line: 963, size: 1024, elements: !1554)
!1554 = !{!1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1578, !1579}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1553, file: !11, line: 965, baseType: !12, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1553, file: !11, line: 968, baseType: !6, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1553, file: !11, line: 971, baseType: !6, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1553, file: !11, line: 974, baseType: !6, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1553, file: !11, line: 977, baseType: !96, size: 96, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1553, file: !11, line: 979, baseType: !96, size: 96, offset: 224)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1553, file: !11, line: 982, baseType: !12, size: 32, offset: 320)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1553, file: !11, line: 987, baseType: !730, size: 64, offset: 352)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1553, file: !11, line: 989, baseType: !6, size: 32, offset: 416)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1553, file: !11, line: 994, baseType: !12, size: 32, offset: 448)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1553, file: !11, line: 995, baseType: !12, size: 32, offset: 480)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1553, file: !11, line: 997, baseType: !189, size: 8, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1553, file: !11, line: 998, baseType: !1456, size: 56, offset: 520)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1553, file: !11, line: 1000, baseType: !6, size: 32, offset: 576)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1553, file: !11, line: 1003, baseType: !730, size: 64, offset: 608)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1553, file: !11, line: 1006, baseType: !12, size: 32, offset: 672)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1553, file: !11, line: 1009, baseType: !6, size: 32, offset: 704)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1553, file: !11, line: 1012, baseType: !730, size: 64, offset: 736)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1553, file: !11, line: 1015, baseType: !730, size: 64, offset: 800)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1553, file: !11, line: 1018, baseType: !12, size: 32, offset: 864)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1553, file: !11, line: 1019, baseType: !1576, size: 64, offset: 896)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !11, line: 63, flags: DIFlagFwdDecl)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1553, file: !11, line: 1023, baseType: !6, size: 32, offset: 960)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1553, file: !11, line: 1024, baseType: !12, size: 32, offset: 992)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1324, file: !11, line: 1179, baseType: !1581, size: 320, offset: 4864)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !11, line: 1043, size: 320, elements: !1582)
!1582 = !{!1583, !1584, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1581, file: !11, line: 1044, baseType: !189, size: 8)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1581, file: !11, line: 1045, baseType: !1585, size: 16, offset: 8)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 16, elements: !731)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1581, file: !11, line: 1048, baseType: !189, size: 8, offset: 24)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1581, file: !11, line: 1049, baseType: !6, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1581, file: !11, line: 1049, baseType: !6, size: 32, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1581, file: !11, line: 1052, baseType: !6, size: 32, offset: 96)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1581, file: !11, line: 1052, baseType: !6, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1581, file: !11, line: 1053, baseType: !189, size: 8, offset: 160)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1581, file: !11, line: 1054, baseType: !1517, size: 24, offset: 168)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1581, file: !11, line: 1057, baseType: !6, size: 32, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1581, file: !11, line: 1057, baseType: !6, size: 32, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1581, file: !11, line: 1060, baseType: !6, size: 32, offset: 256)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1581, file: !11, line: 1060, baseType: !6, size: 32, offset: 288)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !741, file: !11, line: 1247, baseType: !1598, size: 64, offset: 2176)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !11, line: 60, flags: DIFlagFwdDecl)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !741, file: !11, line: 1251, baseType: !1601, size: 31872, offset: 2240)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !11, line: 403, size: 31872, elements: !1602)
!1602 = !{!1603, !1678, !1698, !1707, !1727, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1861, !1862, !1863, !1865, !1881, !1882}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1601, file: !11, line: 404, baseType: !1604, size: 1984)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !11, line: 259, size: 1984, elements: !1605)
!1605 = !{!1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1623, !1673}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1604, file: !11, line: 260, baseType: !189, size: 8)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1604, file: !11, line: 263, baseType: !189, size: 8, offset: 8)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1604, file: !11, line: 266, baseType: !189, size: 8, offset: 16)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1604, file: !11, line: 267, baseType: !189, size: 8, offset: 24)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1604, file: !11, line: 269, baseType: !189, size: 8, offset: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1604, file: !11, line: 270, baseType: !189, size: 8, offset: 40)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1604, file: !11, line: 276, baseType: !189, size: 8, offset: 48)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1604, file: !11, line: 279, baseType: !189, size: 8, offset: 56)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1604, file: !11, line: 280, baseType: !79, size: 16, offset: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1604, file: !11, line: 280, baseType: !79, size: 16, offset: 80)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1604, file: !11, line: 281, baseType: !6, size: 32, offset: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1604, file: !11, line: 284, baseType: !189, size: 8, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1604, file: !11, line: 285, baseType: !189, size: 8, offset: 136)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1604, file: !11, line: 287, baseType: !1620, size: 48, offset: 144)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 48, elements: !1621)
!1621 = !{!1622}
!1622 = !DISubrange(count: 6)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1604, file: !11, line: 290, baseType: !1624, size: 1280, offset: 192)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1087, line: 174, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1087, line: 166, size: 1280, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1672}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1625, file: !1087, line: 167, baseType: !12, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1625, file: !1087, line: 167, baseType: !12, size: 32, offset: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1625, file: !1087, line: 168, baseType: !304, size: 512, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1625, file: !1087, line: 169, baseType: !304, size: 512, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1625, file: !1087, line: 170, baseType: !6, size: 32, offset: 1088)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1625, file: !1087, line: 171, baseType: !6, size: 32, offset: 1120)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1625, file: !1087, line: 172, baseType: !1634, size: 64, offset: 1152)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1087, line: 72, size: 3072, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1668, !1669, !1670, !1671}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1635, file: !1087, line: 73, baseType: !12, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1635, file: !1087, line: 73, baseType: !12, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1635, file: !1087, line: 74, baseType: !12, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1635, file: !1087, line: 75, baseType: !12, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1635, file: !1087, line: 77, baseType: !1197, size: 128, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1635, file: !1087, line: 77, baseType: !1197, size: 128, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1635, file: !1087, line: 79, baseType: !1644, size: 2304, offset: 384)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1645, size: 2304, elements: !434)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1087, line: 67, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1087, line: 55, size: 576, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1664, !1665, !1666, !1667}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1646, file: !1087, line: 56, baseType: !79, size: 16)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1646, file: !1087, line: 56, baseType: !79, size: 16, offset: 16)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1646, file: !1087, line: 58, baseType: !6, size: 32, offset: 32)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1646, file: !1087, line: 59, baseType: !6, size: 32, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1646, file: !1087, line: 59, baseType: !6, size: 32, offset: 96)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1646, file: !1087, line: 60, baseType: !730, size: 64, offset: 128)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1646, file: !1087, line: 60, baseType: !730, size: 64, offset: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1646, file: !1087, line: 61, baseType: !1656, size: 64, offset: 256)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1087, line: 47, baseType: !1658)
!1658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1087, line: 44, size: 96, elements: !1659)
!1659 = !{!1660, !1661, !1662, !1663}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1658, file: !1087, line: 45, baseType: !6, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1658, file: !1087, line: 45, baseType: !6, size: 32, offset: 32)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1658, file: !1087, line: 46, baseType: !79, size: 16, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1658, file: !1087, line: 46, baseType: !79, size: 16, offset: 80)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1646, file: !1087, line: 62, baseType: !1656, size: 64, offset: 320)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1646, file: !1087, line: 64, baseType: !1656, size: 64, offset: 384)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1646, file: !1087, line: 65, baseType: !730, size: 64, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1646, file: !1087, line: 66, baseType: !730, size: 64, offset: 512)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1635, file: !1087, line: 80, baseType: !96, size: 96, offset: 2688)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1635, file: !1087, line: 80, baseType: !96, size: 96, offset: 2784)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1635, file: !1087, line: 81, baseType: !96, size: 96, offset: 2880)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1635, file: !1087, line: 83, baseType: !96, size: 96, offset: 2976)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1625, file: !1087, line: 173, baseType: !64, size: 64, offset: 1216)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1604, file: !11, line: 291, baseType: !1674, size: 512, offset: 1472)
!1674 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1087, line: 178, baseType: !1675)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1087, line: 176, size: 512, elements: !1676)
!1676 = !{!1677}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1675, file: !1087, line: 177, baseType: !304, size: 512)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1601, file: !11, line: 406, baseType: !1679, size: 64, offset: 1984)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !11, line: 80, size: 1472, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1680, file: !11, line: 81, baseType: !64, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1680, file: !11, line: 82, baseType: !64, size: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1680, file: !11, line: 83, baseType: !48, size: 32, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1680, file: !11, line: 84, baseType: !48, size: 32, offset: 160)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1680, file: !11, line: 86, baseType: !48, size: 32, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1680, file: !11, line: 87, baseType: !48, size: 32, offset: 224)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1680, file: !11, line: 88, baseType: !48, size: 32, offset: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1680, file: !11, line: 89, baseType: !48, size: 32, offset: 288)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1680, file: !11, line: 90, baseType: !48, size: 32, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1680, file: !11, line: 91, baseType: !48, size: 32, offset: 352)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1680, file: !11, line: 92, baseType: !48, size: 32, offset: 384)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1680, file: !11, line: 93, baseType: !48, size: 32, offset: 416)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1680, file: !11, line: 95, baseType: !1695, size: 1024, offset: 448)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 1024, elements: !1696)
!1696 = !{!1697}
!1697 = !DISubrange(count: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1601, file: !11, line: 407, baseType: !1699, size: 64, offset: 2048)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !11, line: 98, size: 1216, elements: !1701)
!1701 = !{!1702, !1703, !1704, !1705, !1706}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1700, file: !11, line: 100, baseType: !64, size: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1700, file: !11, line: 101, baseType: !64, size: 64, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1700, file: !11, line: 103, baseType: !48, size: 32, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1700, file: !11, line: 104, baseType: !48, size: 32, offset: 160)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1700, file: !11, line: 106, baseType: !1695, size: 1024, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1601, file: !11, line: 408, baseType: !1708, size: 512, offset: 2112)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !11, line: 109, size: 512, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1708, file: !11, line: 111, baseType: !12, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1708, file: !11, line: 112, baseType: !12, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1708, file: !11, line: 115, baseType: !12, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1708, file: !11, line: 116, baseType: !12, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1708, file: !11, line: 117, baseType: !12, size: 32, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1708, file: !11, line: 118, baseType: !12, size: 32, offset: 160)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1708, file: !11, line: 119, baseType: !12, size: 32, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1708, file: !11, line: 120, baseType: !12, size: 32, offset: 224)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1708, file: !11, line: 121, baseType: !12, size: 32, offset: 256)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1708, file: !11, line: 122, baseType: !12, size: 32, offset: 288)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1708, file: !11, line: 125, baseType: !12, size: 32, offset: 320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1708, file: !11, line: 126, baseType: !12, size: 32, offset: 352)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1708, file: !11, line: 127, baseType: !79, size: 16, offset: 384)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1708, file: !11, line: 128, baseType: !79, size: 16, offset: 400)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1708, file: !11, line: 129, baseType: !12, size: 32, offset: 416)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1708, file: !11, line: 130, baseType: !12, size: 32, offset: 448)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1708, file: !11, line: 131, baseType: !12, size: 32, offset: 480)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1601, file: !11, line: 409, baseType: !1728, size: 576, offset: 2624)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !11, line: 134, size: 576, elements: !1729)
!1729 = !{!1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1728, file: !11, line: 135, baseType: !12, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1728, file: !11, line: 136, baseType: !12, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1728, file: !11, line: 137, baseType: !12, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1728, file: !11, line: 138, baseType: !12, size: 32, offset: 96)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1728, file: !11, line: 139, baseType: !12, size: 32, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1728, file: !11, line: 140, baseType: !12, size: 32, offset: 160)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1728, file: !11, line: 141, baseType: !12, size: 32, offset: 192)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1728, file: !11, line: 142, baseType: !12, size: 32, offset: 224)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1728, file: !11, line: 143, baseType: !6, size: 32, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1728, file: !11, line: 144, baseType: !12, size: 32, offset: 288)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1728, file: !11, line: 145, baseType: !12, size: 32, offset: 320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1728, file: !11, line: 147, baseType: !12, size: 32, offset: 352)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1728, file: !11, line: 148, baseType: !12, size: 32, offset: 384)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1728, file: !11, line: 149, baseType: !12, size: 32, offset: 416)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1728, file: !11, line: 150, baseType: !12, size: 32, offset: 448)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1728, file: !11, line: 151, baseType: !12, size: 32, offset: 480)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1728, file: !11, line: 152, baseType: !293, size: 64, offset: 512)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1601, file: !11, line: 411, baseType: !12, size: 32, offset: 3200)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1601, file: !11, line: 411, baseType: !12, size: 32, offset: 3232)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1601, file: !11, line: 411, baseType: !12, size: 32, offset: 3264)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1601, file: !11, line: 412, baseType: !6, size: 32, offset: 3296)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1601, file: !11, line: 413, baseType: !12, size: 32, offset: 3328)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1601, file: !11, line: 413, baseType: !12, size: 32, offset: 3360)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1601, file: !11, line: 415, baseType: !12, size: 32, offset: 3392)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1601, file: !11, line: 415, baseType: !12, size: 32, offset: 3424)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1601, file: !11, line: 416, baseType: !79, size: 16, offset: 3456)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1601, file: !11, line: 416, baseType: !79, size: 16, offset: 3472)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1601, file: !11, line: 418, baseType: !6, size: 32, offset: 3488)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1601, file: !11, line: 418, baseType: !6, size: 32, offset: 3520)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1601, file: !11, line: 421, baseType: !6, size: 32, offset: 3552)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1601, file: !11, line: 421, baseType: !6, size: 32, offset: 3584)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1601, file: !11, line: 421, baseType: !6, size: 32, offset: 3616)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1601, file: !11, line: 425, baseType: !79, size: 16, offset: 3648)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1601, file: !11, line: 425, baseType: !79, size: 16, offset: 3664)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1601, file: !11, line: 425, baseType: !79, size: 16, offset: 3680)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1601, file: !11, line: 426, baseType: !79, size: 16, offset: 3696)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1601, file: !11, line: 428, baseType: !79, size: 16, offset: 3712)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1601, file: !11, line: 428, baseType: !79, size: 16, offset: 3728)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1601, file: !11, line: 431, baseType: !12, size: 32, offset: 3744)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1601, file: !11, line: 433, baseType: !79, size: 16, offset: 3776)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1601, file: !11, line: 435, baseType: !79, size: 16, offset: 3792)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1601, file: !11, line: 437, baseType: !79, size: 16, offset: 3808)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1601, file: !11, line: 439, baseType: !79, size: 16, offset: 3824)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1601, file: !11, line: 441, baseType: !79, size: 16, offset: 3840)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1601, file: !11, line: 443, baseType: !79, size: 16, offset: 3856)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1601, file: !11, line: 449, baseType: !12, size: 32, offset: 3872)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1601, file: !11, line: 453, baseType: !12, size: 32, offset: 3904)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1601, file: !11, line: 458, baseType: !79, size: 16, offset: 3936)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1601, file: !11, line: 462, baseType: !79, size: 16, offset: 3952)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1601, file: !11, line: 467, baseType: !12, size: 32, offset: 3968)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1601, file: !11, line: 467, baseType: !12, size: 32, offset: 4000)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1601, file: !11, line: 469, baseType: !79, size: 16, offset: 4032)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1601, file: !11, line: 469, baseType: !79, size: 16, offset: 4048)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1601, file: !11, line: 469, baseType: !79, size: 16, offset: 4064)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1601, file: !11, line: 469, baseType: !79, size: 16, offset: 4080)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1601, file: !11, line: 474, baseType: !79, size: 16, offset: 4096)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1601, file: !11, line: 475, baseType: !189, size: 8, offset: 4112)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1601, file: !11, line: 476, baseType: !189, size: 8, offset: 4120)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1601, file: !11, line: 481, baseType: !12, size: 32, offset: 4128)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1601, file: !11, line: 486, baseType: !12, size: 32, offset: 4160)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1601, file: !11, line: 491, baseType: !12, size: 32, offset: 4192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1601, file: !11, line: 496, baseType: !79, size: 16, offset: 4224)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1601, file: !11, line: 498, baseType: !79, size: 16, offset: 4240)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1601, file: !11, line: 501, baseType: !79, size: 16, offset: 4256)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1601, file: !11, line: 502, baseType: !79, size: 16, offset: 4272)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1601, file: !11, line: 508, baseType: !79, size: 16, offset: 4288)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1601, file: !11, line: 513, baseType: !79, size: 16, offset: 4304)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1601, file: !11, line: 515, baseType: !79, size: 16, offset: 4320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1601, file: !11, line: 515, baseType: !79, size: 16, offset: 4336)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1601, file: !11, line: 519, baseType: !1197, size: 128, offset: 4352)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1601, file: !11, line: 519, baseType: !1197, size: 128, offset: 4480)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1601, file: !11, line: 520, baseType: !216, size: 128, offset: 4608)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1601, file: !11, line: 523, baseType: !227, size: 128, offset: 4736)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1601, file: !11, line: 524, baseType: !79, size: 16, offset: 4864)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1601, file: !11, line: 527, baseType: !79, size: 16, offset: 4880)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1601, file: !11, line: 532, baseType: !6, size: 32, offset: 4896)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1601, file: !11, line: 532, baseType: !6, size: 32, offset: 4928)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1601, file: !11, line: 534, baseType: !6, size: 32, offset: 4960)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1601, file: !11, line: 538, baseType: !6, size: 32, offset: 4992)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1601, file: !11, line: 542, baseType: !12, size: 32, offset: 5024)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1601, file: !11, line: 545, baseType: !6, size: 32, offset: 5056)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1601, file: !11, line: 545, baseType: !6, size: 32, offset: 5088)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1601, file: !11, line: 545, baseType: !6, size: 32, offset: 5120)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1601, file: !11, line: 548, baseType: !6, size: 32, offset: 5152)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1601, file: !11, line: 551, baseType: !79, size: 16, offset: 5184)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1601, file: !11, line: 551, baseType: !79, size: 16, offset: 5200)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1601, file: !11, line: 551, baseType: !79, size: 16, offset: 5216)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1601, file: !11, line: 551, baseType: !79, size: 16, offset: 5232)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1601, file: !11, line: 552, baseType: !79, size: 16, offset: 5248)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1601, file: !11, line: 552, baseType: !79, size: 16, offset: 5264)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1601, file: !11, line: 553, baseType: !6, size: 32, offset: 5280)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1601, file: !11, line: 553, baseType: !6, size: 32, offset: 5312)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1601, file: !11, line: 554, baseType: !79, size: 16, offset: 5344)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1601, file: !11, line: 554, baseType: !79, size: 16, offset: 5360)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1601, file: !11, line: 555, baseType: !6, size: 32, offset: 5376)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1601, file: !11, line: 555, baseType: !6, size: 32, offset: 5408)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1601, file: !11, line: 558, baseType: !276, size: 8192, offset: 5440)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1601, file: !11, line: 561, baseType: !12, size: 32, offset: 13632)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1601, file: !11, line: 562, baseType: !79, size: 16, offset: 13664)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1601, file: !11, line: 562, baseType: !79, size: 16, offset: 13680)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1601, file: !11, line: 565, baseType: !1831, size: 6144, offset: 13696)
!1831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 6144, elements: !1832)
!1832 = !{!1833}
!1833 = !DISubrange(count: 768)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1601, file: !11, line: 568, baseType: !433, size: 128, offset: 19840)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1601, file: !11, line: 569, baseType: !433, size: 128, offset: 19968)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1601, file: !11, line: 572, baseType: !189, size: 8, offset: 20096)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1601, file: !11, line: 573, baseType: !189, size: 8, offset: 20104)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1601, file: !11, line: 574, baseType: !189, size: 8, offset: 20112)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1601, file: !11, line: 575, baseType: !1390, size: 40, offset: 20120)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1601, file: !11, line: 578, baseType: !12, size: 32, offset: 20160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1601, file: !11, line: 579, baseType: !79, size: 16, offset: 20192)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1601, file: !11, line: 580, baseType: !79, size: 16, offset: 20208)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1601, file: !11, line: 581, baseType: !6, size: 32, offset: 20224)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1601, file: !11, line: 582, baseType: !6, size: 32, offset: 20256)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1601, file: !11, line: 585, baseType: !79, size: 16, offset: 20288)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1601, file: !11, line: 585, baseType: !79, size: 16, offset: 20304)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1601, file: !11, line: 586, baseType: !6, size: 32, offset: 20320)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1601, file: !11, line: 589, baseType: !79, size: 16, offset: 20352)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1601, file: !11, line: 589, baseType: !79, size: 16, offset: 20368)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1601, file: !11, line: 590, baseType: !12, size: 32, offset: 20384)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1601, file: !11, line: 593, baseType: !79, size: 16, offset: 20416)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1601, file: !11, line: 593, baseType: !79, size: 16, offset: 20432)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1601, file: !11, line: 594, baseType: !79, size: 16, offset: 20448)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1601, file: !11, line: 594, baseType: !79, size: 16, offset: 20464)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1601, file: !11, line: 595, baseType: !6, size: 32, offset: 20480)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1601, file: !11, line: 596, baseType: !6, size: 32, offset: 20512)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1601, file: !11, line: 597, baseType: !1858, size: 64, offset: 20544)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1860, line: 44, flags: DIFlagFwdDecl)
!1860 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1601, file: !11, line: 600, baseType: !12, size: 32, offset: 20608)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1601, file: !11, line: 601, baseType: !6, size: 32, offset: 20640)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1601, file: !11, line: 604, baseType: !1864, size: 256, offset: 20672)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 256, elements: !463)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1601, file: !11, line: 607, baseType: !1866, size: 10880, offset: 20928)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !11, line: 364, size: 10880, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1866, file: !11, line: 365, baseType: !1604, size: 1984)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1866, file: !11, line: 367, baseType: !276, size: 8192, offset: 1984)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1866, file: !11, line: 369, baseType: !79, size: 16, offset: 10176)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1866, file: !11, line: 369, baseType: !79, size: 16, offset: 10192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1866, file: !11, line: 370, baseType: !79, size: 16, offset: 10208)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1866, file: !11, line: 370, baseType: !79, size: 16, offset: 10224)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1866, file: !11, line: 372, baseType: !6, size: 32, offset: 10240)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1866, file: !11, line: 373, baseType: !6, size: 32, offset: 10272)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1866, file: !11, line: 375, baseType: !1517, size: 24, offset: 10304)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1866, file: !11, line: 376, baseType: !189, size: 8, offset: 10328)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1866, file: !11, line: 378, baseType: !189, size: 8, offset: 10336)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1866, file: !11, line: 379, baseType: !1517, size: 24, offset: 10344)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1866, file: !11, line: 381, baseType: !304, size: 512, offset: 10368)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1601, file: !11, line: 609, baseType: !12, size: 32, offset: 31808)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1601, file: !11, line: 610, baseType: !12, size: 32, offset: 31840)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !741, file: !11, line: 1252, baseType: !1884, size: 256, offset: 34112)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !11, line: 158, size: 256, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1884, file: !11, line: 159, baseType: !12, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1884, file: !11, line: 160, baseType: !6, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1884, file: !11, line: 161, baseType: !6, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1884, file: !11, line: 162, baseType: !6, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1884, file: !11, line: 163, baseType: !12, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1884, file: !11, line: 164, baseType: !79, size: 16, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1884, file: !11, line: 165, baseType: !79, size: 16, offset: 176)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1884, file: !11, line: 166, baseType: !6, size: 32, offset: 192)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1884, file: !11, line: 167, baseType: !6, size: 32, offset: 224)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !741, file: !11, line: 1254, baseType: !227, size: 128, offset: 34368)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !741, file: !11, line: 1255, baseType: !227, size: 128, offset: 34496)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !741, file: !11, line: 1257, baseType: !64, size: 64, offset: 34624)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !741, file: !11, line: 1258, baseType: !64, size: 64, offset: 34688)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !741, file: !11, line: 1259, baseType: !64, size: 64, offset: 34752)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !741, file: !11, line: 1260, baseType: !64, size: 64, offset: 34816)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !741, file: !11, line: 1262, baseType: !64, size: 64, offset: 34880)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !741, file: !11, line: 1265, baseType: !1903, size: 64, offset: 34944)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !11, line: 1265, flags: DIFlagFwdDecl)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !741, file: !11, line: 1266, baseType: !79, size: 16, offset: 35008)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !741, file: !11, line: 1267, baseType: !79, size: 16, offset: 35024)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !741, file: !11, line: 1270, baseType: !12, size: 32, offset: 35040)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !741, file: !11, line: 1271, baseType: !227, size: 128, offset: 35072)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !741, file: !11, line: 1274, baseType: !1910, size: 128, offset: 35200)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !11, line: 650, size: 128, elements: !1911)
!1911 = !{!1912, !1913, !1914, !1915, !1916}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1910, file: !11, line: 651, baseType: !96, size: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1910, file: !11, line: 652, baseType: !189, size: 8, offset: 96)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1910, file: !11, line: 652, baseType: !189, size: 8, offset: 104)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1910, file: !11, line: 652, baseType: !189, size: 8, offset: 112)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1910, file: !11, line: 652, baseType: !189, size: 8, offset: 120)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !741, file: !11, line: 1275, baseType: !1918, size: 1472, offset: 35328)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !11, line: 676, size: 1472, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1932, !1942, !1943, !1944, !1945, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1918, file: !11, line: 679, baseType: !1910, size: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1918, file: !11, line: 680, baseType: !79, size: 16, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1918, file: !11, line: 680, baseType: !79, size: 16, offset: 144)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1918, file: !11, line: 680, baseType: !79, size: 16, offset: 160)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1918, file: !11, line: 680, baseType: !79, size: 16, offset: 176)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1918, file: !11, line: 681, baseType: !79, size: 16, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1918, file: !11, line: 681, baseType: !79, size: 16, offset: 208)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1918, file: !11, line: 681, baseType: !79, size: 16, offset: 224)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1918, file: !11, line: 681, baseType: !79, size: 16, offset: 240)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1918, file: !11, line: 682, baseType: !79, size: 16, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1918, file: !11, line: 682, baseType: !1931, size: 48, offset: 272)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !79, size: 48, elements: !97)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1918, file: !11, line: 685, baseType: !1933, size: 192, offset: 320)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !11, line: 633, size: 192, elements: !1934)
!1934 = !{!1935, !1936, !1937, !1938, !1939, !1940, !1941}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1933, file: !11, line: 634, baseType: !79, size: 16)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1933, file: !11, line: 634, baseType: !79, size: 16, offset: 16)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1933, file: !11, line: 635, baseType: !79, size: 16, offset: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1933, file: !11, line: 635, baseType: !79, size: 16, offset: 48)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1933, file: !11, line: 636, baseType: !6, size: 32, offset: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1933, file: !11, line: 636, baseType: !6, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1933, file: !11, line: 637, baseType: !1858, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1918, file: !11, line: 686, baseType: !79, size: 16, offset: 512)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1918, file: !11, line: 686, baseType: !79, size: 16, offset: 528)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1918, file: !11, line: 687, baseType: !6, size: 32, offset: 544)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1918, file: !11, line: 688, baseType: !1946, size: 448, offset: 576)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !11, line: 674, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !11, line: 659, size: 448, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1947, file: !11, line: 660, baseType: !6, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1947, file: !11, line: 661, baseType: !6, size: 32, offset: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1947, file: !11, line: 662, baseType: !6, size: 32, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1947, file: !11, line: 663, baseType: !6, size: 32, offset: 96)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1947, file: !11, line: 664, baseType: !6, size: 32, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1947, file: !11, line: 665, baseType: !6, size: 32, offset: 160)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1947, file: !11, line: 666, baseType: !6, size: 32, offset: 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1947, file: !11, line: 667, baseType: !6, size: 32, offset: 224)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1947, file: !11, line: 668, baseType: !6, size: 32, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1947, file: !11, line: 669, baseType: !6, size: 32, offset: 288)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1947, file: !11, line: 670, baseType: !12, size: 32, offset: 320)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1947, file: !11, line: 671, baseType: !6, size: 32, offset: 352)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1947, file: !11, line: 672, baseType: !6, size: 32, offset: 384)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1947, file: !11, line: 673, baseType: !79, size: 16, offset: 416)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1947, file: !11, line: 673, baseType: !79, size: 16, offset: 432)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1918, file: !11, line: 692, baseType: !6, size: 32, offset: 1024)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1918, file: !11, line: 697, baseType: !6, size: 32, offset: 1056)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1918, file: !11, line: 703, baseType: !12, size: 32, offset: 1088)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1918, file: !11, line: 704, baseType: !79, size: 16, offset: 1120)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1918, file: !11, line: 704, baseType: !79, size: 16, offset: 1136)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1918, file: !11, line: 705, baseType: !79, size: 16, offset: 1152)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1918, file: !11, line: 706, baseType: !79, size: 16, offset: 1168)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1918, file: !11, line: 707, baseType: !79, size: 16, offset: 1184)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1918, file: !11, line: 708, baseType: !79, size: 16, offset: 1200)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1918, file: !11, line: 709, baseType: !79, size: 16, offset: 1216)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1918, file: !11, line: 709, baseType: !79, size: 16, offset: 1232)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1918, file: !11, line: 709, baseType: !79, size: 16, offset: 1248)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1918, file: !11, line: 709, baseType: !79, size: 16, offset: 1264)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1918, file: !11, line: 710, baseType: !79, size: 16, offset: 1280)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1918, file: !11, line: 711, baseType: !79, size: 16, offset: 1296)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1918, file: !11, line: 712, baseType: !6, size: 32, offset: 1312)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1918, file: !11, line: 713, baseType: !6, size: 32, offset: 1344)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1918, file: !11, line: 713, baseType: !6, size: 32, offset: 1376)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1918, file: !11, line: 713, baseType: !6, size: 32, offset: 1408)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1918, file: !11, line: 713, baseType: !6, size: 32, offset: 1440)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !741, file: !11, line: 1278, baseType: !1985, size: 64, offset: 36800)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !11, line: 1197, size: 64, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1985, file: !11, line: 1199, baseType: !6, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1985, file: !11, line: 1200, baseType: !189, size: 8, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1985, file: !11, line: 1201, baseType: !189, size: 8, offset: 40)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1985, file: !11, line: 1202, baseType: !79, size: 16, offset: 48)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !741, file: !11, line: 1281, baseType: !574, size: 64, offset: 36864)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !741, file: !11, line: 1284, baseType: !1993, size: 192, offset: 36928)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !11, line: 1208, size: 192, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1993, file: !11, line: 1209, baseType: !96, size: 96)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1993, file: !11, line: 1210, baseType: !12, size: 32, offset: 96)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1993, file: !11, line: 1210, baseType: !12, size: 32, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1993, file: !11, line: 1210, baseType: !12, size: 32, offset: 160)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !741, file: !11, line: 1287, baseType: !2000, size: 64, offset: 37120)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !11, line: 62, flags: DIFlagFwdDecl)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !741, file: !11, line: 1289, baseType: !711, size: 64, offset: 37184)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !741, file: !11, line: 1290, baseType: !711, size: 64, offset: 37248)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !741, file: !11, line: 1293, baseType: !1624, size: 1280, offset: 37312)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !741, file: !11, line: 1294, baseType: !1674, size: 512, offset: 38592)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !741, file: !11, line: 1295, baseType: !1450, size: 512, offset: 39104)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !741, file: !11, line: 1298, baseType: !2008, size: 64, offset: 39616)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !11, line: 1298, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !737, file: !736, line: 53, baseType: !12, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !737, file: !736, line: 54, baseType: !12, size: 32, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !737, file: !736, line: 55, baseType: !12, size: 32, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !737, file: !736, line: 55, baseType: !12, size: 32, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !737, file: !736, line: 56, baseType: !189, size: 8, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !737, file: !736, line: 56, baseType: !189, size: 8, offset: 200)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !737, file: !736, line: 57, baseType: !189, size: 8, offset: 208)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !737, file: !736, line: 57, baseType: !189, size: 8, offset: 216)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !737, file: !736, line: 59, baseType: !79, size: 16, offset: 224)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !737, file: !736, line: 59, baseType: !79, size: 16, offset: 240)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !737, file: !736, line: 59, baseType: !79, size: 16, offset: 256)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !737, file: !736, line: 61, baseType: !79, size: 16, offset: 272)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !737, file: !736, line: 63, baseType: !12, size: 32, offset: 288)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !485, file: !47, line: 293, baseType: !227, size: 128, offset: 11200)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !485, file: !47, line: 294, baseType: !2025, size: 64, offset: 11328)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !47, line: 113, baseType: !2027)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !47, line: 108, size: 256, elements: !2028)
!2028 = !{!2029, !2031, !2032, !2033, !2034}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2027, file: !47, line: 109, baseType: !2030, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2027, file: !47, line: 109, baseType: !2030, size: 64, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2027, file: !47, line: 110, baseType: !484, size: 64, offset: 128)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2027, file: !47, line: 111, baseType: !12, size: 32, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2027, file: !47, line: 112, baseType: !6, size: 32, offset: 224)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !477, file: !443, line: 61, baseType: !2036, size: 64, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !443, line: 202, size: 3328, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2119, !2120, !2149, !2169, !2177, !2178}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2037, file: !443, line: 203, baseType: !257, size: 960)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !2037, file: !443, line: 204, baseType: !319, size: 64, offset: 960)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !2037, file: !443, line: 206, baseType: !6, size: 32, offset: 1024)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !2037, file: !443, line: 206, baseType: !6, size: 32, offset: 1056)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1088)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1120)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1152)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1184)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1216)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !2037, file: !443, line: 207, baseType: !6, size: 32, offset: 1248)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !2037, file: !443, line: 208, baseType: !6, size: 32, offset: 1280)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2037, file: !443, line: 208, baseType: !6, size: 32, offset: 1312)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !2037, file: !443, line: 211, baseType: !6, size: 32, offset: 1344)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !2037, file: !443, line: 211, baseType: !6, size: 32, offset: 1376)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !2037, file: !443, line: 211, baseType: !6, size: 32, offset: 1408)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !2037, file: !443, line: 211, baseType: !6, size: 32, offset: 1440)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !2037, file: !443, line: 211, baseType: !6, size: 32, offset: 1472)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !2037, file: !443, line: 214, baseType: !6, size: 32, offset: 1504)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !2037, file: !443, line: 214, baseType: !6, size: 32, offset: 1536)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !2037, file: !443, line: 217, baseType: !6, size: 32, offset: 1568)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !2037, file: !443, line: 218, baseType: !6, size: 32, offset: 1600)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !2037, file: !443, line: 219, baseType: !6, size: 32, offset: 1632)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !2037, file: !443, line: 220, baseType: !6, size: 32, offset: 1664)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !2037, file: !443, line: 221, baseType: !6, size: 32, offset: 1696)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !2037, file: !443, line: 222, baseType: !79, size: 16, offset: 1728)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !2037, file: !443, line: 222, baseType: !79, size: 16, offset: 1744)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !2037, file: !443, line: 224, baseType: !79, size: 16, offset: 1760)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !2037, file: !443, line: 224, baseType: !79, size: 16, offset: 1776)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !2037, file: !443, line: 227, baseType: !79, size: 16, offset: 1792)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !2037, file: !443, line: 227, baseType: !79, size: 16, offset: 1808)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !2037, file: !443, line: 229, baseType: !79, size: 16, offset: 1824)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2037, file: !443, line: 229, baseType: !79, size: 16, offset: 1840)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2037, file: !443, line: 230, baseType: !79, size: 16, offset: 1856)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2037, file: !443, line: 230, baseType: !79, size: 16, offset: 1872)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !2037, file: !443, line: 232, baseType: !6, size: 32, offset: 1888)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !2037, file: !443, line: 232, baseType: !6, size: 32, offset: 1920)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !2037, file: !443, line: 232, baseType: !6, size: 32, offset: 1952)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !2037, file: !443, line: 232, baseType: !6, size: 32, offset: 1984)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !2037, file: !443, line: 233, baseType: !12, size: 32, offset: 2016)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !2037, file: !443, line: 234, baseType: !12, size: 32, offset: 2048)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !2037, file: !443, line: 235, baseType: !79, size: 16, offset: 2080)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !2037, file: !443, line: 235, baseType: !79, size: 16, offset: 2096)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2037, file: !443, line: 236, baseType: !79, size: 16, offset: 2112)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !2037, file: !443, line: 239, baseType: !79, size: 16, offset: 2128)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2037, file: !443, line: 240, baseType: !12, size: 32, offset: 2144)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !2037, file: !443, line: 241, baseType: !12, size: 32, offset: 2176)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2037, file: !443, line: 241, baseType: !12, size: 32, offset: 2208)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2037, file: !443, line: 241, baseType: !12, size: 32, offset: 2240)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !2037, file: !443, line: 243, baseType: !6, size: 32, offset: 2272)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !2037, file: !443, line: 243, baseType: !6, size: 32, offset: 2304)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2037, file: !443, line: 244, baseType: !6, size: 32, offset: 2336)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !2037, file: !443, line: 246, baseType: !737, size: 320, offset: 2368)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2037, file: !443, line: 248, baseType: !843, size: 64, offset: 2688)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2037, file: !443, line: 249, baseType: !504, size: 64, offset: 2752)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2037, file: !443, line: 250, baseType: !1405, size: 64, offset: 2816)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2037, file: !443, line: 251, baseType: !441, size: 64, offset: 2880)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2037, file: !443, line: 252, baseType: !2096, size: 64, offset: 2944)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !443, line: 122, size: 1600, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2103, !2104, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2097, file: !443, line: 123, baseType: !484, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2097, file: !443, line: 124, baseType: !1405, size: 64, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !2097, file: !443, line: 125, baseType: !2102, size: 384, offset: 128)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1085, size: 384, elements: !1621)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2097, file: !443, line: 126, baseType: !620, size: 512, offset: 512)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !2097, file: !443, line: 127, baseType: !2105, size: 288, offset: 1024)
!2105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 288, elements: !2106)
!2106 = !{!98, !98}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2097, file: !443, line: 128, baseType: !79, size: 16, offset: 1312)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !2097, file: !443, line: 128, baseType: !79, size: 16, offset: 1328)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !2097, file: !443, line: 129, baseType: !6, size: 32, offset: 1344)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !2097, file: !443, line: 129, baseType: !6, size: 32, offset: 1376)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !2097, file: !443, line: 130, baseType: !6, size: 32, offset: 1408)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !2097, file: !443, line: 131, baseType: !48, size: 32, offset: 1440)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !2097, file: !443, line: 132, baseType: !79, size: 16, offset: 1472)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2097, file: !443, line: 132, baseType: !79, size: 16, offset: 1488)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2097, file: !443, line: 133, baseType: !12, size: 32, offset: 1504)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2097, file: !443, line: 133, baseType: !12, size: 32, offset: 1536)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !2097, file: !443, line: 134, baseType: !79, size: 16, offset: 1568)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !2097, file: !443, line: 134, baseType: !79, size: 16, offset: 1584)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2037, file: !443, line: 253, baseType: !827, size: 64, offset: 3008)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !2037, file: !443, line: 254, baseType: !2121, size: 64, offset: 3072)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !443, line: 137, size: 832, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2122, file: !443, line: 138, baseType: !79, size: 16)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !2122, file: !443, line: 140, baseType: !79, size: 16, offset: 16)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !2122, file: !443, line: 141, baseType: !6, size: 32, offset: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !2122, file: !443, line: 142, baseType: !6, size: 32, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2122, file: !443, line: 143, baseType: !79, size: 16, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !2122, file: !443, line: 144, baseType: !79, size: 16, offset: 112)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !2122, file: !443, line: 145, baseType: !12, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !2122, file: !443, line: 147, baseType: !12, size: 32, offset: 160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2122, file: !443, line: 149, baseType: !484, size: 64, offset: 192)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !2122, file: !443, line: 150, baseType: !12, size: 32, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !2122, file: !443, line: 151, baseType: !79, size: 16, offset: 288)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !2122, file: !443, line: 152, baseType: !79, size: 16, offset: 304)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !2122, file: !443, line: 154, baseType: !64, size: 64, offset: 320)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !2122, file: !443, line: 155, baseType: !7, size: 64, offset: 384)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !2122, file: !443, line: 157, baseType: !6, size: 32, offset: 448)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !2122, file: !443, line: 158, baseType: !79, size: 16, offset: 480)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !2122, file: !443, line: 159, baseType: !79, size: 16, offset: 496)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !2122, file: !443, line: 160, baseType: !79, size: 16, offset: 512)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !2122, file: !443, line: 161, baseType: !1931, size: 48, offset: 528)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !2122, file: !443, line: 162, baseType: !6, size: 32, offset: 576)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !2122, file: !443, line: 164, baseType: !6, size: 32, offset: 608)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !2122, file: !443, line: 164, baseType: !6, size: 32, offset: 640)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !2122, file: !443, line: 164, baseType: !6, size: 32, offset: 672)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !2122, file: !443, line: 165, baseType: !441, size: 64, offset: 704)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !2122, file: !443, line: 167, baseType: !1634, size: 64, offset: 768)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2037, file: !443, line: 255, baseType: !2150, size: 64, offset: 3136)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !443, line: 170, size: 8704, elements: !2152)
!2152 = !{!2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !2151, file: !443, line: 171, baseType: !1364, size: 96)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !2151, file: !443, line: 172, baseType: !12, size: 32, offset: 96)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !2151, file: !443, line: 173, baseType: !79, size: 16, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2151, file: !443, line: 174, baseType: !79, size: 16, offset: 144)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !2151, file: !443, line: 175, baseType: !79, size: 16, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !2151, file: !443, line: 176, baseType: !79, size: 16, offset: 176)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !2151, file: !443, line: 177, baseType: !79, size: 16, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2151, file: !443, line: 178, baseType: !79, size: 16, offset: 208)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !2151, file: !443, line: 179, baseType: !12, size: 32, offset: 224)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2151, file: !443, line: 181, baseType: !484, size: 64, offset: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !2151, file: !443, line: 182, baseType: !6, size: 32, offset: 320)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !2151, file: !443, line: 183, baseType: !12, size: 32, offset: 352)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !2151, file: !443, line: 184, baseType: !276, size: 8192, offset: 384)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !2151, file: !443, line: 187, baseType: !7, size: 64, offset: 8576)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !2151, file: !443, line: 188, baseType: !12, size: 32, offset: 8640)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2151, file: !443, line: 189, baseType: !12, size: 32, offset: 8672)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !2037, file: !443, line: 256, baseType: !2170, size: 64, offset: 3200)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !443, line: 193, size: 640, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2171, file: !443, line: 194, baseType: !484, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !2171, file: !443, line: 195, baseType: !304, size: 512, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2171, file: !443, line: 197, baseType: !12, size: 32, offset: 576)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2171, file: !443, line: 198, baseType: !12, size: 32, offset: 608)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !2037, file: !443, line: 258, baseType: !189, size: 8, offset: 3264)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2037, file: !443, line: 259, baseType: !1456, size: 56, offset: 3272)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !477, file: !443, line: 62, baseType: !304, size: 512, offset: 192)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !477, file: !443, line: 64, baseType: !189, size: 8, offset: 704)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !477, file: !443, line: 64, baseType: !189, size: 8, offset: 712)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !477, file: !443, line: 64, baseType: !189, size: 8, offset: 720)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !477, file: !443, line: 64, baseType: !189, size: 8, offset: 728)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !477, file: !443, line: 65, baseType: !96, size: 96, offset: 736)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !477, file: !443, line: 65, baseType: !96, size: 96, offset: 832)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !477, file: !443, line: 65, baseType: !6, size: 32, offset: 928)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !477, file: !443, line: 67, baseType: !79, size: 16, offset: 960)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !477, file: !443, line: 67, baseType: !79, size: 16, offset: 976)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !477, file: !443, line: 67, baseType: !79, size: 16, offset: 992)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !477, file: !443, line: 67, baseType: !79, size: 16, offset: 1008)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !477, file: !443, line: 68, baseType: !79, size: 16, offset: 1024)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !477, file: !443, line: 68, baseType: !79, size: 16, offset: 1040)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !477, file: !443, line: 69, baseType: !189, size: 8, offset: 1056)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !477, file: !443, line: 69, baseType: !1456, size: 56, offset: 1064)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !477, file: !443, line: 70, baseType: !6, size: 32, offset: 1120)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !477, file: !443, line: 70, baseType: !6, size: 32, offset: 1152)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !477, file: !443, line: 70, baseType: !6, size: 32, offset: 1184)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !477, file: !443, line: 70, baseType: !6, size: 32, offset: 1216)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !477, file: !443, line: 71, baseType: !6, size: 32, offset: 1248)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !477, file: !443, line: 71, baseType: !6, size: 32, offset: 1280)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !477, file: !443, line: 74, baseType: !6, size: 32, offset: 1312)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !477, file: !443, line: 74, baseType: !6, size: 32, offset: 1344)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !477, file: !443, line: 77, baseType: !6, size: 32, offset: 1376)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !477, file: !443, line: 77, baseType: !6, size: 32, offset: 1408)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !477, file: !443, line: 77, baseType: !6, size: 32, offset: 1440)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !477, file: !443, line: 78, baseType: !6, size: 32, offset: 1472)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !477, file: !443, line: 78, baseType: !6, size: 32, offset: 1504)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !477, file: !443, line: 78, baseType: !6, size: 32, offset: 1536)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !477, file: !443, line: 79, baseType: !6, size: 32, offset: 1568)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !477, file: !443, line: 79, baseType: !6, size: 32, offset: 1600)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !477, file: !443, line: 79, baseType: !6, size: 32, offset: 1632)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !477, file: !443, line: 79, baseType: !6, size: 32, offset: 1664)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !477, file: !443, line: 80, baseType: !6, size: 32, offset: 1696)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !477, file: !443, line: 80, baseType: !6, size: 32, offset: 1728)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !477, file: !443, line: 80, baseType: !6, size: 32, offset: 1760)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !477, file: !443, line: 81, baseType: !6, size: 32, offset: 1792)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !477, file: !443, line: 81, baseType: !6, size: 32, offset: 1824)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !477, file: !443, line: 81, baseType: !6, size: 32, offset: 1856)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !477, file: !443, line: 82, baseType: !6, size: 32, offset: 1888)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !477, file: !443, line: 82, baseType: !6, size: 32, offset: 1920)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !477, file: !443, line: 82, baseType: !6, size: 32, offset: 1952)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !477, file: !443, line: 85, baseType: !6, size: 32, offset: 1984)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !477, file: !443, line: 85, baseType: !6, size: 32, offset: 2016)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !477, file: !443, line: 85, baseType: !6, size: 32, offset: 2048)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !477, file: !443, line: 85, baseType: !6, size: 32, offset: 2080)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !477, file: !443, line: 86, baseType: !6, size: 32, offset: 2112)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !477, file: !443, line: 86, baseType: !6, size: 32, offset: 2144)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !477, file: !443, line: 86, baseType: !6, size: 32, offset: 2176)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !477, file: !443, line: 86, baseType: !6, size: 32, offset: 2208)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !477, file: !443, line: 87, baseType: !6, size: 32, offset: 2240)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !477, file: !443, line: 87, baseType: !6, size: 32, offset: 2272)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !477, file: !443, line: 87, baseType: !6, size: 32, offset: 2304)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !477, file: !443, line: 87, baseType: !6, size: 32, offset: 2336)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !477, file: !443, line: 90, baseType: !6, size: 32, offset: 2368)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !477, file: !443, line: 93, baseType: !6, size: 32, offset: 2400)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !477, file: !443, line: 93, baseType: !6, size: 32, offset: 2432)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !477, file: !443, line: 93, baseType: !6, size: 32, offset: 2464)
!2238 = !{!2239}
!2239 = !DISubrange(count: 18)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !253, file: !254, line: 168, baseType: !843, size: 64, offset: 6144)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !253, file: !254, line: 169, baseType: !504, size: 64, offset: 6208)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !253, file: !254, line: 170, baseType: !693, size: 64, offset: 6272)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !253, file: !254, line: 171, baseType: !827, size: 64, offset: 6336)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !253, file: !254, line: 174, baseType: !6, size: 32, offset: 6400)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !253, file: !254, line: 174, baseType: !6, size: 32, offset: 6432)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !253, file: !254, line: 174, baseType: !6, size: 32, offset: 6464)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !253, file: !254, line: 175, baseType: !6, size: 32, offset: 6496)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !253, file: !254, line: 175, baseType: !6, size: 32, offset: 6528)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !253, file: !254, line: 176, baseType: !79, size: 16, offset: 6560)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !253, file: !254, line: 176, baseType: !79, size: 16, offset: 6576)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !253, file: !254, line: 179, baseType: !96, size: 96, offset: 6592)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !253, file: !254, line: 179, baseType: !96, size: 96, offset: 6688)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !253, file: !254, line: 180, baseType: !6, size: 32, offset: 6784)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !253, file: !254, line: 180, baseType: !6, size: 32, offset: 6816)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !253, file: !254, line: 180, baseType: !6, size: 32, offset: 6848)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !253, file: !254, line: 181, baseType: !6, size: 32, offset: 6880)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !253, file: !254, line: 181, baseType: !6, size: 32, offset: 6912)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !253, file: !254, line: 182, baseType: !6, size: 32, offset: 6944)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !253, file: !254, line: 182, baseType: !6, size: 32, offset: 6976)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !253, file: !254, line: 183, baseType: !79, size: 16, offset: 7008)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !253, file: !254, line: 183, baseType: !79, size: 16, offset: 7024)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !253, file: !254, line: 185, baseType: !12, size: 32, offset: 7040)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !253, file: !254, line: 186, baseType: !79, size: 16, offset: 7072)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !253, file: !254, line: 187, baseType: !79, size: 16, offset: 7088)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !253, file: !254, line: 190, baseType: !433, size: 128, offset: 7104)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !253, file: !254, line: 191, baseType: !79, size: 16, offset: 7232)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !253, file: !254, line: 192, baseType: !79, size: 16, offset: 7248)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !253, file: !254, line: 195, baseType: !79, size: 16, offset: 7264)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !253, file: !254, line: 196, baseType: !79, size: 16, offset: 7280)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !253, file: !254, line: 197, baseType: !79, size: 16, offset: 7296)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !253, file: !254, line: 198, baseType: !1931, size: 48, offset: 7312)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !253, file: !254, line: 200, baseType: !2273, size: 64, offset: 7360)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !254, line: 86, size: 192, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !2274, file: !254, line: 87, baseType: !1405, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !2274, file: !254, line: 88, baseType: !602, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2274, file: !254, line: 89, baseType: !12, size: 32, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2274, file: !254, line: 90, baseType: !12, size: 32, offset: 160)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !253, file: !254, line: 202, baseType: !227, size: 128, offset: 7424)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !239, file: !180, line: 94, baseType: !693, size: 64, offset: 1024)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "rectf", scope: !239, file: !180, line: 96, baseType: !7, size: 64, offset: 1088)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "acolrect", scope: !239, file: !180, line: 97, baseType: !7, size: 64, offset: 1152)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "scolrect", scope: !239, file: !180, line: 98, baseType: !7, size: 64, offset: 1216)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer", scope: !239, file: !180, line: 99, baseType: !212, size: 64, offset: 1280)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !239, file: !180, line: 101, baseType: !12, size: 32, offset: 1344)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !239, file: !180, line: 101, baseType: !12, size: 32, offset: 1376)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "exrhandle", scope: !239, file: !180, line: 104, baseType: !64, size: 64, offset: 1408)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "passes", scope: !239, file: !180, line: 106, baseType: !227, size: 128, offset: 1472)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "do_exr_tile", scope: !202, file: !180, line: 137, baseType: !12, size: 32, offset: 960)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !202, file: !180, line: 140, baseType: !12, size: 32, offset: 992)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "have_combined", scope: !202, file: !180, line: 143, baseType: !12, size: 32, offset: 1024)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !202, file: !180, line: 146, baseType: !602, size: 64, offset: 1088)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pushedresult", scope: !181, file: !182, line: 141, baseType: !200, size: 64, offset: 960)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !181, file: !182, line: 143, baseType: !227, size: 128, offset: 1024)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "resultmutex", scope: !181, file: !182, line: 147, baseType: !2297, size: 32, offset: 1152)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !2298, line: 148, baseType: !2299)
!2298 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2299 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !2300, line: 10, baseType: !2301)
!2300 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !712, line: 26, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !714, line: 42, baseType: !48)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !181, file: !182, line: 150, baseType: !12, size: 32, offset: 1184)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !181, file: !182, line: 150, baseType: !12, size: 32, offset: 1216)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !181, file: !182, line: 152, baseType: !216, size: 128, offset: 1248)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "viewplane", scope: !181, file: !182, line: 153, baseType: !1197, size: 128, offset: 1376)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "viewdx", scope: !181, file: !182, line: 154, baseType: !6, size: 32, offset: 1504)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "viewdy", scope: !181, file: !182, line: 154, baseType: !6, size: 32, offset: 1536)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "clipcrop", scope: !181, file: !182, line: 155, baseType: !6, size: 32, offset: 1568)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !181, file: !182, line: 158, baseType: !12, size: 32, offset: 1600)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !181, file: !182, line: 158, baseType: !12, size: 32, offset: 1632)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "partx", scope: !181, file: !182, line: 162, baseType: !12, size: 32, offset: 1664)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "party", scope: !181, file: !182, line: 162, baseType: !12, size: 32, offset: 1696)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ycor", scope: !181, file: !182, line: 165, baseType: !6, size: 32, offset: 1728)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "panophi", scope: !181, file: !182, line: 167, baseType: !6, size: 32, offset: 1760)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "panosi", scope: !181, file: !182, line: 167, baseType: !6, size: 32, offset: 1792)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "panoco", scope: !181, file: !182, line: 167, baseType: !6, size: 32, offset: 1824)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "panodxp", scope: !181, file: !182, line: 167, baseType: !6, size: 32, offset: 1856)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "panodxv", scope: !181, file: !182, line: 167, baseType: !6, size: 32, offset: 1888)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "grvec", scope: !181, file: !182, line: 170, baseType: !96, size: 96, offset: 1920)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !181, file: !182, line: 171, baseType: !2105, size: 288, offset: 2016)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat", scope: !181, file: !182, line: 172, baseType: !620, size: 512, offset: 2304)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "viewinv", scope: !181, file: !182, line: 172, baseType: !620, size: 512, offset: 2816)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "viewmat_orig", scope: !181, file: !182, line: 173, baseType: !620, size: 512, offset: 3328)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !181, file: !182, line: 174, baseType: !620, size: 512, offset: 3840)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !181, file: !182, line: 177, baseType: !6, size: 32, offset: 4352)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !181, file: !182, line: 178, baseType: !6, size: 32, offset: 4384)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "samples", scope: !181, file: !182, line: 181, baseType: !2329, size: 64, offset: 4416)
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "SampleTables", file: !182, line: 77, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SampleTables", file: !182, line: 72, size: 3776, elements: !2332)
!2332 = !{!2333, !2337, !2339, !2340, !2341}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "centLut", scope: !2331, file: !182, line: 73, baseType: !2334, size: 512)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 512, elements: !2335)
!2335 = !{!2336}
!2336 = !DISubrange(count: 16)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "fmask1", scope: !2331, file: !182, line: 74, baseType: !2338, size: 576, offset: 512)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 576, elements: !117)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fmask2", scope: !2331, file: !182, line: 74, baseType: !2338, size: 576, offset: 1088)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "cmask", scope: !2331, file: !182, line: 75, baseType: !858, size: 2048, offset: 1664)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "centmask", scope: !2331, file: !182, line: 75, baseType: !602, size: 64, offset: 3712)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "jit", scope: !181, file: !182, line: 182, baseType: !2343, size: 2048, offset: 4480)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 2048, elements: !2344)
!2344 = !{!464, !732}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_jit", scope: !181, file: !182, line: 183, baseType: !2343, size: 2048, offset: 6528)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "qmcsamplers", scope: !181, file: !182, line: 184, baseType: !722, size: 64, offset: 8576)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "shadowsamplenr", scope: !181, file: !182, line: 187, baseType: !2348, size: 32, offset: 8640)
!2348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 32, elements: !135)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !181, file: !182, line: 190, baseType: !2350, size: 64, offset: 8704)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2352, line: 53, size: 15232, elements: !2353)
!2352 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2353 = !{!2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2405}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2351, file: !2352, line: 54, baseType: !2350, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2351, file: !2352, line: 54, baseType: !2350, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2351, file: !2352, line: 55, baseType: !276, size: 8192, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2351, file: !2352, line: 56, baseType: !79, size: 16, offset: 8320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2351, file: !2352, line: 56, baseType: !79, size: 16, offset: 8336)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2351, file: !2352, line: 57, baseType: !79, size: 16, offset: 8352)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2351, file: !2352, line: 57, baseType: !79, size: 16, offset: 8368)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2351, file: !2352, line: 58, baseType: !711, size: 64, offset: 8384)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2351, file: !2352, line: 59, baseType: !2363, size: 128, offset: 8448)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 128, elements: !2335)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2351, file: !2352, line: 60, baseType: !79, size: 16, offset: 8576)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2351, file: !2352, line: 62, baseType: !266, size: 64, offset: 8640)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2351, file: !2352, line: 63, baseType: !227, size: 128, offset: 8704)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2351, file: !2352, line: 64, baseType: !227, size: 128, offset: 8832)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2351, file: !2352, line: 65, baseType: !227, size: 128, offset: 8960)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2351, file: !2352, line: 66, baseType: !227, size: 128, offset: 9088)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2351, file: !2352, line: 67, baseType: !227, size: 128, offset: 9216)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2351, file: !2352, line: 68, baseType: !227, size: 128, offset: 9344)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2351, file: !2352, line: 69, baseType: !227, size: 128, offset: 9472)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2351, file: !2352, line: 70, baseType: !227, size: 128, offset: 9600)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2351, file: !2352, line: 71, baseType: !227, size: 128, offset: 9728)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2351, file: !2352, line: 72, baseType: !227, size: 128, offset: 9856)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2351, file: !2352, line: 73, baseType: !227, size: 128, offset: 9984)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2351, file: !2352, line: 74, baseType: !227, size: 128, offset: 10112)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2351, file: !2352, line: 75, baseType: !227, size: 128, offset: 10240)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2351, file: !2352, line: 76, baseType: !227, size: 128, offset: 10368)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2351, file: !2352, line: 77, baseType: !227, size: 128, offset: 10496)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2351, file: !2352, line: 78, baseType: !227, size: 128, offset: 10624)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2351, file: !2352, line: 79, baseType: !227, size: 128, offset: 10752)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2351, file: !2352, line: 80, baseType: !227, size: 128, offset: 10880)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2351, file: !2352, line: 81, baseType: !227, size: 128, offset: 11008)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2351, file: !2352, line: 82, baseType: !227, size: 128, offset: 11136)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2351, file: !2352, line: 83, baseType: !227, size: 128, offset: 11264)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2351, file: !2352, line: 84, baseType: !227, size: 128, offset: 11392)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2351, file: !2352, line: 85, baseType: !227, size: 128, offset: 11520)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2351, file: !2352, line: 86, baseType: !227, size: 128, offset: 11648)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2351, file: !2352, line: 87, baseType: !227, size: 128, offset: 11776)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2351, file: !2352, line: 88, baseType: !227, size: 128, offset: 11904)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2351, file: !2352, line: 89, baseType: !227, size: 128, offset: 12032)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2351, file: !2352, line: 90, baseType: !227, size: 128, offset: 12160)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2351, file: !2352, line: 91, baseType: !227, size: 128, offset: 12288)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2351, file: !2352, line: 92, baseType: !227, size: 128, offset: 12416)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2351, file: !2352, line: 93, baseType: !227, size: 128, offset: 12544)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2351, file: !2352, line: 94, baseType: !227, size: 128, offset: 12672)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2351, file: !2352, line: 95, baseType: !227, size: 128, offset: 12800)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2351, file: !2352, line: 96, baseType: !227, size: 128, offset: 12928)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2351, file: !2352, line: 98, baseType: !858, size: 2048, offset: 13056)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2351, file: !2352, line: 101, baseType: !2402, size: 64, offset: 15104)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2404, line: 42, flags: DIFlagFwdDecl)
!2404 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_scene.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2351, file: !2352, line: 103, baseType: !2406, size: 64, offset: 15168)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2352, line: 51, flags: DIFlagFwdDecl)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !181, file: !182, line: 191, baseType: !2409, size: 64, offset: 8768)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !11, line: 1299, baseType: !741)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !181, file: !182, line: 192, baseType: !2412, size: 31872, offset: 8832)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderData", file: !11, line: 611, baseType: !1601)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "wrld", scope: !181, file: !182, line: 193, baseType: !2414, size: 4224, offset: 40704)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "World", file: !749, line: 131, baseType: !748)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "camera_override", scope: !181, file: !182, line: 194, baseType: !484, size: 64, offset: 44928)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !181, file: !182, line: 195, baseType: !48, size: 32, offset: 44992)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "layer_override", scope: !181, file: !182, line: 195, baseType: !48, size: 32, offset: 45024)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "parts", scope: !181, file: !182, line: 197, baseType: !227, size: 128, offset: 45056)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !181, file: !182, line: 200, baseType: !2420, size: 64, offset: 45184)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderEngine", file: !182, line: 65, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !181, file: !182, line: 203, baseType: !2423, size: 64, offset: 45248)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayObject", file: !182, line: 63, flags: DIFlagFwdDecl)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !181, file: !182, line: 204, baseType: !2426, size: 64, offset: 45312)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "RayFace", file: !182, line: 64, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !181, file: !182, line: 205, baseType: !2429, size: 64, offset: 45376)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DICompositeType(tag: DW_TAG_structure_type, name: "VlakPrimitive", file: !182, line: 205, flags: DIFlagFwdDecl)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !181, file: !182, line: 206, baseType: !6, size: 32, offset: 45440)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "occlusiontree", scope: !181, file: !182, line: 209, baseType: !64, size: 64, offset: 45504)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "strandsurface", scope: !181, file: !182, line: 210, baseType: !227, size: 128, offset: 45568)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_offs", scope: !181, file: !182, line: 213, baseType: !6, size: 32, offset: 45696)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "field_offs", scope: !181, file: !182, line: 213, baseType: !6, size: 32, offset: 45728)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !181, file: !182, line: 216, baseType: !12, size: 32, offset: 45760)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !181, file: !182, line: 216, baseType: !12, size: 32, offset: 45792)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !181, file: !182, line: 216, baseType: !12, size: 32, offset: 45824)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !181, file: !182, line: 216, baseType: !12, size: 32, offset: 45856)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !181, file: !182, line: 216, baseType: !12, size: 32, offset: 45888)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sortedhalos", scope: !181, file: !182, line: 217, baseType: !2442, size: 64, offset: 45952)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HaloRen", file: !182, line: 413, size: 1024, elements: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "miny", scope: !2444, file: !182, line: 414, baseType: !79, size: 16)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "maxy", scope: !2444, file: !182, line: 414, baseType: !79, size: 16, offset: 16)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 96)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "radsq", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "sin", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "cos", scope: !2444, file: !182, line: 415, baseType: !6, size: 32, offset: 224)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2444, file: !182, line: 415, baseType: !96, size: 96, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2444, file: !182, line: 415, baseType: !96, size: 96, offset: 352)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "hard", scope: !2444, file: !182, line: 416, baseType: !6, size: 32, offset: 448)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2444, file: !182, line: 416, baseType: !6, size: 32, offset: 480)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2444, file: !182, line: 416, baseType: !6, size: 32, offset: 512)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !2444, file: !182, line: 416, baseType: !6, size: 32, offset: 544)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "zs", scope: !2444, file: !182, line: 417, baseType: !12, size: 32, offset: 576)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "zd", scope: !2444, file: !182, line: 417, baseType: !12, size: 32, offset: 608)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "zBufDist", scope: !2444, file: !182, line: 418, baseType: !12, size: 32, offset: 640)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "starpoints", scope: !2444, file: !182, line: 419, baseType: !189, size: 8, offset: 672)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2444, file: !182, line: 419, baseType: !189, size: 8, offset: 680)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !2444, file: !182, line: 419, baseType: !189, size: 8, offset: 688)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2444, file: !182, line: 419, baseType: !189, size: 8, offset: 696)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !2444, file: !182, line: 420, baseType: !189, size: 8, offset: 704)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !2444, file: !182, line: 420, baseType: !189, size: 8, offset: 712)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !2444, file: !182, line: 420, baseType: !189, size: 8, offset: 720)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !2444, file: !182, line: 421, baseType: !79, size: 16, offset: 736)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !2444, file: !182, line: 422, baseType: !6, size: 32, offset: 768)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !2444, file: !182, line: 423, baseType: !12, size: 32, offset: 800)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2444, file: !182, line: 424, baseType: !48, size: 32, offset: 832)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2444, file: !182, line: 425, baseType: !252, size: 64, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2444, file: !182, line: 426, baseType: !2477, size: 64, offset: 960)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !2479, line: 197, flags: DIFlagFwdDecl)
!2479 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "lights", scope: !181, file: !182, line: 219, baseType: !227, size: 128, offset: 46016)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !181, file: !182, line: 220, baseType: !227, size: 128, offset: 46144)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "objecttable", scope: !181, file: !182, line: 222, baseType: !227, size: 128, offset: 46272)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "objectinstance", scope: !181, file: !182, line: 224, baseType: !2484, size: 64, offset: 46400)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectInstanceRen", file: !182, line: 345, size: 2304, elements: !2486)
!2486 = !{!2487, !2488, !2489, !2667, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2682, !2692, !2693, !2694, !2695}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2485, file: !182, line: 346, baseType: !2484, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2485, file: !182, line: 346, baseType: !2484, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2485, file: !182, line: 348, baseType: !2490, size: 64, offset: 128)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectRen", file: !182, line: 343, baseType: !2492)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ObjectRen", file: !182, line: 315, size: 2240, elements: !2493)
!2493 = !{!2494, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2536, !2576, !2654, !2655, !2656, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2492, file: !182, line: 316, baseType: !2495, size: 64)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2492, file: !182, line: 316, baseType: !2495, size: 64, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2492, file: !182, line: 317, baseType: !484, size: 64, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2492, file: !182, line: 317, baseType: !484, size: 64, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "sce", scope: !2492, file: !182, line: 318, baseType: !740, size: 64, offset: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2492, file: !182, line: 319, baseType: !12, size: 32, offset: 320)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2492, file: !182, line: 319, baseType: !12, size: 32, offset: 352)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2492, file: !182, line: 319, baseType: !12, size: 32, offset: 384)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2492, file: !182, line: 319, baseType: !12, size: 32, offset: 416)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2492, file: !182, line: 321, baseType: !2505, size: 192, offset: 448)
!2505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 192, elements: !2506)
!2506 = !{!732, !98}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2492, file: !182, line: 323, baseType: !12, size: 32, offset: 640)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "totvlak", scope: !2492, file: !182, line: 323, baseType: !12, size: 32, offset: 672)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2492, file: !182, line: 323, baseType: !12, size: 32, offset: 704)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2492, file: !182, line: 323, baseType: !12, size: 32, offset: 736)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodeslen", scope: !2492, file: !182, line: 324, baseType: !12, size: 32, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodeslen", scope: !2492, file: !182, line: 324, baseType: !12, size: 32, offset: 800)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodeslen", scope: !2492, file: !182, line: 324, baseType: !12, size: 32, offset: 832)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "blohalen", scope: !2492, file: !182, line: 324, baseType: !12, size: 32, offset: 864)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "vertnodes", scope: !2492, file: !182, line: 325, baseType: !2516, size: 64, offset: 896)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertTableNode", file: !2518, line: 60, size: 448, elements: !2519)
!2518 = !DIFile(filename: "blender/source/blender/render/intern/include/renderdatabase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2519 = !{!2520, !2530, !2531, !2532, !2533, !2534, !2535}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2517, file: !2518, line: 61, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VertRen", file: !182, line: 372, size: 384, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2522, file: !182, line: 373, baseType: !96, size: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2522, file: !182, line: 374, baseType: !96, size: 96, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2522, file: !182, line: 375, baseType: !7, size: 64, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2522, file: !182, line: 376, baseType: !48, size: 32, offset: 256)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "accum", scope: !2522, file: !182, line: 378, baseType: !6, size: 32, offset: 288)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2522, file: !182, line: 379, baseType: !12, size: 32, offset: 320)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !2517, file: !2518, line: 62, baseType: !7, size: 64, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2517, file: !2518, line: 63, baseType: !7, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2517, file: !2518, line: 64, baseType: !7, size: 64, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !2517, file: !2518, line: 65, baseType: !7, size: 64, offset: 256)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2517, file: !2518, line: 66, baseType: !7, size: 64, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2517, file: !2518, line: 68, baseType: !212, size: 64, offset: 384)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "vlaknodes", scope: !2492, file: !182, line: 326, baseType: !2537, size: 64, offset: 960)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakTableNode", file: !2518, line: 71, size: 512, elements: !2539)
!2539 = !{!2540, !2554, !2557, !2560, !2561, !2562, !2563, !2564, !2565}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "vlak", scope: !2538, file: !2518, line: 72, baseType: !2541, size: 64)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VlakRen", file: !182, line: 400, size: 512, elements: !2543)
!2543 = !{!2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2542, file: !182, line: 401, baseType: !2521, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2542, file: !182, line: 401, baseType: !2521, size: 64, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2542, file: !182, line: 401, baseType: !2521, size: 64, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2542, file: !182, line: 401, baseType: !2521, size: 64, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !2542, file: !182, line: 402, baseType: !96, size: 96, offset: 256)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2542, file: !182, line: 403, baseType: !252, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !2542, file: !182, line: 404, baseType: !189, size: 8, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2542, file: !182, line: 405, baseType: !189, size: 8, offset: 456)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ec", scope: !2542, file: !182, line: 405, baseType: !189, size: 8, offset: 464)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2542, file: !182, line: 410, baseType: !12, size: 32, offset: 480)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2538, file: !2518, line: 73, baseType: !2555, size: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !182, line: 391, flags: DIFlagFwdDecl)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2538, file: !2518, line: 74, baseType: !2558, size: 64, offset: 128)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2518, line: 47, flags: DIFlagFwdDecl)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "origindex", scope: !2538, file: !2518, line: 76, baseType: !212, size: 64, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "totmtface", scope: !2538, file: !2518, line: 77, baseType: !12, size: 32, offset: 256)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2538, file: !2518, line: 77, baseType: !12, size: 32, offset: 288)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2538, file: !2518, line: 78, baseType: !7, size: 64, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "tangent", scope: !2538, file: !2518, line: 79, baseType: !7, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "radface", scope: !2538, file: !2518, line: 80, baseType: !2566, size: 64, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RadFace", file: !182, line: 394, size: 448, elements: !2569)
!2569 = !{!2570, !2571, !2572, !2573, !2574, !2575}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "unshot", scope: !2568, file: !182, line: 395, baseType: !96, size: 96)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "totrad", scope: !2568, file: !182, line: 395, baseType: !96, size: 96, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "norm", scope: !2568, file: !182, line: 396, baseType: !96, size: 96, offset: 192)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "cent", scope: !2568, file: !182, line: 396, baseType: !96, size: 96, offset: 288)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "area", scope: !2568, file: !182, line: 396, baseType: !6, size: 32, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2568, file: !182, line: 397, baseType: !12, size: 32, offset: 416)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "strandnodes", scope: !2492, file: !182, line: 327, baseType: !2577, size: 64, offset: 1024)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandTableNode", file: !2518, line: 83, size: 512, elements: !2579)
!2579 = !{!2580, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !2578, file: !2518, line: 84, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandRen", file: !182, line: 475, size: 384, elements: !2583)
!2583 = !{!2584, !2591, !2641, !2642, !2643, !2644, !2645}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2582, file: !182, line: 476, baseType: !2585, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandVert", file: !182, line: 434, baseType: !2587)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandVert", file: !182, line: 431, size: 128, elements: !2588)
!2588 = !{!2589, !2590}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2587, file: !182, line: 432, baseType: !96, size: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !2587, file: !182, line: 433, baseType: !6, size: 32, offset: 96)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !2582, file: !182, line: 477, baseType: !2592, size: 64, offset: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandBuffer", file: !182, line: 473, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBuffer", file: !182, line: 455, size: 1344, elements: !2595)
!2595 = !{!2596, !2598, !2599, !2601, !2608, !2609, !2610, !2611, !2612, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2594, file: !182, line: 456, baseType: !2597, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2594, file: !182, line: 456, baseType: !2597, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2594, file: !182, line: 457, baseType: !2600, size: 64, offset: 128)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2594, file: !182, line: 458, baseType: !2602, size: 64, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandBound", file: !182, line: 450, size: 256, elements: !2604)
!2604 = !{!2605, !2606, !2607}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2603, file: !182, line: 451, baseType: !12, size: 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2603, file: !182, line: 451, baseType: !12, size: 32, offset: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "boundbox", scope: !2603, file: !182, line: 452, baseType: !2505, size: 192, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2594, file: !182, line: 459, baseType: !12, size: 32, offset: 256)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "totbound", scope: !2594, file: !182, line: 459, baseType: !12, size: 32, offset: 288)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2594, file: !182, line: 461, baseType: !2495, size: 64, offset: 320)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ma", scope: !2594, file: !182, line: 462, baseType: !252, size: 64, offset: 384)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "surface", scope: !2594, file: !182, line: 463, baseType: !2613, size: 64, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StrandSurface", file: !182, line: 436, size: 2880, elements: !2615)
!2615 = !{!2616, !2617, !2618, !2619, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2614, file: !182, line: 437, baseType: !2613, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2614, file: !182, line: 437, baseType: !2613, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !2614, file: !182, line: 438, baseType: !2491, size: 2240, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2614, file: !182, line: 439, baseType: !2620, size: 64, offset: 2368)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 128, elements: !434)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2614, file: !182, line: 440, baseType: !95, size: 64, offset: 2432)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !2614, file: !182, line: 442, baseType: !95, size: 64, offset: 2496)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !2614, file: !182, line: 443, baseType: !95, size: 64, offset: 2560)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !2614, file: !182, line: 444, baseType: !95, size: 64, offset: 2624)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "prevco", scope: !2614, file: !182, line: 446, baseType: !95, size: 64, offset: 2688)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "nextco", scope: !2614, file: !182, line: 446, baseType: !95, size: 64, offset: 2752)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2614, file: !182, line: 447, baseType: !12, size: 32, offset: 2816)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2614, file: !182, line: 447, baseType: !12, size: 32, offset: 2848)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2594, file: !182, line: 464, baseType: !48, size: 32, offset: 512)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "overrideuv", scope: !2594, file: !182, line: 465, baseType: !12, size: 32, offset: 544)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2594, file: !182, line: 466, baseType: !12, size: 32, offset: 576)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "maxdepth", scope: !2594, file: !182, line: 466, baseType: !12, size: 32, offset: 608)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "adaptcos", scope: !2594, file: !182, line: 467, baseType: !6, size: 32, offset: 640)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "minwidth", scope: !2594, file: !182, line: 467, baseType: !6, size: 32, offset: 672)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "widthfade", scope: !2594, file: !182, line: 467, baseType: !6, size: 32, offset: 704)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "maxwidth", scope: !2594, file: !182, line: 469, baseType: !6, size: 32, offset: 736)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "winmat", scope: !2594, file: !182, line: 471, baseType: !620, size: 512, offset: 768)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2594, file: !182, line: 472, baseType: !12, size: 32, offset: 1280)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2594, file: !182, line: 472, baseType: !12, size: 32, offset: 1312)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2582, file: !182, line: 478, baseType: !12, size: 32, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2582, file: !182, line: 478, baseType: !12, size: 32, offset: 160)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !2582, file: !182, line: 479, baseType: !12, size: 32, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2582, file: !182, line: 479, baseType: !12, size: 32, offset: 224)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2582, file: !182, line: 480, baseType: !96, size: 96, offset: 256)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !2578, file: !2518, line: 85, baseType: !7, size: 64, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !2578, file: !2518, line: 86, baseType: !7, size: 64, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "simplify", scope: !2578, file: !2518, line: 87, baseType: !7, size: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2578, file: !2518, line: 88, baseType: !212, size: 64, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2578, file: !2518, line: 89, baseType: !2558, size: 64, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2578, file: !2518, line: 90, baseType: !7, size: 64, offset: 384)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !2578, file: !2518, line: 91, baseType: !12, size: 32, offset: 448)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !2578, file: !2518, line: 91, baseType: !12, size: 32, offset: 480)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "bloha", scope: !2492, file: !182, line: 328, baseType: !2442, size: 64, offset: 1088)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "strandbuf", scope: !2492, file: !182, line: 329, baseType: !2597, size: 64, offset: 1152)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !2492, file: !182, line: 331, baseType: !2657, size: 64, offset: 1216)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !2492, file: !182, line: 332, baseType: !2657, size: 64, offset: 1280)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "actmtface", scope: !2492, file: !182, line: 333, baseType: !12, size: 32, offset: 1344)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "actmcol", scope: !2492, file: !182, line: 333, baseType: !12, size: 32, offset: 1376)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "bakemtface", scope: !2492, file: !182, line: 333, baseType: !12, size: 32, offset: 1408)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !2492, file: !182, line: 335, baseType: !620, size: 512, offset: 1440)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2492, file: !182, line: 338, baseType: !2423, size: 64, offset: 1984)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rayfaces", scope: !2492, file: !182, line: 339, baseType: !2426, size: 64, offset: 2048)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rayprimitives", scope: !2492, file: !182, line: 340, baseType: !2429, size: 64, offset: 2112)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rayobi", scope: !2492, file: !182, line: 341, baseType: !2484, size: 64, offset: 2176)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2485, file: !182, line: 349, baseType: !2668, size: 64, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !47, line: 295, baseType: !485)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !2485, file: !182, line: 349, baseType: !2668, size: 64, offset: 256)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2485, file: !182, line: 350, baseType: !12, size: 32, offset: 320)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "psysindex", scope: !2485, file: !182, line: 350, baseType: !12, size: 32, offset: 352)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2485, file: !182, line: 350, baseType: !12, size: 32, offset: 384)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2485, file: !182, line: 352, baseType: !620, size: 512, offset: 416)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !2485, file: !182, line: 352, baseType: !620, size: 512, offset: 928)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "nmat", scope: !2485, file: !182, line: 353, baseType: !2105, size: 288, offset: 1440)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2485, file: !182, line: 354, baseType: !79, size: 16, offset: 1728)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dupliorco", scope: !2485, file: !182, line: 356, baseType: !96, size: 96, offset: 1760)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !2485, file: !182, line: 356, baseType: !730, size: 64, offset: 1856)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "duplitexmat", scope: !2485, file: !182, line: 357, baseType: !2681, size: 64, offset: 1920)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "volume_precache", scope: !2485, file: !182, line: 359, baseType: !2683, size: 64, offset: 1984)
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumePrecache", file: !182, line: 513, size: 448, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689, !2690, !2691}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2684, file: !182, line: 514, baseType: !1364, size: 96)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "bbmin", scope: !2684, file: !182, line: 515, baseType: !7, size: 64, offset: 128)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "bbmax", scope: !2684, file: !182, line: 515, baseType: !7, size: 64, offset: 192)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "data_r", scope: !2684, file: !182, line: 516, baseType: !7, size: 64, offset: 256)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "data_g", scope: !2684, file: !182, line: 517, baseType: !7, size: 64, offset: 320)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "data_b", scope: !2684, file: !182, line: 518, baseType: !7, size: 64, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "vectors", scope: !2485, file: !182, line: 361, baseType: !7, size: 64, offset: 2048)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "totvector", scope: !2485, file: !182, line: 362, baseType: !12, size: 32, offset: 2112)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "raytree", scope: !2485, file: !182, line: 365, baseType: !2423, size: 64, offset: 2176)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "transform_primitives", scope: !2485, file: !182, line: 366, baseType: !12, size: 32, offset: 2240)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "instancetable", scope: !181, file: !182, line: 225, baseType: !227, size: 128, offset: 46464)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "totinstance", scope: !181, file: !182, line: 226, baseType: !12, size: 32, offset: 46592)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "bakebuf", scope: !181, file: !182, line: 228, baseType: !1405, size: 64, offset: 46656)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "orco_hash", scope: !181, file: !182, line: 230, baseType: !536, size: 64, offset: 46720)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "sss_hash", scope: !181, file: !182, line: 232, baseType: !536, size: 64, offset: 46784)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "sss_points", scope: !181, file: !182, line: 233, baseType: !722, size: 64, offset: 46848)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "sss_mat", scope: !181, file: !182, line: 234, baseType: !252, size: 64, offset: 46912)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_names", scope: !181, file: !182, line: 236, baseType: !227, size: 128, offset: 46976)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "excludeob", scope: !181, file: !182, line: 238, baseType: !484, size: 64, offset: 47104)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "render_volumes_inside", scope: !181, file: !182, line: 239, baseType: !227, size: 128, offset: 47168)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "volumes", scope: !181, file: !182, line: 240, baseType: !227, size: 128, offset: 47296)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "memArena", scope: !181, file: !182, line: 250, baseType: !2708, size: 64, offset: 47424)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !93, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "display_init", scope: !181, file: !182, line: 253, baseType: !2710, size: 64, offset: 47488)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DISubroutineType(types: !2712)
!2712 = !{null, !64, !200}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dih", scope: !181, file: !182, line: 254, baseType: !64, size: 64, offset: 47552)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "display_clear", scope: !181, file: !182, line: 255, baseType: !2710, size: 64, offset: 47616)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dch", scope: !181, file: !182, line: 256, baseType: !64, size: 64, offset: 47680)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "display_update", scope: !181, file: !182, line: 257, baseType: !2717, size: 64, offset: 47744)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DISubroutineType(types: !2719)
!2719 = !{null, !64, !200, !2720}
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "duh", scope: !181, file: !182, line: 258, baseType: !64, size: 64, offset: 47808)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "current_scene_update", scope: !181, file: !182, line: 259, baseType: !2723, size: 64, offset: 47872)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !64, !740}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "suh", scope: !181, file: !182, line: 260, baseType: !64, size: 64, offset: 47936)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !181, file: !182, line: 262, baseType: !2728, size: 64, offset: 48000)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{null, !64, !2731}
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderStats", file: !180, line: 160, baseType: !2733)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderStats", file: !180, line: 151, size: 1216, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2751, !2752, !2753, !2754, !2755, !2756}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2733, file: !180, line: 152, baseType: !12, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "totstrand", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 96)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "tothalo", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 128)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "totlamp", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 160)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !2733, file: !180, line: 153, baseType: !12, size: 32, offset: 192)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "curfield", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 224)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "curblur", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 240)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "curpart", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 256)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "partsdone", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 272)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "convertdone", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 288)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "curfsa", scope: !2733, file: !180, line: 154, baseType: !79, size: 16, offset: 304)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "localview", scope: !2733, file: !180, line: 155, baseType: !198, size: 8, offset: 320)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "starttime", scope: !2733, file: !180, line: 156, baseType: !2750, size: 64, offset: 384)
!2750 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "lastframetime", scope: !2733, file: !180, line: 156, baseType: !2750, size: 64, offset: 448)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "infostr", scope: !2733, file: !180, line: 157, baseType: !954, size: 64, offset: 512)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "statstr", scope: !2733, file: !180, line: 157, baseType: !954, size: 64, offset: 576)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "scene_name", scope: !2733, file: !180, line: 158, baseType: !304, size: 512, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2733, file: !180, line: 159, baseType: !6, size: 32, offset: 1152)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "mem_peak", scope: !2733, file: !180, line: 159, baseType: !6, size: 32, offset: 1184)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !181, file: !182, line: 263, baseType: !64, size: 64, offset: 48064)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !181, file: !182, line: 264, baseType: !1277, size: 64, offset: 48128)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !181, file: !182, line: 265, baseType: !64, size: 64, offset: 48192)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "draw_lock", scope: !181, file: !182, line: 267, baseType: !2761, size: 64, offset: 48256)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DISubroutineType(types: !2763)
!2763 = !{null, !64, !12}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "dlh", scope: !181, file: !182, line: 268, baseType: !64, size: 64, offset: 48320)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !181, file: !182, line: 269, baseType: !1285, size: 64, offset: 48384)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !181, file: !182, line: 270, baseType: !64, size: 64, offset: 48448)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !181, file: !182, line: 272, baseType: !2732, size: 1216, offset: 48512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !181, file: !182, line: 274, baseType: !2769, size: 64, offset: 49728)
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !940, line: 46, flags: DIFlagFwdDecl)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !181, file: !182, line: 276, baseType: !2477, size: 64, offset: 49792)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !181, file: !182, line: 277, baseType: !2402, size: 64, offset: 49856)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !175, file: !3, line: 124, baseType: !2774, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandSurface", file: !182, line: 448, baseType: !2614)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "faceao", scope: !175, file: !3, line: 125, baseType: !95, size: 64, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "faceenv", scope: !175, file: !3, line: 126, baseType: !95, size: 64, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "faceindirect", scope: !175, file: !3, line: 127, baseType: !95, size: 64, offset: 256)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !175, file: !3, line: 128, baseType: !12, size: 32, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !175, file: !3, line: 128, baseType: !12, size: 32, offset: 352)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !175, file: !3, line: 129, baseType: !12, size: 32, offset: 384)
!2782 = !{!0, !2783, !2786, !2788, !2790}
!2783 = !DIGlobalVariableExpression(var: !2784, expr: !DIExpression())
!2784 = distinct !DIGlobalVariable(name: "c2", scope: !2, file: !3, line: 299, type: !2785, isLocal: true, isDefinition: true)
!2785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6)
!2786 = !DIGlobalVariableExpression(var: !2787, expr: !DIExpression())
!2787 = distinct !DIGlobalVariable(name: "c3", scope: !2, file: !3, line: 299, type: !2785, isLocal: true, isDefinition: true)
!2788 = !DIGlobalVariableExpression(var: !2789, expr: !DIExpression())
!2789 = distinct !DIGlobalVariable(name: "c4", scope: !2, file: !3, line: 300, type: !2785, isLocal: true, isDefinition: true)
!2790 = !DIGlobalVariableExpression(var: !2791, expr: !DIExpression())
!2791 = distinct !DIGlobalVariable(name: "c5", scope: !2, file: !3, line: 300, type: !2785, isLocal: true, isDefinition: true)
!2792 = !{}
!2793 = !{i32 7, !"Dwarf Version", i32 4}
!2794 = !{i32 2, !"Debug Info Version", i32 3}
!2795 = !{i32 1, !"wchar_size", i32 4}
!2796 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2797 = distinct !DISubprogram(name: "make_occ_tree", scope: !3, file: !3, line: 1261, type: !2798, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{null, !178}
!2800 = !DILocalVariable(name: "re", arg: 1, scope: !2797, file: !3, line: 1261, type: !178)
!2801 = !DILocation(line: 1261, column: 28, scope: !2797)
!2802 = !DILocalVariable(name: "othreads", scope: !2797, file: !3, line: 1263, type: !2803)
!2803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 448, elements: !135)
!2804 = !DILocation(line: 1263, column: 18, scope: !2797)
!2805 = !DILocalVariable(name: "tree", scope: !2797, file: !3, line: 1264, type: !85)
!2806 = !DILocation(line: 1264, column: 17, scope: !2797)
!2807 = !DILocalVariable(name: "mesh", scope: !2797, file: !3, line: 1265, type: !2774)
!2808 = !DILocation(line: 1265, column: 17, scope: !2797)
!2809 = !DILocalVariable(name: "threads", scope: !2797, file: !3, line: 1266, type: !227)
!2810 = !DILocation(line: 1266, column: 11, scope: !2797)
!2811 = !DILocalVariable(name: "ao", scope: !2797, file: !3, line: 1267, type: !96)
!2812 = !DILocation(line: 1267, column: 8, scope: !2797)
!2813 = !DILocalVariable(name: "env", scope: !2797, file: !3, line: 1267, type: !96)
!2814 = !DILocation(line: 1267, column: 15, scope: !2797)
!2815 = !DILocalVariable(name: "indirect", scope: !2797, file: !3, line: 1267, type: !96)
!2816 = !DILocation(line: 1267, column: 23, scope: !2797)
!2817 = !DILocalVariable(name: "faceao", scope: !2797, file: !3, line: 1267, type: !95)
!2818 = !DILocation(line: 1267, column: 38, scope: !2797)
!2819 = !DILocalVariable(name: "faceenv", scope: !2797, file: !3, line: 1267, type: !95)
!2820 = !DILocation(line: 1267, column: 52, scope: !2797)
!2821 = !DILocalVariable(name: "faceindirect", scope: !2797, file: !3, line: 1267, type: !95)
!2822 = !DILocation(line: 1267, column: 67, scope: !2797)
!2823 = !DILocalVariable(name: "a", scope: !2797, file: !3, line: 1268, type: !12)
!2824 = !DILocation(line: 1268, column: 6, scope: !2797)
!2825 = !DILocalVariable(name: "totface", scope: !2797, file: !3, line: 1268, type: !12)
!2826 = !DILocation(line: 1268, column: 9, scope: !2797)
!2827 = !DILocalVariable(name: "totthread", scope: !2797, file: !3, line: 1268, type: !12)
!2828 = !DILocation(line: 1268, column: 18, scope: !2797)
!2829 = !DILocalVariable(name: "face", scope: !2797, file: !3, line: 1268, type: !212)
!2830 = !DILocation(line: 1268, column: 30, scope: !2797)
!2831 = !DILocalVariable(name: "count", scope: !2797, file: !3, line: 1268, type: !212)
!2832 = !DILocation(line: 1268, column: 37, scope: !2797)
!2833 = !DILocation(line: 1271, column: 7, scope: !2797)
!2834 = !DILocation(line: 1271, column: 6, scope: !2797)
!2835 = !DILocation(line: 1273, column: 2, scope: !2797)
!2836 = !DILocation(line: 1273, column: 6, scope: !2797)
!2837 = !DILocation(line: 1273, column: 8, scope: !2797)
!2838 = !DILocation(line: 1273, column: 16, scope: !2797)
!2839 = !DILocation(line: 1274, column: 2, scope: !2797)
!2840 = !DILocation(line: 1274, column: 6, scope: !2797)
!2841 = !DILocation(line: 1274, column: 17, scope: !2797)
!2842 = !DILocation(line: 1274, column: 21, scope: !2797)
!2843 = !DILocation(line: 1274, column: 27, scope: !2797)
!2844 = !DILocation(line: 1274, column: 31, scope: !2797)
!2845 = !DILocation(line: 1276, column: 44, scope: !2797)
!2846 = !DILocation(line: 1276, column: 29, scope: !2797)
!2847 = !DILocation(line: 1276, column: 27, scope: !2797)
!2848 = !DILocation(line: 1276, column: 22, scope: !2797)
!2849 = !DILocation(line: 1276, column: 2, scope: !2797)
!2850 = !DILocation(line: 1276, column: 6, scope: !2797)
!2851 = !DILocation(line: 1276, column: 20, scope: !2797)
!2852 = !DILocation(line: 1278, column: 6, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2797, file: !3, line: 1278, column: 6)
!2854 = !DILocation(line: 1278, column: 11, scope: !2853)
!2855 = !DILocation(line: 1278, column: 15, scope: !2853)
!2856 = !DILocation(line: 1278, column: 19, scope: !2853)
!2857 = !DILocation(line: 1278, column: 30, scope: !2853)
!2858 = !DILocation(line: 1278, column: 34, scope: !2853)
!2859 = !DILocation(line: 1278, column: 6, scope: !2797)
!2860 = !DILocation(line: 1279, column: 7, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 1279, column: 7)
!2862 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 1278, column: 40)
!2863 = !DILocation(line: 1279, column: 11, scope: !2861)
!2864 = !DILocation(line: 1279, column: 16, scope: !2861)
!2865 = !DILocation(line: 1279, column: 33, scope: !2861)
!2866 = !DILocation(line: 1279, column: 7, scope: !2862)
!2867 = !DILocation(line: 1280, column: 23, scope: !2861)
!2868 = !DILocation(line: 1280, column: 27, scope: !2861)
!2869 = !DILocation(line: 1280, column: 33, scope: !2861)
!2870 = !DILocation(line: 1280, column: 37, scope: !2861)
!2871 = !DILocation(line: 1280, column: 42, scope: !2861)
!2872 = !DILocation(line: 1280, column: 4, scope: !2861)
!2873 = !DILocation(line: 1281, column: 7, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 1281, column: 7)
!2875 = !DILocation(line: 1281, column: 13, scope: !2874)
!2876 = !DILocation(line: 1281, column: 24, scope: !2874)
!2877 = !DILocation(line: 1281, column: 28, scope: !2874)
!2878 = !DILocation(line: 1281, column: 32, scope: !2874)
!2879 = !DILocation(line: 1281, column: 37, scope: !2874)
!2880 = !DILocation(line: 1281, column: 42, scope: !2874)
!2881 = !DILocation(line: 1281, column: 7, scope: !2862)
!2882 = !DILocation(line: 1282, column: 24, scope: !2874)
!2883 = !DILocation(line: 1282, column: 28, scope: !2874)
!2884 = !DILocation(line: 1282, column: 34, scope: !2874)
!2885 = !DILocation(line: 1282, column: 38, scope: !2874)
!2886 = !DILocation(line: 1282, column: 43, scope: !2874)
!2887 = !DILocation(line: 1282, column: 4, scope: !2874)
!2888 = !DILocation(line: 1284, column: 15, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2862, file: !3, line: 1284, column: 3)
!2890 = !DILocation(line: 1284, column: 19, scope: !2889)
!2891 = !DILocation(line: 1284, column: 33, scope: !2889)
!2892 = !DILocation(line: 1284, column: 13, scope: !2889)
!2893 = !DILocation(line: 1284, column: 8, scope: !2889)
!2894 = !DILocation(line: 1284, column: 40, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2889, file: !3, line: 1284, column: 3)
!2896 = !DILocation(line: 1284, column: 3, scope: !2889)
!2897 = !DILocation(line: 1285, column: 9, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1285, column: 8)
!2899 = distinct !DILexicalBlock(scope: !2895, file: !3, line: 1284, column: 65)
!2900 = !DILocation(line: 1285, column: 15, scope: !2898)
!2901 = !DILocation(line: 1285, column: 20, scope: !2898)
!2902 = !DILocation(line: 1285, column: 24, scope: !2898)
!2903 = !DILocation(line: 1285, column: 30, scope: !2898)
!2904 = !DILocation(line: 1285, column: 33, scope: !2898)
!2905 = !DILocation(line: 1285, column: 37, scope: !2898)
!2906 = !DILocation(line: 1285, column: 43, scope: !2898)
!2907 = !DILocation(line: 1285, column: 8, scope: !2899)
!2908 = !DILocation(line: 1286, column: 5, scope: !2898)
!2909 = !DILocation(line: 1288, column: 12, scope: !2899)
!2910 = !DILocation(line: 1288, column: 38, scope: !2899)
!2911 = !DILocation(line: 1288, column: 44, scope: !2899)
!2912 = !DILocation(line: 1288, column: 36, scope: !2899)
!2913 = !DILocation(line: 1288, column: 10, scope: !2899)
!2914 = !DILocation(line: 1289, column: 13, scope: !2899)
!2915 = !DILocation(line: 1289, column: 45, scope: !2899)
!2916 = !DILocation(line: 1289, column: 51, scope: !2899)
!2917 = !DILocation(line: 1289, column: 43, scope: !2899)
!2918 = !DILocation(line: 1289, column: 11, scope: !2899)
!2919 = !DILocation(line: 1290, column: 14, scope: !2899)
!2920 = !DILocation(line: 1290, column: 46, scope: !2899)
!2921 = !DILocation(line: 1290, column: 52, scope: !2899)
!2922 = !DILocation(line: 1290, column: 44, scope: !2899)
!2923 = !DILocation(line: 1290, column: 12, scope: !2899)
!2924 = !DILocation(line: 1291, column: 19, scope: !2899)
!2925 = !DILocation(line: 1291, column: 51, scope: !2899)
!2926 = !DILocation(line: 1291, column: 57, scope: !2899)
!2927 = !DILocation(line: 1291, column: 49, scope: !2899)
!2928 = !DILocation(line: 1291, column: 17, scope: !2899)
!2929 = !DILocation(line: 1293, column: 17, scope: !2899)
!2930 = !DILocation(line: 1293, column: 23, scope: !2899)
!2931 = !DILocation(line: 1293, column: 31, scope: !2899)
!2932 = !DILocation(line: 1293, column: 16, scope: !2899)
!2933 = !DILocation(line: 1293, column: 42, scope: !2899)
!2934 = !DILocation(line: 1293, column: 46, scope: !2899)
!2935 = !DILocation(line: 1293, column: 48, scope: !2899)
!2936 = !DILocation(line: 1293, column: 14, scope: !2899)
!2937 = !DILocation(line: 1294, column: 14, scope: !2899)
!2938 = !DILocation(line: 1294, column: 20, scope: !2899)
!2939 = !DILocation(line: 1294, column: 30, scope: !2899)
!2940 = !DILocation(line: 1294, column: 28, scope: !2899)
!2941 = !DILocation(line: 1294, column: 12, scope: !2899)
!2942 = !DILocation(line: 1295, column: 11, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1295, column: 4)
!2944 = !DILocation(line: 1295, column: 9, scope: !2943)
!2945 = !DILocation(line: 1295, column: 16, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 1295, column: 4)
!2947 = !DILocation(line: 1295, column: 20, scope: !2946)
!2948 = !DILocation(line: 1295, column: 18, scope: !2946)
!2949 = !DILocation(line: 1295, column: 4, scope: !2943)
!2950 = !DILocation(line: 1296, column: 22, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 1295, column: 36)
!2952 = !DILocation(line: 1296, column: 14, scope: !2951)
!2953 = !DILocation(line: 1296, column: 5, scope: !2951)
!2954 = !DILocation(line: 1296, column: 17, scope: !2951)
!2955 = !DILocation(line: 1296, column: 20, scope: !2951)
!2956 = !DILocation(line: 1297, column: 26, scope: !2951)
!2957 = !DILocation(line: 1297, column: 14, scope: !2951)
!2958 = !DILocation(line: 1297, column: 5, scope: !2951)
!2959 = !DILocation(line: 1297, column: 17, scope: !2951)
!2960 = !DILocation(line: 1297, column: 24, scope: !2951)
!2961 = !DILocation(line: 1298, column: 27, scope: !2951)
!2962 = !DILocation(line: 1298, column: 14, scope: !2951)
!2963 = !DILocation(line: 1298, column: 5, scope: !2951)
!2964 = !DILocation(line: 1298, column: 17, scope: !2951)
!2965 = !DILocation(line: 1298, column: 25, scope: !2951)
!2966 = !DILocation(line: 1299, column: 32, scope: !2951)
!2967 = !DILocation(line: 1299, column: 14, scope: !2951)
!2968 = !DILocation(line: 1299, column: 5, scope: !2951)
!2969 = !DILocation(line: 1299, column: 17, scope: !2951)
!2970 = !DILocation(line: 1299, column: 30, scope: !2951)
!2971 = !DILocation(line: 1300, column: 26, scope: !2951)
!2972 = !DILocation(line: 1300, column: 14, scope: !2951)
!2973 = !DILocation(line: 1300, column: 5, scope: !2951)
!2974 = !DILocation(line: 1300, column: 17, scope: !2951)
!2975 = !DILocation(line: 1300, column: 24, scope: !2951)
!2976 = !DILocation(line: 1301, column: 24, scope: !2951)
!2977 = !DILocation(line: 1301, column: 14, scope: !2951)
!2978 = !DILocation(line: 1301, column: 5, scope: !2951)
!2979 = !DILocation(line: 1301, column: 17, scope: !2951)
!2980 = !DILocation(line: 1301, column: 22, scope: !2951)
!2981 = !DILocation(line: 1302, column: 25, scope: !2951)
!2982 = !DILocation(line: 1302, column: 29, scope: !2951)
!2983 = !DILocation(line: 1302, column: 27, scope: !2951)
!2984 = !DILocation(line: 1302, column: 14, scope: !2951)
!2985 = !DILocation(line: 1302, column: 5, scope: !2951)
!2986 = !DILocation(line: 1302, column: 17, scope: !2951)
!2987 = !DILocation(line: 1302, column: 23, scope: !2951)
!2988 = !DILocation(line: 1303, column: 24, scope: !2951)
!2989 = !DILocation(line: 1303, column: 29, scope: !2951)
!2990 = !DILocation(line: 1303, column: 39, scope: !2951)
!2991 = !DILocation(line: 1303, column: 26, scope: !2951)
!2992 = !DILocation(line: 1303, column: 23, scope: !2951)
!2993 = !DILocation(line: 1303, column: 46, scope: !2951)
!2994 = !DILocation(line: 1303, column: 52, scope: !2951)
!2995 = !DILocation(line: 1303, column: 63, scope: !2951)
!2996 = !DILocation(line: 1303, column: 65, scope: !2951)
!2997 = !DILocation(line: 1303, column: 72, scope: !2951)
!2998 = !DILocation(line: 1303, column: 70, scope: !2951)
!2999 = !DILocation(line: 1303, column: 14, scope: !2951)
!3000 = !DILocation(line: 1303, column: 5, scope: !2951)
!3001 = !DILocation(line: 1303, column: 17, scope: !2951)
!3002 = !DILocation(line: 1303, column: 21, scope: !2951)
!3003 = !DILocation(line: 1304, column: 4, scope: !2951)
!3004 = !DILocation(line: 1295, column: 32, scope: !2946)
!3005 = !DILocation(line: 1295, column: 4, scope: !2946)
!3006 = distinct !{!3006, !2949, !3007}
!3007 = !DILocation(line: 1304, column: 4, scope: !2943)
!3008 = !DILocation(line: 1306, column: 8, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1306, column: 8)
!3010 = !DILocation(line: 1306, column: 18, scope: !3009)
!3011 = !DILocation(line: 1306, column: 8, scope: !2899)
!3012 = !DILocation(line: 1307, column: 32, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 1306, column: 24)
!3014 = !DILocation(line: 1307, column: 31, scope: !3013)
!3015 = !DILocation(line: 1307, column: 5, scope: !3013)
!3016 = !DILocation(line: 1308, column: 4, scope: !3013)
!3017 = !DILocation(line: 1310, column: 59, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 1309, column: 9)
!3019 = !DILocation(line: 1310, column: 5, scope: !3018)
!3020 = !DILocation(line: 1312, column: 12, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3018, file: !3, line: 1312, column: 5)
!3022 = !DILocation(line: 1312, column: 10, scope: !3021)
!3023 = !DILocation(line: 1312, column: 17, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 1312, column: 5)
!3025 = !DILocation(line: 1312, column: 21, scope: !3024)
!3026 = !DILocation(line: 1312, column: 19, scope: !3024)
!3027 = !DILocation(line: 1312, column: 5, scope: !3021)
!3028 = !DILocation(line: 1313, column: 44, scope: !3024)
!3029 = !DILocation(line: 1313, column: 35, scope: !3024)
!3030 = !DILocation(line: 1313, column: 34, scope: !3024)
!3031 = !DILocation(line: 1313, column: 6, scope: !3024)
!3032 = !DILocation(line: 1312, column: 33, scope: !3024)
!3033 = !DILocation(line: 1312, column: 5, scope: !3024)
!3034 = distinct !{!3034, !3027, !3035}
!3035 = !DILocation(line: 1313, column: 46, scope: !3021)
!3036 = !DILocation(line: 1315, column: 5, scope: !3018)
!3037 = !DILocation(line: 1318, column: 11, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1318, column: 4)
!3039 = !DILocation(line: 1318, column: 9, scope: !3038)
!3040 = !DILocation(line: 1318, column: 16, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 1318, column: 4)
!3042 = !DILocation(line: 1318, column: 20, scope: !3041)
!3043 = !DILocation(line: 1318, column: 26, scope: !3041)
!3044 = !DILocation(line: 1318, column: 18, scope: !3041)
!3045 = !DILocation(line: 1318, column: 4, scope: !3038)
!3046 = !DILocation(line: 1319, column: 12, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 1318, column: 40)
!3048 = !DILocation(line: 1319, column: 18, scope: !3047)
!3049 = !DILocation(line: 1319, column: 23, scope: !3047)
!3050 = !DILocation(line: 1319, column: 10, scope: !3047)
!3051 = !DILocation(line: 1321, column: 16, scope: !3047)
!3052 = !DILocation(line: 1321, column: 20, scope: !3047)
!3053 = !DILocation(line: 1321, column: 27, scope: !3047)
!3054 = !DILocation(line: 1321, column: 5, scope: !3047)
!3055 = !DILocation(line: 1322, column: 16, scope: !3047)
!3056 = !DILocation(line: 1322, column: 21, scope: !3047)
!3057 = !DILocation(line: 1322, column: 29, scope: !3047)
!3058 = !DILocation(line: 1322, column: 5, scope: !3047)
!3059 = !DILocation(line: 1323, column: 16, scope: !3047)
!3060 = !DILocation(line: 1323, column: 26, scope: !3047)
!3061 = !DILocation(line: 1323, column: 39, scope: !3047)
!3062 = !DILocation(line: 1323, column: 5, scope: !3047)
!3063 = !DILocation(line: 1325, column: 15, scope: !3047)
!3064 = !DILocation(line: 1325, column: 21, scope: !3047)
!3065 = !DILocation(line: 1325, column: 24, scope: !3047)
!3066 = !DILocation(line: 1325, column: 34, scope: !3047)
!3067 = !DILocation(line: 1325, column: 5, scope: !3047)
!3068 = !DILocation(line: 1326, column: 15, scope: !3047)
!3069 = !DILocation(line: 1326, column: 21, scope: !3047)
!3070 = !DILocation(line: 1326, column: 25, scope: !3047)
!3071 = !DILocation(line: 1326, column: 35, scope: !3047)
!3072 = !DILocation(line: 1326, column: 5, scope: !3047)
!3073 = !DILocation(line: 1327, column: 15, scope: !3047)
!3074 = !DILocation(line: 1327, column: 21, scope: !3047)
!3075 = !DILocation(line: 1327, column: 30, scope: !3047)
!3076 = !DILocation(line: 1327, column: 40, scope: !3047)
!3077 = !DILocation(line: 1327, column: 5, scope: !3047)
!3078 = !DILocation(line: 1328, column: 5, scope: !3047)
!3079 = !DILocation(line: 1328, column: 11, scope: !3047)
!3080 = !DILocation(line: 1328, column: 19, scope: !3047)
!3081 = !DILocation(line: 1329, column: 15, scope: !3047)
!3082 = !DILocation(line: 1329, column: 21, scope: !3047)
!3083 = !DILocation(line: 1329, column: 24, scope: !3047)
!3084 = !DILocation(line: 1329, column: 34, scope: !3047)
!3085 = !DILocation(line: 1329, column: 5, scope: !3047)
!3086 = !DILocation(line: 1330, column: 15, scope: !3047)
!3087 = !DILocation(line: 1330, column: 21, scope: !3047)
!3088 = !DILocation(line: 1330, column: 25, scope: !3047)
!3089 = !DILocation(line: 1330, column: 35, scope: !3047)
!3090 = !DILocation(line: 1330, column: 5, scope: !3047)
!3091 = !DILocation(line: 1331, column: 15, scope: !3047)
!3092 = !DILocation(line: 1331, column: 21, scope: !3047)
!3093 = !DILocation(line: 1331, column: 30, scope: !3047)
!3094 = !DILocation(line: 1331, column: 40, scope: !3047)
!3095 = !DILocation(line: 1331, column: 5, scope: !3047)
!3096 = !DILocation(line: 1332, column: 5, scope: !3047)
!3097 = !DILocation(line: 1332, column: 11, scope: !3047)
!3098 = !DILocation(line: 1332, column: 19, scope: !3047)
!3099 = !DILocation(line: 1333, column: 15, scope: !3047)
!3100 = !DILocation(line: 1333, column: 21, scope: !3047)
!3101 = !DILocation(line: 1333, column: 24, scope: !3047)
!3102 = !DILocation(line: 1333, column: 34, scope: !3047)
!3103 = !DILocation(line: 1333, column: 5, scope: !3047)
!3104 = !DILocation(line: 1334, column: 15, scope: !3047)
!3105 = !DILocation(line: 1334, column: 21, scope: !3047)
!3106 = !DILocation(line: 1334, column: 25, scope: !3047)
!3107 = !DILocation(line: 1334, column: 35, scope: !3047)
!3108 = !DILocation(line: 1334, column: 5, scope: !3047)
!3109 = !DILocation(line: 1335, column: 15, scope: !3047)
!3110 = !DILocation(line: 1335, column: 21, scope: !3047)
!3111 = !DILocation(line: 1335, column: 30, scope: !3047)
!3112 = !DILocation(line: 1335, column: 40, scope: !3047)
!3113 = !DILocation(line: 1335, column: 5, scope: !3047)
!3114 = !DILocation(line: 1336, column: 5, scope: !3047)
!3115 = !DILocation(line: 1336, column: 11, scope: !3047)
!3116 = !DILocation(line: 1336, column: 19, scope: !3047)
!3117 = !DILocation(line: 1338, column: 9, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 1338, column: 9)
!3119 = !DILocation(line: 1338, column: 9, scope: !3047)
!3120 = !DILocation(line: 1339, column: 16, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 1338, column: 18)
!3122 = !DILocation(line: 1339, column: 22, scope: !3121)
!3123 = !DILocation(line: 1339, column: 25, scope: !3121)
!3124 = !DILocation(line: 1339, column: 35, scope: !3121)
!3125 = !DILocation(line: 1339, column: 6, scope: !3121)
!3126 = !DILocation(line: 1340, column: 16, scope: !3121)
!3127 = !DILocation(line: 1340, column: 22, scope: !3121)
!3128 = !DILocation(line: 1340, column: 26, scope: !3121)
!3129 = !DILocation(line: 1340, column: 36, scope: !3121)
!3130 = !DILocation(line: 1340, column: 6, scope: !3121)
!3131 = !DILocation(line: 1341, column: 16, scope: !3121)
!3132 = !DILocation(line: 1341, column: 22, scope: !3121)
!3133 = !DILocation(line: 1341, column: 31, scope: !3121)
!3134 = !DILocation(line: 1341, column: 41, scope: !3121)
!3135 = !DILocation(line: 1341, column: 6, scope: !3121)
!3136 = !DILocation(line: 1342, column: 6, scope: !3121)
!3137 = !DILocation(line: 1342, column: 12, scope: !3121)
!3138 = !DILocation(line: 1342, column: 20, scope: !3121)
!3139 = !DILocation(line: 1343, column: 5, scope: !3121)
!3140 = !DILocation(line: 1344, column: 4, scope: !3047)
!3141 = !DILocation(line: 1318, column: 36, scope: !3041)
!3142 = !DILocation(line: 1318, column: 4, scope: !3041)
!3143 = distinct !{!3143, !3045, !3144}
!3144 = !DILocation(line: 1344, column: 4, scope: !3038)
!3145 = !DILocation(line: 1346, column: 11, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !2899, file: !3, line: 1346, column: 4)
!3147 = !DILocation(line: 1346, column: 9, scope: !3146)
!3148 = !DILocation(line: 1346, column: 16, scope: !3149)
!3149 = distinct !DILexicalBlock(scope: !3146, file: !3, line: 1346, column: 4)
!3150 = !DILocation(line: 1346, column: 20, scope: !3149)
!3151 = !DILocation(line: 1346, column: 26, scope: !3149)
!3152 = !DILocation(line: 1346, column: 18, scope: !3149)
!3153 = !DILocation(line: 1346, column: 4, scope: !3146)
!3154 = !DILocation(line: 1347, column: 9, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3156, file: !3, line: 1347, column: 9)
!3156 = distinct !DILexicalBlock(scope: !3149, file: !3, line: 1346, column: 40)
!3157 = !DILocation(line: 1347, column: 15, scope: !3155)
!3158 = !DILocation(line: 1347, column: 9, scope: !3156)
!3159 = !DILocation(line: 1348, column: 16, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 1347, column: 19)
!3161 = !DILocation(line: 1348, column: 22, scope: !3160)
!3162 = !DILocation(line: 1348, column: 25, scope: !3160)
!3163 = !DILocation(line: 1348, column: 36, scope: !3160)
!3164 = !DILocation(line: 1348, column: 42, scope: !3160)
!3165 = !DILocation(line: 1348, column: 34, scope: !3160)
!3166 = !DILocation(line: 1348, column: 6, scope: !3160)
!3167 = !DILocation(line: 1349, column: 16, scope: !3160)
!3168 = !DILocation(line: 1349, column: 22, scope: !3160)
!3169 = !DILocation(line: 1349, column: 26, scope: !3160)
!3170 = !DILocation(line: 1349, column: 37, scope: !3160)
!3171 = !DILocation(line: 1349, column: 43, scope: !3160)
!3172 = !DILocation(line: 1349, column: 35, scope: !3160)
!3173 = !DILocation(line: 1349, column: 6, scope: !3160)
!3174 = !DILocation(line: 1350, column: 16, scope: !3160)
!3175 = !DILocation(line: 1350, column: 22, scope: !3160)
!3176 = !DILocation(line: 1350, column: 31, scope: !3160)
!3177 = !DILocation(line: 1350, column: 42, scope: !3160)
!3178 = !DILocation(line: 1350, column: 48, scope: !3160)
!3179 = !DILocation(line: 1350, column: 40, scope: !3160)
!3180 = !DILocation(line: 1350, column: 6, scope: !3160)
!3181 = !DILocation(line: 1351, column: 5, scope: !3160)
!3182 = !DILocation(line: 1352, column: 4, scope: !3156)
!3183 = !DILocation(line: 1346, column: 36, scope: !3149)
!3184 = !DILocation(line: 1346, column: 4, scope: !3149)
!3185 = distinct !{!3185, !3153, !3186}
!3186 = !DILocation(line: 1352, column: 4, scope: !3146)
!3187 = !DILocation(line: 1354, column: 4, scope: !2899)
!3188 = !DILocation(line: 1354, column: 14, scope: !2899)
!3189 = !DILocation(line: 1355, column: 4, scope: !2899)
!3190 = !DILocation(line: 1355, column: 14, scope: !2899)
!3191 = !DILocation(line: 1356, column: 4, scope: !2899)
!3192 = !DILocation(line: 1356, column: 14, scope: !2899)
!3193 = !DILocation(line: 1357, column: 4, scope: !2899)
!3194 = !DILocation(line: 1357, column: 14, scope: !2899)
!3195 = !DILocation(line: 1358, column: 3, scope: !2899)
!3196 = !DILocation(line: 1284, column: 53, scope: !2895)
!3197 = !DILocation(line: 1284, column: 59, scope: !2895)
!3198 = !DILocation(line: 1284, column: 51, scope: !2895)
!3199 = !DILocation(line: 1284, column: 3, scope: !2895)
!3200 = distinct !{!3200, !2896, !3201}
!3201 = !DILocation(line: 1358, column: 3, scope: !2889)
!3202 = !DILocation(line: 1359, column: 2, scope: !2862)
!3203 = !DILocation(line: 1360, column: 1, scope: !2797)
!3204 = distinct !DISubprogram(name: "occ_tree_build", scope: !3, file: !3, line: 646, type: !3205, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!85, !178}
!3207 = !DILocalVariable(name: "re", arg: 1, scope: !3204, file: !3, line: 646, type: !178)
!3208 = !DILocation(line: 646, column: 46, scope: !3204)
!3209 = !DILocalVariable(name: "tree", scope: !3204, file: !3, line: 648, type: !85)
!3210 = !DILocation(line: 648, column: 17, scope: !3204)
!3211 = !DILocalVariable(name: "obi", scope: !3204, file: !3, line: 649, type: !3212)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_typedef, name: "ObjectInstanceRen", file: !182, line: 368, baseType: !2485)
!3214 = !DILocation(line: 649, column: 21, scope: !3204)
!3215 = !DILocalVariable(name: "obr", scope: !3204, file: !3, line: 650, type: !2490)
!3216 = !DILocation(line: 650, column: 13, scope: !3204)
!3217 = !DILocalVariable(name: "ma", scope: !3204, file: !3, line: 651, type: !3218)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !254, line: 203, baseType: !253)
!3220 = !DILocation(line: 651, column: 12, scope: !3204)
!3221 = !DILocalVariable(name: "vlr", scope: !3204, file: !3, line: 652, type: !3222)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "VlakRen", file: !182, line: 411, baseType: !2542)
!3224 = !DILocation(line: 652, column: 11, scope: !3204)
!3225 = !DILocalVariable(name: "a", scope: !3204, file: !3, line: 653, type: !12)
!3226 = !DILocation(line: 653, column: 6, scope: !3204)
!3227 = !DILocalVariable(name: "b", scope: !3204, file: !3, line: 653, type: !12)
!3228 = !DILocation(line: 653, column: 9, scope: !3204)
!3229 = !DILocalVariable(name: "c", scope: !3204, file: !3, line: 653, type: !12)
!3230 = !DILocation(line: 653, column: 12, scope: !3204)
!3231 = !DILocalVariable(name: "totface", scope: !3204, file: !3, line: 653, type: !12)
!3232 = !DILocation(line: 653, column: 15, scope: !3204)
!3233 = !DILocation(line: 656, column: 10, scope: !3204)
!3234 = !DILocation(line: 657, column: 13, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 657, column: 2)
!3236 = !DILocation(line: 657, column: 17, scope: !3235)
!3237 = !DILocation(line: 657, column: 31, scope: !3235)
!3238 = !DILocation(line: 657, column: 11, scope: !3235)
!3239 = !DILocation(line: 657, column: 7, scope: !3235)
!3240 = !DILocation(line: 657, column: 38, scope: !3241)
!3241 = distinct !DILexicalBlock(scope: !3235, file: !3, line: 657, column: 2)
!3242 = !DILocation(line: 657, column: 2, scope: !3235)
!3243 = !DILocation(line: 658, column: 9, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3241, file: !3, line: 657, column: 60)
!3245 = !DILocation(line: 658, column: 14, scope: !3244)
!3246 = !DILocation(line: 658, column: 7, scope: !3244)
!3247 = !DILocation(line: 659, column: 10, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3244, file: !3, line: 659, column: 3)
!3249 = !DILocation(line: 659, column: 8, scope: !3248)
!3250 = !DILocation(line: 659, column: 15, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3248, file: !3, line: 659, column: 3)
!3252 = !DILocation(line: 659, column: 19, scope: !3251)
!3253 = !DILocation(line: 659, column: 24, scope: !3251)
!3254 = !DILocation(line: 659, column: 17, scope: !3251)
!3255 = !DILocation(line: 659, column: 3, scope: !3248)
!3256 = !DILocation(line: 660, column: 9, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 660, column: 8)
!3258 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 659, column: 38)
!3259 = !DILocation(line: 660, column: 11, scope: !3257)
!3260 = !DILocation(line: 660, column: 18, scope: !3257)
!3261 = !DILocation(line: 660, column: 8, scope: !3258)
!3262 = !DILocation(line: 660, column: 30, scope: !3257)
!3263 = !DILocation(line: 660, column: 35, scope: !3257)
!3264 = !DILocation(line: 660, column: 45, scope: !3257)
!3265 = !DILocation(line: 660, column: 47, scope: !3257)
!3266 = !DILocation(line: 660, column: 53, scope: !3257)
!3267 = !DILocation(line: 660, column: 28, scope: !3257)
!3268 = !DILocation(line: 660, column: 24, scope: !3257)
!3269 = !DILocation(line: 661, column: 12, scope: !3257)
!3270 = !DILocation(line: 663, column: 9, scope: !3258)
!3271 = !DILocation(line: 663, column: 14, scope: !3258)
!3272 = !DILocation(line: 663, column: 7, scope: !3258)
!3273 = !DILocation(line: 665, column: 9, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3258, file: !3, line: 665, column: 8)
!3275 = !DILocation(line: 665, column: 13, scope: !3274)
!3276 = !DILocation(line: 665, column: 24, scope: !3274)
!3277 = !DILocation(line: 665, column: 47, scope: !3274)
!3278 = !DILocation(line: 665, column: 51, scope: !3274)
!3279 = !DILocation(line: 665, column: 55, scope: !3274)
!3280 = !DILocation(line: 665, column: 69, scope: !3274)
!3281 = !DILocation(line: 665, column: 8, scope: !3258)
!3282 = !DILocation(line: 666, column: 12, scope: !3274)
!3283 = !DILocation(line: 666, column: 5, scope: !3274)
!3284 = !DILocation(line: 667, column: 3, scope: !3258)
!3285 = !DILocation(line: 659, column: 34, scope: !3251)
!3286 = !DILocation(line: 659, column: 3, scope: !3251)
!3287 = distinct !{!3287, !3255, !3288}
!3288 = !DILocation(line: 667, column: 3, scope: !3248)
!3289 = !DILocation(line: 668, column: 2, scope: !3244)
!3290 = !DILocation(line: 657, column: 49, scope: !3241)
!3291 = !DILocation(line: 657, column: 54, scope: !3241)
!3292 = !DILocation(line: 657, column: 47, scope: !3241)
!3293 = !DILocation(line: 657, column: 2, scope: !3241)
!3294 = distinct !{!3294, !3242, !3295}
!3295 = !DILocation(line: 668, column: 2, scope: !3235)
!3296 = !DILocation(line: 670, column: 6, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 670, column: 6)
!3298 = !DILocation(line: 670, column: 14, scope: !3297)
!3299 = !DILocation(line: 670, column: 6, scope: !3204)
!3300 = !DILocation(line: 671, column: 3, scope: !3297)
!3301 = !DILocation(line: 673, column: 9, scope: !3204)
!3302 = !DILocation(line: 673, column: 7, scope: !3204)
!3303 = !DILocation(line: 674, column: 18, scope: !3204)
!3304 = !DILocation(line: 674, column: 2, scope: !3204)
!3305 = !DILocation(line: 674, column: 8, scope: !3204)
!3306 = !DILocation(line: 674, column: 16, scope: !3204)
!3307 = !DILocation(line: 677, column: 40, scope: !3204)
!3308 = !DILocation(line: 677, column: 44, scope: !3204)
!3309 = !DILocation(line: 677, column: 47, scope: !3204)
!3310 = !DILocation(line: 677, column: 51, scope: !3204)
!3311 = !DILocation(line: 677, column: 56, scope: !3204)
!3312 = !DILocation(line: 677, column: 16, scope: !3204)
!3313 = !DILocation(line: 677, column: 2, scope: !3204)
!3314 = !DILocation(line: 677, column: 8, scope: !3204)
!3315 = !DILocation(line: 677, column: 14, scope: !3204)
!3316 = !DILocation(line: 678, column: 19, scope: !3204)
!3317 = !DILocation(line: 678, column: 23, scope: !3204)
!3318 = !DILocation(line: 678, column: 28, scope: !3204)
!3319 = !DILocation(line: 678, column: 35, scope: !3204)
!3320 = !DILocation(line: 678, column: 18, scope: !3204)
!3321 = !DILocation(line: 678, column: 50, scope: !3204)
!3322 = !DILocation(line: 678, column: 54, scope: !3204)
!3323 = !DILocation(line: 678, column: 59, scope: !3204)
!3324 = !DILocation(line: 678, column: 2, scope: !3204)
!3325 = !DILocation(line: 678, column: 8, scope: !3204)
!3326 = !DILocation(line: 678, column: 16, scope: !3204)
!3327 = !DILocation(line: 679, column: 22, scope: !3204)
!3328 = !DILocation(line: 679, column: 26, scope: !3204)
!3329 = !DILocation(line: 679, column: 31, scope: !3204)
!3330 = !DILocation(line: 679, column: 50, scope: !3204)
!3331 = !DILocation(line: 679, column: 57, scope: !3204)
!3332 = !DILocation(line: 679, column: 60, scope: !3204)
!3333 = !DILocation(line: 679, column: 64, scope: !3204)
!3334 = !DILocation(line: 679, column: 69, scope: !3204)
!3335 = !DILocation(line: 679, column: 89, scope: !3204)
!3336 = !DILocation(line: 0, scope: !3204)
!3337 = !DILocation(line: 679, column: 2, scope: !3204)
!3338 = !DILocation(line: 679, column: 8, scope: !3204)
!3339 = !DILocation(line: 679, column: 19, scope: !3204)
!3340 = !DILocation(line: 682, column: 16, scope: !3204)
!3341 = !DILocation(line: 682, column: 2, scope: !3204)
!3342 = !DILocation(line: 682, column: 8, scope: !3204)
!3343 = !DILocation(line: 682, column: 14, scope: !3204)
!3344 = !DILocation(line: 683, column: 26, scope: !3204)
!3345 = !DILocation(line: 683, column: 32, scope: !3204)
!3346 = !DILocation(line: 683, column: 2, scope: !3204)
!3347 = !DILocation(line: 685, column: 6, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 685, column: 6)
!3349 = !DILocation(line: 685, column: 10, scope: !3348)
!3350 = !DILocation(line: 685, column: 15, scope: !3348)
!3351 = !DILocation(line: 685, column: 22, scope: !3348)
!3352 = !DILocation(line: 685, column: 6, scope: !3204)
!3353 = !DILocation(line: 686, column: 17, scope: !3348)
!3354 = !DILocation(line: 686, column: 3, scope: !3348)
!3355 = !DILocation(line: 686, column: 9, scope: !3348)
!3356 = !DILocation(line: 686, column: 15, scope: !3348)
!3357 = !DILocation(line: 688, column: 15, scope: !3204)
!3358 = !DILocation(line: 688, column: 45, scope: !3204)
!3359 = !DILocation(line: 688, column: 43, scope: !3204)
!3360 = !DILocation(line: 688, column: 2, scope: !3204)
!3361 = !DILocation(line: 688, column: 8, scope: !3204)
!3362 = !DILocation(line: 688, column: 13, scope: !3204)
!3363 = !DILocation(line: 689, column: 13, scope: !3204)
!3364 = !DILocation(line: 689, column: 45, scope: !3204)
!3365 = !DILocation(line: 689, column: 43, scope: !3204)
!3366 = !DILocation(line: 689, column: 2, scope: !3204)
!3367 = !DILocation(line: 689, column: 8, scope: !3204)
!3368 = !DILocation(line: 689, column: 11, scope: !3204)
!3369 = !DILocation(line: 690, column: 20, scope: !3204)
!3370 = !DILocation(line: 690, column: 48, scope: !3204)
!3371 = !DILocation(line: 690, column: 46, scope: !3204)
!3372 = !DILocation(line: 690, column: 2, scope: !3204)
!3373 = !DILocation(line: 690, column: 8, scope: !3204)
!3374 = !DILocation(line: 690, column: 18, scope: !3204)
!3375 = !DILocation(line: 692, column: 6, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 692, column: 6)
!3377 = !DILocation(line: 692, column: 12, scope: !3376)
!3378 = !DILocation(line: 692, column: 6, scope: !3204)
!3379 = !DILocation(line: 693, column: 15, scope: !3376)
!3380 = !DILocation(line: 693, column: 47, scope: !3376)
!3381 = !DILocation(line: 693, column: 45, scope: !3376)
!3382 = !DILocation(line: 693, column: 3, scope: !3376)
!3383 = !DILocation(line: 693, column: 9, scope: !3376)
!3384 = !DILocation(line: 693, column: 13, scope: !3376)
!3385 = !DILocation(line: 696, column: 9, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 696, column: 2)
!3387 = !DILocation(line: 696, column: 16, scope: !3386)
!3388 = !DILocation(line: 696, column: 27, scope: !3386)
!3389 = !DILocation(line: 696, column: 31, scope: !3386)
!3390 = !DILocation(line: 696, column: 45, scope: !3386)
!3391 = !DILocation(line: 696, column: 25, scope: !3386)
!3392 = !DILocation(line: 696, column: 7, scope: !3386)
!3393 = !DILocation(line: 696, column: 52, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 696, column: 2)
!3395 = !DILocation(line: 696, column: 2, scope: !3386)
!3396 = !DILocation(line: 697, column: 9, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 696, column: 79)
!3398 = !DILocation(line: 697, column: 14, scope: !3397)
!3399 = !DILocation(line: 697, column: 7, scope: !3397)
!3400 = !DILocation(line: 698, column: 10, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 698, column: 3)
!3402 = !DILocation(line: 698, column: 8, scope: !3401)
!3403 = !DILocation(line: 698, column: 15, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 698, column: 3)
!3405 = !DILocation(line: 698, column: 19, scope: !3404)
!3406 = !DILocation(line: 698, column: 24, scope: !3404)
!3407 = !DILocation(line: 698, column: 17, scope: !3404)
!3408 = !DILocation(line: 698, column: 3, scope: !3401)
!3409 = !DILocation(line: 699, column: 9, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 699, column: 8)
!3411 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 698, column: 38)
!3412 = !DILocation(line: 699, column: 11, scope: !3410)
!3413 = !DILocation(line: 699, column: 18, scope: !3410)
!3414 = !DILocation(line: 699, column: 8, scope: !3411)
!3415 = !DILocation(line: 699, column: 30, scope: !3410)
!3416 = !DILocation(line: 699, column: 35, scope: !3410)
!3417 = !DILocation(line: 699, column: 45, scope: !3410)
!3418 = !DILocation(line: 699, column: 47, scope: !3410)
!3419 = !DILocation(line: 699, column: 53, scope: !3410)
!3420 = !DILocation(line: 699, column: 28, scope: !3410)
!3421 = !DILocation(line: 699, column: 24, scope: !3410)
!3422 = !DILocation(line: 700, column: 12, scope: !3410)
!3423 = !DILocation(line: 702, column: 9, scope: !3411)
!3424 = !DILocation(line: 702, column: 14, scope: !3411)
!3425 = !DILocation(line: 702, column: 7, scope: !3411)
!3426 = !DILocation(line: 704, column: 9, scope: !3427)
!3427 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 704, column: 8)
!3428 = !DILocation(line: 704, column: 13, scope: !3427)
!3429 = !DILocation(line: 704, column: 24, scope: !3427)
!3430 = !DILocation(line: 704, column: 47, scope: !3427)
!3431 = !DILocation(line: 704, column: 51, scope: !3427)
!3432 = !DILocation(line: 704, column: 55, scope: !3427)
!3433 = !DILocation(line: 704, column: 69, scope: !3427)
!3434 = !DILocation(line: 704, column: 8, scope: !3411)
!3435 = !DILocation(line: 705, column: 25, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3427, file: !3, line: 704, column: 90)
!3437 = !DILocation(line: 705, column: 5, scope: !3436)
!3438 = !DILocation(line: 705, column: 11, scope: !3436)
!3439 = !DILocation(line: 705, column: 16, scope: !3436)
!3440 = !DILocation(line: 705, column: 19, scope: !3436)
!3441 = !DILocation(line: 705, column: 23, scope: !3436)
!3442 = !DILocation(line: 706, column: 28, scope: !3436)
!3443 = !DILocation(line: 706, column: 5, scope: !3436)
!3444 = !DILocation(line: 706, column: 11, scope: !3436)
!3445 = !DILocation(line: 706, column: 16, scope: !3436)
!3446 = !DILocation(line: 706, column: 19, scope: !3436)
!3447 = !DILocation(line: 706, column: 26, scope: !3436)
!3448 = !DILocation(line: 707, column: 5, scope: !3436)
!3449 = !DILocation(line: 707, column: 11, scope: !3436)
!3450 = !DILocation(line: 707, column: 21, scope: !3436)
!3451 = !DILocation(line: 707, column: 24, scope: !3436)
!3452 = !DILocation(line: 708, column: 15, scope: !3436)
!3453 = !DILocation(line: 708, column: 21, scope: !3436)
!3454 = !DILocation(line: 708, column: 26, scope: !3436)
!3455 = !DILocation(line: 708, column: 30, scope: !3436)
!3456 = !DILocation(line: 708, column: 36, scope: !3436)
!3457 = !DILocation(line: 708, column: 39, scope: !3436)
!3458 = !DILocation(line: 708, column: 5, scope: !3436)
!3459 = !DILocation(line: 709, column: 6, scope: !3436)
!3460 = !DILocation(line: 710, column: 4, scope: !3436)
!3461 = !DILocation(line: 711, column: 3, scope: !3411)
!3462 = !DILocation(line: 698, column: 34, scope: !3404)
!3463 = !DILocation(line: 698, column: 3, scope: !3404)
!3464 = distinct !{!3464, !3408, !3465}
!3465 = !DILocation(line: 711, column: 3, scope: !3401)
!3466 = !DILocation(line: 712, column: 2, scope: !3397)
!3467 = !DILocation(line: 696, column: 63, scope: !3394)
!3468 = !DILocation(line: 696, column: 68, scope: !3394)
!3469 = !DILocation(line: 696, column: 61, scope: !3394)
!3470 = !DILocation(line: 696, column: 75, scope: !3394)
!3471 = !DILocation(line: 696, column: 2, scope: !3394)
!3472 = distinct !{!3472, !3395, !3473}
!3473 = !DILocation(line: 712, column: 2, scope: !3386)
!3474 = !DILocation(line: 715, column: 26, scope: !3204)
!3475 = !DILocation(line: 715, column: 30, scope: !3204)
!3476 = !DILocation(line: 715, column: 32, scope: !3204)
!3477 = !DILocation(line: 715, column: 40, scope: !3204)
!3478 = !DILocation(line: 715, column: 44, scope: !3204)
!3479 = !DILocation(line: 715, column: 47, scope: !3204)
!3480 = !DILocation(line: 715, column: 55, scope: !3204)
!3481 = !DILocation(line: 715, column: 25, scope: !3204)
!3482 = !DILocation(line: 715, column: 2, scope: !3204)
!3483 = !DILocation(line: 715, column: 8, scope: !3204)
!3484 = !DILocation(line: 715, column: 23, scope: !3204)
!3485 = !DILocation(line: 716, column: 27, scope: !3204)
!3486 = !DILocation(line: 716, column: 33, scope: !3204)
!3487 = !DILocation(line: 716, column: 48, scope: !3204)
!3488 = !DILocation(line: 716, column: 2, scope: !3204)
!3489 = !DILocation(line: 716, column: 8, scope: !3204)
!3490 = !DILocation(line: 716, column: 24, scope: !3204)
!3491 = !DILocation(line: 719, column: 34, scope: !3204)
!3492 = !DILocation(line: 719, column: 40, scope: !3204)
!3493 = !DILocation(line: 719, column: 15, scope: !3204)
!3494 = !DILocation(line: 719, column: 2, scope: !3204)
!3495 = !DILocation(line: 719, column: 8, scope: !3204)
!3496 = !DILocation(line: 719, column: 13, scope: !3204)
!3497 = !DILocation(line: 720, column: 2, scope: !3204)
!3498 = !DILocation(line: 720, column: 8, scope: !3204)
!3499 = !DILocation(line: 720, column: 17, scope: !3204)
!3500 = !DILocation(line: 721, column: 22, scope: !3204)
!3501 = !DILocation(line: 721, column: 28, scope: !3204)
!3502 = !DILocation(line: 721, column: 34, scope: !3204)
!3503 = !DILocation(line: 721, column: 43, scope: !3204)
!3504 = !DILocation(line: 721, column: 2, scope: !3204)
!3505 = !DILocation(line: 723, column: 6, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 723, column: 6)
!3507 = !DILocation(line: 723, column: 12, scope: !3506)
!3508 = !DILocation(line: 723, column: 6, scope: !3204)
!3509 = !DILocation(line: 724, column: 9, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 724, column: 7)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 723, column: 24)
!3512 = !DILocation(line: 724, column: 13, scope: !3510)
!3513 = !DILocation(line: 724, column: 24, scope: !3510)
!3514 = !DILocation(line: 724, column: 28, scope: !3510)
!3515 = !DILocation(line: 724, column: 7, scope: !3511)
!3516 = !DILocation(line: 725, column: 20, scope: !3510)
!3517 = !DILocation(line: 725, column: 24, scope: !3510)
!3518 = !DILocation(line: 725, column: 4, scope: !3510)
!3519 = !DILocation(line: 727, column: 9, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3511, file: !3, line: 727, column: 7)
!3521 = !DILocation(line: 727, column: 13, scope: !3520)
!3522 = !DILocation(line: 727, column: 24, scope: !3520)
!3523 = !DILocation(line: 727, column: 28, scope: !3520)
!3524 = !DILocation(line: 727, column: 7, scope: !3511)
!3525 = !DILocation(line: 728, column: 22, scope: !3520)
!3526 = !DILocation(line: 728, column: 28, scope: !3520)
!3527 = !DILocation(line: 728, column: 34, scope: !3520)
!3528 = !DILocation(line: 728, column: 4, scope: !3520)
!3529 = !DILocation(line: 729, column: 2, scope: !3511)
!3530 = !DILocation(line: 731, column: 2, scope: !3204)
!3531 = !DILocation(line: 731, column: 12, scope: !3204)
!3532 = !DILocation(line: 731, column: 18, scope: !3204)
!3533 = !DILocation(line: 732, column: 2, scope: !3204)
!3534 = !DILocation(line: 732, column: 8, scope: !3204)
!3535 = !DILocation(line: 732, column: 11, scope: !3204)
!3536 = !DILocation(line: 734, column: 8, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 734, column: 6)
!3538 = !DILocation(line: 734, column: 12, scope: !3537)
!3539 = !DILocation(line: 734, column: 23, scope: !3537)
!3540 = !DILocation(line: 734, column: 27, scope: !3537)
!3541 = !DILocation(line: 734, column: 6, scope: !3204)
!3542 = !DILocation(line: 735, column: 26, scope: !3537)
!3543 = !DILocation(line: 735, column: 32, scope: !3537)
!3544 = !DILocation(line: 735, column: 3, scope: !3537)
!3545 = !DILocation(line: 737, column: 9, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 737, column: 2)
!3547 = !DILocation(line: 737, column: 7, scope: !3546)
!3548 = !DILocation(line: 737, column: 14, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 737, column: 2)
!3550 = !DILocation(line: 737, column: 16, scope: !3549)
!3551 = !DILocation(line: 737, column: 2, scope: !3546)
!3552 = !DILocation(line: 738, column: 20, scope: !3549)
!3553 = !DILocation(line: 738, column: 62, scope: !3549)
!3554 = !DILocation(line: 738, column: 68, scope: !3549)
!3555 = !DILocation(line: 738, column: 77, scope: !3549)
!3556 = !DILocation(line: 738, column: 61, scope: !3549)
!3557 = !DILocation(line: 738, column: 59, scope: !3549)
!3558 = !DILocation(line: 738, column: 3, scope: !3549)
!3559 = !DILocation(line: 738, column: 9, scope: !3549)
!3560 = !DILocation(line: 738, column: 15, scope: !3549)
!3561 = !DILocation(line: 738, column: 18, scope: !3549)
!3562 = !DILocation(line: 737, column: 40, scope: !3549)
!3563 = !DILocation(line: 737, column: 2, scope: !3549)
!3564 = distinct !{!3564, !3551, !3565}
!3565 = !DILocation(line: 738, column: 93, scope: !3546)
!3566 = !DILocation(line: 740, column: 9, scope: !3204)
!3567 = !DILocation(line: 740, column: 2, scope: !3204)
!3568 = !DILocation(line: 741, column: 1, scope: !3204)
!3569 = distinct !DISubprogram(name: "occ_compute_passes", scope: !3, file: !3, line: 975, type: !3570, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{null, !178, !85, !12}
!3572 = !DILocalVariable(name: "re", arg: 1, scope: !3569, file: !3, line: 975, type: !178)
!3573 = !DILocation(line: 975, column: 40, scope: !3569)
!3574 = !DILocalVariable(name: "tree", arg: 2, scope: !3569, file: !3, line: 975, type: !85)
!3575 = !DILocation(line: 975, column: 59, scope: !3569)
!3576 = !DILocalVariable(name: "totpass", arg: 3, scope: !3569, file: !3, line: 975, type: !12)
!3577 = !DILocation(line: 975, column: 69, scope: !3569)
!3578 = !DILocalVariable(name: "occ", scope: !3569, file: !3, line: 977, type: !7)
!3579 = !DILocation(line: 977, column: 9, scope: !3569)
!3580 = !DILocalVariable(name: "co", scope: !3569, file: !3, line: 977, type: !96)
!3581 = !DILocation(line: 977, column: 14, scope: !3569)
!3582 = !DILocalVariable(name: "n", scope: !3569, file: !3, line: 977, type: !96)
!3583 = !DILocation(line: 977, column: 21, scope: !3569)
!3584 = !DILocalVariable(name: "pass", scope: !3569, file: !3, line: 978, type: !12)
!3585 = !DILocation(line: 978, column: 6, scope: !3569)
!3586 = !DILocalVariable(name: "i", scope: !3569, file: !3, line: 978, type: !12)
!3587 = !DILocation(line: 978, column: 12, scope: !3569)
!3588 = !DILocation(line: 980, column: 8, scope: !3569)
!3589 = !DILocation(line: 980, column: 36, scope: !3569)
!3590 = !DILocation(line: 980, column: 42, scope: !3569)
!3591 = !DILocation(line: 980, column: 34, scope: !3569)
!3592 = !DILocation(line: 980, column: 6, scope: !3569)
!3593 = !DILocation(line: 982, column: 12, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3569, file: !3, line: 982, column: 2)
!3595 = !DILocation(line: 982, column: 7, scope: !3594)
!3596 = !DILocation(line: 982, column: 17, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3594, file: !3, line: 982, column: 2)
!3598 = !DILocation(line: 982, column: 24, scope: !3597)
!3599 = !DILocation(line: 982, column: 22, scope: !3597)
!3600 = !DILocation(line: 982, column: 2, scope: !3594)
!3601 = !DILocation(line: 983, column: 10, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 983, column: 3)
!3603 = distinct !DILexicalBlock(scope: !3597, file: !3, line: 982, column: 41)
!3604 = !DILocation(line: 983, column: 8, scope: !3602)
!3605 = !DILocation(line: 983, column: 15, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3602, file: !3, line: 983, column: 3)
!3607 = !DILocation(line: 983, column: 19, scope: !3606)
!3608 = !DILocation(line: 983, column: 25, scope: !3606)
!3609 = !DILocation(line: 983, column: 17, scope: !3606)
!3610 = !DILocation(line: 983, column: 3, scope: !3602)
!3611 = !DILocation(line: 984, column: 14, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 983, column: 39)
!3613 = !DILocation(line: 984, column: 20, scope: !3612)
!3614 = !DILocation(line: 984, column: 25, scope: !3612)
!3615 = !DILocation(line: 984, column: 29, scope: !3612)
!3616 = !DILocation(line: 984, column: 33, scope: !3612)
!3617 = !DILocation(line: 984, column: 4, scope: !3612)
!3618 = !DILocation(line: 985, column: 14, scope: !3612)
!3619 = !DILocation(line: 985, column: 4, scope: !3612)
!3620 = !DILocation(line: 986, column: 17, scope: !3612)
!3621 = !DILocation(line: 986, column: 21, scope: !3612)
!3622 = !DILocation(line: 986, column: 4, scope: !3612)
!3623 = !DILocation(line: 988, column: 15, scope: !3612)
!3624 = !DILocation(line: 988, column: 25, scope: !3612)
!3625 = !DILocation(line: 988, column: 31, scope: !3612)
!3626 = !DILocation(line: 988, column: 36, scope: !3612)
!3627 = !DILocation(line: 988, column: 40, scope: !3612)
!3628 = !DILocation(line: 988, column: 44, scope: !3612)
!3629 = !DILocation(line: 988, column: 48, scope: !3612)
!3630 = !DILocation(line: 988, column: 52, scope: !3612)
!3631 = !DILocation(line: 988, column: 4, scope: !3612)
!3632 = !DILocation(line: 989, column: 8, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 989, column: 8)
!3634 = !DILocation(line: 989, column: 12, scope: !3633)
!3635 = !DILocation(line: 989, column: 23, scope: !3633)
!3636 = !DILocation(line: 989, column: 27, scope: !3633)
!3637 = !DILocation(line: 989, column: 8, scope: !3612)
!3638 = !DILocation(line: 990, column: 5, scope: !3633)
!3639 = !DILocation(line: 991, column: 3, scope: !3612)
!3640 = !DILocation(line: 983, column: 35, scope: !3606)
!3641 = !DILocation(line: 983, column: 3, scope: !3606)
!3642 = distinct !{!3642, !3610, !3643}
!3643 = !DILocation(line: 991, column: 3, scope: !3602)
!3644 = !DILocation(line: 993, column: 7, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 993, column: 7)
!3646 = !DILocation(line: 993, column: 11, scope: !3645)
!3647 = !DILocation(line: 993, column: 22, scope: !3645)
!3648 = !DILocation(line: 993, column: 26, scope: !3645)
!3649 = !DILocation(line: 993, column: 7, scope: !3603)
!3650 = !DILocation(line: 994, column: 4, scope: !3645)
!3651 = !DILocation(line: 996, column: 10, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 996, column: 3)
!3653 = !DILocation(line: 996, column: 8, scope: !3652)
!3654 = !DILocation(line: 996, column: 15, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 996, column: 3)
!3656 = !DILocation(line: 996, column: 19, scope: !3655)
!3657 = !DILocation(line: 996, column: 25, scope: !3655)
!3658 = !DILocation(line: 996, column: 17, scope: !3655)
!3659 = !DILocation(line: 996, column: 3, scope: !3652)
!3660 = !DILocation(line: 997, column: 26, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 996, column: 39)
!3662 = !DILocation(line: 997, column: 30, scope: !3661)
!3663 = !DILocation(line: 997, column: 4, scope: !3661)
!3664 = !DILocation(line: 997, column: 10, scope: !3661)
!3665 = !DILocation(line: 997, column: 20, scope: !3661)
!3666 = !DILocation(line: 997, column: 23, scope: !3661)
!3667 = !DILocation(line: 998, column: 8, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 998, column: 8)
!3669 = !DILocation(line: 998, column: 14, scope: !3668)
!3670 = !DILocation(line: 998, column: 24, scope: !3668)
!3671 = !DILocation(line: 998, column: 27, scope: !3668)
!3672 = !DILocation(line: 998, column: 8, scope: !3661)
!3673 = !DILocation(line: 999, column: 5, scope: !3668)
!3674 = !DILocation(line: 999, column: 11, scope: !3668)
!3675 = !DILocation(line: 999, column: 21, scope: !3668)
!3676 = !DILocation(line: 999, column: 24, scope: !3668)
!3677 = !DILocation(line: 1000, column: 3, scope: !3661)
!3678 = !DILocation(line: 996, column: 35, scope: !3655)
!3679 = !DILocation(line: 996, column: 3, scope: !3655)
!3680 = distinct !{!3680, !3659, !3681}
!3681 = !DILocation(line: 1000, column: 3, scope: !3652)
!3682 = !DILocation(line: 1002, column: 21, scope: !3603)
!3683 = !DILocation(line: 1002, column: 27, scope: !3603)
!3684 = !DILocation(line: 1002, column: 33, scope: !3603)
!3685 = !DILocation(line: 1002, column: 3, scope: !3603)
!3686 = !DILocation(line: 1003, column: 2, scope: !3603)
!3687 = !DILocation(line: 982, column: 37, scope: !3597)
!3688 = !DILocation(line: 982, column: 2, scope: !3597)
!3689 = distinct !{!3689, !3600, !3690}
!3690 = !DILocation(line: 1003, column: 2, scope: !3594)
!3691 = !DILocation(line: 1005, column: 2, scope: !3569)
!3692 = !DILocation(line: 1005, column: 12, scope: !3569)
!3693 = !DILocation(line: 1006, column: 1, scope: !3569)
!3694 = distinct !DISubprogram(name: "occ_compute_bounces", scope: !3, file: !3, line: 934, type: !3570, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3695 = !DILocalVariable(name: "re", arg: 1, scope: !3694, file: !3, line: 934, type: !178)
!3696 = !DILocation(line: 934, column: 41, scope: !3694)
!3697 = !DILocalVariable(name: "tree", arg: 2, scope: !3694, file: !3, line: 934, type: !85)
!3698 = !DILocation(line: 934, column: 60, scope: !3694)
!3699 = !DILocalVariable(name: "totbounce", arg: 3, scope: !3694, file: !3, line: 934, type: !12)
!3700 = !DILocation(line: 934, column: 70, scope: !3694)
!3701 = !DILocalVariable(name: "rad", scope: !3694, file: !3, line: 936, type: !95)
!3702 = !DILocation(line: 936, column: 10, scope: !3694)
!3703 = !DILocalVariable(name: "sum", scope: !3694, file: !3, line: 936, type: !95)
!3704 = !DILocation(line: 936, column: 21, scope: !3694)
!3705 = !DILocalVariable(name: "tmp", scope: !3694, file: !3, line: 936, type: !95)
!3706 = !DILocation(line: 936, column: 32, scope: !3694)
!3707 = !DILocalVariable(name: "co", scope: !3694, file: !3, line: 936, type: !96)
!3708 = !DILocation(line: 936, column: 41, scope: !3694)
!3709 = !DILocalVariable(name: "n", scope: !3694, file: !3, line: 936, type: !96)
!3710 = !DILocation(line: 936, column: 48, scope: !3694)
!3711 = !DILocalVariable(name: "occ", scope: !3694, file: !3, line: 936, type: !6)
!3712 = !DILocation(line: 936, column: 54, scope: !3694)
!3713 = !DILocalVariable(name: "bounce", scope: !3694, file: !3, line: 937, type: !12)
!3714 = !DILocation(line: 937, column: 6, scope: !3694)
!3715 = !DILocalVariable(name: "i", scope: !3694, file: !3, line: 937, type: !12)
!3716 = !DILocation(line: 937, column: 14, scope: !3694)
!3717 = !DILocation(line: 939, column: 8, scope: !3694)
!3718 = !DILocation(line: 939, column: 40, scope: !3694)
!3719 = !DILocation(line: 939, column: 46, scope: !3694)
!3720 = !DILocation(line: 939, column: 38, scope: !3694)
!3721 = !DILocation(line: 939, column: 6, scope: !3694)
!3722 = !DILocation(line: 940, column: 8, scope: !3694)
!3723 = !DILocation(line: 940, column: 22, scope: !3694)
!3724 = !DILocation(line: 940, column: 28, scope: !3694)
!3725 = !DILocation(line: 940, column: 6, scope: !3694)
!3726 = !DILocation(line: 942, column: 14, scope: !3727)
!3727 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 942, column: 2)
!3728 = !DILocation(line: 942, column: 7, scope: !3727)
!3729 = !DILocation(line: 942, column: 19, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3727, file: !3, line: 942, column: 2)
!3731 = !DILocation(line: 942, column: 28, scope: !3730)
!3732 = !DILocation(line: 942, column: 26, scope: !3730)
!3733 = !DILocation(line: 942, column: 2, scope: !3727)
!3734 = !DILocation(line: 943, column: 10, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 943, column: 3)
!3736 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 942, column: 49)
!3737 = !DILocation(line: 943, column: 8, scope: !3735)
!3738 = !DILocation(line: 943, column: 15, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3735, file: !3, line: 943, column: 3)
!3740 = !DILocation(line: 943, column: 19, scope: !3739)
!3741 = !DILocation(line: 943, column: 25, scope: !3739)
!3742 = !DILocation(line: 943, column: 17, scope: !3739)
!3743 = !DILocation(line: 943, column: 3, scope: !3735)
!3744 = !DILocation(line: 944, column: 14, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3739, file: !3, line: 943, column: 39)
!3746 = !DILocation(line: 944, column: 20, scope: !3745)
!3747 = !DILocation(line: 944, column: 25, scope: !3745)
!3748 = !DILocation(line: 944, column: 29, scope: !3745)
!3749 = !DILocation(line: 944, column: 33, scope: !3745)
!3750 = !DILocation(line: 944, column: 4, scope: !3745)
!3751 = !DILocation(line: 945, column: 17, scope: !3745)
!3752 = !DILocation(line: 945, column: 21, scope: !3745)
!3753 = !DILocation(line: 945, column: 4, scope: !3745)
!3754 = !DILocation(line: 947, column: 15, scope: !3745)
!3755 = !DILocation(line: 947, column: 25, scope: !3745)
!3756 = !DILocation(line: 947, column: 31, scope: !3745)
!3757 = !DILocation(line: 947, column: 36, scope: !3745)
!3758 = !DILocation(line: 947, column: 40, scope: !3745)
!3759 = !DILocation(line: 947, column: 44, scope: !3745)
!3760 = !DILocation(line: 947, column: 53, scope: !3745)
!3761 = !DILocation(line: 947, column: 57, scope: !3745)
!3762 = !DILocation(line: 947, column: 4, scope: !3745)
!3763 = !DILocation(line: 948, column: 16, scope: !3745)
!3764 = !DILocation(line: 948, column: 4, scope: !3745)
!3765 = !DILocation(line: 948, column: 8, scope: !3745)
!3766 = !DILocation(line: 948, column: 14, scope: !3745)
!3767 = !DILocation(line: 949, column: 16, scope: !3745)
!3768 = !DILocation(line: 949, column: 4, scope: !3745)
!3769 = !DILocation(line: 949, column: 8, scope: !3745)
!3770 = !DILocation(line: 949, column: 14, scope: !3745)
!3771 = !DILocation(line: 950, column: 16, scope: !3745)
!3772 = !DILocation(line: 950, column: 4, scope: !3745)
!3773 = !DILocation(line: 950, column: 8, scope: !3745)
!3774 = !DILocation(line: 950, column: 14, scope: !3745)
!3775 = !DILocation(line: 951, column: 14, scope: !3745)
!3776 = !DILocation(line: 951, column: 18, scope: !3745)
!3777 = !DILocation(line: 951, column: 22, scope: !3745)
!3778 = !DILocation(line: 951, column: 26, scope: !3745)
!3779 = !DILocation(line: 951, column: 4, scope: !3745)
!3780 = !DILocation(line: 953, column: 8, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3745, file: !3, line: 953, column: 8)
!3782 = !DILocation(line: 953, column: 12, scope: !3781)
!3783 = !DILocation(line: 953, column: 23, scope: !3781)
!3784 = !DILocation(line: 953, column: 27, scope: !3781)
!3785 = !DILocation(line: 953, column: 8, scope: !3745)
!3786 = !DILocation(line: 954, column: 5, scope: !3781)
!3787 = !DILocation(line: 955, column: 3, scope: !3745)
!3788 = !DILocation(line: 943, column: 35, scope: !3739)
!3789 = !DILocation(line: 943, column: 3, scope: !3739)
!3790 = distinct !{!3790, !3743, !3791}
!3791 = !DILocation(line: 955, column: 3, scope: !3735)
!3792 = !DILocation(line: 957, column: 7, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3736, file: !3, line: 957, column: 7)
!3794 = !DILocation(line: 957, column: 11, scope: !3793)
!3795 = !DILocation(line: 957, column: 22, scope: !3793)
!3796 = !DILocation(line: 957, column: 26, scope: !3793)
!3797 = !DILocation(line: 957, column: 7, scope: !3736)
!3798 = !DILocation(line: 958, column: 4, scope: !3793)
!3799 = !DILocation(line: 960, column: 9, scope: !3736)
!3800 = !DILocation(line: 960, column: 15, scope: !3736)
!3801 = !DILocation(line: 960, column: 7, scope: !3736)
!3802 = !DILocation(line: 961, column: 15, scope: !3736)
!3803 = !DILocation(line: 961, column: 3, scope: !3736)
!3804 = !DILocation(line: 961, column: 9, scope: !3736)
!3805 = !DILocation(line: 961, column: 13, scope: !3736)
!3806 = !DILocation(line: 962, column: 9, scope: !3736)
!3807 = !DILocation(line: 962, column: 7, scope: !3736)
!3808 = !DILocation(line: 964, column: 21, scope: !3736)
!3809 = !DILocation(line: 964, column: 27, scope: !3736)
!3810 = !DILocation(line: 964, column: 33, scope: !3736)
!3811 = !DILocation(line: 964, column: 3, scope: !3736)
!3812 = !DILocation(line: 965, column: 2, scope: !3736)
!3813 = !DILocation(line: 942, column: 45, scope: !3730)
!3814 = !DILocation(line: 942, column: 2, scope: !3730)
!3815 = distinct !{!3815, !3733, !3816}
!3816 = !DILocation(line: 965, column: 2, scope: !3727)
!3817 = !DILocation(line: 967, column: 2, scope: !3694)
!3818 = !DILocation(line: 967, column: 12, scope: !3694)
!3819 = !DILocation(line: 968, column: 2, scope: !3694)
!3820 = !DILocation(line: 968, column: 12, scope: !3694)
!3821 = !DILocation(line: 968, column: 18, scope: !3694)
!3822 = !DILocation(line: 969, column: 14, scope: !3694)
!3823 = !DILocation(line: 969, column: 2, scope: !3694)
!3824 = !DILocation(line: 969, column: 8, scope: !3694)
!3825 = !DILocation(line: 969, column: 12, scope: !3694)
!3826 = !DILocation(line: 971, column: 7, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3694, file: !3, line: 971, column: 6)
!3828 = !DILocation(line: 971, column: 11, scope: !3827)
!3829 = !DILocation(line: 971, column: 22, scope: !3827)
!3830 = !DILocation(line: 971, column: 26, scope: !3827)
!3831 = !DILocation(line: 971, column: 6, scope: !3694)
!3832 = !DILocation(line: 972, column: 21, scope: !3827)
!3833 = !DILocation(line: 972, column: 27, scope: !3827)
!3834 = !DILocation(line: 972, column: 33, scope: !3827)
!3835 = !DILocation(line: 972, column: 3, scope: !3827)
!3836 = !DILocation(line: 973, column: 1, scope: !3694)
!3837 = distinct !DISubprogram(name: "exec_strandsurface_sample", scope: !3, file: !3, line: 1226, type: !3838, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!64, !64}
!3840 = !DILocalVariable(name: "data", arg: 1, scope: !3837, file: !3, line: 1226, type: !64)
!3841 = !DILocation(line: 1226, column: 46, scope: !3837)
!3842 = !DILocalVariable(name: "othread", scope: !3837, file: !3, line: 1228, type: !173)
!3843 = !DILocation(line: 1228, column: 19, scope: !3837)
!3844 = !DILocation(line: 1228, column: 48, scope: !3837)
!3845 = !DILocation(line: 1228, column: 29, scope: !3837)
!3846 = !DILocalVariable(name: "re", scope: !3837, file: !3, line: 1229, type: !178)
!3847 = !DILocation(line: 1229, column: 10, scope: !3837)
!3848 = !DILocation(line: 1229, column: 15, scope: !3837)
!3849 = !DILocation(line: 1229, column: 24, scope: !3837)
!3850 = !DILocalVariable(name: "mesh", scope: !3837, file: !3, line: 1230, type: !2774)
!3851 = !DILocation(line: 1230, column: 17, scope: !3837)
!3852 = !DILocation(line: 1230, column: 24, scope: !3837)
!3853 = !DILocation(line: 1230, column: 33, scope: !3837)
!3854 = !DILocalVariable(name: "ao", scope: !3837, file: !3, line: 1231, type: !96)
!3855 = !DILocation(line: 1231, column: 8, scope: !3837)
!3856 = !DILocalVariable(name: "env", scope: !3837, file: !3, line: 1231, type: !96)
!3857 = !DILocation(line: 1231, column: 15, scope: !3837)
!3858 = !DILocalVariable(name: "indirect", scope: !3837, file: !3, line: 1231, type: !96)
!3859 = !DILocation(line: 1231, column: 23, scope: !3837)
!3860 = !DILocalVariable(name: "co", scope: !3837, file: !3, line: 1231, type: !96)
!3861 = !DILocation(line: 1231, column: 36, scope: !3837)
!3862 = !DILocalVariable(name: "n", scope: !3837, file: !3, line: 1231, type: !96)
!3863 = !DILocation(line: 1231, column: 43, scope: !3837)
!3864 = !DILocalVariable(name: "co1", scope: !3837, file: !3, line: 1231, type: !7)
!3865 = !DILocation(line: 1231, column: 50, scope: !3837)
!3866 = !DILocalVariable(name: "co2", scope: !3837, file: !3, line: 1231, type: !7)
!3867 = !DILocation(line: 1231, column: 56, scope: !3837)
!3868 = !DILocalVariable(name: "co3", scope: !3837, file: !3, line: 1231, type: !7)
!3869 = !DILocation(line: 1231, column: 62, scope: !3837)
!3870 = !DILocalVariable(name: "co4", scope: !3837, file: !3, line: 1231, type: !7)
!3871 = !DILocation(line: 1231, column: 68, scope: !3837)
!3872 = !DILocalVariable(name: "a", scope: !3837, file: !3, line: 1232, type: !12)
!3873 = !DILocation(line: 1232, column: 6, scope: !3837)
!3874 = !DILocalVariable(name: "face", scope: !3837, file: !3, line: 1232, type: !212)
!3875 = !DILocation(line: 1232, column: 10, scope: !3837)
!3876 = !DILocation(line: 1234, column: 11, scope: !3877)
!3877 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 1234, column: 2)
!3878 = !DILocation(line: 1234, column: 20, scope: !3877)
!3879 = !DILocation(line: 1234, column: 9, scope: !3877)
!3880 = !DILocation(line: 1234, column: 7, scope: !3877)
!3881 = !DILocation(line: 1234, column: 27, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 1234, column: 2)
!3883 = !DILocation(line: 1234, column: 31, scope: !3882)
!3884 = !DILocation(line: 1234, column: 40, scope: !3882)
!3885 = !DILocation(line: 1234, column: 29, scope: !3882)
!3886 = !DILocation(line: 1234, column: 2, scope: !3877)
!3887 = !DILocation(line: 1235, column: 10, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 1234, column: 50)
!3889 = !DILocation(line: 1235, column: 16, scope: !3888)
!3890 = !DILocation(line: 1235, column: 21, scope: !3888)
!3891 = !DILocation(line: 1235, column: 8, scope: !3888)
!3892 = !DILocation(line: 1236, column: 9, scope: !3888)
!3893 = !DILocation(line: 1236, column: 15, scope: !3888)
!3894 = !DILocation(line: 1236, column: 18, scope: !3888)
!3895 = !DILocation(line: 1236, column: 7, scope: !3888)
!3896 = !DILocation(line: 1237, column: 9, scope: !3888)
!3897 = !DILocation(line: 1237, column: 15, scope: !3888)
!3898 = !DILocation(line: 1237, column: 18, scope: !3888)
!3899 = !DILocation(line: 1237, column: 7, scope: !3888)
!3900 = !DILocation(line: 1238, column: 9, scope: !3888)
!3901 = !DILocation(line: 1238, column: 15, scope: !3888)
!3902 = !DILocation(line: 1238, column: 18, scope: !3888)
!3903 = !DILocation(line: 1238, column: 7, scope: !3888)
!3904 = !DILocation(line: 1240, column: 7, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3888, file: !3, line: 1240, column: 7)
!3906 = !DILocation(line: 1240, column: 7, scope: !3888)
!3907 = !DILocation(line: 1241, column: 10, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1240, column: 16)
!3909 = !DILocation(line: 1241, column: 16, scope: !3908)
!3910 = !DILocation(line: 1241, column: 19, scope: !3908)
!3911 = !DILocation(line: 1241, column: 8, scope: !3908)
!3912 = !DILocation(line: 1243, column: 16, scope: !3908)
!3913 = !DILocation(line: 1243, column: 20, scope: !3908)
!3914 = !DILocation(line: 1243, column: 25, scope: !3908)
!3915 = !DILocation(line: 1243, column: 4, scope: !3908)
!3916 = !DILocation(line: 1244, column: 19, scope: !3908)
!3917 = !DILocation(line: 1244, column: 22, scope: !3908)
!3918 = !DILocation(line: 1244, column: 27, scope: !3908)
!3919 = !DILocation(line: 1244, column: 32, scope: !3908)
!3920 = !DILocation(line: 1244, column: 37, scope: !3908)
!3921 = !DILocation(line: 1244, column: 4, scope: !3908)
!3922 = !DILocation(line: 1245, column: 3, scope: !3908)
!3923 = !DILocation(line: 1247, column: 16, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3905, file: !3, line: 1246, column: 8)
!3925 = !DILocation(line: 1247, column: 20, scope: !3924)
!3926 = !DILocation(line: 1247, column: 25, scope: !3924)
!3927 = !DILocation(line: 1247, column: 30, scope: !3924)
!3928 = !DILocation(line: 1247, column: 4, scope: !3924)
!3929 = !DILocation(line: 1248, column: 18, scope: !3924)
!3930 = !DILocation(line: 1248, column: 21, scope: !3924)
!3931 = !DILocation(line: 1248, column: 26, scope: !3924)
!3932 = !DILocation(line: 1248, column: 31, scope: !3924)
!3933 = !DILocation(line: 1248, column: 4, scope: !3924)
!3934 = !DILocation(line: 1250, column: 13, scope: !3888)
!3935 = !DILocation(line: 1250, column: 3, scope: !3888)
!3936 = !DILocation(line: 1252, column: 19, scope: !3888)
!3937 = !DILocation(line: 1252, column: 23, scope: !3888)
!3938 = !DILocation(line: 1252, column: 27, scope: !3888)
!3939 = !DILocation(line: 1252, column: 48, scope: !3888)
!3940 = !DILocation(line: 1252, column: 52, scope: !3888)
!3941 = !DILocation(line: 1252, column: 55, scope: !3888)
!3942 = !DILocation(line: 1252, column: 64, scope: !3888)
!3943 = !DILocation(line: 1252, column: 75, scope: !3888)
!3944 = !DILocation(line: 1252, column: 79, scope: !3888)
!3945 = !DILocation(line: 1252, column: 84, scope: !3888)
!3946 = !DILocation(line: 1252, column: 3, scope: !3888)
!3947 = !DILocation(line: 1253, column: 14, scope: !3888)
!3948 = !DILocation(line: 1253, column: 23, scope: !3888)
!3949 = !DILocation(line: 1253, column: 30, scope: !3888)
!3950 = !DILocation(line: 1253, column: 34, scope: !3888)
!3951 = !DILocation(line: 1253, column: 3, scope: !3888)
!3952 = !DILocation(line: 1254, column: 14, scope: !3888)
!3953 = !DILocation(line: 1254, column: 23, scope: !3888)
!3954 = !DILocation(line: 1254, column: 31, scope: !3888)
!3955 = !DILocation(line: 1254, column: 35, scope: !3888)
!3956 = !DILocation(line: 1254, column: 3, scope: !3888)
!3957 = !DILocation(line: 1255, column: 14, scope: !3888)
!3958 = !DILocation(line: 1255, column: 23, scope: !3888)
!3959 = !DILocation(line: 1255, column: 36, scope: !3888)
!3960 = !DILocation(line: 1255, column: 40, scope: !3888)
!3961 = !DILocation(line: 1255, column: 3, scope: !3888)
!3962 = !DILocation(line: 1256, column: 2, scope: !3888)
!3963 = !DILocation(line: 1234, column: 46, scope: !3882)
!3964 = !DILocation(line: 1234, column: 2, scope: !3882)
!3965 = distinct !{!3965, !3886, !3966}
!3966 = !DILocation(line: 1256, column: 2, scope: !3877)
!3967 = !DILocation(line: 1258, column: 2, scope: !3837)
!3968 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3969, file: !3969, line: 64, type: !3970, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3969 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3970 = !DISubroutineType(types: !3971)
!3971 = !{null, !7, !3972}
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!3973 = !DILocalVariable(name: "r", arg: 1, scope: !3968, file: !3969, line: 64, type: !7)
!3974 = !DILocation(line: 64, column: 31, scope: !3968)
!3975 = !DILocalVariable(name: "a", arg: 2, scope: !3968, file: !3969, line: 64, type: !3972)
!3976 = !DILocation(line: 64, column: 49, scope: !3968)
!3977 = !DILocation(line: 66, column: 9, scope: !3968)
!3978 = !DILocation(line: 66, column: 2, scope: !3968)
!3979 = !DILocation(line: 66, column: 7, scope: !3968)
!3980 = !DILocation(line: 67, column: 9, scope: !3968)
!3981 = !DILocation(line: 67, column: 2, scope: !3968)
!3982 = !DILocation(line: 67, column: 7, scope: !3968)
!3983 = !DILocation(line: 68, column: 9, scope: !3968)
!3984 = !DILocation(line: 68, column: 2, scope: !3968)
!3985 = !DILocation(line: 68, column: 7, scope: !3968)
!3986 = !DILocation(line: 69, column: 1, scope: !3968)
!3987 = distinct !DISubprogram(name: "add_v3_v3", scope: !3969, file: !3969, line: 302, type: !3970, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!3988 = !DILocalVariable(name: "r", arg: 1, scope: !3987, file: !3969, line: 302, type: !7)
!3989 = !DILocation(line: 302, column: 30, scope: !3987)
!3990 = !DILocalVariable(name: "a", arg: 2, scope: !3987, file: !3969, line: 302, type: !3972)
!3991 = !DILocation(line: 302, column: 48, scope: !3987)
!3992 = !DILocation(line: 304, column: 10, scope: !3987)
!3993 = !DILocation(line: 304, column: 2, scope: !3987)
!3994 = !DILocation(line: 304, column: 7, scope: !3987)
!3995 = !DILocation(line: 305, column: 10, scope: !3987)
!3996 = !DILocation(line: 305, column: 2, scope: !3987)
!3997 = !DILocation(line: 305, column: 7, scope: !3987)
!3998 = !DILocation(line: 306, column: 10, scope: !3987)
!3999 = !DILocation(line: 306, column: 2, scope: !3987)
!4000 = !DILocation(line: 306, column: 7, scope: !3987)
!4001 = !DILocation(line: 307, column: 1, scope: !3987)
!4002 = distinct !DISubprogram(name: "mul_v3_fl", scope: !3969, file: !3969, line: 392, type: !4003, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{null, !7, !6}
!4005 = !DILocalVariable(name: "r", arg: 1, scope: !4002, file: !3969, line: 392, type: !7)
!4006 = !DILocation(line: 392, column: 30, scope: !4002)
!4007 = !DILocalVariable(name: "f", arg: 2, scope: !4002, file: !3969, line: 392, type: !6)
!4008 = !DILocation(line: 392, column: 42, scope: !4002)
!4009 = !DILocation(line: 394, column: 10, scope: !4002)
!4010 = !DILocation(line: 394, column: 2, scope: !4002)
!4011 = !DILocation(line: 394, column: 7, scope: !4002)
!4012 = !DILocation(line: 395, column: 10, scope: !4002)
!4013 = !DILocation(line: 395, column: 2, scope: !4002)
!4014 = !DILocation(line: 395, column: 7, scope: !4002)
!4015 = !DILocation(line: 396, column: 10, scope: !4002)
!4016 = !DILocation(line: 396, column: 2, scope: !4002)
!4017 = !DILocation(line: 396, column: 7, scope: !4002)
!4018 = !DILocation(line: 397, column: 1, scope: !4002)
!4019 = distinct !DISubprogram(name: "free_occ", scope: !3, file: !3, line: 1362, type: !2798, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4020 = !DILocalVariable(name: "re", arg: 1, scope: !4019, file: !3, line: 1362, type: !178)
!4021 = !DILocation(line: 1362, column: 23, scope: !4019)
!4022 = !DILocation(line: 1364, column: 6, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4019, file: !3, line: 1364, column: 6)
!4024 = !DILocation(line: 1364, column: 10, scope: !4023)
!4025 = !DILocation(line: 1364, column: 6, scope: !4019)
!4026 = !DILocation(line: 1365, column: 17, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 1364, column: 25)
!4028 = !DILocation(line: 1365, column: 21, scope: !4027)
!4029 = !DILocation(line: 1365, column: 3, scope: !4027)
!4030 = !DILocation(line: 1366, column: 3, scope: !4027)
!4031 = !DILocation(line: 1366, column: 7, scope: !4027)
!4032 = !DILocation(line: 1366, column: 21, scope: !4027)
!4033 = !DILocation(line: 1367, column: 2, scope: !4027)
!4034 = !DILocation(line: 1368, column: 1, scope: !4019)
!4035 = distinct !DISubprogram(name: "occ_free_tree", scope: !3, file: !3, line: 743, type: !4036, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{null, !85}
!4038 = !DILocalVariable(name: "tree", arg: 1, scope: !4035, file: !3, line: 743, type: !85)
!4039 = !DILocation(line: 743, column: 42, scope: !4035)
!4040 = !DILocalVariable(name: "a", scope: !4035, file: !3, line: 745, type: !12)
!4041 = !DILocation(line: 745, column: 6, scope: !4035)
!4042 = !DILocation(line: 747, column: 6, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 747, column: 6)
!4044 = !DILocation(line: 747, column: 6, scope: !4035)
!4045 = !DILocation(line: 748, column: 7, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 748, column: 7)
!4047 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 747, column: 12)
!4048 = !DILocation(line: 748, column: 13, scope: !4046)
!4049 = !DILocation(line: 748, column: 7, scope: !4047)
!4050 = !DILocation(line: 748, column: 38, scope: !4046)
!4051 = !DILocation(line: 748, column: 44, scope: !4046)
!4052 = !DILocation(line: 748, column: 20, scope: !4046)
!4053 = !DILocation(line: 749, column: 10, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 749, column: 3)
!4055 = !DILocation(line: 749, column: 8, scope: !4054)
!4056 = !DILocation(line: 749, column: 15, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 749, column: 3)
!4058 = !DILocation(line: 749, column: 17, scope: !4057)
!4059 = !DILocation(line: 749, column: 3, scope: !4054)
!4060 = !DILocation(line: 750, column: 8, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4057, file: !3, line: 750, column: 8)
!4062 = !DILocation(line: 750, column: 14, scope: !4061)
!4063 = !DILocation(line: 750, column: 20, scope: !4061)
!4064 = !DILocation(line: 750, column: 8, scope: !4057)
!4065 = !DILocation(line: 751, column: 5, scope: !4061)
!4066 = !DILocation(line: 751, column: 15, scope: !4061)
!4067 = !DILocation(line: 751, column: 21, scope: !4061)
!4068 = !DILocation(line: 751, column: 27, scope: !4061)
!4069 = !DILocation(line: 750, column: 21, scope: !4061)
!4070 = !DILocation(line: 749, column: 41, scope: !4057)
!4071 = !DILocation(line: 749, column: 3, scope: !4057)
!4072 = distinct !{!4072, !4059, !4073}
!4073 = !DILocation(line: 751, column: 29, scope: !4054)
!4074 = !DILocation(line: 752, column: 7, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 752, column: 7)
!4076 = !DILocation(line: 752, column: 13, scope: !4075)
!4077 = !DILocation(line: 752, column: 7, scope: !4047)
!4078 = !DILocation(line: 752, column: 24, scope: !4075)
!4079 = !DILocation(line: 752, column: 34, scope: !4075)
!4080 = !DILocation(line: 752, column: 40, scope: !4075)
!4081 = !DILocation(line: 753, column: 7, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 753, column: 7)
!4083 = !DILocation(line: 753, column: 13, scope: !4082)
!4084 = !DILocation(line: 753, column: 7, scope: !4047)
!4085 = !DILocation(line: 753, column: 20, scope: !4082)
!4086 = !DILocation(line: 753, column: 30, scope: !4082)
!4087 = !DILocation(line: 753, column: 36, scope: !4082)
!4088 = !DILocation(line: 754, column: 7, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 754, column: 7)
!4090 = !DILocation(line: 754, column: 13, scope: !4089)
!4091 = !DILocation(line: 754, column: 7, scope: !4047)
!4092 = !DILocation(line: 754, column: 19, scope: !4089)
!4093 = !DILocation(line: 754, column: 29, scope: !4089)
!4094 = !DILocation(line: 754, column: 35, scope: !4089)
!4095 = !DILocation(line: 755, column: 7, scope: !4096)
!4096 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 755, column: 7)
!4097 = !DILocation(line: 755, column: 13, scope: !4096)
!4098 = !DILocation(line: 755, column: 7, scope: !4047)
!4099 = !DILocation(line: 755, column: 18, scope: !4096)
!4100 = !DILocation(line: 755, column: 28, scope: !4096)
!4101 = !DILocation(line: 755, column: 34, scope: !4096)
!4102 = !DILocation(line: 756, column: 3, scope: !4047)
!4103 = !DILocation(line: 756, column: 13, scope: !4047)
!4104 = !DILocation(line: 757, column: 2, scope: !4047)
!4105 = !DILocation(line: 758, column: 1, scope: !4035)
!4106 = distinct !DISubprogram(name: "sample_occ", scope: !3, file: !3, line: 1370, type: !4107, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{null, !178, !4109}
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInput", file: !2479, line: 186, baseType: !4111)
!4111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInput", file: !2479, line: 98, size: 11776, elements: !4112)
!4112 = !{!4113, !4114, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4194, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249}
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !4111, file: !2479, line: 102, baseType: !252, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "vlr", scope: !4111, file: !2479, line: 103, baseType: !2541, size: 64, offset: 64)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "strand", scope: !4111, file: !2479, line: 104, baseType: !2581, size: 64, offset: 128)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "obi", scope: !4111, file: !2479, line: 105, baseType: !2484, size: 64, offset: 192)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "obr", scope: !4111, file: !2479, line: 106, baseType: !2495, size: 64, offset: 256)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "facenr", scope: !4111, file: !2479, line: 107, baseType: !12, size: 32, offset: 320)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "facenor", scope: !4111, file: !2479, line: 108, baseType: !96, size: 96, offset: 352)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "flippednor", scope: !4111, file: !2479, line: 109, baseType: !79, size: 16, offset: 448)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4111, file: !2479, line: 110, baseType: !2521, size: 64, offset: 512)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4111, file: !2479, line: 110, baseType: !2521, size: 64, offset: 576)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4111, file: !2479, line: 110, baseType: !2521, size: 64, offset: 640)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "i1", scope: !4111, file: !2479, line: 111, baseType: !79, size: 16, offset: 704)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "i2", scope: !4111, file: !2479, line: 111, baseType: !79, size: 16, offset: 720)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "i3", scope: !4111, file: !2479, line: 111, baseType: !79, size: 16, offset: 736)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "puno", scope: !4111, file: !2479, line: 112, baseType: !79, size: 16, offset: 752)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "osatex", scope: !4111, file: !2479, line: 113, baseType: !79, size: 16, offset: 768)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "vn", scope: !4111, file: !2479, line: 114, baseType: !96, size: 96, offset: 800)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "vno", scope: !4111, file: !2479, line: 114, baseType: !96, size: 96, offset: 896)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "n1", scope: !4111, file: !2479, line: 115, baseType: !96, size: 96, offset: 992)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !4111, file: !2479, line: 115, baseType: !96, size: 96, offset: 1088)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "n3", scope: !4111, file: !2479, line: 115, baseType: !96, size: 96, offset: 1184)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4111, file: !2479, line: 116, baseType: !12, size: 32, offset: 1280)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !4111, file: !2479, line: 116, baseType: !12, size: 32, offset: 1312)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1344)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1376)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "dx_u", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1408)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "dx_v", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1440)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "dy_u", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1472)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "dy_v", scope: !4111, file: !2479, line: 119, baseType: !6, size: 32, offset: 1504)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !4111, file: !2479, line: 120, baseType: !96, size: 96, offset: 1536)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !4111, file: !2479, line: 120, baseType: !96, size: 96, offset: 1632)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "camera_co", scope: !4111, file: !2479, line: 120, baseType: !96, size: 96, offset: 1728)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4111, file: !2479, line: 124, baseType: !6, size: 32, offset: 1824)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4111, file: !2479, line: 124, baseType: !6, size: 32, offset: 1856)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4111, file: !2479, line: 124, baseType: !6, size: 32, offset: 1888)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !4111, file: !2479, line: 125, baseType: !6, size: 32, offset: 1920)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !4111, file: !2479, line: 125, baseType: !6, size: 32, offset: 1952)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !4111, file: !2479, line: 125, baseType: !6, size: 32, offset: 1984)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !4111, file: !2479, line: 126, baseType: !6, size: 32, offset: 2016)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !4111, file: !2479, line: 126, baseType: !6, size: 32, offset: 2048)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !4111, file: !2479, line: 126, baseType: !6, size: 32, offset: 2080)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !4111, file: !2479, line: 127, baseType: !6, size: 32, offset: 2112)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !4111, file: !2479, line: 127, baseType: !6, size: 32, offset: 2144)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !4111, file: !2479, line: 127, baseType: !6, size: 32, offset: 2176)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !4111, file: !2479, line: 129, baseType: !6, size: 32, offset: 2208)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !4111, file: !2479, line: 129, baseType: !6, size: 32, offset: 2240)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !4111, file: !2479, line: 129, baseType: !6, size: 32, offset: 2272)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !4111, file: !2479, line: 129, baseType: !6, size: 32, offset: 2304)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !4111, file: !2479, line: 129, baseType: !6, size: 32, offset: 2336)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !4111, file: !2479, line: 130, baseType: !6, size: 32, offset: 2368)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !4111, file: !2479, line: 130, baseType: !6, size: 32, offset: 2400)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !4111, file: !2479, line: 130, baseType: !6, size: 32, offset: 2432)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !4111, file: !2479, line: 130, baseType: !6, size: 32, offset: 2464)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4111, file: !2479, line: 130, baseType: !6, size: 32, offset: 2496)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !4111, file: !2479, line: 131, baseType: !6, size: 32, offset: 2528)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !4111, file: !2479, line: 135, baseType: !12, size: 32, offset: 2560)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "lo", scope: !4111, file: !2479, line: 138, baseType: !96, size: 96, offset: 2592)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "gl", scope: !4111, file: !2479, line: 138, baseType: !96, size: 96, offset: 2688)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4111, file: !2479, line: 138, baseType: !96, size: 96, offset: 2784)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "orn", scope: !4111, file: !2479, line: 138, baseType: !96, size: 96, offset: 2880)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "winco", scope: !4111, file: !2479, line: 138, baseType: !96, size: 96, offset: 2976)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "vcol", scope: !4111, file: !2479, line: 138, baseType: !433, size: 128, offset: 3072)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "refcol", scope: !4111, file: !2479, line: 139, baseType: !433, size: 128, offset: 3200)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "displace", scope: !4111, file: !2479, line: 139, baseType: !96, size: 96, offset: 3328)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "strandco", scope: !4111, file: !2479, line: 140, baseType: !6, size: 32, offset: 3424)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !4111, file: !2479, line: 140, baseType: !96, size: 96, offset: 3456)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "nmapnorm", scope: !4111, file: !2479, line: 140, baseType: !96, size: 96, offset: 3552)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "nmaptang", scope: !4111, file: !2479, line: 140, baseType: !433, size: 128, offset: 3648)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "stress", scope: !4111, file: !2479, line: 140, baseType: !6, size: 32, offset: 3776)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !4111, file: !2479, line: 140, baseType: !433, size: 128, offset: 3808)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "duplilo", scope: !4111, file: !2479, line: 141, baseType: !96, size: 96, offset: 3936)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "dupliuv", scope: !4111, file: !2479, line: 141, baseType: !96, size: 96, offset: 4032)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4111, file: !2479, line: 143, baseType: !4186, size: 3072, offset: 4160)
!4186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4187, size: 3072, elements: !130)
!4187 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputUV", file: !2479, line: 90, baseType: !4188)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputUV", file: !2479, line: 87, size: 384, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4193}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "dxuv", scope: !4188, file: !2479, line: 88, baseType: !96, size: 96)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "dyuv", scope: !4188, file: !2479, line: 88, baseType: !96, size: 96, offset: 96)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !4188, file: !2479, line: 88, baseType: !96, size: 96, offset: 192)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4188, file: !2479, line: 89, baseType: !602, size: 64, offset: 320)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !4111, file: !2479, line: 144, baseType: !4195, size: 1536, offset: 7232)
!4195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4196, size: 1536, elements: !130)
!4196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeInputCol", file: !2479, line: 95, baseType: !4197)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeInputCol", file: !2479, line: 92, size: 192, elements: !4198)
!4198 = !{!4199, !4200}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !4197, file: !2479, line: 93, baseType: !433, size: 128)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4197, file: !2479, line: 94, baseType: !602, size: 64, offset: 128)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "totuv", scope: !4111, file: !2479, line: 145, baseType: !12, size: 32, offset: 8768)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !4111, file: !2479, line: 145, baseType: !12, size: 32, offset: 8800)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "actuv", scope: !4111, file: !2479, line: 145, baseType: !12, size: 32, offset: 8832)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !4111, file: !2479, line: 145, baseType: !12, size: 32, offset: 8864)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "dxco", scope: !4111, file: !2479, line: 148, baseType: !96, size: 96, offset: 8896)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "dyco", scope: !4111, file: !2479, line: 148, baseType: !96, size: 96, offset: 8992)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "dxlo", scope: !4111, file: !2479, line: 149, baseType: !96, size: 96, offset: 9088)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "dylo", scope: !4111, file: !2479, line: 149, baseType: !96, size: 96, offset: 9184)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "dxgl", scope: !4111, file: !2479, line: 149, baseType: !96, size: 96, offset: 9280)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "dygl", scope: !4111, file: !2479, line: 149, baseType: !96, size: 96, offset: 9376)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "dxref", scope: !4111, file: !2479, line: 150, baseType: !96, size: 96, offset: 9472)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "dyref", scope: !4111, file: !2479, line: 150, baseType: !96, size: 96, offset: 9568)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "dxorn", scope: !4111, file: !2479, line: 150, baseType: !96, size: 96, offset: 9664)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "dyorn", scope: !4111, file: !2479, line: 150, baseType: !96, size: 96, offset: 9760)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "dxno", scope: !4111, file: !2479, line: 151, baseType: !96, size: 96, offset: 9856)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "dyno", scope: !4111, file: !2479, line: 151, baseType: !96, size: 96, offset: 9952)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "dxview", scope: !4111, file: !2479, line: 151, baseType: !6, size: 32, offset: 10048)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "dyview", scope: !4111, file: !2479, line: 151, baseType: !6, size: 32, offset: 10080)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "dxlv", scope: !4111, file: !2479, line: 152, baseType: !96, size: 96, offset: 10112)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "dylv", scope: !4111, file: !2479, line: 152, baseType: !96, size: 96, offset: 10208)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "dxwin", scope: !4111, file: !2479, line: 153, baseType: !96, size: 96, offset: 10304)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "dywin", scope: !4111, file: !2479, line: 153, baseType: !96, size: 96, offset: 10400)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "dxrefract", scope: !4111, file: !2479, line: 154, baseType: !96, size: 96, offset: 10496)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "dyrefract", scope: !4111, file: !2479, line: 154, baseType: !96, size: 96, offset: 10592)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "dxstrand", scope: !4111, file: !2479, line: 155, baseType: !6, size: 32, offset: 10688)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "dystrand", scope: !4111, file: !2479, line: 155, baseType: !6, size: 32, offset: 10720)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !4111, file: !2479, line: 158, baseType: !96, size: 96, offset: 10752)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !4111, file: !2479, line: 158, baseType: !96, size: 96, offset: 10848)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !4111, file: !2479, line: 158, baseType: !96, size: 96, offset: 10944)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "xs", scope: !4111, file: !2479, line: 160, baseType: !12, size: 32, offset: 11040)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "ys", scope: !4111, file: !2479, line: 160, baseType: !12, size: 32, offset: 11072)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4111, file: !2479, line: 161, baseType: !12, size: 32, offset: 11104)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "scanco", scope: !4111, file: !2479, line: 162, baseType: !96, size: 96, offset: 11136)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "samplenr", scope: !4111, file: !2479, line: 164, baseType: !12, size: 32, offset: 11232)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4111, file: !2479, line: 165, baseType: !12, size: 32, offset: 11264)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "volume_depth", scope: !4111, file: !2479, line: 166, baseType: !12, size: 32, offset: 11296)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "surfnor", scope: !4111, file: !2479, line: 169, baseType: !96, size: 96, offset: 11328)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "surfdist", scope: !4111, file: !2479, line: 169, baseType: !6, size: 32, offset: 11424)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "do_preview", scope: !4111, file: !2479, line: 172, baseType: !198, size: 8, offset: 11456)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "do_manage", scope: !4111, file: !2479, line: 173, baseType: !198, size: 8, offset: 11464)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4111, file: !2479, line: 174, baseType: !79, size: 16, offset: 11472)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !4111, file: !2479, line: 174, baseType: !79, size: 16, offset: 11488)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !4111, file: !2479, line: 175, baseType: !79, size: 16, offset: 11504)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !4111, file: !2479, line: 177, baseType: !48, size: 32, offset: 11520)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "layflag", scope: !4111, file: !2479, line: 178, baseType: !12, size: 32, offset: 11552)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "passflag", scope: !4111, file: !2479, line: 178, baseType: !12, size: 32, offset: 11584)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "combinedflag", scope: !4111, file: !2479, line: 178, baseType: !12, size: 32, offset: 11616)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "light_override", scope: !4111, file: !2479, line: 179, baseType: !693, size: 64, offset: 11648)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "mat_override", scope: !4111, file: !2479, line: 180, baseType: !252, size: 64, offset: 11712)
!4250 = !DILocalVariable(name: "re", arg: 1, scope: !4106, file: !3, line: 1370, type: !178)
!4251 = !DILocation(line: 1370, column: 25, scope: !4106)
!4252 = !DILocalVariable(name: "shi", arg: 2, scope: !4106, file: !3, line: 1370, type: !4109)
!4253 = !DILocation(line: 1370, column: 41, scope: !4106)
!4254 = !DILocalVariable(name: "tree", scope: !4106, file: !3, line: 1372, type: !85)
!4255 = !DILocation(line: 1372, column: 17, scope: !4106)
!4256 = !DILocation(line: 1372, column: 24, scope: !4106)
!4257 = !DILocation(line: 1372, column: 28, scope: !4106)
!4258 = !DILocalVariable(name: "cache", scope: !4106, file: !3, line: 1373, type: !145)
!4259 = !DILocation(line: 1373, column: 18, scope: !4106)
!4260 = !DILocalVariable(name: "sample", scope: !4106, file: !3, line: 1374, type: !150)
!4261 = !DILocation(line: 1374, column: 24, scope: !4106)
!4262 = !DILocalVariable(name: "exclude", scope: !4106, file: !3, line: 1375, type: !101)
!4263 = !DILocation(line: 1375, column: 10, scope: !4106)
!4264 = !DILocalVariable(name: "onlyshadow", scope: !4106, file: !3, line: 1376, type: !12)
!4265 = !DILocation(line: 1376, column: 6, scope: !4106)
!4266 = !DILocation(line: 1378, column: 6, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4106, file: !3, line: 1378, column: 6)
!4268 = !DILocation(line: 1378, column: 6, scope: !4106)
!4269 = !DILocation(line: 1379, column: 7, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 1379, column: 7)
!4271 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 1378, column: 12)
!4272 = !DILocation(line: 1379, column: 12, scope: !4270)
!4273 = !DILocation(line: 1379, column: 7, scope: !4271)
!4274 = !DILocation(line: 1380, column: 23, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 1379, column: 20)
!4276 = !DILocation(line: 1380, column: 4, scope: !4275)
!4277 = !DILocation(line: 1381, column: 3, scope: !4275)
!4278 = !DILocation(line: 1383, column: 12, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 1383, column: 12)
!4280 = !DILocation(line: 1383, column: 17, scope: !4279)
!4281 = !DILocation(line: 1383, column: 23, scope: !4279)
!4282 = !DILocation(line: 1383, column: 28, scope: !4279)
!4283 = !DILocation(line: 1383, column: 49, scope: !4279)
!4284 = !DILocation(line: 1383, column: 55, scope: !4279)
!4285 = !DILocation(line: 1383, column: 60, scope: !4279)
!4286 = !DILocation(line: 1383, column: 64, scope: !4279)
!4287 = !DILocation(line: 1383, column: 69, scope: !4279)
!4288 = !DILocation(line: 1383, column: 74, scope: !4279)
!4289 = !DILocation(line: 1383, column: 79, scope: !4279)
!4290 = !DILocation(line: 1383, column: 83, scope: !4279)
!4291 = !DILocation(line: 1383, column: 88, scope: !4279)
!4292 = !DILocation(line: 1383, column: 92, scope: !4279)
!4293 = !DILocation(line: 1383, column: 97, scope: !4279)
!4294 = !DILocation(line: 1383, column: 105, scope: !4279)
!4295 = !DILocation(line: 1383, column: 110, scope: !4279)
!4296 = !DILocation(line: 1383, column: 114, scope: !4279)
!4297 = !DILocation(line: 1383, column: 119, scope: !4279)
!4298 = !DILocation(line: 1383, column: 124, scope: !4279)
!4299 = !DILocation(line: 1383, column: 129, scope: !4279)
!4300 = !DILocation(line: 1383, column: 32, scope: !4279)
!4301 = !DILocation(line: 1383, column: 12, scope: !4270)
!4302 = !DILocation(line: 1385, column: 18, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 1383, column: 140)
!4304 = !DILocation(line: 1385, column: 23, scope: !4303)
!4305 = !DILocation(line: 1385, column: 29, scope: !4303)
!4306 = !DILocation(line: 1385, column: 33, scope: !4303)
!4307 = !DILocation(line: 1385, column: 27, scope: !4303)
!4308 = !DILocation(line: 1385, column: 12, scope: !4303)
!4309 = !DILocation(line: 1385, column: 16, scope: !4303)
!4310 = !DILocation(line: 1386, column: 21, scope: !4303)
!4311 = !DILocation(line: 1386, column: 26, scope: !4303)
!4312 = !DILocation(line: 1386, column: 31, scope: !4303)
!4313 = !DILocation(line: 1386, column: 12, scope: !4303)
!4314 = !DILocation(line: 1386, column: 19, scope: !4303)
!4315 = !DILocation(line: 1387, column: 18, scope: !4303)
!4316 = !DILocation(line: 1387, column: 23, scope: !4303)
!4317 = !DILocation(line: 1387, column: 28, scope: !4303)
!4318 = !DILocation(line: 1387, column: 33, scope: !4303)
!4319 = !DILocation(line: 1387, column: 15, scope: !4303)
!4320 = !DILocation(line: 1388, column: 20, scope: !4303)
!4321 = !DILocation(line: 1388, column: 24, scope: !4303)
!4322 = !DILocation(line: 1388, column: 40, scope: !4303)
!4323 = !DILocation(line: 1388, column: 45, scope: !4303)
!4324 = !DILocation(line: 1388, column: 49, scope: !4303)
!4325 = !DILocation(line: 1388, column: 54, scope: !4303)
!4326 = !DILocation(line: 1388, column: 59, scope: !4303)
!4327 = !DILocation(line: 1388, column: 64, scope: !4303)
!4328 = !DILocation(line: 1388, column: 72, scope: !4303)
!4329 = !DILocation(line: 1388, column: 84, scope: !4303)
!4330 = !DILocation(line: 1388, column: 89, scope: !4303)
!4331 = !DILocation(line: 1388, column: 93, scope: !4303)
!4332 = !DILocation(line: 1388, column: 98, scope: !4303)
!4333 = !DILocation(line: 1388, column: 103, scope: !4303)
!4334 = !DILocation(line: 1388, column: 108, scope: !4303)
!4335 = !DILocation(line: 1388, column: 4, scope: !4303)
!4336 = !DILocation(line: 1391, column: 8, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1391, column: 8)
!4338 = !DILocation(line: 1391, column: 14, scope: !4337)
!4339 = !DILocation(line: 1391, column: 8, scope: !4303)
!4340 = !DILocation(line: 1392, column: 14, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !3, line: 1391, column: 21)
!4342 = !DILocation(line: 1392, column: 20, scope: !4341)
!4343 = !DILocation(line: 1392, column: 26, scope: !4341)
!4344 = !DILocation(line: 1392, column: 31, scope: !4341)
!4345 = !DILocation(line: 1392, column: 11, scope: !4341)
!4346 = !DILocation(line: 1394, column: 9, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4341, file: !3, line: 1394, column: 9)
!4348 = !DILocation(line: 1394, column: 16, scope: !4347)
!4349 = !DILocation(line: 1394, column: 23, scope: !4347)
!4350 = !DILocation(line: 1394, column: 26, scope: !4347)
!4351 = !DILocation(line: 1394, column: 33, scope: !4347)
!4352 = !DILocation(line: 1394, column: 9, scope: !4341)
!4353 = !DILocation(line: 1395, column: 16, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 1394, column: 39)
!4355 = !DILocation(line: 1395, column: 23, scope: !4354)
!4356 = !DILocation(line: 1395, column: 31, scope: !4354)
!4357 = !DILocation(line: 1395, column: 36, scope: !4354)
!4358 = !DILocation(line: 1395, column: 41, scope: !4354)
!4359 = !DILocation(line: 1395, column: 48, scope: !4354)
!4360 = !DILocation(line: 1395, column: 39, scope: !4354)
!4361 = !DILocation(line: 1395, column: 53, scope: !4354)
!4362 = !DILocation(line: 1395, column: 60, scope: !4354)
!4363 = !DILocation(line: 1395, column: 51, scope: !4354)
!4364 = !DILocation(line: 1395, column: 65, scope: !4354)
!4365 = !DILocation(line: 1395, column: 70, scope: !4354)
!4366 = !DILocation(line: 1395, column: 75, scope: !4354)
!4367 = !DILocation(line: 1395, column: 82, scope: !4354)
!4368 = !DILocation(line: 1395, column: 73, scope: !4354)
!4369 = !DILocation(line: 1395, column: 62, scope: !4354)
!4370 = !DILocation(line: 1395, column: 13, scope: !4354)
!4371 = !DILocation(line: 1396, column: 17, scope: !4354)
!4372 = !DILocation(line: 1396, column: 25, scope: !4354)
!4373 = !DILocation(line: 1396, column: 29, scope: !4354)
!4374 = !DILocation(line: 1396, column: 34, scope: !4354)
!4375 = !DILocation(line: 1396, column: 6, scope: !4354)
!4376 = !DILocation(line: 1397, column: 17, scope: !4354)
!4377 = !DILocation(line: 1397, column: 25, scope: !4354)
!4378 = !DILocation(line: 1397, column: 28, scope: !4354)
!4379 = !DILocation(line: 1397, column: 33, scope: !4354)
!4380 = !DILocation(line: 1397, column: 6, scope: !4354)
!4381 = !DILocation(line: 1398, column: 17, scope: !4354)
!4382 = !DILocation(line: 1398, column: 25, scope: !4354)
!4383 = !DILocation(line: 1398, column: 29, scope: !4354)
!4384 = !DILocation(line: 1398, column: 34, scope: !4354)
!4385 = !DILocation(line: 1398, column: 6, scope: !4354)
!4386 = !DILocation(line: 1399, column: 17, scope: !4354)
!4387 = !DILocation(line: 1399, column: 25, scope: !4354)
!4388 = !DILocation(line: 1399, column: 30, scope: !4354)
!4389 = !DILocation(line: 1399, column: 35, scope: !4354)
!4390 = !DILocation(line: 1399, column: 6, scope: !4354)
!4391 = !DILocation(line: 1400, column: 17, scope: !4354)
!4392 = !DILocation(line: 1400, column: 25, scope: !4354)
!4393 = !DILocation(line: 1400, column: 35, scope: !4354)
!4394 = !DILocation(line: 1400, column: 40, scope: !4354)
!4395 = !DILocation(line: 1400, column: 6, scope: !4354)
!4396 = !DILocation(line: 1401, column: 34, scope: !4354)
!4397 = !DILocation(line: 1401, column: 42, scope: !4354)
!4398 = !DILocation(line: 1401, column: 49, scope: !4354)
!4399 = !DILocation(line: 1401, column: 57, scope: !4354)
!4400 = !DILocation(line: 1401, column: 64, scope: !4354)
!4401 = !DILocation(line: 1401, column: 72, scope: !4354)
!4402 = !DILocation(line: 1401, column: 26, scope: !4354)
!4403 = !DILocation(line: 1401, column: 6, scope: !4354)
!4404 = !DILocation(line: 1401, column: 14, scope: !4354)
!4405 = !DILocation(line: 1401, column: 24, scope: !4354)
!4406 = !DILocation(line: 1402, column: 33, scope: !4354)
!4407 = !DILocation(line: 1402, column: 41, scope: !4354)
!4408 = !DILocation(line: 1402, column: 60, scope: !4354)
!4409 = !DILocation(line: 1402, column: 68, scope: !4354)
!4410 = !DILocation(line: 1402, column: 76, scope: !4354)
!4411 = !DILocation(line: 1402, column: 84, scope: !4354)
!4412 = !DILocation(line: 1402, column: 92, scope: !4354)
!4413 = !DILocation(line: 1402, column: 100, scope: !4354)
!4414 = !DILocation(line: 1402, column: 52, scope: !4354)
!4415 = !DILocation(line: 1402, column: 26, scope: !4354)
!4416 = !DILocation(line: 1402, column: 6, scope: !4354)
!4417 = !DILocation(line: 1402, column: 14, scope: !4354)
!4418 = !DILocation(line: 1402, column: 24, scope: !4354)
!4419 = !DILocation(line: 1403, column: 33, scope: !4354)
!4420 = !DILocation(line: 1403, column: 41, scope: !4354)
!4421 = !DILocation(line: 1403, column: 60, scope: !4354)
!4422 = !DILocation(line: 1403, column: 68, scope: !4354)
!4423 = !DILocation(line: 1403, column: 81, scope: !4354)
!4424 = !DILocation(line: 1403, column: 89, scope: !4354)
!4425 = !DILocation(line: 1403, column: 102, scope: !4354)
!4426 = !DILocation(line: 1403, column: 110, scope: !4354)
!4427 = !DILocation(line: 1403, column: 52, scope: !4354)
!4428 = !DILocation(line: 1403, column: 26, scope: !4354)
!4429 = !DILocation(line: 1403, column: 6, scope: !4354)
!4430 = !DILocation(line: 1403, column: 14, scope: !4354)
!4431 = !DILocation(line: 1403, column: 24, scope: !4354)
!4432 = !DILocation(line: 1404, column: 31, scope: !4354)
!4433 = !DILocation(line: 1404, column: 36, scope: !4354)
!4434 = !DILocation(line: 1404, column: 42, scope: !4354)
!4435 = !DILocation(line: 1404, column: 47, scope: !4354)
!4436 = !DILocation(line: 1404, column: 22, scope: !4354)
!4437 = !DILocation(line: 1404, column: 64, scope: !4354)
!4438 = !DILocation(line: 1404, column: 69, scope: !4354)
!4439 = !DILocation(line: 1404, column: 75, scope: !4354)
!4440 = !DILocation(line: 1404, column: 80, scope: !4354)
!4441 = !DILocation(line: 1404, column: 55, scope: !4354)
!4442 = !DILocation(line: 1404, column: 53, scope: !4354)
!4443 = !DILocation(line: 1404, column: 6, scope: !4354)
!4444 = !DILocation(line: 1404, column: 14, scope: !4354)
!4445 = !DILocation(line: 1404, column: 20, scope: !4354)
!4446 = !DILocation(line: 1405, column: 6, scope: !4354)
!4447 = !DILocation(line: 1405, column: 14, scope: !4354)
!4448 = !DILocation(line: 1405, column: 21, scope: !4354)
!4449 = !DILocation(line: 1406, column: 5, scope: !4354)
!4450 = !DILocation(line: 1407, column: 4, scope: !4341)
!4451 = !DILocation(line: 1408, column: 3, scope: !4303)
!4452 = !DILocation(line: 1409, column: 2, scope: !4271)
!4453 = !DILocation(line: 1411, column: 3, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 1410, column: 7)
!4455 = !DILocation(line: 1411, column: 8, scope: !4454)
!4456 = !DILocation(line: 1411, column: 14, scope: !4454)
!4457 = !DILocation(line: 1412, column: 3, scope: !4454)
!4458 = !DILocation(line: 1412, column: 8, scope: !4454)
!4459 = !DILocation(line: 1412, column: 14, scope: !4454)
!4460 = !DILocation(line: 1413, column: 3, scope: !4454)
!4461 = !DILocation(line: 1413, column: 8, scope: !4454)
!4462 = !DILocation(line: 1413, column: 14, scope: !4454)
!4463 = !DILocation(line: 1415, column: 3, scope: !4454)
!4464 = !DILocation(line: 1415, column: 8, scope: !4454)
!4465 = !DILocation(line: 1415, column: 15, scope: !4454)
!4466 = !DILocation(line: 1416, column: 3, scope: !4454)
!4467 = !DILocation(line: 1416, column: 8, scope: !4454)
!4468 = !DILocation(line: 1416, column: 15, scope: !4454)
!4469 = !DILocation(line: 1417, column: 3, scope: !4454)
!4470 = !DILocation(line: 1417, column: 8, scope: !4454)
!4471 = !DILocation(line: 1417, column: 15, scope: !4454)
!4472 = !DILocation(line: 1419, column: 3, scope: !4454)
!4473 = !DILocation(line: 1419, column: 8, scope: !4454)
!4474 = !DILocation(line: 1419, column: 20, scope: !4454)
!4475 = !DILocation(line: 1420, column: 3, scope: !4454)
!4476 = !DILocation(line: 1420, column: 8, scope: !4454)
!4477 = !DILocation(line: 1420, column: 20, scope: !4454)
!4478 = !DILocation(line: 1421, column: 3, scope: !4454)
!4479 = !DILocation(line: 1421, column: 8, scope: !4454)
!4480 = !DILocation(line: 1421, column: 20, scope: !4454)
!4481 = !DILocation(line: 1423, column: 1, scope: !4106)
!4482 = distinct !DISubprogram(name: "sample_occ_surface", scope: !3, file: !3, line: 1179, type: !4483, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{null, !4109}
!4485 = !DILocalVariable(name: "shi", arg: 1, scope: !4482, file: !3, line: 1179, type: !4109)
!4486 = !DILocation(line: 1179, column: 44, scope: !4482)
!4487 = !DILocalVariable(name: "strand", scope: !4482, file: !3, line: 1181, type: !4488)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_typedef, name: "StrandRen", file: !182, line: 481, baseType: !2582)
!4490 = !DILocation(line: 1181, column: 13, scope: !4482)
!4491 = !DILocation(line: 1181, column: 22, scope: !4482)
!4492 = !DILocation(line: 1181, column: 27, scope: !4482)
!4493 = !DILocalVariable(name: "mesh", scope: !4482, file: !3, line: 1182, type: !2774)
!4494 = !DILocation(line: 1182, column: 17, scope: !4482)
!4495 = !DILocation(line: 1182, column: 24, scope: !4482)
!4496 = !DILocation(line: 1182, column: 32, scope: !4482)
!4497 = !DILocation(line: 1182, column: 40, scope: !4482)
!4498 = !DILocalVariable(name: "face", scope: !4482, file: !3, line: 1183, type: !4499)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12)
!4501 = !DILocation(line: 1183, column: 13, scope: !4482)
!4502 = !DILocalVariable(name: "index", scope: !4482, file: !3, line: 1183, type: !4499)
!4503 = !DILocation(line: 1183, column: 20, scope: !4482)
!4504 = !DILocation(line: 1183, column: 50, scope: !4482)
!4505 = !DILocation(line: 1183, column: 55, scope: !4482)
!4506 = !DILocation(line: 1183, column: 60, scope: !4482)
!4507 = !DILocation(line: 1183, column: 28, scope: !4482)
!4508 = !DILocalVariable(name: "w", scope: !4482, file: !3, line: 1184, type: !433)
!4509 = !DILocation(line: 1184, column: 8, scope: !4482)
!4510 = !DILocalVariable(name: "co1", scope: !4482, file: !3, line: 1184, type: !7)
!4511 = !DILocation(line: 1184, column: 15, scope: !4482)
!4512 = !DILocalVariable(name: "co2", scope: !4482, file: !3, line: 1184, type: !7)
!4513 = !DILocation(line: 1184, column: 21, scope: !4482)
!4514 = !DILocalVariable(name: "co3", scope: !4482, file: !3, line: 1184, type: !7)
!4515 = !DILocation(line: 1184, column: 27, scope: !4482)
!4516 = !DILocalVariable(name: "co4", scope: !4482, file: !3, line: 1184, type: !7)
!4517 = !DILocation(line: 1184, column: 33, scope: !4482)
!4518 = !DILocation(line: 1186, column: 6, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1186, column: 6)
!4520 = !DILocation(line: 1186, column: 11, scope: !4519)
!4521 = !DILocation(line: 1186, column: 14, scope: !4519)
!4522 = !DILocation(line: 1186, column: 20, scope: !4519)
!4523 = !DILocation(line: 1186, column: 25, scope: !4519)
!4524 = !DILocation(line: 1186, column: 28, scope: !4519)
!4525 = !DILocation(line: 1186, column: 34, scope: !4519)
!4526 = !DILocation(line: 1186, column: 37, scope: !4519)
!4527 = !DILocation(line: 1186, column: 40, scope: !4519)
!4528 = !DILocation(line: 1186, column: 46, scope: !4519)
!4529 = !DILocation(line: 1186, column: 49, scope: !4519)
!4530 = !DILocation(line: 1186, column: 52, scope: !4519)
!4531 = !DILocation(line: 1186, column: 6, scope: !4482)
!4532 = !DILocation(line: 1187, column: 10, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1186, column: 59)
!4534 = !DILocation(line: 1187, column: 16, scope: !4533)
!4535 = !DILocation(line: 1187, column: 22, scope: !4533)
!4536 = !DILocation(line: 1187, column: 21, scope: !4533)
!4537 = !DILocation(line: 1187, column: 8, scope: !4533)
!4538 = !DILocation(line: 1189, column: 9, scope: !4533)
!4539 = !DILocation(line: 1189, column: 15, scope: !4533)
!4540 = !DILocation(line: 1189, column: 18, scope: !4533)
!4541 = !DILocation(line: 1189, column: 7, scope: !4533)
!4542 = !DILocation(line: 1190, column: 9, scope: !4533)
!4543 = !DILocation(line: 1190, column: 15, scope: !4533)
!4544 = !DILocation(line: 1190, column: 18, scope: !4533)
!4545 = !DILocation(line: 1190, column: 7, scope: !4533)
!4546 = !DILocation(line: 1191, column: 9, scope: !4533)
!4547 = !DILocation(line: 1191, column: 15, scope: !4533)
!4548 = !DILocation(line: 1191, column: 18, scope: !4533)
!4549 = !DILocation(line: 1191, column: 7, scope: !4533)
!4550 = !DILocation(line: 1192, column: 10, scope: !4533)
!4551 = !DILocation(line: 1192, column: 9, scope: !4533)
!4552 = !DILocation(line: 1192, column: 21, scope: !4533)
!4553 = !DILocation(line: 1192, column: 27, scope: !4533)
!4554 = !DILocation(line: 1192, column: 30, scope: !4533)
!4555 = !DILocation(line: 1192, column: 7, scope: !4533)
!4556 = !DILocation(line: 1194, column: 26, scope: !4533)
!4557 = !DILocation(line: 1194, column: 29, scope: !4533)
!4558 = !DILocation(line: 1194, column: 34, scope: !4533)
!4559 = !DILocation(line: 1194, column: 39, scope: !4533)
!4560 = !DILocation(line: 1194, column: 44, scope: !4533)
!4561 = !DILocation(line: 1194, column: 49, scope: !4533)
!4562 = !DILocation(line: 1194, column: 57, scope: !4533)
!4563 = !DILocation(line: 1194, column: 63, scope: !4533)
!4564 = !DILocation(line: 1194, column: 3, scope: !4533)
!4565 = !DILocation(line: 1196, column: 11, scope: !4533)
!4566 = !DILocation(line: 1196, column: 16, scope: !4533)
!4567 = !DILocation(line: 1196, column: 3, scope: !4533)
!4568 = !DILocation(line: 1197, column: 11, scope: !4533)
!4569 = !DILocation(line: 1197, column: 16, scope: !4533)
!4570 = !DILocation(line: 1197, column: 3, scope: !4533)
!4571 = !DILocation(line: 1198, column: 11, scope: !4533)
!4572 = !DILocation(line: 1198, column: 16, scope: !4533)
!4573 = !DILocation(line: 1198, column: 3, scope: !4533)
!4574 = !DILocation(line: 1200, column: 16, scope: !4533)
!4575 = !DILocation(line: 1200, column: 21, scope: !4533)
!4576 = !DILocation(line: 1200, column: 25, scope: !4533)
!4577 = !DILocation(line: 1200, column: 31, scope: !4533)
!4578 = !DILocation(line: 1200, column: 34, scope: !4533)
!4579 = !DILocation(line: 1200, column: 44, scope: !4533)
!4580 = !DILocation(line: 1200, column: 3, scope: !4533)
!4581 = !DILocation(line: 1201, column: 16, scope: !4533)
!4582 = !DILocation(line: 1201, column: 21, scope: !4533)
!4583 = !DILocation(line: 1201, column: 26, scope: !4533)
!4584 = !DILocation(line: 1201, column: 32, scope: !4533)
!4585 = !DILocation(line: 1201, column: 36, scope: !4533)
!4586 = !DILocation(line: 1201, column: 46, scope: !4533)
!4587 = !DILocation(line: 1201, column: 3, scope: !4533)
!4588 = !DILocation(line: 1202, column: 16, scope: !4533)
!4589 = !DILocation(line: 1202, column: 21, scope: !4533)
!4590 = !DILocation(line: 1202, column: 31, scope: !4533)
!4591 = !DILocation(line: 1202, column: 37, scope: !4533)
!4592 = !DILocation(line: 1202, column: 46, scope: !4533)
!4593 = !DILocation(line: 1202, column: 56, scope: !4533)
!4594 = !DILocation(line: 1202, column: 3, scope: !4533)
!4595 = !DILocation(line: 1203, column: 16, scope: !4533)
!4596 = !DILocation(line: 1203, column: 21, scope: !4533)
!4597 = !DILocation(line: 1203, column: 25, scope: !4533)
!4598 = !DILocation(line: 1203, column: 31, scope: !4533)
!4599 = !DILocation(line: 1203, column: 34, scope: !4533)
!4600 = !DILocation(line: 1203, column: 44, scope: !4533)
!4601 = !DILocation(line: 1203, column: 3, scope: !4533)
!4602 = !DILocation(line: 1204, column: 16, scope: !4533)
!4603 = !DILocation(line: 1204, column: 21, scope: !4533)
!4604 = !DILocation(line: 1204, column: 26, scope: !4533)
!4605 = !DILocation(line: 1204, column: 32, scope: !4533)
!4606 = !DILocation(line: 1204, column: 36, scope: !4533)
!4607 = !DILocation(line: 1204, column: 46, scope: !4533)
!4608 = !DILocation(line: 1204, column: 3, scope: !4533)
!4609 = !DILocation(line: 1205, column: 16, scope: !4533)
!4610 = !DILocation(line: 1205, column: 21, scope: !4533)
!4611 = !DILocation(line: 1205, column: 31, scope: !4533)
!4612 = !DILocation(line: 1205, column: 37, scope: !4533)
!4613 = !DILocation(line: 1205, column: 46, scope: !4533)
!4614 = !DILocation(line: 1205, column: 56, scope: !4533)
!4615 = !DILocation(line: 1205, column: 3, scope: !4533)
!4616 = !DILocation(line: 1206, column: 16, scope: !4533)
!4617 = !DILocation(line: 1206, column: 21, scope: !4533)
!4618 = !DILocation(line: 1206, column: 25, scope: !4533)
!4619 = !DILocation(line: 1206, column: 31, scope: !4533)
!4620 = !DILocation(line: 1206, column: 34, scope: !4533)
!4621 = !DILocation(line: 1206, column: 44, scope: !4533)
!4622 = !DILocation(line: 1206, column: 3, scope: !4533)
!4623 = !DILocation(line: 1207, column: 16, scope: !4533)
!4624 = !DILocation(line: 1207, column: 21, scope: !4533)
!4625 = !DILocation(line: 1207, column: 26, scope: !4533)
!4626 = !DILocation(line: 1207, column: 32, scope: !4533)
!4627 = !DILocation(line: 1207, column: 36, scope: !4533)
!4628 = !DILocation(line: 1207, column: 46, scope: !4533)
!4629 = !DILocation(line: 1207, column: 3, scope: !4533)
!4630 = !DILocation(line: 1208, column: 16, scope: !4533)
!4631 = !DILocation(line: 1208, column: 21, scope: !4533)
!4632 = !DILocation(line: 1208, column: 31, scope: !4533)
!4633 = !DILocation(line: 1208, column: 37, scope: !4533)
!4634 = !DILocation(line: 1208, column: 46, scope: !4533)
!4635 = !DILocation(line: 1208, column: 56, scope: !4533)
!4636 = !DILocation(line: 1208, column: 3, scope: !4533)
!4637 = !DILocation(line: 1209, column: 7, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 1209, column: 7)
!4639 = !DILocation(line: 1209, column: 7, scope: !4533)
!4640 = !DILocation(line: 1210, column: 17, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1209, column: 16)
!4642 = !DILocation(line: 1210, column: 22, scope: !4641)
!4643 = !DILocation(line: 1210, column: 26, scope: !4641)
!4644 = !DILocation(line: 1210, column: 32, scope: !4641)
!4645 = !DILocation(line: 1210, column: 35, scope: !4641)
!4646 = !DILocation(line: 1210, column: 45, scope: !4641)
!4647 = !DILocation(line: 1210, column: 4, scope: !4641)
!4648 = !DILocation(line: 1211, column: 17, scope: !4641)
!4649 = !DILocation(line: 1211, column: 22, scope: !4641)
!4650 = !DILocation(line: 1211, column: 27, scope: !4641)
!4651 = !DILocation(line: 1211, column: 33, scope: !4641)
!4652 = !DILocation(line: 1211, column: 37, scope: !4641)
!4653 = !DILocation(line: 1211, column: 47, scope: !4641)
!4654 = !DILocation(line: 1211, column: 4, scope: !4641)
!4655 = !DILocation(line: 1212, column: 17, scope: !4641)
!4656 = !DILocation(line: 1212, column: 22, scope: !4641)
!4657 = !DILocation(line: 1212, column: 32, scope: !4641)
!4658 = !DILocation(line: 1212, column: 38, scope: !4641)
!4659 = !DILocation(line: 1212, column: 47, scope: !4641)
!4660 = !DILocation(line: 1212, column: 57, scope: !4641)
!4661 = !DILocation(line: 1212, column: 4, scope: !4641)
!4662 = !DILocation(line: 1213, column: 3, scope: !4641)
!4663 = !DILocation(line: 1214, column: 2, scope: !4533)
!4664 = !DILocation(line: 1216, column: 3, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4519, file: !3, line: 1215, column: 7)
!4666 = !DILocation(line: 1216, column: 8, scope: !4665)
!4667 = !DILocation(line: 1216, column: 14, scope: !4665)
!4668 = !DILocation(line: 1217, column: 3, scope: !4665)
!4669 = !DILocation(line: 1217, column: 8, scope: !4665)
!4670 = !DILocation(line: 1217, column: 14, scope: !4665)
!4671 = !DILocation(line: 1218, column: 3, scope: !4665)
!4672 = !DILocation(line: 1218, column: 8, scope: !4665)
!4673 = !DILocation(line: 1218, column: 14, scope: !4665)
!4674 = !DILocation(line: 1219, column: 11, scope: !4665)
!4675 = !DILocation(line: 1219, column: 16, scope: !4665)
!4676 = !DILocation(line: 1219, column: 3, scope: !4665)
!4677 = !DILocation(line: 1220, column: 11, scope: !4665)
!4678 = !DILocation(line: 1220, column: 16, scope: !4665)
!4679 = !DILocation(line: 1220, column: 3, scope: !4665)
!4680 = !DILocation(line: 1222, column: 1, scope: !4482)
!4681 = distinct !DISubprogram(name: "sample_occ_cache", scope: !3, file: !3, line: 1087, type: !4682, scopeLine: 1088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{!12, !85, !7, !7, !12, !12, !12, !7, !7, !7}
!4684 = !DILocalVariable(name: "tree", arg: 1, scope: !4681, file: !3, line: 1087, type: !85)
!4685 = !DILocation(line: 1087, column: 44, scope: !4681)
!4686 = !DILocalVariable(name: "co", arg: 2, scope: !4681, file: !3, line: 1087, type: !7)
!4687 = !DILocation(line: 1087, column: 57, scope: !4681)
!4688 = !DILocalVariable(name: "n", arg: 3, scope: !4681, file: !3, line: 1087, type: !7)
!4689 = !DILocation(line: 1087, column: 68, scope: !4681)
!4690 = !DILocalVariable(name: "x", arg: 4, scope: !4681, file: !3, line: 1087, type: !12)
!4691 = !DILocation(line: 1087, column: 75, scope: !4681)
!4692 = !DILocalVariable(name: "y", arg: 5, scope: !4681, file: !3, line: 1087, type: !12)
!4693 = !DILocation(line: 1087, column: 82, scope: !4681)
!4694 = !DILocalVariable(name: "thread", arg: 6, scope: !4681, file: !3, line: 1087, type: !12)
!4695 = !DILocation(line: 1087, column: 89, scope: !4681)
!4696 = !DILocalVariable(name: "ao", arg: 7, scope: !4681, file: !3, line: 1087, type: !7)
!4697 = !DILocation(line: 1087, column: 104, scope: !4681)
!4698 = !DILocalVariable(name: "env", arg: 8, scope: !4681, file: !3, line: 1087, type: !7)
!4699 = !DILocation(line: 1087, column: 115, scope: !4681)
!4700 = !DILocalVariable(name: "indirect", arg: 9, scope: !4681, file: !3, line: 1087, type: !7)
!4701 = !DILocation(line: 1087, column: 127, scope: !4681)
!4702 = !DILocalVariable(name: "cache", scope: !4681, file: !3, line: 1089, type: !145)
!4703 = !DILocation(line: 1089, column: 18, scope: !4681)
!4704 = !DILocalVariable(name: "samples", scope: !4681, file: !3, line: 1090, type: !4705)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 256, elements: !434)
!4706 = !DILocation(line: 1090, column: 24, scope: !4681)
!4707 = !DILocalVariable(name: "sample", scope: !4681, file: !3, line: 1090, type: !150)
!4708 = !DILocation(line: 1090, column: 37, scope: !4681)
!4709 = !DILocalVariable(name: "wn", scope: !4681, file: !3, line: 1091, type: !433)
!4710 = !DILocation(line: 1091, column: 8, scope: !4681)
!4711 = !DILocalVariable(name: "wz", scope: !4681, file: !3, line: 1091, type: !433)
!4712 = !DILocation(line: 1091, column: 15, scope: !4681)
!4713 = !DILocalVariable(name: "wb", scope: !4681, file: !3, line: 1091, type: !433)
!4714 = !DILocation(line: 1091, column: 22, scope: !4681)
!4715 = !DILocalVariable(name: "tx", scope: !4681, file: !3, line: 1091, type: !6)
!4716 = !DILocation(line: 1091, column: 29, scope: !4681)
!4717 = !DILocalVariable(name: "ty", scope: !4681, file: !3, line: 1091, type: !6)
!4718 = !DILocation(line: 1091, column: 33, scope: !4681)
!4719 = !DILocalVariable(name: "w", scope: !4681, file: !3, line: 1091, type: !6)
!4720 = !DILocation(line: 1091, column: 37, scope: !4681)
!4721 = !DILocalVariable(name: "totw", scope: !4681, file: !3, line: 1091, type: !6)
!4722 = !DILocation(line: 1091, column: 40, scope: !4681)
!4723 = !DILocalVariable(name: "mino", scope: !4681, file: !3, line: 1091, type: !6)
!4724 = !DILocation(line: 1091, column: 46, scope: !4681)
!4725 = !DILocalVariable(name: "maxo", scope: !4681, file: !3, line: 1091, type: !6)
!4726 = !DILocation(line: 1091, column: 52, scope: !4681)
!4727 = !DILocalVariable(name: "d", scope: !4681, file: !3, line: 1092, type: !96)
!4728 = !DILocation(line: 1092, column: 8, scope: !4681)
!4729 = !DILocalVariable(name: "dist2", scope: !4681, file: !3, line: 1092, type: !6)
!4730 = !DILocation(line: 1092, column: 14, scope: !4681)
!4731 = !DILocalVariable(name: "i", scope: !4681, file: !3, line: 1093, type: !12)
!4732 = !DILocation(line: 1093, column: 6, scope: !4681)
!4733 = !DILocalVariable(name: "x1", scope: !4681, file: !3, line: 1093, type: !12)
!4734 = !DILocation(line: 1093, column: 9, scope: !4681)
!4735 = !DILocalVariable(name: "y1", scope: !4681, file: !3, line: 1093, type: !12)
!4736 = !DILocation(line: 1093, column: 13, scope: !4681)
!4737 = !DILocalVariable(name: "x2", scope: !4681, file: !3, line: 1093, type: !12)
!4738 = !DILocation(line: 1093, column: 17, scope: !4681)
!4739 = !DILocalVariable(name: "y2", scope: !4681, file: !3, line: 1093, type: !12)
!4740 = !DILocation(line: 1093, column: 21, scope: !4681)
!4741 = !DILocation(line: 1095, column: 7, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1095, column: 6)
!4743 = !DILocation(line: 1095, column: 13, scope: !4742)
!4744 = !DILocation(line: 1095, column: 6, scope: !4681)
!4745 = !DILocation(line: 1096, column: 3, scope: !4742)
!4746 = !DILocation(line: 1099, column: 11, scope: !4681)
!4747 = !DILocation(line: 1099, column: 17, scope: !4681)
!4748 = !DILocation(line: 1099, column: 23, scope: !4681)
!4749 = !DILocation(line: 1099, column: 8, scope: !4681)
!4750 = !DILocation(line: 1101, column: 6, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1101, column: 6)
!4752 = !DILocation(line: 1101, column: 13, scope: !4751)
!4753 = !DILocation(line: 1101, column: 20, scope: !4751)
!4754 = !DILocation(line: 1101, column: 23, scope: !4751)
!4755 = !DILocation(line: 1101, column: 30, scope: !4751)
!4756 = !DILocation(line: 1101, column: 6, scope: !4681)
!4757 = !DILocation(line: 1102, column: 13, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 1101, column: 36)
!4759 = !DILocation(line: 1102, column: 20, scope: !4758)
!4760 = !DILocation(line: 1102, column: 28, scope: !4758)
!4761 = !DILocation(line: 1102, column: 32, scope: !4758)
!4762 = !DILocation(line: 1102, column: 39, scope: !4758)
!4763 = !DILocation(line: 1102, column: 30, scope: !4758)
!4764 = !DILocation(line: 1102, column: 44, scope: !4758)
!4765 = !DILocation(line: 1102, column: 51, scope: !4758)
!4766 = !DILocation(line: 1102, column: 42, scope: !4758)
!4767 = !DILocation(line: 1102, column: 56, scope: !4758)
!4768 = !DILocation(line: 1102, column: 60, scope: !4758)
!4769 = !DILocation(line: 1102, column: 67, scope: !4758)
!4770 = !DILocation(line: 1102, column: 58, scope: !4758)
!4771 = !DILocation(line: 1102, column: 53, scope: !4758)
!4772 = !DILocation(line: 1102, column: 10, scope: !4758)
!4773 = !DILocation(line: 1103, column: 7, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 1103, column: 7)
!4775 = !DILocation(line: 1103, column: 15, scope: !4774)
!4776 = !DILocation(line: 1103, column: 7, scope: !4758)
!4777 = !DILocation(line: 1104, column: 16, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4774, file: !3, line: 1103, column: 23)
!4779 = !DILocation(line: 1104, column: 19, scope: !4778)
!4780 = !DILocation(line: 1104, column: 27, scope: !4778)
!4781 = !DILocation(line: 1104, column: 31, scope: !4778)
!4782 = !DILocation(line: 1104, column: 4, scope: !4778)
!4783 = !DILocation(line: 1105, column: 21, scope: !4778)
!4784 = !DILocation(line: 1105, column: 24, scope: !4778)
!4785 = !DILocation(line: 1105, column: 12, scope: !4778)
!4786 = !DILocation(line: 1105, column: 10, scope: !4778)
!4787 = !DILocation(line: 1106, column: 8, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 1106, column: 8)
!4789 = !DILocation(line: 1106, column: 23, scope: !4788)
!4790 = !DILocation(line: 1106, column: 31, scope: !4788)
!4791 = !DILocation(line: 1106, column: 21, scope: !4788)
!4792 = !DILocation(line: 1106, column: 14, scope: !4788)
!4793 = !DILocation(line: 1106, column: 37, scope: !4788)
!4794 = !DILocation(line: 1106, column: 49, scope: !4788)
!4795 = !DILocation(line: 1106, column: 57, scope: !4788)
!4796 = !DILocation(line: 1106, column: 60, scope: !4788)
!4797 = !DILocation(line: 1106, column: 40, scope: !4788)
!4798 = !DILocation(line: 1106, column: 63, scope: !4788)
!4799 = !DILocation(line: 1106, column: 8, scope: !4778)
!4800 = !DILocation(line: 1107, column: 16, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4788, file: !3, line: 1106, column: 72)
!4802 = !DILocation(line: 1107, column: 20, scope: !4801)
!4803 = !DILocation(line: 1107, column: 28, scope: !4801)
!4804 = !DILocation(line: 1107, column: 5, scope: !4801)
!4805 = !DILocation(line: 1108, column: 16, scope: !4801)
!4806 = !DILocation(line: 1108, column: 21, scope: !4801)
!4807 = !DILocation(line: 1108, column: 29, scope: !4801)
!4808 = !DILocation(line: 1108, column: 5, scope: !4801)
!4809 = !DILocation(line: 1109, column: 16, scope: !4801)
!4810 = !DILocation(line: 1109, column: 26, scope: !4801)
!4811 = !DILocation(line: 1109, column: 34, scope: !4801)
!4812 = !DILocation(line: 1109, column: 5, scope: !4801)
!4813 = !DILocation(line: 1110, column: 5, scope: !4801)
!4814 = !DILocation(line: 1112, column: 3, scope: !4778)
!4815 = !DILocation(line: 1113, column: 2, scope: !4758)
!4816 = !DILocation(line: 1115, column: 3, scope: !4751)
!4817 = !DILocation(line: 1118, column: 31, scope: !4681)
!4818 = !DILocation(line: 1118, column: 38, scope: !4681)
!4819 = !DILocation(line: 1118, column: 41, scope: !4681)
!4820 = !DILocation(line: 1118, column: 15, scope: !4681)
!4821 = !DILocation(line: 1118, column: 2, scope: !4681)
!4822 = !DILocation(line: 1118, column: 13, scope: !4681)
!4823 = !DILocation(line: 1119, column: 31, scope: !4681)
!4824 = !DILocation(line: 1119, column: 38, scope: !4681)
!4825 = !DILocation(line: 1119, column: 42, scope: !4681)
!4826 = !DILocation(line: 1119, column: 49, scope: !4681)
!4827 = !DILocation(line: 1119, column: 40, scope: !4681)
!4828 = !DILocation(line: 1119, column: 55, scope: !4681)
!4829 = !DILocation(line: 1119, column: 15, scope: !4681)
!4830 = !DILocation(line: 1119, column: 2, scope: !4681)
!4831 = !DILocation(line: 1119, column: 13, scope: !4681)
!4832 = !DILocation(line: 1120, column: 31, scope: !4681)
!4833 = !DILocation(line: 1120, column: 38, scope: !4681)
!4834 = !DILocation(line: 1120, column: 41, scope: !4681)
!4835 = !DILocation(line: 1120, column: 45, scope: !4681)
!4836 = !DILocation(line: 1120, column: 52, scope: !4681)
!4837 = !DILocation(line: 1120, column: 43, scope: !4681)
!4838 = !DILocation(line: 1120, column: 15, scope: !4681)
!4839 = !DILocation(line: 1120, column: 2, scope: !4681)
!4840 = !DILocation(line: 1120, column: 13, scope: !4681)
!4841 = !DILocation(line: 1121, column: 31, scope: !4681)
!4842 = !DILocation(line: 1121, column: 38, scope: !4681)
!4843 = !DILocation(line: 1121, column: 42, scope: !4681)
!4844 = !DILocation(line: 1121, column: 49, scope: !4681)
!4845 = !DILocation(line: 1121, column: 40, scope: !4681)
!4846 = !DILocation(line: 1121, column: 55, scope: !4681)
!4847 = !DILocation(line: 1121, column: 59, scope: !4681)
!4848 = !DILocation(line: 1121, column: 66, scope: !4681)
!4849 = !DILocation(line: 1121, column: 57, scope: !4681)
!4850 = !DILocation(line: 1121, column: 15, scope: !4681)
!4851 = !DILocation(line: 1121, column: 2, scope: !4681)
!4852 = !DILocation(line: 1121, column: 13, scope: !4681)
!4853 = !DILocation(line: 1123, column: 9, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1123, column: 2)
!4855 = !DILocation(line: 1123, column: 7, scope: !4854)
!4856 = !DILocation(line: 1123, column: 14, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1123, column: 2)
!4858 = !DILocation(line: 1123, column: 16, scope: !4857)
!4859 = !DILocation(line: 1123, column: 2, scope: !4854)
!4860 = !DILocation(line: 1124, column: 16, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4857, file: !3, line: 1124, column: 7)
!4862 = !DILocation(line: 1124, column: 8, scope: !4861)
!4863 = !DILocation(line: 1124, column: 19, scope: !4861)
!4864 = !DILocation(line: 1124, column: 31, scope: !4861)
!4865 = !DILocation(line: 1124, column: 23, scope: !4861)
!4866 = !DILocation(line: 1124, column: 35, scope: !4861)
!4867 = !DILocation(line: 1124, column: 7, scope: !4857)
!4868 = !DILocation(line: 1125, column: 4, scope: !4861)
!4869 = !DILocation(line: 1123, column: 22, scope: !4857)
!4870 = !DILocation(line: 1123, column: 2, scope: !4857)
!4871 = distinct !{!4871, !4859, !4872}
!4872 = !DILocation(line: 1125, column: 11, scope: !4854)
!4873 = !DILocation(line: 1128, column: 18, scope: !4681)
!4874 = !DILocation(line: 1128, column: 30, scope: !4681)
!4875 = !DILocation(line: 1128, column: 41, scope: !4681)
!4876 = !DILocation(line: 1128, column: 53, scope: !4681)
!4877 = !DILocation(line: 1128, column: 64, scope: !4681)
!4878 = !DILocation(line: 1128, column: 76, scope: !4681)
!4879 = !DILocation(line: 1128, column: 87, scope: !4681)
!4880 = !DILocation(line: 1128, column: 99, scope: !4681)
!4881 = !DILocation(line: 1128, column: 9, scope: !4681)
!4882 = !DILocation(line: 1128, column: 7, scope: !4681)
!4883 = !DILocation(line: 1129, column: 18, scope: !4681)
!4884 = !DILocation(line: 1129, column: 30, scope: !4681)
!4885 = !DILocation(line: 1129, column: 41, scope: !4681)
!4886 = !DILocation(line: 1129, column: 53, scope: !4681)
!4887 = !DILocation(line: 1129, column: 64, scope: !4681)
!4888 = !DILocation(line: 1129, column: 76, scope: !4681)
!4889 = !DILocation(line: 1129, column: 87, scope: !4681)
!4890 = !DILocation(line: 1129, column: 99, scope: !4681)
!4891 = !DILocation(line: 1129, column: 9, scope: !4681)
!4892 = !DILocation(line: 1129, column: 7, scope: !4681)
!4893 = !DILocation(line: 1131, column: 6, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1131, column: 6)
!4895 = !DILocation(line: 1131, column: 13, scope: !4894)
!4896 = !DILocation(line: 1131, column: 11, scope: !4894)
!4897 = !DILocation(line: 1131, column: 18, scope: !4894)
!4898 = !DILocation(line: 1131, column: 6, scope: !4681)
!4899 = !DILocation(line: 1132, column: 3, scope: !4894)
!4900 = !DILocation(line: 1135, column: 10, scope: !4681)
!4901 = !DILocation(line: 1135, column: 2, scope: !4681)
!4902 = !DILocation(line: 1136, column: 10, scope: !4681)
!4903 = !DILocation(line: 1136, column: 2, scope: !4681)
!4904 = !DILocation(line: 1137, column: 10, scope: !4681)
!4905 = !DILocation(line: 1137, column: 2, scope: !4681)
!4906 = !DILocation(line: 1138, column: 7, scope: !4681)
!4907 = !DILocation(line: 1140, column: 7, scope: !4681)
!4908 = !DILocation(line: 1140, column: 19, scope: !4681)
!4909 = !DILocation(line: 1140, column: 5, scope: !4681)
!4910 = !DILocation(line: 1141, column: 7, scope: !4681)
!4911 = !DILocation(line: 1141, column: 19, scope: !4681)
!4912 = !DILocation(line: 1141, column: 5, scope: !4681)
!4913 = !DILocation(line: 1142, column: 7, scope: !4681)
!4914 = !DILocation(line: 1142, column: 19, scope: !4681)
!4915 = !DILocation(line: 1142, column: 5, scope: !4681)
!4916 = !DILocation(line: 1143, column: 7, scope: !4681)
!4917 = !DILocation(line: 1143, column: 19, scope: !4681)
!4918 = !DILocation(line: 1143, column: 5, scope: !4681)
!4919 = !DILocation(line: 1145, column: 15, scope: !4681)
!4920 = !DILocation(line: 1145, column: 20, scope: !4681)
!4921 = !DILocation(line: 1145, column: 18, scope: !4681)
!4922 = !DILocation(line: 1145, column: 7, scope: !4681)
!4923 = !DILocation(line: 1145, column: 33, scope: !4681)
!4924 = !DILocation(line: 1145, column: 38, scope: !4681)
!4925 = !DILocation(line: 1145, column: 36, scope: !4681)
!4926 = !DILocation(line: 1145, column: 25, scope: !4681)
!4927 = !DILocation(line: 1145, column: 23, scope: !4681)
!4928 = !DILocation(line: 1145, column: 5, scope: !4681)
!4929 = !DILocation(line: 1146, column: 15, scope: !4681)
!4930 = !DILocation(line: 1146, column: 20, scope: !4681)
!4931 = !DILocation(line: 1146, column: 18, scope: !4681)
!4932 = !DILocation(line: 1146, column: 7, scope: !4681)
!4933 = !DILocation(line: 1146, column: 33, scope: !4681)
!4934 = !DILocation(line: 1146, column: 38, scope: !4681)
!4935 = !DILocation(line: 1146, column: 36, scope: !4681)
!4936 = !DILocation(line: 1146, column: 25, scope: !4681)
!4937 = !DILocation(line: 1146, column: 23, scope: !4681)
!4938 = !DILocation(line: 1146, column: 5, scope: !4681)
!4939 = !DILocation(line: 1148, column: 18, scope: !4681)
!4940 = !DILocation(line: 1148, column: 16, scope: !4681)
!4941 = !DILocation(line: 1148, column: 32, scope: !4681)
!4942 = !DILocation(line: 1148, column: 30, scope: !4681)
!4943 = !DILocation(line: 1148, column: 22, scope: !4681)
!4944 = !DILocation(line: 1148, column: 2, scope: !4681)
!4945 = !DILocation(line: 1148, column: 8, scope: !4681)
!4946 = !DILocation(line: 1149, column: 11, scope: !4681)
!4947 = !DILocation(line: 1149, column: 25, scope: !4681)
!4948 = !DILocation(line: 1149, column: 23, scope: !4681)
!4949 = !DILocation(line: 1149, column: 15, scope: !4681)
!4950 = !DILocation(line: 1149, column: 2, scope: !4681)
!4951 = !DILocation(line: 1149, column: 8, scope: !4681)
!4952 = !DILocation(line: 1150, column: 18, scope: !4681)
!4953 = !DILocation(line: 1150, column: 16, scope: !4681)
!4954 = !DILocation(line: 1150, column: 25, scope: !4681)
!4955 = !DILocation(line: 1150, column: 22, scope: !4681)
!4956 = !DILocation(line: 1150, column: 2, scope: !4681)
!4957 = !DILocation(line: 1150, column: 8, scope: !4681)
!4958 = !DILocation(line: 1151, column: 10, scope: !4681)
!4959 = !DILocation(line: 1151, column: 15, scope: !4681)
!4960 = !DILocation(line: 1151, column: 13, scope: !4681)
!4961 = !DILocation(line: 1151, column: 2, scope: !4681)
!4962 = !DILocation(line: 1151, column: 8, scope: !4681)
!4963 = !DILocation(line: 1153, column: 9, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1153, column: 2)
!4965 = !DILocation(line: 1153, column: 7, scope: !4964)
!4966 = !DILocation(line: 1153, column: 14, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1153, column: 2)
!4968 = !DILocation(line: 1153, column: 16, scope: !4967)
!4969 = !DILocation(line: 1153, column: 2, scope: !4964)
!4970 = !DILocation(line: 1154, column: 15, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 1153, column: 26)
!4972 = !DILocation(line: 1154, column: 26, scope: !4971)
!4973 = !DILocation(line: 1154, column: 18, scope: !4971)
!4974 = !DILocation(line: 1154, column: 30, scope: !4971)
!4975 = !DILocation(line: 1154, column: 34, scope: !4971)
!4976 = !DILocation(line: 1154, column: 3, scope: !4971)
!4977 = !DILocation(line: 1157, column: 6, scope: !4971)
!4978 = !DILocation(line: 1157, column: 3, scope: !4971)
!4979 = !DILocation(line: 1157, column: 9, scope: !4971)
!4980 = !DILocation(line: 1158, column: 32, scope: !4971)
!4981 = !DILocation(line: 1158, column: 24, scope: !4971)
!4982 = !DILocation(line: 1158, column: 36, scope: !4971)
!4983 = !DILocation(line: 1158, column: 39, scope: !4971)
!4984 = !DILocation(line: 1158, column: 15, scope: !4971)
!4985 = !DILocation(line: 1158, column: 11, scope: !4971)
!4986 = !DILocation(line: 1158, column: 6, scope: !4971)
!4987 = !DILocation(line: 1158, column: 3, scope: !4971)
!4988 = !DILocation(line: 1158, column: 9, scope: !4971)
!4989 = !DILocation(line: 1160, column: 10, scope: !4971)
!4990 = !DILocation(line: 1160, column: 7, scope: !4971)
!4991 = !DILocation(line: 1160, column: 18, scope: !4971)
!4992 = !DILocation(line: 1160, column: 15, scope: !4971)
!4993 = !DILocation(line: 1160, column: 13, scope: !4971)
!4994 = !DILocation(line: 1160, column: 26, scope: !4971)
!4995 = !DILocation(line: 1160, column: 23, scope: !4971)
!4996 = !DILocation(line: 1160, column: 21, scope: !4971)
!4997 = !DILocation(line: 1160, column: 5, scope: !4971)
!4998 = !DILocation(line: 1162, column: 11, scope: !4971)
!4999 = !DILocation(line: 1162, column: 8, scope: !4971)
!5000 = !DILocation(line: 1163, column: 16, scope: !4971)
!5001 = !DILocation(line: 1163, column: 28, scope: !4971)
!5002 = !DILocation(line: 1163, column: 20, scope: !4971)
!5003 = !DILocation(line: 1163, column: 32, scope: !4971)
!5004 = !DILocation(line: 1163, column: 36, scope: !4971)
!5005 = !DILocation(line: 1163, column: 3, scope: !4971)
!5006 = !DILocation(line: 1164, column: 16, scope: !4971)
!5007 = !DILocation(line: 1164, column: 29, scope: !4971)
!5008 = !DILocation(line: 1164, column: 21, scope: !4971)
!5009 = !DILocation(line: 1164, column: 33, scope: !4971)
!5010 = !DILocation(line: 1164, column: 38, scope: !4971)
!5011 = !DILocation(line: 1164, column: 3, scope: !4971)
!5012 = !DILocation(line: 1165, column: 16, scope: !4971)
!5013 = !DILocation(line: 1165, column: 34, scope: !4971)
!5014 = !DILocation(line: 1165, column: 26, scope: !4971)
!5015 = !DILocation(line: 1165, column: 38, scope: !4971)
!5016 = !DILocation(line: 1165, column: 48, scope: !4971)
!5017 = !DILocation(line: 1165, column: 3, scope: !4971)
!5018 = !DILocation(line: 1166, column: 2, scope: !4971)
!5019 = !DILocation(line: 1153, column: 22, scope: !4967)
!5020 = !DILocation(line: 1153, column: 2, scope: !4967)
!5021 = distinct !{!5021, !4969, !5022}
!5022 = !DILocation(line: 1166, column: 2, scope: !4964)
!5023 = !DILocation(line: 1168, column: 6, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1168, column: 6)
!5025 = !DILocation(line: 1168, column: 11, scope: !5024)
!5026 = !DILocation(line: 1168, column: 6, scope: !4681)
!5027 = !DILocation(line: 1169, column: 17, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 1168, column: 20)
!5029 = !DILocation(line: 1169, column: 15, scope: !5028)
!5030 = !DILocation(line: 1169, column: 8, scope: !5028)
!5031 = !DILocation(line: 1170, column: 13, scope: !5028)
!5032 = !DILocation(line: 1170, column: 17, scope: !5028)
!5033 = !DILocation(line: 1170, column: 3, scope: !5028)
!5034 = !DILocation(line: 1171, column: 13, scope: !5028)
!5035 = !DILocation(line: 1171, column: 18, scope: !5028)
!5036 = !DILocation(line: 1171, column: 3, scope: !5028)
!5037 = !DILocation(line: 1172, column: 13, scope: !5028)
!5038 = !DILocation(line: 1172, column: 23, scope: !5028)
!5039 = !DILocation(line: 1172, column: 3, scope: !5028)
!5040 = !DILocation(line: 1173, column: 3, scope: !5028)
!5041 = !DILocation(line: 1176, column: 2, scope: !4681)
!5042 = !DILocation(line: 1177, column: 1, scope: !4681)
!5043 = distinct !DISubprogram(name: "sample_occ_tree", scope: !3, file: !3, line: 1008, type: !5044, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{null, !178, !85, !100, !3972, !3972, !12, !12, !7, !7, !7}
!5046 = !DILocalVariable(name: "re", arg: 1, scope: !5043, file: !3, line: 1008, type: !178)
!5047 = !DILocation(line: 1008, column: 37, scope: !5043)
!5048 = !DILocalVariable(name: "tree", arg: 2, scope: !5043, file: !3, line: 1008, type: !85)
!5049 = !DILocation(line: 1008, column: 56, scope: !5043)
!5050 = !DILocalVariable(name: "exclude", arg: 3, scope: !5043, file: !3, line: 1008, type: !100)
!5051 = !DILocation(line: 1008, column: 71, scope: !5043)
!5052 = !DILocalVariable(name: "co", arg: 4, scope: !5043, file: !3, line: 1009, type: !3972)
!5053 = !DILocation(line: 1009, column: 41, scope: !5043)
!5054 = !DILocalVariable(name: "n", arg: 5, scope: !5043, file: !3, line: 1009, type: !3972)
!5055 = !DILocation(line: 1009, column: 60, scope: !5043)
!5056 = !DILocalVariable(name: "thread", arg: 6, scope: !5043, file: !3, line: 1009, type: !12)
!5057 = !DILocation(line: 1009, column: 70, scope: !5043)
!5058 = !DILocalVariable(name: "onlyshadow", arg: 7, scope: !5043, file: !3, line: 1009, type: !12)
!5059 = !DILocation(line: 1009, column: 82, scope: !5043)
!5060 = !DILocalVariable(name: "ao", arg: 8, scope: !5043, file: !3, line: 1010, type: !7)
!5061 = !DILocation(line: 1010, column: 36, scope: !5043)
!5062 = !DILocalVariable(name: "env", arg: 9, scope: !5043, file: !3, line: 1010, type: !7)
!5063 = !DILocation(line: 1010, column: 47, scope: !5043)
!5064 = !DILocalVariable(name: "indirect", arg: 10, scope: !5043, file: !3, line: 1010, type: !7)
!5065 = !DILocation(line: 1010, column: 59, scope: !5043)
!5066 = !DILocalVariable(name: "nn", scope: !5043, file: !3, line: 1012, type: !96)
!5067 = !DILocation(line: 1012, column: 8, scope: !5043)
!5068 = !DILocalVariable(name: "bn", scope: !5043, file: !3, line: 1012, type: !96)
!5069 = !DILocation(line: 1012, column: 15, scope: !5043)
!5070 = !DILocalVariable(name: "fac", scope: !5043, file: !3, line: 1012, type: !6)
!5071 = !DILocation(line: 1012, column: 22, scope: !5043)
!5072 = !DILocalVariable(name: "occ", scope: !5043, file: !3, line: 1012, type: !6)
!5073 = !DILocation(line: 1012, column: 27, scope: !5043)
!5074 = !DILocalVariable(name: "occlusion", scope: !5043, file: !3, line: 1012, type: !6)
!5075 = !DILocation(line: 1012, column: 32, scope: !5043)
!5076 = !DILocalVariable(name: "correction", scope: !5043, file: !3, line: 1012, type: !6)
!5077 = !DILocation(line: 1012, column: 43, scope: !5043)
!5078 = !DILocalVariable(name: "rad", scope: !5043, file: !3, line: 1012, type: !96)
!5079 = !DILocation(line: 1012, column: 55, scope: !5043)
!5080 = !DILocalVariable(name: "envcolor", scope: !5043, file: !3, line: 1013, type: !12)
!5081 = !DILocation(line: 1013, column: 6, scope: !5043)
!5082 = !DILocation(line: 1015, column: 13, scope: !5043)
!5083 = !DILocation(line: 1015, column: 17, scope: !5043)
!5084 = !DILocation(line: 1015, column: 22, scope: !5043)
!5085 = !DILocation(line: 1015, column: 11, scope: !5043)
!5086 = !DILocation(line: 1016, column: 6, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1016, column: 6)
!5088 = !DILocation(line: 1016, column: 6, scope: !5043)
!5089 = !DILocation(line: 1017, column: 12, scope: !5087)
!5090 = !DILocation(line: 1017, column: 3, scope: !5087)
!5091 = !DILocation(line: 1019, column: 15, scope: !5043)
!5092 = !DILocation(line: 1019, column: 19, scope: !5043)
!5093 = !DILocation(line: 1019, column: 2, scope: !5043)
!5094 = !DILocation(line: 1021, column: 13, scope: !5043)
!5095 = !DILocation(line: 1021, column: 19, scope: !5043)
!5096 = !DILocation(line: 1021, column: 27, scope: !5043)
!5097 = !DILocation(line: 1021, column: 36, scope: !5043)
!5098 = !DILocation(line: 1021, column: 40, scope: !5043)
!5099 = !DILocation(line: 1021, column: 51, scope: !5043)
!5100 = !DILocation(line: 1021, column: 57, scope: !5043)
!5101 = !DILocation(line: 1021, column: 50, scope: !5043)
!5102 = !DILocation(line: 1021, column: 71, scope: !5043)
!5103 = !DILocation(line: 1021, column: 84, scope: !5043)
!5104 = !DILocation(line: 1021, column: 88, scope: !5043)
!5105 = !DILocation(line: 1021, column: 91, scope: !5043)
!5106 = !DILocation(line: 1021, column: 83, scope: !5043)
!5107 = !DILocation(line: 1021, column: 103, scope: !5043)
!5108 = !DILocation(line: 1021, column: 2, scope: !5043)
!5109 = !DILocation(line: 1023, column: 15, scope: !5043)
!5110 = !DILocation(line: 1023, column: 19, scope: !5043)
!5111 = !DILocation(line: 1023, column: 24, scope: !5043)
!5112 = !DILocation(line: 1023, column: 13, scope: !5043)
!5113 = !DILocation(line: 1025, column: 22, scope: !5043)
!5114 = !DILocation(line: 1025, column: 20, scope: !5043)
!5115 = !DILocation(line: 1025, column: 44, scope: !5043)
!5116 = !DILocation(line: 1025, column: 42, scope: !5043)
!5117 = !DILocation(line: 1025, column: 34, scope: !5043)
!5118 = !DILocation(line: 1025, column: 12, scope: !5043)
!5119 = !DILocation(line: 1026, column: 2, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 1026, column: 2)
!5121 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1026, column: 2)
!5122 = !DILocation(line: 1026, column: 2, scope: !5121)
!5123 = !DILocation(line: 1026, column: 2, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 1026, column: 2)
!5125 = !DILocation(line: 1027, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1027, column: 6)
!5127 = !DILocation(line: 1027, column: 17, scope: !5126)
!5128 = !DILocation(line: 1027, column: 6, scope: !5043)
!5129 = !DILocation(line: 1028, column: 16, scope: !5126)
!5130 = !DILocation(line: 1028, column: 35, scope: !5126)
!5131 = !DILocation(line: 1028, column: 34, scope: !5126)
!5132 = !DILocation(line: 1028, column: 29, scope: !5126)
!5133 = !DILocation(line: 1028, column: 27, scope: !5126)
!5134 = !DILocation(line: 1028, column: 13, scope: !5126)
!5135 = !DILocation(line: 1028, column: 3, scope: !5126)
!5136 = !DILocation(line: 1030, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1030, column: 6)
!5138 = !DILocation(line: 1030, column: 6, scope: !5043)
!5139 = !DILocation(line: 1032, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5141, file: !3, line: 1032, column: 7)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1030, column: 11)
!5142 = !DILocation(line: 1032, column: 7, scope: !5141)
!5143 = !DILocation(line: 1033, column: 34, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1032, column: 49)
!5145 = !DILocation(line: 1033, column: 38, scope: !5144)
!5146 = !DILocation(line: 1033, column: 42, scope: !5144)
!5147 = !DILocation(line: 1033, column: 25, scope: !5144)
!5148 = !DILocation(line: 1033, column: 23, scope: !5144)
!5149 = !DILocation(line: 1033, column: 15, scope: !5144)
!5150 = !DILocation(line: 1033, column: 8, scope: !5144)
!5151 = !DILocation(line: 1034, column: 21, scope: !5144)
!5152 = !DILocation(line: 1034, column: 19, scope: !5144)
!5153 = !DILocation(line: 1034, column: 28, scope: !5144)
!5154 = !DILocation(line: 1034, column: 32, scope: !5144)
!5155 = !DILocation(line: 1034, column: 37, scope: !5144)
!5156 = !DILocation(line: 1034, column: 26, scope: !5144)
!5157 = !DILocation(line: 1034, column: 44, scope: !5144)
!5158 = !DILocation(line: 1034, column: 50, scope: !5144)
!5159 = !DILocation(line: 1034, column: 54, scope: !5144)
!5160 = !DILocation(line: 1034, column: 59, scope: !5144)
!5161 = !DILocation(line: 1034, column: 48, scope: !5144)
!5162 = !DILocation(line: 1034, column: 42, scope: !5144)
!5163 = !DILocation(line: 1034, column: 4, scope: !5144)
!5164 = !DILocation(line: 1034, column: 11, scope: !5144)
!5165 = !DILocation(line: 1035, column: 21, scope: !5144)
!5166 = !DILocation(line: 1035, column: 19, scope: !5144)
!5167 = !DILocation(line: 1035, column: 28, scope: !5144)
!5168 = !DILocation(line: 1035, column: 32, scope: !5144)
!5169 = !DILocation(line: 1035, column: 37, scope: !5144)
!5170 = !DILocation(line: 1035, column: 26, scope: !5144)
!5171 = !DILocation(line: 1035, column: 44, scope: !5144)
!5172 = !DILocation(line: 1035, column: 50, scope: !5144)
!5173 = !DILocation(line: 1035, column: 54, scope: !5144)
!5174 = !DILocation(line: 1035, column: 59, scope: !5144)
!5175 = !DILocation(line: 1035, column: 48, scope: !5144)
!5176 = !DILocation(line: 1035, column: 42, scope: !5144)
!5177 = !DILocation(line: 1035, column: 4, scope: !5144)
!5178 = !DILocation(line: 1035, column: 11, scope: !5144)
!5179 = !DILocation(line: 1036, column: 21, scope: !5144)
!5180 = !DILocation(line: 1036, column: 19, scope: !5144)
!5181 = !DILocation(line: 1036, column: 28, scope: !5144)
!5182 = !DILocation(line: 1036, column: 32, scope: !5144)
!5183 = !DILocation(line: 1036, column: 37, scope: !5144)
!5184 = !DILocation(line: 1036, column: 26, scope: !5144)
!5185 = !DILocation(line: 1036, column: 44, scope: !5144)
!5186 = !DILocation(line: 1036, column: 50, scope: !5144)
!5187 = !DILocation(line: 1036, column: 54, scope: !5144)
!5188 = !DILocation(line: 1036, column: 59, scope: !5144)
!5189 = !DILocation(line: 1036, column: 48, scope: !5144)
!5190 = !DILocation(line: 1036, column: 42, scope: !5144)
!5191 = !DILocation(line: 1036, column: 4, scope: !5144)
!5192 = !DILocation(line: 1036, column: 11, scope: !5144)
!5193 = !DILocation(line: 1038, column: 14, scope: !5144)
!5194 = !DILocation(line: 1038, column: 19, scope: !5144)
!5195 = !DILocation(line: 1038, column: 4, scope: !5144)
!5196 = !DILocation(line: 1039, column: 3, scope: !5144)
!5197 = !DILocation(line: 1041, column: 13, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1040, column: 8)
!5199 = !DILocation(line: 1041, column: 4, scope: !5198)
!5200 = !DILocation(line: 1041, column: 11, scope: !5198)
!5201 = !DILocation(line: 1042, column: 13, scope: !5198)
!5202 = !DILocation(line: 1042, column: 4, scope: !5198)
!5203 = !DILocation(line: 1042, column: 11, scope: !5198)
!5204 = !DILocation(line: 1043, column: 13, scope: !5198)
!5205 = !DILocation(line: 1043, column: 4, scope: !5198)
!5206 = !DILocation(line: 1043, column: 11, scope: !5198)
!5207 = !DILocation(line: 1057, column: 2, scope: !5141)
!5208 = !DILocation(line: 1059, column: 6, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1059, column: 6)
!5210 = !DILocation(line: 1059, column: 6, scope: !5043)
!5211 = !DILocation(line: 1060, column: 11, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5209, file: !3, line: 1059, column: 10)
!5213 = !DILocation(line: 1060, column: 3, scope: !5212)
!5214 = !DILocation(line: 1060, column: 9, scope: !5212)
!5215 = !DILocation(line: 1061, column: 11, scope: !5212)
!5216 = !DILocation(line: 1061, column: 3, scope: !5212)
!5217 = !DILocation(line: 1061, column: 9, scope: !5212)
!5218 = !DILocation(line: 1062, column: 11, scope: !5212)
!5219 = !DILocation(line: 1062, column: 3, scope: !5212)
!5220 = !DILocation(line: 1062, column: 9, scope: !5212)
!5221 = !DILocation(line: 1063, column: 2, scope: !5212)
!5222 = !DILocation(line: 1065, column: 6, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 1065, column: 6)
!5224 = !DILocation(line: 1065, column: 12, scope: !5223)
!5225 = !DILocation(line: 1065, column: 6, scope: !5043)
!5226 = !DILocation(line: 1065, column: 35, scope: !5223)
!5227 = !DILocation(line: 1065, column: 45, scope: !5223)
!5228 = !DILocation(line: 1065, column: 24, scope: !5223)
!5229 = !DILocation(line: 1066, column: 15, scope: !5223)
!5230 = !DILocation(line: 1066, column: 7, scope: !5223)
!5231 = !DILocation(line: 1067, column: 1, scope: !5043)
!5232 = distinct !DISubprogram(name: "max_fff", scope: !5233, file: !5233, line: 224, type: !5234, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5233 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!6, !6, !6, !6}
!5236 = !DILocalVariable(name: "a", arg: 1, scope: !5232, file: !5233, line: 224, type: !6)
!5237 = !DILocation(line: 224, column: 29, scope: !5232)
!5238 = !DILocalVariable(name: "b", arg: 2, scope: !5232, file: !5233, line: 224, type: !6)
!5239 = !DILocation(line: 224, column: 38, scope: !5232)
!5240 = !DILocalVariable(name: "c", arg: 3, scope: !5232, file: !5233, line: 224, type: !6)
!5241 = !DILocation(line: 224, column: 47, scope: !5232)
!5242 = !DILocation(line: 226, column: 23, scope: !5232)
!5243 = !DILocation(line: 226, column: 26, scope: !5232)
!5244 = !DILocation(line: 226, column: 16, scope: !5232)
!5245 = !DILocation(line: 226, column: 30, scope: !5232)
!5246 = !DILocation(line: 226, column: 9, scope: !5232)
!5247 = !DILocation(line: 226, column: 2, scope: !5232)
!5248 = distinct !DISubprogram(name: "max_ff", scope: !5233, file: !5233, line: 206, type: !5249, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!6, !6, !6}
!5251 = !DILocalVariable(name: "a", arg: 1, scope: !5248, file: !5233, line: 206, type: !6)
!5252 = !DILocation(line: 206, column: 28, scope: !5248)
!5253 = !DILocalVariable(name: "b", arg: 2, scope: !5248, file: !5233, line: 206, type: !6)
!5254 = !DILocation(line: 206, column: 37, scope: !5248)
!5255 = !DILocation(line: 208, column: 10, scope: !5248)
!5256 = !DILocation(line: 208, column: 14, scope: !5248)
!5257 = !DILocation(line: 208, column: 12, scope: !5248)
!5258 = !DILocation(line: 208, column: 9, scope: !5248)
!5259 = !DILocation(line: 208, column: 19, scope: !5248)
!5260 = !DILocation(line: 208, column: 23, scope: !5248)
!5261 = !DILocation(line: 208, column: 2, scope: !5248)
!5262 = distinct !DISubprogram(name: "dot_v3v3", scope: !3969, file: !3969, line: 619, type: !5263, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{!6, !3972, !3972}
!5265 = !DILocalVariable(name: "a", arg: 1, scope: !5262, file: !3969, line: 619, type: !3972)
!5266 = !DILocation(line: 619, column: 36, scope: !5262)
!5267 = !DILocalVariable(name: "b", arg: 2, scope: !5262, file: !3969, line: 619, type: !3972)
!5268 = !DILocation(line: 619, column: 54, scope: !5262)
!5269 = !DILocation(line: 621, column: 9, scope: !5262)
!5270 = !DILocation(line: 621, column: 16, scope: !5262)
!5271 = !DILocation(line: 621, column: 14, scope: !5262)
!5272 = !DILocation(line: 621, column: 23, scope: !5262)
!5273 = !DILocation(line: 621, column: 30, scope: !5262)
!5274 = !DILocation(line: 621, column: 28, scope: !5262)
!5275 = !DILocation(line: 621, column: 21, scope: !5262)
!5276 = !DILocation(line: 621, column: 37, scope: !5262)
!5277 = !DILocation(line: 621, column: 44, scope: !5262)
!5278 = !DILocation(line: 621, column: 42, scope: !5262)
!5279 = !DILocation(line: 621, column: 35, scope: !5262)
!5280 = !DILocation(line: 621, column: 2, scope: !5262)
!5281 = distinct !DISubprogram(name: "cache_occ_samples", scope: !3, file: !3, line: 1425, type: !5282, scopeLine: 1426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{null, !178, !5284, !5315}
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderPart", file: !182, line: 117, baseType: !5286)
!5286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderPart", file: !182, line: 93, size: 1280, elements: !5287)
!5287 = !{!5288, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5286, file: !182, line: 94, baseType: !5289, size: 64)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5286, file: !182, line: 94, baseType: !5289, size: 64, offset: 64)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !5286, file: !182, line: 96, baseType: !200, size: 64, offset: 128)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "fullresult", scope: !5286, file: !182, line: 97, baseType: !227, size: 128, offset: 192)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "recto", scope: !5286, file: !182, line: 99, baseType: !212, size: 64, offset: 320)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "rectp", scope: !5286, file: !182, line: 100, baseType: !212, size: 64, offset: 384)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "rectz", scope: !5286, file: !182, line: 101, baseType: !212, size: 64, offset: 448)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "rectmask", scope: !5286, file: !182, line: 102, baseType: !212, size: 64, offset: 512)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "rectdaps", scope: !5286, file: !182, line: 103, baseType: !5298, size: 64, offset: 576)
!5298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5299, size: 64)
!5299 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !5300, line: 87, baseType: !5301)
!5300 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!5301 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "rectbacko", scope: !5286, file: !182, line: 104, baseType: !212, size: 64, offset: 640)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackp", scope: !5286, file: !182, line: 105, baseType: !212, size: 64, offset: 704)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "rectbackz", scope: !5286, file: !182, line: 106, baseType: !212, size: 64, offset: 768)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "rectall", scope: !5286, file: !182, line: 107, baseType: !5298, size: 64, offset: 832)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !5286, file: !182, line: 109, baseType: !216, size: 128, offset: 896)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "rectx", scope: !5286, file: !182, line: 110, baseType: !12, size: 32, offset: 1024)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "recty", scope: !5286, file: !182, line: 110, baseType: !12, size: 32, offset: 1056)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5286, file: !182, line: 111, baseType: !12, size: 32, offset: 1088)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !5286, file: !182, line: 112, baseType: !79, size: 16, offset: 1120)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5286, file: !182, line: 112, baseType: !79, size: 16, offset: 1136)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !5286, file: !182, line: 113, baseType: !79, size: 16, offset: 1152)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5286, file: !182, line: 114, baseType: !79, size: 16, offset: 1168)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "clipflag", scope: !5286, file: !182, line: 116, baseType: !602, size: 64, offset: 1216)
!5315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5316, size: 64)
!5316 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeSample", file: !5317, line: 54, baseType: !5318)
!5317 = !DIFile(filename: "blender/source/blender/render/intern/include/shading.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeSample", file: !5317, line: 46, size: 216640, elements: !5319)
!5319 = !{!5320, !5321, !5324, !5326}
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !5318, file: !5317, line: 47, baseType: !12, size: 32)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "rlpp", scope: !5318, file: !5317, line: 49, baseType: !5322, size: 1024, offset: 64)
!5322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5323, size: 1024, elements: !2335)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "shi", scope: !5318, file: !5317, line: 52, baseType: !5325, size: 188416, offset: 1088)
!5325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4110, size: 188416, elements: !2335)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "shr", scope: !5318, file: !5317, line: 53, baseType: !5327, size: 27136, offset: 189504)
!5327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5328, size: 27136, elements: !2335)
!5328 = !DIDerivedType(tag: DW_TAG_typedef, name: "ShadeResult", file: !2479, line: 65, baseType: !5329)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ShadeResult", file: !2479, line: 48, size: 1696, elements: !5330)
!5330 = !{!5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "combined", scope: !5329, file: !2479, line: 49, baseType: !433, size: 128)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5329, file: !2479, line: 50, baseType: !433, size: 128, offset: 128)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5329, file: !2479, line: 51, baseType: !6, size: 32, offset: 256)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "mist", scope: !5329, file: !2479, line: 51, baseType: !6, size: 32, offset: 288)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !5329, file: !2479, line: 51, baseType: !6, size: 32, offset: 320)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !5329, file: !2479, line: 52, baseType: !96, size: 96, offset: 352)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "diff", scope: !5329, file: !2479, line: 53, baseType: !96, size: 96, offset: 448)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "diffshad", scope: !5329, file: !2479, line: 54, baseType: !96, size: 96, offset: 544)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !5329, file: !2479, line: 55, baseType: !96, size: 96, offset: 640)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "shad", scope: !5329, file: !2479, line: 56, baseType: !433, size: 128, offset: 736)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "ao", scope: !5329, file: !2479, line: 57, baseType: !96, size: 96, offset: 864)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !5329, file: !2479, line: 58, baseType: !96, size: 96, offset: 960)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "indirect", scope: !5329, file: !2479, line: 59, baseType: !96, size: 96, offset: 1056)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "refl", scope: !5329, file: !2479, line: 60, baseType: !96, size: 96, offset: 1152)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "refr", scope: !5329, file: !2479, line: 61, baseType: !96, size: 96, offset: 1248)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !5329, file: !2479, line: 62, baseType: !96, size: 96, offset: 1344)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "winspeed", scope: !5329, file: !2479, line: 63, baseType: !433, size: 128, offset: 1440)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "rayhits", scope: !5329, file: !2479, line: 64, baseType: !433, size: 128, offset: 1568)
!5349 = !DILocalVariable(name: "re", arg: 1, scope: !5281, file: !3, line: 1425, type: !178)
!5350 = !DILocation(line: 1425, column: 32, scope: !5281)
!5351 = !DILocalVariable(name: "pa", arg: 2, scope: !5281, file: !3, line: 1425, type: !5284)
!5352 = !DILocation(line: 1425, column: 48, scope: !5281)
!5353 = !DILocalVariable(name: "ssamp", arg: 3, scope: !5281, file: !3, line: 1425, type: !5315)
!5354 = !DILocation(line: 1425, column: 65, scope: !5281)
!5355 = !DILocalVariable(name: "tree", scope: !5281, file: !3, line: 1427, type: !85)
!5356 = !DILocation(line: 1427, column: 17, scope: !5281)
!5357 = !DILocation(line: 1427, column: 24, scope: !5281)
!5358 = !DILocation(line: 1427, column: 28, scope: !5281)
!5359 = !DILocalVariable(name: "ps", scope: !5281, file: !3, line: 1428, type: !66)
!5360 = !DILocation(line: 1428, column: 9, scope: !5281)
!5361 = !DILocalVariable(name: "cache", scope: !5281, file: !3, line: 1429, type: !145)
!5362 = !DILocation(line: 1429, column: 18, scope: !5281)
!5363 = !DILocalVariable(name: "sample", scope: !5281, file: !3, line: 1430, type: !150)
!5364 = !DILocation(line: 1430, column: 24, scope: !5281)
!5365 = !DILocalVariable(name: "exclude", scope: !5281, file: !3, line: 1431, type: !101)
!5366 = !DILocation(line: 1431, column: 10, scope: !5281)
!5367 = !DILocalVariable(name: "shi", scope: !5281, file: !3, line: 1432, type: !4109)
!5368 = !DILocation(line: 1432, column: 14, scope: !5281)
!5369 = !DILocalVariable(name: "rd", scope: !5281, file: !3, line: 1433, type: !5298)
!5370 = !DILocation(line: 1433, column: 12, scope: !5281)
!5371 = !DILocalVariable(name: "ro", scope: !5281, file: !3, line: 1434, type: !212)
!5372 = !DILocation(line: 1434, column: 7, scope: !5281)
!5373 = !DILocalVariable(name: "rp", scope: !5281, file: !3, line: 1434, type: !212)
!5374 = !DILocation(line: 1434, column: 19, scope: !5281)
!5375 = !DILocalVariable(name: "rz", scope: !5281, file: !3, line: 1434, type: !212)
!5376 = !DILocation(line: 1434, column: 31, scope: !5281)
!5377 = !DILocalVariable(name: "onlyshadow", scope: !5281, file: !3, line: 1434, type: !12)
!5378 = !DILocation(line: 1434, column: 42, scope: !5281)
!5379 = !DILocalVariable(name: "x", scope: !5281, file: !3, line: 1435, type: !12)
!5380 = !DILocation(line: 1435, column: 6, scope: !5281)
!5381 = !DILocalVariable(name: "y", scope: !5281, file: !3, line: 1435, type: !12)
!5382 = !DILocation(line: 1435, column: 9, scope: !5281)
!5383 = !DILocalVariable(name: "step", scope: !5281, file: !3, line: 1435, type: !12)
!5384 = !DILocation(line: 1435, column: 12, scope: !5281)
!5385 = !DILocation(line: 1437, column: 7, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1437, column: 6)
!5387 = !DILocation(line: 1437, column: 13, scope: !5386)
!5388 = !DILocation(line: 1437, column: 6, scope: !5281)
!5389 = !DILocation(line: 1438, column: 3, scope: !5386)
!5390 = !DILocation(line: 1440, column: 11, scope: !5281)
!5391 = !DILocation(line: 1440, column: 17, scope: !5281)
!5392 = !DILocation(line: 1440, column: 23, scope: !5281)
!5393 = !DILocation(line: 1440, column: 27, scope: !5281)
!5394 = !DILocation(line: 1440, column: 8, scope: !5281)
!5395 = !DILocation(line: 1441, column: 13, scope: !5281)
!5396 = !DILocation(line: 1441, column: 17, scope: !5281)
!5397 = !DILocation(line: 1441, column: 2, scope: !5281)
!5398 = !DILocation(line: 1441, column: 9, scope: !5281)
!5399 = !DILocation(line: 1441, column: 11, scope: !5281)
!5400 = !DILocation(line: 1442, column: 13, scope: !5281)
!5401 = !DILocation(line: 1442, column: 17, scope: !5281)
!5402 = !DILocation(line: 1442, column: 2, scope: !5281)
!5403 = !DILocation(line: 1442, column: 9, scope: !5281)
!5404 = !DILocation(line: 1442, column: 11, scope: !5281)
!5405 = !DILocation(line: 1443, column: 13, scope: !5281)
!5406 = !DILocation(line: 1443, column: 17, scope: !5281)
!5407 = !DILocation(line: 1443, column: 26, scope: !5281)
!5408 = !DILocation(line: 1443, column: 2, scope: !5281)
!5409 = !DILocation(line: 1443, column: 9, scope: !5281)
!5410 = !DILocation(line: 1443, column: 11, scope: !5281)
!5411 = !DILocation(line: 1444, column: 13, scope: !5281)
!5412 = !DILocation(line: 1444, column: 17, scope: !5281)
!5413 = !DILocation(line: 1444, column: 26, scope: !5281)
!5414 = !DILocation(line: 1444, column: 2, scope: !5281)
!5415 = !DILocation(line: 1444, column: 9, scope: !5281)
!5416 = !DILocation(line: 1444, column: 11, scope: !5281)
!5417 = !DILocation(line: 1445, column: 16, scope: !5281)
!5418 = !DILocation(line: 1445, column: 2, scope: !5281)
!5419 = !DILocation(line: 1445, column: 9, scope: !5281)
!5420 = !DILocation(line: 1445, column: 14, scope: !5281)
!5421 = !DILocation(line: 1446, column: 18, scope: !5281)
!5422 = !DILocation(line: 1446, column: 61, scope: !5281)
!5423 = !DILocation(line: 1446, column: 68, scope: !5281)
!5424 = !DILocation(line: 1446, column: 59, scope: !5281)
!5425 = !DILocation(line: 1446, column: 72, scope: !5281)
!5426 = !DILocation(line: 1446, column: 79, scope: !5281)
!5427 = !DILocation(line: 1446, column: 70, scope: !5281)
!5428 = !DILocation(line: 1446, column: 2, scope: !5281)
!5429 = !DILocation(line: 1446, column: 9, scope: !5281)
!5430 = !DILocation(line: 1446, column: 16, scope: !5281)
!5431 = !DILocation(line: 1447, column: 11, scope: !5281)
!5432 = !DILocation(line: 1447, column: 18, scope: !5281)
!5433 = !DILocation(line: 1447, column: 9, scope: !5281)
!5434 = !DILocation(line: 1449, column: 6, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1449, column: 6)
!5436 = !DILocation(line: 1449, column: 10, scope: !5435)
!5437 = !DILocation(line: 1449, column: 6, scope: !5281)
!5438 = !DILocation(line: 1450, column: 8, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1449, column: 15)
!5440 = !DILocation(line: 1450, column: 12, scope: !5439)
!5441 = !DILocation(line: 1450, column: 6, scope: !5439)
!5442 = !DILocation(line: 1451, column: 2, scope: !5439)
!5443 = !DILocation(line: 1454, column: 6, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5435, file: !3, line: 1452, column: 7)
!5445 = !DILocation(line: 1454, column: 11, scope: !5444)
!5446 = !DILocation(line: 1455, column: 6, scope: !5444)
!5447 = !DILocation(line: 1455, column: 11, scope: !5444)
!5448 = !DILocation(line: 1457, column: 8, scope: !5444)
!5449 = !DILocation(line: 1457, column: 12, scope: !5444)
!5450 = !DILocation(line: 1457, column: 6, scope: !5444)
!5451 = !DILocation(line: 1458, column: 8, scope: !5444)
!5452 = !DILocation(line: 1458, column: 12, scope: !5444)
!5453 = !DILocation(line: 1458, column: 6, scope: !5444)
!5454 = !DILocation(line: 1459, column: 8, scope: !5444)
!5455 = !DILocation(line: 1459, column: 12, scope: !5444)
!5456 = !DILocation(line: 1459, column: 6, scope: !5444)
!5457 = !DILocation(line: 1463, column: 11, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 1463, column: 2)
!5459 = !DILocation(line: 1463, column: 15, scope: !5458)
!5460 = !DILocation(line: 1463, column: 24, scope: !5458)
!5461 = !DILocation(line: 1463, column: 9, scope: !5458)
!5462 = !DILocation(line: 1463, column: 7, scope: !5458)
!5463 = !DILocation(line: 1463, column: 30, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1463, column: 2)
!5465 = !DILocation(line: 1463, column: 34, scope: !5464)
!5466 = !DILocation(line: 1463, column: 38, scope: !5464)
!5467 = !DILocation(line: 1463, column: 47, scope: !5464)
!5468 = !DILocation(line: 1463, column: 32, scope: !5464)
!5469 = !DILocation(line: 1463, column: 2, scope: !5458)
!5470 = !DILocation(line: 1464, column: 12, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 1464, column: 3)
!5472 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1463, column: 58)
!5473 = !DILocation(line: 1464, column: 16, scope: !5471)
!5474 = !DILocation(line: 1464, column: 25, scope: !5471)
!5475 = !DILocation(line: 1464, column: 10, scope: !5471)
!5476 = !DILocation(line: 1464, column: 8, scope: !5471)
!5477 = !DILocation(line: 1464, column: 31, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5471, file: !3, line: 1464, column: 3)
!5479 = !DILocation(line: 1464, column: 35, scope: !5478)
!5480 = !DILocation(line: 1464, column: 39, scope: !5478)
!5481 = !DILocation(line: 1464, column: 48, scope: !5478)
!5482 = !DILocation(line: 1464, column: 33, scope: !5478)
!5483 = !DILocation(line: 1464, column: 3, scope: !5471)
!5484 = !DILocation(line: 1465, column: 12, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1465, column: 8)
!5486 = distinct !DILexicalBlock(scope: !5478, file: !3, line: 1464, column: 93)
!5487 = !DILocation(line: 1465, column: 16, scope: !5485)
!5488 = !DILocation(line: 1465, column: 20, scope: !5485)
!5489 = !DILocation(line: 1465, column: 29, scope: !5485)
!5490 = !DILocation(line: 1465, column: 14, scope: !5485)
!5491 = !DILocation(line: 1465, column: 36, scope: !5485)
!5492 = !DILocation(line: 1465, column: 34, scope: !5485)
!5493 = !DILocation(line: 1465, column: 44, scope: !5485)
!5494 = !DILocation(line: 1465, column: 42, scope: !5485)
!5495 = !DILocation(line: 1465, column: 50, scope: !5485)
!5496 = !DILocation(line: 1465, column: 55, scope: !5485)
!5497 = !DILocation(line: 1465, column: 58, scope: !5485)
!5498 = !DILocation(line: 1465, column: 63, scope: !5485)
!5499 = !DILocation(line: 1465, column: 67, scope: !5485)
!5500 = !DILocation(line: 1465, column: 76, scope: !5485)
!5501 = !DILocation(line: 1465, column: 81, scope: !5485)
!5502 = !DILocation(line: 1465, column: 60, scope: !5485)
!5503 = !DILocation(line: 1465, column: 8, scope: !5486)
!5504 = !DILocation(line: 1466, column: 5, scope: !5485)
!5505 = !DILocation(line: 1467, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1467, column: 8)
!5507 = !DILocation(line: 1467, column: 16, scope: !5506)
!5508 = !DILocation(line: 1467, column: 20, scope: !5506)
!5509 = !DILocation(line: 1467, column: 29, scope: !5506)
!5510 = !DILocation(line: 1467, column: 14, scope: !5506)
!5511 = !DILocation(line: 1467, column: 36, scope: !5506)
!5512 = !DILocation(line: 1467, column: 34, scope: !5506)
!5513 = !DILocation(line: 1467, column: 44, scope: !5506)
!5514 = !DILocation(line: 1467, column: 42, scope: !5506)
!5515 = !DILocation(line: 1467, column: 50, scope: !5506)
!5516 = !DILocation(line: 1467, column: 55, scope: !5506)
!5517 = !DILocation(line: 1467, column: 58, scope: !5506)
!5518 = !DILocation(line: 1467, column: 63, scope: !5506)
!5519 = !DILocation(line: 1467, column: 67, scope: !5506)
!5520 = !DILocation(line: 1467, column: 76, scope: !5506)
!5521 = !DILocation(line: 1467, column: 81, scope: !5506)
!5522 = !DILocation(line: 1467, column: 60, scope: !5506)
!5523 = !DILocation(line: 1467, column: 8, scope: !5486)
!5524 = !DILocation(line: 1468, column: 5, scope: !5506)
!5525 = !DILocation(line: 1470, column: 8, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1470, column: 8)
!5527 = !DILocation(line: 1470, column: 12, scope: !5526)
!5528 = !DILocation(line: 1470, column: 8, scope: !5486)
!5529 = !DILocation(line: 1471, column: 11, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 1471, column: 9)
!5531 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1470, column: 17)
!5532 = !DILocation(line: 1471, column: 10, scope: !5530)
!5533 = !DILocation(line: 1471, column: 9, scope: !5531)
!5534 = !DILocation(line: 1471, column: 15, scope: !5530)
!5535 = !DILocation(line: 1473, column: 32, scope: !5531)
!5536 = !DILocation(line: 1473, column: 51, scope: !5531)
!5537 = !DILocation(line: 1473, column: 50, scope: !5531)
!5538 = !DILocation(line: 1473, column: 39, scope: !5531)
!5539 = !DILocation(line: 1473, column: 56, scope: !5531)
!5540 = !DILocation(line: 1473, column: 59, scope: !5531)
!5541 = !DILocation(line: 1473, column: 5, scope: !5531)
!5542 = !DILocation(line: 1474, column: 4, scope: !5531)
!5543 = !DILocation(line: 1476, column: 11, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !3, line: 1476, column: 9)
!5545 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1475, column: 9)
!5546 = !DILocation(line: 1476, column: 10, scope: !5544)
!5547 = !DILocation(line: 1476, column: 9, scope: !5545)
!5548 = !DILocation(line: 1476, column: 15, scope: !5544)
!5549 = !DILocation(line: 1478, column: 15, scope: !5545)
!5550 = !DILocation(line: 1478, column: 14, scope: !5545)
!5551 = !DILocation(line: 1478, column: 8, scope: !5545)
!5552 = !DILocation(line: 1478, column: 12, scope: !5545)
!5553 = !DILocation(line: 1479, column: 18, scope: !5545)
!5554 = !DILocation(line: 1479, column: 17, scope: !5545)
!5555 = !DILocation(line: 1479, column: 8, scope: !5545)
!5556 = !DILocation(line: 1479, column: 15, scope: !5545)
!5557 = !DILocation(line: 1480, column: 13, scope: !5545)
!5558 = !DILocation(line: 1480, column: 12, scope: !5545)
!5559 = !DILocation(line: 1480, column: 8, scope: !5545)
!5560 = !DILocation(line: 1480, column: 10, scope: !5545)
!5561 = !DILocation(line: 1481, column: 32, scope: !5545)
!5562 = !DILocation(line: 1481, column: 44, scope: !5545)
!5563 = !DILocation(line: 1481, column: 47, scope: !5545)
!5564 = !DILocation(line: 1481, column: 5, scope: !5545)
!5565 = !DILocation(line: 1484, column: 10, scope: !5486)
!5566 = !DILocation(line: 1484, column: 17, scope: !5486)
!5567 = !DILocation(line: 1484, column: 8, scope: !5486)
!5568 = !DILocation(line: 1485, column: 8, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1485, column: 8)
!5570 = !DILocation(line: 1485, column: 13, scope: !5569)
!5571 = !DILocation(line: 1485, column: 8, scope: !5486)
!5572 = !DILocation(line: 1486, column: 19, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1485, column: 18)
!5574 = !DILocation(line: 1486, column: 24, scope: !5573)
!5575 = !DILocation(line: 1486, column: 29, scope: !5573)
!5576 = !DILocation(line: 1486, column: 34, scope: !5573)
!5577 = !DILocation(line: 1486, column: 16, scope: !5573)
!5578 = !DILocation(line: 1487, column: 19, scope: !5573)
!5579 = !DILocation(line: 1487, column: 24, scope: !5573)
!5580 = !DILocation(line: 1487, column: 30, scope: !5573)
!5581 = !DILocation(line: 1487, column: 34, scope: !5573)
!5582 = !DILocation(line: 1487, column: 28, scope: !5573)
!5583 = !DILocation(line: 1487, column: 13, scope: !5573)
!5584 = !DILocation(line: 1487, column: 17, scope: !5573)
!5585 = !DILocation(line: 1488, column: 22, scope: !5573)
!5586 = !DILocation(line: 1488, column: 27, scope: !5573)
!5587 = !DILocation(line: 1488, column: 32, scope: !5573)
!5588 = !DILocation(line: 1488, column: 13, scope: !5573)
!5589 = !DILocation(line: 1488, column: 20, scope: !5573)
!5590 = !DILocation(line: 1489, column: 21, scope: !5573)
!5591 = !DILocation(line: 1489, column: 25, scope: !5573)
!5592 = !DILocation(line: 1489, column: 41, scope: !5573)
!5593 = !DILocation(line: 1489, column: 46, scope: !5573)
!5594 = !DILocation(line: 1489, column: 50, scope: !5573)
!5595 = !DILocation(line: 1489, column: 55, scope: !5573)
!5596 = !DILocation(line: 1489, column: 60, scope: !5573)
!5597 = !DILocation(line: 1489, column: 65, scope: !5573)
!5598 = !DILocation(line: 1489, column: 73, scope: !5573)
!5599 = !DILocation(line: 1489, column: 85, scope: !5573)
!5600 = !DILocation(line: 1489, column: 90, scope: !5573)
!5601 = !DILocation(line: 1489, column: 94, scope: !5573)
!5602 = !DILocation(line: 1489, column: 99, scope: !5573)
!5603 = !DILocation(line: 1489, column: 104, scope: !5573)
!5604 = !DILocation(line: 1489, column: 109, scope: !5573)
!5605 = !DILocation(line: 1489, column: 5, scope: !5573)
!5606 = !DILocation(line: 1491, column: 16, scope: !5573)
!5607 = !DILocation(line: 1491, column: 24, scope: !5573)
!5608 = !DILocation(line: 1491, column: 28, scope: !5573)
!5609 = !DILocation(line: 1491, column: 33, scope: !5573)
!5610 = !DILocation(line: 1491, column: 5, scope: !5573)
!5611 = !DILocation(line: 1492, column: 16, scope: !5573)
!5612 = !DILocation(line: 1492, column: 24, scope: !5573)
!5613 = !DILocation(line: 1492, column: 27, scope: !5573)
!5614 = !DILocation(line: 1492, column: 32, scope: !5573)
!5615 = !DILocation(line: 1492, column: 5, scope: !5573)
!5616 = !DILocation(line: 1493, column: 16, scope: !5573)
!5617 = !DILocation(line: 1493, column: 24, scope: !5573)
!5618 = !DILocation(line: 1493, column: 28, scope: !5573)
!5619 = !DILocation(line: 1493, column: 33, scope: !5573)
!5620 = !DILocation(line: 1493, column: 5, scope: !5573)
!5621 = !DILocation(line: 1494, column: 16, scope: !5573)
!5622 = !DILocation(line: 1494, column: 24, scope: !5573)
!5623 = !DILocation(line: 1494, column: 29, scope: !5573)
!5624 = !DILocation(line: 1494, column: 34, scope: !5573)
!5625 = !DILocation(line: 1494, column: 5, scope: !5573)
!5626 = !DILocation(line: 1495, column: 16, scope: !5573)
!5627 = !DILocation(line: 1495, column: 24, scope: !5573)
!5628 = !DILocation(line: 1495, column: 34, scope: !5573)
!5629 = !DILocation(line: 1495, column: 39, scope: !5573)
!5630 = !DILocation(line: 1495, column: 5, scope: !5573)
!5631 = !DILocation(line: 1496, column: 33, scope: !5573)
!5632 = !DILocation(line: 1496, column: 41, scope: !5573)
!5633 = !DILocation(line: 1496, column: 48, scope: !5573)
!5634 = !DILocation(line: 1496, column: 56, scope: !5573)
!5635 = !DILocation(line: 1496, column: 63, scope: !5573)
!5636 = !DILocation(line: 1496, column: 71, scope: !5573)
!5637 = !DILocation(line: 1496, column: 25, scope: !5573)
!5638 = !DILocation(line: 1496, column: 5, scope: !5573)
!5639 = !DILocation(line: 1496, column: 13, scope: !5573)
!5640 = !DILocation(line: 1496, column: 23, scope: !5573)
!5641 = !DILocation(line: 1497, column: 32, scope: !5573)
!5642 = !DILocation(line: 1497, column: 40, scope: !5573)
!5643 = !DILocation(line: 1497, column: 59, scope: !5573)
!5644 = !DILocation(line: 1497, column: 67, scope: !5573)
!5645 = !DILocation(line: 1497, column: 75, scope: !5573)
!5646 = !DILocation(line: 1497, column: 83, scope: !5573)
!5647 = !DILocation(line: 1497, column: 91, scope: !5573)
!5648 = !DILocation(line: 1497, column: 99, scope: !5573)
!5649 = !DILocation(line: 1497, column: 51, scope: !5573)
!5650 = !DILocation(line: 1497, column: 25, scope: !5573)
!5651 = !DILocation(line: 1497, column: 5, scope: !5573)
!5652 = !DILocation(line: 1497, column: 13, scope: !5573)
!5653 = !DILocation(line: 1497, column: 23, scope: !5573)
!5654 = !DILocation(line: 1498, column: 32, scope: !5573)
!5655 = !DILocation(line: 1498, column: 40, scope: !5573)
!5656 = !DILocation(line: 1498, column: 59, scope: !5573)
!5657 = !DILocation(line: 1498, column: 67, scope: !5573)
!5658 = !DILocation(line: 1498, column: 80, scope: !5573)
!5659 = !DILocation(line: 1498, column: 88, scope: !5573)
!5660 = !DILocation(line: 1498, column: 101, scope: !5573)
!5661 = !DILocation(line: 1498, column: 109, scope: !5573)
!5662 = !DILocation(line: 1498, column: 51, scope: !5573)
!5663 = !DILocation(line: 1498, column: 25, scope: !5573)
!5664 = !DILocation(line: 1498, column: 5, scope: !5573)
!5665 = !DILocation(line: 1498, column: 13, scope: !5573)
!5666 = !DILocation(line: 1498, column: 23, scope: !5573)
!5667 = !DILocation(line: 1499, column: 30, scope: !5573)
!5668 = !DILocation(line: 1499, column: 35, scope: !5573)
!5669 = !DILocation(line: 1499, column: 41, scope: !5573)
!5670 = !DILocation(line: 1499, column: 46, scope: !5573)
!5671 = !DILocation(line: 1499, column: 21, scope: !5573)
!5672 = !DILocation(line: 1499, column: 63, scope: !5573)
!5673 = !DILocation(line: 1499, column: 68, scope: !5573)
!5674 = !DILocation(line: 1499, column: 74, scope: !5573)
!5675 = !DILocation(line: 1499, column: 79, scope: !5573)
!5676 = !DILocation(line: 1499, column: 54, scope: !5573)
!5677 = !DILocation(line: 1499, column: 52, scope: !5573)
!5678 = !DILocation(line: 1499, column: 5, scope: !5573)
!5679 = !DILocation(line: 1499, column: 13, scope: !5573)
!5680 = !DILocation(line: 1499, column: 19, scope: !5573)
!5681 = !DILocation(line: 1500, column: 17, scope: !5573)
!5682 = !DILocation(line: 1500, column: 22, scope: !5573)
!5683 = !DILocation(line: 1500, column: 5, scope: !5573)
!5684 = !DILocation(line: 1500, column: 13, scope: !5573)
!5685 = !DILocation(line: 1500, column: 15, scope: !5573)
!5686 = !DILocation(line: 1501, column: 17, scope: !5573)
!5687 = !DILocation(line: 1501, column: 22, scope: !5573)
!5688 = !DILocation(line: 1501, column: 5, scope: !5573)
!5689 = !DILocation(line: 1501, column: 13, scope: !5573)
!5690 = !DILocation(line: 1501, column: 15, scope: !5573)
!5691 = !DILocation(line: 1502, column: 5, scope: !5573)
!5692 = !DILocation(line: 1502, column: 13, scope: !5573)
!5693 = !DILocation(line: 1502, column: 20, scope: !5573)
!5694 = !DILocation(line: 1503, column: 4, scope: !5573)
!5695 = !DILocation(line: 1505, column: 8, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1505, column: 8)
!5697 = !DILocation(line: 1505, column: 12, scope: !5696)
!5698 = !DILocation(line: 1505, column: 23, scope: !5696)
!5699 = !DILocation(line: 1505, column: 27, scope: !5696)
!5700 = !DILocation(line: 1505, column: 8, scope: !5486)
!5701 = !DILocation(line: 1506, column: 5, scope: !5696)
!5702 = !DILocation(line: 1507, column: 3, scope: !5486)
!5703 = !DILocation(line: 1464, column: 55, scope: !5478)
!5704 = !DILocation(line: 1464, column: 65, scope: !5478)
!5705 = !DILocation(line: 1464, column: 71, scope: !5478)
!5706 = !DILocation(line: 1464, column: 77, scope: !5478)
!5707 = !DILocation(line: 1464, column: 83, scope: !5478)
!5708 = !DILocation(line: 1464, column: 89, scope: !5478)
!5709 = !DILocation(line: 1464, column: 3, scope: !5478)
!5710 = distinct !{!5710, !5483, !5711}
!5711 = !DILocation(line: 1507, column: 3, scope: !5471)
!5712 = !DILocation(line: 1508, column: 2, scope: !5472)
!5713 = !DILocation(line: 1463, column: 54, scope: !5464)
!5714 = !DILocation(line: 1463, column: 2, scope: !5464)
!5715 = distinct !{!5715, !5469, !5716}
!5716 = !DILocation(line: 1508, column: 2, scope: !5458)
!5717 = !DILocation(line: 1509, column: 1, scope: !5281)
!5718 = distinct !DISubprogram(name: "free_occ_samples", scope: !3, file: !3, line: 1511, type: !5719, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5719 = !DISubroutineType(types: !5720)
!5720 = !{null, !178, !5284}
!5721 = !DILocalVariable(name: "re", arg: 1, scope: !5718, file: !3, line: 1511, type: !178)
!5722 = !DILocation(line: 1511, column: 31, scope: !5718)
!5723 = !DILocalVariable(name: "pa", arg: 2, scope: !5718, file: !3, line: 1511, type: !5284)
!5724 = !DILocation(line: 1511, column: 47, scope: !5718)
!5725 = !DILocalVariable(name: "tree", scope: !5718, file: !3, line: 1513, type: !85)
!5726 = !DILocation(line: 1513, column: 17, scope: !5718)
!5727 = !DILocation(line: 1513, column: 24, scope: !5718)
!5728 = !DILocation(line: 1513, column: 28, scope: !5718)
!5729 = !DILocalVariable(name: "cache", scope: !5718, file: !3, line: 1514, type: !145)
!5730 = !DILocation(line: 1514, column: 18, scope: !5718)
!5731 = !DILocation(line: 1516, column: 6, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5718, file: !3, line: 1516, column: 6)
!5733 = !DILocation(line: 1516, column: 12, scope: !5732)
!5734 = !DILocation(line: 1516, column: 6, scope: !5718)
!5735 = !DILocation(line: 1517, column: 12, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1516, column: 19)
!5737 = !DILocation(line: 1517, column: 18, scope: !5736)
!5738 = !DILocation(line: 1517, column: 24, scope: !5736)
!5739 = !DILocation(line: 1517, column: 28, scope: !5736)
!5740 = !DILocation(line: 1517, column: 9, scope: !5736)
!5741 = !DILocation(line: 1519, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 1519, column: 7)
!5743 = !DILocation(line: 1519, column: 14, scope: !5742)
!5744 = !DILocation(line: 1519, column: 7, scope: !5736)
!5745 = !DILocation(line: 1520, column: 4, scope: !5742)
!5746 = !DILocation(line: 1520, column: 14, scope: !5742)
!5747 = !DILocation(line: 1520, column: 21, scope: !5742)
!5748 = !DILocation(line: 1522, column: 3, scope: !5736)
!5749 = !DILocation(line: 1522, column: 10, scope: !5736)
!5750 = !DILocation(line: 1522, column: 12, scope: !5736)
!5751 = !DILocation(line: 1523, column: 3, scope: !5736)
!5752 = !DILocation(line: 1523, column: 10, scope: !5736)
!5753 = !DILocation(line: 1523, column: 12, scope: !5736)
!5754 = !DILocation(line: 1524, column: 3, scope: !5736)
!5755 = !DILocation(line: 1524, column: 10, scope: !5736)
!5756 = !DILocation(line: 1524, column: 15, scope: !5736)
!5757 = !DILocation(line: 1525, column: 2, scope: !5736)
!5758 = !DILocation(line: 1526, column: 1, scope: !5718)
!5759 = distinct !DISubprogram(name: "occ_face", scope: !3, file: !3, line: 319, type: !5760, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5760 = !DISubroutineType(types: !5761)
!5761 = !{null, !5762, !7, !7, !7}
!5762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5763, size: 64)
!5763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !101)
!5764 = !DILocalVariable(name: "face", arg: 1, scope: !5759, file: !3, line: 319, type: !5762)
!5765 = !DILocation(line: 319, column: 37, scope: !5759)
!5766 = !DILocalVariable(name: "co", arg: 2, scope: !5759, file: !3, line: 319, type: !7)
!5767 = !DILocation(line: 319, column: 49, scope: !5759)
!5768 = !DILocalVariable(name: "normal", arg: 3, scope: !5759, file: !3, line: 319, type: !7)
!5769 = !DILocation(line: 319, column: 62, scope: !5759)
!5770 = !DILocalVariable(name: "area", arg: 4, scope: !5759, file: !3, line: 319, type: !7)
!5771 = !DILocation(line: 319, column: 80, scope: !5759)
!5772 = !DILocalVariable(name: "obi", scope: !5759, file: !3, line: 321, type: !3212)
!5773 = !DILocation(line: 321, column: 21, scope: !5759)
!5774 = !DILocalVariable(name: "vlr", scope: !5759, file: !3, line: 322, type: !3222)
!5775 = !DILocation(line: 322, column: 11, scope: !5759)
!5776 = !DILocalVariable(name: "v1", scope: !5759, file: !3, line: 323, type: !96)
!5777 = !DILocation(line: 323, column: 8, scope: !5759)
!5778 = !DILocalVariable(name: "v2", scope: !5759, file: !3, line: 323, type: !96)
!5779 = !DILocation(line: 323, column: 15, scope: !5759)
!5780 = !DILocalVariable(name: "v3", scope: !5759, file: !3, line: 323, type: !96)
!5781 = !DILocation(line: 323, column: 22, scope: !5759)
!5782 = !DILocalVariable(name: "v4", scope: !5759, file: !3, line: 323, type: !96)
!5783 = !DILocation(line: 323, column: 29, scope: !5759)
!5784 = !DILocation(line: 325, column: 11, scope: !5759)
!5785 = !DILocation(line: 325, column: 26, scope: !5759)
!5786 = !DILocation(line: 325, column: 32, scope: !5759)
!5787 = !DILocation(line: 325, column: 9, scope: !5759)
!5788 = !DILocation(line: 325, column: 6, scope: !5759)
!5789 = !DILocation(line: 326, column: 25, scope: !5759)
!5790 = !DILocation(line: 326, column: 30, scope: !5759)
!5791 = !DILocation(line: 326, column: 35, scope: !5759)
!5792 = !DILocation(line: 326, column: 41, scope: !5759)
!5793 = !DILocation(line: 326, column: 8, scope: !5759)
!5794 = !DILocation(line: 326, column: 6, scope: !5759)
!5795 = !DILocation(line: 328, column: 6, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 328, column: 6)
!5797 = !DILocation(line: 328, column: 6, scope: !5759)
!5798 = !DILocation(line: 329, column: 7, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 329, column: 7)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 328, column: 10)
!5801 = !DILocation(line: 329, column: 12, scope: !5799)
!5802 = !DILocation(line: 329, column: 7, scope: !5800)
!5803 = !DILocation(line: 330, column: 16, scope: !5799)
!5804 = !DILocation(line: 330, column: 20, scope: !5799)
!5805 = !DILocation(line: 330, column: 25, scope: !5799)
!5806 = !DILocation(line: 330, column: 29, scope: !5799)
!5807 = !DILocation(line: 330, column: 33, scope: !5799)
!5808 = !DILocation(line: 330, column: 38, scope: !5799)
!5809 = !DILocation(line: 330, column: 42, scope: !5799)
!5810 = !DILocation(line: 330, column: 4, scope: !5799)
!5811 = !DILocation(line: 332, column: 16, scope: !5799)
!5812 = !DILocation(line: 332, column: 20, scope: !5799)
!5813 = !DILocation(line: 332, column: 25, scope: !5799)
!5814 = !DILocation(line: 332, column: 29, scope: !5799)
!5815 = !DILocation(line: 332, column: 33, scope: !5799)
!5816 = !DILocation(line: 332, column: 38, scope: !5799)
!5817 = !DILocation(line: 332, column: 42, scope: !5799)
!5818 = !DILocation(line: 332, column: 46, scope: !5799)
!5819 = !DILocation(line: 332, column: 51, scope: !5799)
!5820 = !DILocation(line: 332, column: 55, scope: !5799)
!5821 = !DILocation(line: 332, column: 4, scope: !5799)
!5822 = !DILocation(line: 334, column: 7, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 334, column: 7)
!5824 = !DILocation(line: 334, column: 12, scope: !5823)
!5825 = !DILocation(line: 334, column: 17, scope: !5823)
!5826 = !DILocation(line: 334, column: 7, scope: !5800)
!5827 = !DILocation(line: 335, column: 14, scope: !5823)
!5828 = !DILocation(line: 335, column: 19, scope: !5823)
!5829 = !DILocation(line: 335, column: 24, scope: !5823)
!5830 = !DILocation(line: 335, column: 4, scope: !5823)
!5831 = !DILocation(line: 336, column: 2, scope: !5800)
!5832 = !DILocation(line: 338, column: 6, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 338, column: 6)
!5834 = !DILocation(line: 338, column: 6, scope: !5759)
!5835 = !DILocation(line: 339, column: 16, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 338, column: 14)
!5837 = !DILocation(line: 339, column: 21, scope: !5836)
!5838 = !DILocation(line: 339, column: 15, scope: !5836)
!5839 = !DILocation(line: 339, column: 3, scope: !5836)
!5840 = !DILocation(line: 339, column: 13, scope: !5836)
!5841 = !DILocation(line: 340, column: 16, scope: !5836)
!5842 = !DILocation(line: 340, column: 21, scope: !5836)
!5843 = !DILocation(line: 340, column: 15, scope: !5836)
!5844 = !DILocation(line: 340, column: 3, scope: !5836)
!5845 = !DILocation(line: 340, column: 13, scope: !5836)
!5846 = !DILocation(line: 341, column: 16, scope: !5836)
!5847 = !DILocation(line: 341, column: 21, scope: !5836)
!5848 = !DILocation(line: 341, column: 15, scope: !5836)
!5849 = !DILocation(line: 341, column: 3, scope: !5836)
!5850 = !DILocation(line: 341, column: 13, scope: !5836)
!5851 = !DILocation(line: 343, column: 7, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 343, column: 7)
!5853 = !DILocation(line: 343, column: 12, scope: !5852)
!5854 = !DILocation(line: 343, column: 17, scope: !5852)
!5855 = !DILocation(line: 343, column: 7, scope: !5836)
!5856 = !DILocation(line: 344, column: 14, scope: !5852)
!5857 = !DILocation(line: 344, column: 19, scope: !5852)
!5858 = !DILocation(line: 344, column: 25, scope: !5852)
!5859 = !DILocation(line: 344, column: 4, scope: !5852)
!5860 = !DILocation(line: 345, column: 2, scope: !5836)
!5861 = !DILocation(line: 347, column: 6, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 347, column: 6)
!5863 = !DILocation(line: 347, column: 6, scope: !5759)
!5864 = !DILocation(line: 348, column: 14, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 347, column: 12)
!5866 = !DILocation(line: 348, column: 18, scope: !5865)
!5867 = !DILocation(line: 348, column: 23, scope: !5865)
!5868 = !DILocation(line: 348, column: 27, scope: !5865)
!5869 = !DILocation(line: 348, column: 3, scope: !5865)
!5870 = !DILocation(line: 349, column: 14, scope: !5865)
!5871 = !DILocation(line: 349, column: 18, scope: !5865)
!5872 = !DILocation(line: 349, column: 23, scope: !5865)
!5873 = !DILocation(line: 349, column: 27, scope: !5865)
!5874 = !DILocation(line: 349, column: 3, scope: !5865)
!5875 = !DILocation(line: 350, column: 14, scope: !5865)
!5876 = !DILocation(line: 350, column: 18, scope: !5865)
!5877 = !DILocation(line: 350, column: 23, scope: !5865)
!5878 = !DILocation(line: 350, column: 27, scope: !5865)
!5879 = !DILocation(line: 350, column: 3, scope: !5865)
!5880 = !DILocation(line: 351, column: 7, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 351, column: 7)
!5882 = !DILocation(line: 351, column: 12, scope: !5881)
!5883 = !DILocation(line: 351, column: 7, scope: !5865)
!5884 = !DILocation(line: 351, column: 27, scope: !5881)
!5885 = !DILocation(line: 351, column: 31, scope: !5881)
!5886 = !DILocation(line: 351, column: 36, scope: !5881)
!5887 = !DILocation(line: 351, column: 40, scope: !5881)
!5888 = !DILocation(line: 351, column: 16, scope: !5881)
!5889 = !DILocation(line: 353, column: 7, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 353, column: 7)
!5891 = !DILocation(line: 353, column: 12, scope: !5890)
!5892 = !DILocation(line: 353, column: 17, scope: !5890)
!5893 = !DILocation(line: 353, column: 7, scope: !5865)
!5894 = !DILocation(line: 354, column: 14, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 353, column: 34)
!5896 = !DILocation(line: 354, column: 19, scope: !5895)
!5897 = !DILocation(line: 354, column: 24, scope: !5895)
!5898 = !DILocation(line: 354, column: 4, scope: !5895)
!5899 = !DILocation(line: 355, column: 14, scope: !5895)
!5900 = !DILocation(line: 355, column: 19, scope: !5895)
!5901 = !DILocation(line: 355, column: 24, scope: !5895)
!5902 = !DILocation(line: 355, column: 4, scope: !5895)
!5903 = !DILocation(line: 356, column: 14, scope: !5895)
!5904 = !DILocation(line: 356, column: 19, scope: !5895)
!5905 = !DILocation(line: 356, column: 24, scope: !5895)
!5906 = !DILocation(line: 356, column: 4, scope: !5895)
!5907 = !DILocation(line: 357, column: 8, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 357, column: 8)
!5909 = !DILocation(line: 357, column: 13, scope: !5908)
!5910 = !DILocation(line: 357, column: 8, scope: !5895)
!5911 = !DILocation(line: 357, column: 27, scope: !5908)
!5912 = !DILocation(line: 357, column: 32, scope: !5908)
!5913 = !DILocation(line: 357, column: 37, scope: !5908)
!5914 = !DILocation(line: 357, column: 17, scope: !5908)
!5915 = !DILocation(line: 358, column: 3, scope: !5895)
!5916 = !DILocation(line: 361, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 361, column: 7)
!5918 = !DILocation(line: 361, column: 12, scope: !5917)
!5919 = !DILocation(line: 361, column: 7, scope: !5865)
!5920 = !DILocation(line: 362, column: 25, scope: !5917)
!5921 = !DILocation(line: 362, column: 29, scope: !5917)
!5922 = !DILocation(line: 362, column: 33, scope: !5917)
!5923 = !DILocation(line: 362, column: 37, scope: !5917)
!5924 = !DILocation(line: 362, column: 12, scope: !5917)
!5925 = !DILocation(line: 362, column: 5, scope: !5917)
!5926 = !DILocation(line: 362, column: 10, scope: !5917)
!5927 = !DILocation(line: 362, column: 4, scope: !5917)
!5928 = !DILocation(line: 364, column: 24, scope: !5917)
!5929 = !DILocation(line: 364, column: 28, scope: !5917)
!5930 = !DILocation(line: 364, column: 32, scope: !5917)
!5931 = !DILocation(line: 364, column: 12, scope: !5917)
!5932 = !DILocation(line: 364, column: 5, scope: !5917)
!5933 = !DILocation(line: 364, column: 10, scope: !5917)
!5934 = !DILocation(line: 365, column: 2, scope: !5865)
!5935 = !DILocation(line: 366, column: 1, scope: !5759)
!5936 = distinct !DISubprogram(name: "occ_build_recursive", scope: !3, file: !3, line: 534, type: !5937, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{null, !85, !109, !12, !12, !12}
!5939 = !DILocalVariable(name: "tree", arg: 1, scope: !5936, file: !3, line: 534, type: !85)
!5940 = !DILocation(line: 534, column: 48, scope: !5936)
!5941 = !DILocalVariable(name: "node", arg: 2, scope: !5936, file: !3, line: 534, type: !109)
!5942 = !DILocation(line: 534, column: 63, scope: !5936)
!5943 = !DILocalVariable(name: "begin", arg: 3, scope: !5936, file: !3, line: 534, type: !12)
!5944 = !DILocation(line: 534, column: 73, scope: !5936)
!5945 = !DILocalVariable(name: "end", arg: 4, scope: !5936, file: !3, line: 534, type: !12)
!5946 = !DILocation(line: 534, column: 84, scope: !5936)
!5947 = !DILocalVariable(name: "depth", arg: 5, scope: !5936, file: !3, line: 534, type: !12)
!5948 = !DILocation(line: 534, column: 93, scope: !5936)
!5949 = !DILocalVariable(name: "threads", scope: !5936, file: !3, line: 536, type: !227)
!5950 = !DILocation(line: 536, column: 11, scope: !5936)
!5951 = !DILocalVariable(name: "othreads", scope: !5936, file: !3, line: 537, type: !5952)
!5952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !81, size: 256, elements: !135)
!5953 = !DILocation(line: 537, column: 23, scope: !5936)
!5954 = !DILocalVariable(name: "child", scope: !5936, file: !3, line: 538, type: !109)
!5955 = !DILocation(line: 538, column: 11, scope: !5936)
!5956 = !DILocalVariable(name: "tmpnode", scope: !5936, file: !3, line: 538, type: !110)
!5957 = !DILocation(line: 538, column: 18, scope: !5936)
!5958 = !DILocalVariable(name: "a", scope: !5936, file: !3, line: 540, type: !12)
!5959 = !DILocation(line: 540, column: 6, scope: !5936)
!5960 = !DILocalVariable(name: "b", scope: !5936, file: !3, line: 540, type: !12)
!5961 = !DILocation(line: 540, column: 9, scope: !5936)
!5962 = !DILocalVariable(name: "totthread", scope: !5936, file: !3, line: 540, type: !12)
!5963 = !DILocation(line: 540, column: 12, scope: !5936)
!5964 = !DILocalVariable(name: "offset", scope: !5936, file: !3, line: 540, type: !5965)
!5965 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 256, elements: !130)
!5966 = !DILocation(line: 540, column: 27, scope: !5936)
!5967 = !DILocalVariable(name: "count", scope: !5936, file: !3, line: 540, type: !5965)
!5968 = !DILocation(line: 540, column: 45, scope: !5936)
!5969 = !DILocation(line: 543, column: 2, scope: !5936)
!5970 = !DILocation(line: 543, column: 8, scope: !5936)
!5971 = !DILocation(line: 543, column: 18, scope: !5936)
!5972 = !DILocation(line: 546, column: 6, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 546, column: 6)
!5974 = !DILocation(line: 546, column: 12, scope: !5973)
!5975 = !DILocation(line: 546, column: 10, scope: !5973)
!5976 = !DILocation(line: 546, column: 18, scope: !5973)
!5977 = !DILocation(line: 546, column: 6, scope: !5936)
!5978 = !DILocation(line: 547, column: 12, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 547, column: 3)
!5980 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 546, column: 31)
!5981 = !DILocation(line: 547, column: 10, scope: !5979)
!5982 = !DILocation(line: 547, column: 21, scope: !5979)
!5983 = !DILocation(line: 547, column: 8, scope: !5979)
!5984 = !DILocation(line: 547, column: 26, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 547, column: 3)
!5986 = !DILocation(line: 547, column: 30, scope: !5985)
!5987 = !DILocation(line: 547, column: 28, scope: !5985)
!5988 = !DILocation(line: 547, column: 3, scope: !5979)
!5989 = !DILocation(line: 549, column: 26, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 547, column: 45)
!5991 = !DILocation(line: 549, column: 4, scope: !5990)
!5992 = !DILocation(line: 549, column: 10, scope: !5990)
!5993 = !DILocation(line: 549, column: 16, scope: !5990)
!5994 = !DILocation(line: 549, column: 19, scope: !5990)
!5995 = !DILocation(line: 549, column: 24, scope: !5990)
!5996 = !DILocation(line: 550, column: 29, scope: !5990)
!5997 = !DILocation(line: 550, column: 26, scope: !5990)
!5998 = !DILocation(line: 550, column: 4, scope: !5990)
!5999 = !DILocation(line: 550, column: 10, scope: !5990)
!6000 = !DILocation(line: 550, column: 20, scope: !5990)
!6001 = !DILocation(line: 551, column: 3, scope: !5990)
!6002 = !DILocation(line: 547, column: 36, scope: !5985)
!6003 = !DILocation(line: 547, column: 41, scope: !5985)
!6004 = !DILocation(line: 547, column: 3, scope: !5985)
!6005 = distinct !{!6005, !5988, !6006}
!6006 = !DILocation(line: 551, column: 3, scope: !5979)
!6007 = !DILocation(line: 552, column: 2, scope: !5980)
!6008 = !DILocation(line: 555, column: 21, scope: !6009)
!6009 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 553, column: 7)
!6010 = !DILocation(line: 555, column: 27, scope: !6009)
!6011 = !DILocation(line: 555, column: 34, scope: !6009)
!6012 = !DILocation(line: 555, column: 39, scope: !6009)
!6013 = !DILocation(line: 555, column: 47, scope: !6009)
!6014 = !DILocation(line: 555, column: 3, scope: !6009)
!6015 = !DILocation(line: 557, column: 7, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 557, column: 7)
!6017 = !DILocation(line: 557, column: 13, scope: !6016)
!6018 = !DILocation(line: 557, column: 18, scope: !6016)
!6019 = !DILocation(line: 557, column: 21, scope: !6016)
!6020 = !DILocation(line: 557, column: 27, scope: !6016)
!6021 = !DILocation(line: 557, column: 7, scope: !6009)
!6022 = !DILocation(line: 558, column: 47, scope: !6016)
!6023 = !DILocation(line: 558, column: 53, scope: !6016)
!6024 = !DILocation(line: 558, column: 4, scope: !6016)
!6025 = !DILocation(line: 560, column: 10, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 560, column: 3)
!6027 = !DILocation(line: 560, column: 8, scope: !6026)
!6028 = !DILocation(line: 560, column: 15, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 560, column: 3)
!6030 = !DILocation(line: 560, column: 17, scope: !6029)
!6031 = !DILocation(line: 560, column: 3, scope: !6026)
!6032 = !DILocation(line: 561, column: 14, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 561, column: 8)
!6034 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 560, column: 34)
!6035 = !DILocation(line: 561, column: 8, scope: !6033)
!6036 = !DILocation(line: 561, column: 17, scope: !6033)
!6037 = !DILocation(line: 561, column: 8, scope: !6034)
!6038 = !DILocation(line: 562, column: 5, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 561, column: 23)
!6040 = !DILocation(line: 562, column: 11, scope: !6039)
!6041 = !DILocation(line: 562, column: 17, scope: !6039)
!6042 = !DILocation(line: 562, column: 20, scope: !6039)
!6043 = !DILocation(line: 562, column: 25, scope: !6039)
!6044 = !DILocation(line: 563, column: 4, scope: !6039)
!6045 = !DILocation(line: 564, column: 19, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 564, column: 13)
!6047 = !DILocation(line: 564, column: 13, scope: !6046)
!6048 = !DILocation(line: 564, column: 22, scope: !6046)
!6049 = !DILocation(line: 564, column: 13, scope: !6033)
!6050 = !DILocation(line: 566, column: 34, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 564, column: 28)
!6052 = !DILocation(line: 566, column: 27, scope: !6051)
!6053 = !DILocation(line: 566, column: 5, scope: !6051)
!6054 = !DILocation(line: 566, column: 11, scope: !6051)
!6055 = !DILocation(line: 566, column: 17, scope: !6051)
!6056 = !DILocation(line: 566, column: 20, scope: !6051)
!6057 = !DILocation(line: 566, column: 25, scope: !6051)
!6058 = !DILocation(line: 567, column: 30, scope: !6051)
!6059 = !DILocation(line: 567, column: 27, scope: !6051)
!6060 = !DILocation(line: 567, column: 5, scope: !6051)
!6061 = !DILocation(line: 567, column: 11, scope: !6051)
!6062 = !DILocation(line: 567, column: 21, scope: !6051)
!6063 = !DILocation(line: 568, column: 4, scope: !6051)
!6064 = !DILocation(line: 570, column: 9, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 570, column: 9)
!6066 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 569, column: 9)
!6067 = !DILocation(line: 570, column: 15, scope: !6065)
!6068 = !DILocation(line: 570, column: 9, scope: !6066)
!6069 = !DILocation(line: 571, column: 6, scope: !6065)
!6070 = !DILocation(line: 573, column: 32, scope: !6066)
!6071 = !DILocation(line: 573, column: 38, scope: !6066)
!6072 = !DILocation(line: 573, column: 13, scope: !6066)
!6073 = !DILocation(line: 573, column: 11, scope: !6066)
!6074 = !DILocation(line: 574, column: 27, scope: !6066)
!6075 = !DILocation(line: 574, column: 5, scope: !6066)
!6076 = !DILocation(line: 574, column: 11, scope: !6066)
!6077 = !DILocation(line: 574, column: 17, scope: !6066)
!6078 = !DILocation(line: 574, column: 20, scope: !6066)
!6079 = !DILocation(line: 574, column: 25, scope: !6066)
!6080 = !DILocation(line: 577, column: 9, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 577, column: 9)
!6082 = !DILocation(line: 577, column: 18, scope: !6081)
!6083 = !DILocation(line: 577, column: 24, scope: !6081)
!6084 = !DILocation(line: 577, column: 15, scope: !6081)
!6085 = !DILocation(line: 577, column: 9, scope: !6066)
!6086 = !DILocation(line: 578, column: 23, scope: !6081)
!6087 = !DILocation(line: 578, column: 29, scope: !6081)
!6088 = !DILocation(line: 578, column: 6, scope: !6081)
!6089 = !DILocation(line: 578, column: 12, scope: !6081)
!6090 = !DILocation(line: 578, column: 21, scope: !6081)
!6091 = !DILocation(line: 580, column: 9, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 580, column: 9)
!6093 = !DILocation(line: 580, column: 15, scope: !6092)
!6094 = !DILocation(line: 580, column: 9, scope: !6066)
!6095 = !DILocation(line: 581, column: 6, scope: !6092)
!6096 = !DILocation(line: 583, column: 9, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 583, column: 9)
!6098 = !DILocation(line: 583, column: 15, scope: !6097)
!6099 = !DILocation(line: 583, column: 20, scope: !6097)
!6100 = !DILocation(line: 583, column: 23, scope: !6097)
!6101 = !DILocation(line: 583, column: 29, scope: !6097)
!6102 = !DILocation(line: 583, column: 9, scope: !6066)
!6103 = !DILocation(line: 584, column: 33, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 583, column: 46)
!6105 = !DILocation(line: 584, column: 15, scope: !6104)
!6106 = !DILocation(line: 584, column: 6, scope: !6104)
!6107 = !DILocation(line: 584, column: 26, scope: !6104)
!6108 = !DILocation(line: 584, column: 31, scope: !6104)
!6109 = !DILocation(line: 585, column: 33, scope: !6104)
!6110 = !DILocation(line: 585, column: 15, scope: !6104)
!6111 = !DILocation(line: 585, column: 6, scope: !6104)
!6112 = !DILocation(line: 585, column: 26, scope: !6104)
!6113 = !DILocation(line: 585, column: 31, scope: !6104)
!6114 = !DILocation(line: 586, column: 41, scope: !6104)
!6115 = !DILocation(line: 586, column: 34, scope: !6104)
!6116 = !DILocation(line: 586, column: 15, scope: !6104)
!6117 = !DILocation(line: 586, column: 6, scope: !6104)
!6118 = !DILocation(line: 586, column: 26, scope: !6104)
!6119 = !DILocation(line: 586, column: 32, scope: !6104)
!6120 = !DILocation(line: 587, column: 39, scope: !6104)
!6121 = !DILocation(line: 587, column: 32, scope: !6104)
!6122 = !DILocation(line: 587, column: 50, scope: !6104)
!6123 = !DILocation(line: 587, column: 44, scope: !6104)
!6124 = !DILocation(line: 587, column: 42, scope: !6104)
!6125 = !DILocation(line: 587, column: 15, scope: !6104)
!6126 = !DILocation(line: 587, column: 6, scope: !6104)
!6127 = !DILocation(line: 587, column: 26, scope: !6104)
!6128 = !DILocation(line: 587, column: 30, scope: !6104)
!6129 = !DILocation(line: 588, column: 34, scope: !6104)
!6130 = !DILocation(line: 588, column: 40, scope: !6104)
!6131 = !DILocation(line: 588, column: 15, scope: !6104)
!6132 = !DILocation(line: 588, column: 6, scope: !6104)
!6133 = !DILocation(line: 588, column: 26, scope: !6104)
!6134 = !DILocation(line: 588, column: 32, scope: !6104)
!6135 = !DILocation(line: 589, column: 44, scope: !6104)
!6136 = !DILocation(line: 589, column: 35, scope: !6104)
!6137 = !DILocation(line: 589, column: 34, scope: !6104)
!6138 = !DILocation(line: 589, column: 6, scope: !6104)
!6139 = !DILocation(line: 590, column: 15, scope: !6104)
!6140 = !DILocation(line: 591, column: 5, scope: !6104)
!6141 = !DILocation(line: 593, column: 26, scope: !6097)
!6142 = !DILocation(line: 593, column: 32, scope: !6097)
!6143 = !DILocation(line: 593, column: 46, scope: !6097)
!6144 = !DILocation(line: 593, column: 39, scope: !6097)
!6145 = !DILocation(line: 593, column: 57, scope: !6097)
!6146 = !DILocation(line: 593, column: 50, scope: !6097)
!6147 = !DILocation(line: 593, column: 68, scope: !6097)
!6148 = !DILocation(line: 593, column: 62, scope: !6097)
!6149 = !DILocation(line: 593, column: 60, scope: !6097)
!6150 = !DILocation(line: 593, column: 72, scope: !6097)
!6151 = !DILocation(line: 593, column: 78, scope: !6097)
!6152 = !DILocation(line: 593, column: 6, scope: !6097)
!6153 = !DILocation(line: 595, column: 3, scope: !6034)
!6154 = !DILocation(line: 560, column: 30, scope: !6029)
!6155 = !DILocation(line: 560, column: 3, scope: !6029)
!6156 = distinct !{!6156, !6031, !6157}
!6157 = !DILocation(line: 595, column: 3, scope: !6026)
!6158 = !DILocation(line: 597, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6009, file: !3, line: 597, column: 7)
!6160 = !DILocation(line: 597, column: 13, scope: !6159)
!6161 = !DILocation(line: 597, column: 18, scope: !6159)
!6162 = !DILocation(line: 597, column: 21, scope: !6159)
!6163 = !DILocation(line: 597, column: 27, scope: !6159)
!6164 = !DILocation(line: 597, column: 7, scope: !6009)
!6165 = !DILocation(line: 598, column: 4, scope: !6159)
!6166 = !DILocation(line: 602, column: 9, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 602, column: 2)
!6168 = !DILocation(line: 602, column: 7, scope: !6167)
!6169 = !DILocation(line: 602, column: 14, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 602, column: 2)
!6171 = !DILocation(line: 602, column: 16, scope: !6170)
!6172 = !DILocation(line: 602, column: 2, scope: !6167)
!6173 = !DILocation(line: 603, column: 7, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 603, column: 7)
!6175 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 602, column: 33)
!6176 = !DILocation(line: 603, column: 13, scope: !6174)
!6177 = !DILocation(line: 603, column: 31, scope: !6174)
!6178 = !DILocation(line: 603, column: 28, scope: !6174)
!6179 = !DILocation(line: 603, column: 23, scope: !6174)
!6180 = !DILocation(line: 603, column: 7, scope: !6175)
!6181 = !DILocation(line: 604, column: 10, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 603, column: 35)
!6183 = !DILocation(line: 605, column: 23, scope: !6182)
!6184 = !DILocation(line: 605, column: 29, scope: !6182)
!6185 = !DILocation(line: 605, column: 36, scope: !6182)
!6186 = !DILocation(line: 605, column: 42, scope: !6182)
!6187 = !DILocation(line: 605, column: 48, scope: !6182)
!6188 = !DILocation(line: 605, column: 51, scope: !6182)
!6189 = !DILocation(line: 605, column: 34, scope: !6182)
!6190 = !DILocation(line: 605, column: 4, scope: !6182)
!6191 = !DILocation(line: 606, column: 3, scope: !6182)
!6192 = !DILocation(line: 608, column: 12, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 607, column: 8)
!6194 = !DILocation(line: 608, column: 18, scope: !6193)
!6195 = !DILocation(line: 608, column: 24, scope: !6193)
!6196 = !DILocation(line: 608, column: 27, scope: !6193)
!6197 = !DILocation(line: 608, column: 10, scope: !6193)
!6198 = !DILocation(line: 611, column: 7, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 611, column: 7)
!6200 = !DILocation(line: 611, column: 7, scope: !6175)
!6201 = !DILocation(line: 612, column: 18, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 611, column: 14)
!6203 = !DILocation(line: 612, column: 25, scope: !6202)
!6204 = !DILocation(line: 612, column: 4, scope: !6202)
!6205 = !DILocation(line: 612, column: 10, scope: !6202)
!6206 = !DILocation(line: 612, column: 15, scope: !6202)
!6207 = !DILocation(line: 613, column: 11, scope: !6202)
!6208 = !DILocation(line: 613, column: 17, scope: !6202)
!6209 = !DILocation(line: 613, column: 21, scope: !6202)
!6210 = !DILocation(line: 613, column: 27, scope: !6202)
!6211 = !DILocation(line: 613, column: 31, scope: !6202)
!6212 = !DILocation(line: 613, column: 38, scope: !6202)
!6213 = !DILocation(line: 613, column: 4, scope: !6202)
!6214 = !DILocation(line: 614, column: 17, scope: !6202)
!6215 = !DILocation(line: 614, column: 23, scope: !6202)
!6216 = !DILocation(line: 614, column: 27, scope: !6202)
!6217 = !DILocation(line: 614, column: 34, scope: !6202)
!6218 = !DILocation(line: 614, column: 38, scope: !6202)
!6219 = !DILocation(line: 614, column: 45, scope: !6202)
!6220 = !DILocation(line: 614, column: 4, scope: !6202)
!6221 = !DILocation(line: 615, column: 3, scope: !6202)
!6222 = !DILocation(line: 616, column: 2, scope: !6175)
!6223 = !DILocation(line: 602, column: 29, scope: !6170)
!6224 = !DILocation(line: 602, column: 2, scope: !6170)
!6225 = distinct !{!6225, !6172, !6226}
!6226 = !DILocation(line: 616, column: 2, scope: !6167)
!6227 = !DILocation(line: 618, column: 6, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 618, column: 6)
!6229 = !DILocation(line: 618, column: 12, scope: !6228)
!6230 = !DILocation(line: 618, column: 17, scope: !6228)
!6231 = !DILocation(line: 618, column: 6, scope: !5936)
!6232 = !DILocation(line: 619, column: 13, scope: !6228)
!6233 = !DILocation(line: 619, column: 19, scope: !6228)
!6234 = !DILocation(line: 619, column: 30, scope: !6228)
!6235 = !DILocation(line: 619, column: 36, scope: !6228)
!6236 = !DILocation(line: 619, column: 28, scope: !6228)
!6237 = !DILocation(line: 619, column: 3, scope: !6228)
!6238 = !DILocation(line: 622, column: 2, scope: !5936)
!6239 = !DILocation(line: 622, column: 8, scope: !5936)
!6240 = !DILocation(line: 622, column: 12, scope: !5936)
!6241 = !DILocation(line: 623, column: 6, scope: !6242)
!6242 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 623, column: 6)
!6243 = !DILocation(line: 623, column: 12, scope: !6242)
!6244 = !DILocation(line: 623, column: 17, scope: !6242)
!6245 = !DILocation(line: 623, column: 6, scope: !5936)
!6246 = !DILocation(line: 624, column: 17, scope: !6242)
!6247 = !DILocation(line: 624, column: 23, scope: !6242)
!6248 = !DILocation(line: 624, column: 29, scope: !6242)
!6249 = !DILocation(line: 624, column: 35, scope: !6242)
!6250 = !DILocation(line: 624, column: 40, scope: !6242)
!6251 = !DILocation(line: 624, column: 46, scope: !6242)
!6252 = !DILocation(line: 624, column: 3, scope: !6242)
!6253 = !DILocation(line: 625, column: 1, scope: !5936)
!6254 = distinct !DISubprogram(name: "occ_build_shade", scope: !3, file: !3, line: 214, type: !6255, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6255 = !DISubroutineType(types: !6256)
!6256 = !{null, !178, !85}
!6257 = !DILocalVariable(name: "re", arg: 1, scope: !6254, file: !3, line: 214, type: !178)
!6258 = !DILocation(line: 214, column: 37, scope: !6254)
!6259 = !DILocalVariable(name: "tree", arg: 2, scope: !6254, file: !3, line: 214, type: !85)
!6260 = !DILocation(line: 214, column: 56, scope: !6254)
!6261 = !DILocalVariable(name: "ssamp", scope: !6254, file: !3, line: 216, type: !5316)
!6262 = !DILocation(line: 216, column: 14, scope: !6254)
!6263 = !DILocalVariable(name: "obi", scope: !6254, file: !3, line: 217, type: !3212)
!6264 = !DILocation(line: 217, column: 21, scope: !6254)
!6265 = !DILocalVariable(name: "vlr", scope: !6254, file: !3, line: 218, type: !3222)
!6266 = !DILocation(line: 218, column: 11, scope: !6254)
!6267 = !DILocalVariable(name: "a", scope: !6254, file: !3, line: 219, type: !12)
!6268 = !DILocation(line: 219, column: 6, scope: !6254)
!6269 = !DILocation(line: 221, column: 7, scope: !6254)
!6270 = !DILocation(line: 221, column: 6, scope: !6254)
!6271 = !DILocation(line: 224, column: 2, scope: !6254)
!6272 = !DILocation(line: 225, column: 21, scope: !6254)
!6273 = !DILocation(line: 225, column: 25, scope: !6254)
!6274 = !DILocation(line: 225, column: 8, scope: !6254)
!6275 = !DILocation(line: 225, column: 2, scope: !6254)
!6276 = !DILocation(line: 225, column: 15, scope: !6254)
!6277 = !DILocation(line: 225, column: 19, scope: !6254)
!6278 = !DILocation(line: 226, column: 8, scope: !6254)
!6279 = !DILocation(line: 226, column: 2, scope: !6254)
!6280 = !DILocation(line: 226, column: 15, scope: !6254)
!6281 = !DILocation(line: 226, column: 24, scope: !6254)
!6282 = !DILocation(line: 227, column: 8, scope: !6254)
!6283 = !DILocation(line: 227, column: 2, scope: !6254)
!6284 = !DILocation(line: 227, column: 15, scope: !6254)
!6285 = !DILocation(line: 227, column: 28, scope: !6254)
!6286 = !DILocation(line: 228, column: 8, scope: !6254)
!6287 = !DILocation(line: 228, column: 12, scope: !6254)
!6288 = !DILocation(line: 230, column: 9, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 230, column: 2)
!6290 = !DILocation(line: 230, column: 7, scope: !6289)
!6291 = !DILocation(line: 230, column: 14, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 230, column: 2)
!6293 = !DILocation(line: 230, column: 18, scope: !6292)
!6294 = !DILocation(line: 230, column: 24, scope: !6292)
!6295 = !DILocation(line: 230, column: 16, scope: !6292)
!6296 = !DILocation(line: 230, column: 2, scope: !6289)
!6297 = !DILocation(line: 231, column: 12, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 230, column: 38)
!6299 = !DILocation(line: 231, column: 27, scope: !6298)
!6300 = !DILocation(line: 231, column: 33, scope: !6298)
!6301 = !DILocation(line: 231, column: 38, scope: !6298)
!6302 = !DILocation(line: 231, column: 41, scope: !6298)
!6303 = !DILocation(line: 231, column: 10, scope: !6298)
!6304 = !DILocation(line: 231, column: 7, scope: !6298)
!6305 = !DILocation(line: 232, column: 26, scope: !6298)
!6306 = !DILocation(line: 232, column: 31, scope: !6298)
!6307 = !DILocation(line: 232, column: 36, scope: !6298)
!6308 = !DILocation(line: 232, column: 42, scope: !6298)
!6309 = !DILocation(line: 232, column: 47, scope: !6298)
!6310 = !DILocation(line: 232, column: 50, scope: !6298)
!6311 = !DILocation(line: 232, column: 9, scope: !6298)
!6312 = !DILocation(line: 232, column: 7, scope: !6298)
!6313 = !DILocation(line: 234, column: 21, scope: !6298)
!6314 = !DILocation(line: 234, column: 26, scope: !6298)
!6315 = !DILocation(line: 234, column: 31, scope: !6298)
!6316 = !DILocation(line: 234, column: 37, scope: !6298)
!6317 = !DILocation(line: 234, column: 41, scope: !6298)
!6318 = !DILocation(line: 234, column: 3, scope: !6298)
!6319 = !DILocation(line: 236, column: 7, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 236, column: 7)
!6321 = !DILocation(line: 236, column: 11, scope: !6320)
!6322 = !DILocation(line: 236, column: 22, scope: !6320)
!6323 = !DILocation(line: 236, column: 26, scope: !6320)
!6324 = !DILocation(line: 236, column: 7, scope: !6298)
!6325 = !DILocation(line: 237, column: 4, scope: !6320)
!6326 = !DILocation(line: 238, column: 2, scope: !6298)
!6327 = !DILocation(line: 230, column: 34, scope: !6292)
!6328 = !DILocation(line: 230, column: 2, scope: !6292)
!6329 = distinct !{!6329, !6296, !6330}
!6330 = !DILocation(line: 238, column: 2, scope: !6289)
!6331 = !DILocation(line: 239, column: 1, scope: !6254)
!6332 = distinct !DISubprogram(name: "occ_sum_occlusion", scope: !3, file: !3, line: 368, type: !6333, scopeLine: 369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{null, !85, !109}
!6335 = !DILocalVariable(name: "tree", arg: 1, scope: !6332, file: !3, line: 368, type: !85)
!6336 = !DILocation(line: 368, column: 46, scope: !6332)
!6337 = !DILocalVariable(name: "node", arg: 2, scope: !6332, file: !3, line: 368, type: !109)
!6338 = !DILocation(line: 368, column: 61, scope: !6332)
!6339 = !DILocalVariable(name: "child", scope: !6332, file: !3, line: 370, type: !109)
!6340 = !DILocation(line: 370, column: 11, scope: !6332)
!6341 = !DILocalVariable(name: "occ", scope: !6332, file: !3, line: 371, type: !6)
!6342 = !DILocation(line: 371, column: 8, scope: !6332)
!6343 = !DILocalVariable(name: "area", scope: !6332, file: !3, line: 371, type: !6)
!6344 = !DILocation(line: 371, column: 13, scope: !6332)
!6345 = !DILocalVariable(name: "totarea", scope: !6332, file: !3, line: 371, type: !6)
!6346 = !DILocation(line: 371, column: 19, scope: !6332)
!6347 = !DILocalVariable(name: "rad", scope: !6332, file: !3, line: 371, type: !96)
!6348 = !DILocation(line: 371, column: 28, scope: !6332)
!6349 = !DILocalVariable(name: "a", scope: !6332, file: !3, line: 372, type: !12)
!6350 = !DILocation(line: 372, column: 6, scope: !6332)
!6351 = !DILocalVariable(name: "b", scope: !6332, file: !3, line: 372, type: !12)
!6352 = !DILocation(line: 372, column: 9, scope: !6332)
!6353 = !DILocalVariable(name: "indirect", scope: !6332, file: !3, line: 372, type: !12)
!6354 = !DILocation(line: 372, column: 12, scope: !6332)
!6355 = !DILocation(line: 372, column: 23, scope: !6332)
!6356 = !DILocation(line: 372, column: 29, scope: !6332)
!6357 = !DILocation(line: 374, column: 6, scope: !6332)
!6358 = !DILocation(line: 375, column: 10, scope: !6332)
!6359 = !DILocation(line: 376, column: 6, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 376, column: 6)
!6361 = !DILocation(line: 376, column: 6, scope: !6332)
!6362 = !DILocation(line: 376, column: 24, scope: !6360)
!6363 = !DILocation(line: 376, column: 16, scope: !6360)
!6364 = !DILocation(line: 378, column: 9, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 378, column: 2)
!6366 = !DILocation(line: 378, column: 7, scope: !6365)
!6367 = !DILocation(line: 378, column: 14, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 378, column: 2)
!6369 = !DILocation(line: 378, column: 16, scope: !6368)
!6370 = !DILocation(line: 378, column: 2, scope: !6365)
!6371 = !DILocation(line: 379, column: 7, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 379, column: 7)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 378, column: 33)
!6374 = !DILocation(line: 379, column: 13, scope: !6372)
!6375 = !DILocation(line: 379, column: 31, scope: !6372)
!6376 = !DILocation(line: 379, column: 28, scope: !6372)
!6377 = !DILocation(line: 379, column: 23, scope: !6372)
!6378 = !DILocation(line: 379, column: 7, scope: !6373)
!6379 = !DILocation(line: 380, column: 8, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 379, column: 35)
!6381 = !DILocation(line: 380, column: 14, scope: !6380)
!6382 = !DILocation(line: 380, column: 20, scope: !6380)
!6383 = !DILocation(line: 380, column: 23, scope: !6380)
!6384 = !DILocation(line: 380, column: 6, scope: !6380)
!6385 = !DILocation(line: 381, column: 14, scope: !6380)
!6386 = !DILocation(line: 381, column: 20, scope: !6380)
!6387 = !DILocation(line: 381, column: 25, scope: !6380)
!6388 = !DILocation(line: 381, column: 4, scope: !6380)
!6389 = !DILocation(line: 382, column: 11, scope: !6380)
!6390 = !DILocation(line: 382, column: 18, scope: !6380)
!6391 = !DILocation(line: 382, column: 24, scope: !6380)
!6392 = !DILocation(line: 382, column: 34, scope: !6380)
!6393 = !DILocation(line: 382, column: 16, scope: !6380)
!6394 = !DILocation(line: 382, column: 8, scope: !6380)
!6395 = !DILocation(line: 383, column: 8, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 383, column: 8)
!6397 = !DILocation(line: 383, column: 8, scope: !6380)
!6398 = !DILocation(line: 383, column: 31, scope: !6396)
!6399 = !DILocation(line: 383, column: 36, scope: !6396)
!6400 = !DILocation(line: 383, column: 42, scope: !6396)
!6401 = !DILocation(line: 383, column: 46, scope: !6396)
!6402 = !DILocation(line: 383, column: 50, scope: !6396)
!6403 = !DILocation(line: 383, column: 18, scope: !6396)
!6404 = !DILocation(line: 384, column: 15, scope: !6380)
!6405 = !DILocation(line: 384, column: 12, scope: !6380)
!6406 = !DILocation(line: 385, column: 3, scope: !6380)
!6407 = !DILocation(line: 386, column: 12, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 386, column: 12)
!6409 = !DILocation(line: 386, column: 18, scope: !6408)
!6410 = !DILocation(line: 386, column: 24, scope: !6408)
!6411 = !DILocation(line: 386, column: 27, scope: !6408)
!6412 = !DILocation(line: 386, column: 12, scope: !6372)
!6413 = !DILocation(line: 387, column: 12, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 386, column: 33)
!6415 = !DILocation(line: 387, column: 18, scope: !6414)
!6416 = !DILocation(line: 387, column: 24, scope: !6414)
!6417 = !DILocation(line: 387, column: 27, scope: !6414)
!6418 = !DILocation(line: 387, column: 10, scope: !6414)
!6419 = !DILocation(line: 388, column: 22, scope: !6414)
!6420 = !DILocation(line: 388, column: 28, scope: !6414)
!6421 = !DILocation(line: 388, column: 4, scope: !6414)
!6422 = !DILocation(line: 390, column: 11, scope: !6414)
!6423 = !DILocation(line: 390, column: 18, scope: !6414)
!6424 = !DILocation(line: 390, column: 25, scope: !6414)
!6425 = !DILocation(line: 390, column: 32, scope: !6414)
!6426 = !DILocation(line: 390, column: 23, scope: !6414)
!6427 = !DILocation(line: 390, column: 8, scope: !6414)
!6428 = !DILocation(line: 391, column: 8, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 391, column: 8)
!6430 = !DILocation(line: 391, column: 8, scope: !6414)
!6431 = !DILocation(line: 391, column: 31, scope: !6429)
!6432 = !DILocation(line: 391, column: 36, scope: !6429)
!6433 = !DILocation(line: 391, column: 43, scope: !6429)
!6434 = !DILocation(line: 391, column: 48, scope: !6429)
!6435 = !DILocation(line: 391, column: 55, scope: !6429)
!6436 = !DILocation(line: 391, column: 18, scope: !6429)
!6437 = !DILocation(line: 392, column: 15, scope: !6414)
!6438 = !DILocation(line: 392, column: 22, scope: !6414)
!6439 = !DILocation(line: 392, column: 12, scope: !6414)
!6440 = !DILocation(line: 393, column: 3, scope: !6414)
!6441 = !DILocation(line: 394, column: 2, scope: !6373)
!6442 = !DILocation(line: 378, column: 29, scope: !6368)
!6443 = !DILocation(line: 378, column: 2, scope: !6368)
!6444 = distinct !{!6444, !6370, !6445}
!6445 = !DILocation(line: 394, column: 2, scope: !6365)
!6446 = !DILocation(line: 396, column: 6, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 396, column: 6)
!6448 = !DILocation(line: 396, column: 14, scope: !6447)
!6449 = !DILocation(line: 396, column: 6, scope: !6332)
!6450 = !DILocation(line: 397, column: 10, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 396, column: 23)
!6452 = !DILocation(line: 397, column: 7, scope: !6451)
!6453 = !DILocation(line: 398, column: 7, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 398, column: 7)
!6455 = !DILocation(line: 398, column: 7, scope: !6451)
!6456 = !DILocation(line: 398, column: 27, scope: !6454)
!6457 = !DILocation(line: 398, column: 39, scope: !6454)
!6458 = !DILocation(line: 398, column: 37, scope: !6454)
!6459 = !DILocation(line: 398, column: 17, scope: !6454)
!6460 = !DILocation(line: 399, column: 2, scope: !6451)
!6461 = !DILocation(line: 401, column: 20, scope: !6332)
!6462 = !DILocation(line: 401, column: 2, scope: !6332)
!6463 = !DILocation(line: 401, column: 8, scope: !6332)
!6464 = !DILocation(line: 401, column: 18, scope: !6332)
!6465 = !DILocation(line: 402, column: 6, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 402, column: 6)
!6467 = !DILocation(line: 402, column: 6, scope: !6332)
!6468 = !DILocation(line: 402, column: 27, scope: !6466)
!6469 = !DILocation(line: 402, column: 33, scope: !6466)
!6470 = !DILocation(line: 402, column: 38, scope: !6466)
!6471 = !DILocation(line: 402, column: 16, scope: !6466)
!6472 = !DILocation(line: 403, column: 1, scope: !6332)
!6473 = distinct !DISubprogram(name: "occ_build_sh_normalize", scope: !3, file: !3, line: 627, type: !6474, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{null, !109}
!6476 = !DILocalVariable(name: "node", arg: 1, scope: !6473, file: !3, line: 627, type: !109)
!6477 = !DILocation(line: 627, column: 45, scope: !6473)
!6478 = !DILocalVariable(name: "b", scope: !6473, file: !3, line: 631, type: !12)
!6479 = !DILocation(line: 631, column: 6, scope: !6473)
!6480 = !DILocation(line: 633, column: 6, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 633, column: 6)
!6482 = !DILocation(line: 633, column: 12, scope: !6481)
!6483 = !DILocation(line: 633, column: 17, scope: !6481)
!6484 = !DILocation(line: 633, column: 6, scope: !6473)
!6485 = !DILocation(line: 634, column: 10, scope: !6481)
!6486 = !DILocation(line: 634, column: 16, scope: !6481)
!6487 = !DILocation(line: 634, column: 27, scope: !6481)
!6488 = !DILocation(line: 634, column: 33, scope: !6481)
!6489 = !DILocation(line: 634, column: 25, scope: !6481)
!6490 = !DILocation(line: 634, column: 3, scope: !6481)
!6491 = !DILocation(line: 636, column: 9, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 636, column: 2)
!6493 = !DILocation(line: 636, column: 7, scope: !6492)
!6494 = !DILocation(line: 636, column: 14, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 636, column: 2)
!6496 = !DILocation(line: 636, column: 16, scope: !6495)
!6497 = !DILocation(line: 636, column: 2, scope: !6492)
!6498 = !DILocation(line: 637, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 637, column: 7)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !3, line: 636, column: 33)
!6501 = !DILocation(line: 637, column: 13, scope: !6499)
!6502 = !DILocation(line: 637, column: 31, scope: !6499)
!6503 = !DILocation(line: 637, column: 28, scope: !6499)
!6504 = !DILocation(line: 637, column: 23, scope: !6499)
!6505 = !DILocation(line: 637, column: 7, scope: !6500)
!6506 = !DILocation(line: 639, column: 3, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 637, column: 35)
!6508 = !DILocation(line: 640, column: 12, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 640, column: 12)
!6510 = !DILocation(line: 640, column: 18, scope: !6509)
!6511 = !DILocation(line: 640, column: 24, scope: !6509)
!6512 = !DILocation(line: 640, column: 27, scope: !6509)
!6513 = !DILocation(line: 640, column: 12, scope: !6499)
!6514 = !DILocation(line: 641, column: 27, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 640, column: 33)
!6516 = !DILocation(line: 641, column: 33, scope: !6515)
!6517 = !DILocation(line: 641, column: 39, scope: !6515)
!6518 = !DILocation(line: 641, column: 42, scope: !6515)
!6519 = !DILocation(line: 641, column: 4, scope: !6515)
!6520 = !DILocation(line: 642, column: 3, scope: !6515)
!6521 = !DILocation(line: 643, column: 2, scope: !6500)
!6522 = !DILocation(line: 636, column: 29, scope: !6495)
!6523 = !DILocation(line: 636, column: 2, scope: !6495)
!6524 = distinct !{!6524, !6497, !6525}
!6525 = !DILocation(line: 643, column: 2, scope: !6492)
!6526 = !DILocation(line: 644, column: 1, scope: !6473)
!6527 = distinct !DISubprogram(name: "occ_build_8_split", scope: !3, file: !3, line: 490, type: !6528, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{null, !85, !12, !12, !212, !212}
!6530 = !DILocalVariable(name: "tree", arg: 1, scope: !6527, file: !3, line: 490, type: !85)
!6531 = !DILocation(line: 490, column: 46, scope: !6527)
!6532 = !DILocalVariable(name: "begin", arg: 2, scope: !6527, file: !3, line: 490, type: !12)
!6533 = !DILocation(line: 490, column: 56, scope: !6527)
!6534 = !DILocalVariable(name: "end", arg: 3, scope: !6527, file: !3, line: 490, type: !12)
!6535 = !DILocation(line: 490, column: 67, scope: !6527)
!6536 = !DILocalVariable(name: "offset", arg: 4, scope: !6527, file: !3, line: 490, type: !212)
!6537 = !DILocation(line: 490, column: 77, scope: !6527)
!6538 = !DILocalVariable(name: "count", arg: 5, scope: !6527, file: !3, line: 490, type: !212)
!6539 = !DILocation(line: 490, column: 90, scope: !6527)
!6540 = !DILocalVariable(name: "b", scope: !6527, file: !3, line: 493, type: !12)
!6541 = !DILocation(line: 493, column: 6, scope: !6527)
!6542 = !DILocalVariable(name: "splitx", scope: !6527, file: !3, line: 493, type: !12)
!6543 = !DILocation(line: 493, column: 9, scope: !6527)
!6544 = !DILocalVariable(name: "splity", scope: !6527, file: !3, line: 493, type: !6545)
!6545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12, size: 64, elements: !731)
!6546 = !DILocation(line: 493, column: 17, scope: !6527)
!6547 = !DILocalVariable(name: "splitz", scope: !6527, file: !3, line: 493, type: !2621)
!6548 = !DILocation(line: 493, column: 28, scope: !6527)
!6549 = !DILocation(line: 495, column: 18, scope: !6527)
!6550 = !DILocation(line: 495, column: 24, scope: !6527)
!6551 = !DILocation(line: 495, column: 31, scope: !6527)
!6552 = !DILocation(line: 495, column: 2, scope: !6527)
!6553 = !DILocation(line: 498, column: 6, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 498, column: 6)
!6555 = !DILocation(line: 498, column: 16, scope: !6554)
!6556 = !DILocation(line: 498, column: 13, scope: !6554)
!6557 = !DILocation(line: 498, column: 22, scope: !6554)
!6558 = !DILocation(line: 498, column: 25, scope: !6554)
!6559 = !DILocation(line: 498, column: 35, scope: !6554)
!6560 = !DILocation(line: 498, column: 32, scope: !6554)
!6561 = !DILocation(line: 498, column: 6, scope: !6527)
!6562 = !DILocation(line: 499, column: 13, scope: !6554)
!6563 = !DILocation(line: 499, column: 21, scope: !6554)
!6564 = !DILocation(line: 499, column: 19, scope: !6554)
!6565 = !DILocation(line: 499, column: 26, scope: !6554)
!6566 = !DILocation(line: 499, column: 10, scope: !6554)
!6567 = !DILocation(line: 499, column: 3, scope: !6554)
!6568 = !DILocation(line: 501, column: 18, scope: !6527)
!6569 = !DILocation(line: 501, column: 24, scope: !6527)
!6570 = !DILocation(line: 501, column: 31, scope: !6527)
!6571 = !DILocation(line: 501, column: 40, scope: !6527)
!6572 = !DILocation(line: 501, column: 2, scope: !6527)
!6573 = !DILocation(line: 502, column: 18, scope: !6527)
!6574 = !DILocation(line: 502, column: 24, scope: !6527)
!6575 = !DILocation(line: 502, column: 32, scope: !6527)
!6576 = !DILocation(line: 502, column: 38, scope: !6527)
!6577 = !DILocation(line: 502, column: 2, scope: !6527)
!6578 = !DILocation(line: 504, column: 18, scope: !6527)
!6579 = !DILocation(line: 504, column: 24, scope: !6527)
!6580 = !DILocation(line: 504, column: 31, scope: !6527)
!6581 = !DILocation(line: 504, column: 43, scope: !6527)
!6582 = !DILocation(line: 504, column: 2, scope: !6527)
!6583 = !DILocation(line: 505, column: 18, scope: !6527)
!6584 = !DILocation(line: 505, column: 24, scope: !6527)
!6585 = !DILocation(line: 505, column: 35, scope: !6527)
!6586 = !DILocation(line: 505, column: 44, scope: !6527)
!6587 = !DILocation(line: 505, column: 2, scope: !6527)
!6588 = !DILocation(line: 506, column: 18, scope: !6527)
!6589 = !DILocation(line: 506, column: 24, scope: !6527)
!6590 = !DILocation(line: 506, column: 32, scope: !6527)
!6591 = !DILocation(line: 506, column: 44, scope: !6527)
!6592 = !DILocation(line: 506, column: 2, scope: !6527)
!6593 = !DILocation(line: 507, column: 18, scope: !6527)
!6594 = !DILocation(line: 507, column: 24, scope: !6527)
!6595 = !DILocation(line: 507, column: 35, scope: !6527)
!6596 = !DILocation(line: 507, column: 41, scope: !6527)
!6597 = !DILocation(line: 507, column: 2, scope: !6527)
!6598 = !DILocation(line: 509, column: 14, scope: !6527)
!6599 = !DILocation(line: 509, column: 2, scope: !6527)
!6600 = !DILocation(line: 509, column: 12, scope: !6527)
!6601 = !DILocation(line: 510, column: 14, scope: !6527)
!6602 = !DILocation(line: 510, column: 2, scope: !6527)
!6603 = !DILocation(line: 510, column: 12, scope: !6527)
!6604 = !DILocation(line: 511, column: 14, scope: !6527)
!6605 = !DILocation(line: 511, column: 2, scope: !6527)
!6606 = !DILocation(line: 511, column: 12, scope: !6527)
!6607 = !DILocation(line: 512, column: 14, scope: !6527)
!6608 = !DILocation(line: 512, column: 2, scope: !6527)
!6609 = !DILocation(line: 512, column: 12, scope: !6527)
!6610 = !DILocation(line: 513, column: 14, scope: !6527)
!6611 = !DILocation(line: 513, column: 2, scope: !6527)
!6612 = !DILocation(line: 513, column: 12, scope: !6527)
!6613 = !DILocation(line: 514, column: 14, scope: !6527)
!6614 = !DILocation(line: 514, column: 2, scope: !6527)
!6615 = !DILocation(line: 514, column: 12, scope: !6527)
!6616 = !DILocation(line: 515, column: 14, scope: !6527)
!6617 = !DILocation(line: 515, column: 2, scope: !6527)
!6618 = !DILocation(line: 515, column: 12, scope: !6527)
!6619 = !DILocation(line: 516, column: 14, scope: !6527)
!6620 = !DILocation(line: 516, column: 2, scope: !6527)
!6621 = !DILocation(line: 516, column: 12, scope: !6527)
!6622 = !DILocation(line: 518, column: 9, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 518, column: 2)
!6624 = !DILocation(line: 518, column: 7, scope: !6623)
!6625 = !DILocation(line: 518, column: 14, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 518, column: 2)
!6627 = !DILocation(line: 518, column: 16, scope: !6626)
!6628 = !DILocation(line: 518, column: 2, scope: !6623)
!6629 = !DILocation(line: 519, column: 14, scope: !6626)
!6630 = !DILocation(line: 519, column: 21, scope: !6626)
!6631 = !DILocation(line: 519, column: 23, scope: !6626)
!6632 = !DILocation(line: 519, column: 30, scope: !6626)
!6633 = !DILocation(line: 519, column: 37, scope: !6626)
!6634 = !DILocation(line: 519, column: 28, scope: !6626)
!6635 = !DILocation(line: 519, column: 3, scope: !6626)
!6636 = !DILocation(line: 519, column: 9, scope: !6626)
!6637 = !DILocation(line: 519, column: 12, scope: !6626)
!6638 = !DILocation(line: 518, column: 22, scope: !6626)
!6639 = !DILocation(line: 518, column: 2, scope: !6626)
!6640 = distinct !{!6640, !6628, !6641}
!6641 = !DILocation(line: 519, column: 38, scope: !6623)
!6642 = !DILocation(line: 520, column: 13, scope: !6527)
!6643 = !DILocation(line: 520, column: 19, scope: !6527)
!6644 = !DILocation(line: 520, column: 17, scope: !6527)
!6645 = !DILocation(line: 520, column: 2, scope: !6527)
!6646 = !DILocation(line: 520, column: 11, scope: !6527)
!6647 = !DILocation(line: 521, column: 1, scope: !6527)
!6648 = distinct !DISubprogram(name: "exec_occ_build", scope: !3, file: !3, line: 525, type: !3838, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6649 = !DILocalVariable(name: "data", arg: 1, scope: !6648, file: !3, line: 525, type: !64)
!6650 = !DILocation(line: 525, column: 35, scope: !6648)
!6651 = !DILocalVariable(name: "othread", scope: !6648, file: !3, line: 527, type: !80)
!6652 = !DILocation(line: 527, column: 24, scope: !6648)
!6653 = !DILocation(line: 527, column: 58, scope: !6648)
!6654 = !DILocation(line: 527, column: 34, scope: !6648)
!6655 = !DILocation(line: 529, column: 22, scope: !6648)
!6656 = !DILocation(line: 529, column: 31, scope: !6648)
!6657 = !DILocation(line: 529, column: 37, scope: !6648)
!6658 = !DILocation(line: 529, column: 46, scope: !6648)
!6659 = !DILocation(line: 529, column: 52, scope: !6648)
!6660 = !DILocation(line: 529, column: 61, scope: !6648)
!6661 = !DILocation(line: 529, column: 68, scope: !6648)
!6662 = !DILocation(line: 529, column: 77, scope: !6648)
!6663 = !DILocation(line: 529, column: 82, scope: !6648)
!6664 = !DILocation(line: 529, column: 91, scope: !6648)
!6665 = !DILocation(line: 529, column: 2, scope: !6648)
!6666 = !DILocation(line: 531, column: 2, scope: !6648)
!6667 = distinct !DISubprogram(name: "occ_node_from_face", scope: !3, file: !3, line: 428, type: !6668, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{null, !100, !109}
!6670 = !DILocalVariable(name: "face", arg: 1, scope: !6667, file: !3, line: 428, type: !100)
!6671 = !DILocation(line: 428, column: 41, scope: !6667)
!6672 = !DILocalVariable(name: "node", arg: 2, scope: !6667, file: !3, line: 428, type: !109)
!6673 = !DILocation(line: 428, column: 56, scope: !6667)
!6674 = !DILocalVariable(name: "n", scope: !6667, file: !3, line: 430, type: !96)
!6675 = !DILocation(line: 430, column: 8, scope: !6667)
!6676 = !DILocation(line: 432, column: 11, scope: !6667)
!6677 = !DILocation(line: 432, column: 17, scope: !6667)
!6678 = !DILocation(line: 432, column: 23, scope: !6667)
!6679 = !DILocation(line: 432, column: 27, scope: !6667)
!6680 = !DILocation(line: 432, column: 31, scope: !6667)
!6681 = !DILocation(line: 432, column: 37, scope: !6667)
!6682 = !DILocation(line: 432, column: 2, scope: !6667)
!6683 = !DILocation(line: 433, column: 2, scope: !6667)
!6684 = !DILocation(line: 433, column: 8, scope: !6667)
!6685 = !DILocation(line: 433, column: 12, scope: !6667)
!6686 = !DILocation(line: 434, column: 15, scope: !6667)
!6687 = !DILocation(line: 434, column: 18, scope: !6667)
!6688 = !DILocation(line: 434, column: 24, scope: !6667)
!6689 = !DILocation(line: 434, column: 30, scope: !6667)
!6690 = !DILocation(line: 434, column: 36, scope: !6667)
!6691 = !DILocation(line: 434, column: 2, scope: !6667)
!6692 = !DILocation(line: 435, column: 1, scope: !6667)
!6693 = distinct !DISubprogram(name: "sh_add", scope: !3, file: !3, line: 261, type: !6694, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6694 = !DISubroutineType(types: !6695)
!6695 = !{null, !7, !7, !7}
!6696 = !DILocalVariable(name: "shresult", arg: 1, scope: !6693, file: !3, line: 261, type: !7)
!6697 = !DILocation(line: 261, column: 27, scope: !6693)
!6698 = !DILocalVariable(name: "sh1", arg: 2, scope: !6693, file: !3, line: 261, type: !7)
!6699 = !DILocation(line: 261, column: 44, scope: !6693)
!6700 = !DILocalVariable(name: "sh2", arg: 3, scope: !6693, file: !3, line: 261, type: !7)
!6701 = !DILocation(line: 261, column: 56, scope: !6693)
!6702 = !DILocalVariable(name: "i", scope: !6693, file: !3, line: 263, type: !12)
!6703 = !DILocation(line: 263, column: 6, scope: !6693)
!6704 = !DILocation(line: 265, column: 9, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 265, column: 2)
!6706 = !DILocation(line: 265, column: 7, scope: !6705)
!6707 = !DILocation(line: 265, column: 14, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 265, column: 2)
!6709 = !DILocation(line: 265, column: 16, scope: !6708)
!6710 = !DILocation(line: 265, column: 2, scope: !6705)
!6711 = !DILocation(line: 266, column: 17, scope: !6708)
!6712 = !DILocation(line: 266, column: 21, scope: !6708)
!6713 = !DILocation(line: 266, column: 26, scope: !6708)
!6714 = !DILocation(line: 266, column: 30, scope: !6708)
!6715 = !DILocation(line: 266, column: 24, scope: !6708)
!6716 = !DILocation(line: 266, column: 3, scope: !6708)
!6717 = !DILocation(line: 266, column: 12, scope: !6708)
!6718 = !DILocation(line: 266, column: 15, scope: !6708)
!6719 = !DILocation(line: 265, column: 22, scope: !6708)
!6720 = !DILocation(line: 265, column: 2, scope: !6708)
!6721 = distinct !{!6721, !6710, !6722}
!6722 = !DILocation(line: 266, column: 31, scope: !6705)
!6723 = !DILocation(line: 267, column: 1, scope: !6693)
!6724 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !3969, file: !3969, line: 507, type: !6725, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6725 = !DISubroutineType(types: !6726)
!6726 = !{null, !7, !3972, !6}
!6727 = !DILocalVariable(name: "r", arg: 1, scope: !6724, file: !3969, line: 507, type: !7)
!6728 = !DILocation(line: 507, column: 33, scope: !6724)
!6729 = !DILocalVariable(name: "a", arg: 2, scope: !6724, file: !3969, line: 507, type: !3972)
!6730 = !DILocation(line: 507, column: 51, scope: !6724)
!6731 = !DILocalVariable(name: "f", arg: 3, scope: !6724, file: !3969, line: 507, type: !6)
!6732 = !DILocation(line: 507, column: 63, scope: !6724)
!6733 = !DILocation(line: 509, column: 10, scope: !6724)
!6734 = !DILocation(line: 509, column: 17, scope: !6724)
!6735 = !DILocation(line: 509, column: 15, scope: !6724)
!6736 = !DILocation(line: 509, column: 2, scope: !6724)
!6737 = !DILocation(line: 509, column: 7, scope: !6724)
!6738 = !DILocation(line: 510, column: 10, scope: !6724)
!6739 = !DILocation(line: 510, column: 17, scope: !6724)
!6740 = !DILocation(line: 510, column: 15, scope: !6724)
!6741 = !DILocation(line: 510, column: 2, scope: !6724)
!6742 = !DILocation(line: 510, column: 7, scope: !6724)
!6743 = !DILocation(line: 511, column: 10, scope: !6724)
!6744 = !DILocation(line: 511, column: 17, scope: !6724)
!6745 = !DILocation(line: 511, column: 15, scope: !6724)
!6746 = !DILocation(line: 511, column: 2, scope: !6724)
!6747 = !DILocation(line: 511, column: 7, scope: !6724)
!6748 = !DILocation(line: 512, column: 1, scope: !6724)
!6749 = distinct !DISubprogram(name: "occ_build_dco", scope: !3, file: !3, line: 437, type: !6750, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6750 = !DISubroutineType(types: !6751)
!6751 = !{null, !85, !109, !3972, !7}
!6752 = !DILocalVariable(name: "tree", arg: 1, scope: !6749, file: !3, line: 437, type: !85)
!6753 = !DILocation(line: 437, column: 42, scope: !6749)
!6754 = !DILocalVariable(name: "node", arg: 2, scope: !6749, file: !3, line: 437, type: !109)
!6755 = !DILocation(line: 437, column: 57, scope: !6749)
!6756 = !DILocalVariable(name: "co", arg: 3, scope: !6749, file: !3, line: 437, type: !3972)
!6757 = !DILocation(line: 437, column: 75, scope: !6749)
!6758 = !DILocalVariable(name: "dco", arg: 4, scope: !6749, file: !3, line: 437, type: !7)
!6759 = !DILocation(line: 437, column: 89, scope: !6749)
!6760 = !DILocalVariable(name: "b", scope: !6749, file: !3, line: 439, type: !12)
!6761 = !DILocation(line: 439, column: 6, scope: !6749)
!6762 = !DILocation(line: 440, column: 9, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 440, column: 2)
!6764 = !DILocation(line: 440, column: 7, scope: !6763)
!6765 = !DILocation(line: 440, column: 14, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6763, file: !3, line: 440, column: 2)
!6767 = !DILocation(line: 440, column: 16, scope: !6766)
!6768 = !DILocation(line: 440, column: 2, scope: !6763)
!6769 = !DILocalVariable(name: "dist", scope: !6770, file: !3, line: 441, type: !6)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 440, column: 33)
!6771 = !DILocation(line: 441, column: 9, scope: !6770)
!6772 = !DILocalVariable(name: "d", scope: !6770, file: !3, line: 441, type: !96)
!6773 = !DILocation(line: 441, column: 15, scope: !6770)
!6774 = !DILocalVariable(name: "nco", scope: !6770, file: !3, line: 441, type: !96)
!6775 = !DILocation(line: 441, column: 21, scope: !6770)
!6776 = !DILocation(line: 443, column: 7, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 443, column: 7)
!6778 = !DILocation(line: 443, column: 13, scope: !6777)
!6779 = !DILocation(line: 443, column: 31, scope: !6777)
!6780 = !DILocation(line: 443, column: 28, scope: !6777)
!6781 = !DILocation(line: 443, column: 23, scope: !6777)
!6782 = !DILocation(line: 443, column: 7, scope: !6770)
!6783 = !DILocation(line: 444, column: 13, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 443, column: 35)
!6785 = !DILocation(line: 444, column: 19, scope: !6784)
!6786 = !DILocation(line: 444, column: 26, scope: !6784)
!6787 = !DILocation(line: 444, column: 32, scope: !6784)
!6788 = !DILocation(line: 444, column: 38, scope: !6784)
!6789 = !DILocation(line: 444, column: 41, scope: !6784)
!6790 = !DILocation(line: 444, column: 24, scope: !6784)
!6791 = !DILocation(line: 444, column: 47, scope: !6784)
!6792 = !DILocation(line: 444, column: 4, scope: !6784)
!6793 = !DILocation(line: 445, column: 3, scope: !6784)
!6794 = !DILocation(line: 446, column: 12, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 446, column: 12)
!6796 = !DILocation(line: 446, column: 18, scope: !6795)
!6797 = !DILocation(line: 446, column: 24, scope: !6795)
!6798 = !DILocation(line: 446, column: 27, scope: !6795)
!6799 = !DILocation(line: 446, column: 12, scope: !6777)
!6800 = !DILocalVariable(name: "child", scope: !6801, file: !3, line: 447, type: !109)
!6801 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 446, column: 33)
!6802 = !DILocation(line: 447, column: 13, scope: !6801)
!6803 = !DILocation(line: 447, column: 21, scope: !6801)
!6804 = !DILocation(line: 447, column: 27, scope: !6801)
!6805 = !DILocation(line: 447, column: 33, scope: !6801)
!6806 = !DILocation(line: 447, column: 36, scope: !6801)
!6807 = !DILocation(line: 448, column: 18, scope: !6801)
!6808 = !DILocation(line: 448, column: 24, scope: !6801)
!6809 = !DILocation(line: 448, column: 31, scope: !6801)
!6810 = !DILocation(line: 448, column: 35, scope: !6801)
!6811 = !DILocation(line: 448, column: 4, scope: !6801)
!6812 = !DILocation(line: 449, column: 15, scope: !6801)
!6813 = !DILocation(line: 449, column: 20, scope: !6801)
!6814 = !DILocation(line: 449, column: 27, scope: !6801)
!6815 = !DILocation(line: 449, column: 4, scope: !6801)
!6816 = !DILocation(line: 450, column: 3, scope: !6801)
!6817 = !DILocation(line: 452, column: 4, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 451, column: 8)
!6819 = !DILocation(line: 455, column: 15, scope: !6770)
!6820 = !DILocation(line: 455, column: 18, scope: !6770)
!6821 = !DILocation(line: 455, column: 23, scope: !6770)
!6822 = !DILocation(line: 455, column: 3, scope: !6770)
!6823 = !DILocation(line: 456, column: 19, scope: !6770)
!6824 = !DILocation(line: 456, column: 22, scope: !6770)
!6825 = !DILocation(line: 456, column: 10, scope: !6770)
!6826 = !DILocation(line: 456, column: 8, scope: !6770)
!6827 = !DILocation(line: 457, column: 7, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 457, column: 7)
!6829 = !DILocation(line: 457, column: 15, scope: !6828)
!6830 = !DILocation(line: 457, column: 14, scope: !6828)
!6831 = !DILocation(line: 457, column: 12, scope: !6828)
!6832 = !DILocation(line: 457, column: 7, scope: !6770)
!6833 = !DILocation(line: 458, column: 11, scope: !6828)
!6834 = !DILocation(line: 458, column: 5, scope: !6828)
!6835 = !DILocation(line: 458, column: 9, scope: !6828)
!6836 = !DILocation(line: 458, column: 4, scope: !6828)
!6837 = !DILocation(line: 459, column: 2, scope: !6770)
!6838 = !DILocation(line: 440, column: 29, scope: !6766)
!6839 = !DILocation(line: 440, column: 2, scope: !6766)
!6840 = distinct !{!6840, !6768, !6841}
!6841 = !DILocation(line: 459, column: 2, scope: !6763)
!6842 = !DILocation(line: 460, column: 1, scope: !6749)
!6843 = distinct !DISubprogram(name: "occ_build_split", scope: !3, file: !3, line: 462, type: !6844, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6844 = !DISubroutineType(types: !6845)
!6845 = !{null, !85, !12, !12, !212}
!6846 = !DILocalVariable(name: "tree", arg: 1, scope: !6843, file: !3, line: 462, type: !85)
!6847 = !DILocation(line: 462, column: 44, scope: !6843)
!6848 = !DILocalVariable(name: "begin", arg: 2, scope: !6843, file: !3, line: 462, type: !12)
!6849 = !DILocation(line: 462, column: 54, scope: !6843)
!6850 = !DILocalVariable(name: "end", arg: 3, scope: !6843, file: !3, line: 462, type: !12)
!6851 = !DILocation(line: 462, column: 65, scope: !6843)
!6852 = !DILocalVariable(name: "split", arg: 4, scope: !6843, file: !3, line: 462, type: !212)
!6853 = !DILocation(line: 462, column: 75, scope: !6843)
!6854 = !DILocalVariable(name: "min", scope: !6843, file: !3, line: 464, type: !96)
!6855 = !DILocation(line: 464, column: 8, scope: !6843)
!6856 = !DILocalVariable(name: "max", scope: !6843, file: !3, line: 464, type: !96)
!6857 = !DILocation(line: 464, column: 16, scope: !6843)
!6858 = !DILocalVariable(name: "mid", scope: !6843, file: !3, line: 464, type: !6)
!6859 = !DILocation(line: 464, column: 24, scope: !6843)
!6860 = !DILocalVariable(name: "axis", scope: !6843, file: !3, line: 465, type: !12)
!6861 = !DILocation(line: 465, column: 6, scope: !6843)
!6862 = !DILocalVariable(name: "a", scope: !6843, file: !3, line: 465, type: !12)
!6863 = !DILocation(line: 465, column: 12, scope: !6843)
!6864 = !DILocalVariable(name: "enda", scope: !6843, file: !3, line: 465, type: !12)
!6865 = !DILocation(line: 465, column: 15, scope: !6843)
!6866 = !DILocation(line: 470, column: 28, scope: !6843)
!6867 = !DILocation(line: 470, column: 34, scope: !6843)
!6868 = !DILocation(line: 470, column: 41, scope: !6843)
!6869 = !DILocation(line: 470, column: 46, scope: !6843)
!6870 = !DILocation(line: 470, column: 51, scope: !6843)
!6871 = !DILocation(line: 470, column: 9, scope: !6843)
!6872 = !DILocation(line: 470, column: 7, scope: !6843)
!6873 = !DILocation(line: 471, column: 20, scope: !6843)
!6874 = !DILocation(line: 471, column: 16, scope: !6843)
!6875 = !DILocation(line: 471, column: 32, scope: !6843)
!6876 = !DILocation(line: 471, column: 28, scope: !6843)
!6877 = !DILocation(line: 471, column: 26, scope: !6843)
!6878 = !DILocation(line: 471, column: 13, scope: !6843)
!6879 = !DILocation(line: 471, column: 6, scope: !6843)
!6880 = !DILocation(line: 473, column: 6, scope: !6843)
!6881 = !DILocation(line: 473, column: 4, scope: !6843)
!6882 = !DILocation(line: 474, column: 9, scope: !6843)
!6883 = !DILocation(line: 474, column: 7, scope: !6843)
!6884 = !DILocation(line: 475, column: 2, scope: !6843)
!6885 = !DILocation(line: 475, column: 9, scope: !6843)
!6886 = !DILocation(line: 475, column: 13, scope: !6843)
!6887 = !DILocation(line: 475, column: 11, scope: !6843)
!6888 = !DILocation(line: 476, column: 7, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 476, column: 7)
!6890 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 475, column: 19)
!6891 = !DILocation(line: 476, column: 13, scope: !6889)
!6892 = !DILocation(line: 476, column: 16, scope: !6889)
!6893 = !DILocation(line: 476, column: 19, scope: !6889)
!6894 = !DILocation(line: 476, column: 27, scope: !6889)
!6895 = !DILocation(line: 476, column: 25, scope: !6889)
!6896 = !DILocation(line: 476, column: 7, scope: !6890)
!6897 = !DILocation(line: 477, column: 8, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 476, column: 32)
!6899 = !DILocalVariable(name: "sw_ap", scope: !6900, file: !3, line: 478, type: !101)
!6900 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 478, column: 4)
!6901 = !DILocation(line: 478, column: 4, scope: !6900)
!6902 = !DILocalVariable(name: "sw_ap", scope: !6903, file: !3, line: 479, type: !6)
!6903 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 479, column: 4)
!6904 = !DILocation(line: 479, column: 4, scope: !6903)
!6905 = !DILocalVariable(name: "sw_ap", scope: !6906, file: !3, line: 480, type: !6)
!6906 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 480, column: 4)
!6907 = !DILocation(line: 480, column: 4, scope: !6906)
!6908 = !DILocalVariable(name: "sw_ap", scope: !6909, file: !3, line: 481, type: !6)
!6909 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 481, column: 4)
!6910 = !DILocation(line: 481, column: 4, scope: !6909)
!6911 = !DILocation(line: 482, column: 3, scope: !6898)
!6912 = !DILocation(line: 484, column: 5, scope: !6889)
!6913 = distinct !{!6913, !6884, !6914}
!6914 = !DILocation(line: 485, column: 2, scope: !6843)
!6915 = !DILocation(line: 487, column: 11, scope: !6843)
!6916 = !DILocation(line: 487, column: 3, scope: !6843)
!6917 = !DILocation(line: 487, column: 9, scope: !6843)
!6918 = !DILocation(line: 488, column: 1, scope: !6843)
!6919 = distinct !DISubprogram(name: "occ_find_bbox_axis", scope: !3, file: !3, line: 405, type: !6920, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6920 = !DISubroutineType(types: !6921)
!6921 = !{!12, !85, !12, !12, !7, !7}
!6922 = !DILocalVariable(name: "tree", arg: 1, scope: !6919, file: !3, line: 405, type: !85)
!6923 = !DILocation(line: 405, column: 46, scope: !6919)
!6924 = !DILocalVariable(name: "begin", arg: 2, scope: !6919, file: !3, line: 405, type: !12)
!6925 = !DILocation(line: 405, column: 56, scope: !6919)
!6926 = !DILocalVariable(name: "end", arg: 3, scope: !6919, file: !3, line: 405, type: !12)
!6927 = !DILocation(line: 405, column: 67, scope: !6919)
!6928 = !DILocalVariable(name: "min", arg: 4, scope: !6919, file: !3, line: 405, type: !7)
!6929 = !DILocation(line: 405, column: 79, scope: !6919)
!6930 = !DILocalVariable(name: "max", arg: 5, scope: !6919, file: !3, line: 405, type: !7)
!6931 = !DILocation(line: 405, column: 91, scope: !6919)
!6932 = !DILocalVariable(name: "len", scope: !6919, file: !3, line: 407, type: !6)
!6933 = !DILocation(line: 407, column: 8, scope: !6919)
!6934 = !DILocalVariable(name: "maxlen", scope: !6919, file: !3, line: 407, type: !6)
!6935 = !DILocation(line: 407, column: 13, scope: !6919)
!6936 = !DILocalVariable(name: "a", scope: !6919, file: !3, line: 408, type: !12)
!6937 = !DILocation(line: 408, column: 6, scope: !6919)
!6938 = !DILocalVariable(name: "axis", scope: !6919, file: !3, line: 408, type: !12)
!6939 = !DILocation(line: 408, column: 9, scope: !6919)
!6940 = !DILocation(line: 410, column: 2, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 410, column: 2)
!6942 = !DILocation(line: 412, column: 11, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 412, column: 2)
!6944 = !DILocation(line: 412, column: 9, scope: !6943)
!6945 = !DILocation(line: 412, column: 7, scope: !6943)
!6946 = !DILocation(line: 412, column: 18, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 412, column: 2)
!6948 = !DILocation(line: 412, column: 22, scope: !6947)
!6949 = !DILocation(line: 412, column: 20, scope: !6947)
!6950 = !DILocation(line: 412, column: 2, scope: !6943)
!6951 = !DILocation(line: 413, column: 18, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 412, column: 32)
!6953 = !DILocation(line: 413, column: 23, scope: !6952)
!6954 = !DILocation(line: 413, column: 28, scope: !6952)
!6955 = !DILocation(line: 413, column: 34, scope: !6952)
!6956 = !DILocation(line: 413, column: 37, scope: !6952)
!6957 = !DILocation(line: 413, column: 3, scope: !6952)
!6958 = !DILocation(line: 414, column: 2, scope: !6952)
!6959 = !DILocation(line: 412, column: 28, scope: !6947)
!6960 = !DILocation(line: 412, column: 2, scope: !6947)
!6961 = distinct !{!6961, !6950, !6962}
!6962 = !DILocation(line: 414, column: 2, scope: !6943)
!6963 = !DILocation(line: 416, column: 9, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 416, column: 2)
!6965 = !DILocation(line: 416, column: 7, scope: !6964)
!6966 = !DILocation(line: 416, column: 14, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 416, column: 2)
!6968 = !DILocation(line: 416, column: 16, scope: !6967)
!6969 = !DILocation(line: 416, column: 2, scope: !6964)
!6970 = !DILocation(line: 417, column: 9, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 416, column: 26)
!6972 = !DILocation(line: 417, column: 13, scope: !6971)
!6973 = !DILocation(line: 417, column: 18, scope: !6971)
!6974 = !DILocation(line: 417, column: 22, scope: !6971)
!6975 = !DILocation(line: 417, column: 16, scope: !6971)
!6976 = !DILocation(line: 417, column: 7, scope: !6971)
!6977 = !DILocation(line: 419, column: 7, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 419, column: 7)
!6979 = !DILocation(line: 419, column: 13, scope: !6978)
!6980 = !DILocation(line: 419, column: 11, scope: !6978)
!6981 = !DILocation(line: 419, column: 7, scope: !6971)
!6982 = !DILocation(line: 420, column: 13, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 419, column: 21)
!6984 = !DILocation(line: 420, column: 11, scope: !6983)
!6985 = !DILocation(line: 421, column: 11, scope: !6983)
!6986 = !DILocation(line: 421, column: 9, scope: !6983)
!6987 = !DILocation(line: 422, column: 3, scope: !6983)
!6988 = !DILocation(line: 423, column: 2, scope: !6971)
!6989 = !DILocation(line: 416, column: 22, scope: !6967)
!6990 = !DILocation(line: 416, column: 2, scope: !6967)
!6991 = distinct !{!6991, !6969, !6992}
!6992 = !DILocation(line: 423, column: 2, scope: !6964)
!6993 = !DILocation(line: 425, column: 9, scope: !6919)
!6994 = !DILocation(line: 425, column: 2, scope: !6919)
!6995 = distinct !DISubprogram(name: "sh_from_disc", scope: !3, file: !3, line: 269, type: !6996, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{null, !7, !6, !7}
!6998 = !DILocalVariable(name: "n", arg: 1, scope: !6995, file: !3, line: 269, type: !7)
!6999 = !DILocation(line: 269, column: 33, scope: !6995)
!7000 = !DILocalVariable(name: "area", arg: 2, scope: !6995, file: !3, line: 269, type: !6)
!7001 = !DILocation(line: 269, column: 42, scope: !6995)
!7002 = !DILocalVariable(name: "shresult", arg: 3, scope: !6995, file: !3, line: 269, type: !7)
!7003 = !DILocation(line: 269, column: 55, scope: !6995)
!7004 = !DILocalVariable(name: "sh", scope: !6995, file: !3, line: 273, type: !116)
!7005 = !DILocation(line: 273, column: 8, scope: !6995)
!7006 = !DILocalVariable(name: "x", scope: !6995, file: !3, line: 273, type: !6)
!7007 = !DILocation(line: 273, column: 15, scope: !6995)
!7008 = !DILocalVariable(name: "y", scope: !6995, file: !3, line: 273, type: !6)
!7009 = !DILocation(line: 273, column: 18, scope: !6995)
!7010 = !DILocalVariable(name: "z", scope: !6995, file: !3, line: 273, type: !6)
!7011 = !DILocation(line: 273, column: 21, scope: !6995)
!7012 = !DILocation(line: 275, column: 6, scope: !6995)
!7013 = !DILocation(line: 275, column: 4, scope: !6995)
!7014 = !DILocation(line: 276, column: 6, scope: !6995)
!7015 = !DILocation(line: 276, column: 4, scope: !6995)
!7016 = !DILocation(line: 277, column: 6, scope: !6995)
!7017 = !DILocation(line: 277, column: 4, scope: !6995)
!7018 = !DILocation(line: 279, column: 2, scope: !6995)
!7019 = !DILocation(line: 279, column: 8, scope: !6995)
!7020 = !DILocation(line: 281, column: 22, scope: !6995)
!7021 = !DILocation(line: 281, column: 20, scope: !6995)
!7022 = !DILocation(line: 281, column: 2, scope: !6995)
!7023 = !DILocation(line: 281, column: 8, scope: !6995)
!7024 = !DILocation(line: 282, column: 22, scope: !6995)
!7025 = !DILocation(line: 282, column: 20, scope: !6995)
!7026 = !DILocation(line: 282, column: 2, scope: !6995)
!7027 = !DILocation(line: 282, column: 8, scope: !6995)
!7028 = !DILocation(line: 283, column: 22, scope: !6995)
!7029 = !DILocation(line: 283, column: 20, scope: !6995)
!7030 = !DILocation(line: 283, column: 2, scope: !6995)
!7031 = !DILocation(line: 283, column: 8, scope: !6995)
!7032 = !DILocation(line: 285, column: 22, scope: !6995)
!7033 = !DILocation(line: 285, column: 20, scope: !6995)
!7034 = !DILocation(line: 285, column: 26, scope: !6995)
!7035 = !DILocation(line: 285, column: 24, scope: !6995)
!7036 = !DILocation(line: 285, column: 2, scope: !6995)
!7037 = !DILocation(line: 285, column: 8, scope: !6995)
!7038 = !DILocation(line: 286, column: 22, scope: !6995)
!7039 = !DILocation(line: 286, column: 20, scope: !6995)
!7040 = !DILocation(line: 286, column: 26, scope: !6995)
!7041 = !DILocation(line: 286, column: 24, scope: !6995)
!7042 = !DILocation(line: 286, column: 2, scope: !6995)
!7043 = !DILocation(line: 286, column: 8, scope: !6995)
!7044 = !DILocation(line: 287, column: 30, scope: !6995)
!7045 = !DILocation(line: 287, column: 28, scope: !6995)
!7046 = !DILocation(line: 287, column: 34, scope: !6995)
!7047 = !DILocation(line: 287, column: 32, scope: !6995)
!7048 = !DILocation(line: 287, column: 36, scope: !6995)
!7049 = !DILocation(line: 287, column: 20, scope: !6995)
!7050 = !DILocation(line: 287, column: 2, scope: !6995)
!7051 = !DILocation(line: 287, column: 8, scope: !6995)
!7052 = !DILocation(line: 288, column: 22, scope: !6995)
!7053 = !DILocation(line: 288, column: 20, scope: !6995)
!7054 = !DILocation(line: 288, column: 26, scope: !6995)
!7055 = !DILocation(line: 288, column: 24, scope: !6995)
!7056 = !DILocation(line: 288, column: 2, scope: !6995)
!7057 = !DILocation(line: 288, column: 8, scope: !6995)
!7058 = !DILocation(line: 289, column: 23, scope: !6995)
!7059 = !DILocation(line: 289, column: 27, scope: !6995)
!7060 = !DILocation(line: 289, column: 25, scope: !6995)
!7061 = !DILocation(line: 289, column: 31, scope: !6995)
!7062 = !DILocation(line: 289, column: 35, scope: !6995)
!7063 = !DILocation(line: 289, column: 33, scope: !6995)
!7064 = !DILocation(line: 289, column: 29, scope: !6995)
!7065 = !DILocation(line: 289, column: 20, scope: !6995)
!7066 = !DILocation(line: 289, column: 2, scope: !6995)
!7067 = !DILocation(line: 289, column: 8, scope: !6995)
!7068 = !DILocation(line: 291, column: 9, scope: !6995)
!7069 = !DILocation(line: 291, column: 13, scope: !6995)
!7070 = !DILocation(line: 291, column: 2, scope: !6995)
!7071 = !DILocation(line: 292, column: 10, scope: !6995)
!7072 = !DILocation(line: 292, column: 20, scope: !6995)
!7073 = !DILocation(line: 292, column: 2, scope: !6995)
!7074 = !DILocation(line: 293, column: 1, scope: !6995)
!7075 = distinct !DISubprogram(name: "sh_mul", scope: !3, file: !3, line: 253, type: !4003, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7076 = !DILocalVariable(name: "sh", arg: 1, scope: !7075, file: !3, line: 253, type: !7)
!7077 = !DILocation(line: 253, column: 27, scope: !7075)
!7078 = !DILocalVariable(name: "f", arg: 2, scope: !7075, file: !3, line: 253, type: !6)
!7079 = !DILocation(line: 253, column: 37, scope: !7075)
!7080 = !DILocalVariable(name: "i", scope: !7075, file: !3, line: 255, type: !12)
!7081 = !DILocation(line: 255, column: 6, scope: !7075)
!7082 = !DILocation(line: 257, column: 9, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 257, column: 2)
!7084 = !DILocation(line: 257, column: 7, scope: !7083)
!7085 = !DILocation(line: 257, column: 14, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 257, column: 2)
!7087 = !DILocation(line: 257, column: 16, scope: !7086)
!7088 = !DILocation(line: 257, column: 2, scope: !7083)
!7089 = !DILocation(line: 258, column: 12, scope: !7086)
!7090 = !DILocation(line: 258, column: 3, scope: !7086)
!7091 = !DILocation(line: 258, column: 6, scope: !7086)
!7092 = !DILocation(line: 258, column: 9, scope: !7086)
!7093 = !DILocation(line: 257, column: 22, scope: !7086)
!7094 = !DILocation(line: 257, column: 2, scope: !7086)
!7095 = distinct !{!7095, !7088, !7096}
!7096 = !DILocation(line: 258, column: 12, scope: !7083)
!7097 = !DILocation(line: 259, column: 1, scope: !7075)
!7098 = distinct !DISubprogram(name: "sh_copy", scope: !3, file: !3, line: 248, type: !7099, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{null, !7, !7}
!7101 = !DILocalVariable(name: "shresult", arg: 1, scope: !7098, file: !3, line: 248, type: !7)
!7102 = !DILocation(line: 248, column: 28, scope: !7098)
!7103 = !DILocalVariable(name: "sh", arg: 2, scope: !7098, file: !3, line: 248, type: !7)
!7104 = !DILocation(line: 248, column: 45, scope: !7098)
!7105 = !DILocation(line: 250, column: 9, scope: !7098)
!7106 = !DILocation(line: 250, column: 2, scope: !7098)
!7107 = !DILocation(line: 250, column: 19, scope: !7098)
!7108 = !DILocation(line: 251, column: 1, scope: !7098)
!7109 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3969, file: !3969, line: 357, type: !7110, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{null, !7, !3972, !3972}
!7112 = !DILocalVariable(name: "r", arg: 1, scope: !7109, file: !3969, line: 357, type: !7)
!7113 = !DILocation(line: 357, column: 32, scope: !7109)
!7114 = !DILocalVariable(name: "a", arg: 2, scope: !7109, file: !3969, line: 357, type: !3972)
!7115 = !DILocation(line: 357, column: 50, scope: !7109)
!7116 = !DILocalVariable(name: "b", arg: 3, scope: !7109, file: !3969, line: 357, type: !3972)
!7117 = !DILocation(line: 357, column: 68, scope: !7109)
!7118 = !DILocation(line: 359, column: 9, scope: !7109)
!7119 = !DILocation(line: 359, column: 16, scope: !7109)
!7120 = !DILocation(line: 359, column: 14, scope: !7109)
!7121 = !DILocation(line: 359, column: 2, scope: !7109)
!7122 = !DILocation(line: 359, column: 7, scope: !7109)
!7123 = !DILocation(line: 360, column: 9, scope: !7109)
!7124 = !DILocation(line: 360, column: 16, scope: !7109)
!7125 = !DILocation(line: 360, column: 14, scope: !7109)
!7126 = !DILocation(line: 360, column: 2, scope: !7109)
!7127 = !DILocation(line: 360, column: 7, scope: !7109)
!7128 = !DILocation(line: 361, column: 9, scope: !7109)
!7129 = !DILocation(line: 361, column: 16, scope: !7109)
!7130 = !DILocation(line: 361, column: 14, scope: !7109)
!7131 = !DILocation(line: 361, column: 2, scope: !7109)
!7132 = !DILocation(line: 361, column: 7, scope: !7109)
!7133 = !DILocation(line: 362, column: 1, scope: !7109)
!7134 = distinct !DISubprogram(name: "occ_shade", scope: !3, file: !3, line: 142, type: !7135, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{null, !5315, !3212, !3222, !7}
!7137 = !DILocalVariable(name: "ssamp", arg: 1, scope: !7134, file: !3, line: 142, type: !5315)
!7138 = !DILocation(line: 142, column: 36, scope: !7134)
!7139 = !DILocalVariable(name: "obi", arg: 2, scope: !7134, file: !3, line: 142, type: !3212)
!7140 = !DILocation(line: 142, column: 62, scope: !7134)
!7141 = !DILocalVariable(name: "vlr", arg: 3, scope: !7134, file: !3, line: 142, type: !3222)
!7142 = !DILocation(line: 142, column: 76, scope: !7134)
!7143 = !DILocalVariable(name: "rad", arg: 4, scope: !7134, file: !3, line: 142, type: !7)
!7144 = !DILocation(line: 142, column: 88, scope: !7134)
!7145 = !DILocalVariable(name: "shi", scope: !7134, file: !3, line: 144, type: !4109)
!7146 = !DILocation(line: 144, column: 14, scope: !7134)
!7147 = !DILocation(line: 144, column: 20, scope: !7134)
!7148 = !DILocation(line: 144, column: 27, scope: !7134)
!7149 = !DILocalVariable(name: "shr", scope: !7134, file: !3, line: 145, type: !7150)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!7151 = !DILocation(line: 145, column: 15, scope: !7134)
!7152 = !DILocation(line: 145, column: 21, scope: !7134)
!7153 = !DILocation(line: 145, column: 28, scope: !7134)
!7154 = !DILocalVariable(name: "l", scope: !7134, file: !3, line: 146, type: !6)
!7155 = !DILocation(line: 146, column: 8, scope: !7134)
!7156 = !DILocalVariable(name: "u", scope: !7134, file: !3, line: 146, type: !6)
!7157 = !DILocation(line: 146, column: 11, scope: !7134)
!7158 = !DILocalVariable(name: "v", scope: !7134, file: !3, line: 146, type: !6)
!7159 = !DILocation(line: 146, column: 14, scope: !7134)
!7160 = !DILocalVariable(name: "v1", scope: !7134, file: !3, line: 146, type: !7)
!7161 = !DILocation(line: 146, column: 18, scope: !7134)
!7162 = !DILocalVariable(name: "v2", scope: !7134, file: !3, line: 146, type: !7)
!7163 = !DILocation(line: 146, column: 23, scope: !7134)
!7164 = !DILocalVariable(name: "v3", scope: !7134, file: !3, line: 146, type: !7)
!7165 = !DILocation(line: 146, column: 28, scope: !7134)
!7166 = !DILocation(line: 149, column: 6, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 149, column: 6)
!7168 = !DILocation(line: 149, column: 11, scope: !7167)
!7169 = !DILocation(line: 149, column: 6, scope: !7134)
!7170 = !DILocation(line: 150, column: 14, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 149, column: 15)
!7172 = !DILocation(line: 150, column: 3, scope: !7171)
!7173 = !DILocation(line: 150, column: 8, scope: !7171)
!7174 = !DILocation(line: 150, column: 10, scope: !7171)
!7175 = !DILocation(line: 151, column: 14, scope: !7171)
!7176 = !DILocation(line: 151, column: 3, scope: !7171)
!7177 = !DILocation(line: 151, column: 8, scope: !7171)
!7178 = !DILocation(line: 151, column: 10, scope: !7171)
!7179 = !DILocation(line: 152, column: 2, scope: !7171)
!7180 = !DILocation(line: 154, column: 14, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 153, column: 7)
!7182 = !DILocation(line: 154, column: 3, scope: !7181)
!7183 = !DILocation(line: 154, column: 8, scope: !7181)
!7184 = !DILocation(line: 154, column: 10, scope: !7181)
!7185 = !DILocation(line: 155, column: 14, scope: !7181)
!7186 = !DILocation(line: 155, column: 3, scope: !7181)
!7187 = !DILocation(line: 155, column: 8, scope: !7181)
!7188 = !DILocation(line: 155, column: 10, scope: !7181)
!7189 = !DILocation(line: 159, column: 7, scope: !7134)
!7190 = !DILocation(line: 159, column: 12, scope: !7134)
!7191 = !DILocation(line: 159, column: 16, scope: !7134)
!7192 = !DILocation(line: 159, column: 5, scope: !7134)
!7193 = !DILocation(line: 160, column: 7, scope: !7134)
!7194 = !DILocation(line: 160, column: 12, scope: !7134)
!7195 = !DILocation(line: 160, column: 16, scope: !7134)
!7196 = !DILocation(line: 160, column: 5, scope: !7134)
!7197 = !DILocation(line: 161, column: 7, scope: !7134)
!7198 = !DILocation(line: 161, column: 12, scope: !7134)
!7199 = !DILocation(line: 161, column: 16, scope: !7134)
!7200 = !DILocation(line: 161, column: 5, scope: !7134)
!7201 = !DILocation(line: 164, column: 13, scope: !7134)
!7202 = !DILocation(line: 164, column: 11, scope: !7134)
!7203 = !DILocation(line: 164, column: 17, scope: !7134)
!7204 = !DILocation(line: 164, column: 15, scope: !7134)
!7205 = !DILocation(line: 164, column: 4, scope: !7134)
!7206 = !DILocation(line: 166, column: 15, scope: !7134)
!7207 = !DILocation(line: 166, column: 19, scope: !7134)
!7208 = !DILocation(line: 166, column: 17, scope: !7134)
!7209 = !DILocation(line: 166, column: 27, scope: !7134)
!7210 = !DILocation(line: 166, column: 31, scope: !7134)
!7211 = !DILocation(line: 166, column: 29, scope: !7134)
!7212 = !DILocation(line: 166, column: 25, scope: !7134)
!7213 = !DILocation(line: 166, column: 39, scope: !7134)
!7214 = !DILocation(line: 166, column: 43, scope: !7134)
!7215 = !DILocation(line: 166, column: 41, scope: !7134)
!7216 = !DILocation(line: 166, column: 37, scope: !7134)
!7217 = !DILocation(line: 166, column: 2, scope: !7134)
!7218 = !DILocation(line: 166, column: 7, scope: !7134)
!7219 = !DILocation(line: 166, column: 13, scope: !7134)
!7220 = !DILocation(line: 167, column: 15, scope: !7134)
!7221 = !DILocation(line: 167, column: 19, scope: !7134)
!7222 = !DILocation(line: 167, column: 17, scope: !7134)
!7223 = !DILocation(line: 167, column: 27, scope: !7134)
!7224 = !DILocation(line: 167, column: 31, scope: !7134)
!7225 = !DILocation(line: 167, column: 29, scope: !7134)
!7226 = !DILocation(line: 167, column: 25, scope: !7134)
!7227 = !DILocation(line: 167, column: 39, scope: !7134)
!7228 = !DILocation(line: 167, column: 43, scope: !7134)
!7229 = !DILocation(line: 167, column: 41, scope: !7134)
!7230 = !DILocation(line: 167, column: 37, scope: !7134)
!7231 = !DILocation(line: 167, column: 2, scope: !7134)
!7232 = !DILocation(line: 167, column: 7, scope: !7134)
!7233 = !DILocation(line: 167, column: 13, scope: !7134)
!7234 = !DILocation(line: 168, column: 15, scope: !7134)
!7235 = !DILocation(line: 168, column: 19, scope: !7134)
!7236 = !DILocation(line: 168, column: 17, scope: !7134)
!7237 = !DILocation(line: 168, column: 27, scope: !7134)
!7238 = !DILocation(line: 168, column: 31, scope: !7134)
!7239 = !DILocation(line: 168, column: 29, scope: !7134)
!7240 = !DILocation(line: 168, column: 25, scope: !7134)
!7241 = !DILocation(line: 168, column: 39, scope: !7134)
!7242 = !DILocation(line: 168, column: 43, scope: !7134)
!7243 = !DILocation(line: 168, column: 41, scope: !7134)
!7244 = !DILocation(line: 168, column: 37, scope: !7134)
!7245 = !DILocation(line: 168, column: 2, scope: !7134)
!7246 = !DILocation(line: 168, column: 7, scope: !7134)
!7247 = !DILocation(line: 168, column: 13, scope: !7134)
!7248 = !DILocation(line: 170, column: 29, scope: !7134)
!7249 = !DILocation(line: 170, column: 34, scope: !7134)
!7250 = !DILocation(line: 170, column: 39, scope: !7134)
!7251 = !DILocation(line: 170, column: 2, scope: !7134)
!7252 = !DILocation(line: 173, column: 13, scope: !7134)
!7253 = !DILocation(line: 173, column: 18, scope: !7134)
!7254 = !DILocation(line: 173, column: 24, scope: !7134)
!7255 = !DILocation(line: 173, column: 29, scope: !7134)
!7256 = !DILocation(line: 173, column: 2, scope: !7134)
!7257 = !DILocation(line: 174, column: 15, scope: !7134)
!7258 = !DILocation(line: 174, column: 20, scope: !7134)
!7259 = !DILocation(line: 174, column: 2, scope: !7134)
!7260 = !DILocation(line: 177, column: 2, scope: !7134)
!7261 = !DILocation(line: 177, column: 7, scope: !7134)
!7262 = !DILocation(line: 177, column: 15, scope: !7134)
!7263 = !DILocation(line: 179, column: 2, scope: !7134)
!7264 = !DILocation(line: 179, column: 7, scope: !7134)
!7265 = !DILocation(line: 179, column: 10, scope: !7134)
!7266 = !DILocation(line: 180, column: 2, scope: !7134)
!7267 = !DILocation(line: 180, column: 7, scope: !7134)
!7268 = !DILocation(line: 180, column: 10, scope: !7134)
!7269 = !DILocation(line: 182, column: 26, scope: !7134)
!7270 = !DILocation(line: 182, column: 2, scope: !7134)
!7271 = !DILocation(line: 185, column: 6, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 185, column: 6)
!7273 = !DILocation(line: 185, column: 11, scope: !7272)
!7274 = !DILocation(line: 185, column: 6, scope: !7134)
!7275 = !DILocation(line: 186, column: 28, scope: !7272)
!7276 = !DILocation(line: 186, column: 3, scope: !7272)
!7277 = !DILocation(line: 188, column: 15, scope: !7134)
!7278 = !DILocation(line: 188, column: 20, scope: !7134)
!7279 = !DILocation(line: 188, column: 24, scope: !7134)
!7280 = !DILocation(line: 188, column: 29, scope: !7134)
!7281 = !DILocation(line: 188, column: 2, scope: !7134)
!7282 = !DILocation(line: 191, column: 6, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 191, column: 6)
!7284 = !DILocation(line: 191, column: 11, scope: !7283)
!7285 = !DILocation(line: 191, column: 16, scope: !7283)
!7286 = !DILocation(line: 191, column: 19, scope: !7283)
!7287 = !DILocation(line: 191, column: 22, scope: !7283)
!7288 = !DILocation(line: 191, column: 27, scope: !7283)
!7289 = !DILocation(line: 191, column: 32, scope: !7283)
!7290 = !DILocation(line: 191, column: 36, scope: !7283)
!7291 = !DILocation(line: 191, column: 46, scope: !7283)
!7292 = !DILocation(line: 191, column: 6, scope: !7134)
!7293 = !DILocation(line: 192, column: 13, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 191, column: 62)
!7295 = !DILocation(line: 192, column: 18, scope: !7294)
!7296 = !DILocation(line: 192, column: 3, scope: !7294)
!7297 = !DILocation(line: 193, column: 13, scope: !7294)
!7298 = !DILocation(line: 193, column: 18, scope: !7294)
!7299 = !DILocation(line: 193, column: 3, scope: !7294)
!7300 = !DILocation(line: 194, column: 13, scope: !7294)
!7301 = !DILocation(line: 194, column: 18, scope: !7294)
!7302 = !DILocation(line: 194, column: 3, scope: !7294)
!7303 = !DILocation(line: 195, column: 2, scope: !7294)
!7304 = !DILocation(line: 198, column: 28, scope: !7134)
!7305 = !DILocation(line: 198, column: 2, scope: !7134)
!7306 = !DILocation(line: 201, column: 30, scope: !7134)
!7307 = !DILocation(line: 201, column: 2, scope: !7134)
!7308 = !DILocation(line: 203, column: 6, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7134, file: !3, line: 203, column: 6)
!7310 = !DILocation(line: 203, column: 11, scope: !7309)
!7311 = !DILocation(line: 203, column: 16, scope: !7309)
!7312 = !DILocation(line: 203, column: 25, scope: !7309)
!7313 = !DILocation(line: 203, column: 28, scope: !7309)
!7314 = !DILocation(line: 203, column: 33, scope: !7309)
!7315 = !DILocation(line: 203, column: 38, scope: !7309)
!7316 = !DILocation(line: 203, column: 6, scope: !7134)
!7317 = !DILocation(line: 204, column: 23, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 203, column: 49)
!7319 = !DILocation(line: 204, column: 28, scope: !7318)
!7320 = !DILocation(line: 204, column: 33, scope: !7318)
!7321 = !DILocation(line: 204, column: 43, scope: !7318)
!7322 = !DILocation(line: 204, column: 48, scope: !7318)
!7323 = !DILocation(line: 204, column: 3, scope: !7318)
!7324 = !DILocation(line: 205, column: 14, scope: !7318)
!7325 = !DILocation(line: 205, column: 19, scope: !7318)
!7326 = !DILocation(line: 205, column: 3, scope: !7318)
!7327 = !DILocation(line: 205, column: 8, scope: !7318)
!7328 = !DILocation(line: 205, column: 12, scope: !7318)
!7329 = !DILocation(line: 206, column: 2, scope: !7318)
!7330 = !DILocation(line: 208, column: 23, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 207, column: 7)
!7332 = !DILocation(line: 208, column: 28, scope: !7331)
!7333 = !DILocation(line: 208, column: 3, scope: !7331)
!7334 = !DILocation(line: 211, column: 13, scope: !7134)
!7335 = !DILocation(line: 211, column: 18, scope: !7134)
!7336 = !DILocation(line: 211, column: 23, scope: !7134)
!7337 = !DILocation(line: 211, column: 2, scope: !7134)
!7338 = !DILocation(line: 212, column: 1, scope: !7134)
!7339 = distinct !DISubprogram(name: "normalize_v3", scope: !3969, file: !3969, line: 830, type: !7340, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!6, !7}
!7342 = !DILocalVariable(name: "n", arg: 1, scope: !7339, file: !3969, line: 830, type: !7)
!7343 = !DILocation(line: 830, column: 34, scope: !7339)
!7344 = !DILocation(line: 832, column: 25, scope: !7339)
!7345 = !DILocation(line: 832, column: 28, scope: !7339)
!7346 = !DILocation(line: 832, column: 9, scope: !7339)
!7347 = !DILocation(line: 832, column: 2, scope: !7339)
!7348 = distinct !DISubprogram(name: "negate_v3", scope: !3969, file: !3969, line: 576, type: !7349, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{null, !7}
!7351 = !DILocalVariable(name: "r", arg: 1, scope: !7348, file: !3969, line: 576, type: !7)
!7352 = !DILocation(line: 576, column: 30, scope: !7348)
!7353 = !DILocation(line: 578, column: 10, scope: !7348)
!7354 = !DILocation(line: 578, column: 9, scope: !7348)
!7355 = !DILocation(line: 578, column: 2, scope: !7348)
!7356 = !DILocation(line: 578, column: 7, scope: !7348)
!7357 = !DILocation(line: 579, column: 10, scope: !7348)
!7358 = !DILocation(line: 579, column: 9, scope: !7348)
!7359 = !DILocation(line: 579, column: 2, scope: !7348)
!7360 = !DILocation(line: 579, column: 7, scope: !7348)
!7361 = !DILocation(line: 580, column: 10, scope: !7348)
!7362 = !DILocation(line: 580, column: 9, scope: !7348)
!7363 = !DILocation(line: 580, column: 2, scope: !7348)
!7364 = !DILocation(line: 580, column: 7, scope: !7348)
!7365 = !DILocation(line: 581, column: 1, scope: !7348)
!7366 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3969, file: !3969, line: 788, type: !7367, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{!6, !7, !3972}
!7369 = !DILocalVariable(name: "r", arg: 1, scope: !7366, file: !3969, line: 788, type: !7)
!7370 = !DILocation(line: 788, column: 37, scope: !7366)
!7371 = !DILocalVariable(name: "a", arg: 2, scope: !7366, file: !3969, line: 788, type: !3972)
!7372 = !DILocation(line: 788, column: 55, scope: !7366)
!7373 = !DILocalVariable(name: "d", scope: !7366, file: !3969, line: 790, type: !6)
!7374 = !DILocation(line: 790, column: 8, scope: !7366)
!7375 = !DILocation(line: 790, column: 21, scope: !7366)
!7376 = !DILocation(line: 790, column: 24, scope: !7366)
!7377 = !DILocation(line: 790, column: 12, scope: !7366)
!7378 = !DILocation(line: 794, column: 6, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7366, file: !3969, line: 794, column: 6)
!7380 = !DILocation(line: 794, column: 8, scope: !7379)
!7381 = !DILocation(line: 794, column: 6, scope: !7366)
!7382 = !DILocation(line: 795, column: 13, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7379, file: !3969, line: 794, column: 20)
!7384 = !DILocation(line: 795, column: 7, scope: !7383)
!7385 = !DILocation(line: 795, column: 5, scope: !7383)
!7386 = !DILocation(line: 796, column: 15, scope: !7383)
!7387 = !DILocation(line: 796, column: 18, scope: !7383)
!7388 = !DILocation(line: 796, column: 28, scope: !7383)
!7389 = !DILocation(line: 796, column: 26, scope: !7383)
!7390 = !DILocation(line: 796, column: 3, scope: !7383)
!7391 = !DILocation(line: 797, column: 2, scope: !7383)
!7392 = !DILocation(line: 799, column: 11, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7379, file: !3969, line: 798, column: 7)
!7394 = !DILocation(line: 799, column: 3, scope: !7393)
!7395 = !DILocation(line: 800, column: 5, scope: !7393)
!7396 = !DILocation(line: 803, column: 9, scope: !7366)
!7397 = !DILocation(line: 803, column: 2, scope: !7366)
!7398 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3969, file: !3969, line: 399, type: !6725, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7399 = !DILocalVariable(name: "r", arg: 1, scope: !7398, file: !3969, line: 399, type: !7)
!7400 = !DILocation(line: 399, column: 32, scope: !7398)
!7401 = !DILocalVariable(name: "a", arg: 2, scope: !7398, file: !3969, line: 399, type: !3972)
!7402 = !DILocation(line: 399, column: 50, scope: !7398)
!7403 = !DILocalVariable(name: "f", arg: 3, scope: !7398, file: !3969, line: 399, type: !6)
!7404 = !DILocation(line: 399, column: 62, scope: !7398)
!7405 = !DILocation(line: 401, column: 9, scope: !7398)
!7406 = !DILocation(line: 401, column: 16, scope: !7398)
!7407 = !DILocation(line: 401, column: 14, scope: !7398)
!7408 = !DILocation(line: 401, column: 2, scope: !7398)
!7409 = !DILocation(line: 401, column: 7, scope: !7398)
!7410 = !DILocation(line: 402, column: 9, scope: !7398)
!7411 = !DILocation(line: 402, column: 16, scope: !7398)
!7412 = !DILocation(line: 402, column: 14, scope: !7398)
!7413 = !DILocation(line: 402, column: 2, scope: !7398)
!7414 = !DILocation(line: 402, column: 7, scope: !7398)
!7415 = !DILocation(line: 403, column: 9, scope: !7398)
!7416 = !DILocation(line: 403, column: 16, scope: !7398)
!7417 = !DILocation(line: 403, column: 14, scope: !7398)
!7418 = !DILocation(line: 403, column: 2, scope: !7398)
!7419 = !DILocation(line: 403, column: 7, scope: !7398)
!7420 = !DILocation(line: 404, column: 1, scope: !7398)
!7421 = distinct !DISubprogram(name: "zero_v3", scope: !3969, file: !3969, line: 43, type: !7349, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7422 = !DILocalVariable(name: "r", arg: 1, scope: !7421, file: !3969, line: 43, type: !7)
!7423 = !DILocation(line: 43, column: 28, scope: !7421)
!7424 = !DILocation(line: 45, column: 2, scope: !7421)
!7425 = !DILocation(line: 45, column: 7, scope: !7421)
!7426 = !DILocation(line: 46, column: 2, scope: !7421)
!7427 = !DILocation(line: 46, column: 7, scope: !7421)
!7428 = !DILocation(line: 47, column: 2, scope: !7421)
!7429 = !DILocation(line: 47, column: 7, scope: !7421)
!7430 = !DILocation(line: 48, column: 1, scope: !7421)
!7431 = distinct !DISubprogram(name: "occ_lookup", scope: !3, file: !3, line: 813, type: !7432, scopeLine: 815, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{null, !85, !12, !100, !3972, !3972, !7, !7, !7}
!7434 = !DILocalVariable(name: "tree", arg: 1, scope: !7431, file: !3, line: 813, type: !85)
!7435 = !DILocation(line: 813, column: 39, scope: !7431)
!7436 = !DILocalVariable(name: "thread", arg: 2, scope: !7431, file: !3, line: 813, type: !12)
!7437 = !DILocation(line: 813, column: 49, scope: !7431)
!7438 = !DILocalVariable(name: "exclude", arg: 3, scope: !7431, file: !3, line: 813, type: !100)
!7439 = !DILocation(line: 813, column: 66, scope: !7431)
!7440 = !DILocalVariable(name: "pp", arg: 4, scope: !7431, file: !3, line: 814, type: !3972)
!7441 = !DILocation(line: 814, column: 36, scope: !7431)
!7442 = !DILocalVariable(name: "pn", arg: 5, scope: !7431, file: !3, line: 814, type: !3972)
!7443 = !DILocation(line: 814, column: 55, scope: !7431)
!7444 = !DILocalVariable(name: "occ", arg: 6, scope: !7431, file: !3, line: 814, type: !7)
!7445 = !DILocation(line: 814, column: 69, scope: !7431)
!7446 = !DILocalVariable(name: "rad", arg: 7, scope: !7431, file: !3, line: 814, type: !7)
!7447 = !DILocation(line: 814, column: 80, scope: !7431)
!7448 = !DILocalVariable(name: "bentn", arg: 8, scope: !7431, file: !3, line: 814, type: !7)
!7449 = !DILocation(line: 814, column: 94, scope: !7431)
!7450 = !DILocalVariable(name: "node", scope: !7431, file: !3, line: 816, type: !109)
!7451 = !DILocation(line: 816, column: 11, scope: !7431)
!7452 = !DILocalVariable(name: "stack", scope: !7431, file: !3, line: 816, type: !134)
!7453 = !DILocation(line: 816, column: 19, scope: !7431)
!7454 = !DILocalVariable(name: "face", scope: !7431, file: !3, line: 817, type: !100)
!7455 = !DILocation(line: 817, column: 11, scope: !7431)
!7456 = !DILocalVariable(name: "resultocc", scope: !7431, file: !3, line: 818, type: !6)
!7457 = !DILocation(line: 818, column: 8, scope: !7431)
!7458 = !DILocalVariable(name: "resultrad", scope: !7431, file: !3, line: 818, type: !96)
!7459 = !DILocation(line: 818, column: 19, scope: !7431)
!7460 = !DILocalVariable(name: "v", scope: !7431, file: !3, line: 818, type: !96)
!7461 = !DILocation(line: 818, column: 33, scope: !7431)
!7462 = !DILocalVariable(name: "p", scope: !7431, file: !3, line: 818, type: !96)
!7463 = !DILocation(line: 818, column: 39, scope: !7431)
!7464 = !DILocalVariable(name: "n", scope: !7431, file: !3, line: 818, type: !96)
!7465 = !DILocation(line: 818, column: 45, scope: !7431)
!7466 = !DILocalVariable(name: "co", scope: !7431, file: !3, line: 818, type: !96)
!7467 = !DILocation(line: 818, column: 51, scope: !7431)
!7468 = !DILocalVariable(name: "invd2", scope: !7431, file: !3, line: 818, type: !6)
!7469 = !DILocation(line: 818, column: 58, scope: !7431)
!7470 = !DILocalVariable(name: "distfac", scope: !7431, file: !3, line: 819, type: !6)
!7471 = !DILocation(line: 819, column: 8, scope: !7431)
!7472 = !DILocalVariable(name: "fac", scope: !7431, file: !3, line: 819, type: !6)
!7473 = !DILocation(line: 819, column: 17, scope: !7431)
!7474 = !DILocalVariable(name: "error", scope: !7431, file: !3, line: 819, type: !6)
!7475 = !DILocation(line: 819, column: 22, scope: !7431)
!7476 = !DILocalVariable(name: "d2", scope: !7431, file: !3, line: 819, type: !6)
!7477 = !DILocation(line: 819, column: 29, scope: !7431)
!7478 = !DILocalVariable(name: "weight", scope: !7431, file: !3, line: 819, type: !6)
!7479 = !DILocation(line: 819, column: 33, scope: !7431)
!7480 = !DILocalVariable(name: "emitarea", scope: !7431, file: !3, line: 819, type: !6)
!7481 = !DILocation(line: 819, column: 41, scope: !7431)
!7482 = !DILocalVariable(name: "b", scope: !7431, file: !3, line: 820, type: !12)
!7483 = !DILocation(line: 820, column: 6, scope: !7431)
!7484 = !DILocalVariable(name: "f", scope: !7431, file: !3, line: 820, type: !12)
!7485 = !DILocation(line: 820, column: 9, scope: !7431)
!7486 = !DILocalVariable(name: "totstack", scope: !7431, file: !3, line: 820, type: !12)
!7487 = !DILocation(line: 820, column: 12, scope: !7431)
!7488 = !DILocation(line: 823, column: 13, scope: !7431)
!7489 = !DILocation(line: 823, column: 16, scope: !7431)
!7490 = !DILocation(line: 823, column: 2, scope: !7431)
!7491 = !DILocation(line: 824, column: 13, scope: !7431)
!7492 = !DILocation(line: 824, column: 16, scope: !7431)
!7493 = !DILocation(line: 824, column: 2, scope: !7431)
!7494 = !DILocation(line: 825, column: 15, scope: !7431)
!7495 = !DILocation(line: 825, column: 18, scope: !7431)
!7496 = !DILocation(line: 825, column: 2, scope: !7431)
!7497 = !DILocation(line: 827, column: 6, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 827, column: 6)
!7499 = !DILocation(line: 827, column: 6, scope: !7431)
!7500 = !DILocation(line: 828, column: 14, scope: !7498)
!7501 = !DILocation(line: 828, column: 21, scope: !7498)
!7502 = !DILocation(line: 828, column: 3, scope: !7498)
!7503 = !DILocation(line: 830, column: 10, scope: !7431)
!7504 = !DILocation(line: 830, column: 16, scope: !7431)
!7505 = !DILocation(line: 830, column: 8, scope: !7431)
!7506 = !DILocation(line: 831, column: 12, scope: !7431)
!7507 = !DILocation(line: 831, column: 18, scope: !7431)
!7508 = !DILocation(line: 831, column: 10, scope: !7431)
!7509 = !DILocation(line: 833, column: 12, scope: !7431)
!7510 = !DILocation(line: 834, column: 10, scope: !7431)
!7511 = !DILocation(line: 834, column: 2, scope: !7431)
!7512 = !DILocation(line: 837, column: 10, scope: !7431)
!7513 = !DILocation(line: 837, column: 16, scope: !7431)
!7514 = !DILocation(line: 837, column: 22, scope: !7431)
!7515 = !DILocation(line: 837, column: 8, scope: !7431)
!7516 = !DILocation(line: 838, column: 13, scope: !7431)
!7517 = !DILocation(line: 838, column: 19, scope: !7431)
!7518 = !DILocation(line: 838, column: 2, scope: !7431)
!7519 = !DILocation(line: 838, column: 11, scope: !7431)
!7520 = !DILocation(line: 839, column: 11, scope: !7431)
!7521 = !DILocation(line: 841, column: 2, scope: !7431)
!7522 = !DILocation(line: 841, column: 9, scope: !7431)
!7523 = !DILocation(line: 843, column: 10, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 841, column: 19)
!7525 = !DILocation(line: 843, column: 16, scope: !7524)
!7526 = !DILocation(line: 843, column: 8, scope: !7524)
!7527 = !DILocation(line: 845, column: 15, scope: !7524)
!7528 = !DILocation(line: 845, column: 18, scope: !7524)
!7529 = !DILocation(line: 845, column: 24, scope: !7524)
!7530 = !DILocation(line: 845, column: 28, scope: !7524)
!7531 = !DILocation(line: 845, column: 3, scope: !7524)
!7532 = !DILocation(line: 846, column: 17, scope: !7524)
!7533 = !DILocation(line: 846, column: 20, scope: !7524)
!7534 = !DILocation(line: 846, column: 8, scope: !7524)
!7535 = !DILocation(line: 846, column: 23, scope: !7524)
!7536 = !DILocation(line: 846, column: 6, scope: !7524)
!7537 = !DILocation(line: 847, column: 14, scope: !7524)
!7538 = !DILocation(line: 847, column: 12, scope: !7524)
!7539 = !DILocation(line: 849, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 849, column: 7)
!7541 = !DILocation(line: 849, column: 12, scope: !7540)
!7542 = !DILocation(line: 849, column: 10, scope: !7540)
!7543 = !DILocation(line: 849, column: 20, scope: !7540)
!7544 = !DILocation(line: 849, column: 18, scope: !7540)
!7545 = !DILocation(line: 849, column: 7, scope: !7524)
!7546 = !DILocation(line: 850, column: 8, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 850, column: 8)
!7548 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 849, column: 30)
!7549 = !DILocation(line: 850, column: 16, scope: !7547)
!7550 = !DILocation(line: 850, column: 8, scope: !7548)
!7551 = !DILocation(line: 851, column: 26, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 850, column: 25)
!7553 = !DILocation(line: 851, column: 36, scope: !7552)
!7554 = !DILocation(line: 851, column: 34, scope: !7552)
!7555 = !DILocation(line: 851, column: 24, scope: !7552)
!7556 = !DILocation(line: 851, column: 16, scope: !7552)
!7557 = !DILocation(line: 851, column: 9, scope: !7552)
!7558 = !DILocation(line: 852, column: 9, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 852, column: 9)
!7560 = !DILocation(line: 852, column: 13, scope: !7559)
!7561 = !DILocation(line: 852, column: 9, scope: !7552)
!7562 = !DILocation(line: 853, column: 6, scope: !7559)
!7563 = distinct !{!7563, !7521, !7564}
!7564 = !DILocation(line: 919, column: 2, scope: !7431)
!7565 = !DILocation(line: 854, column: 4, scope: !7552)
!7566 = !DILocation(line: 856, column: 9, scope: !7547)
!7567 = !DILocation(line: 859, column: 25, scope: !7548)
!7568 = !DILocation(line: 859, column: 19, scope: !7548)
!7569 = !DILocation(line: 859, column: 17, scope: !7548)
!7570 = !DILocation(line: 859, column: 10, scope: !7548)
!7571 = !DILocation(line: 860, column: 29, scope: !7548)
!7572 = !DILocation(line: 860, column: 35, scope: !7548)
!7573 = !DILocation(line: 860, column: 38, scope: !7548)
!7574 = !DILocation(line: 860, column: 42, scope: !7548)
!7575 = !DILocation(line: 860, column: 49, scope: !7548)
!7576 = !DILocation(line: 860, column: 13, scope: !7548)
!7577 = !DILocation(line: 860, column: 11, scope: !7548)
!7578 = !DILocation(line: 862, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 862, column: 8)
!7580 = !DILocation(line: 862, column: 8, scope: !7548)
!7581 = !DILocation(line: 863, column: 18, scope: !7579)
!7582 = !DILocation(line: 863, column: 29, scope: !7579)
!7583 = !DILocation(line: 863, column: 35, scope: !7579)
!7584 = !DILocation(line: 863, column: 40, scope: !7579)
!7585 = !DILocation(line: 863, column: 49, scope: !7579)
!7586 = !DILocation(line: 863, column: 47, scope: !7579)
!7587 = !DILocation(line: 863, column: 5, scope: !7579)
!7588 = !DILocation(line: 865, column: 14, scope: !7548)
!7589 = !DILocation(line: 865, column: 20, scope: !7548)
!7590 = !DILocation(line: 865, column: 11, scope: !7548)
!7591 = !DILocation(line: 867, column: 8, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 867, column: 8)
!7593 = !DILocation(line: 867, column: 8, scope: !7548)
!7594 = !DILocation(line: 868, column: 17, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 867, column: 15)
!7596 = !DILocation(line: 868, column: 26, scope: !7595)
!7597 = !DILocation(line: 868, column: 24, scope: !7595)
!7598 = !DILocation(line: 868, column: 34, scope: !7595)
!7599 = !DILocation(line: 868, column: 32, scope: !7595)
!7600 = !DILocation(line: 868, column: 5, scope: !7595)
!7601 = !DILocation(line: 868, column: 14, scope: !7595)
!7602 = !DILocation(line: 869, column: 17, scope: !7595)
!7603 = !DILocation(line: 869, column: 26, scope: !7595)
!7604 = !DILocation(line: 869, column: 24, scope: !7595)
!7605 = !DILocation(line: 869, column: 34, scope: !7595)
!7606 = !DILocation(line: 869, column: 32, scope: !7595)
!7607 = !DILocation(line: 869, column: 5, scope: !7595)
!7608 = !DILocation(line: 869, column: 14, scope: !7595)
!7609 = !DILocation(line: 870, column: 17, scope: !7595)
!7610 = !DILocation(line: 870, column: 26, scope: !7595)
!7611 = !DILocation(line: 870, column: 24, scope: !7595)
!7612 = !DILocation(line: 870, column: 34, scope: !7595)
!7613 = !DILocation(line: 870, column: 32, scope: !7595)
!7614 = !DILocation(line: 870, column: 5, scope: !7595)
!7615 = !DILocation(line: 870, column: 14, scope: !7595)
!7616 = !DILocation(line: 871, column: 4, scope: !7595)
!7617 = !DILocation(line: 873, column: 17, scope: !7548)
!7618 = !DILocation(line: 873, column: 26, scope: !7548)
!7619 = !DILocation(line: 873, column: 24, scope: !7548)
!7620 = !DILocation(line: 873, column: 14, scope: !7548)
!7621 = !DILocation(line: 874, column: 3, scope: !7548)
!7622 = !DILocation(line: 877, column: 11, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 877, column: 4)
!7624 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 875, column: 8)
!7625 = !DILocation(line: 877, column: 9, scope: !7623)
!7626 = !DILocation(line: 877, column: 16, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 877, column: 4)
!7628 = !DILocation(line: 877, column: 18, scope: !7627)
!7629 = !DILocation(line: 877, column: 4, scope: !7623)
!7630 = !DILocation(line: 878, column: 9, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 878, column: 9)
!7632 = distinct !DILexicalBlock(scope: !7627, file: !3, line: 877, column: 35)
!7633 = !DILocation(line: 878, column: 15, scope: !7631)
!7634 = !DILocation(line: 878, column: 33, scope: !7631)
!7635 = !DILocation(line: 878, column: 30, scope: !7631)
!7636 = !DILocation(line: 878, column: 25, scope: !7631)
!7637 = !DILocation(line: 878, column: 9, scope: !7632)
!7638 = !DILocation(line: 879, column: 10, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 878, column: 37)
!7640 = !DILocation(line: 879, column: 16, scope: !7639)
!7641 = !DILocation(line: 879, column: 22, scope: !7639)
!7642 = !DILocation(line: 879, column: 25, scope: !7639)
!7643 = !DILocation(line: 879, column: 8, scope: !7639)
!7644 = !DILocation(line: 880, column: 14, scope: !7639)
!7645 = !DILocation(line: 880, column: 20, scope: !7639)
!7646 = !DILocation(line: 880, column: 25, scope: !7639)
!7647 = !DILocation(line: 880, column: 11, scope: !7639)
!7648 = !DILocation(line: 883, column: 11, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 883, column: 10)
!7650 = !DILocation(line: 883, column: 19, scope: !7649)
!7651 = !DILocation(line: 883, column: 24, scope: !7649)
!7652 = !DILocation(line: 883, column: 30, scope: !7649)
!7653 = !DILocation(line: 883, column: 37, scope: !7649)
!7654 = !DILocation(line: 883, column: 46, scope: !7649)
!7655 = !DILocation(line: 883, column: 34, scope: !7649)
!7656 = !DILocation(line: 883, column: 50, scope: !7649)
!7657 = !DILocation(line: 883, column: 53, scope: !7649)
!7658 = !DILocation(line: 883, column: 59, scope: !7649)
!7659 = !DILocation(line: 883, column: 69, scope: !7649)
!7660 = !DILocation(line: 883, column: 78, scope: !7649)
!7661 = !DILocation(line: 883, column: 66, scope: !7649)
!7662 = !DILocation(line: 883, column: 10, scope: !7639)
!7663 = !DILocation(line: 884, column: 11, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 884, column: 11)
!7665 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 883, column: 87)
!7666 = !DILocation(line: 884, column: 17, scope: !7664)
!7667 = !DILocation(line: 884, column: 20, scope: !7664)
!7668 = !DILocation(line: 884, column: 28, scope: !7664)
!7669 = !DILocation(line: 884, column: 11, scope: !7665)
!7670 = !DILocation(line: 885, column: 17, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 884, column: 37)
!7672 = !DILocation(line: 885, column: 23, scope: !7671)
!7673 = !DILocation(line: 885, column: 8, scope: !7671)
!7674 = !DILocation(line: 886, column: 20, scope: !7671)
!7675 = !DILocation(line: 886, column: 23, scope: !7671)
!7676 = !DILocation(line: 886, column: 27, scope: !7671)
!7677 = !DILocation(line: 886, column: 8, scope: !7671)
!7678 = !DILocation(line: 887, column: 22, scope: !7671)
!7679 = !DILocation(line: 887, column: 25, scope: !7671)
!7680 = !DILocation(line: 887, column: 13, scope: !7671)
!7681 = !DILocation(line: 887, column: 28, scope: !7671)
!7682 = !DILocation(line: 887, column: 11, scope: !7671)
!7683 = !DILocation(line: 889, column: 15, scope: !7671)
!7684 = !DILocation(line: 889, column: 23, scope: !7671)
!7685 = !DILocation(line: 889, column: 14, scope: !7671)
!7686 = !DILocation(line: 889, column: 56, scope: !7671)
!7687 = !DILocation(line: 889, column: 66, scope: !7671)
!7688 = !DILocation(line: 889, column: 64, scope: !7671)
!7689 = !DILocation(line: 889, column: 54, scope: !7671)
!7690 = !DILocation(line: 889, column: 46, scope: !7671)
!7691 = !DILocation(line: 889, column: 12, scope: !7671)
!7692 = !DILocation(line: 890, column: 12, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 890, column: 12)
!7694 = !DILocation(line: 890, column: 16, scope: !7693)
!7695 = !DILocation(line: 890, column: 12, scope: !7671)
!7696 = !DILocation(line: 891, column: 9, scope: !7693)
!7697 = !DILocation(line: 892, column: 7, scope: !7671)
!7698 = !DILocation(line: 894, column: 12, scope: !7664)
!7699 = !DILocation(line: 896, column: 32, scope: !7665)
!7700 = !DILocation(line: 896, column: 38, scope: !7665)
!7701 = !DILocation(line: 896, column: 41, scope: !7665)
!7702 = !DILocation(line: 896, column: 16, scope: !7665)
!7703 = !DILocation(line: 896, column: 14, scope: !7665)
!7704 = !DILocation(line: 898, column: 11, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 898, column: 11)
!7706 = !DILocation(line: 898, column: 11, scope: !7665)
!7707 = !DILocation(line: 899, column: 21, scope: !7705)
!7708 = !DILocation(line: 899, column: 32, scope: !7705)
!7709 = !DILocation(line: 899, column: 38, scope: !7705)
!7710 = !DILocation(line: 899, column: 42, scope: !7705)
!7711 = !DILocation(line: 899, column: 46, scope: !7705)
!7712 = !DILocation(line: 899, column: 55, scope: !7705)
!7713 = !DILocation(line: 899, column: 53, scope: !7705)
!7714 = !DILocation(line: 899, column: 8, scope: !7705)
!7715 = !DILocation(line: 901, column: 17, scope: !7665)
!7716 = !DILocation(line: 901, column: 23, scope: !7665)
!7717 = !DILocation(line: 901, column: 33, scope: !7665)
!7718 = !DILocation(line: 901, column: 14, scope: !7665)
!7719 = !DILocation(line: 903, column: 11, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 903, column: 11)
!7721 = !DILocation(line: 903, column: 11, scope: !7665)
!7722 = !DILocation(line: 904, column: 29, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7720, file: !3, line: 903, column: 18)
!7724 = !DILocation(line: 904, column: 23, scope: !7723)
!7725 = !DILocation(line: 904, column: 21, scope: !7723)
!7726 = !DILocation(line: 904, column: 14, scope: !7723)
!7727 = !DILocation(line: 905, column: 20, scope: !7723)
!7728 = !DILocation(line: 905, column: 29, scope: !7723)
!7729 = !DILocation(line: 905, column: 27, scope: !7723)
!7730 = !DILocation(line: 905, column: 37, scope: !7723)
!7731 = !DILocation(line: 905, column: 35, scope: !7723)
!7732 = !DILocation(line: 905, column: 8, scope: !7723)
!7733 = !DILocation(line: 905, column: 17, scope: !7723)
!7734 = !DILocation(line: 906, column: 20, scope: !7723)
!7735 = !DILocation(line: 906, column: 29, scope: !7723)
!7736 = !DILocation(line: 906, column: 27, scope: !7723)
!7737 = !DILocation(line: 906, column: 37, scope: !7723)
!7738 = !DILocation(line: 906, column: 35, scope: !7723)
!7739 = !DILocation(line: 906, column: 8, scope: !7723)
!7740 = !DILocation(line: 906, column: 17, scope: !7723)
!7741 = !DILocation(line: 907, column: 20, scope: !7723)
!7742 = !DILocation(line: 907, column: 29, scope: !7723)
!7743 = !DILocation(line: 907, column: 27, scope: !7723)
!7744 = !DILocation(line: 907, column: 37, scope: !7723)
!7745 = !DILocation(line: 907, column: 35, scope: !7723)
!7746 = !DILocation(line: 907, column: 8, scope: !7723)
!7747 = !DILocation(line: 907, column: 17, scope: !7723)
!7748 = !DILocation(line: 908, column: 7, scope: !7723)
!7749 = !DILocation(line: 910, column: 20, scope: !7665)
!7750 = !DILocation(line: 910, column: 29, scope: !7665)
!7751 = !DILocation(line: 910, column: 27, scope: !7665)
!7752 = !DILocation(line: 910, column: 17, scope: !7665)
!7753 = !DILocation(line: 911, column: 6, scope: !7665)
!7754 = !DILocation(line: 912, column: 5, scope: !7639)
!7755 = !DILocation(line: 913, column: 14, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7631, file: !3, line: 913, column: 14)
!7757 = !DILocation(line: 913, column: 20, scope: !7756)
!7758 = !DILocation(line: 913, column: 26, scope: !7756)
!7759 = !DILocation(line: 913, column: 29, scope: !7756)
!7760 = !DILocation(line: 913, column: 14, scope: !7631)
!7761 = !DILocation(line: 915, column: 26, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 913, column: 35)
!7763 = !DILocation(line: 915, column: 32, scope: !7762)
!7764 = !DILocation(line: 915, column: 38, scope: !7762)
!7765 = !DILocation(line: 915, column: 41, scope: !7762)
!7766 = !DILocation(line: 915, column: 6, scope: !7762)
!7767 = !DILocation(line: 915, column: 20, scope: !7762)
!7768 = !DILocation(line: 915, column: 24, scope: !7762)
!7769 = !DILocation(line: 916, column: 5, scope: !7762)
!7770 = !DILocation(line: 917, column: 4, scope: !7632)
!7771 = !DILocation(line: 877, column: 31, scope: !7627)
!7772 = !DILocation(line: 877, column: 4, scope: !7627)
!7773 = distinct !{!7773, !7629, !7774}
!7774 = !DILocation(line: 917, column: 4, scope: !7623)
!7775 = !DILocation(line: 921, column: 6, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 921, column: 6)
!7777 = !DILocation(line: 921, column: 6, scope: !7431)
!7778 = !DILocation(line: 921, column: 18, scope: !7776)
!7779 = !DILocation(line: 921, column: 12, scope: !7776)
!7780 = !DILocation(line: 921, column: 16, scope: !7776)
!7781 = !DILocation(line: 921, column: 11, scope: !7776)
!7782 = !DILocation(line: 922, column: 6, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 922, column: 6)
!7784 = !DILocation(line: 922, column: 6, scope: !7431)
!7785 = !DILocation(line: 922, column: 22, scope: !7783)
!7786 = !DILocation(line: 922, column: 27, scope: !7783)
!7787 = !DILocation(line: 922, column: 11, scope: !7783)
!7788 = !DILocation(line: 931, column: 6, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 931, column: 6)
!7790 = !DILocation(line: 931, column: 6, scope: !7431)
!7791 = !DILocation(line: 931, column: 26, scope: !7789)
!7792 = !DILocation(line: 931, column: 13, scope: !7789)
!7793 = !DILocation(line: 932, column: 1, scope: !7431)
!7794 = distinct !DISubprogram(name: "occ_solid_angle", scope: !3, file: !3, line: 762, type: !7795, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7795 = !DISubroutineType(types: !7796)
!7796 = !{!6, !109, !3972, !6, !6, !3972}
!7797 = !DILocalVariable(name: "node", arg: 1, scope: !7794, file: !3, line: 762, type: !109)
!7798 = !DILocation(line: 762, column: 39, scope: !7794)
!7799 = !DILocalVariable(name: "v", arg: 2, scope: !7794, file: !3, line: 762, type: !3972)
!7800 = !DILocation(line: 762, column: 57, scope: !7794)
!7801 = !DILocalVariable(name: "d2", arg: 3, scope: !7794, file: !3, line: 762, type: !6)
!7802 = !DILocation(line: 762, column: 69, scope: !7794)
!7803 = !DILocalVariable(name: "invd2", arg: 4, scope: !7794, file: !3, line: 762, type: !6)
!7804 = !DILocation(line: 762, column: 79, scope: !7794)
!7805 = !DILocalVariable(name: "receivenormal", arg: 5, scope: !7794, file: !3, line: 762, type: !3972)
!7806 = !DILocation(line: 762, column: 98, scope: !7794)
!7807 = !DILocalVariable(name: "dotreceive", scope: !7794, file: !3, line: 764, type: !6)
!7808 = !DILocation(line: 764, column: 8, scope: !7794)
!7809 = !DILocalVariable(name: "dotemit", scope: !7794, file: !3, line: 764, type: !6)
!7810 = !DILocation(line: 764, column: 20, scope: !7794)
!7811 = !DILocalVariable(name: "ev", scope: !7794, file: !3, line: 765, type: !96)
!7812 = !DILocation(line: 765, column: 8, scope: !7794)
!7813 = !DILocation(line: 767, column: 11, scope: !7794)
!7814 = !DILocation(line: 767, column: 10, scope: !7794)
!7815 = !DILocation(line: 767, column: 18, scope: !7794)
!7816 = !DILocation(line: 767, column: 16, scope: !7794)
!7817 = !DILocation(line: 767, column: 2, scope: !7794)
!7818 = !DILocation(line: 767, column: 8, scope: !7794)
!7819 = !DILocation(line: 768, column: 11, scope: !7794)
!7820 = !DILocation(line: 768, column: 10, scope: !7794)
!7821 = !DILocation(line: 768, column: 18, scope: !7794)
!7822 = !DILocation(line: 768, column: 16, scope: !7794)
!7823 = !DILocation(line: 768, column: 2, scope: !7794)
!7824 = !DILocation(line: 768, column: 8, scope: !7794)
!7825 = !DILocation(line: 769, column: 11, scope: !7794)
!7826 = !DILocation(line: 769, column: 10, scope: !7794)
!7827 = !DILocation(line: 769, column: 18, scope: !7794)
!7828 = !DILocation(line: 769, column: 16, scope: !7794)
!7829 = !DILocation(line: 769, column: 2, scope: !7794)
!7830 = !DILocation(line: 769, column: 8, scope: !7794)
!7831 = !DILocation(line: 770, column: 20, scope: !7794)
!7832 = !DILocation(line: 770, column: 26, scope: !7794)
!7833 = !DILocation(line: 770, column: 30, scope: !7794)
!7834 = !DILocation(line: 770, column: 12, scope: !7794)
!7835 = !DILocation(line: 770, column: 10, scope: !7794)
!7836 = !DILocation(line: 771, column: 24, scope: !7794)
!7837 = !DILocation(line: 771, column: 39, scope: !7794)
!7838 = !DILocation(line: 771, column: 15, scope: !7794)
!7839 = !DILocation(line: 771, column: 44, scope: !7794)
!7840 = !DILocation(line: 771, column: 42, scope: !7794)
!7841 = !DILocation(line: 771, column: 13, scope: !7794)
!7842 = !DILocation(line: 773, column: 2, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 773, column: 2)
!7844 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 773, column: 2)
!7845 = !DILocation(line: 773, column: 2, scope: !7844)
!7846 = !DILocation(line: 773, column: 2, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 773, column: 2)
!7848 = !DILocation(line: 774, column: 2, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 774, column: 2)
!7850 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 774, column: 2)
!7851 = !DILocation(line: 774, column: 2, scope: !7850)
!7852 = !DILocation(line: 774, column: 2, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 774, column: 2)
!7854 = !DILocation(line: 776, column: 11, scope: !7794)
!7855 = !DILocation(line: 776, column: 17, scope: !7794)
!7856 = !DILocation(line: 776, column: 24, scope: !7794)
!7857 = !DILocation(line: 776, column: 22, scope: !7794)
!7858 = !DILocation(line: 776, column: 34, scope: !7794)
!7859 = !DILocation(line: 776, column: 32, scope: !7794)
!7860 = !DILocation(line: 776, column: 49, scope: !7794)
!7861 = !DILocation(line: 776, column: 54, scope: !7794)
!7862 = !DILocation(line: 776, column: 60, scope: !7794)
!7863 = !DILocation(line: 776, column: 65, scope: !7794)
!7864 = !DILocation(line: 776, column: 52, scope: !7794)
!7865 = !DILocation(line: 776, column: 46, scope: !7794)
!7866 = !DILocation(line: 776, column: 75, scope: !7794)
!7867 = !DILocation(line: 776, column: 2, scope: !7794)
!7868 = distinct !DISubprogram(name: "occ_form_factor", scope: !3, file: !3, line: 779, type: !7869, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{!6, !100, !7, !7}
!7871 = !DILocalVariable(name: "face", arg: 1, scope: !7868, file: !3, line: 779, type: !100)
!7872 = !DILocation(line: 779, column: 39, scope: !7868)
!7873 = !DILocalVariable(name: "p", arg: 2, scope: !7868, file: !3, line: 779, type: !7)
!7874 = !DILocation(line: 779, column: 52, scope: !7868)
!7875 = !DILocalVariable(name: "n", arg: 3, scope: !7868, file: !3, line: 779, type: !7)
!7876 = !DILocation(line: 779, column: 62, scope: !7868)
!7877 = !DILocalVariable(name: "obi", scope: !7868, file: !3, line: 781, type: !3212)
!7878 = !DILocation(line: 781, column: 21, scope: !7868)
!7879 = !DILocalVariable(name: "vlr", scope: !7868, file: !3, line: 782, type: !3222)
!7880 = !DILocation(line: 782, column: 11, scope: !7868)
!7881 = !DILocalVariable(name: "v1", scope: !7868, file: !3, line: 783, type: !96)
!7882 = !DILocation(line: 783, column: 8, scope: !7868)
!7883 = !DILocalVariable(name: "v2", scope: !7868, file: !3, line: 783, type: !96)
!7884 = !DILocation(line: 783, column: 15, scope: !7868)
!7885 = !DILocalVariable(name: "v3", scope: !7868, file: !3, line: 783, type: !96)
!7886 = !DILocation(line: 783, column: 22, scope: !7868)
!7887 = !DILocalVariable(name: "v4", scope: !7868, file: !3, line: 783, type: !96)
!7888 = !DILocation(line: 783, column: 29, scope: !7868)
!7889 = !DILocalVariable(name: "q0", scope: !7868, file: !3, line: 783, type: !96)
!7890 = !DILocation(line: 783, column: 36, scope: !7868)
!7891 = !DILocalVariable(name: "q1", scope: !7868, file: !3, line: 783, type: !96)
!7892 = !DILocation(line: 783, column: 43, scope: !7868)
!7893 = !DILocalVariable(name: "q2", scope: !7868, file: !3, line: 783, type: !96)
!7894 = !DILocation(line: 783, column: 50, scope: !7868)
!7895 = !DILocalVariable(name: "q3", scope: !7868, file: !3, line: 783, type: !96)
!7896 = !DILocation(line: 783, column: 57, scope: !7868)
!7897 = !DILocalVariable(name: "contrib", scope: !7868, file: !3, line: 783, type: !6)
!7898 = !DILocation(line: 783, column: 64, scope: !7868)
!7899 = !DILocation(line: 785, column: 11, scope: !7868)
!7900 = !DILocation(line: 785, column: 26, scope: !7868)
!7901 = !DILocation(line: 785, column: 32, scope: !7868)
!7902 = !DILocation(line: 785, column: 9, scope: !7868)
!7903 = !DILocation(line: 785, column: 6, scope: !7868)
!7904 = !DILocation(line: 786, column: 25, scope: !7868)
!7905 = !DILocation(line: 786, column: 30, scope: !7868)
!7906 = !DILocation(line: 786, column: 35, scope: !7868)
!7907 = !DILocation(line: 786, column: 41, scope: !7868)
!7908 = !DILocation(line: 786, column: 8, scope: !7868)
!7909 = !DILocation(line: 786, column: 6, scope: !7868)
!7910 = !DILocation(line: 788, column: 13, scope: !7868)
!7911 = !DILocation(line: 788, column: 17, scope: !7868)
!7912 = !DILocation(line: 788, column: 22, scope: !7868)
!7913 = !DILocation(line: 788, column: 26, scope: !7868)
!7914 = !DILocation(line: 788, column: 2, scope: !7868)
!7915 = !DILocation(line: 789, column: 13, scope: !7868)
!7916 = !DILocation(line: 789, column: 17, scope: !7868)
!7917 = !DILocation(line: 789, column: 22, scope: !7868)
!7918 = !DILocation(line: 789, column: 26, scope: !7868)
!7919 = !DILocation(line: 789, column: 2, scope: !7868)
!7920 = !DILocation(line: 790, column: 13, scope: !7868)
!7921 = !DILocation(line: 790, column: 17, scope: !7868)
!7922 = !DILocation(line: 790, column: 22, scope: !7868)
!7923 = !DILocation(line: 790, column: 26, scope: !7868)
!7924 = !DILocation(line: 790, column: 2, scope: !7868)
!7925 = !DILocation(line: 792, column: 6, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 792, column: 6)
!7927 = !DILocation(line: 792, column: 11, scope: !7926)
!7928 = !DILocation(line: 792, column: 16, scope: !7926)
!7929 = !DILocation(line: 792, column: 6, scope: !7868)
!7930 = !DILocation(line: 793, column: 13, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 792, column: 33)
!7932 = !DILocation(line: 793, column: 18, scope: !7931)
!7933 = !DILocation(line: 793, column: 23, scope: !7931)
!7934 = !DILocation(line: 793, column: 3, scope: !7931)
!7935 = !DILocation(line: 794, column: 13, scope: !7931)
!7936 = !DILocation(line: 794, column: 18, scope: !7931)
!7937 = !DILocation(line: 794, column: 23, scope: !7931)
!7938 = !DILocation(line: 794, column: 3, scope: !7931)
!7939 = !DILocation(line: 795, column: 13, scope: !7931)
!7940 = !DILocation(line: 795, column: 18, scope: !7931)
!7941 = !DILocation(line: 795, column: 23, scope: !7931)
!7942 = !DILocation(line: 795, column: 3, scope: !7931)
!7943 = !DILocation(line: 796, column: 2, scope: !7931)
!7944 = !DILocation(line: 798, column: 31, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 798, column: 6)
!7946 = !DILocation(line: 798, column: 34, scope: !7945)
!7947 = !DILocation(line: 798, column: 37, scope: !7945)
!7948 = !DILocation(line: 798, column: 41, scope: !7945)
!7949 = !DILocation(line: 798, column: 45, scope: !7945)
!7950 = !DILocation(line: 798, column: 49, scope: !7945)
!7951 = !DILocation(line: 798, column: 53, scope: !7945)
!7952 = !DILocation(line: 798, column: 57, scope: !7945)
!7953 = !DILocation(line: 798, column: 61, scope: !7945)
!7954 = !DILocation(line: 798, column: 6, scope: !7945)
!7955 = !DILocation(line: 798, column: 6, scope: !7868)
!7956 = !DILocation(line: 799, column: 31, scope: !7945)
!7957 = !DILocation(line: 799, column: 34, scope: !7945)
!7958 = !DILocation(line: 799, column: 37, scope: !7945)
!7959 = !DILocation(line: 799, column: 41, scope: !7945)
!7960 = !DILocation(line: 799, column: 45, scope: !7945)
!7961 = !DILocation(line: 799, column: 49, scope: !7945)
!7962 = !DILocation(line: 799, column: 14, scope: !7945)
!7963 = !DILocation(line: 799, column: 11, scope: !7945)
!7964 = !DILocation(line: 799, column: 3, scope: !7945)
!7965 = !DILocation(line: 801, column: 6, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 801, column: 6)
!7967 = !DILocation(line: 801, column: 11, scope: !7966)
!7968 = !DILocation(line: 801, column: 6, scope: !7868)
!7969 = !DILocation(line: 802, column: 14, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 801, column: 15)
!7971 = !DILocation(line: 802, column: 18, scope: !7970)
!7972 = !DILocation(line: 802, column: 23, scope: !7970)
!7973 = !DILocation(line: 802, column: 27, scope: !7970)
!7974 = !DILocation(line: 802, column: 3, scope: !7970)
!7975 = !DILocation(line: 803, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 803, column: 7)
!7977 = !DILocation(line: 803, column: 12, scope: !7976)
!7978 = !DILocation(line: 803, column: 17, scope: !7976)
!7979 = !DILocation(line: 803, column: 7, scope: !7970)
!7980 = !DILocation(line: 804, column: 14, scope: !7976)
!7981 = !DILocation(line: 804, column: 19, scope: !7976)
!7982 = !DILocation(line: 804, column: 24, scope: !7976)
!7983 = !DILocation(line: 804, column: 4, scope: !7976)
!7984 = !DILocation(line: 806, column: 32, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 806, column: 7)
!7986 = !DILocation(line: 806, column: 35, scope: !7985)
!7987 = !DILocation(line: 806, column: 38, scope: !7985)
!7988 = !DILocation(line: 806, column: 42, scope: !7985)
!7989 = !DILocation(line: 806, column: 46, scope: !7985)
!7990 = !DILocation(line: 806, column: 50, scope: !7985)
!7991 = !DILocation(line: 806, column: 54, scope: !7985)
!7992 = !DILocation(line: 806, column: 58, scope: !7985)
!7993 = !DILocation(line: 806, column: 62, scope: !7985)
!7994 = !DILocation(line: 806, column: 7, scope: !7985)
!7995 = !DILocation(line: 806, column: 7, scope: !7970)
!7996 = !DILocation(line: 807, column: 32, scope: !7985)
!7997 = !DILocation(line: 807, column: 35, scope: !7985)
!7998 = !DILocation(line: 807, column: 38, scope: !7985)
!7999 = !DILocation(line: 807, column: 42, scope: !7985)
!8000 = !DILocation(line: 807, column: 46, scope: !7985)
!8001 = !DILocation(line: 807, column: 50, scope: !7985)
!8002 = !DILocation(line: 807, column: 15, scope: !7985)
!8003 = !DILocation(line: 807, column: 12, scope: !7985)
!8004 = !DILocation(line: 807, column: 4, scope: !7985)
!8005 = !DILocation(line: 808, column: 2, scope: !7970)
!8006 = !DILocation(line: 810, column: 9, scope: !7868)
!8007 = !DILocation(line: 810, column: 2, scope: !7868)
!8008 = !DILocalVariable(name: "sh", arg: 1, scope: !2, file: !3, line: 295, type: !7)
!8009 = !DILocation(line: 295, column: 29, scope: !2)
!8010 = !DILocalVariable(name: "v", arg: 2, scope: !2, file: !3, line: 295, type: !7)
!8011 = !DILocation(line: 295, column: 40, scope: !2)
!8012 = !DILocalVariable(name: "x", scope: !2, file: !3, line: 301, type: !6)
!8013 = !DILocation(line: 301, column: 8, scope: !2)
!8014 = !DILocalVariable(name: "y", scope: !2, file: !3, line: 301, type: !6)
!8015 = !DILocation(line: 301, column: 11, scope: !2)
!8016 = !DILocalVariable(name: "z", scope: !2, file: !3, line: 301, type: !6)
!8017 = !DILocation(line: 301, column: 14, scope: !2)
!8018 = !DILocalVariable(name: "sum", scope: !2, file: !3, line: 301, type: !6)
!8019 = !DILocation(line: 301, column: 17, scope: !2)
!8020 = !DILocation(line: 303, column: 6, scope: !2)
!8021 = !DILocation(line: 303, column: 4, scope: !2)
!8022 = !DILocation(line: 304, column: 6, scope: !2)
!8023 = !DILocation(line: 304, column: 4, scope: !2)
!8024 = !DILocation(line: 305, column: 6, scope: !2)
!8025 = !DILocation(line: 305, column: 4, scope: !2)
!8026 = !DILocation(line: 307, column: 13, scope: !2)
!8027 = !DILocation(line: 307, column: 11, scope: !2)
!8028 = !DILocation(line: 307, column: 22, scope: !2)
!8029 = !DILocation(line: 307, column: 26, scope: !2)
!8030 = !DILocation(line: 307, column: 24, scope: !2)
!8031 = !DILocation(line: 307, column: 30, scope: !2)
!8032 = !DILocation(line: 307, column: 34, scope: !2)
!8033 = !DILocation(line: 307, column: 32, scope: !2)
!8034 = !DILocation(line: 307, column: 28, scope: !2)
!8035 = !DILocation(line: 307, column: 19, scope: !2)
!8036 = !DILocation(line: 307, column: 6, scope: !2)
!8037 = !DILocation(line: 308, column: 14, scope: !2)
!8038 = !DILocation(line: 308, column: 12, scope: !2)
!8039 = !DILocation(line: 308, column: 22, scope: !2)
!8040 = !DILocation(line: 308, column: 20, scope: !2)
!8041 = !DILocation(line: 308, column: 26, scope: !2)
!8042 = !DILocation(line: 308, column: 24, scope: !2)
!8043 = !DILocation(line: 308, column: 6, scope: !2)
!8044 = !DILocation(line: 309, column: 14, scope: !2)
!8045 = !DILocation(line: 309, column: 12, scope: !2)
!8046 = !DILocation(line: 309, column: 6, scope: !2)
!8047 = !DILocation(line: 310, column: 15, scope: !2)
!8048 = !DILocation(line: 310, column: 13, scope: !2)
!8049 = !DILocation(line: 310, column: 6, scope: !2)
!8050 = !DILocation(line: 311, column: 22, scope: !2)
!8051 = !DILocation(line: 311, column: 30, scope: !2)
!8052 = !DILocation(line: 311, column: 28, scope: !2)
!8053 = !DILocation(line: 311, column: 34, scope: !2)
!8054 = !DILocation(line: 311, column: 32, scope: !2)
!8055 = !DILocation(line: 311, column: 38, scope: !2)
!8056 = !DILocation(line: 311, column: 46, scope: !2)
!8057 = !DILocation(line: 311, column: 44, scope: !2)
!8058 = !DILocation(line: 311, column: 50, scope: !2)
!8059 = !DILocation(line: 311, column: 48, scope: !2)
!8060 = !DILocation(line: 311, column: 36, scope: !2)
!8061 = !DILocation(line: 311, column: 54, scope: !2)
!8062 = !DILocation(line: 311, column: 62, scope: !2)
!8063 = !DILocation(line: 311, column: 60, scope: !2)
!8064 = !DILocation(line: 311, column: 66, scope: !2)
!8065 = !DILocation(line: 311, column: 64, scope: !2)
!8066 = !DILocation(line: 311, column: 52, scope: !2)
!8067 = !DILocation(line: 311, column: 19, scope: !2)
!8068 = !DILocation(line: 311, column: 6, scope: !2)
!8069 = !DILocation(line: 312, column: 22, scope: !2)
!8070 = !DILocation(line: 312, column: 30, scope: !2)
!8071 = !DILocation(line: 312, column: 28, scope: !2)
!8072 = !DILocation(line: 312, column: 34, scope: !2)
!8073 = !DILocation(line: 312, column: 42, scope: !2)
!8074 = !DILocation(line: 312, column: 40, scope: !2)
!8075 = !DILocation(line: 312, column: 32, scope: !2)
!8076 = !DILocation(line: 312, column: 46, scope: !2)
!8077 = !DILocation(line: 312, column: 54, scope: !2)
!8078 = !DILocation(line: 312, column: 52, scope: !2)
!8079 = !DILocation(line: 312, column: 44, scope: !2)
!8080 = !DILocation(line: 312, column: 19, scope: !2)
!8081 = !DILocation(line: 312, column: 6, scope: !2)
!8082 = !DILocation(line: 314, column: 9, scope: !2)
!8083 = !DILocation(line: 314, column: 2, scope: !2)
!8084 = distinct !DISubprogram(name: "find_occ_sample", scope: !3, file: !3, line: 1071, type: !8085, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8085 = !DISubroutineType(types: !8086)
!8086 = !{!150, !145, !12, !12}
!8087 = !DILocalVariable(name: "cache", arg: 1, scope: !8084, file: !3, line: 1071, type: !145)
!8088 = !DILocation(line: 1071, column: 62, scope: !8084)
!8089 = !DILocalVariable(name: "x", arg: 2, scope: !8084, file: !3, line: 1071, type: !12)
!8090 = !DILocation(line: 1071, column: 73, scope: !8084)
!8091 = !DILocalVariable(name: "y", arg: 3, scope: !8084, file: !3, line: 1071, type: !12)
!8092 = !DILocation(line: 1071, column: 80, scope: !8084)
!8093 = !DILocation(line: 1073, column: 7, scope: !8084)
!8094 = !DILocation(line: 1073, column: 14, scope: !8084)
!8095 = !DILocation(line: 1073, column: 4, scope: !8084)
!8096 = !DILocation(line: 1074, column: 7, scope: !8084)
!8097 = !DILocation(line: 1074, column: 14, scope: !8084)
!8098 = !DILocation(line: 1074, column: 4, scope: !8084)
!8099 = !DILocation(line: 1076, column: 7, scope: !8084)
!8100 = !DILocation(line: 1076, column: 14, scope: !8084)
!8101 = !DILocation(line: 1076, column: 4, scope: !8084)
!8102 = !DILocation(line: 1077, column: 7, scope: !8084)
!8103 = !DILocation(line: 1077, column: 14, scope: !8084)
!8104 = !DILocation(line: 1077, column: 4, scope: !8084)
!8105 = !DILocation(line: 1078, column: 7, scope: !8084)
!8106 = !DILocation(line: 1078, column: 14, scope: !8084)
!8107 = !DILocation(line: 1078, column: 4, scope: !8084)
!8108 = !DILocation(line: 1079, column: 7, scope: !8084)
!8109 = !DILocation(line: 1079, column: 14, scope: !8084)
!8110 = !DILocation(line: 1079, column: 4, scope: !8084)
!8111 = !DILocation(line: 1081, column: 6, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 1081, column: 6)
!8113 = !DILocation(line: 1081, column: 8, scope: !8112)
!8114 = !DILocation(line: 1081, column: 12, scope: !8112)
!8115 = !DILocation(line: 1081, column: 15, scope: !8112)
!8116 = !DILocation(line: 1081, column: 20, scope: !8112)
!8117 = !DILocation(line: 1081, column: 27, scope: !8112)
!8118 = !DILocation(line: 1081, column: 17, scope: !8112)
!8119 = !DILocation(line: 1081, column: 29, scope: !8112)
!8120 = !DILocation(line: 1081, column: 32, scope: !8112)
!8121 = !DILocation(line: 1081, column: 34, scope: !8112)
!8122 = !DILocation(line: 1081, column: 38, scope: !8112)
!8123 = !DILocation(line: 1081, column: 41, scope: !8112)
!8124 = !DILocation(line: 1081, column: 46, scope: !8112)
!8125 = !DILocation(line: 1081, column: 53, scope: !8112)
!8126 = !DILocation(line: 1081, column: 43, scope: !8112)
!8127 = !DILocation(line: 1081, column: 6, scope: !8084)
!8128 = !DILocation(line: 1082, column: 3, scope: !8112)
!8129 = !DILocation(line: 1084, column: 11, scope: !8112)
!8130 = !DILocation(line: 1084, column: 18, scope: !8112)
!8131 = !DILocation(line: 1084, column: 25, scope: !8112)
!8132 = !DILocation(line: 1084, column: 29, scope: !8112)
!8133 = !DILocation(line: 1084, column: 36, scope: !8112)
!8134 = !DILocation(line: 1084, column: 27, scope: !8112)
!8135 = !DILocation(line: 1084, column: 40, scope: !8112)
!8136 = !DILocation(line: 1084, column: 38, scope: !8112)
!8137 = !DILocation(line: 1084, column: 3, scope: !8112)
!8138 = !DILocation(line: 1085, column: 1, scope: !8084)
!8139 = distinct !DISubprogram(name: "min_ffff", scope: !5233, file: !5233, line: 238, type: !8140, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{!6, !6, !6, !6, !6}
!8142 = !DILocalVariable(name: "a", arg: 1, scope: !8139, file: !5233, line: 238, type: !6)
!8143 = !DILocation(line: 238, column: 30, scope: !8139)
!8144 = !DILocalVariable(name: "b", arg: 2, scope: !8139, file: !5233, line: 238, type: !6)
!8145 = !DILocation(line: 238, column: 39, scope: !8139)
!8146 = !DILocalVariable(name: "c", arg: 3, scope: !8139, file: !5233, line: 238, type: !6)
!8147 = !DILocation(line: 238, column: 48, scope: !8139)
!8148 = !DILocalVariable(name: "d", arg: 4, scope: !8139, file: !5233, line: 238, type: !6)
!8149 = !DILocation(line: 238, column: 57, scope: !8139)
!8150 = !DILocation(line: 240, column: 24, scope: !8139)
!8151 = !DILocation(line: 240, column: 27, scope: !8139)
!8152 = !DILocation(line: 240, column: 30, scope: !8139)
!8153 = !DILocation(line: 240, column: 16, scope: !8139)
!8154 = !DILocation(line: 240, column: 34, scope: !8139)
!8155 = !DILocation(line: 240, column: 9, scope: !8139)
!8156 = !DILocation(line: 240, column: 2, scope: !8139)
!8157 = distinct !DISubprogram(name: "max_ffff", scope: !5233, file: !5233, line: 242, type: !8140, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8158 = !DILocalVariable(name: "a", arg: 1, scope: !8157, file: !5233, line: 242, type: !6)
!8159 = !DILocation(line: 242, column: 30, scope: !8157)
!8160 = !DILocalVariable(name: "b", arg: 2, scope: !8157, file: !5233, line: 242, type: !6)
!8161 = !DILocation(line: 242, column: 39, scope: !8157)
!8162 = !DILocalVariable(name: "c", arg: 3, scope: !8157, file: !5233, line: 242, type: !6)
!8163 = !DILocation(line: 242, column: 48, scope: !8157)
!8164 = !DILocalVariable(name: "d", arg: 4, scope: !8157, file: !5233, line: 242, type: !6)
!8165 = !DILocation(line: 242, column: 57, scope: !8157)
!8166 = !DILocation(line: 244, column: 24, scope: !8157)
!8167 = !DILocation(line: 244, column: 27, scope: !8157)
!8168 = !DILocation(line: 244, column: 30, scope: !8157)
!8169 = !DILocation(line: 244, column: 16, scope: !8157)
!8170 = !DILocation(line: 244, column: 34, scope: !8157)
!8171 = !DILocation(line: 244, column: 9, scope: !8157)
!8172 = !DILocation(line: 244, column: 2, scope: !8157)
!8173 = distinct !DISubprogram(name: "min_ff", scope: !5233, file: !5233, line: 202, type: !5249, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8174 = !DILocalVariable(name: "a", arg: 1, scope: !8173, file: !5233, line: 202, type: !6)
!8175 = !DILocation(line: 202, column: 28, scope: !8173)
!8176 = !DILocalVariable(name: "b", arg: 2, scope: !8173, file: !5233, line: 202, type: !6)
!8177 = !DILocation(line: 202, column: 37, scope: !8173)
!8178 = !DILocation(line: 204, column: 10, scope: !8173)
!8179 = !DILocation(line: 204, column: 14, scope: !8173)
!8180 = !DILocation(line: 204, column: 12, scope: !8173)
!8181 = !DILocation(line: 204, column: 9, scope: !8173)
!8182 = !DILocation(line: 204, column: 19, scope: !8173)
!8183 = !DILocation(line: 204, column: 23, scope: !8173)
!8184 = !DILocation(line: 204, column: 2, scope: !8173)
!8185 = distinct !DISubprogram(name: "min_fff", scope: !5233, file: !5233, line: 220, type: !5234, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8186 = !DILocalVariable(name: "a", arg: 1, scope: !8185, file: !5233, line: 220, type: !6)
!8187 = !DILocation(line: 220, column: 29, scope: !8185)
!8188 = !DILocalVariable(name: "b", arg: 2, scope: !8185, file: !5233, line: 220, type: !6)
!8189 = !DILocation(line: 220, column: 38, scope: !8185)
!8190 = !DILocalVariable(name: "c", arg: 3, scope: !8185, file: !5233, line: 220, type: !6)
!8191 = !DILocation(line: 220, column: 47, scope: !8185)
!8192 = !DILocation(line: 222, column: 23, scope: !8185)
!8193 = !DILocation(line: 222, column: 26, scope: !8185)
!8194 = !DILocation(line: 222, column: 16, scope: !8185)
!8195 = !DILocation(line: 222, column: 30, scope: !8185)
!8196 = !DILocation(line: 222, column: 9, scope: !8185)
!8197 = !DILocation(line: 222, column: 2, scope: !8185)
!8198 = distinct !DISubprogram(name: "negate_v3_v3", scope: !3969, file: !3969, line: 583, type: !3970, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !8, retainedNodes: !2792)
!8199 = !DILocalVariable(name: "r", arg: 1, scope: !8198, file: !3969, line: 583, type: !7)
!8200 = !DILocation(line: 583, column: 33, scope: !8198)
!8201 = !DILocalVariable(name: "a", arg: 2, scope: !8198, file: !3969, line: 583, type: !3972)
!8202 = !DILocation(line: 583, column: 51, scope: !8198)
!8203 = !DILocation(line: 585, column: 10, scope: !8198)
!8204 = !DILocation(line: 585, column: 9, scope: !8198)
!8205 = !DILocation(line: 585, column: 2, scope: !8198)
!8206 = !DILocation(line: 585, column: 7, scope: !8198)
!8207 = !DILocation(line: 586, column: 10, scope: !8198)
!8208 = !DILocation(line: 586, column: 9, scope: !8198)
!8209 = !DILocation(line: 586, column: 2, scope: !8198)
!8210 = !DILocation(line: 586, column: 7, scope: !8198)
!8211 = !DILocation(line: 587, column: 10, scope: !8198)
!8212 = !DILocation(line: 587, column: 9, scope: !8198)
!8213 = !DILocation(line: 587, column: 2, scope: !8198)
!8214 = !DILocation(line: 587, column: 7, scope: !8198)
!8215 = !DILocation(line: 588, column: 1, scope: !8198)
