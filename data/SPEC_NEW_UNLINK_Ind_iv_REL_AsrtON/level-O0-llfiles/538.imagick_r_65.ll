; ModuleID = 'magick/quantum-import.c'
source_filename = "magick/quantum-import.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._QuantumInfo = type { i64, i64, i32, double, double, double, i64, i32, i32, i32, i64, i8**, i64, i32, %struct._QuantumState, %struct.SemaphoreInfo*, i64 }
%struct._QuantumState = type { double, i32, i64, i32* }
%union._SinglePrecision = type { i32 }

@.str = private unnamed_addr constant [24 x i8] c"magick/quantum-import.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"ColorSeparatedImageRequired\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"ColormappedImageRequired\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"InvalidColormapIndex\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @ImportQuantumPixels(%struct._Image* %image, %struct._CacheView* %image_view, %struct._QuantumInfo* %quantum_info, i32 %quantum_type, i8* noalias %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !510 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %quantum_type.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %number_pixels = alloca i64, align 8
  %p = alloca i8*, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %extent = alloca i64, align 8
  %quantum = alloca i16, align 2
  %q33 = alloca %struct._PixelPacket*, align 8
  %q47 = alloca %struct._PixelPacket*, align 8
  %alpha = alloca float, align 4
  %q66 = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !720, metadata !DIExpression()), !dbg !721
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !722, metadata !DIExpression()), !dbg !723
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !724, metadata !DIExpression()), !dbg !725
  store i32 %quantum_type, i32* %quantum_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quantum_type.addr, metadata !726, metadata !DIExpression()), !dbg !727
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !728, metadata !DIExpression()), !dbg !729
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !730, metadata !DIExpression()), !dbg !731
  call void @llvm.dbg.declare(metadata i64* %number_pixels, metadata !732, metadata !DIExpression()), !dbg !733
  call void @llvm.dbg.declare(metadata i8** %p, metadata !734, metadata !DIExpression()), !dbg !735
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !736, metadata !DIExpression()), !dbg !738
  call void @llvm.dbg.declare(metadata i64* %x, metadata !739, metadata !DIExpression()), !dbg !740
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !741, metadata !DIExpression()), !dbg !743
  call void @llvm.dbg.declare(metadata i64* %extent, metadata !744, metadata !DIExpression()), !dbg !745
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !746
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !748
  %1 = load i32, i32* %debug, align 8, !dbg !748
  %cmp = icmp ne i32 %1, 0, !dbg !749
  br i1 %cmp, label %if.then, label %if.end, !dbg !750

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !751
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !752
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !751
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3392, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !753
  br label %if.end, !dbg !754

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !755
  %cmp1 = icmp eq i8* %3, null, !dbg !757
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !758

if.then2:                                         ; preds = %if.end
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !759
  %call3 = call i8* @GetQuantumPixels(%struct._QuantumInfo* %4), !dbg !760
  store i8* %call3, i8** %pixels.addr, align 8, !dbg !761
  br label %if.end4, !dbg !762

if.end4:                                          ; preds = %if.then2, %if.end
  store i64 0, i64* %x, align 8, !dbg !763
  %5 = load i8*, i8** %pixels.addr, align 8, !dbg !764
  store i8* %5, i8** %p, align 8, !dbg !765
  %6 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !766
  %cmp5 = icmp eq %struct._CacheView* %6, null, !dbg !768
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !769

if.then6:                                         ; preds = %if.end4
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !770
  %call7 = call i64 @GetImageExtent(%struct._Image* %7), !dbg !772
  store i64 %call7, i64* %number_pixels, align 8, !dbg !773
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !774
  %call8 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %8), !dbg !775
  store %struct._PixelPacket* %call8, %struct._PixelPacket** %q, align 8, !dbg !776
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !777
  %call9 = call i16* @GetAuthenticIndexQueue(%struct._Image* %9), !dbg !778
  store i16* %call9, i16** %indexes, align 8, !dbg !779
  br label %if.end13, !dbg !780

if.else:                                          ; preds = %if.end4
  %10 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !781
  %call10 = call i64 @GetCacheViewExtent(%struct._CacheView* %10), !dbg !783
  store i64 %call10, i64* %number_pixels, align 8, !dbg !784
  %11 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !785
  %call11 = call %struct._PixelPacket* @GetCacheViewAuthenticPixelQueue(%struct._CacheView* %11), !dbg !786
  store %struct._PixelPacket* %call11, %struct._PixelPacket** %q, align 8, !dbg !787
  %12 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !788
  %call12 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %12), !dbg !789
  store i16* %call12, i16** %indexes, align 8, !dbg !790
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then6
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !791
  call void @ResetQuantumState(%struct._QuantumInfo* %13), !dbg !792
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !793
  %15 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !794
  %16 = load i32, i32* %quantum_type.addr, align 4, !dbg !795
  %call14 = call i64 @GetQuantumExtent(%struct._Image* %14, %struct._QuantumInfo* %15, i32 %16), !dbg !796
  store i64 %call14, i64* %extent, align 8, !dbg !797
  %17 = load i32, i32* %quantum_type.addr, align 4, !dbg !798
  switch i32 %17, label %sw.default [
    i32 1, label %sw.bb
    i32 26, label %sw.bb15
    i32 16, label %sw.bb16
    i32 27, label %sw.bb16
    i32 2, label %sw.bb17
    i32 3, label %sw.bb18
    i32 19, label %sw.bb18
    i32 22, label %sw.bb19
    i32 5, label %sw.bb20
    i32 4, label %sw.bb21
    i32 25, label %sw.bb21
    i32 8, label %sw.bb22
    i32 7, label %sw.bb23
    i32 9, label %sw.bb24
    i32 12, label %sw.bb24
    i32 11, label %sw.bb25
    i32 10, label %sw.bb26
    i32 14, label %sw.bb27
    i32 6, label %sw.bb27
    i32 18, label %sw.bb28
    i32 23, label %sw.bb28
    i32 15, label %sw.bb29
    i32 17, label %sw.bb29
    i32 24, label %sw.bb29
  ], !dbg !799

sw.bb:                                            ; preds = %if.end13
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !800
  %19 = load i64, i64* %number_pixels, align 8, !dbg !803
  %20 = load i8*, i8** %p, align 8, !dbg !804
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !805
  call void @ImportAlphaQuantum(%struct._QuantumInfo* %18, i64 %19, i8* %20, %struct._PixelPacket* %21), !dbg !806
  br label %sw.epilog, !dbg !807

sw.bb15:                                          ; preds = %if.end13
  %22 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !808
  %23 = load i64, i64* %number_pixels, align 8, !dbg !810
  %24 = load i8*, i8** %p, align 8, !dbg !811
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !812
  call void @ImportBGRQuantum(%struct._QuantumInfo* %22, i64 %23, i8* %24, %struct._PixelPacket* %25), !dbg !813
  br label %sw.epilog, !dbg !814

sw.bb16:                                          ; preds = %if.end13, %if.end13
  %26 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !815
  %27 = load i64, i64* %number_pixels, align 8, !dbg !817
  %28 = load i8*, i8** %p, align 8, !dbg !818
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !819
  call void @ImportBGRAQuantum(%struct._QuantumInfo* %26, i64 %27, i8* %28, %struct._PixelPacket* %29), !dbg !820
  br label %sw.epilog, !dbg !821

sw.bb17:                                          ; preds = %if.end13
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !822
  %31 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !824
  %32 = load i64, i64* %number_pixels, align 8, !dbg !825
  %33 = load i8*, i8** %p, align 8, !dbg !826
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !827
  %35 = load i16*, i16** %indexes, align 8, !dbg !828
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !829
  call void @ImportBlackQuantum(%struct._Image* %30, %struct._QuantumInfo* %31, i64 %32, i8* %33, %struct._PixelPacket* %34, i16* %35, %struct._ExceptionInfo* %36), !dbg !830
  br label %sw.epilog, !dbg !831

sw.bb18:                                          ; preds = %if.end13, %if.end13
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !832
  %38 = load i64, i64* %number_pixels, align 8, !dbg !834
  %39 = load i8*, i8** %p, align 8, !dbg !835
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !836
  call void @ImportBlueQuantum(%struct._QuantumInfo* %37, i64 %38, i8* %39, %struct._PixelPacket* %40), !dbg !837
  br label %sw.epilog, !dbg !838

sw.bb19:                                          ; preds = %if.end13
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !839
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !841
  %43 = load i64, i64* %number_pixels, align 8, !dbg !842
  %44 = load i8*, i8** %p, align 8, !dbg !843
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !844
  call void @ImportCbYCrYQuantum(%struct._Image* %41, %struct._QuantumInfo* %42, i64 %43, i8* %44, %struct._PixelPacket* %45), !dbg !845
  br label %sw.epilog, !dbg !846

sw.bb20:                                          ; preds = %if.end13
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !847
  %47 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !849
  %48 = load i64, i64* %number_pixels, align 8, !dbg !850
  %49 = load i8*, i8** %p, align 8, !dbg !851
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !852
  %51 = load i16*, i16** %indexes, align 8, !dbg !853
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !854
  call void @ImportCMYKQuantum(%struct._Image* %46, %struct._QuantumInfo* %47, i64 %48, i8* %49, %struct._PixelPacket* %50, i16* %51, %struct._ExceptionInfo* %52), !dbg !855
  br label %sw.epilog, !dbg !856

sw.bb21:                                          ; preds = %if.end13, %if.end13
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !857
  %54 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !859
  %55 = load i64, i64* %number_pixels, align 8, !dbg !860
  %56 = load i8*, i8** %p, align 8, !dbg !861
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !862
  %58 = load i16*, i16** %indexes, align 8, !dbg !863
  %59 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !864
  call void @ImportCMYKAQuantum(%struct._Image* %53, %struct._QuantumInfo* %54, i64 %55, i8* %56, %struct._PixelPacket* %57, i16* %58, %struct._ExceptionInfo* %59), !dbg !865
  br label %sw.epilog, !dbg !866

sw.bb22:                                          ; preds = %if.end13
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !867
  %61 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !869
  %62 = load i64, i64* %number_pixels, align 8, !dbg !870
  %63 = load i8*, i8** %p, align 8, !dbg !871
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !872
  call void @ImportGrayQuantum(%struct._Image* %60, %struct._QuantumInfo* %61, i64 %62, i8* %63, %struct._PixelPacket* %64), !dbg !873
  br label %sw.epilog, !dbg !874

sw.bb23:                                          ; preds = %if.end13
  %65 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !875
  %66 = load i64, i64* %number_pixels, align 8, !dbg !877
  %67 = load i8*, i8** %p, align 8, !dbg !878
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !879
  call void @ImportGrayAlphaQuantum(%struct._QuantumInfo* %65, i64 %66, i8* %67, %struct._PixelPacket* %68), !dbg !880
  br label %sw.epilog, !dbg !881

sw.bb24:                                          ; preds = %if.end13, %if.end13
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !882
  %70 = load i64, i64* %number_pixels, align 8, !dbg !884
  %71 = load i8*, i8** %p, align 8, !dbg !885
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !886
  call void @ImportGreenQuantum(%struct._QuantumInfo* %69, i64 %70, i8* %71, %struct._PixelPacket* %72), !dbg !887
  br label %sw.epilog, !dbg !888

sw.bb25:                                          ; preds = %if.end13
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !889
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !891
  %75 = load i64, i64* %number_pixels, align 8, !dbg !892
  %76 = load i8*, i8** %p, align 8, !dbg !893
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !894
  %78 = load i16*, i16** %indexes, align 8, !dbg !895
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !896
  call void @ImportIndexQuantum(%struct._Image* %73, %struct._QuantumInfo* %74, i64 %75, i8* %76, %struct._PixelPacket* %77, i16* %78, %struct._ExceptionInfo* %79), !dbg !897
  br label %sw.epilog, !dbg !898

sw.bb26:                                          ; preds = %if.end13
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !899
  %81 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !901
  %82 = load i64, i64* %number_pixels, align 8, !dbg !902
  %83 = load i8*, i8** %p, align 8, !dbg !903
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !904
  %85 = load i16*, i16** %indexes, align 8, !dbg !905
  %86 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !906
  call void @ImportIndexAlphaQuantum(%struct._Image* %80, %struct._QuantumInfo* %81, i64 %82, i8* %83, %struct._PixelPacket* %84, i16* %85, %struct._ExceptionInfo* %86), !dbg !907
  br label %sw.epilog, !dbg !908

sw.bb27:                                          ; preds = %if.end13, %if.end13
  %87 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !909
  %88 = load i64, i64* %number_pixels, align 8, !dbg !911
  %89 = load i8*, i8** %p, align 8, !dbg !912
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !913
  call void @ImportRedQuantum(%struct._QuantumInfo* %87, i64 %88, i8* %89, %struct._PixelPacket* %90), !dbg !914
  br label %sw.epilog, !dbg !915

sw.bb28:                                          ; preds = %if.end13, %if.end13
  %91 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !916
  %92 = load i64, i64* %number_pixels, align 8, !dbg !918
  %93 = load i8*, i8** %p, align 8, !dbg !919
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !920
  call void @ImportRGBQuantum(%struct._QuantumInfo* %91, i64 %92, i8* %93, %struct._PixelPacket* %94), !dbg !921
  br label %sw.epilog, !dbg !922

sw.bb29:                                          ; preds = %if.end13, %if.end13, %if.end13
  %95 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !923
  %96 = load i64, i64* %number_pixels, align 8, !dbg !925
  %97 = load i8*, i8** %p, align 8, !dbg !926
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !927
  call void @ImportRGBAQuantum(%struct._QuantumInfo* %95, i64 %96, i8* %97, %struct._PixelPacket* %98), !dbg !928
  br label %sw.epilog, !dbg !929

sw.default:                                       ; preds = %if.end13
  br label %sw.epilog, !dbg !930

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb
  %99 = load i32, i32* %quantum_type.addr, align 4, !dbg !931
  %cmp30 = icmp eq i32 %99, 23, !dbg !933
  br i1 %cmp30, label %if.then32, label %lor.lhs.false, !dbg !934

lor.lhs.false:                                    ; preds = %sw.epilog
  %100 = load i32, i32* %quantum_type.addr, align 4, !dbg !935
  %cmp31 = icmp eq i32 %100, 24, !dbg !936
  br i1 %cmp31, label %if.then32, label %if.end42, !dbg !937

if.then32:                                        ; preds = %lor.lhs.false, %sw.epilog
  call void @llvm.dbg.declare(metadata i16* %quantum, metadata !938, metadata !DIExpression()), !dbg !940
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q33, metadata !941, metadata !DIExpression()), !dbg !942
  %101 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !943
  %call34 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %101), !dbg !944
  store %struct._PixelPacket* %call34, %struct._PixelPacket** %q33, align 8, !dbg !945
  %102 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !946
  %cmp35 = icmp ne %struct._CacheView* %102, null, !dbg !948
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !949

if.then36:                                        ; preds = %if.then32
  %103 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !950
  %call37 = call %struct._PixelPacket* @GetCacheViewAuthenticPixelQueue(%struct._CacheView* %103), !dbg !951
  store %struct._PixelPacket* %call37, %struct._PixelPacket** %q33, align 8, !dbg !952
  br label %if.end38, !dbg !953

if.end38:                                         ; preds = %if.then36, %if.then32
  store i64 0, i64* %x, align 8, !dbg !954
  br label %for.cond, !dbg !956

for.cond:                                         ; preds = %for.inc, %if.end38
  %104 = load i64, i64* %x, align 8, !dbg !957
  %105 = load i64, i64* %number_pixels, align 8, !dbg !959
  %cmp39 = icmp slt i64 %104, %105, !dbg !960
  br i1 %cmp39, label %for.body, label %for.end, !dbg !961

for.body:                                         ; preds = %for.cond
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q33, align 8, !dbg !962
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 2, !dbg !962
  %107 = load i16, i16* %red, align 2, !dbg !962
  store i16 %107, i16* %quantum, align 2, !dbg !964
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %q33, align 8, !dbg !965
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 1, !dbg !965
  %109 = load i16, i16* %green, align 2, !dbg !965
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q33, align 8, !dbg !965
  %red40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 2, !dbg !965
  store i16 %109, i16* %red40, align 2, !dbg !965
  %111 = load i16, i16* %quantum, align 2, !dbg !966
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q33, align 8, !dbg !966
  %green41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 1, !dbg !966
  store i16 %111, i16* %green41, align 2, !dbg !966
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q33, align 8, !dbg !967
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !967
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q33, align 8, !dbg !967
  br label %for.inc, !dbg !968

for.inc:                                          ; preds = %for.body
  %114 = load i64, i64* %x, align 8, !dbg !969
  %inc = add nsw i64 %114, 1, !dbg !969
  store i64 %inc, i64* %x, align 8, !dbg !969
  br label %for.cond, !dbg !970, !llvm.loop !971

for.end:                                          ; preds = %for.cond
  br label %if.end42, !dbg !973

if.end42:                                         ; preds = %for.end, %lor.lhs.false
  %115 = load i32, i32* %quantum_type.addr, align 4, !dbg !974
  %cmp43 = icmp eq i32 %115, 17, !dbg !976
  br i1 %cmp43, label %if.then46, label %lor.lhs.false44, !dbg !977

lor.lhs.false44:                                  ; preds = %if.end42
  %116 = load i32, i32* %quantum_type.addr, align 4, !dbg !978
  %cmp45 = icmp eq i32 %116, 25, !dbg !979
  br i1 %cmp45, label %if.then46, label %if.end62, !dbg !980

if.then46:                                        ; preds = %lor.lhs.false44, %if.end42
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q47, metadata !981, metadata !DIExpression()), !dbg !983
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !984
  %call48 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %117), !dbg !985
  store %struct._PixelPacket* %call48, %struct._PixelPacket** %q47, align 8, !dbg !986
  %118 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !987
  %cmp49 = icmp ne %struct._CacheView* %118, null, !dbg !989
  br i1 %cmp49, label %if.then50, label %if.end52, !dbg !990

if.then50:                                        ; preds = %if.then46
  %119 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !991
  %call51 = call %struct._PixelPacket* @GetCacheViewAuthenticPixelQueue(%struct._CacheView* %119), !dbg !992
  store %struct._PixelPacket* %call51, %struct._PixelPacket** %q47, align 8, !dbg !993
  br label %if.end52, !dbg !994

if.end52:                                         ; preds = %if.then50, %if.then46
  store i64 0, i64* %x, align 8, !dbg !995
  br label %for.cond53, !dbg !997

for.cond53:                                       ; preds = %for.inc59, %if.end52
  %120 = load i64, i64* %x, align 8, !dbg !998
  %121 = load i64, i64* %number_pixels, align 8, !dbg !1000
  %cmp54 = icmp slt i64 %120, %121, !dbg !1001
  br i1 %cmp54, label %for.body55, label %for.end61, !dbg !1002

for.body55:                                       ; preds = %for.cond53
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %q47, align 8, !dbg !1003
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 3, !dbg !1003
  %123 = load i16, i16* %opacity, align 2, !dbg !1003
  %conv = zext i16 %123 to i32, !dbg !1003
  %sub = sub nsw i32 65535, %conv, !dbg !1003
  %conv56 = trunc i32 %sub to i16, !dbg !1003
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q47, align 8, !dbg !1003
  %opacity57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 3, !dbg !1003
  store i16 %conv56, i16* %opacity57, align 2, !dbg !1003
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %q47, align 8, !dbg !1005
  %incdec.ptr58 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %125, i32 1, !dbg !1005
  store %struct._PixelPacket* %incdec.ptr58, %struct._PixelPacket** %q47, align 8, !dbg !1005
  br label %for.inc59, !dbg !1006

for.inc59:                                        ; preds = %for.body55
  %126 = load i64, i64* %x, align 8, !dbg !1007
  %inc60 = add nsw i64 %126, 1, !dbg !1007
  store i64 %inc60, i64* %x, align 8, !dbg !1007
  br label %for.cond53, !dbg !1008, !llvm.loop !1009

for.end61:                                        ; preds = %for.cond53
  br label %if.end62, !dbg !1011

if.end62:                                         ; preds = %for.end61, %lor.lhs.false44
  %127 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1012
  %alpha_type = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %127, i32 0, i32 9, !dbg !1014
  %128 = load i32, i32* %alpha_type, align 8, !dbg !1014
  %cmp63 = icmp eq i32 %128, 2, !dbg !1015
  br i1 %cmp63, label %if.then65, label %if.end106, !dbg !1016

if.then65:                                        ; preds = %if.end62
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !1017, metadata !DIExpression()), !dbg !1019
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q66, metadata !1020, metadata !DIExpression()), !dbg !1021
  %129 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1022
  %call67 = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %129), !dbg !1023
  store %struct._PixelPacket* %call67, %struct._PixelPacket** %q66, align 8, !dbg !1024
  %130 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1025
  %cmp68 = icmp ne %struct._CacheView* %130, null, !dbg !1027
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !1028

if.then70:                                        ; preds = %if.then65
  %131 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !1029
  %call71 = call %struct._PixelPacket* @GetCacheViewAuthenticPixelQueue(%struct._CacheView* %131), !dbg !1030
  store %struct._PixelPacket* %call71, %struct._PixelPacket** %q66, align 8, !dbg !1031
  br label %if.end72, !dbg !1032

if.end72:                                         ; preds = %if.then70, %if.then65
  store i64 0, i64* %x, align 8, !dbg !1033
  br label %for.cond73, !dbg !1035

for.cond73:                                       ; preds = %for.inc103, %if.end72
  %132 = load i64, i64* %x, align 8, !dbg !1036
  %133 = load i64, i64* %number_pixels, align 8, !dbg !1038
  %cmp74 = icmp slt i64 %132, %133, !dbg !1039
  br i1 %cmp74, label %for.body76, label %for.end105, !dbg !1040

for.body76:                                       ; preds = %for.cond73
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1041
  %opacity77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 3, !dbg !1041
  %135 = load i16, i16* %opacity77, align 2, !dbg !1041
  %conv78 = zext i16 %135 to i32, !dbg !1041
  %sub79 = sub nsw i32 65535, %conv78, !dbg !1041
  %conv80 = sitofp i32 %sub79 to double, !dbg !1041
  %mul = fmul double 0x3EF0001000100010, %conv80, !dbg !1043
  %conv81 = fptrunc double %mul to float, !dbg !1044
  store float %conv81, float* %alpha, align 4, !dbg !1045
  %136 = load float, float* %alpha, align 4, !dbg !1046
  %conv82 = fpext float %136 to double, !dbg !1046
  %call83 = call double @PerceptibleReciprocal(double %conv82), !dbg !1047
  %conv84 = fptrunc double %call83 to float, !dbg !1047
  store float %conv84, float* %alpha, align 4, !dbg !1048
  %137 = load float, float* %alpha, align 4, !dbg !1049
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1049
  %red85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 2, !dbg !1049
  %139 = load i16, i16* %red85, align 2, !dbg !1049
  %conv86 = zext i16 %139 to i32, !dbg !1049
  %conv87 = sitofp i32 %conv86 to float, !dbg !1049
  %mul88 = fmul float %137, %conv87, !dbg !1049
  %call89 = call zeroext i16 @ClampToQuantum(float %mul88), !dbg !1049
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1049
  %red90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i32 0, i32 2, !dbg !1049
  store i16 %call89, i16* %red90, align 2, !dbg !1049
  %141 = load float, float* %alpha, align 4, !dbg !1050
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1050
  %green91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 0, i32 1, !dbg !1050
  %143 = load i16, i16* %green91, align 2, !dbg !1050
  %conv92 = zext i16 %143 to i32, !dbg !1050
  %conv93 = sitofp i32 %conv92 to float, !dbg !1050
  %mul94 = fmul float %141, %conv93, !dbg !1050
  %call95 = call zeroext i16 @ClampToQuantum(float %mul94), !dbg !1050
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1050
  %green96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 1, !dbg !1050
  store i16 %call95, i16* %green96, align 2, !dbg !1050
  %145 = load float, float* %alpha, align 4, !dbg !1051
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1051
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 0, i32 0, !dbg !1051
  %147 = load i16, i16* %blue, align 2, !dbg !1051
  %conv97 = zext i16 %147 to i32, !dbg !1051
  %conv98 = sitofp i32 %conv97 to float, !dbg !1051
  %mul99 = fmul float %145, %conv98, !dbg !1051
  %call100 = call zeroext i16 @ClampToQuantum(float %mul99), !dbg !1051
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1051
  %blue101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 0, !dbg !1051
  store i16 %call100, i16* %blue101, align 2, !dbg !1051
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q66, align 8, !dbg !1052
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 1, !dbg !1052
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %q66, align 8, !dbg !1052
  br label %for.inc103, !dbg !1053

for.inc103:                                       ; preds = %for.body76
  %150 = load i64, i64* %x, align 8, !dbg !1054
  %inc104 = add nsw i64 %150, 1, !dbg !1054
  store i64 %inc104, i64* %x, align 8, !dbg !1054
  br label %for.cond73, !dbg !1055, !llvm.loop !1056

for.end105:                                       ; preds = %for.cond73
  br label %if.end106, !dbg !1058

if.end106:                                        ; preds = %for.end105, %if.end62
  %151 = load i64, i64* %extent, align 8, !dbg !1059
  ret i64 %151, !dbg !1060
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local i8* @GetQuantumPixels(%struct._QuantumInfo*) #2

declare dso_local i64 @GetImageExtent(%struct._Image*) #2

declare dso_local %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image*) #2

declare dso_local i16* @GetAuthenticIndexQueue(%struct._Image*) #2

declare dso_local i64 @GetCacheViewExtent(%struct._CacheView*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixelQueue(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

declare hidden void @ResetQuantumState(%struct._QuantumInfo*) #2

declare dso_local i64 @GetQuantumExtent(%struct._Image*, %struct._QuantumInfo*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ImportAlphaQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !1061 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel5 = alloca i16, align 2
  %pixel43 = alloca i32, align 4
  %pixel48 = alloca float, align 4
  %pixel88 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !1064, metadata !DIExpression()), !dbg !1065
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !1066, metadata !DIExpression()), !dbg !1067
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1068, metadata !DIExpression()), !dbg !1069
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !1070, metadata !DIExpression()), !dbg !1071
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1072, metadata !DIExpression()), !dbg !1073
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !1074, metadata !DIExpression()), !dbg !1075
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1076
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !1077
  %1 = load i64, i64* %depth, align 8, !dbg !1077
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb4
    i64 32, label %sw.bb42
    i64 64, label %sw.bb83
  ], !dbg !1078

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !1079, metadata !DIExpression()), !dbg !1082
  store i64 0, i64* %x, align 8, !dbg !1083
  br label %for.cond, !dbg !1085

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !1086
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !1088
  %cmp = icmp slt i64 %2, %3, !dbg !1089
  br i1 %cmp, label %for.body, label %for.end, !dbg !1090

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !1091
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !1093
  store i8* %call, i8** %p.addr, align 8, !dbg !1094
  %5 = load i8, i8* %pixel1, align 1, !dbg !1095
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !1095
  %conv = zext i16 %call2 to i32, !dbg !1095
  %sub = sub nsw i32 65535, %conv, !dbg !1095
  %conv3 = trunc i32 %sub to i16, !dbg !1095
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1095
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 3, !dbg !1095
  store i16 %conv3, i16* %opacity, align 2, !dbg !1095
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1096
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 6, !dbg !1097
  %8 = load i64, i64* %pad, align 8, !dbg !1097
  %9 = load i8*, i8** %p.addr, align 8, !dbg !1098
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !1098
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !1098
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1099
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 1, !dbg !1099
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !1099
  br label %for.inc, !dbg !1100

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %x, align 8, !dbg !1101
  %inc = add nsw i64 %11, 1, !dbg !1101
  store i64 %inc, i64* %x, align 8, !dbg !1101
  br label %for.cond, !dbg !1102, !llvm.loop !1103

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !1105

sw.bb4:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel5, metadata !1106, metadata !DIExpression()), !dbg !1108
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1109
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 2, !dbg !1111
  %13 = load i32, i32* %format, align 8, !dbg !1111
  %cmp6 = icmp eq i32 %13, 1, !dbg !1112
  br i1 %cmp6, label %if.then, label %if.end, !dbg !1113

if.then:                                          ; preds = %sw.bb4
  store i64 0, i64* %x, align 8, !dbg !1114
  br label %for.cond8, !dbg !1117

for.cond8:                                        ; preds = %for.inc22, %if.then
  %14 = load i64, i64* %x, align 8, !dbg !1118
  %15 = load i64, i64* %number_pixels.addr, align 8, !dbg !1120
  %cmp9 = icmp slt i64 %14, %15, !dbg !1121
  br i1 %cmp9, label %for.body11, label %for.end24, !dbg !1122

for.body11:                                       ; preds = %for.cond8
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1123
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 13, !dbg !1125
  %17 = load i32, i32* %endian, align 8, !dbg !1125
  %18 = load i8*, i8** %p.addr, align 8, !dbg !1126
  %call12 = call i8* @PushShortPixel(i32 %17, i8* %18, i16* %pixel5), !dbg !1127
  store i8* %call12, i8** %p.addr, align 8, !dbg !1128
  %19 = load i16, i16* %pixel5, align 2, !dbg !1129
  %call13 = call float @HalfToSinglePrecision(i16 zeroext %19), !dbg !1129
  %mul = fmul float 6.553500e+04, %call13, !dbg !1129
  %call14 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !1129
  %conv15 = zext i16 %call14 to i32, !dbg !1129
  %sub16 = sub nsw i32 65535, %conv15, !dbg !1129
  %conv17 = trunc i32 %sub16 to i16, !dbg !1129
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1129
  %opacity18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 3, !dbg !1129
  store i16 %conv17, i16* %opacity18, align 2, !dbg !1129
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1130
  %pad19 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !1131
  %22 = load i64, i64* %pad19, align 8, !dbg !1131
  %23 = load i8*, i8** %p.addr, align 8, !dbg !1132
  %add.ptr20 = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !1132
  store i8* %add.ptr20, i8** %p.addr, align 8, !dbg !1132
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1133
  %incdec.ptr21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !1133
  store %struct._PixelPacket* %incdec.ptr21, %struct._PixelPacket** %q.addr, align 8, !dbg !1133
  br label %for.inc22, !dbg !1134

for.inc22:                                        ; preds = %for.body11
  %25 = load i64, i64* %x, align 8, !dbg !1135
  %inc23 = add nsw i64 %25, 1, !dbg !1135
  store i64 %inc23, i64* %x, align 8, !dbg !1135
  br label %for.cond8, !dbg !1136, !llvm.loop !1137

for.end24:                                        ; preds = %for.cond8
  br label %sw.epilog, !dbg !1139

if.end:                                           ; preds = %sw.bb4
  store i64 0, i64* %x, align 8, !dbg !1140
  br label %for.cond25, !dbg !1142

for.cond25:                                       ; preds = %for.inc39, %if.end
  %26 = load i64, i64* %x, align 8, !dbg !1143
  %27 = load i64, i64* %number_pixels.addr, align 8, !dbg !1145
  %cmp26 = icmp slt i64 %26, %27, !dbg !1146
  br i1 %cmp26, label %for.body28, label %for.end41, !dbg !1147

for.body28:                                       ; preds = %for.cond25
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1148
  %endian29 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 13, !dbg !1150
  %29 = load i32, i32* %endian29, align 8, !dbg !1150
  %30 = load i8*, i8** %p.addr, align 8, !dbg !1151
  %call30 = call i8* @PushShortPixel(i32 %29, i8* %30, i16* %pixel5), !dbg !1152
  store i8* %call30, i8** %p.addr, align 8, !dbg !1153
  %31 = load i16, i16* %pixel5, align 2, !dbg !1154
  %call31 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !1154
  %conv32 = zext i16 %call31 to i32, !dbg !1154
  %sub33 = sub nsw i32 65535, %conv32, !dbg !1154
  %conv34 = trunc i32 %sub33 to i16, !dbg !1154
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1154
  %opacity35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 3, !dbg !1154
  store i16 %conv34, i16* %opacity35, align 2, !dbg !1154
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1155
  %pad36 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 6, !dbg !1156
  %34 = load i64, i64* %pad36, align 8, !dbg !1156
  %35 = load i8*, i8** %p.addr, align 8, !dbg !1157
  %add.ptr37 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !1157
  store i8* %add.ptr37, i8** %p.addr, align 8, !dbg !1157
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1158
  %incdec.ptr38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !1158
  store %struct._PixelPacket* %incdec.ptr38, %struct._PixelPacket** %q.addr, align 8, !dbg !1158
  br label %for.inc39, !dbg !1159

for.inc39:                                        ; preds = %for.body28
  %37 = load i64, i64* %x, align 8, !dbg !1160
  %inc40 = add nsw i64 %37, 1, !dbg !1160
  store i64 %inc40, i64* %x, align 8, !dbg !1160
  br label %for.cond25, !dbg !1161, !llvm.loop !1162

for.end41:                                        ; preds = %for.cond25
  br label %sw.epilog, !dbg !1164

sw.bb42:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel43, metadata !1165, metadata !DIExpression()), !dbg !1167
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1168
  %format44 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 2, !dbg !1170
  %39 = load i32, i32* %format44, align 8, !dbg !1170
  %cmp45 = icmp eq i32 %39, 1, !dbg !1171
  br i1 %cmp45, label %if.then47, label %if.end65, !dbg !1172

if.then47:                                        ; preds = %sw.bb42
  call void @llvm.dbg.declare(metadata float* %pixel48, metadata !1173, metadata !DIExpression()), !dbg !1175
  store i64 0, i64* %x, align 8, !dbg !1176
  br label %for.cond49, !dbg !1178

for.cond49:                                       ; preds = %for.inc62, %if.then47
  %40 = load i64, i64* %x, align 8, !dbg !1179
  %41 = load i64, i64* %number_pixels.addr, align 8, !dbg !1181
  %cmp50 = icmp slt i64 %40, %41, !dbg !1182
  br i1 %cmp50, label %for.body52, label %for.end64, !dbg !1183

for.body52:                                       ; preds = %for.cond49
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1184
  %43 = load i8*, i8** %p.addr, align 8, !dbg !1186
  %call53 = call i8* @PushFloatPixel(%struct._QuantumInfo* %42, i8* %43, float* %pixel48), !dbg !1187
  store i8* %call53, i8** %p.addr, align 8, !dbg !1188
  %44 = load float, float* %pixel48, align 4, !dbg !1189
  %call54 = call zeroext i16 @ClampToQuantum(float %44), !dbg !1189
  %conv55 = zext i16 %call54 to i32, !dbg !1189
  %sub56 = sub nsw i32 65535, %conv55, !dbg !1189
  %conv57 = trunc i32 %sub56 to i16, !dbg !1189
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1189
  %opacity58 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 3, !dbg !1189
  store i16 %conv57, i16* %opacity58, align 2, !dbg !1189
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1190
  %pad59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %46, i32 0, i32 6, !dbg !1191
  %47 = load i64, i64* %pad59, align 8, !dbg !1191
  %48 = load i8*, i8** %p.addr, align 8, !dbg !1192
  %add.ptr60 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !1192
  store i8* %add.ptr60, i8** %p.addr, align 8, !dbg !1192
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1193
  %incdec.ptr61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !1193
  store %struct._PixelPacket* %incdec.ptr61, %struct._PixelPacket** %q.addr, align 8, !dbg !1193
  br label %for.inc62, !dbg !1194

for.inc62:                                        ; preds = %for.body52
  %50 = load i64, i64* %x, align 8, !dbg !1195
  %inc63 = add nsw i64 %50, 1, !dbg !1195
  store i64 %inc63, i64* %x, align 8, !dbg !1195
  br label %for.cond49, !dbg !1196, !llvm.loop !1197

for.end64:                                        ; preds = %for.cond49
  br label %sw.epilog, !dbg !1199

if.end65:                                         ; preds = %sw.bb42
  store i64 0, i64* %x, align 8, !dbg !1200
  br label %for.cond66, !dbg !1202

for.cond66:                                       ; preds = %for.inc80, %if.end65
  %51 = load i64, i64* %x, align 8, !dbg !1203
  %52 = load i64, i64* %number_pixels.addr, align 8, !dbg !1205
  %cmp67 = icmp slt i64 %51, %52, !dbg !1206
  br i1 %cmp67, label %for.body69, label %for.end82, !dbg !1207

for.body69:                                       ; preds = %for.cond66
  %53 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1208
  %endian70 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %53, i32 0, i32 13, !dbg !1210
  %54 = load i32, i32* %endian70, align 8, !dbg !1210
  %55 = load i8*, i8** %p.addr, align 8, !dbg !1211
  %call71 = call i8* @PushLongPixel(i32 %54, i8* %55, i32* %pixel43), !dbg !1212
  store i8* %call71, i8** %p.addr, align 8, !dbg !1213
  %56 = load i32, i32* %pixel43, align 4, !dbg !1214
  %call72 = call zeroext i16 @ScaleLongToQuantum(i32 %56), !dbg !1214
  %conv73 = zext i16 %call72 to i32, !dbg !1214
  %sub74 = sub nsw i32 65535, %conv73, !dbg !1214
  %conv75 = trunc i32 %sub74 to i16, !dbg !1214
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1214
  %opacity76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !1214
  store i16 %conv75, i16* %opacity76, align 2, !dbg !1214
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1215
  %pad77 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !1216
  %59 = load i64, i64* %pad77, align 8, !dbg !1216
  %60 = load i8*, i8** %p.addr, align 8, !dbg !1217
  %add.ptr78 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !1217
  store i8* %add.ptr78, i8** %p.addr, align 8, !dbg !1217
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1218
  %incdec.ptr79 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !1218
  store %struct._PixelPacket* %incdec.ptr79, %struct._PixelPacket** %q.addr, align 8, !dbg !1218
  br label %for.inc80, !dbg !1219

for.inc80:                                        ; preds = %for.body69
  %62 = load i64, i64* %x, align 8, !dbg !1220
  %inc81 = add nsw i64 %62, 1, !dbg !1220
  store i64 %inc81, i64* %x, align 8, !dbg !1220
  br label %for.cond66, !dbg !1221, !llvm.loop !1222

for.end82:                                        ; preds = %for.cond66
  br label %sw.epilog, !dbg !1224

sw.bb83:                                          ; preds = %entry
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1225
  %format84 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 2, !dbg !1228
  %64 = load i32, i32* %format84, align 8, !dbg !1228
  %cmp85 = icmp eq i32 %64, 1, !dbg !1229
  br i1 %cmp85, label %if.then87, label %if.end106, !dbg !1230

if.then87:                                        ; preds = %sw.bb83
  call void @llvm.dbg.declare(metadata double* %pixel88, metadata !1231, metadata !DIExpression()), !dbg !1233
  store i64 0, i64* %x, align 8, !dbg !1234
  br label %for.cond89, !dbg !1236

for.cond89:                                       ; preds = %for.inc103, %if.then87
  %65 = load i64, i64* %x, align 8, !dbg !1237
  %66 = load i64, i64* %number_pixels.addr, align 8, !dbg !1239
  %cmp90 = icmp slt i64 %65, %66, !dbg !1240
  br i1 %cmp90, label %for.body92, label %for.end105, !dbg !1241

for.body92:                                       ; preds = %for.cond89
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1242
  %68 = load i8*, i8** %p.addr, align 8, !dbg !1244
  %call93 = call i8* @PushDoublePixel(%struct._QuantumInfo* %67, i8* %68, double* %pixel88), !dbg !1245
  store i8* %call93, i8** %p.addr, align 8, !dbg !1246
  %69 = load double, double* %pixel88, align 8, !dbg !1247
  %conv94 = fptrunc double %69 to float, !dbg !1247
  %call95 = call zeroext i16 @ClampToQuantum(float %conv94), !dbg !1247
  %conv96 = zext i16 %call95 to i32, !dbg !1247
  %sub97 = sub nsw i32 65535, %conv96, !dbg !1247
  %conv98 = trunc i32 %sub97 to i16, !dbg !1247
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1247
  %opacity99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 3, !dbg !1247
  store i16 %conv98, i16* %opacity99, align 2, !dbg !1247
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1248
  %pad100 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %71, i32 0, i32 6, !dbg !1249
  %72 = load i64, i64* %pad100, align 8, !dbg !1249
  %73 = load i8*, i8** %p.addr, align 8, !dbg !1250
  %add.ptr101 = getelementptr inbounds i8, i8* %73, i64 %72, !dbg !1250
  store i8* %add.ptr101, i8** %p.addr, align 8, !dbg !1250
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1251
  %incdec.ptr102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 1, !dbg !1251
  store %struct._PixelPacket* %incdec.ptr102, %struct._PixelPacket** %q.addr, align 8, !dbg !1251
  br label %for.inc103, !dbg !1252

for.inc103:                                       ; preds = %for.body92
  %75 = load i64, i64* %x, align 8, !dbg !1253
  %inc104 = add nsw i64 %75, 1, !dbg !1253
  store i64 %inc104, i64* %x, align 8, !dbg !1253
  br label %for.cond89, !dbg !1254, !llvm.loop !1255

for.end105:                                       ; preds = %for.cond89
  br label %sw.epilog, !dbg !1257

if.end106:                                        ; preds = %sw.bb83
  br label %sw.default, !dbg !1258

sw.default:                                       ; preds = %entry, %if.end106
  call void @llvm.dbg.declare(metadata i64* %range, metadata !1259, metadata !DIExpression()), !dbg !1261
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1262
  %depth107 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 0, !dbg !1263
  %77 = load i64, i64* %depth107, align 8, !dbg !1263
  %call108 = call i64 @GetQuantumRange(i64 %77), !dbg !1264
  store i64 %call108, i64* %range, align 8, !dbg !1265
  store i64 0, i64* %x, align 8, !dbg !1266
  br label %for.cond109, !dbg !1268

for.cond109:                                      ; preds = %for.inc123, %sw.default
  %78 = load i64, i64* %x, align 8, !dbg !1269
  %79 = load i64, i64* %number_pixels.addr, align 8, !dbg !1271
  %cmp110 = icmp slt i64 %78, %79, !dbg !1272
  br i1 %cmp110, label %for.body112, label %for.end125, !dbg !1273

for.body112:                                      ; preds = %for.cond109
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1274
  %81 = load i8*, i8** %p.addr, align 8, !dbg !1276
  %call113 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %80, i8* %81, i32* %pixel), !dbg !1277
  store i8* %call113, i8** %p.addr, align 8, !dbg !1278
  %82 = load i32, i32* %pixel, align 4, !dbg !1279
  %conv114 = zext i32 %82 to i64, !dbg !1279
  %83 = load i64, i64* %range, align 8, !dbg !1279
  %call115 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv114, i64 %83), !dbg !1279
  %conv116 = zext i16 %call115 to i32, !dbg !1279
  %sub117 = sub nsw i32 65535, %conv116, !dbg !1279
  %conv118 = trunc i32 %sub117 to i16, !dbg !1279
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1279
  %opacity119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 3, !dbg !1279
  store i16 %conv118, i16* %opacity119, align 2, !dbg !1279
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1280
  %pad120 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 6, !dbg !1281
  %86 = load i64, i64* %pad120, align 8, !dbg !1281
  %87 = load i8*, i8** %p.addr, align 8, !dbg !1282
  %add.ptr121 = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !1282
  store i8* %add.ptr121, i8** %p.addr, align 8, !dbg !1282
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1283
  %incdec.ptr122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !1283
  store %struct._PixelPacket* %incdec.ptr122, %struct._PixelPacket** %q.addr, align 8, !dbg !1283
  br label %for.inc123, !dbg !1284

for.inc123:                                       ; preds = %for.body112
  %89 = load i64, i64* %x, align 8, !dbg !1285
  %inc124 = add nsw i64 %89, 1, !dbg !1285
  store i64 %inc124, i64* %x, align 8, !dbg !1285
  br label %for.cond109, !dbg !1286, !llvm.loop !1287

for.end125:                                       ; preds = %for.cond109
  br label %sw.epilog, !dbg !1289

sw.epilog:                                        ; preds = %for.end125, %for.end105, %for.end82, %for.end64, %for.end41, %for.end24, %for.end
  ret void, !dbg !1290
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportBGRQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !1291 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel84 = alloca i16, align 2
  %pixel227 = alloca i16, align 2
  %pixel283 = alloca i32, align 4
  %pixel288 = alloca float, align 4
  %pixel336 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !1292, metadata !DIExpression()), !dbg !1293
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !1294, metadata !DIExpression()), !dbg !1295
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1296, metadata !DIExpression()), !dbg !1297
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !1298, metadata !DIExpression()), !dbg !1299
  call void @llvm.dbg.declare(metadata i64* %range, metadata !1300, metadata !DIExpression()), !dbg !1301
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1302, metadata !DIExpression()), !dbg !1303
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !1304, metadata !DIExpression()), !dbg !1305
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !1306, metadata !DIExpression()), !dbg !1307
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1308
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !1309
  %1 = load i64, i64* %depth, align 8, !dbg !1309
  switch i64 %1, label %sw.default360 [
    i64 8, label %sw.bb
    i64 10, label %sw.bb7
    i64 12, label %sw.bb77
    i64 16, label %sw.bb226
    i64 32, label %sw.bb282
    i64 64, label %sw.bb331
  ], !dbg !1310

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !1311, metadata !DIExpression()), !dbg !1314
  store i64 0, i64* %x, align 8, !dbg !1315
  br label %for.cond, !dbg !1317

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !1318
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !1320
  %cmp = icmp slt i64 %2, %3, !dbg !1321
  br i1 %cmp, label %for.body, label %for.end, !dbg !1322

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !1323
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !1325
  store i8* %call, i8** %p.addr, align 8, !dbg !1326
  %5 = load i8, i8* %pixel1, align 1, !dbg !1327
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !1327
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1327
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !1327
  store i16 %call2, i16* %blue, align 2, !dbg !1327
  %7 = load i8*, i8** %p.addr, align 8, !dbg !1328
  %call3 = call i8* @PushCharPixel(i8* %7, i8* %pixel1), !dbg !1329
  store i8* %call3, i8** %p.addr, align 8, !dbg !1330
  %8 = load i8, i8* %pixel1, align 1, !dbg !1331
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %8), !dbg !1331
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1331
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 1, !dbg !1331
  store i16 %call4, i16* %green, align 2, !dbg !1331
  %10 = load i8*, i8** %p.addr, align 8, !dbg !1332
  %call5 = call i8* @PushCharPixel(i8* %10, i8* %pixel1), !dbg !1333
  store i8* %call5, i8** %p.addr, align 8, !dbg !1334
  %11 = load i8, i8* %pixel1, align 1, !dbg !1335
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %11), !dbg !1335
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1335
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 2, !dbg !1335
  store i16 %call6, i16* %red, align 2, !dbg !1335
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1336
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 3, !dbg !1336
  store i16 0, i16* %opacity, align 2, !dbg !1336
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1337
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 6, !dbg !1338
  %15 = load i64, i64* %pad, align 8, !dbg !1338
  %16 = load i8*, i8** %p.addr, align 8, !dbg !1339
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !1339
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !1339
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1340
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 1, !dbg !1340
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !1340
  br label %for.inc, !dbg !1341

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %x, align 8, !dbg !1342
  %inc = add nsw i64 %18, 1, !dbg !1342
  store i64 %inc, i64* %x, align 8, !dbg !1342
  br label %for.cond, !dbg !1343, !llvm.loop !1344

for.end:                                          ; preds = %for.cond
  br label %sw.epilog383, !dbg !1346

sw.bb7:                                           ; preds = %entry
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1347
  %depth8 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 0, !dbg !1349
  %20 = load i64, i64* %depth8, align 8, !dbg !1349
  %call9 = call i64 @GetQuantumRange(i64 %20), !dbg !1350
  store i64 %call9, i64* %range, align 8, !dbg !1351
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1352
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 8, !dbg !1354
  %22 = load i32, i32* %pack, align 4, !dbg !1354
  %cmp10 = icmp eq i32 %22, 0, !dbg !1355
  br i1 %cmp10, label %if.then, label %if.end, !dbg !1356

if.then:                                          ; preds = %sw.bb7
  store i64 0, i64* %x, align 8, !dbg !1357
  br label %for.cond11, !dbg !1360

for.cond11:                                       ; preds = %for.inc30, %if.then
  %23 = load i64, i64* %x, align 8, !dbg !1361
  %24 = load i64, i64* %number_pixels.addr, align 8, !dbg !1363
  %cmp12 = icmp slt i64 %23, %24, !dbg !1364
  br i1 %cmp12, label %for.body13, label %for.end32, !dbg !1365

for.body13:                                       ; preds = %for.cond11
  %25 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1366
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %25, i32 0, i32 13, !dbg !1368
  %26 = load i32, i32* %endian, align 8, !dbg !1368
  %27 = load i8*, i8** %p.addr, align 8, !dbg !1369
  %call14 = call i8* @PushLongPixel(i32 %26, i8* %27, i32* %pixel), !dbg !1370
  store i8* %call14, i8** %p.addr, align 8, !dbg !1371
  %28 = load i32, i32* %pixel, align 4, !dbg !1372
  %shr = lshr i32 %28, 22, !dbg !1372
  %and = and i32 %shr, 1023, !dbg !1372
  %conv = zext i32 %and to i64, !dbg !1372
  %29 = load i64, i64* %range, align 8, !dbg !1372
  %call15 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv, i64 %29), !dbg !1372
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1372
  %red16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !1372
  store i16 %call15, i16* %red16, align 2, !dbg !1372
  %31 = load i32, i32* %pixel, align 4, !dbg !1373
  %shr17 = lshr i32 %31, 12, !dbg !1373
  %and18 = and i32 %shr17, 1023, !dbg !1373
  %conv19 = zext i32 %and18 to i64, !dbg !1373
  %32 = load i64, i64* %range, align 8, !dbg !1373
  %call20 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv19, i64 %32), !dbg !1373
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1373
  %green21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 1, !dbg !1373
  store i16 %call20, i16* %green21, align 2, !dbg !1373
  %34 = load i32, i32* %pixel, align 4, !dbg !1374
  %shr22 = lshr i32 %34, 2, !dbg !1374
  %and23 = and i32 %shr22, 1023, !dbg !1374
  %conv24 = zext i32 %and23 to i64, !dbg !1374
  %35 = load i64, i64* %range, align 8, !dbg !1374
  %call25 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv24, i64 %35), !dbg !1374
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1374
  %blue26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !1374
  store i16 %call25, i16* %blue26, align 2, !dbg !1374
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1375
  %pad27 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !1376
  %38 = load i64, i64* %pad27, align 8, !dbg !1376
  %39 = load i8*, i8** %p.addr, align 8, !dbg !1377
  %add.ptr28 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !1377
  store i8* %add.ptr28, i8** %p.addr, align 8, !dbg !1377
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1378
  %incdec.ptr29 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 1, !dbg !1378
  store %struct._PixelPacket* %incdec.ptr29, %struct._PixelPacket** %q.addr, align 8, !dbg !1378
  br label %for.inc30, !dbg !1379

for.inc30:                                        ; preds = %for.body13
  %41 = load i64, i64* %x, align 8, !dbg !1380
  %inc31 = add nsw i64 %41, 1, !dbg !1380
  store i64 %inc31, i64* %x, align 8, !dbg !1380
  br label %for.cond11, !dbg !1381, !llvm.loop !1382

for.end32:                                        ; preds = %for.cond11
  br label %sw.epilog383, !dbg !1384

if.end:                                           ; preds = %sw.bb7
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1385
  %quantum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 1, !dbg !1387
  %43 = load i64, i64* %quantum, align 8, !dbg !1387
  %cmp33 = icmp eq i64 %43, 32, !dbg !1388
  br i1 %cmp33, label %if.then35, label %if.end56, !dbg !1389

if.then35:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !1390
  br label %for.cond36, !dbg !1393

for.cond36:                                       ; preds = %for.inc53, %if.then35
  %44 = load i64, i64* %x, align 8, !dbg !1394
  %45 = load i64, i64* %number_pixels.addr, align 8, !dbg !1396
  %cmp37 = icmp slt i64 %44, %45, !dbg !1397
  br i1 %cmp37, label %for.body39, label %for.end55, !dbg !1398

for.body39:                                       ; preds = %for.cond36
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1399
  %47 = load i8*, i8** %p.addr, align 8, !dbg !1401
  %call40 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %46, i8* %47, i32* %pixel), !dbg !1402
  store i8* %call40, i8** %p.addr, align 8, !dbg !1403
  %48 = load i32, i32* %pixel, align 4, !dbg !1404
  %conv41 = zext i32 %48 to i64, !dbg !1404
  %49 = load i64, i64* %range, align 8, !dbg !1404
  %call42 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv41, i64 %49), !dbg !1404
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1404
  %blue43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 0, !dbg !1404
  store i16 %call42, i16* %blue43, align 2, !dbg !1404
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1405
  %52 = load i8*, i8** %p.addr, align 8, !dbg !1406
  %call44 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %51, i8* %52, i32* %pixel), !dbg !1407
  store i8* %call44, i8** %p.addr, align 8, !dbg !1408
  %53 = load i32, i32* %pixel, align 4, !dbg !1409
  %conv45 = zext i32 %53 to i64, !dbg !1409
  %54 = load i64, i64* %range, align 8, !dbg !1409
  %call46 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv45, i64 %54), !dbg !1409
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1409
  %green47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !1409
  store i16 %call46, i16* %green47, align 2, !dbg !1409
  %56 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1410
  %57 = load i8*, i8** %p.addr, align 8, !dbg !1411
  %call48 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %56, i8* %57, i32* %pixel), !dbg !1412
  store i8* %call48, i8** %p.addr, align 8, !dbg !1413
  %58 = load i32, i32* %pixel, align 4, !dbg !1414
  %conv49 = zext i32 %58 to i64, !dbg !1414
  %59 = load i64, i64* %range, align 8, !dbg !1414
  %call50 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv49, i64 %59), !dbg !1414
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1414
  %red51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 2, !dbg !1414
  store i16 %call50, i16* %red51, align 2, !dbg !1414
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1415
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !1415
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %q.addr, align 8, !dbg !1415
  br label %for.inc53, !dbg !1416

for.inc53:                                        ; preds = %for.body39
  %62 = load i64, i64* %x, align 8, !dbg !1417
  %inc54 = add nsw i64 %62, 1, !dbg !1417
  store i64 %inc54, i64* %x, align 8, !dbg !1417
  br label %for.cond36, !dbg !1418, !llvm.loop !1419

for.end55:                                        ; preds = %for.cond36
  br label %sw.epilog383, !dbg !1421

if.end56:                                         ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !1422
  br label %for.cond57, !dbg !1424

for.cond57:                                       ; preds = %for.inc74, %if.end56
  %63 = load i64, i64* %x, align 8, !dbg !1425
  %64 = load i64, i64* %number_pixels.addr, align 8, !dbg !1427
  %cmp58 = icmp slt i64 %63, %64, !dbg !1428
  br i1 %cmp58, label %for.body60, label %for.end76, !dbg !1429

for.body60:                                       ; preds = %for.cond57
  %65 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1430
  %66 = load i8*, i8** %p.addr, align 8, !dbg !1432
  %call61 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %65, i8* %66, i32* %pixel), !dbg !1433
  store i8* %call61, i8** %p.addr, align 8, !dbg !1434
  %67 = load i32, i32* %pixel, align 4, !dbg !1435
  %conv62 = zext i32 %67 to i64, !dbg !1435
  %68 = load i64, i64* %range, align 8, !dbg !1435
  %call63 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv62, i64 %68), !dbg !1435
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1435
  %blue64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 0, !dbg !1435
  store i16 %call63, i16* %blue64, align 2, !dbg !1435
  %70 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1436
  %71 = load i8*, i8** %p.addr, align 8, !dbg !1437
  %call65 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %70, i8* %71, i32* %pixel), !dbg !1438
  store i8* %call65, i8** %p.addr, align 8, !dbg !1439
  %72 = load i32, i32* %pixel, align 4, !dbg !1440
  %conv66 = zext i32 %72 to i64, !dbg !1440
  %73 = load i64, i64* %range, align 8, !dbg !1440
  %call67 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv66, i64 %73), !dbg !1440
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1440
  %green68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 1, !dbg !1440
  store i16 %call67, i16* %green68, align 2, !dbg !1440
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1441
  %76 = load i8*, i8** %p.addr, align 8, !dbg !1442
  %call69 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %75, i8* %76, i32* %pixel), !dbg !1443
  store i8* %call69, i8** %p.addr, align 8, !dbg !1444
  %77 = load i32, i32* %pixel, align 4, !dbg !1445
  %conv70 = zext i32 %77 to i64, !dbg !1445
  %78 = load i64, i64* %range, align 8, !dbg !1445
  %call71 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv70, i64 %78), !dbg !1445
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1445
  %red72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 2, !dbg !1445
  store i16 %call71, i16* %red72, align 2, !dbg !1445
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1446
  %incdec.ptr73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 1, !dbg !1446
  store %struct._PixelPacket* %incdec.ptr73, %struct._PixelPacket** %q.addr, align 8, !dbg !1446
  br label %for.inc74, !dbg !1447

for.inc74:                                        ; preds = %for.body60
  %81 = load i64, i64* %x, align 8, !dbg !1448
  %inc75 = add nsw i64 %81, 1, !dbg !1448
  store i64 %inc75, i64* %x, align 8, !dbg !1448
  br label %for.cond57, !dbg !1449, !llvm.loop !1450

for.end76:                                        ; preds = %for.cond57
  br label %sw.epilog383, !dbg !1452

sw.bb77:                                          ; preds = %entry
  %82 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1453
  %depth78 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %82, i32 0, i32 0, !dbg !1455
  %83 = load i64, i64* %depth78, align 8, !dbg !1455
  %call79 = call i64 @GetQuantumRange(i64 %83), !dbg !1456
  store i64 %call79, i64* %range, align 8, !dbg !1457
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1458
  %pack80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %84, i32 0, i32 8, !dbg !1460
  %85 = load i32, i32* %pack80, align 4, !dbg !1460
  %cmp81 = icmp eq i32 %85, 0, !dbg !1461
  br i1 %cmp81, label %if.then83, label %if.end180, !dbg !1462

if.then83:                                        ; preds = %sw.bb77
  call void @llvm.dbg.declare(metadata i16* %pixel84, metadata !1463, metadata !DIExpression()), !dbg !1465
  store i64 0, i64* %x, align 8, !dbg !1466
  br label %for.cond85, !dbg !1468

for.cond85:                                       ; preds = %for.inc136, %if.then83
  %86 = load i64, i64* %x, align 8, !dbg !1469
  %87 = load i64, i64* %number_pixels.addr, align 8, !dbg !1471
  %mul = mul i64 3, %87, !dbg !1472
  %sub = sub i64 %mul, 1, !dbg !1473
  %cmp86 = icmp slt i64 %86, %sub, !dbg !1474
  br i1 %cmp86, label %for.body88, label %for.end138, !dbg !1475

for.body88:                                       ; preds = %for.cond85
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1476
  %endian89 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 13, !dbg !1478
  %89 = load i32, i32* %endian89, align 8, !dbg !1478
  %90 = load i8*, i8** %p.addr, align 8, !dbg !1479
  %call90 = call i8* @PushShortPixel(i32 %89, i8* %90, i16* %pixel84), !dbg !1480
  store i8* %call90, i8** %p.addr, align 8, !dbg !1481
  %91 = load i64, i64* %x, align 8, !dbg !1482
  %rem = srem i64 %91, 3, !dbg !1483
  switch i64 %rem, label %sw.default [
    i64 0, label %sw.bb91
    i64 1, label %sw.bb97
    i64 2, label %sw.bb103
  ], !dbg !1484

sw.default:                                       ; preds = %for.body88
  br label %sw.bb91, !dbg !1485

sw.bb91:                                          ; preds = %for.body88, %sw.default
  %92 = load i16, i16* %pixel84, align 2, !dbg !1486
  %conv92 = zext i16 %92 to i32, !dbg !1486
  %shr93 = ashr i32 %conv92, 4, !dbg !1486
  %conv94 = sext i32 %shr93 to i64, !dbg !1486
  %93 = load i64, i64* %range, align 8, !dbg !1486
  %call95 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv94, i64 %93), !dbg !1486
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1486
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 2, !dbg !1486
  store i16 %call95, i16* %red96, align 2, !dbg !1486
  br label %sw.epilog, !dbg !1489

sw.bb97:                                          ; preds = %for.body88
  %95 = load i16, i16* %pixel84, align 2, !dbg !1490
  %conv98 = zext i16 %95 to i32, !dbg !1490
  %shr99 = ashr i32 %conv98, 4, !dbg !1490
  %conv100 = sext i32 %shr99 to i64, !dbg !1490
  %96 = load i64, i64* %range, align 8, !dbg !1490
  %call101 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv100, i64 %96), !dbg !1490
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1490
  %green102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 1, !dbg !1490
  store i16 %call101, i16* %green102, align 2, !dbg !1490
  br label %sw.epilog, !dbg !1492

sw.bb103:                                         ; preds = %for.body88
  %98 = load i16, i16* %pixel84, align 2, !dbg !1493
  %conv104 = zext i16 %98 to i32, !dbg !1493
  %shr105 = ashr i32 %conv104, 4, !dbg !1493
  %conv106 = sext i32 %shr105 to i64, !dbg !1493
  %99 = load i64, i64* %range, align 8, !dbg !1493
  %call107 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv106, i64 %99), !dbg !1493
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1493
  %blue108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 0, !dbg !1493
  store i16 %call107, i16* %blue108, align 2, !dbg !1493
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1495
  %incdec.ptr109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 1, !dbg !1495
  store %struct._PixelPacket* %incdec.ptr109, %struct._PixelPacket** %q.addr, align 8, !dbg !1495
  br label %sw.epilog, !dbg !1496

sw.epilog:                                        ; preds = %sw.bb103, %sw.bb97, %sw.bb91
  %102 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1497
  %endian110 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %102, i32 0, i32 13, !dbg !1498
  %103 = load i32, i32* %endian110, align 8, !dbg !1498
  %104 = load i8*, i8** %p.addr, align 8, !dbg !1499
  %call111 = call i8* @PushShortPixel(i32 %103, i8* %104, i16* %pixel84), !dbg !1500
  store i8* %call111, i8** %p.addr, align 8, !dbg !1501
  %105 = load i64, i64* %x, align 8, !dbg !1502
  %add = add nsw i64 %105, 1, !dbg !1503
  %rem112 = srem i64 %add, 3, !dbg !1504
  switch i64 %rem112, label %sw.default113 [
    i64 0, label %sw.bb114
    i64 1, label %sw.bb120
    i64 2, label %sw.bb126
  ], !dbg !1505

sw.default113:                                    ; preds = %sw.epilog
  br label %sw.bb114, !dbg !1506

sw.bb114:                                         ; preds = %sw.epilog, %sw.default113
  %106 = load i16, i16* %pixel84, align 2, !dbg !1507
  %conv115 = zext i16 %106 to i32, !dbg !1507
  %shr116 = ashr i32 %conv115, 4, !dbg !1507
  %conv117 = sext i32 %shr116 to i64, !dbg !1507
  %107 = load i64, i64* %range, align 8, !dbg !1507
  %call118 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv117, i64 %107), !dbg !1507
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1507
  %red119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 2, !dbg !1507
  store i16 %call118, i16* %red119, align 2, !dbg !1507
  br label %sw.epilog133, !dbg !1510

sw.bb120:                                         ; preds = %sw.epilog
  %109 = load i16, i16* %pixel84, align 2, !dbg !1511
  %conv121 = zext i16 %109 to i32, !dbg !1511
  %shr122 = ashr i32 %conv121, 4, !dbg !1511
  %conv123 = sext i32 %shr122 to i64, !dbg !1511
  %110 = load i64, i64* %range, align 8, !dbg !1511
  %call124 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv123, i64 %110), !dbg !1511
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1511
  %green125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i32 0, i32 1, !dbg !1511
  store i16 %call124, i16* %green125, align 2, !dbg !1511
  br label %sw.epilog133, !dbg !1513

sw.bb126:                                         ; preds = %sw.epilog
  %112 = load i16, i16* %pixel84, align 2, !dbg !1514
  %conv127 = zext i16 %112 to i32, !dbg !1514
  %shr128 = ashr i32 %conv127, 4, !dbg !1514
  %conv129 = sext i32 %shr128 to i64, !dbg !1514
  %113 = load i64, i64* %range, align 8, !dbg !1514
  %call130 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv129, i64 %113), !dbg !1514
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1514
  %blue131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 0, !dbg !1514
  store i16 %call130, i16* %blue131, align 2, !dbg !1514
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1516
  %incdec.ptr132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 1, !dbg !1516
  store %struct._PixelPacket* %incdec.ptr132, %struct._PixelPacket** %q.addr, align 8, !dbg !1516
  br label %sw.epilog133, !dbg !1517

sw.epilog133:                                     ; preds = %sw.bb126, %sw.bb120, %sw.bb114
  %116 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1518
  %pad134 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %116, i32 0, i32 6, !dbg !1519
  %117 = load i64, i64* %pad134, align 8, !dbg !1519
  %118 = load i8*, i8** %p.addr, align 8, !dbg !1520
  %add.ptr135 = getelementptr inbounds i8, i8* %118, i64 %117, !dbg !1520
  store i8* %add.ptr135, i8** %p.addr, align 8, !dbg !1520
  br label %for.inc136, !dbg !1521

for.inc136:                                       ; preds = %sw.epilog133
  %119 = load i64, i64* %x, align 8, !dbg !1522
  %add137 = add nsw i64 %119, 2, !dbg !1522
  store i64 %add137, i64* %x, align 8, !dbg !1522
  br label %for.cond85, !dbg !1523, !llvm.loop !1524

for.end138:                                       ; preds = %for.cond85
  store i64 0, i64* %bit, align 8, !dbg !1526
  br label %for.cond139, !dbg !1528

for.cond139:                                      ; preds = %for.inc172, %for.end138
  %120 = load i64, i64* %bit, align 8, !dbg !1529
  %121 = load i64, i64* %number_pixels.addr, align 8, !dbg !1531
  %mul140 = mul i64 3, %121, !dbg !1532
  %rem141 = urem i64 %mul140, 2, !dbg !1533
  %cmp142 = icmp slt i64 %120, %rem141, !dbg !1534
  br i1 %cmp142, label %for.body144, label %for.end174, !dbg !1535

for.body144:                                      ; preds = %for.cond139
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1536
  %endian145 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 13, !dbg !1538
  %123 = load i32, i32* %endian145, align 8, !dbg !1538
  %124 = load i8*, i8** %p.addr, align 8, !dbg !1539
  %call146 = call i8* @PushShortPixel(i32 %123, i8* %124, i16* %pixel84), !dbg !1540
  store i8* %call146, i8** %p.addr, align 8, !dbg !1541
  %125 = load i64, i64* %x, align 8, !dbg !1542
  %126 = load i64, i64* %bit, align 8, !dbg !1543
  %add147 = add nsw i64 %125, %126, !dbg !1544
  %rem148 = srem i64 %add147, 3, !dbg !1545
  switch i64 %rem148, label %sw.default149 [
    i64 0, label %sw.bb150
    i64 1, label %sw.bb156
    i64 2, label %sw.bb162
  ], !dbg !1546

sw.default149:                                    ; preds = %for.body144
  br label %sw.bb150, !dbg !1547

sw.bb150:                                         ; preds = %for.body144, %sw.default149
  %127 = load i16, i16* %pixel84, align 2, !dbg !1548
  %conv151 = zext i16 %127 to i32, !dbg !1548
  %shr152 = ashr i32 %conv151, 4, !dbg !1548
  %conv153 = sext i32 %shr152 to i64, !dbg !1548
  %128 = load i64, i64* %range, align 8, !dbg !1548
  %call154 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv153, i64 %128), !dbg !1548
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1548
  %red155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 2, !dbg !1548
  store i16 %call154, i16* %red155, align 2, !dbg !1548
  br label %sw.epilog169, !dbg !1551

sw.bb156:                                         ; preds = %for.body144
  %130 = load i16, i16* %pixel84, align 2, !dbg !1552
  %conv157 = zext i16 %130 to i32, !dbg !1552
  %shr158 = ashr i32 %conv157, 4, !dbg !1552
  %conv159 = sext i32 %shr158 to i64, !dbg !1552
  %131 = load i64, i64* %range, align 8, !dbg !1552
  %call160 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv159, i64 %131), !dbg !1552
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1552
  %green161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 1, !dbg !1552
  store i16 %call160, i16* %green161, align 2, !dbg !1552
  br label %sw.epilog169, !dbg !1554

sw.bb162:                                         ; preds = %for.body144
  %133 = load i16, i16* %pixel84, align 2, !dbg !1555
  %conv163 = zext i16 %133 to i32, !dbg !1555
  %shr164 = ashr i32 %conv163, 4, !dbg !1555
  %conv165 = sext i32 %shr164 to i64, !dbg !1555
  %134 = load i64, i64* %range, align 8, !dbg !1555
  %call166 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv165, i64 %134), !dbg !1555
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1555
  %blue167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 0, !dbg !1555
  store i16 %call166, i16* %blue167, align 2, !dbg !1555
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1557
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 1, !dbg !1557
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %q.addr, align 8, !dbg !1557
  br label %sw.epilog169, !dbg !1558

sw.epilog169:                                     ; preds = %sw.bb162, %sw.bb156, %sw.bb150
  %137 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1559
  %pad170 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %137, i32 0, i32 6, !dbg !1560
  %138 = load i64, i64* %pad170, align 8, !dbg !1560
  %139 = load i8*, i8** %p.addr, align 8, !dbg !1561
  %add.ptr171 = getelementptr inbounds i8, i8* %139, i64 %138, !dbg !1561
  store i8* %add.ptr171, i8** %p.addr, align 8, !dbg !1561
  br label %for.inc172, !dbg !1562

for.inc172:                                       ; preds = %sw.epilog169
  %140 = load i64, i64* %bit, align 8, !dbg !1563
  %inc173 = add nsw i64 %140, 1, !dbg !1563
  store i64 %inc173, i64* %bit, align 8, !dbg !1563
  br label %for.cond139, !dbg !1564, !llvm.loop !1565

for.end174:                                       ; preds = %for.cond139
  %141 = load i64, i64* %bit, align 8, !dbg !1567
  %cmp175 = icmp ne i64 %141, 0, !dbg !1569
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !1570

if.then177:                                       ; preds = %for.end174
  %142 = load i8*, i8** %p.addr, align 8, !dbg !1571
  %incdec.ptr178 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !1571
  store i8* %incdec.ptr178, i8** %p.addr, align 8, !dbg !1571
  br label %if.end179, !dbg !1572

if.end179:                                        ; preds = %if.then177, %for.end174
  br label %sw.epilog383, !dbg !1573

if.end180:                                        ; preds = %sw.bb77
  %143 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1574
  %quantum181 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %143, i32 0, i32 1, !dbg !1576
  %144 = load i64, i64* %quantum181, align 8, !dbg !1576
  %cmp182 = icmp eq i64 %144, 32, !dbg !1577
  br i1 %cmp182, label %if.then184, label %if.end205, !dbg !1578

if.then184:                                       ; preds = %if.end180
  store i64 0, i64* %x, align 8, !dbg !1579
  br label %for.cond185, !dbg !1582

for.cond185:                                      ; preds = %for.inc202, %if.then184
  %145 = load i64, i64* %x, align 8, !dbg !1583
  %146 = load i64, i64* %number_pixels.addr, align 8, !dbg !1585
  %cmp186 = icmp slt i64 %145, %146, !dbg !1586
  br i1 %cmp186, label %for.body188, label %for.end204, !dbg !1587

for.body188:                                      ; preds = %for.cond185
  %147 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1588
  %148 = load i8*, i8** %p.addr, align 8, !dbg !1590
  %call189 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %147, i8* %148, i32* %pixel), !dbg !1591
  store i8* %call189, i8** %p.addr, align 8, !dbg !1592
  %149 = load i32, i32* %pixel, align 4, !dbg !1593
  %conv190 = zext i32 %149 to i64, !dbg !1593
  %150 = load i64, i64* %range, align 8, !dbg !1593
  %call191 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv190, i64 %150), !dbg !1593
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1593
  %blue192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i32 0, i32 0, !dbg !1593
  store i16 %call191, i16* %blue192, align 2, !dbg !1593
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1594
  %153 = load i8*, i8** %p.addr, align 8, !dbg !1595
  %call193 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %152, i8* %153, i32* %pixel), !dbg !1596
  store i8* %call193, i8** %p.addr, align 8, !dbg !1597
  %154 = load i32, i32* %pixel, align 4, !dbg !1598
  %conv194 = zext i32 %154 to i64, !dbg !1598
  %155 = load i64, i64* %range, align 8, !dbg !1598
  %call195 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv194, i64 %155), !dbg !1598
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1598
  %green196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 1, !dbg !1598
  store i16 %call195, i16* %green196, align 2, !dbg !1598
  %157 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1599
  %158 = load i8*, i8** %p.addr, align 8, !dbg !1600
  %call197 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %157, i8* %158, i32* %pixel), !dbg !1601
  store i8* %call197, i8** %p.addr, align 8, !dbg !1602
  %159 = load i32, i32* %pixel, align 4, !dbg !1603
  %conv198 = zext i32 %159 to i64, !dbg !1603
  %160 = load i64, i64* %range, align 8, !dbg !1603
  %call199 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv198, i64 %160), !dbg !1603
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1603
  %red200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 2, !dbg !1603
  store i16 %call199, i16* %red200, align 2, !dbg !1603
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1604
  %incdec.ptr201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 1, !dbg !1604
  store %struct._PixelPacket* %incdec.ptr201, %struct._PixelPacket** %q.addr, align 8, !dbg !1604
  br label %for.inc202, !dbg !1605

for.inc202:                                       ; preds = %for.body188
  %163 = load i64, i64* %x, align 8, !dbg !1606
  %inc203 = add nsw i64 %163, 1, !dbg !1606
  store i64 %inc203, i64* %x, align 8, !dbg !1606
  br label %for.cond185, !dbg !1607, !llvm.loop !1608

for.end204:                                       ; preds = %for.cond185
  br label %sw.epilog383, !dbg !1610

if.end205:                                        ; preds = %if.end180
  store i64 0, i64* %x, align 8, !dbg !1611
  br label %for.cond206, !dbg !1613

for.cond206:                                      ; preds = %for.inc223, %if.end205
  %164 = load i64, i64* %x, align 8, !dbg !1614
  %165 = load i64, i64* %number_pixels.addr, align 8, !dbg !1616
  %cmp207 = icmp slt i64 %164, %165, !dbg !1617
  br i1 %cmp207, label %for.body209, label %for.end225, !dbg !1618

for.body209:                                      ; preds = %for.cond206
  %166 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1619
  %167 = load i8*, i8** %p.addr, align 8, !dbg !1621
  %call210 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %166, i8* %167, i32* %pixel), !dbg !1622
  store i8* %call210, i8** %p.addr, align 8, !dbg !1623
  %168 = load i32, i32* %pixel, align 4, !dbg !1624
  %conv211 = zext i32 %168 to i64, !dbg !1624
  %169 = load i64, i64* %range, align 8, !dbg !1624
  %call212 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv211, i64 %169), !dbg !1624
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1624
  %blue213 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 0, i32 0, !dbg !1624
  store i16 %call212, i16* %blue213, align 2, !dbg !1624
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1625
  %172 = load i8*, i8** %p.addr, align 8, !dbg !1626
  %call214 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %171, i8* %172, i32* %pixel), !dbg !1627
  store i8* %call214, i8** %p.addr, align 8, !dbg !1628
  %173 = load i32, i32* %pixel, align 4, !dbg !1629
  %conv215 = zext i32 %173 to i64, !dbg !1629
  %174 = load i64, i64* %range, align 8, !dbg !1629
  %call216 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv215, i64 %174), !dbg !1629
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1629
  %green217 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 1, !dbg !1629
  store i16 %call216, i16* %green217, align 2, !dbg !1629
  %176 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1630
  %177 = load i8*, i8** %p.addr, align 8, !dbg !1631
  %call218 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %176, i8* %177, i32* %pixel), !dbg !1632
  store i8* %call218, i8** %p.addr, align 8, !dbg !1633
  %178 = load i32, i32* %pixel, align 4, !dbg !1634
  %conv219 = zext i32 %178 to i64, !dbg !1634
  %179 = load i64, i64* %range, align 8, !dbg !1634
  %call220 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv219, i64 %179), !dbg !1634
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1634
  %red221 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 2, !dbg !1634
  store i16 %call220, i16* %red221, align 2, !dbg !1634
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1635
  %incdec.ptr222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 1, !dbg !1635
  store %struct._PixelPacket* %incdec.ptr222, %struct._PixelPacket** %q.addr, align 8, !dbg !1635
  br label %for.inc223, !dbg !1636

for.inc223:                                       ; preds = %for.body209
  %182 = load i64, i64* %x, align 8, !dbg !1637
  %inc224 = add nsw i64 %182, 1, !dbg !1637
  store i64 %inc224, i64* %x, align 8, !dbg !1637
  br label %for.cond206, !dbg !1638, !llvm.loop !1639

for.end225:                                       ; preds = %for.cond206
  br label %sw.epilog383, !dbg !1641

sw.bb226:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel227, metadata !1642, metadata !DIExpression()), !dbg !1644
  %183 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1645
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %183, i32 0, i32 2, !dbg !1647
  %184 = load i32, i32* %format, align 8, !dbg !1647
  %cmp228 = icmp eq i32 %184, 1, !dbg !1648
  br i1 %cmp228, label %if.then230, label %if.end259, !dbg !1649

if.then230:                                       ; preds = %sw.bb226
  store i64 0, i64* %x, align 8, !dbg !1650
  br label %for.cond231, !dbg !1653

for.cond231:                                      ; preds = %for.inc256, %if.then230
  %185 = load i64, i64* %x, align 8, !dbg !1654
  %186 = load i64, i64* %number_pixels.addr, align 8, !dbg !1656
  %cmp232 = icmp slt i64 %185, %186, !dbg !1657
  br i1 %cmp232, label %for.body234, label %for.end258, !dbg !1658

for.body234:                                      ; preds = %for.cond231
  %187 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1659
  %endian235 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %187, i32 0, i32 13, !dbg !1661
  %188 = load i32, i32* %endian235, align 8, !dbg !1661
  %189 = load i8*, i8** %p.addr, align 8, !dbg !1662
  %call236 = call i8* @PushShortPixel(i32 %188, i8* %189, i16* %pixel227), !dbg !1663
  store i8* %call236, i8** %p.addr, align 8, !dbg !1664
  %190 = load i16, i16* %pixel227, align 2, !dbg !1665
  %call237 = call float @HalfToSinglePrecision(i16 zeroext %190), !dbg !1665
  %mul238 = fmul float 6.553500e+04, %call237, !dbg !1665
  %call239 = call zeroext i16 @ClampToQuantum(float %mul238), !dbg !1665
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1665
  %red240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i32 0, i32 2, !dbg !1665
  store i16 %call239, i16* %red240, align 2, !dbg !1665
  %192 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1666
  %endian241 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %192, i32 0, i32 13, !dbg !1667
  %193 = load i32, i32* %endian241, align 8, !dbg !1667
  %194 = load i8*, i8** %p.addr, align 8, !dbg !1668
  %call242 = call i8* @PushShortPixel(i32 %193, i8* %194, i16* %pixel227), !dbg !1669
  store i8* %call242, i8** %p.addr, align 8, !dbg !1670
  %195 = load i16, i16* %pixel227, align 2, !dbg !1671
  %call243 = call float @HalfToSinglePrecision(i16 zeroext %195), !dbg !1671
  %mul244 = fmul float 6.553500e+04, %call243, !dbg !1671
  %call245 = call zeroext i16 @ClampToQuantum(float %mul244), !dbg !1671
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1671
  %green246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 1, !dbg !1671
  store i16 %call245, i16* %green246, align 2, !dbg !1671
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1672
  %endian247 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %197, i32 0, i32 13, !dbg !1673
  %198 = load i32, i32* %endian247, align 8, !dbg !1673
  %199 = load i8*, i8** %p.addr, align 8, !dbg !1674
  %call248 = call i8* @PushShortPixel(i32 %198, i8* %199, i16* %pixel227), !dbg !1675
  store i8* %call248, i8** %p.addr, align 8, !dbg !1676
  %200 = load i16, i16* %pixel227, align 2, !dbg !1677
  %call249 = call float @HalfToSinglePrecision(i16 zeroext %200), !dbg !1677
  %mul250 = fmul float 6.553500e+04, %call249, !dbg !1677
  %call251 = call zeroext i16 @ClampToQuantum(float %mul250), !dbg !1677
  %201 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1677
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %201, i32 0, i32 0, !dbg !1677
  store i16 %call251, i16* %blue252, align 2, !dbg !1677
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1678
  %pad253 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %202, i32 0, i32 6, !dbg !1679
  %203 = load i64, i64* %pad253, align 8, !dbg !1679
  %204 = load i8*, i8** %p.addr, align 8, !dbg !1680
  %add.ptr254 = getelementptr inbounds i8, i8* %204, i64 %203, !dbg !1680
  store i8* %add.ptr254, i8** %p.addr, align 8, !dbg !1680
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1681
  %incdec.ptr255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 1, !dbg !1681
  store %struct._PixelPacket* %incdec.ptr255, %struct._PixelPacket** %q.addr, align 8, !dbg !1681
  br label %for.inc256, !dbg !1682

for.inc256:                                       ; preds = %for.body234
  %206 = load i64, i64* %x, align 8, !dbg !1683
  %inc257 = add nsw i64 %206, 1, !dbg !1683
  store i64 %inc257, i64* %x, align 8, !dbg !1683
  br label %for.cond231, !dbg !1684, !llvm.loop !1685

for.end258:                                       ; preds = %for.cond231
  br label %sw.epilog383, !dbg !1687

if.end259:                                        ; preds = %sw.bb226
  store i64 0, i64* %x, align 8, !dbg !1688
  br label %for.cond260, !dbg !1690

for.cond260:                                      ; preds = %for.inc279, %if.end259
  %207 = load i64, i64* %x, align 8, !dbg !1691
  %208 = load i64, i64* %number_pixels.addr, align 8, !dbg !1693
  %cmp261 = icmp slt i64 %207, %208, !dbg !1694
  br i1 %cmp261, label %for.body263, label %for.end281, !dbg !1695

for.body263:                                      ; preds = %for.cond260
  %209 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1696
  %endian264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %209, i32 0, i32 13, !dbg !1698
  %210 = load i32, i32* %endian264, align 8, !dbg !1698
  %211 = load i8*, i8** %p.addr, align 8, !dbg !1699
  %call265 = call i8* @PushShortPixel(i32 %210, i8* %211, i16* %pixel227), !dbg !1700
  store i8* %call265, i8** %p.addr, align 8, !dbg !1701
  %212 = load i16, i16* %pixel227, align 2, !dbg !1702
  %call266 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %212), !dbg !1702
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1702
  %blue267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 0, i32 0, !dbg !1702
  store i16 %call266, i16* %blue267, align 2, !dbg !1702
  %214 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1703
  %endian268 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %214, i32 0, i32 13, !dbg !1704
  %215 = load i32, i32* %endian268, align 8, !dbg !1704
  %216 = load i8*, i8** %p.addr, align 8, !dbg !1705
  %call269 = call i8* @PushShortPixel(i32 %215, i8* %216, i16* %pixel227), !dbg !1706
  store i8* %call269, i8** %p.addr, align 8, !dbg !1707
  %217 = load i16, i16* %pixel227, align 2, !dbg !1708
  %call270 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %217), !dbg !1708
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1708
  %green271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 0, i32 1, !dbg !1708
  store i16 %call270, i16* %green271, align 2, !dbg !1708
  %219 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1709
  %endian272 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %219, i32 0, i32 13, !dbg !1710
  %220 = load i32, i32* %endian272, align 8, !dbg !1710
  %221 = load i8*, i8** %p.addr, align 8, !dbg !1711
  %call273 = call i8* @PushShortPixel(i32 %220, i8* %221, i16* %pixel227), !dbg !1712
  store i8* %call273, i8** %p.addr, align 8, !dbg !1713
  %222 = load i16, i16* %pixel227, align 2, !dbg !1714
  %call274 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %222), !dbg !1714
  %223 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1714
  %red275 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %223, i32 0, i32 2, !dbg !1714
  store i16 %call274, i16* %red275, align 2, !dbg !1714
  %224 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1715
  %pad276 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %224, i32 0, i32 6, !dbg !1716
  %225 = load i64, i64* %pad276, align 8, !dbg !1716
  %226 = load i8*, i8** %p.addr, align 8, !dbg !1717
  %add.ptr277 = getelementptr inbounds i8, i8* %226, i64 %225, !dbg !1717
  store i8* %add.ptr277, i8** %p.addr, align 8, !dbg !1717
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1718
  %incdec.ptr278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 1, !dbg !1718
  store %struct._PixelPacket* %incdec.ptr278, %struct._PixelPacket** %q.addr, align 8, !dbg !1718
  br label %for.inc279, !dbg !1719

for.inc279:                                       ; preds = %for.body263
  %228 = load i64, i64* %x, align 8, !dbg !1720
  %inc280 = add nsw i64 %228, 1, !dbg !1720
  store i64 %inc280, i64* %x, align 8, !dbg !1720
  br label %for.cond260, !dbg !1721, !llvm.loop !1722

for.end281:                                       ; preds = %for.cond260
  br label %sw.epilog383, !dbg !1724

sw.bb282:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel283, metadata !1725, metadata !DIExpression()), !dbg !1727
  %229 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1728
  %format284 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %229, i32 0, i32 2, !dbg !1730
  %230 = load i32, i32* %format284, align 8, !dbg !1730
  %cmp285 = icmp eq i32 %230, 1, !dbg !1731
  br i1 %cmp285, label %if.then287, label %if.end308, !dbg !1732

if.then287:                                       ; preds = %sw.bb282
  call void @llvm.dbg.declare(metadata float* %pixel288, metadata !1733, metadata !DIExpression()), !dbg !1735
  store i64 0, i64* %x, align 8, !dbg !1736
  br label %for.cond289, !dbg !1738

for.cond289:                                      ; preds = %for.inc305, %if.then287
  %231 = load i64, i64* %x, align 8, !dbg !1739
  %232 = load i64, i64* %number_pixels.addr, align 8, !dbg !1741
  %cmp290 = icmp slt i64 %231, %232, !dbg !1742
  br i1 %cmp290, label %for.body292, label %for.end307, !dbg !1743

for.body292:                                      ; preds = %for.cond289
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1744
  %234 = load i8*, i8** %p.addr, align 8, !dbg !1746
  %call293 = call i8* @PushFloatPixel(%struct._QuantumInfo* %233, i8* %234, float* %pixel288), !dbg !1747
  store i8* %call293, i8** %p.addr, align 8, !dbg !1748
  %235 = load float, float* %pixel288, align 4, !dbg !1749
  %call294 = call zeroext i16 @ClampToQuantum(float %235), !dbg !1749
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1749
  %red295 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 2, !dbg !1749
  store i16 %call294, i16* %red295, align 2, !dbg !1749
  %237 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1750
  %238 = load i8*, i8** %p.addr, align 8, !dbg !1751
  %call296 = call i8* @PushFloatPixel(%struct._QuantumInfo* %237, i8* %238, float* %pixel288), !dbg !1752
  store i8* %call296, i8** %p.addr, align 8, !dbg !1753
  %239 = load float, float* %pixel288, align 4, !dbg !1754
  %call297 = call zeroext i16 @ClampToQuantum(float %239), !dbg !1754
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1754
  %green298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 1, !dbg !1754
  store i16 %call297, i16* %green298, align 2, !dbg !1754
  %241 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1755
  %242 = load i8*, i8** %p.addr, align 8, !dbg !1756
  %call299 = call i8* @PushFloatPixel(%struct._QuantumInfo* %241, i8* %242, float* %pixel288), !dbg !1757
  store i8* %call299, i8** %p.addr, align 8, !dbg !1758
  %243 = load float, float* %pixel288, align 4, !dbg !1759
  %call300 = call zeroext i16 @ClampToQuantum(float %243), !dbg !1759
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1759
  %blue301 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 0, i32 0, !dbg !1759
  store i16 %call300, i16* %blue301, align 2, !dbg !1759
  %245 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1760
  %pad302 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %245, i32 0, i32 6, !dbg !1761
  %246 = load i64, i64* %pad302, align 8, !dbg !1761
  %247 = load i8*, i8** %p.addr, align 8, !dbg !1762
  %add.ptr303 = getelementptr inbounds i8, i8* %247, i64 %246, !dbg !1762
  store i8* %add.ptr303, i8** %p.addr, align 8, !dbg !1762
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1763
  %incdec.ptr304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i32 1, !dbg !1763
  store %struct._PixelPacket* %incdec.ptr304, %struct._PixelPacket** %q.addr, align 8, !dbg !1763
  br label %for.inc305, !dbg !1764

for.inc305:                                       ; preds = %for.body292
  %249 = load i64, i64* %x, align 8, !dbg !1765
  %inc306 = add nsw i64 %249, 1, !dbg !1765
  store i64 %inc306, i64* %x, align 8, !dbg !1765
  br label %for.cond289, !dbg !1766, !llvm.loop !1767

for.end307:                                       ; preds = %for.cond289
  br label %sw.epilog383, !dbg !1769

if.end308:                                        ; preds = %sw.bb282
  store i64 0, i64* %x, align 8, !dbg !1770
  br label %for.cond309, !dbg !1772

for.cond309:                                      ; preds = %for.inc328, %if.end308
  %250 = load i64, i64* %x, align 8, !dbg !1773
  %251 = load i64, i64* %number_pixels.addr, align 8, !dbg !1775
  %cmp310 = icmp slt i64 %250, %251, !dbg !1776
  br i1 %cmp310, label %for.body312, label %for.end330, !dbg !1777

for.body312:                                      ; preds = %for.cond309
  %252 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1778
  %endian313 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %252, i32 0, i32 13, !dbg !1780
  %253 = load i32, i32* %endian313, align 8, !dbg !1780
  %254 = load i8*, i8** %p.addr, align 8, !dbg !1781
  %call314 = call i8* @PushLongPixel(i32 %253, i8* %254, i32* %pixel283), !dbg !1782
  store i8* %call314, i8** %p.addr, align 8, !dbg !1783
  %255 = load i32, i32* %pixel283, align 4, !dbg !1784
  %call315 = call zeroext i16 @ScaleLongToQuantum(i32 %255), !dbg !1784
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1784
  %blue316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 0, !dbg !1784
  store i16 %call315, i16* %blue316, align 2, !dbg !1784
  %257 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1785
  %endian317 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %257, i32 0, i32 13, !dbg !1786
  %258 = load i32, i32* %endian317, align 8, !dbg !1786
  %259 = load i8*, i8** %p.addr, align 8, !dbg !1787
  %call318 = call i8* @PushLongPixel(i32 %258, i8* %259, i32* %pixel283), !dbg !1788
  store i8* %call318, i8** %p.addr, align 8, !dbg !1789
  %260 = load i32, i32* %pixel283, align 4, !dbg !1790
  %call319 = call zeroext i16 @ScaleLongToQuantum(i32 %260), !dbg !1790
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1790
  %green320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 1, !dbg !1790
  store i16 %call319, i16* %green320, align 2, !dbg !1790
  %262 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1791
  %endian321 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %262, i32 0, i32 13, !dbg !1792
  %263 = load i32, i32* %endian321, align 8, !dbg !1792
  %264 = load i8*, i8** %p.addr, align 8, !dbg !1793
  %call322 = call i8* @PushLongPixel(i32 %263, i8* %264, i32* %pixel283), !dbg !1794
  store i8* %call322, i8** %p.addr, align 8, !dbg !1795
  %265 = load i32, i32* %pixel283, align 4, !dbg !1796
  %call323 = call zeroext i16 @ScaleLongToQuantum(i32 %265), !dbg !1796
  %266 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1796
  %red324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %266, i32 0, i32 2, !dbg !1796
  store i16 %call323, i16* %red324, align 2, !dbg !1796
  %267 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1797
  %pad325 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %267, i32 0, i32 6, !dbg !1798
  %268 = load i64, i64* %pad325, align 8, !dbg !1798
  %269 = load i8*, i8** %p.addr, align 8, !dbg !1799
  %add.ptr326 = getelementptr inbounds i8, i8* %269, i64 %268, !dbg !1799
  store i8* %add.ptr326, i8** %p.addr, align 8, !dbg !1799
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1800
  %incdec.ptr327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i32 1, !dbg !1800
  store %struct._PixelPacket* %incdec.ptr327, %struct._PixelPacket** %q.addr, align 8, !dbg !1800
  br label %for.inc328, !dbg !1801

for.inc328:                                       ; preds = %for.body312
  %271 = load i64, i64* %x, align 8, !dbg !1802
  %inc329 = add nsw i64 %271, 1, !dbg !1802
  store i64 %inc329, i64* %x, align 8, !dbg !1802
  br label %for.cond309, !dbg !1803, !llvm.loop !1804

for.end330:                                       ; preds = %for.cond309
  br label %sw.epilog383, !dbg !1806

sw.bb331:                                         ; preds = %entry
  %272 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1807
  %format332 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %272, i32 0, i32 2, !dbg !1810
  %273 = load i32, i32* %format332, align 8, !dbg !1810
  %cmp333 = icmp eq i32 %273, 1, !dbg !1811
  br i1 %cmp333, label %if.then335, label %if.end359, !dbg !1812

if.then335:                                       ; preds = %sw.bb331
  call void @llvm.dbg.declare(metadata double* %pixel336, metadata !1813, metadata !DIExpression()), !dbg !1815
  store i64 0, i64* %x, align 8, !dbg !1816
  br label %for.cond337, !dbg !1818

for.cond337:                                      ; preds = %for.inc356, %if.then335
  %274 = load i64, i64* %x, align 8, !dbg !1819
  %275 = load i64, i64* %number_pixels.addr, align 8, !dbg !1821
  %cmp338 = icmp slt i64 %274, %275, !dbg !1822
  br i1 %cmp338, label %for.body340, label %for.end358, !dbg !1823

for.body340:                                      ; preds = %for.cond337
  %276 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1824
  %277 = load i8*, i8** %p.addr, align 8, !dbg !1826
  %call341 = call i8* @PushDoublePixel(%struct._QuantumInfo* %276, i8* %277, double* %pixel336), !dbg !1827
  store i8* %call341, i8** %p.addr, align 8, !dbg !1828
  %278 = load double, double* %pixel336, align 8, !dbg !1829
  %conv342 = fptrunc double %278 to float, !dbg !1829
  %call343 = call zeroext i16 @ClampToQuantum(float %conv342), !dbg !1829
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1829
  %red344 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 2, !dbg !1829
  store i16 %call343, i16* %red344, align 2, !dbg !1829
  %280 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1830
  %281 = load i8*, i8** %p.addr, align 8, !dbg !1831
  %call345 = call i8* @PushDoublePixel(%struct._QuantumInfo* %280, i8* %281, double* %pixel336), !dbg !1832
  store i8* %call345, i8** %p.addr, align 8, !dbg !1833
  %282 = load double, double* %pixel336, align 8, !dbg !1834
  %conv346 = fptrunc double %282 to float, !dbg !1834
  %call347 = call zeroext i16 @ClampToQuantum(float %conv346), !dbg !1834
  %283 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1834
  %green348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %283, i32 0, i32 1, !dbg !1834
  store i16 %call347, i16* %green348, align 2, !dbg !1834
  %284 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1835
  %285 = load i8*, i8** %p.addr, align 8, !dbg !1836
  %call349 = call i8* @PushDoublePixel(%struct._QuantumInfo* %284, i8* %285, double* %pixel336), !dbg !1837
  store i8* %call349, i8** %p.addr, align 8, !dbg !1838
  %286 = load double, double* %pixel336, align 8, !dbg !1839
  %conv350 = fptrunc double %286 to float, !dbg !1839
  %call351 = call zeroext i16 @ClampToQuantum(float %conv350), !dbg !1839
  %287 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1839
  %blue352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %287, i32 0, i32 0, !dbg !1839
  store i16 %call351, i16* %blue352, align 2, !dbg !1839
  %288 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1840
  %pad353 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %288, i32 0, i32 6, !dbg !1841
  %289 = load i64, i64* %pad353, align 8, !dbg !1841
  %290 = load i8*, i8** %p.addr, align 8, !dbg !1842
  %add.ptr354 = getelementptr inbounds i8, i8* %290, i64 %289, !dbg !1842
  store i8* %add.ptr354, i8** %p.addr, align 8, !dbg !1842
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1843
  %incdec.ptr355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 1, !dbg !1843
  store %struct._PixelPacket* %incdec.ptr355, %struct._PixelPacket** %q.addr, align 8, !dbg !1843
  br label %for.inc356, !dbg !1844

for.inc356:                                       ; preds = %for.body340
  %292 = load i64, i64* %x, align 8, !dbg !1845
  %inc357 = add nsw i64 %292, 1, !dbg !1845
  store i64 %inc357, i64* %x, align 8, !dbg !1845
  br label %for.cond337, !dbg !1846, !llvm.loop !1847

for.end358:                                       ; preds = %for.cond337
  br label %sw.epilog383, !dbg !1849

if.end359:                                        ; preds = %sw.bb331
  br label %sw.default360, !dbg !1850

sw.default360:                                    ; preds = %entry, %if.end359
  %293 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1851
  %depth361 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %293, i32 0, i32 0, !dbg !1853
  %294 = load i64, i64* %depth361, align 8, !dbg !1853
  %call362 = call i64 @GetQuantumRange(i64 %294), !dbg !1854
  store i64 %call362, i64* %range, align 8, !dbg !1855
  store i64 0, i64* %x, align 8, !dbg !1856
  br label %for.cond363, !dbg !1858

for.cond363:                                      ; preds = %for.inc380, %sw.default360
  %295 = load i64, i64* %x, align 8, !dbg !1859
  %296 = load i64, i64* %number_pixels.addr, align 8, !dbg !1861
  %cmp364 = icmp slt i64 %295, %296, !dbg !1862
  br i1 %cmp364, label %for.body366, label %for.end382, !dbg !1863

for.body366:                                      ; preds = %for.cond363
  %297 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1864
  %298 = load i8*, i8** %p.addr, align 8, !dbg !1866
  %call367 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %297, i8* %298, i32* %pixel), !dbg !1867
  store i8* %call367, i8** %p.addr, align 8, !dbg !1868
  %299 = load i32, i32* %pixel, align 4, !dbg !1869
  %conv368 = zext i32 %299 to i64, !dbg !1869
  %300 = load i64, i64* %range, align 8, !dbg !1869
  %call369 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv368, i64 %300), !dbg !1869
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1869
  %blue370 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 0, !dbg !1869
  store i16 %call369, i16* %blue370, align 2, !dbg !1869
  %302 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1870
  %303 = load i8*, i8** %p.addr, align 8, !dbg !1871
  %call371 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %302, i8* %303, i32* %pixel), !dbg !1872
  store i8* %call371, i8** %p.addr, align 8, !dbg !1873
  %304 = load i32, i32* %pixel, align 4, !dbg !1874
  %conv372 = zext i32 %304 to i64, !dbg !1874
  %305 = load i64, i64* %range, align 8, !dbg !1874
  %call373 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv372, i64 %305), !dbg !1874
  %306 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1874
  %green374 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %306, i32 0, i32 1, !dbg !1874
  store i16 %call373, i16* %green374, align 2, !dbg !1874
  %307 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1875
  %308 = load i8*, i8** %p.addr, align 8, !dbg !1876
  %call375 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %307, i8* %308, i32* %pixel), !dbg !1877
  store i8* %call375, i8** %p.addr, align 8, !dbg !1878
  %309 = load i32, i32* %pixel, align 4, !dbg !1879
  %conv376 = zext i32 %309 to i64, !dbg !1879
  %310 = load i64, i64* %range, align 8, !dbg !1879
  %call377 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv376, i64 %310), !dbg !1879
  %311 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1879
  %red378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %311, i32 0, i32 2, !dbg !1879
  store i16 %call377, i16* %red378, align 2, !dbg !1879
  %312 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1880
  %incdec.ptr379 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %312, i32 1, !dbg !1880
  store %struct._PixelPacket* %incdec.ptr379, %struct._PixelPacket** %q.addr, align 8, !dbg !1880
  br label %for.inc380, !dbg !1881

for.inc380:                                       ; preds = %for.body366
  %313 = load i64, i64* %x, align 8, !dbg !1882
  %inc381 = add nsw i64 %313, 1, !dbg !1882
  store i64 %inc381, i64* %x, align 8, !dbg !1882
  br label %for.cond363, !dbg !1883, !llvm.loop !1884

for.end382:                                       ; preds = %for.cond363
  br label %sw.epilog383, !dbg !1886

sw.epilog383:                                     ; preds = %for.end382, %for.end358, %for.end330, %for.end307, %for.end281, %for.end258, %for.end225, %for.end204, %if.end179, %for.end76, %for.end55, %for.end32, %for.end
  ret void, !dbg !1887
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportBGRAQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !1888 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %i = alloca i64, align 8
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  %pixel96 = alloca i16, align 2
  %pixel167 = alloca i32, align 4
  %pixel172 = alloca float, align 4
  %pixel233 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !1889, metadata !DIExpression()), !dbg !1890
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !1891, metadata !DIExpression()), !dbg !1892
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !1893, metadata !DIExpression()), !dbg !1894
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !1895, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.declare(metadata i64* %range, metadata !1897, metadata !DIExpression()), !dbg !1898
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1899, metadata !DIExpression()), !dbg !1900
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !1901, metadata !DIExpression()), !dbg !1902
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1903
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !1904
  %1 = load i64, i64* %depth, align 8, !dbg !1904
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 10, label %sw.bb10
    i64 16, label %sw.bb95
    i64 32, label %sw.bb166
    i64 64, label %sw.bb228
  ], !dbg !1905

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !1906, metadata !DIExpression()), !dbg !1909
  store i64 0, i64* %x, align 8, !dbg !1910
  br label %for.cond, !dbg !1912

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !1913
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !1915
  %cmp = icmp slt i64 %2, %3, !dbg !1916
  br i1 %cmp, label %for.body, label %for.end, !dbg !1917

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !1918
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !1920
  store i8* %call, i8** %p.addr, align 8, !dbg !1921
  %5 = load i8, i8* %pixel1, align 1, !dbg !1922
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !1922
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1922
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !1922
  store i16 %call2, i16* %blue, align 2, !dbg !1922
  %7 = load i8*, i8** %p.addr, align 8, !dbg !1923
  %call3 = call i8* @PushCharPixel(i8* %7, i8* %pixel1), !dbg !1924
  store i8* %call3, i8** %p.addr, align 8, !dbg !1925
  %8 = load i8, i8* %pixel1, align 1, !dbg !1926
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %8), !dbg !1926
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1926
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 1, !dbg !1926
  store i16 %call4, i16* %green, align 2, !dbg !1926
  %10 = load i8*, i8** %p.addr, align 8, !dbg !1927
  %call5 = call i8* @PushCharPixel(i8* %10, i8* %pixel1), !dbg !1928
  store i8* %call5, i8** %p.addr, align 8, !dbg !1929
  %11 = load i8, i8* %pixel1, align 1, !dbg !1930
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %11), !dbg !1930
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1930
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 2, !dbg !1930
  store i16 %call6, i16* %red, align 2, !dbg !1930
  %13 = load i8*, i8** %p.addr, align 8, !dbg !1931
  %call7 = call i8* @PushCharPixel(i8* %13, i8* %pixel1), !dbg !1932
  store i8* %call7, i8** %p.addr, align 8, !dbg !1933
  %14 = load i8, i8* %pixel1, align 1, !dbg !1934
  %call8 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %14), !dbg !1934
  %conv = zext i16 %call8 to i32, !dbg !1934
  %sub = sub nsw i32 65535, %conv, !dbg !1934
  %conv9 = trunc i32 %sub to i16, !dbg !1934
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1934
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 3, !dbg !1934
  store i16 %conv9, i16* %opacity, align 2, !dbg !1934
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1935
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 6, !dbg !1936
  %17 = load i64, i64* %pad, align 8, !dbg !1936
  %18 = load i8*, i8** %p.addr, align 8, !dbg !1937
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !1937
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !1937
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !1938
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 1, !dbg !1938
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !1938
  br label %for.inc, !dbg !1939

for.inc:                                          ; preds = %for.body
  %20 = load i64, i64* %x, align 8, !dbg !1940
  %inc = add nsw i64 %20, 1, !dbg !1940
  store i64 %inc, i64* %x, align 8, !dbg !1940
  br label %for.cond, !dbg !1941, !llvm.loop !1942

for.end:                                          ; preds = %for.cond
  br label %sw.epilog293, !dbg !1944

sw.bb10:                                          ; preds = %entry
  store i32 0, i32* %pixel, align 4, !dbg !1945
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1947
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 8, !dbg !1949
  %22 = load i32, i32* %pack, align 4, !dbg !1949
  %cmp11 = icmp eq i32 %22, 0, !dbg !1950
  br i1 %cmp11, label %if.then, label %if.end, !dbg !1951

if.then:                                          ; preds = %sw.bb10
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1952, metadata !DIExpression()), !dbg !1954
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !1955, metadata !DIExpression()), !dbg !1956
  call void @llvm.dbg.declare(metadata i64* %n, metadata !1957, metadata !DIExpression()), !dbg !1958
  store i64 0, i64* %n, align 8, !dbg !1959
  store i64 0, i64* %quantum, align 8, !dbg !1960
  store i64 0, i64* %x, align 8, !dbg !1961
  br label %for.cond13, !dbg !1963

for.cond13:                                       ; preds = %for.inc61, %if.then
  %23 = load i64, i64* %x, align 8, !dbg !1964
  %24 = load i64, i64* %number_pixels.addr, align 8, !dbg !1966
  %cmp14 = icmp slt i64 %23, %24, !dbg !1967
  br i1 %cmp14, label %for.body16, label %for.end63, !dbg !1968

for.body16:                                       ; preds = %for.cond13
  store i64 0, i64* %i, align 8, !dbg !1969
  br label %for.cond17, !dbg !1972

for.cond17:                                       ; preds = %for.inc55, %for.body16
  %25 = load i64, i64* %i, align 8, !dbg !1973
  %cmp18 = icmp slt i64 %25, 4, !dbg !1975
  br i1 %cmp18, label %for.body20, label %for.end57, !dbg !1976

for.body20:                                       ; preds = %for.cond17
  %26 = load i64, i64* %n, align 8, !dbg !1977
  %rem = srem i64 %26, 3, !dbg !1979
  switch i64 %rem, label %sw.epilog [
    i64 0, label %sw.bb21
    i64 1, label %sw.bb26
    i64 2, label %sw.bb33
  ], !dbg !1980

sw.bb21:                                          ; preds = %for.body20
  %27 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !1981
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %27, i32 0, i32 13, !dbg !1984
  %28 = load i32, i32* %endian, align 8, !dbg !1984
  %29 = load i8*, i8** %p.addr, align 8, !dbg !1985
  %call22 = call i8* @PushLongPixel(i32 %28, i8* %29, i32* %pixel), !dbg !1986
  store i8* %call22, i8** %p.addr, align 8, !dbg !1987
  %30 = load i32, i32* %pixel, align 4, !dbg !1988
  %shr = lshr i32 %30, 22, !dbg !1989
  %and = and i32 %shr, 1023, !dbg !1990
  %shl = shl i32 %and, 6, !dbg !1991
  %conv23 = trunc i32 %shl to i16, !dbg !1992
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv23), !dbg !1993
  %conv25 = zext i16 %call24 to i64, !dbg !1994
  store i64 %conv25, i64* %quantum, align 8, !dbg !1995
  br label %sw.epilog, !dbg !1996

sw.bb26:                                          ; preds = %for.body20
  %31 = load i32, i32* %pixel, align 4, !dbg !1997
  %shr27 = lshr i32 %31, 12, !dbg !1999
  %and28 = and i32 %shr27, 1023, !dbg !2000
  %shl29 = shl i32 %and28, 6, !dbg !2001
  %conv30 = trunc i32 %shl29 to i16, !dbg !2002
  %call31 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv30), !dbg !2003
  %conv32 = zext i16 %call31 to i64, !dbg !2004
  store i64 %conv32, i64* %quantum, align 8, !dbg !2005
  br label %sw.epilog, !dbg !2006

sw.bb33:                                          ; preds = %for.body20
  %32 = load i32, i32* %pixel, align 4, !dbg !2007
  %shr34 = lshr i32 %32, 2, !dbg !2009
  %and35 = and i32 %shr34, 1023, !dbg !2010
  %shl36 = shl i32 %and35, 6, !dbg !2011
  %conv37 = trunc i32 %shl36 to i16, !dbg !2012
  %call38 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv37), !dbg !2013
  %conv39 = zext i16 %call38 to i64, !dbg !2014
  store i64 %conv39, i64* %quantum, align 8, !dbg !2015
  br label %sw.epilog, !dbg !2016

sw.epilog:                                        ; preds = %for.body20, %sw.bb33, %sw.bb26, %sw.bb21
  %33 = load i64, i64* %i, align 8, !dbg !2017
  switch i64 %33, label %sw.epilog53 [
    i64 0, label %sw.bb40
    i64 1, label %sw.bb43
    i64 2, label %sw.bb46
    i64 3, label %sw.bb49
  ], !dbg !2018

sw.bb40:                                          ; preds = %sw.epilog
  %34 = load i64, i64* %quantum, align 8, !dbg !2019
  %conv41 = trunc i64 %34 to i16, !dbg !2019
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2019
  %red42 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 2, !dbg !2019
  store i16 %conv41, i16* %red42, align 2, !dbg !2019
  br label %sw.epilog53, !dbg !2021

sw.bb43:                                          ; preds = %sw.epilog
  %36 = load i64, i64* %quantum, align 8, !dbg !2022
  %conv44 = trunc i64 %36 to i16, !dbg !2022
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2022
  %green45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 1, !dbg !2022
  store i16 %conv44, i16* %green45, align 2, !dbg !2022
  br label %sw.epilog53, !dbg !2023

sw.bb46:                                          ; preds = %sw.epilog
  %38 = load i64, i64* %quantum, align 8, !dbg !2024
  %conv47 = trunc i64 %38 to i16, !dbg !2024
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2024
  %blue48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 0, !dbg !2024
  store i16 %conv47, i16* %blue48, align 2, !dbg !2024
  br label %sw.epilog53, !dbg !2025

sw.bb49:                                          ; preds = %sw.epilog
  %40 = load i64, i64* %quantum, align 8, !dbg !2026
  %sub50 = sub i64 65535, %40, !dbg !2026
  %conv51 = trunc i64 %sub50 to i16, !dbg !2026
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2026
  %opacity52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 0, i32 3, !dbg !2026
  store i16 %conv51, i16* %opacity52, align 2, !dbg !2026
  br label %sw.epilog53, !dbg !2027

sw.epilog53:                                      ; preds = %sw.epilog, %sw.bb49, %sw.bb46, %sw.bb43, %sw.bb40
  %42 = load i64, i64* %n, align 8, !dbg !2028
  %inc54 = add nsw i64 %42, 1, !dbg !2028
  store i64 %inc54, i64* %n, align 8, !dbg !2028
  br label %for.inc55, !dbg !2029

for.inc55:                                        ; preds = %sw.epilog53
  %43 = load i64, i64* %i, align 8, !dbg !2030
  %inc56 = add nsw i64 %43, 1, !dbg !2030
  store i64 %inc56, i64* %i, align 8, !dbg !2030
  br label %for.cond17, !dbg !2031, !llvm.loop !2032

for.end57:                                        ; preds = %for.cond17
  %44 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2034
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %44, i32 0, i32 6, !dbg !2035
  %45 = load i64, i64* %pad58, align 8, !dbg !2035
  %46 = load i8*, i8** %p.addr, align 8, !dbg !2036
  %add.ptr59 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !2036
  store i8* %add.ptr59, i8** %p.addr, align 8, !dbg !2036
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2037
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 1, !dbg !2037
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %q.addr, align 8, !dbg !2037
  br label %for.inc61, !dbg !2038

for.inc61:                                        ; preds = %for.end57
  %48 = load i64, i64* %x, align 8, !dbg !2039
  %inc62 = add nsw i64 %48, 1, !dbg !2039
  store i64 %inc62, i64* %x, align 8, !dbg !2039
  br label %for.cond13, !dbg !2040, !llvm.loop !2041

for.end63:                                        ; preds = %for.cond13
  br label %sw.epilog293, !dbg !2043

if.end:                                           ; preds = %sw.bb10
  store i64 0, i64* %x, align 8, !dbg !2044
  br label %for.cond64, !dbg !2046

for.cond64:                                       ; preds = %for.inc92, %if.end
  %49 = load i64, i64* %x, align 8, !dbg !2047
  %50 = load i64, i64* %number_pixels.addr, align 8, !dbg !2049
  %cmp65 = icmp slt i64 %49, %50, !dbg !2050
  br i1 %cmp65, label %for.body67, label %for.end94, !dbg !2051

for.body67:                                       ; preds = %for.cond64
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2052
  %52 = load i8*, i8** %p.addr, align 8, !dbg !2054
  %call68 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %51, i8* %52, i32* %pixel), !dbg !2055
  store i8* %call68, i8** %p.addr, align 8, !dbg !2056
  %53 = load i32, i32* %pixel, align 4, !dbg !2057
  %shl69 = shl i32 %53, 6, !dbg !2057
  %conv70 = trunc i32 %shl69 to i16, !dbg !2057
  %call71 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv70), !dbg !2057
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2057
  %red72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !2057
  store i16 %call71, i16* %red72, align 2, !dbg !2057
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2058
  %56 = load i8*, i8** %p.addr, align 8, !dbg !2059
  %call73 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %55, i8* %56, i32* %pixel), !dbg !2060
  store i8* %call73, i8** %p.addr, align 8, !dbg !2061
  %57 = load i32, i32* %pixel, align 4, !dbg !2062
  %shl74 = shl i32 %57, 6, !dbg !2062
  %conv75 = trunc i32 %shl74 to i16, !dbg !2062
  %call76 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv75), !dbg !2062
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2062
  %green77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 1, !dbg !2062
  store i16 %call76, i16* %green77, align 2, !dbg !2062
  %59 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2063
  %60 = load i8*, i8** %p.addr, align 8, !dbg !2064
  %call78 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %59, i8* %60, i32* %pixel), !dbg !2065
  store i8* %call78, i8** %p.addr, align 8, !dbg !2066
  %61 = load i32, i32* %pixel, align 4, !dbg !2067
  %shl79 = shl i32 %61, 6, !dbg !2067
  %conv80 = trunc i32 %shl79 to i16, !dbg !2067
  %call81 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv80), !dbg !2067
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2067
  %blue82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 0, !dbg !2067
  store i16 %call81, i16* %blue82, align 2, !dbg !2067
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2068
  %64 = load i8*, i8** %p.addr, align 8, !dbg !2069
  %call83 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %63, i8* %64, i32* %pixel), !dbg !2070
  store i8* %call83, i8** %p.addr, align 8, !dbg !2071
  %65 = load i32, i32* %pixel, align 4, !dbg !2072
  %shl84 = shl i32 %65, 6, !dbg !2072
  %conv85 = trunc i32 %shl84 to i16, !dbg !2072
  %call86 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv85), !dbg !2072
  %conv87 = zext i16 %call86 to i32, !dbg !2072
  %sub88 = sub nsw i32 65535, %conv87, !dbg !2072
  %conv89 = trunc i32 %sub88 to i16, !dbg !2072
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2072
  %opacity90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 3, !dbg !2072
  store i16 %conv89, i16* %opacity90, align 2, !dbg !2072
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2073
  %incdec.ptr91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 1, !dbg !2073
  store %struct._PixelPacket* %incdec.ptr91, %struct._PixelPacket** %q.addr, align 8, !dbg !2073
  br label %for.inc92, !dbg !2074

for.inc92:                                        ; preds = %for.body67
  %68 = load i64, i64* %x, align 8, !dbg !2075
  %inc93 = add nsw i64 %68, 1, !dbg !2075
  store i64 %inc93, i64* %x, align 8, !dbg !2075
  br label %for.cond64, !dbg !2076, !llvm.loop !2077

for.end94:                                        ; preds = %for.cond64
  br label %sw.epilog293, !dbg !2079

sw.bb95:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel96, metadata !2080, metadata !DIExpression()), !dbg !2082
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2083
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %69, i32 0, i32 2, !dbg !2085
  %70 = load i32, i32* %format, align 8, !dbg !2085
  %cmp97 = icmp eq i32 %70, 1, !dbg !2086
  br i1 %cmp97, label %if.then99, label %if.end136, !dbg !2087

if.then99:                                        ; preds = %sw.bb95
  store i64 0, i64* %x, align 8, !dbg !2088
  br label %for.cond100, !dbg !2091

for.cond100:                                      ; preds = %for.inc133, %if.then99
  %71 = load i64, i64* %x, align 8, !dbg !2092
  %72 = load i64, i64* %number_pixels.addr, align 8, !dbg !2094
  %cmp101 = icmp slt i64 %71, %72, !dbg !2095
  br i1 %cmp101, label %for.body103, label %for.end135, !dbg !2096

for.body103:                                      ; preds = %for.cond100
  %73 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2097
  %endian104 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %73, i32 0, i32 13, !dbg !2099
  %74 = load i32, i32* %endian104, align 8, !dbg !2099
  %75 = load i8*, i8** %p.addr, align 8, !dbg !2100
  %call105 = call i8* @PushShortPixel(i32 %74, i8* %75, i16* %pixel96), !dbg !2101
  store i8* %call105, i8** %p.addr, align 8, !dbg !2102
  %76 = load i16, i16* %pixel96, align 2, !dbg !2103
  %call106 = call float @HalfToSinglePrecision(i16 zeroext %76), !dbg !2103
  %mul = fmul float 6.553500e+04, %call106, !dbg !2103
  %call107 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !2103
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2103
  %red108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 2, !dbg !2103
  store i16 %call107, i16* %red108, align 2, !dbg !2103
  %78 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2104
  %endian109 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %78, i32 0, i32 13, !dbg !2105
  %79 = load i32, i32* %endian109, align 8, !dbg !2105
  %80 = load i8*, i8** %p.addr, align 8, !dbg !2106
  %call110 = call i8* @PushShortPixel(i32 %79, i8* %80, i16* %pixel96), !dbg !2107
  store i8* %call110, i8** %p.addr, align 8, !dbg !2108
  %81 = load i16, i16* %pixel96, align 2, !dbg !2109
  %call111 = call float @HalfToSinglePrecision(i16 zeroext %81), !dbg !2109
  %mul112 = fmul float 6.553500e+04, %call111, !dbg !2109
  %call113 = call zeroext i16 @ClampToQuantum(float %mul112), !dbg !2109
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2109
  %green114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 1, !dbg !2109
  store i16 %call113, i16* %green114, align 2, !dbg !2109
  %83 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2110
  %endian115 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %83, i32 0, i32 13, !dbg !2111
  %84 = load i32, i32* %endian115, align 8, !dbg !2111
  %85 = load i8*, i8** %p.addr, align 8, !dbg !2112
  %call116 = call i8* @PushShortPixel(i32 %84, i8* %85, i16* %pixel96), !dbg !2113
  store i8* %call116, i8** %p.addr, align 8, !dbg !2114
  %86 = load i16, i16* %pixel96, align 2, !dbg !2115
  %call117 = call float @HalfToSinglePrecision(i16 zeroext %86), !dbg !2115
  %mul118 = fmul float 6.553500e+04, %call117, !dbg !2115
  %call119 = call zeroext i16 @ClampToQuantum(float %mul118), !dbg !2115
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2115
  %blue120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 0, !dbg !2115
  store i16 %call119, i16* %blue120, align 2, !dbg !2115
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2116
  %endian121 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 13, !dbg !2117
  %89 = load i32, i32* %endian121, align 8, !dbg !2117
  %90 = load i8*, i8** %p.addr, align 8, !dbg !2118
  %call122 = call i8* @PushShortPixel(i32 %89, i8* %90, i16* %pixel96), !dbg !2119
  store i8* %call122, i8** %p.addr, align 8, !dbg !2120
  %91 = load i16, i16* %pixel96, align 2, !dbg !2121
  %call123 = call float @HalfToSinglePrecision(i16 zeroext %91), !dbg !2121
  %mul124 = fmul float 6.553500e+04, %call123, !dbg !2121
  %call125 = call zeroext i16 @ClampToQuantum(float %mul124), !dbg !2121
  %conv126 = zext i16 %call125 to i32, !dbg !2121
  %sub127 = sub nsw i32 65535, %conv126, !dbg !2121
  %conv128 = trunc i32 %sub127 to i16, !dbg !2121
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2121
  %opacity129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 3, !dbg !2121
  store i16 %conv128, i16* %opacity129, align 2, !dbg !2121
  %93 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2122
  %pad130 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %93, i32 0, i32 6, !dbg !2123
  %94 = load i64, i64* %pad130, align 8, !dbg !2123
  %95 = load i8*, i8** %p.addr, align 8, !dbg !2124
  %add.ptr131 = getelementptr inbounds i8, i8* %95, i64 %94, !dbg !2124
  store i8* %add.ptr131, i8** %p.addr, align 8, !dbg !2124
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2125
  %incdec.ptr132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 1, !dbg !2125
  store %struct._PixelPacket* %incdec.ptr132, %struct._PixelPacket** %q.addr, align 8, !dbg !2125
  br label %for.inc133, !dbg !2126

for.inc133:                                       ; preds = %for.body103
  %97 = load i64, i64* %x, align 8, !dbg !2127
  %inc134 = add nsw i64 %97, 1, !dbg !2127
  store i64 %inc134, i64* %x, align 8, !dbg !2127
  br label %for.cond100, !dbg !2128, !llvm.loop !2129

for.end135:                                       ; preds = %for.cond100
  br label %sw.epilog293, !dbg !2131

if.end136:                                        ; preds = %sw.bb95
  store i64 0, i64* %x, align 8, !dbg !2132
  br label %for.cond137, !dbg !2134

for.cond137:                                      ; preds = %for.inc163, %if.end136
  %98 = load i64, i64* %x, align 8, !dbg !2135
  %99 = load i64, i64* %number_pixels.addr, align 8, !dbg !2137
  %cmp138 = icmp slt i64 %98, %99, !dbg !2138
  br i1 %cmp138, label %for.body140, label %for.end165, !dbg !2139

for.body140:                                      ; preds = %for.cond137
  %100 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2140
  %endian141 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %100, i32 0, i32 13, !dbg !2142
  %101 = load i32, i32* %endian141, align 8, !dbg !2142
  %102 = load i8*, i8** %p.addr, align 8, !dbg !2143
  %call142 = call i8* @PushShortPixel(i32 %101, i8* %102, i16* %pixel96), !dbg !2144
  store i8* %call142, i8** %p.addr, align 8, !dbg !2145
  %103 = load i16, i16* %pixel96, align 2, !dbg !2146
  %call143 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %103), !dbg !2146
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2146
  %blue144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 0, !dbg !2146
  store i16 %call143, i16* %blue144, align 2, !dbg !2146
  %105 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2147
  %endian145 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %105, i32 0, i32 13, !dbg !2148
  %106 = load i32, i32* %endian145, align 8, !dbg !2148
  %107 = load i8*, i8** %p.addr, align 8, !dbg !2149
  %call146 = call i8* @PushShortPixel(i32 %106, i8* %107, i16* %pixel96), !dbg !2150
  store i8* %call146, i8** %p.addr, align 8, !dbg !2151
  %108 = load i16, i16* %pixel96, align 2, !dbg !2152
  %call147 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %108), !dbg !2152
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2152
  %green148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 1, !dbg !2152
  store i16 %call147, i16* %green148, align 2, !dbg !2152
  %110 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2153
  %endian149 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %110, i32 0, i32 13, !dbg !2154
  %111 = load i32, i32* %endian149, align 8, !dbg !2154
  %112 = load i8*, i8** %p.addr, align 8, !dbg !2155
  %call150 = call i8* @PushShortPixel(i32 %111, i8* %112, i16* %pixel96), !dbg !2156
  store i8* %call150, i8** %p.addr, align 8, !dbg !2157
  %113 = load i16, i16* %pixel96, align 2, !dbg !2158
  %call151 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %113), !dbg !2158
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2158
  %red152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 2, !dbg !2158
  store i16 %call151, i16* %red152, align 2, !dbg !2158
  %115 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2159
  %endian153 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %115, i32 0, i32 13, !dbg !2160
  %116 = load i32, i32* %endian153, align 8, !dbg !2160
  %117 = load i8*, i8** %p.addr, align 8, !dbg !2161
  %call154 = call i8* @PushShortPixel(i32 %116, i8* %117, i16* %pixel96), !dbg !2162
  store i8* %call154, i8** %p.addr, align 8, !dbg !2163
  %118 = load i16, i16* %pixel96, align 2, !dbg !2164
  %call155 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %118), !dbg !2164
  %conv156 = zext i16 %call155 to i32, !dbg !2164
  %sub157 = sub nsw i32 65535, %conv156, !dbg !2164
  %conv158 = trunc i32 %sub157 to i16, !dbg !2164
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2164
  %opacity159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 3, !dbg !2164
  store i16 %conv158, i16* %opacity159, align 2, !dbg !2164
  %120 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2165
  %pad160 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %120, i32 0, i32 6, !dbg !2166
  %121 = load i64, i64* %pad160, align 8, !dbg !2166
  %122 = load i8*, i8** %p.addr, align 8, !dbg !2167
  %add.ptr161 = getelementptr inbounds i8, i8* %122, i64 %121, !dbg !2167
  store i8* %add.ptr161, i8** %p.addr, align 8, !dbg !2167
  %123 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2168
  %incdec.ptr162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %123, i32 1, !dbg !2168
  store %struct._PixelPacket* %incdec.ptr162, %struct._PixelPacket** %q.addr, align 8, !dbg !2168
  br label %for.inc163, !dbg !2169

for.inc163:                                       ; preds = %for.body140
  %124 = load i64, i64* %x, align 8, !dbg !2170
  %inc164 = add nsw i64 %124, 1, !dbg !2170
  store i64 %inc164, i64* %x, align 8, !dbg !2170
  br label %for.cond137, !dbg !2171, !llvm.loop !2172

for.end165:                                       ; preds = %for.cond137
  br label %sw.epilog293, !dbg !2174

sw.bb166:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel167, metadata !2175, metadata !DIExpression()), !dbg !2177
  %125 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2178
  %format168 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %125, i32 0, i32 2, !dbg !2180
  %126 = load i32, i32* %format168, align 8, !dbg !2180
  %cmp169 = icmp eq i32 %126, 1, !dbg !2181
  br i1 %cmp169, label %if.then171, label %if.end198, !dbg !2182

if.then171:                                       ; preds = %sw.bb166
  call void @llvm.dbg.declare(metadata float* %pixel172, metadata !2183, metadata !DIExpression()), !dbg !2185
  store i64 0, i64* %x, align 8, !dbg !2186
  br label %for.cond173, !dbg !2188

for.cond173:                                      ; preds = %for.inc195, %if.then171
  %127 = load i64, i64* %x, align 8, !dbg !2189
  %128 = load i64, i64* %number_pixels.addr, align 8, !dbg !2191
  %cmp174 = icmp slt i64 %127, %128, !dbg !2192
  br i1 %cmp174, label %for.body176, label %for.end197, !dbg !2193

for.body176:                                      ; preds = %for.cond173
  %129 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2194
  %130 = load i8*, i8** %p.addr, align 8, !dbg !2196
  %call177 = call i8* @PushFloatPixel(%struct._QuantumInfo* %129, i8* %130, float* %pixel172), !dbg !2197
  store i8* %call177, i8** %p.addr, align 8, !dbg !2198
  %131 = load float, float* %pixel172, align 4, !dbg !2199
  %call178 = call zeroext i16 @ClampToQuantum(float %131), !dbg !2199
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2199
  %red179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !2199
  store i16 %call178, i16* %red179, align 2, !dbg !2199
  %133 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2200
  %134 = load i8*, i8** %p.addr, align 8, !dbg !2201
  %call180 = call i8* @PushFloatPixel(%struct._QuantumInfo* %133, i8* %134, float* %pixel172), !dbg !2202
  store i8* %call180, i8** %p.addr, align 8, !dbg !2203
  %135 = load float, float* %pixel172, align 4, !dbg !2204
  %call181 = call zeroext i16 @ClampToQuantum(float %135), !dbg !2204
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2204
  %green182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !2204
  store i16 %call181, i16* %green182, align 2, !dbg !2204
  %137 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2205
  %138 = load i8*, i8** %p.addr, align 8, !dbg !2206
  %call183 = call i8* @PushFloatPixel(%struct._QuantumInfo* %137, i8* %138, float* %pixel172), !dbg !2207
  store i8* %call183, i8** %p.addr, align 8, !dbg !2208
  %139 = load float, float* %pixel172, align 4, !dbg !2209
  %call184 = call zeroext i16 @ClampToQuantum(float %139), !dbg !2209
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2209
  %blue185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i32 0, i32 0, !dbg !2209
  store i16 %call184, i16* %blue185, align 2, !dbg !2209
  %141 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2210
  %142 = load i8*, i8** %p.addr, align 8, !dbg !2211
  %call186 = call i8* @PushFloatPixel(%struct._QuantumInfo* %141, i8* %142, float* %pixel172), !dbg !2212
  store i8* %call186, i8** %p.addr, align 8, !dbg !2213
  %143 = load float, float* %pixel172, align 4, !dbg !2214
  %call187 = call zeroext i16 @ClampToQuantum(float %143), !dbg !2214
  %conv188 = zext i16 %call187 to i32, !dbg !2214
  %sub189 = sub nsw i32 65535, %conv188, !dbg !2214
  %conv190 = trunc i32 %sub189 to i16, !dbg !2214
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2214
  %opacity191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 3, !dbg !2214
  store i16 %conv190, i16* %opacity191, align 2, !dbg !2214
  %145 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2215
  %pad192 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %145, i32 0, i32 6, !dbg !2216
  %146 = load i64, i64* %pad192, align 8, !dbg !2216
  %147 = load i8*, i8** %p.addr, align 8, !dbg !2217
  %add.ptr193 = getelementptr inbounds i8, i8* %147, i64 %146, !dbg !2217
  store i8* %add.ptr193, i8** %p.addr, align 8, !dbg !2217
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2218
  %incdec.ptr194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 1, !dbg !2218
  store %struct._PixelPacket* %incdec.ptr194, %struct._PixelPacket** %q.addr, align 8, !dbg !2218
  br label %for.inc195, !dbg !2219

for.inc195:                                       ; preds = %for.body176
  %149 = load i64, i64* %x, align 8, !dbg !2220
  %inc196 = add nsw i64 %149, 1, !dbg !2220
  store i64 %inc196, i64* %x, align 8, !dbg !2220
  br label %for.cond173, !dbg !2221, !llvm.loop !2222

for.end197:                                       ; preds = %for.cond173
  br label %sw.epilog293, !dbg !2224

if.end198:                                        ; preds = %sw.bb166
  store i64 0, i64* %x, align 8, !dbg !2225
  br label %for.cond199, !dbg !2227

for.cond199:                                      ; preds = %for.inc225, %if.end198
  %150 = load i64, i64* %x, align 8, !dbg !2228
  %151 = load i64, i64* %number_pixels.addr, align 8, !dbg !2230
  %cmp200 = icmp slt i64 %150, %151, !dbg !2231
  br i1 %cmp200, label %for.body202, label %for.end227, !dbg !2232

for.body202:                                      ; preds = %for.cond199
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2233
  %endian203 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 13, !dbg !2235
  %153 = load i32, i32* %endian203, align 8, !dbg !2235
  %154 = load i8*, i8** %p.addr, align 8, !dbg !2236
  %call204 = call i8* @PushLongPixel(i32 %153, i8* %154, i32* %pixel167), !dbg !2237
  store i8* %call204, i8** %p.addr, align 8, !dbg !2238
  %155 = load i32, i32* %pixel167, align 4, !dbg !2239
  %call205 = call zeroext i16 @ScaleLongToQuantum(i32 %155), !dbg !2239
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2239
  %blue206 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 0, !dbg !2239
  store i16 %call205, i16* %blue206, align 2, !dbg !2239
  %157 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2240
  %endian207 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %157, i32 0, i32 13, !dbg !2241
  %158 = load i32, i32* %endian207, align 8, !dbg !2241
  %159 = load i8*, i8** %p.addr, align 8, !dbg !2242
  %call208 = call i8* @PushLongPixel(i32 %158, i8* %159, i32* %pixel167), !dbg !2243
  store i8* %call208, i8** %p.addr, align 8, !dbg !2244
  %160 = load i32, i32* %pixel167, align 4, !dbg !2245
  %call209 = call zeroext i16 @ScaleLongToQuantum(i32 %160), !dbg !2245
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2245
  %green210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 1, !dbg !2245
  store i16 %call209, i16* %green210, align 2, !dbg !2245
  %162 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2246
  %endian211 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %162, i32 0, i32 13, !dbg !2247
  %163 = load i32, i32* %endian211, align 8, !dbg !2247
  %164 = load i8*, i8** %p.addr, align 8, !dbg !2248
  %call212 = call i8* @PushLongPixel(i32 %163, i8* %164, i32* %pixel167), !dbg !2249
  store i8* %call212, i8** %p.addr, align 8, !dbg !2250
  %165 = load i32, i32* %pixel167, align 4, !dbg !2251
  %call213 = call zeroext i16 @ScaleLongToQuantum(i32 %165), !dbg !2251
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2251
  %red214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 2, !dbg !2251
  store i16 %call213, i16* %red214, align 2, !dbg !2251
  %167 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2252
  %endian215 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %167, i32 0, i32 13, !dbg !2253
  %168 = load i32, i32* %endian215, align 8, !dbg !2253
  %169 = load i8*, i8** %p.addr, align 8, !dbg !2254
  %call216 = call i8* @PushLongPixel(i32 %168, i8* %169, i32* %pixel167), !dbg !2255
  store i8* %call216, i8** %p.addr, align 8, !dbg !2256
  %170 = load i32, i32* %pixel167, align 4, !dbg !2257
  %call217 = call zeroext i16 @ScaleLongToQuantum(i32 %170), !dbg !2257
  %conv218 = zext i16 %call217 to i32, !dbg !2257
  %sub219 = sub nsw i32 65535, %conv218, !dbg !2257
  %conv220 = trunc i32 %sub219 to i16, !dbg !2257
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2257
  %opacity221 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !2257
  store i16 %conv220, i16* %opacity221, align 2, !dbg !2257
  %172 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2258
  %pad222 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %172, i32 0, i32 6, !dbg !2259
  %173 = load i64, i64* %pad222, align 8, !dbg !2259
  %174 = load i8*, i8** %p.addr, align 8, !dbg !2260
  %add.ptr223 = getelementptr inbounds i8, i8* %174, i64 %173, !dbg !2260
  store i8* %add.ptr223, i8** %p.addr, align 8, !dbg !2260
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2261
  %incdec.ptr224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 1, !dbg !2261
  store %struct._PixelPacket* %incdec.ptr224, %struct._PixelPacket** %q.addr, align 8, !dbg !2261
  br label %for.inc225, !dbg !2262

for.inc225:                                       ; preds = %for.body202
  %176 = load i64, i64* %x, align 8, !dbg !2263
  %inc226 = add nsw i64 %176, 1, !dbg !2263
  store i64 %inc226, i64* %x, align 8, !dbg !2263
  br label %for.cond199, !dbg !2264, !llvm.loop !2265

for.end227:                                       ; preds = %for.cond199
  br label %sw.epilog293, !dbg !2267

sw.bb228:                                         ; preds = %entry
  %177 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2268
  %format229 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %177, i32 0, i32 2, !dbg !2271
  %178 = load i32, i32* %format229, align 8, !dbg !2271
  %cmp230 = icmp eq i32 %178, 1, !dbg !2272
  br i1 %cmp230, label %if.then232, label %if.end263, !dbg !2273

if.then232:                                       ; preds = %sw.bb228
  call void @llvm.dbg.declare(metadata double* %pixel233, metadata !2274, metadata !DIExpression()), !dbg !2276
  store i64 0, i64* %x, align 8, !dbg !2277
  br label %for.cond234, !dbg !2279

for.cond234:                                      ; preds = %for.inc260, %if.then232
  %179 = load i64, i64* %x, align 8, !dbg !2280
  %180 = load i64, i64* %number_pixels.addr, align 8, !dbg !2282
  %cmp235 = icmp slt i64 %179, %180, !dbg !2283
  br i1 %cmp235, label %for.body237, label %for.end262, !dbg !2284

for.body237:                                      ; preds = %for.cond234
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2285
  %182 = load i8*, i8** %p.addr, align 8, !dbg !2287
  %call238 = call i8* @PushDoublePixel(%struct._QuantumInfo* %181, i8* %182, double* %pixel233), !dbg !2288
  store i8* %call238, i8** %p.addr, align 8, !dbg !2289
  %183 = load double, double* %pixel233, align 8, !dbg !2290
  %conv239 = fptrunc double %183 to float, !dbg !2290
  %call240 = call zeroext i16 @ClampToQuantum(float %conv239), !dbg !2290
  %184 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2290
  %red241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %184, i32 0, i32 2, !dbg !2290
  store i16 %call240, i16* %red241, align 2, !dbg !2290
  %185 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2291
  %186 = load i8*, i8** %p.addr, align 8, !dbg !2292
  %call242 = call i8* @PushDoublePixel(%struct._QuantumInfo* %185, i8* %186, double* %pixel233), !dbg !2293
  store i8* %call242, i8** %p.addr, align 8, !dbg !2294
  %187 = load double, double* %pixel233, align 8, !dbg !2295
  %conv243 = fptrunc double %187 to float, !dbg !2295
  %call244 = call zeroext i16 @ClampToQuantum(float %conv243), !dbg !2295
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2295
  %green245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 0, i32 1, !dbg !2295
  store i16 %call244, i16* %green245, align 2, !dbg !2295
  %189 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2296
  %190 = load i8*, i8** %p.addr, align 8, !dbg !2297
  %call246 = call i8* @PushDoublePixel(%struct._QuantumInfo* %189, i8* %190, double* %pixel233), !dbg !2298
  store i8* %call246, i8** %p.addr, align 8, !dbg !2299
  %191 = load double, double* %pixel233, align 8, !dbg !2300
  %conv247 = fptrunc double %191 to float, !dbg !2300
  %call248 = call zeroext i16 @ClampToQuantum(float %conv247), !dbg !2300
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2300
  %blue249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %192, i32 0, i32 0, !dbg !2300
  store i16 %call248, i16* %blue249, align 2, !dbg !2300
  %193 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2301
  %194 = load i8*, i8** %p.addr, align 8, !dbg !2302
  %call250 = call i8* @PushDoublePixel(%struct._QuantumInfo* %193, i8* %194, double* %pixel233), !dbg !2303
  store i8* %call250, i8** %p.addr, align 8, !dbg !2304
  %195 = load double, double* %pixel233, align 8, !dbg !2305
  %conv251 = fptrunc double %195 to float, !dbg !2305
  %call252 = call zeroext i16 @ClampToQuantum(float %conv251), !dbg !2305
  %conv253 = zext i16 %call252 to i32, !dbg !2305
  %sub254 = sub nsw i32 65535, %conv253, !dbg !2305
  %conv255 = trunc i32 %sub254 to i16, !dbg !2305
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2305
  %opacity256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 3, !dbg !2305
  store i16 %conv255, i16* %opacity256, align 2, !dbg !2305
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2306
  %pad257 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %197, i32 0, i32 6, !dbg !2307
  %198 = load i64, i64* %pad257, align 8, !dbg !2307
  %199 = load i8*, i8** %p.addr, align 8, !dbg !2308
  %add.ptr258 = getelementptr inbounds i8, i8* %199, i64 %198, !dbg !2308
  store i8* %add.ptr258, i8** %p.addr, align 8, !dbg !2308
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2309
  %incdec.ptr259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 1, !dbg !2309
  store %struct._PixelPacket* %incdec.ptr259, %struct._PixelPacket** %q.addr, align 8, !dbg !2309
  br label %for.inc260, !dbg !2310

for.inc260:                                       ; preds = %for.body237
  %201 = load i64, i64* %x, align 8, !dbg !2311
  %inc261 = add nsw i64 %201, 1, !dbg !2311
  store i64 %inc261, i64* %x, align 8, !dbg !2311
  br label %for.cond234, !dbg !2312, !llvm.loop !2313

for.end262:                                       ; preds = %for.cond234
  br label %sw.epilog293, !dbg !2315

if.end263:                                        ; preds = %sw.bb228
  br label %sw.default, !dbg !2316

sw.default:                                       ; preds = %entry, %if.end263
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2317
  %depth264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %202, i32 0, i32 0, !dbg !2319
  %203 = load i64, i64* %depth264, align 8, !dbg !2319
  %call265 = call i64 @GetQuantumRange(i64 %203), !dbg !2320
  store i64 %call265, i64* %range, align 8, !dbg !2321
  store i64 0, i64* %x, align 8, !dbg !2322
  br label %for.cond266, !dbg !2324

for.cond266:                                      ; preds = %for.inc290, %sw.default
  %204 = load i64, i64* %x, align 8, !dbg !2325
  %205 = load i64, i64* %number_pixels.addr, align 8, !dbg !2327
  %cmp267 = icmp slt i64 %204, %205, !dbg !2328
  br i1 %cmp267, label %for.body269, label %for.end292, !dbg !2329

for.body269:                                      ; preds = %for.cond266
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2330
  %207 = load i8*, i8** %p.addr, align 8, !dbg !2332
  %call270 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %206, i8* %207, i32* %pixel), !dbg !2333
  store i8* %call270, i8** %p.addr, align 8, !dbg !2334
  %208 = load i32, i32* %pixel, align 4, !dbg !2335
  %conv271 = zext i32 %208 to i64, !dbg !2335
  %209 = load i64, i64* %range, align 8, !dbg !2335
  %call272 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv271, i64 %209), !dbg !2335
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2335
  %blue273 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 0, i32 0, !dbg !2335
  store i16 %call272, i16* %blue273, align 2, !dbg !2335
  %211 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2336
  %212 = load i8*, i8** %p.addr, align 8, !dbg !2337
  %call274 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %211, i8* %212, i32* %pixel), !dbg !2338
  store i8* %call274, i8** %p.addr, align 8, !dbg !2339
  %213 = load i32, i32* %pixel, align 4, !dbg !2340
  %conv275 = zext i32 %213 to i64, !dbg !2340
  %214 = load i64, i64* %range, align 8, !dbg !2340
  %call276 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv275, i64 %214), !dbg !2340
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2340
  %green277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i32 0, i32 1, !dbg !2340
  store i16 %call276, i16* %green277, align 2, !dbg !2340
  %216 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2341
  %217 = load i8*, i8** %p.addr, align 8, !dbg !2342
  %call278 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %216, i8* %217, i32* %pixel), !dbg !2343
  store i8* %call278, i8** %p.addr, align 8, !dbg !2344
  %218 = load i32, i32* %pixel, align 4, !dbg !2345
  %conv279 = zext i32 %218 to i64, !dbg !2345
  %219 = load i64, i64* %range, align 8, !dbg !2345
  %call280 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv279, i64 %219), !dbg !2345
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2345
  %red281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 2, !dbg !2345
  store i16 %call280, i16* %red281, align 2, !dbg !2345
  %221 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2346
  %222 = load i8*, i8** %p.addr, align 8, !dbg !2347
  %call282 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %221, i8* %222, i32* %pixel), !dbg !2348
  store i8* %call282, i8** %p.addr, align 8, !dbg !2349
  %223 = load i32, i32* %pixel, align 4, !dbg !2350
  %conv283 = zext i32 %223 to i64, !dbg !2350
  %224 = load i64, i64* %range, align 8, !dbg !2350
  %call284 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv283, i64 %224), !dbg !2350
  %conv285 = zext i16 %call284 to i32, !dbg !2350
  %sub286 = sub nsw i32 65535, %conv285, !dbg !2350
  %conv287 = trunc i32 %sub286 to i16, !dbg !2350
  %225 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2350
  %opacity288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %225, i32 0, i32 3, !dbg !2350
  store i16 %conv287, i16* %opacity288, align 2, !dbg !2350
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2351
  %incdec.ptr289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 1, !dbg !2351
  store %struct._PixelPacket* %incdec.ptr289, %struct._PixelPacket** %q.addr, align 8, !dbg !2351
  br label %for.inc290, !dbg !2352

for.inc290:                                       ; preds = %for.body269
  %227 = load i64, i64* %x, align 8, !dbg !2353
  %inc291 = add nsw i64 %227, 1, !dbg !2353
  store i64 %inc291, i64* %x, align 8, !dbg !2353
  br label %for.cond266, !dbg !2354, !llvm.loop !2355

for.end292:                                       ; preds = %for.cond266
  br label %sw.epilog293, !dbg !2357

sw.epilog293:                                     ; preds = %for.end292, %for.end262, %for.end227, %for.end197, %for.end165, %for.end135, %for.end94, %for.end63, %for.end
  ret void, !dbg !2358
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportBlackQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q, i16* noalias %indexes, %struct._ExceptionInfo* %exception) #0 !dbg !2359 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel11 = alloca i16, align 2
  %pixel48 = alloca i32, align 4
  %pixel52 = alloca float, align 4
  %pixel90 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2364, metadata !DIExpression()), !dbg !2365
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !2366, metadata !DIExpression()), !dbg !2367
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !2368, metadata !DIExpression()), !dbg !2369
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2370, metadata !DIExpression()), !dbg !2371
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !2372, metadata !DIExpression()), !dbg !2373
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !2374, metadata !DIExpression()), !dbg !2375
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2376, metadata !DIExpression()), !dbg !2377
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2378, metadata !DIExpression()), !dbg !2379
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !2380, metadata !DIExpression()), !dbg !2381
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2382
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !2384
  %1 = load i32, i32* %colorspace, align 4, !dbg !2384
  %cmp = icmp ne i32 %1, 12, !dbg !2385
  br i1 %cmp, label %if.then, label %if.end, !dbg !2386

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2387
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2389
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2390
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2389
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 920, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !2391
  br label %sw.epilog, !dbg !2392

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2393
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !2394
  %5 = load i64, i64* %depth, align 8, !dbg !2394
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb10
    i64 32, label %sw.bb47
    i64 64, label %sw.bb86
  ], !dbg !2395

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !2396, metadata !DIExpression()), !dbg !2399
  store i64 0, i64* %x, align 8, !dbg !2400
  br label %for.cond, !dbg !2402

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !2403
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !2405
  %cmp2 = icmp slt i64 %6, %7, !dbg !2406
  br i1 %cmp2, label %for.body, label %for.end, !dbg !2407

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %p.addr, align 8, !dbg !2408
  %call3 = call i8* @PushCharPixel(i8* %8, i8* %pixel1), !dbg !2410
  store i8* %call3, i8** %p.addr, align 8, !dbg !2411
  %9 = load i16*, i16** %indexes.addr, align 8, !dbg !2412
  %10 = load i64, i64* %x, align 8, !dbg !2412
  %add.ptr = getelementptr inbounds i16, i16* %9, i64 %10, !dbg !2412
  %cmp4 = icmp ne i16* %add.ptr, null, !dbg !2412
  br i1 %cmp4, label %if.then5, label %if.end8, !dbg !2415

if.then5:                                         ; preds = %for.body
  %11 = load i8, i8* %pixel1, align 1, !dbg !2412
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %11), !dbg !2412
  %12 = load i16*, i16** %indexes.addr, align 8, !dbg !2412
  %13 = load i64, i64* %x, align 8, !dbg !2412
  %add.ptr7 = getelementptr inbounds i16, i16* %12, i64 %13, !dbg !2412
  store i16 %call6, i16* %add.ptr7, align 2, !dbg !2412
  br label %if.end8, !dbg !2412

if.end8:                                          ; preds = %if.then5, %for.body
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2416
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 6, !dbg !2417
  %15 = load i64, i64* %pad, align 8, !dbg !2417
  %16 = load i8*, i8** %p.addr, align 8, !dbg !2418
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !2418
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !2418
  br label %for.inc, !dbg !2419

for.inc:                                          ; preds = %if.end8
  %17 = load i64, i64* %x, align 8, !dbg !2420
  %inc = add nsw i64 %17, 1, !dbg !2420
  store i64 %inc, i64* %x, align 8, !dbg !2420
  br label %for.cond, !dbg !2421, !llvm.loop !2422

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !2424

sw.bb10:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel11, metadata !2425, metadata !DIExpression()), !dbg !2427
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2428
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %18, i32 0, i32 2, !dbg !2430
  %19 = load i32, i32* %format, align 8, !dbg !2430
  %cmp12 = icmp eq i32 %19, 1, !dbg !2431
  br i1 %cmp12, label %if.then13, label %if.end30, !dbg !2432

if.then13:                                        ; preds = %sw.bb10
  store i64 0, i64* %x, align 8, !dbg !2433
  br label %for.cond14, !dbg !2436

for.cond14:                                       ; preds = %for.inc27, %if.then13
  %20 = load i64, i64* %x, align 8, !dbg !2437
  %21 = load i64, i64* %number_pixels.addr, align 8, !dbg !2439
  %cmp15 = icmp slt i64 %20, %21, !dbg !2440
  br i1 %cmp15, label %for.body16, label %for.end29, !dbg !2441

for.body16:                                       ; preds = %for.cond14
  %22 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2442
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %22, i32 0, i32 13, !dbg !2444
  %23 = load i32, i32* %endian, align 8, !dbg !2444
  %24 = load i8*, i8** %p.addr, align 8, !dbg !2445
  %call17 = call i8* @PushShortPixel(i32 %23, i8* %24, i16* %pixel11), !dbg !2446
  store i8* %call17, i8** %p.addr, align 8, !dbg !2447
  %25 = load i16*, i16** %indexes.addr, align 8, !dbg !2448
  %26 = load i64, i64* %x, align 8, !dbg !2448
  %add.ptr18 = getelementptr inbounds i16, i16* %25, i64 %26, !dbg !2448
  %cmp19 = icmp ne i16* %add.ptr18, null, !dbg !2448
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !2451

if.then20:                                        ; preds = %for.body16
  %27 = load i16, i16* %pixel11, align 2, !dbg !2448
  %call21 = call float @HalfToSinglePrecision(i16 zeroext %27), !dbg !2448
  %mul = fmul float 6.553500e+04, %call21, !dbg !2448
  %call22 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !2448
  %28 = load i16*, i16** %indexes.addr, align 8, !dbg !2448
  %29 = load i64, i64* %x, align 8, !dbg !2448
  %add.ptr23 = getelementptr inbounds i16, i16* %28, i64 %29, !dbg !2448
  store i16 %call22, i16* %add.ptr23, align 2, !dbg !2448
  br label %if.end24, !dbg !2448

if.end24:                                         ; preds = %if.then20, %for.body16
  %30 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2452
  %pad25 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %30, i32 0, i32 6, !dbg !2453
  %31 = load i64, i64* %pad25, align 8, !dbg !2453
  %32 = load i8*, i8** %p.addr, align 8, !dbg !2454
  %add.ptr26 = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !2454
  store i8* %add.ptr26, i8** %p.addr, align 8, !dbg !2454
  br label %for.inc27, !dbg !2455

for.inc27:                                        ; preds = %if.end24
  %33 = load i64, i64* %x, align 8, !dbg !2456
  %inc28 = add nsw i64 %33, 1, !dbg !2456
  store i64 %inc28, i64* %x, align 8, !dbg !2456
  br label %for.cond14, !dbg !2457, !llvm.loop !2458

for.end29:                                        ; preds = %for.cond14
  br label %sw.epilog, !dbg !2460

if.end30:                                         ; preds = %sw.bb10
  store i64 0, i64* %x, align 8, !dbg !2461
  br label %for.cond31, !dbg !2463

for.cond31:                                       ; preds = %for.inc44, %if.end30
  %34 = load i64, i64* %x, align 8, !dbg !2464
  %35 = load i64, i64* %number_pixels.addr, align 8, !dbg !2466
  %cmp32 = icmp slt i64 %34, %35, !dbg !2467
  br i1 %cmp32, label %for.body33, label %for.end46, !dbg !2468

for.body33:                                       ; preds = %for.cond31
  %36 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2469
  %endian34 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %36, i32 0, i32 13, !dbg !2471
  %37 = load i32, i32* %endian34, align 8, !dbg !2471
  %38 = load i8*, i8** %p.addr, align 8, !dbg !2472
  %call35 = call i8* @PushShortPixel(i32 %37, i8* %38, i16* %pixel11), !dbg !2473
  store i8* %call35, i8** %p.addr, align 8, !dbg !2474
  %39 = load i16*, i16** %indexes.addr, align 8, !dbg !2475
  %40 = load i64, i64* %x, align 8, !dbg !2475
  %add.ptr36 = getelementptr inbounds i16, i16* %39, i64 %40, !dbg !2475
  %cmp37 = icmp ne i16* %add.ptr36, null, !dbg !2475
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !2478

if.then38:                                        ; preds = %for.body33
  %41 = load i16, i16* %pixel11, align 2, !dbg !2475
  %call39 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %41), !dbg !2475
  %42 = load i16*, i16** %indexes.addr, align 8, !dbg !2475
  %43 = load i64, i64* %x, align 8, !dbg !2475
  %add.ptr40 = getelementptr inbounds i16, i16* %42, i64 %43, !dbg !2475
  store i16 %call39, i16* %add.ptr40, align 2, !dbg !2475
  br label %if.end41, !dbg !2475

if.end41:                                         ; preds = %if.then38, %for.body33
  %44 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2479
  %pad42 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %44, i32 0, i32 6, !dbg !2480
  %45 = load i64, i64* %pad42, align 8, !dbg !2480
  %46 = load i8*, i8** %p.addr, align 8, !dbg !2481
  %add.ptr43 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !2481
  store i8* %add.ptr43, i8** %p.addr, align 8, !dbg !2481
  br label %for.inc44, !dbg !2482

for.inc44:                                        ; preds = %if.end41
  %47 = load i64, i64* %x, align 8, !dbg !2483
  %inc45 = add nsw i64 %47, 1, !dbg !2483
  store i64 %inc45, i64* %x, align 8, !dbg !2483
  br label %for.cond31, !dbg !2484, !llvm.loop !2485

for.end46:                                        ; preds = %for.cond31
  br label %sw.epilog, !dbg !2487

sw.bb47:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel48, metadata !2488, metadata !DIExpression()), !dbg !2490
  %48 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2491
  %format49 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %48, i32 0, i32 2, !dbg !2493
  %49 = load i32, i32* %format49, align 8, !dbg !2493
  %cmp50 = icmp eq i32 %49, 1, !dbg !2494
  br i1 %cmp50, label %if.then51, label %if.end68, !dbg !2495

if.then51:                                        ; preds = %sw.bb47
  call void @llvm.dbg.declare(metadata float* %pixel52, metadata !2496, metadata !DIExpression()), !dbg !2498
  store i64 0, i64* %x, align 8, !dbg !2499
  br label %for.cond53, !dbg !2501

for.cond53:                                       ; preds = %for.inc65, %if.then51
  %50 = load i64, i64* %x, align 8, !dbg !2502
  %51 = load i64, i64* %number_pixels.addr, align 8, !dbg !2504
  %cmp54 = icmp slt i64 %50, %51, !dbg !2505
  br i1 %cmp54, label %for.body55, label %for.end67, !dbg !2506

for.body55:                                       ; preds = %for.cond53
  %52 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2507
  %53 = load i8*, i8** %p.addr, align 8, !dbg !2509
  %call56 = call i8* @PushFloatPixel(%struct._QuantumInfo* %52, i8* %53, float* %pixel52), !dbg !2510
  store i8* %call56, i8** %p.addr, align 8, !dbg !2511
  %54 = load i16*, i16** %indexes.addr, align 8, !dbg !2512
  %55 = load i64, i64* %x, align 8, !dbg !2512
  %add.ptr57 = getelementptr inbounds i16, i16* %54, i64 %55, !dbg !2512
  %cmp58 = icmp ne i16* %add.ptr57, null, !dbg !2512
  br i1 %cmp58, label %if.then59, label %if.end62, !dbg !2515

if.then59:                                        ; preds = %for.body55
  %56 = load float, float* %pixel52, align 4, !dbg !2512
  %call60 = call zeroext i16 @ClampToQuantum(float %56), !dbg !2512
  %57 = load i16*, i16** %indexes.addr, align 8, !dbg !2512
  %58 = load i64, i64* %x, align 8, !dbg !2512
  %add.ptr61 = getelementptr inbounds i16, i16* %57, i64 %58, !dbg !2512
  store i16 %call60, i16* %add.ptr61, align 2, !dbg !2512
  br label %if.end62, !dbg !2512

if.end62:                                         ; preds = %if.then59, %for.body55
  %59 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2516
  %pad63 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %59, i32 0, i32 6, !dbg !2517
  %60 = load i64, i64* %pad63, align 8, !dbg !2517
  %61 = load i8*, i8** %p.addr, align 8, !dbg !2518
  %add.ptr64 = getelementptr inbounds i8, i8* %61, i64 %60, !dbg !2518
  store i8* %add.ptr64, i8** %p.addr, align 8, !dbg !2518
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2519
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 1, !dbg !2519
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !2519
  br label %for.inc65, !dbg !2520

for.inc65:                                        ; preds = %if.end62
  %63 = load i64, i64* %x, align 8, !dbg !2521
  %inc66 = add nsw i64 %63, 1, !dbg !2521
  store i64 %inc66, i64* %x, align 8, !dbg !2521
  br label %for.cond53, !dbg !2522, !llvm.loop !2523

for.end67:                                        ; preds = %for.cond53
  br label %sw.epilog, !dbg !2525

if.end68:                                         ; preds = %sw.bb47
  store i64 0, i64* %x, align 8, !dbg !2526
  br label %for.cond69, !dbg !2528

for.cond69:                                       ; preds = %for.inc83, %if.end68
  %64 = load i64, i64* %x, align 8, !dbg !2529
  %65 = load i64, i64* %number_pixels.addr, align 8, !dbg !2531
  %cmp70 = icmp slt i64 %64, %65, !dbg !2532
  br i1 %cmp70, label %for.body71, label %for.end85, !dbg !2533

for.body71:                                       ; preds = %for.cond69
  %66 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2534
  %endian72 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %66, i32 0, i32 13, !dbg !2536
  %67 = load i32, i32* %endian72, align 8, !dbg !2536
  %68 = load i8*, i8** %p.addr, align 8, !dbg !2537
  %call73 = call i8* @PushLongPixel(i32 %67, i8* %68, i32* %pixel48), !dbg !2538
  store i8* %call73, i8** %p.addr, align 8, !dbg !2539
  %69 = load i16*, i16** %indexes.addr, align 8, !dbg !2540
  %70 = load i64, i64* %x, align 8, !dbg !2540
  %add.ptr74 = getelementptr inbounds i16, i16* %69, i64 %70, !dbg !2540
  %cmp75 = icmp ne i16* %add.ptr74, null, !dbg !2540
  br i1 %cmp75, label %if.then76, label %if.end79, !dbg !2543

if.then76:                                        ; preds = %for.body71
  %71 = load i32, i32* %pixel48, align 4, !dbg !2540
  %call77 = call zeroext i16 @ScaleLongToQuantum(i32 %71), !dbg !2540
  %72 = load i16*, i16** %indexes.addr, align 8, !dbg !2540
  %73 = load i64, i64* %x, align 8, !dbg !2540
  %add.ptr78 = getelementptr inbounds i16, i16* %72, i64 %73, !dbg !2540
  store i16 %call77, i16* %add.ptr78, align 2, !dbg !2540
  br label %if.end79, !dbg !2540

if.end79:                                         ; preds = %if.then76, %for.body71
  %74 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2544
  %pad80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %74, i32 0, i32 6, !dbg !2545
  %75 = load i64, i64* %pad80, align 8, !dbg !2545
  %76 = load i8*, i8** %p.addr, align 8, !dbg !2546
  %add.ptr81 = getelementptr inbounds i8, i8* %76, i64 %75, !dbg !2546
  store i8* %add.ptr81, i8** %p.addr, align 8, !dbg !2546
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2547
  %incdec.ptr82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 1, !dbg !2547
  store %struct._PixelPacket* %incdec.ptr82, %struct._PixelPacket** %q.addr, align 8, !dbg !2547
  br label %for.inc83, !dbg !2548

for.inc83:                                        ; preds = %if.end79
  %78 = load i64, i64* %x, align 8, !dbg !2549
  %inc84 = add nsw i64 %78, 1, !dbg !2549
  store i64 %inc84, i64* %x, align 8, !dbg !2549
  br label %for.cond69, !dbg !2550, !llvm.loop !2551

for.end85:                                        ; preds = %for.cond69
  br label %sw.epilog, !dbg !2553

sw.bb86:                                          ; preds = %if.end
  %79 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2554
  %format87 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %79, i32 0, i32 2, !dbg !2557
  %80 = load i32, i32* %format87, align 8, !dbg !2557
  %cmp88 = icmp eq i32 %80, 1, !dbg !2558
  br i1 %cmp88, label %if.then89, label %if.end107, !dbg !2559

if.then89:                                        ; preds = %sw.bb86
  call void @llvm.dbg.declare(metadata double* %pixel90, metadata !2560, metadata !DIExpression()), !dbg !2562
  store i64 0, i64* %x, align 8, !dbg !2563
  br label %for.cond91, !dbg !2565

for.cond91:                                       ; preds = %for.inc104, %if.then89
  %81 = load i64, i64* %x, align 8, !dbg !2566
  %82 = load i64, i64* %number_pixels.addr, align 8, !dbg !2568
  %cmp92 = icmp slt i64 %81, %82, !dbg !2569
  br i1 %cmp92, label %for.body93, label %for.end106, !dbg !2570

for.body93:                                       ; preds = %for.cond91
  %83 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2571
  %84 = load i8*, i8** %p.addr, align 8, !dbg !2573
  %call94 = call i8* @PushDoublePixel(%struct._QuantumInfo* %83, i8* %84, double* %pixel90), !dbg !2574
  store i8* %call94, i8** %p.addr, align 8, !dbg !2575
  %85 = load i16*, i16** %indexes.addr, align 8, !dbg !2576
  %86 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr95 = getelementptr inbounds i16, i16* %85, i64 %86, !dbg !2576
  %cmp96 = icmp ne i16* %add.ptr95, null, !dbg !2576
  br i1 %cmp96, label %if.then97, label %if.end100, !dbg !2579

if.then97:                                        ; preds = %for.body93
  %87 = load double, double* %pixel90, align 8, !dbg !2576
  %conv = fptrunc double %87 to float, !dbg !2576
  %call98 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !2576
  %88 = load i16*, i16** %indexes.addr, align 8, !dbg !2576
  %89 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr99 = getelementptr inbounds i16, i16* %88, i64 %89, !dbg !2576
  store i16 %call98, i16* %add.ptr99, align 2, !dbg !2576
  br label %if.end100, !dbg !2576

if.end100:                                        ; preds = %if.then97, %for.body93
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2580
  %pad101 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 6, !dbg !2581
  %91 = load i64, i64* %pad101, align 8, !dbg !2581
  %92 = load i8*, i8** %p.addr, align 8, !dbg !2582
  %add.ptr102 = getelementptr inbounds i8, i8* %92, i64 %91, !dbg !2582
  store i8* %add.ptr102, i8** %p.addr, align 8, !dbg !2582
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2583
  %incdec.ptr103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 1, !dbg !2583
  store %struct._PixelPacket* %incdec.ptr103, %struct._PixelPacket** %q.addr, align 8, !dbg !2583
  br label %for.inc104, !dbg !2584

for.inc104:                                       ; preds = %if.end100
  %94 = load i64, i64* %x, align 8, !dbg !2585
  %inc105 = add nsw i64 %94, 1, !dbg !2585
  store i64 %inc105, i64* %x, align 8, !dbg !2585
  br label %for.cond91, !dbg !2586, !llvm.loop !2587

for.end106:                                       ; preds = %for.cond91
  br label %sw.epilog, !dbg !2589

if.end107:                                        ; preds = %sw.bb86
  br label %sw.default, !dbg !2590

sw.default:                                       ; preds = %if.end, %if.end107
  call void @llvm.dbg.declare(metadata i64* %range, metadata !2591, metadata !DIExpression()), !dbg !2593
  %95 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2594
  %depth108 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %95, i32 0, i32 0, !dbg !2595
  %96 = load i64, i64* %depth108, align 8, !dbg !2595
  %call109 = call i64 @GetQuantumRange(i64 %96), !dbg !2596
  store i64 %call109, i64* %range, align 8, !dbg !2597
  store i64 0, i64* %x, align 8, !dbg !2598
  br label %for.cond110, !dbg !2600

for.cond110:                                      ; preds = %for.inc126, %sw.default
  %97 = load i64, i64* %x, align 8, !dbg !2601
  %98 = load i64, i64* %number_pixels.addr, align 8, !dbg !2603
  %cmp111 = icmp slt i64 %97, %98, !dbg !2604
  br i1 %cmp111, label %for.body113, label %for.end128, !dbg !2605

for.body113:                                      ; preds = %for.cond110
  %99 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2606
  %100 = load i8*, i8** %p.addr, align 8, !dbg !2608
  %call114 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %99, i8* %100, i32* %pixel), !dbg !2609
  store i8* %call114, i8** %p.addr, align 8, !dbg !2610
  %101 = load i16*, i16** %indexes.addr, align 8, !dbg !2611
  %102 = load i64, i64* %x, align 8, !dbg !2611
  %add.ptr115 = getelementptr inbounds i16, i16* %101, i64 %102, !dbg !2611
  %cmp116 = icmp ne i16* %add.ptr115, null, !dbg !2611
  br i1 %cmp116, label %if.then118, label %if.end122, !dbg !2614

if.then118:                                       ; preds = %for.body113
  %103 = load i32, i32* %pixel, align 4, !dbg !2611
  %conv119 = zext i32 %103 to i64, !dbg !2611
  %104 = load i64, i64* %range, align 8, !dbg !2611
  %call120 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv119, i64 %104), !dbg !2611
  %105 = load i16*, i16** %indexes.addr, align 8, !dbg !2611
  %106 = load i64, i64* %x, align 8, !dbg !2611
  %add.ptr121 = getelementptr inbounds i16, i16* %105, i64 %106, !dbg !2611
  store i16 %call120, i16* %add.ptr121, align 2, !dbg !2611
  br label %if.end122, !dbg !2611

if.end122:                                        ; preds = %if.then118, %for.body113
  %107 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2615
  %pad123 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %107, i32 0, i32 6, !dbg !2616
  %108 = load i64, i64* %pad123, align 8, !dbg !2616
  %109 = load i8*, i8** %p.addr, align 8, !dbg !2617
  %add.ptr124 = getelementptr inbounds i8, i8* %109, i64 %108, !dbg !2617
  store i8* %add.ptr124, i8** %p.addr, align 8, !dbg !2617
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2618
  %incdec.ptr125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 1, !dbg !2618
  store %struct._PixelPacket* %incdec.ptr125, %struct._PixelPacket** %q.addr, align 8, !dbg !2618
  br label %for.inc126, !dbg !2619

for.inc126:                                       ; preds = %if.end122
  %111 = load i64, i64* %x, align 8, !dbg !2620
  %inc127 = add nsw i64 %111, 1, !dbg !2620
  store i64 %inc127, i64* %x, align 8, !dbg !2620
  br label %for.cond110, !dbg !2621, !llvm.loop !2622

for.end128:                                       ; preds = %for.cond110
  br label %sw.epilog, !dbg !2624

sw.epilog:                                        ; preds = %if.then, %for.end128, %for.end106, %for.end85, %for.end67, %for.end46, %for.end29, %for.end
  ret void, !dbg !2625
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportBlueQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !2626 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel4 = alloca i16, align 2
  %pixel33 = alloca i32, align 4
  %pixel37 = alloca float, align 4
  %pixel68 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !2627, metadata !DIExpression()), !dbg !2628
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2635, metadata !DIExpression()), !dbg !2636
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !2637, metadata !DIExpression()), !dbg !2638
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2639
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !2640
  %1 = load i64, i64* %depth, align 8, !dbg !2640
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb3
    i64 32, label %sw.bb32
    i64 64, label %sw.bb64
  ], !dbg !2641

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !2642, metadata !DIExpression()), !dbg !2645
  store i64 0, i64* %x, align 8, !dbg !2646
  br label %for.cond, !dbg !2648

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !2649
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !2651
  %cmp = icmp slt i64 %2, %3, !dbg !2652
  br i1 %cmp, label %for.body, label %for.end, !dbg !2653

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !2654
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !2656
  store i8* %call, i8** %p.addr, align 8, !dbg !2657
  %5 = load i8, i8* %pixel1, align 1, !dbg !2658
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !2658
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2658
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !2658
  store i16 %call2, i16* %blue, align 2, !dbg !2658
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2659
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 6, !dbg !2660
  %8 = load i64, i64* %pad, align 8, !dbg !2660
  %9 = load i8*, i8** %p.addr, align 8, !dbg !2661
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !2661
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !2661
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2662
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 1, !dbg !2662
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !2662
  br label %for.inc, !dbg !2663

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %x, align 8, !dbg !2664
  %inc = add nsw i64 %11, 1, !dbg !2664
  store i64 %inc, i64* %x, align 8, !dbg !2664
  br label %for.cond, !dbg !2665, !llvm.loop !2666

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !2668

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel4, metadata !2669, metadata !DIExpression()), !dbg !2671
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2672
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 2, !dbg !2674
  %13 = load i32, i32* %format, align 8, !dbg !2674
  %cmp5 = icmp eq i32 %13, 1, !dbg !2675
  br i1 %cmp5, label %if.then, label %if.end, !dbg !2676

if.then:                                          ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !2677
  br label %for.cond6, !dbg !2680

for.cond6:                                        ; preds = %for.inc16, %if.then
  %14 = load i64, i64* %x, align 8, !dbg !2681
  %15 = load i64, i64* %number_pixels.addr, align 8, !dbg !2683
  %cmp7 = icmp slt i64 %14, %15, !dbg !2684
  br i1 %cmp7, label %for.body8, label %for.end18, !dbg !2685

for.body8:                                        ; preds = %for.cond6
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2686
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 13, !dbg !2688
  %17 = load i32, i32* %endian, align 8, !dbg !2688
  %18 = load i8*, i8** %p.addr, align 8, !dbg !2689
  %call9 = call i8* @PushShortPixel(i32 %17, i8* %18, i16* %pixel4), !dbg !2690
  store i8* %call9, i8** %p.addr, align 8, !dbg !2691
  %19 = load i16, i16* %pixel4, align 2, !dbg !2692
  %call10 = call float @HalfToSinglePrecision(i16 zeroext %19), !dbg !2692
  %mul = fmul float 6.553500e+04, %call10, !dbg !2692
  %call11 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !2692
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2692
  %blue12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 0, !dbg !2692
  store i16 %call11, i16* %blue12, align 2, !dbg !2692
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2693
  %pad13 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !2694
  %22 = load i64, i64* %pad13, align 8, !dbg !2694
  %23 = load i8*, i8** %p.addr, align 8, !dbg !2695
  %add.ptr14 = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !2695
  store i8* %add.ptr14, i8** %p.addr, align 8, !dbg !2695
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2696
  %incdec.ptr15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !2696
  store %struct._PixelPacket* %incdec.ptr15, %struct._PixelPacket** %q.addr, align 8, !dbg !2696
  br label %for.inc16, !dbg !2697

for.inc16:                                        ; preds = %for.body8
  %25 = load i64, i64* %x, align 8, !dbg !2698
  %inc17 = add nsw i64 %25, 1, !dbg !2698
  store i64 %inc17, i64* %x, align 8, !dbg !2698
  br label %for.cond6, !dbg !2699, !llvm.loop !2700

for.end18:                                        ; preds = %for.cond6
  br label %sw.epilog, !dbg !2702

if.end:                                           ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !2703
  br label %for.cond19, !dbg !2705

for.cond19:                                       ; preds = %for.inc29, %if.end
  %26 = load i64, i64* %x, align 8, !dbg !2706
  %27 = load i64, i64* %number_pixels.addr, align 8, !dbg !2708
  %cmp20 = icmp slt i64 %26, %27, !dbg !2709
  br i1 %cmp20, label %for.body21, label %for.end31, !dbg !2710

for.body21:                                       ; preds = %for.cond19
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2711
  %endian22 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 13, !dbg !2713
  %29 = load i32, i32* %endian22, align 8, !dbg !2713
  %30 = load i8*, i8** %p.addr, align 8, !dbg !2714
  %call23 = call i8* @PushShortPixel(i32 %29, i8* %30, i16* %pixel4), !dbg !2715
  store i8* %call23, i8** %p.addr, align 8, !dbg !2716
  %31 = load i16, i16* %pixel4, align 2, !dbg !2717
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !2717
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2717
  %blue25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 0, !dbg !2717
  store i16 %call24, i16* %blue25, align 2, !dbg !2717
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2718
  %pad26 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 6, !dbg !2719
  %34 = load i64, i64* %pad26, align 8, !dbg !2719
  %35 = load i8*, i8** %p.addr, align 8, !dbg !2720
  %add.ptr27 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !2720
  store i8* %add.ptr27, i8** %p.addr, align 8, !dbg !2720
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2721
  %incdec.ptr28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !2721
  store %struct._PixelPacket* %incdec.ptr28, %struct._PixelPacket** %q.addr, align 8, !dbg !2721
  br label %for.inc29, !dbg !2722

for.inc29:                                        ; preds = %for.body21
  %37 = load i64, i64* %x, align 8, !dbg !2723
  %inc30 = add nsw i64 %37, 1, !dbg !2723
  store i64 %inc30, i64* %x, align 8, !dbg !2723
  br label %for.cond19, !dbg !2724, !llvm.loop !2725

for.end31:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !2727

sw.bb32:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel33, metadata !2728, metadata !DIExpression()), !dbg !2730
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2731
  %format34 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 2, !dbg !2733
  %39 = load i32, i32* %format34, align 8, !dbg !2733
  %cmp35 = icmp eq i32 %39, 1, !dbg !2734
  br i1 %cmp35, label %if.then36, label %if.end50, !dbg !2735

if.then36:                                        ; preds = %sw.bb32
  call void @llvm.dbg.declare(metadata float* %pixel37, metadata !2736, metadata !DIExpression()), !dbg !2738
  store i64 0, i64* %x, align 8, !dbg !2739
  br label %for.cond38, !dbg !2741

for.cond38:                                       ; preds = %for.inc47, %if.then36
  %40 = load i64, i64* %x, align 8, !dbg !2742
  %41 = load i64, i64* %number_pixels.addr, align 8, !dbg !2744
  %cmp39 = icmp slt i64 %40, %41, !dbg !2745
  br i1 %cmp39, label %for.body40, label %for.end49, !dbg !2746

for.body40:                                       ; preds = %for.cond38
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2747
  %43 = load i8*, i8** %p.addr, align 8, !dbg !2749
  %call41 = call i8* @PushFloatPixel(%struct._QuantumInfo* %42, i8* %43, float* %pixel37), !dbg !2750
  store i8* %call41, i8** %p.addr, align 8, !dbg !2751
  %44 = load float, float* %pixel37, align 4, !dbg !2752
  %call42 = call zeroext i16 @ClampToQuantum(float %44), !dbg !2752
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2752
  %blue43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 0, !dbg !2752
  store i16 %call42, i16* %blue43, align 2, !dbg !2752
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2753
  %pad44 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %46, i32 0, i32 6, !dbg !2754
  %47 = load i64, i64* %pad44, align 8, !dbg !2754
  %48 = load i8*, i8** %p.addr, align 8, !dbg !2755
  %add.ptr45 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !2755
  store i8* %add.ptr45, i8** %p.addr, align 8, !dbg !2755
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2756
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !2756
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %q.addr, align 8, !dbg !2756
  br label %for.inc47, !dbg !2757

for.inc47:                                        ; preds = %for.body40
  %50 = load i64, i64* %x, align 8, !dbg !2758
  %inc48 = add nsw i64 %50, 1, !dbg !2758
  store i64 %inc48, i64* %x, align 8, !dbg !2758
  br label %for.cond38, !dbg !2759, !llvm.loop !2760

for.end49:                                        ; preds = %for.cond38
  br label %sw.epilog, !dbg !2762

if.end50:                                         ; preds = %sw.bb32
  store i64 0, i64* %x, align 8, !dbg !2763
  br label %for.cond51, !dbg !2765

for.cond51:                                       ; preds = %for.inc61, %if.end50
  %51 = load i64, i64* %x, align 8, !dbg !2766
  %52 = load i64, i64* %number_pixels.addr, align 8, !dbg !2768
  %cmp52 = icmp slt i64 %51, %52, !dbg !2769
  br i1 %cmp52, label %for.body53, label %for.end63, !dbg !2770

for.body53:                                       ; preds = %for.cond51
  %53 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2771
  %endian54 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %53, i32 0, i32 13, !dbg !2773
  %54 = load i32, i32* %endian54, align 8, !dbg !2773
  %55 = load i8*, i8** %p.addr, align 8, !dbg !2774
  %call55 = call i8* @PushLongPixel(i32 %54, i8* %55, i32* %pixel33), !dbg !2775
  store i8* %call55, i8** %p.addr, align 8, !dbg !2776
  %56 = load i32, i32* %pixel33, align 4, !dbg !2777
  %call56 = call zeroext i16 @ScaleLongToQuantum(i32 %56), !dbg !2777
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2777
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 0, !dbg !2777
  store i16 %call56, i16* %blue57, align 2, !dbg !2777
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2778
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !2779
  %59 = load i64, i64* %pad58, align 8, !dbg !2779
  %60 = load i8*, i8** %p.addr, align 8, !dbg !2780
  %add.ptr59 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !2780
  store i8* %add.ptr59, i8** %p.addr, align 8, !dbg !2780
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2781
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !2781
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %q.addr, align 8, !dbg !2781
  br label %for.inc61, !dbg !2782

for.inc61:                                        ; preds = %for.body53
  %62 = load i64, i64* %x, align 8, !dbg !2783
  %inc62 = add nsw i64 %62, 1, !dbg !2783
  store i64 %inc62, i64* %x, align 8, !dbg !2783
  br label %for.cond51, !dbg !2784, !llvm.loop !2785

for.end63:                                        ; preds = %for.cond51
  br label %sw.epilog, !dbg !2787

sw.bb64:                                          ; preds = %entry
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2788
  %format65 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 2, !dbg !2791
  %64 = load i32, i32* %format65, align 8, !dbg !2791
  %cmp66 = icmp eq i32 %64, 1, !dbg !2792
  br i1 %cmp66, label %if.then67, label %if.end81, !dbg !2793

if.then67:                                        ; preds = %sw.bb64
  call void @llvm.dbg.declare(metadata double* %pixel68, metadata !2794, metadata !DIExpression()), !dbg !2796
  store i64 0, i64* %x, align 8, !dbg !2797
  br label %for.cond69, !dbg !2799

for.cond69:                                       ; preds = %for.inc78, %if.then67
  %65 = load i64, i64* %x, align 8, !dbg !2800
  %66 = load i64, i64* %number_pixels.addr, align 8, !dbg !2802
  %cmp70 = icmp slt i64 %65, %66, !dbg !2803
  br i1 %cmp70, label %for.body71, label %for.end80, !dbg !2804

for.body71:                                       ; preds = %for.cond69
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2805
  %68 = load i8*, i8** %p.addr, align 8, !dbg !2807
  %call72 = call i8* @PushDoublePixel(%struct._QuantumInfo* %67, i8* %68, double* %pixel68), !dbg !2808
  store i8* %call72, i8** %p.addr, align 8, !dbg !2809
  %69 = load double, double* %pixel68, align 8, !dbg !2810
  %conv = fptrunc double %69 to float, !dbg !2810
  %call73 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !2810
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2810
  %blue74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 0, !dbg !2810
  store i16 %call73, i16* %blue74, align 2, !dbg !2810
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2811
  %pad75 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %71, i32 0, i32 6, !dbg !2812
  %72 = load i64, i64* %pad75, align 8, !dbg !2812
  %73 = load i8*, i8** %p.addr, align 8, !dbg !2813
  %add.ptr76 = getelementptr inbounds i8, i8* %73, i64 %72, !dbg !2813
  store i8* %add.ptr76, i8** %p.addr, align 8, !dbg !2813
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2814
  %incdec.ptr77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 1, !dbg !2814
  store %struct._PixelPacket* %incdec.ptr77, %struct._PixelPacket** %q.addr, align 8, !dbg !2814
  br label %for.inc78, !dbg !2815

for.inc78:                                        ; preds = %for.body71
  %75 = load i64, i64* %x, align 8, !dbg !2816
  %inc79 = add nsw i64 %75, 1, !dbg !2816
  store i64 %inc79, i64* %x, align 8, !dbg !2816
  br label %for.cond69, !dbg !2817, !llvm.loop !2818

for.end80:                                        ; preds = %for.cond69
  br label %sw.epilog, !dbg !2820

if.end81:                                         ; preds = %sw.bb64
  br label %sw.default, !dbg !2821

sw.default:                                       ; preds = %entry, %if.end81
  call void @llvm.dbg.declare(metadata i64* %range, metadata !2822, metadata !DIExpression()), !dbg !2824
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2825
  %depth82 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 0, !dbg !2826
  %77 = load i64, i64* %depth82, align 8, !dbg !2826
  %call83 = call i64 @GetQuantumRange(i64 %77), !dbg !2827
  store i64 %call83, i64* %range, align 8, !dbg !2828
  store i64 0, i64* %x, align 8, !dbg !2829
  br label %for.cond84, !dbg !2831

for.cond84:                                       ; preds = %for.inc95, %sw.default
  %78 = load i64, i64* %x, align 8, !dbg !2832
  %79 = load i64, i64* %number_pixels.addr, align 8, !dbg !2834
  %cmp85 = icmp slt i64 %78, %79, !dbg !2835
  br i1 %cmp85, label %for.body87, label %for.end97, !dbg !2836

for.body87:                                       ; preds = %for.cond84
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2837
  %81 = load i8*, i8** %p.addr, align 8, !dbg !2839
  %call88 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %80, i8* %81, i32* %pixel), !dbg !2840
  store i8* %call88, i8** %p.addr, align 8, !dbg !2841
  %82 = load i32, i32* %pixel, align 4, !dbg !2842
  %conv89 = zext i32 %82 to i64, !dbg !2842
  %83 = load i64, i64* %range, align 8, !dbg !2842
  %call90 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv89, i64 %83), !dbg !2842
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2842
  %blue91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 0, !dbg !2842
  store i16 %call90, i16* %blue91, align 2, !dbg !2842
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2843
  %pad92 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 6, !dbg !2844
  %86 = load i64, i64* %pad92, align 8, !dbg !2844
  %87 = load i8*, i8** %p.addr, align 8, !dbg !2845
  %add.ptr93 = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !2845
  store i8* %add.ptr93, i8** %p.addr, align 8, !dbg !2845
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2846
  %incdec.ptr94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !2846
  store %struct._PixelPacket* %incdec.ptr94, %struct._PixelPacket** %q.addr, align 8, !dbg !2846
  br label %for.inc95, !dbg !2847

for.inc95:                                        ; preds = %for.body87
  %89 = load i64, i64* %x, align 8, !dbg !2848
  %inc96 = add nsw i64 %89, 1, !dbg !2848
  store i64 %inc96, i64* %x, align 8, !dbg !2848
  br label %for.cond84, !dbg !2849, !llvm.loop !2850

for.end97:                                        ; preds = %for.cond84
  br label %sw.epilog, !dbg !2852

sw.epilog:                                        ; preds = %for.end97, %for.end80, %for.end63, %for.end49, %for.end31, %for.end18, %for.end
  ret void, !dbg !2853
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportCbYCrYQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !2854 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %cbcr = alloca [4 x i16], align 2
  %i = alloca i64, align 8
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  %range = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2857, metadata !DIExpression()), !dbg !2858
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !2859, metadata !DIExpression()), !dbg !2860
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !2861, metadata !DIExpression()), !dbg !2862
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !2863, metadata !DIExpression()), !dbg !2864
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !2865, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2867, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !2869, metadata !DIExpression()), !dbg !2870
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2871
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !2872
  %1 = load i64, i64* %depth, align 8, !dbg !2872
  switch i64 %1, label %sw.default [
    i64 10, label %sw.bb
  ], !dbg !2873

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x i16]* %cbcr, metadata !2874, metadata !DIExpression()), !dbg !2880
  store i32 0, i32* %pixel, align 4, !dbg !2881
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2882
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 8, !dbg !2884
  %3 = load i32, i32* %pack, align 4, !dbg !2884
  %cmp = icmp eq i32 %3, 0, !dbg !2885
  br i1 %cmp, label %if.then, label %if.end, !dbg !2886

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2887, metadata !DIExpression()), !dbg !2889
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !2890, metadata !DIExpression()), !dbg !2891
  call void @llvm.dbg.declare(metadata i64* %n, metadata !2892, metadata !DIExpression()), !dbg !2893
  store i64 0, i64* %n, align 8, !dbg !2894
  store i64 0, i64* %quantum, align 8, !dbg !2895
  store i64 0, i64* %x, align 8, !dbg !2896
  br label %for.cond, !dbg !2898

for.cond:                                         ; preds = %for.inc34, %if.then
  %4 = load i64, i64* %x, align 8, !dbg !2899
  %5 = load i64, i64* %number_pixels.addr, align 8, !dbg !2901
  %cmp1 = icmp slt i64 %4, %5, !dbg !2902
  br i1 %cmp1, label %for.body, label %for.end35, !dbg !2903

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !2904
  br label %for.cond2, !dbg !2907

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i64, i64* %i, align 8, !dbg !2908
  %cmp3 = icmp slt i64 %6, 4, !dbg !2910
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !2911

for.body4:                                        ; preds = %for.cond2
  %7 = load i64, i64* %n, align 8, !dbg !2912
  %rem = srem i64 %7, 3, !dbg !2914
  switch i64 %rem, label %sw.epilog [
    i64 0, label %sw.bb5
    i64 1, label %sw.bb8
    i64 2, label %sw.bb15
  ], !dbg !2915

sw.bb5:                                           ; preds = %for.body4
  %8 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2916
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %8, i32 0, i32 13, !dbg !2919
  %9 = load i32, i32* %endian, align 8, !dbg !2919
  %10 = load i8*, i8** %p.addr, align 8, !dbg !2920
  %call = call i8* @PushLongPixel(i32 %9, i8* %10, i32* %pixel), !dbg !2921
  store i8* %call, i8** %p.addr, align 8, !dbg !2922
  %11 = load i32, i32* %pixel, align 4, !dbg !2923
  %shr = lshr i32 %11, 22, !dbg !2924
  %and = and i32 %shr, 1023, !dbg !2925
  %shl = shl i32 %and, 6, !dbg !2926
  %conv = trunc i32 %shl to i16, !dbg !2927
  %call6 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv), !dbg !2928
  %conv7 = zext i16 %call6 to i64, !dbg !2929
  store i64 %conv7, i64* %quantum, align 8, !dbg !2930
  br label %sw.epilog, !dbg !2931

sw.bb8:                                           ; preds = %for.body4
  %12 = load i32, i32* %pixel, align 4, !dbg !2932
  %shr9 = lshr i32 %12, 12, !dbg !2934
  %and10 = and i32 %shr9, 1023, !dbg !2935
  %shl11 = shl i32 %and10, 6, !dbg !2936
  %conv12 = trunc i32 %shl11 to i16, !dbg !2937
  %call13 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv12), !dbg !2938
  %conv14 = zext i16 %call13 to i64, !dbg !2939
  store i64 %conv14, i64* %quantum, align 8, !dbg !2940
  br label %sw.epilog, !dbg !2941

sw.bb15:                                          ; preds = %for.body4
  %13 = load i32, i32* %pixel, align 4, !dbg !2942
  %shr16 = lshr i32 %13, 2, !dbg !2944
  %and17 = and i32 %shr16, 1023, !dbg !2945
  %shl18 = shl i32 %and17, 6, !dbg !2946
  %conv19 = trunc i32 %shl18 to i16, !dbg !2947
  %call20 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv19), !dbg !2948
  %conv21 = zext i16 %call20 to i64, !dbg !2949
  store i64 %conv21, i64* %quantum, align 8, !dbg !2950
  br label %sw.epilog, !dbg !2951

sw.epilog:                                        ; preds = %for.body4, %sw.bb15, %sw.bb8, %sw.bb5
  %14 = load i64, i64* %quantum, align 8, !dbg !2952
  %conv22 = trunc i64 %14 to i16, !dbg !2953
  %15 = load i64, i64* %i, align 8, !dbg !2954
  %arrayidx = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 %15, !dbg !2955
  store i16 %conv22, i16* %arrayidx, align 2, !dbg !2956
  %16 = load i64, i64* %n, align 8, !dbg !2957
  %inc = add nsw i64 %16, 1, !dbg !2957
  store i64 %inc, i64* %n, align 8, !dbg !2957
  br label %for.inc, !dbg !2958

for.inc:                                          ; preds = %sw.epilog
  %17 = load i64, i64* %i, align 8, !dbg !2959
  %inc23 = add nsw i64 %17, 1, !dbg !2959
  store i64 %inc23, i64* %i, align 8, !dbg !2959
  br label %for.cond2, !dbg !2960, !llvm.loop !2961

for.end:                                          ; preds = %for.cond2
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2963
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %18, i32 0, i32 6, !dbg !2964
  %19 = load i64, i64* %pad, align 8, !dbg !2964
  %20 = load i8*, i8** %p.addr, align 8, !dbg !2965
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %19, !dbg !2965
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !2965
  %arrayidx24 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 1, !dbg !2966
  %21 = load i16, i16* %arrayidx24, align 2, !dbg !2966
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2966
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 2, !dbg !2966
  store i16 %21, i16* %red, align 2, !dbg !2966
  %arrayidx25 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !2967
  %23 = load i16, i16* %arrayidx25, align 2, !dbg !2967
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2967
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !2967
  store i16 %23, i16* %green, align 2, !dbg !2967
  %arrayidx26 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !2968
  %25 = load i16, i16* %arrayidx26, align 2, !dbg !2968
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2968
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i32 0, i32 0, !dbg !2968
  store i16 %25, i16* %blue, align 2, !dbg !2968
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2969
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 1, !dbg !2969
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !2969
  %arrayidx27 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 3, !dbg !2970
  %28 = load i16, i16* %arrayidx27, align 2, !dbg !2970
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2970
  %red28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 2, !dbg !2970
  store i16 %28, i16* %red28, align 2, !dbg !2970
  %arrayidx29 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 0, !dbg !2971
  %30 = load i16, i16* %arrayidx29, align 2, !dbg !2971
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2971
  %green30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 1, !dbg !2971
  store i16 %30, i16* %green30, align 2, !dbg !2971
  %arrayidx31 = getelementptr inbounds [4 x i16], [4 x i16]* %cbcr, i64 0, i64 2, !dbg !2972
  %32 = load i16, i16* %arrayidx31, align 2, !dbg !2972
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2972
  %blue32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 0, !dbg !2972
  store i16 %32, i16* %blue32, align 2, !dbg !2972
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2973
  %incdec.ptr33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 1, !dbg !2973
  store %struct._PixelPacket* %incdec.ptr33, %struct._PixelPacket** %q.addr, align 8, !dbg !2973
  br label %for.inc34, !dbg !2974

for.inc34:                                        ; preds = %for.end
  %35 = load i64, i64* %x, align 8, !dbg !2975
  %add = add nsw i64 %35, 2, !dbg !2975
  store i64 %add, i64* %x, align 8, !dbg !2975
  br label %for.cond, !dbg !2976, !llvm.loop !2977

for.end35:                                        ; preds = %for.cond
  br label %sw.epilog54, !dbg !2979

if.end:                                           ; preds = %sw.bb
  br label %sw.default, !dbg !2980

sw.default:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata i64* %range, metadata !2981, metadata !DIExpression()), !dbg !2983
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2984
  %depth36 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 9, !dbg !2985
  %37 = load i64, i64* %depth36, align 8, !dbg !2985
  %call37 = call i64 @GetQuantumRange(i64 %37), !dbg !2986
  store i64 %call37, i64* %range, align 8, !dbg !2987
  store i64 0, i64* %x, align 8, !dbg !2988
  br label %for.cond38, !dbg !2990

for.cond38:                                       ; preds = %for.inc51, %sw.default
  %38 = load i64, i64* %x, align 8, !dbg !2991
  %39 = load i64, i64* %number_pixels.addr, align 8, !dbg !2993
  %cmp39 = icmp slt i64 %38, %39, !dbg !2994
  br i1 %cmp39, label %for.body41, label %for.end53, !dbg !2995

for.body41:                                       ; preds = %for.cond38
  %40 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !2996
  %41 = load i8*, i8** %p.addr, align 8, !dbg !2998
  %call42 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %40, i8* %41, i32* %pixel), !dbg !2999
  store i8* %call42, i8** %p.addr, align 8, !dbg !3000
  %42 = load i32, i32* %pixel, align 4, !dbg !3001
  %conv43 = zext i32 %42 to i64, !dbg !3001
  %43 = load i64, i64* %range, align 8, !dbg !3001
  %call44 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv43, i64 %43), !dbg !3001
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3001
  %red45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 2, !dbg !3001
  store i16 %call44, i16* %red45, align 2, !dbg !3001
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3002
  %46 = load i8*, i8** %p.addr, align 8, !dbg !3003
  %call46 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %45, i8* %46, i32* %pixel), !dbg !3004
  store i8* %call46, i8** %p.addr, align 8, !dbg !3005
  %47 = load i32, i32* %pixel, align 4, !dbg !3006
  %conv47 = zext i32 %47 to i64, !dbg !3006
  %48 = load i64, i64* %range, align 8, !dbg !3006
  %call48 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv47, i64 %48), !dbg !3006
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3006
  %green49 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 1, !dbg !3006
  store i16 %call48, i16* %green49, align 2, !dbg !3006
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3007
  %incdec.ptr50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 1, !dbg !3007
  store %struct._PixelPacket* %incdec.ptr50, %struct._PixelPacket** %q.addr, align 8, !dbg !3007
  br label %for.inc51, !dbg !3008

for.inc51:                                        ; preds = %for.body41
  %51 = load i64, i64* %x, align 8, !dbg !3009
  %inc52 = add nsw i64 %51, 1, !dbg !3009
  store i64 %inc52, i64* %x, align 8, !dbg !3009
  br label %for.cond38, !dbg !3010, !llvm.loop !3011

for.end53:                                        ; preds = %for.cond38
  br label %sw.epilog54, !dbg !3013

sw.epilog54:                                      ; preds = %for.end53, %for.end35
  ret void, !dbg !3014
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportCMYKQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q, i16* noalias %indexes, %struct._ExceptionInfo* %exception) #0 !dbg !3015 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel17 = alloca i16, align 2
  %pixel86 = alloca i32, align 4
  %pixel90 = alloca float, align 4
  %pixel150 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3016, metadata !DIExpression()), !dbg !3017
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3018, metadata !DIExpression()), !dbg !3019
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3020, metadata !DIExpression()), !dbg !3021
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3022, metadata !DIExpression()), !dbg !3023
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3024, metadata !DIExpression()), !dbg !3025
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !3026, metadata !DIExpression()), !dbg !3027
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3030, metadata !DIExpression()), !dbg !3031
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3032, metadata !DIExpression()), !dbg !3033
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3034, metadata !DIExpression()), !dbg !3035
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3036
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !3038
  %1 = load i32, i32* %colorspace, align 4, !dbg !3038
  %cmp = icmp ne i32 %1, 12, !dbg !3039
  br i1 %cmp, label %if.then, label %if.end, !dbg !3040

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3041
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3043
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !3044
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3043
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1249, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3045
  br label %sw.epilog, !dbg !3046

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3047
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !3048
  %5 = load i64, i64* %depth, align 8, !dbg !3048
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb16
    i64 32, label %sw.bb85
    i64 64, label %sw.bb146
  ], !dbg !3049

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !3050, metadata !DIExpression()), !dbg !3053
  store i64 0, i64* %x, align 8, !dbg !3054
  br label %for.cond, !dbg !3056

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !3057
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !3059
  %cmp2 = icmp slt i64 %6, %7, !dbg !3060
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3061

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %p.addr, align 8, !dbg !3062
  %call3 = call i8* @PushCharPixel(i8* %8, i8* %pixel1), !dbg !3064
  store i8* %call3, i8** %p.addr, align 8, !dbg !3065
  %9 = load i8, i8* %pixel1, align 1, !dbg !3066
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %9), !dbg !3066
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3066
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !3066
  store i16 %call4, i16* %red, align 2, !dbg !3066
  %11 = load i8*, i8** %p.addr, align 8, !dbg !3067
  %call5 = call i8* @PushCharPixel(i8* %11, i8* %pixel1), !dbg !3068
  store i8* %call5, i8** %p.addr, align 8, !dbg !3069
  %12 = load i8, i8* %pixel1, align 1, !dbg !3070
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %12), !dbg !3070
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3070
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 1, !dbg !3070
  store i16 %call6, i16* %green, align 2, !dbg !3070
  %14 = load i8*, i8** %p.addr, align 8, !dbg !3071
  %call7 = call i8* @PushCharPixel(i8* %14, i8* %pixel1), !dbg !3072
  store i8* %call7, i8** %p.addr, align 8, !dbg !3073
  %15 = load i8, i8* %pixel1, align 1, !dbg !3074
  %call8 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %15), !dbg !3074
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3074
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 0, !dbg !3074
  store i16 %call8, i16* %blue, align 2, !dbg !3074
  %17 = load i8*, i8** %p.addr, align 8, !dbg !3075
  %call9 = call i8* @PushCharPixel(i8* %17, i8* %pixel1), !dbg !3076
  store i8* %call9, i8** %p.addr, align 8, !dbg !3077
  %18 = load i16*, i16** %indexes.addr, align 8, !dbg !3078
  %19 = load i64, i64* %x, align 8, !dbg !3078
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 %19, !dbg !3078
  %cmp10 = icmp ne i16* %add.ptr, null, !dbg !3078
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !3081

if.then11:                                        ; preds = %for.body
  %20 = load i8, i8* %pixel1, align 1, !dbg !3078
  %call12 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %20), !dbg !3078
  %21 = load i16*, i16** %indexes.addr, align 8, !dbg !3078
  %22 = load i64, i64* %x, align 8, !dbg !3078
  %add.ptr13 = getelementptr inbounds i16, i16* %21, i64 %22, !dbg !3078
  store i16 %call12, i16* %add.ptr13, align 2, !dbg !3078
  br label %if.end14, !dbg !3078

if.end14:                                         ; preds = %if.then11, %for.body
  %23 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3082
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %23, i32 0, i32 6, !dbg !3083
  %24 = load i64, i64* %pad, align 8, !dbg !3083
  %25 = load i8*, i8** %p.addr, align 8, !dbg !3084
  %add.ptr15 = getelementptr inbounds i8, i8* %25, i64 %24, !dbg !3084
  store i8* %add.ptr15, i8** %p.addr, align 8, !dbg !3084
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3085
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i32 1, !dbg !3085
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !3085
  br label %for.inc, !dbg !3086

for.inc:                                          ; preds = %if.end14
  %27 = load i64, i64* %x, align 8, !dbg !3087
  %inc = add nsw i64 %27, 1, !dbg !3087
  store i64 %inc, i64* %x, align 8, !dbg !3087
  br label %for.cond, !dbg !3088, !llvm.loop !3089

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !3091

sw.bb16:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel17, metadata !3092, metadata !DIExpression()), !dbg !3094
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3095
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 2, !dbg !3097
  %29 = load i32, i32* %format, align 8, !dbg !3097
  %cmp18 = icmp eq i32 %29, 1, !dbg !3098
  br i1 %cmp18, label %if.then19, label %if.end55, !dbg !3099

if.then19:                                        ; preds = %sw.bb16
  store i64 0, i64* %x, align 8, !dbg !3100
  br label %for.cond20, !dbg !3103

for.cond20:                                       ; preds = %for.inc52, %if.then19
  %30 = load i64, i64* %x, align 8, !dbg !3104
  %31 = load i64, i64* %number_pixels.addr, align 8, !dbg !3106
  %cmp21 = icmp slt i64 %30, %31, !dbg !3107
  br i1 %cmp21, label %for.body22, label %for.end54, !dbg !3108

for.body22:                                       ; preds = %for.cond20
  %32 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3109
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %32, i32 0, i32 13, !dbg !3111
  %33 = load i32, i32* %endian, align 8, !dbg !3111
  %34 = load i8*, i8** %p.addr, align 8, !dbg !3112
  %call23 = call i8* @PushShortPixel(i32 %33, i8* %34, i16* %pixel17), !dbg !3113
  store i8* %call23, i8** %p.addr, align 8, !dbg !3114
  %35 = load i16, i16* %pixel17, align 2, !dbg !3115
  %call24 = call float @HalfToSinglePrecision(i16 zeroext %35), !dbg !3115
  %mul = fmul float 6.553500e+04, %call24, !dbg !3115
  %call25 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !3115
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3115
  %red26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !3115
  store i16 %call25, i16* %red26, align 2, !dbg !3115
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3116
  %endian27 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 13, !dbg !3117
  %38 = load i32, i32* %endian27, align 8, !dbg !3117
  %39 = load i8*, i8** %p.addr, align 8, !dbg !3118
  %call28 = call i8* @PushShortPixel(i32 %38, i8* %39, i16* %pixel17), !dbg !3119
  store i8* %call28, i8** %p.addr, align 8, !dbg !3120
  %40 = load i16, i16* %pixel17, align 2, !dbg !3121
  %call29 = call float @HalfToSinglePrecision(i16 zeroext %40), !dbg !3121
  %mul30 = fmul float 6.553500e+04, %call29, !dbg !3121
  %call31 = call zeroext i16 @ClampToQuantum(float %mul30), !dbg !3121
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3121
  %green32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 0, i32 1, !dbg !3121
  store i16 %call31, i16* %green32, align 2, !dbg !3121
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3122
  %endian33 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 13, !dbg !3123
  %43 = load i32, i32* %endian33, align 8, !dbg !3123
  %44 = load i8*, i8** %p.addr, align 8, !dbg !3124
  %call34 = call i8* @PushShortPixel(i32 %43, i8* %44, i16* %pixel17), !dbg !3125
  store i8* %call34, i8** %p.addr, align 8, !dbg !3126
  %45 = load i16, i16* %pixel17, align 2, !dbg !3127
  %call35 = call float @HalfToSinglePrecision(i16 zeroext %45), !dbg !3127
  %mul36 = fmul float 6.553500e+04, %call35, !dbg !3127
  %call37 = call zeroext i16 @ClampToQuantum(float %mul36), !dbg !3127
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3127
  %blue38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 0, !dbg !3127
  store i16 %call37, i16* %blue38, align 2, !dbg !3127
  %47 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3128
  %endian39 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %47, i32 0, i32 13, !dbg !3129
  %48 = load i32, i32* %endian39, align 8, !dbg !3129
  %49 = load i8*, i8** %p.addr, align 8, !dbg !3130
  %call40 = call i8* @PushShortPixel(i32 %48, i8* %49, i16* %pixel17), !dbg !3131
  store i8* %call40, i8** %p.addr, align 8, !dbg !3132
  %50 = load i16*, i16** %indexes.addr, align 8, !dbg !3133
  %51 = load i64, i64* %x, align 8, !dbg !3133
  %add.ptr41 = getelementptr inbounds i16, i16* %50, i64 %51, !dbg !3133
  %cmp42 = icmp ne i16* %add.ptr41, null, !dbg !3133
  br i1 %cmp42, label %if.then43, label %if.end48, !dbg !3136

if.then43:                                        ; preds = %for.body22
  %52 = load i16, i16* %pixel17, align 2, !dbg !3133
  %call44 = call float @HalfToSinglePrecision(i16 zeroext %52), !dbg !3133
  %mul45 = fmul float 6.553500e+04, %call44, !dbg !3133
  %call46 = call zeroext i16 @ClampToQuantum(float %mul45), !dbg !3133
  %53 = load i16*, i16** %indexes.addr, align 8, !dbg !3133
  %54 = load i64, i64* %x, align 8, !dbg !3133
  %add.ptr47 = getelementptr inbounds i16, i16* %53, i64 %54, !dbg !3133
  store i16 %call46, i16* %add.ptr47, align 2, !dbg !3133
  br label %if.end48, !dbg !3133

if.end48:                                         ; preds = %if.then43, %for.body22
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3137
  %pad49 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %55, i32 0, i32 6, !dbg !3138
  %56 = load i64, i64* %pad49, align 8, !dbg !3138
  %57 = load i8*, i8** %p.addr, align 8, !dbg !3139
  %add.ptr50 = getelementptr inbounds i8, i8* %57, i64 %56, !dbg !3139
  store i8* %add.ptr50, i8** %p.addr, align 8, !dbg !3139
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3140
  %incdec.ptr51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 1, !dbg !3140
  store %struct._PixelPacket* %incdec.ptr51, %struct._PixelPacket** %q.addr, align 8, !dbg !3140
  br label %for.inc52, !dbg !3141

for.inc52:                                        ; preds = %if.end48
  %59 = load i64, i64* %x, align 8, !dbg !3142
  %inc53 = add nsw i64 %59, 1, !dbg !3142
  store i64 %inc53, i64* %x, align 8, !dbg !3142
  br label %for.cond20, !dbg !3143, !llvm.loop !3144

for.end54:                                        ; preds = %for.cond20
  br label %sw.epilog, !dbg !3146

if.end55:                                         ; preds = %sw.bb16
  store i64 0, i64* %x, align 8, !dbg !3147
  br label %for.cond56, !dbg !3149

for.cond56:                                       ; preds = %for.inc82, %if.end55
  %60 = load i64, i64* %x, align 8, !dbg !3150
  %61 = load i64, i64* %number_pixels.addr, align 8, !dbg !3152
  %cmp57 = icmp slt i64 %60, %61, !dbg !3153
  br i1 %cmp57, label %for.body58, label %for.end84, !dbg !3154

for.body58:                                       ; preds = %for.cond56
  %62 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3155
  %endian59 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %62, i32 0, i32 13, !dbg !3157
  %63 = load i32, i32* %endian59, align 8, !dbg !3157
  %64 = load i8*, i8** %p.addr, align 8, !dbg !3158
  %call60 = call i8* @PushShortPixel(i32 %63, i8* %64, i16* %pixel17), !dbg !3159
  store i8* %call60, i8** %p.addr, align 8, !dbg !3160
  %65 = load i16, i16* %pixel17, align 2, !dbg !3161
  %call61 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %65), !dbg !3161
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3161
  %red62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 2, !dbg !3161
  store i16 %call61, i16* %red62, align 2, !dbg !3161
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3162
  %endian63 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %67, i32 0, i32 13, !dbg !3163
  %68 = load i32, i32* %endian63, align 8, !dbg !3163
  %69 = load i8*, i8** %p.addr, align 8, !dbg !3164
  %call64 = call i8* @PushShortPixel(i32 %68, i8* %69, i16* %pixel17), !dbg !3165
  store i8* %call64, i8** %p.addr, align 8, !dbg !3166
  %70 = load i16, i16* %pixel17, align 2, !dbg !3167
  %call65 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %70), !dbg !3167
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3167
  %green66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 1, !dbg !3167
  store i16 %call65, i16* %green66, align 2, !dbg !3167
  %72 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3168
  %endian67 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %72, i32 0, i32 13, !dbg !3169
  %73 = load i32, i32* %endian67, align 8, !dbg !3169
  %74 = load i8*, i8** %p.addr, align 8, !dbg !3170
  %call68 = call i8* @PushShortPixel(i32 %73, i8* %74, i16* %pixel17), !dbg !3171
  store i8* %call68, i8** %p.addr, align 8, !dbg !3172
  %75 = load i16, i16* %pixel17, align 2, !dbg !3173
  %call69 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %75), !dbg !3173
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3173
  %blue70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 0, !dbg !3173
  store i16 %call69, i16* %blue70, align 2, !dbg !3173
  %77 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3174
  %endian71 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %77, i32 0, i32 13, !dbg !3175
  %78 = load i32, i32* %endian71, align 8, !dbg !3175
  %79 = load i8*, i8** %p.addr, align 8, !dbg !3176
  %call72 = call i8* @PushShortPixel(i32 %78, i8* %79, i16* %pixel17), !dbg !3177
  store i8* %call72, i8** %p.addr, align 8, !dbg !3178
  %80 = load i16*, i16** %indexes.addr, align 8, !dbg !3179
  %81 = load i64, i64* %x, align 8, !dbg !3179
  %add.ptr73 = getelementptr inbounds i16, i16* %80, i64 %81, !dbg !3179
  %cmp74 = icmp ne i16* %add.ptr73, null, !dbg !3179
  br i1 %cmp74, label %if.then75, label %if.end78, !dbg !3182

if.then75:                                        ; preds = %for.body58
  %82 = load i16, i16* %pixel17, align 2, !dbg !3179
  %call76 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %82), !dbg !3179
  %83 = load i16*, i16** %indexes.addr, align 8, !dbg !3179
  %84 = load i64, i64* %x, align 8, !dbg !3179
  %add.ptr77 = getelementptr inbounds i16, i16* %83, i64 %84, !dbg !3179
  store i16 %call76, i16* %add.ptr77, align 2, !dbg !3179
  br label %if.end78, !dbg !3179

if.end78:                                         ; preds = %if.then75, %for.body58
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3183
  %pad79 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 6, !dbg !3184
  %86 = load i64, i64* %pad79, align 8, !dbg !3184
  %87 = load i8*, i8** %p.addr, align 8, !dbg !3185
  %add.ptr80 = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !3185
  store i8* %add.ptr80, i8** %p.addr, align 8, !dbg !3185
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3186
  %incdec.ptr81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !3186
  store %struct._PixelPacket* %incdec.ptr81, %struct._PixelPacket** %q.addr, align 8, !dbg !3186
  br label %for.inc82, !dbg !3187

for.inc82:                                        ; preds = %if.end78
  %89 = load i64, i64* %x, align 8, !dbg !3188
  %inc83 = add nsw i64 %89, 1, !dbg !3188
  store i64 %inc83, i64* %x, align 8, !dbg !3188
  br label %for.cond56, !dbg !3189, !llvm.loop !3190

for.end84:                                        ; preds = %for.cond56
  br label %sw.epilog, !dbg !3192

sw.bb85:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel86, metadata !3193, metadata !DIExpression()), !dbg !3195
  %90 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3196
  %format87 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %90, i32 0, i32 2, !dbg !3198
  %91 = load i32, i32* %format87, align 8, !dbg !3198
  %cmp88 = icmp eq i32 %91, 1, !dbg !3199
  br i1 %cmp88, label %if.then89, label %if.end116, !dbg !3200

if.then89:                                        ; preds = %sw.bb85
  call void @llvm.dbg.declare(metadata float* %pixel90, metadata !3201, metadata !DIExpression()), !dbg !3203
  store i64 0, i64* %x, align 8, !dbg !3204
  br label %for.cond91, !dbg !3206

for.cond91:                                       ; preds = %for.inc113, %if.then89
  %92 = load i64, i64* %x, align 8, !dbg !3207
  %93 = load i64, i64* %number_pixels.addr, align 8, !dbg !3209
  %cmp92 = icmp slt i64 %92, %93, !dbg !3210
  br i1 %cmp92, label %for.body93, label %for.end115, !dbg !3211

for.body93:                                       ; preds = %for.cond91
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3212
  %95 = load i8*, i8** %p.addr, align 8, !dbg !3214
  %call94 = call i8* @PushFloatPixel(%struct._QuantumInfo* %94, i8* %95, float* %pixel90), !dbg !3215
  store i8* %call94, i8** %p.addr, align 8, !dbg !3216
  %96 = load float, float* %pixel90, align 4, !dbg !3217
  %call95 = call zeroext i16 @ClampToQuantum(float %96), !dbg !3217
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3217
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 2, !dbg !3217
  store i16 %call95, i16* %red96, align 2, !dbg !3217
  %98 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3218
  %99 = load i8*, i8** %p.addr, align 8, !dbg !3219
  %call97 = call i8* @PushFloatPixel(%struct._QuantumInfo* %98, i8* %99, float* %pixel90), !dbg !3220
  store i8* %call97, i8** %p.addr, align 8, !dbg !3221
  %100 = load float, float* %pixel90, align 4, !dbg !3222
  %call98 = call zeroext i16 @ClampToQuantum(float %100), !dbg !3222
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3222
  %green99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 1, !dbg !3222
  store i16 %call98, i16* %green99, align 2, !dbg !3222
  %102 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3223
  %103 = load i8*, i8** %p.addr, align 8, !dbg !3224
  %call100 = call i8* @PushFloatPixel(%struct._QuantumInfo* %102, i8* %103, float* %pixel90), !dbg !3225
  store i8* %call100, i8** %p.addr, align 8, !dbg !3226
  %104 = load float, float* %pixel90, align 4, !dbg !3227
  %call101 = call zeroext i16 @ClampToQuantum(float %104), !dbg !3227
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3227
  %blue102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 0, !dbg !3227
  store i16 %call101, i16* %blue102, align 2, !dbg !3227
  %106 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3228
  %107 = load i8*, i8** %p.addr, align 8, !dbg !3229
  %call103 = call i8* @PushFloatPixel(%struct._QuantumInfo* %106, i8* %107, float* %pixel90), !dbg !3230
  store i8* %call103, i8** %p.addr, align 8, !dbg !3231
  %108 = load i16*, i16** %indexes.addr, align 8, !dbg !3232
  %109 = load i64, i64* %x, align 8, !dbg !3232
  %add.ptr104 = getelementptr inbounds i16, i16* %108, i64 %109, !dbg !3232
  %cmp105 = icmp ne i16* %add.ptr104, null, !dbg !3232
  br i1 %cmp105, label %if.then106, label %if.end109, !dbg !3235

if.then106:                                       ; preds = %for.body93
  %110 = load float, float* %pixel90, align 4, !dbg !3232
  %call107 = call zeroext i16 @ClampToQuantum(float %110), !dbg !3232
  %111 = load i16*, i16** %indexes.addr, align 8, !dbg !3232
  %112 = load i64, i64* %x, align 8, !dbg !3232
  %add.ptr108 = getelementptr inbounds i16, i16* %111, i64 %112, !dbg !3232
  store i16 %call107, i16* %add.ptr108, align 2, !dbg !3232
  br label %if.end109, !dbg !3232

if.end109:                                        ; preds = %if.then106, %for.body93
  %113 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3236
  %pad110 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %113, i32 0, i32 6, !dbg !3237
  %114 = load i64, i64* %pad110, align 8, !dbg !3237
  %115 = load i8*, i8** %p.addr, align 8, !dbg !3238
  %add.ptr111 = getelementptr inbounds i8, i8* %115, i64 %114, !dbg !3238
  store i8* %add.ptr111, i8** %p.addr, align 8, !dbg !3238
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3239
  %incdec.ptr112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 1, !dbg !3239
  store %struct._PixelPacket* %incdec.ptr112, %struct._PixelPacket** %q.addr, align 8, !dbg !3239
  br label %for.inc113, !dbg !3240

for.inc113:                                       ; preds = %if.end109
  %117 = load i64, i64* %x, align 8, !dbg !3241
  %inc114 = add nsw i64 %117, 1, !dbg !3241
  store i64 %inc114, i64* %x, align 8, !dbg !3241
  br label %for.cond91, !dbg !3242, !llvm.loop !3243

for.end115:                                       ; preds = %for.cond91
  br label %sw.epilog, !dbg !3245

if.end116:                                        ; preds = %sw.bb85
  store i64 0, i64* %x, align 8, !dbg !3246
  br label %for.cond117, !dbg !3248

for.cond117:                                      ; preds = %for.inc143, %if.end116
  %118 = load i64, i64* %x, align 8, !dbg !3249
  %119 = load i64, i64* %number_pixels.addr, align 8, !dbg !3251
  %cmp118 = icmp slt i64 %118, %119, !dbg !3252
  br i1 %cmp118, label %for.body119, label %for.end145, !dbg !3253

for.body119:                                      ; preds = %for.cond117
  %120 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3254
  %endian120 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %120, i32 0, i32 13, !dbg !3256
  %121 = load i32, i32* %endian120, align 8, !dbg !3256
  %122 = load i8*, i8** %p.addr, align 8, !dbg !3257
  %call121 = call i8* @PushLongPixel(i32 %121, i8* %122, i32* %pixel86), !dbg !3258
  store i8* %call121, i8** %p.addr, align 8, !dbg !3259
  %123 = load i32, i32* %pixel86, align 4, !dbg !3260
  %call122 = call zeroext i16 @ScaleLongToQuantum(i32 %123), !dbg !3260
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3260
  %red123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 2, !dbg !3260
  store i16 %call122, i16* %red123, align 2, !dbg !3260
  %125 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3261
  %endian124 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %125, i32 0, i32 13, !dbg !3262
  %126 = load i32, i32* %endian124, align 8, !dbg !3262
  %127 = load i8*, i8** %p.addr, align 8, !dbg !3263
  %call125 = call i8* @PushLongPixel(i32 %126, i8* %127, i32* %pixel86), !dbg !3264
  store i8* %call125, i8** %p.addr, align 8, !dbg !3265
  %128 = load i32, i32* %pixel86, align 4, !dbg !3266
  %call126 = call zeroext i16 @ScaleLongToQuantum(i32 %128), !dbg !3266
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3266
  %green127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 1, !dbg !3266
  store i16 %call126, i16* %green127, align 2, !dbg !3266
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3267
  %endian128 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %130, i32 0, i32 13, !dbg !3268
  %131 = load i32, i32* %endian128, align 8, !dbg !3268
  %132 = load i8*, i8** %p.addr, align 8, !dbg !3269
  %call129 = call i8* @PushLongPixel(i32 %131, i8* %132, i32* %pixel86), !dbg !3270
  store i8* %call129, i8** %p.addr, align 8, !dbg !3271
  %133 = load i32, i32* %pixel86, align 4, !dbg !3272
  %call130 = call zeroext i16 @ScaleLongToQuantum(i32 %133), !dbg !3272
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3272
  %blue131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 0, !dbg !3272
  store i16 %call130, i16* %blue131, align 2, !dbg !3272
  %135 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3273
  %endian132 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %135, i32 0, i32 13, !dbg !3274
  %136 = load i32, i32* %endian132, align 8, !dbg !3274
  %137 = load i8*, i8** %p.addr, align 8, !dbg !3275
  %call133 = call i8* @PushLongPixel(i32 %136, i8* %137, i32* %pixel86), !dbg !3276
  store i8* %call133, i8** %p.addr, align 8, !dbg !3277
  %138 = load i16*, i16** %indexes.addr, align 8, !dbg !3278
  %139 = load i64, i64* %x, align 8, !dbg !3278
  %add.ptr134 = getelementptr inbounds i16, i16* %138, i64 %139, !dbg !3278
  %cmp135 = icmp ne i16* %add.ptr134, null, !dbg !3278
  br i1 %cmp135, label %if.then136, label %if.end139, !dbg !3281

if.then136:                                       ; preds = %for.body119
  %140 = load i32, i32* %pixel86, align 4, !dbg !3278
  %call137 = call zeroext i16 @ScaleLongToQuantum(i32 %140), !dbg !3278
  %141 = load i16*, i16** %indexes.addr, align 8, !dbg !3278
  %142 = load i64, i64* %x, align 8, !dbg !3278
  %add.ptr138 = getelementptr inbounds i16, i16* %141, i64 %142, !dbg !3278
  store i16 %call137, i16* %add.ptr138, align 2, !dbg !3278
  br label %if.end139, !dbg !3278

if.end139:                                        ; preds = %if.then136, %for.body119
  %143 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3282
  %pad140 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %143, i32 0, i32 6, !dbg !3283
  %144 = load i64, i64* %pad140, align 8, !dbg !3283
  %145 = load i8*, i8** %p.addr, align 8, !dbg !3284
  %add.ptr141 = getelementptr inbounds i8, i8* %145, i64 %144, !dbg !3284
  store i8* %add.ptr141, i8** %p.addr, align 8, !dbg !3284
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3285
  %incdec.ptr142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 1, !dbg !3285
  store %struct._PixelPacket* %incdec.ptr142, %struct._PixelPacket** %q.addr, align 8, !dbg !3285
  br label %for.inc143, !dbg !3286

for.inc143:                                       ; preds = %if.end139
  %147 = load i64, i64* %x, align 8, !dbg !3287
  %inc144 = add nsw i64 %147, 1, !dbg !3287
  store i64 %inc144, i64* %x, align 8, !dbg !3287
  br label %for.cond117, !dbg !3288, !llvm.loop !3289

for.end145:                                       ; preds = %for.cond117
  br label %sw.epilog, !dbg !3291

sw.bb146:                                         ; preds = %if.end
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3292
  %format147 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 2, !dbg !3295
  %149 = load i32, i32* %format147, align 8, !dbg !3295
  %cmp148 = icmp eq i32 %149, 1, !dbg !3296
  br i1 %cmp148, label %if.then149, label %if.end181, !dbg !3297

if.then149:                                       ; preds = %sw.bb146
  call void @llvm.dbg.declare(metadata double* %pixel150, metadata !3298, metadata !DIExpression()), !dbg !3300
  store i64 0, i64* %x, align 8, !dbg !3301
  br label %for.cond151, !dbg !3303

for.cond151:                                      ; preds = %for.inc178, %if.then149
  %150 = load i64, i64* %x, align 8, !dbg !3304
  %151 = load i64, i64* %number_pixels.addr, align 8, !dbg !3306
  %cmp152 = icmp slt i64 %150, %151, !dbg !3307
  br i1 %cmp152, label %for.body153, label %for.end180, !dbg !3308

for.body153:                                      ; preds = %for.cond151
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3309
  %153 = load i8*, i8** %p.addr, align 8, !dbg !3311
  %call154 = call i8* @PushDoublePixel(%struct._QuantumInfo* %152, i8* %153, double* %pixel150), !dbg !3312
  store i8* %call154, i8** %p.addr, align 8, !dbg !3313
  %154 = load double, double* %pixel150, align 8, !dbg !3314
  %conv = fptrunc double %154 to float, !dbg !3314
  %call155 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !3314
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3314
  %red156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 2, !dbg !3314
  store i16 %call155, i16* %red156, align 2, !dbg !3314
  %156 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3315
  %157 = load i8*, i8** %p.addr, align 8, !dbg !3316
  %call157 = call i8* @PushDoublePixel(%struct._QuantumInfo* %156, i8* %157, double* %pixel150), !dbg !3317
  store i8* %call157, i8** %p.addr, align 8, !dbg !3318
  %158 = load double, double* %pixel150, align 8, !dbg !3319
  %conv158 = fptrunc double %158 to float, !dbg !3319
  %call159 = call zeroext i16 @ClampToQuantum(float %conv158), !dbg !3319
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3319
  %green160 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 1, !dbg !3319
  store i16 %call159, i16* %green160, align 2, !dbg !3319
  %160 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3320
  %161 = load i8*, i8** %p.addr, align 8, !dbg !3321
  %call161 = call i8* @PushDoublePixel(%struct._QuantumInfo* %160, i8* %161, double* %pixel150), !dbg !3322
  store i8* %call161, i8** %p.addr, align 8, !dbg !3323
  %162 = load double, double* %pixel150, align 8, !dbg !3324
  %conv162 = fptrunc double %162 to float, !dbg !3324
  %call163 = call zeroext i16 @ClampToQuantum(float %conv162), !dbg !3324
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3324
  %blue164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 0, i32 0, !dbg !3324
  store i16 %call163, i16* %blue164, align 2, !dbg !3324
  %164 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3325
  %165 = load i8*, i8** %p.addr, align 8, !dbg !3326
  %call165 = call i8* @PushDoublePixel(%struct._QuantumInfo* %164, i8* %165, double* %pixel150), !dbg !3327
  store i8* %call165, i8** %p.addr, align 8, !dbg !3328
  %166 = load i16*, i16** %indexes.addr, align 8, !dbg !3329
  %167 = load i64, i64* %x, align 8, !dbg !3329
  %add.ptr166 = getelementptr inbounds i16, i16* %166, i64 %167, !dbg !3329
  %cmp167 = icmp ne i16* %add.ptr166, null, !dbg !3329
  br i1 %cmp167, label %if.then169, label %if.end173, !dbg !3332

if.then169:                                       ; preds = %for.body153
  %168 = load double, double* %pixel150, align 8, !dbg !3329
  %conv170 = fptrunc double %168 to float, !dbg !3329
  %call171 = call zeroext i16 @ClampToQuantum(float %conv170), !dbg !3329
  %169 = load i16*, i16** %indexes.addr, align 8, !dbg !3329
  %170 = load i64, i64* %x, align 8, !dbg !3329
  %add.ptr172 = getelementptr inbounds i16, i16* %169, i64 %170, !dbg !3329
  store i16 %call171, i16* %add.ptr172, align 2, !dbg !3329
  br label %if.end173, !dbg !3329

if.end173:                                        ; preds = %if.then169, %for.body153
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3333
  %172 = load i8*, i8** %p.addr, align 8, !dbg !3334
  %call174 = call i8* @PushDoublePixel(%struct._QuantumInfo* %171, i8* %172, double* %pixel150), !dbg !3335
  store i8* %call174, i8** %p.addr, align 8, !dbg !3336
  %173 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3337
  %pad175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %173, i32 0, i32 6, !dbg !3338
  %174 = load i64, i64* %pad175, align 8, !dbg !3338
  %175 = load i8*, i8** %p.addr, align 8, !dbg !3339
  %add.ptr176 = getelementptr inbounds i8, i8* %175, i64 %174, !dbg !3339
  store i8* %add.ptr176, i8** %p.addr, align 8, !dbg !3339
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3340
  %incdec.ptr177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %176, i32 1, !dbg !3340
  store %struct._PixelPacket* %incdec.ptr177, %struct._PixelPacket** %q.addr, align 8, !dbg !3340
  br label %for.inc178, !dbg !3341

for.inc178:                                       ; preds = %if.end173
  %177 = load i64, i64* %x, align 8, !dbg !3342
  %inc179 = add nsw i64 %177, 1, !dbg !3342
  store i64 %inc179, i64* %x, align 8, !dbg !3342
  br label %for.cond151, !dbg !3343, !llvm.loop !3344

for.end180:                                       ; preds = %for.cond151
  br label %sw.epilog, !dbg !3346

if.end181:                                        ; preds = %sw.bb146
  br label %sw.default, !dbg !3347

sw.default:                                       ; preds = %if.end, %if.end181
  %178 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3348
  %depth182 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %178, i32 0, i32 0, !dbg !3350
  %179 = load i64, i64* %depth182, align 8, !dbg !3350
  %call183 = call i64 @GetQuantumRange(i64 %179), !dbg !3351
  store i64 %call183, i64* %range, align 8, !dbg !3352
  store i64 0, i64* %x, align 8, !dbg !3353
  br label %for.cond184, !dbg !3355

for.cond184:                                      ; preds = %for.inc210, %sw.default
  %180 = load i64, i64* %x, align 8, !dbg !3356
  %181 = load i64, i64* %number_pixels.addr, align 8, !dbg !3358
  %cmp185 = icmp slt i64 %180, %181, !dbg !3359
  br i1 %cmp185, label %for.body187, label %for.end212, !dbg !3360

for.body187:                                      ; preds = %for.cond184
  %182 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3361
  %183 = load i8*, i8** %p.addr, align 8, !dbg !3363
  %call188 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %182, i8* %183, i32* %pixel), !dbg !3364
  store i8* %call188, i8** %p.addr, align 8, !dbg !3365
  %184 = load i32, i32* %pixel, align 4, !dbg !3366
  %conv189 = zext i32 %184 to i64, !dbg !3366
  %185 = load i64, i64* %range, align 8, !dbg !3366
  %call190 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv189, i64 %185), !dbg !3366
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3366
  %red191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 2, !dbg !3366
  store i16 %call190, i16* %red191, align 2, !dbg !3366
  %187 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3367
  %188 = load i8*, i8** %p.addr, align 8, !dbg !3368
  %call192 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %187, i8* %188, i32* %pixel), !dbg !3369
  store i8* %call192, i8** %p.addr, align 8, !dbg !3370
  %189 = load i32, i32* %pixel, align 4, !dbg !3371
  %conv193 = zext i32 %189 to i64, !dbg !3371
  %190 = load i64, i64* %range, align 8, !dbg !3371
  %call194 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv193, i64 %190), !dbg !3371
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3371
  %green195 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i32 0, i32 1, !dbg !3371
  store i16 %call194, i16* %green195, align 2, !dbg !3371
  %192 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3372
  %193 = load i8*, i8** %p.addr, align 8, !dbg !3373
  %call196 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %192, i8* %193, i32* %pixel), !dbg !3374
  store i8* %call196, i8** %p.addr, align 8, !dbg !3375
  %194 = load i32, i32* %pixel, align 4, !dbg !3376
  %conv197 = zext i32 %194 to i64, !dbg !3376
  %195 = load i64, i64* %range, align 8, !dbg !3376
  %call198 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv197, i64 %195), !dbg !3376
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3376
  %blue199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 0, !dbg !3376
  store i16 %call198, i16* %blue199, align 2, !dbg !3376
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3377
  %198 = load i8*, i8** %p.addr, align 8, !dbg !3378
  %call200 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %197, i8* %198, i32* %pixel), !dbg !3379
  store i8* %call200, i8** %p.addr, align 8, !dbg !3380
  %199 = load i16*, i16** %indexes.addr, align 8, !dbg !3381
  %200 = load i64, i64* %x, align 8, !dbg !3381
  %add.ptr201 = getelementptr inbounds i16, i16* %199, i64 %200, !dbg !3381
  %cmp202 = icmp ne i16* %add.ptr201, null, !dbg !3381
  br i1 %cmp202, label %if.then204, label %if.end208, !dbg !3384

if.then204:                                       ; preds = %for.body187
  %201 = load i32, i32* %pixel, align 4, !dbg !3381
  %conv205 = zext i32 %201 to i64, !dbg !3381
  %202 = load i64, i64* %range, align 8, !dbg !3381
  %call206 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv205, i64 %202), !dbg !3381
  %203 = load i16*, i16** %indexes.addr, align 8, !dbg !3381
  %204 = load i64, i64* %x, align 8, !dbg !3381
  %add.ptr207 = getelementptr inbounds i16, i16* %203, i64 %204, !dbg !3381
  store i16 %call206, i16* %add.ptr207, align 2, !dbg !3381
  br label %if.end208, !dbg !3381

if.end208:                                        ; preds = %if.then204, %for.body187
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3385
  %incdec.ptr209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 1, !dbg !3385
  store %struct._PixelPacket* %incdec.ptr209, %struct._PixelPacket** %q.addr, align 8, !dbg !3385
  br label %for.inc210, !dbg !3386

for.inc210:                                       ; preds = %if.end208
  %206 = load i64, i64* %x, align 8, !dbg !3387
  %inc211 = add nsw i64 %206, 1, !dbg !3387
  store i64 %inc211, i64* %x, align 8, !dbg !3387
  br label %for.cond184, !dbg !3388, !llvm.loop !3389

for.end212:                                       ; preds = %for.cond184
  br label %sw.epilog, !dbg !3391

sw.epilog:                                        ; preds = %if.then, %for.end212, %for.end180, %for.end145, %for.end115, %for.end84, %for.end54, %for.end
  ret void, !dbg !3392
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportCMYKAQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q, i16* noalias %indexes, %struct._ExceptionInfo* %exception) #0 !dbg !3393 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel20 = alloca i16, align 2
  %pixel110 = alloca i32, align 4
  %pixel115 = alloca float, align 4
  %pixel193 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3394, metadata !DIExpression()), !dbg !3395
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3396, metadata !DIExpression()), !dbg !3397
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3398, metadata !DIExpression()), !dbg !3399
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3400, metadata !DIExpression()), !dbg !3401
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3402, metadata !DIExpression()), !dbg !3403
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !3404, metadata !DIExpression()), !dbg !3405
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3406, metadata !DIExpression()), !dbg !3407
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3408, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3410, metadata !DIExpression()), !dbg !3411
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3412, metadata !DIExpression()), !dbg !3413
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3414
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !3416
  %1 = load i32, i32* %colorspace, align 4, !dbg !3416
  %cmp = icmp ne i32 %1, 12, !dbg !3417
  br i1 %cmp, label %if.then, label %if.end, !dbg !3418

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3419
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3421
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !3422
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3421
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1416, i32 465, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !3423
  br label %sw.epilog, !dbg !3424

if.end:                                           ; preds = %entry
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3425
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !3426
  %5 = load i64, i64* %depth, align 8, !dbg !3426
  switch i64 %5, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb19
    i64 32, label %sw.bb109
    i64 64, label %sw.bb188
  ], !dbg !3427

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !3428, metadata !DIExpression()), !dbg !3431
  store i64 0, i64* %x, align 8, !dbg !3432
  br label %for.cond, !dbg !3434

for.cond:                                         ; preds = %for.inc, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !3435
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !3437
  %cmp2 = icmp slt i64 %6, %7, !dbg !3438
  br i1 %cmp2, label %for.body, label %for.end, !dbg !3439

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %p.addr, align 8, !dbg !3440
  %call3 = call i8* @PushCharPixel(i8* %8, i8* %pixel1), !dbg !3442
  store i8* %call3, i8** %p.addr, align 8, !dbg !3443
  %9 = load i8, i8* %pixel1, align 1, !dbg !3444
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %9), !dbg !3444
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3444
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 0, i32 2, !dbg !3444
  store i16 %call4, i16* %red, align 2, !dbg !3444
  %11 = load i8*, i8** %p.addr, align 8, !dbg !3445
  %call5 = call i8* @PushCharPixel(i8* %11, i8* %pixel1), !dbg !3446
  store i8* %call5, i8** %p.addr, align 8, !dbg !3447
  %12 = load i8, i8* %pixel1, align 1, !dbg !3448
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %12), !dbg !3448
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3448
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 1, !dbg !3448
  store i16 %call6, i16* %green, align 2, !dbg !3448
  %14 = load i8*, i8** %p.addr, align 8, !dbg !3449
  %call7 = call i8* @PushCharPixel(i8* %14, i8* %pixel1), !dbg !3450
  store i8* %call7, i8** %p.addr, align 8, !dbg !3451
  %15 = load i8, i8* %pixel1, align 1, !dbg !3452
  %call8 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %15), !dbg !3452
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3452
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 0, !dbg !3452
  store i16 %call8, i16* %blue, align 2, !dbg !3452
  %17 = load i8*, i8** %p.addr, align 8, !dbg !3453
  %call9 = call i8* @PushCharPixel(i8* %17, i8* %pixel1), !dbg !3454
  store i8* %call9, i8** %p.addr, align 8, !dbg !3455
  %18 = load i16*, i16** %indexes.addr, align 8, !dbg !3456
  %19 = load i64, i64* %x, align 8, !dbg !3456
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 %19, !dbg !3456
  %cmp10 = icmp ne i16* %add.ptr, null, !dbg !3456
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !3459

if.then11:                                        ; preds = %for.body
  %20 = load i8, i8* %pixel1, align 1, !dbg !3456
  %call12 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %20), !dbg !3456
  %21 = load i16*, i16** %indexes.addr, align 8, !dbg !3456
  %22 = load i64, i64* %x, align 8, !dbg !3456
  %add.ptr13 = getelementptr inbounds i16, i16* %21, i64 %22, !dbg !3456
  store i16 %call12, i16* %add.ptr13, align 2, !dbg !3456
  br label %if.end14, !dbg !3456

if.end14:                                         ; preds = %if.then11, %for.body
  %23 = load i8*, i8** %p.addr, align 8, !dbg !3460
  %call15 = call i8* @PushCharPixel(i8* %23, i8* %pixel1), !dbg !3461
  store i8* %call15, i8** %p.addr, align 8, !dbg !3462
  %24 = load i8, i8* %pixel1, align 1, !dbg !3463
  %call16 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %24), !dbg !3463
  %conv = zext i16 %call16 to i32, !dbg !3463
  %sub = sub nsw i32 65535, %conv, !dbg !3463
  %conv17 = trunc i32 %sub to i16, !dbg !3463
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3463
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 3, !dbg !3463
  store i16 %conv17, i16* %opacity, align 2, !dbg !3463
  %26 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3464
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %26, i32 0, i32 6, !dbg !3465
  %27 = load i64, i64* %pad, align 8, !dbg !3465
  %28 = load i8*, i8** %p.addr, align 8, !dbg !3466
  %add.ptr18 = getelementptr inbounds i8, i8* %28, i64 %27, !dbg !3466
  store i8* %add.ptr18, i8** %p.addr, align 8, !dbg !3466
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3467
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 1, !dbg !3467
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !3467
  br label %for.inc, !dbg !3468

for.inc:                                          ; preds = %if.end14
  %30 = load i64, i64* %x, align 8, !dbg !3469
  %inc = add nsw i64 %30, 1, !dbg !3469
  store i64 %inc, i64* %x, align 8, !dbg !3469
  br label %for.cond, !dbg !3470, !llvm.loop !3471

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !3473

sw.bb19:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel20, metadata !3474, metadata !DIExpression()), !dbg !3476
  %31 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3477
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %31, i32 0, i32 2, !dbg !3479
  %32 = load i32, i32* %format, align 8, !dbg !3479
  %cmp21 = icmp eq i32 %32, 1, !dbg !3480
  br i1 %cmp21, label %if.then23, label %if.end70, !dbg !3481

if.then23:                                        ; preds = %sw.bb19
  store i64 0, i64* %x, align 8, !dbg !3482
  br label %for.cond24, !dbg !3485

for.cond24:                                       ; preds = %for.inc67, %if.then23
  %33 = load i64, i64* %x, align 8, !dbg !3486
  %34 = load i64, i64* %number_pixels.addr, align 8, !dbg !3488
  %cmp25 = icmp slt i64 %33, %34, !dbg !3489
  br i1 %cmp25, label %for.body27, label %for.end69, !dbg !3490

for.body27:                                       ; preds = %for.cond24
  %35 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3491
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %35, i32 0, i32 13, !dbg !3493
  %36 = load i32, i32* %endian, align 8, !dbg !3493
  %37 = load i8*, i8** %p.addr, align 8, !dbg !3494
  %call28 = call i8* @PushShortPixel(i32 %36, i8* %37, i16* %pixel20), !dbg !3495
  store i8* %call28, i8** %p.addr, align 8, !dbg !3496
  %38 = load i16, i16* %pixel20, align 2, !dbg !3497
  %call29 = call float @HalfToSinglePrecision(i16 zeroext %38), !dbg !3497
  %mul = fmul float 6.553500e+04, %call29, !dbg !3497
  %call30 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !3497
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3497
  %red31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 2, !dbg !3497
  store i16 %call30, i16* %red31, align 2, !dbg !3497
  %40 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3498
  %endian32 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %40, i32 0, i32 13, !dbg !3499
  %41 = load i32, i32* %endian32, align 8, !dbg !3499
  %42 = load i8*, i8** %p.addr, align 8, !dbg !3500
  %call33 = call i8* @PushShortPixel(i32 %41, i8* %42, i16* %pixel20), !dbg !3501
  store i8* %call33, i8** %p.addr, align 8, !dbg !3502
  %43 = load i16, i16* %pixel20, align 2, !dbg !3503
  %call34 = call float @HalfToSinglePrecision(i16 zeroext %43), !dbg !3503
  %mul35 = fmul float 6.553500e+04, %call34, !dbg !3503
  %call36 = call zeroext i16 @ClampToQuantum(float %mul35), !dbg !3503
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3503
  %green37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 1, !dbg !3503
  store i16 %call36, i16* %green37, align 2, !dbg !3503
  %45 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3504
  %endian38 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %45, i32 0, i32 13, !dbg !3505
  %46 = load i32, i32* %endian38, align 8, !dbg !3505
  %47 = load i8*, i8** %p.addr, align 8, !dbg !3506
  %call39 = call i8* @PushShortPixel(i32 %46, i8* %47, i16* %pixel20), !dbg !3507
  store i8* %call39, i8** %p.addr, align 8, !dbg !3508
  %48 = load i16, i16* %pixel20, align 2, !dbg !3509
  %call40 = call float @HalfToSinglePrecision(i16 zeroext %48), !dbg !3509
  %mul41 = fmul float 6.553500e+04, %call40, !dbg !3509
  %call42 = call zeroext i16 @ClampToQuantum(float %mul41), !dbg !3509
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3509
  %blue43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 0, !dbg !3509
  store i16 %call42, i16* %blue43, align 2, !dbg !3509
  %50 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3510
  %endian44 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %50, i32 0, i32 13, !dbg !3511
  %51 = load i32, i32* %endian44, align 8, !dbg !3511
  %52 = load i8*, i8** %p.addr, align 8, !dbg !3512
  %call45 = call i8* @PushShortPixel(i32 %51, i8* %52, i16* %pixel20), !dbg !3513
  store i8* %call45, i8** %p.addr, align 8, !dbg !3514
  %53 = load i16*, i16** %indexes.addr, align 8, !dbg !3515
  %54 = load i64, i64* %x, align 8, !dbg !3515
  %add.ptr46 = getelementptr inbounds i16, i16* %53, i64 %54, !dbg !3515
  %cmp47 = icmp ne i16* %add.ptr46, null, !dbg !3515
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3518

if.then49:                                        ; preds = %for.body27
  %55 = load i16, i16* %pixel20, align 2, !dbg !3515
  %call50 = call float @HalfToSinglePrecision(i16 zeroext %55), !dbg !3515
  %mul51 = fmul float 6.553500e+04, %call50, !dbg !3515
  %call52 = call zeroext i16 @ClampToQuantum(float %mul51), !dbg !3515
  %56 = load i16*, i16** %indexes.addr, align 8, !dbg !3515
  %57 = load i64, i64* %x, align 8, !dbg !3515
  %add.ptr53 = getelementptr inbounds i16, i16* %56, i64 %57, !dbg !3515
  store i16 %call52, i16* %add.ptr53, align 2, !dbg !3515
  br label %if.end54, !dbg !3515

if.end54:                                         ; preds = %if.then49, %for.body27
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3519
  %endian55 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 13, !dbg !3520
  %59 = load i32, i32* %endian55, align 8, !dbg !3520
  %60 = load i8*, i8** %p.addr, align 8, !dbg !3521
  %call56 = call i8* @PushShortPixel(i32 %59, i8* %60, i16* %pixel20), !dbg !3522
  store i8* %call56, i8** %p.addr, align 8, !dbg !3523
  %61 = load i16, i16* %pixel20, align 2, !dbg !3524
  %call57 = call float @HalfToSinglePrecision(i16 zeroext %61), !dbg !3524
  %mul58 = fmul float 6.553500e+04, %call57, !dbg !3524
  %call59 = call zeroext i16 @ClampToQuantum(float %mul58), !dbg !3524
  %conv60 = zext i16 %call59 to i32, !dbg !3524
  %sub61 = sub nsw i32 65535, %conv60, !dbg !3524
  %conv62 = trunc i32 %sub61 to i16, !dbg !3524
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3524
  %opacity63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 3, !dbg !3524
  store i16 %conv62, i16* %opacity63, align 2, !dbg !3524
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3525
  %pad64 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 6, !dbg !3526
  %64 = load i64, i64* %pad64, align 8, !dbg !3526
  %65 = load i8*, i8** %p.addr, align 8, !dbg !3527
  %add.ptr65 = getelementptr inbounds i8, i8* %65, i64 %64, !dbg !3527
  store i8* %add.ptr65, i8** %p.addr, align 8, !dbg !3527
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3528
  %incdec.ptr66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 1, !dbg !3528
  store %struct._PixelPacket* %incdec.ptr66, %struct._PixelPacket** %q.addr, align 8, !dbg !3528
  br label %for.inc67, !dbg !3529

for.inc67:                                        ; preds = %if.end54
  %67 = load i64, i64* %x, align 8, !dbg !3530
  %inc68 = add nsw i64 %67, 1, !dbg !3530
  store i64 %inc68, i64* %x, align 8, !dbg !3530
  br label %for.cond24, !dbg !3531, !llvm.loop !3532

for.end69:                                        ; preds = %for.cond24
  br label %sw.epilog, !dbg !3534

if.end70:                                         ; preds = %sw.bb19
  store i64 0, i64* %x, align 8, !dbg !3535
  br label %for.cond71, !dbg !3537

for.cond71:                                       ; preds = %for.inc106, %if.end70
  %68 = load i64, i64* %x, align 8, !dbg !3538
  %69 = load i64, i64* %number_pixels.addr, align 8, !dbg !3540
  %cmp72 = icmp slt i64 %68, %69, !dbg !3541
  br i1 %cmp72, label %for.body74, label %for.end108, !dbg !3542

for.body74:                                       ; preds = %for.cond71
  %70 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3543
  %endian75 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %70, i32 0, i32 13, !dbg !3545
  %71 = load i32, i32* %endian75, align 8, !dbg !3545
  %72 = load i8*, i8** %p.addr, align 8, !dbg !3546
  %call76 = call i8* @PushShortPixel(i32 %71, i8* %72, i16* %pixel20), !dbg !3547
  store i8* %call76, i8** %p.addr, align 8, !dbg !3548
  %73 = load i16, i16* %pixel20, align 2, !dbg !3549
  %call77 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %73), !dbg !3549
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3549
  %red78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 2, !dbg !3549
  store i16 %call77, i16* %red78, align 2, !dbg !3549
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3550
  %endian79 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %75, i32 0, i32 13, !dbg !3551
  %76 = load i32, i32* %endian79, align 8, !dbg !3551
  %77 = load i8*, i8** %p.addr, align 8, !dbg !3552
  %call80 = call i8* @PushShortPixel(i32 %76, i8* %77, i16* %pixel20), !dbg !3553
  store i8* %call80, i8** %p.addr, align 8, !dbg !3554
  %78 = load i16, i16* %pixel20, align 2, !dbg !3555
  %call81 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %78), !dbg !3555
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3555
  %green82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 1, !dbg !3555
  store i16 %call81, i16* %green82, align 2, !dbg !3555
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3556
  %endian83 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %80, i32 0, i32 13, !dbg !3557
  %81 = load i32, i32* %endian83, align 8, !dbg !3557
  %82 = load i8*, i8** %p.addr, align 8, !dbg !3558
  %call84 = call i8* @PushShortPixel(i32 %81, i8* %82, i16* %pixel20), !dbg !3559
  store i8* %call84, i8** %p.addr, align 8, !dbg !3560
  %83 = load i16, i16* %pixel20, align 2, !dbg !3561
  %call85 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %83), !dbg !3561
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3561
  %blue86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 0, !dbg !3561
  store i16 %call85, i16* %blue86, align 2, !dbg !3561
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3562
  %endian87 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 13, !dbg !3563
  %86 = load i32, i32* %endian87, align 8, !dbg !3563
  %87 = load i8*, i8** %p.addr, align 8, !dbg !3564
  %call88 = call i8* @PushShortPixel(i32 %86, i8* %87, i16* %pixel20), !dbg !3565
  store i8* %call88, i8** %p.addr, align 8, !dbg !3566
  %88 = load i16*, i16** %indexes.addr, align 8, !dbg !3567
  %89 = load i64, i64* %x, align 8, !dbg !3567
  %add.ptr89 = getelementptr inbounds i16, i16* %88, i64 %89, !dbg !3567
  %cmp90 = icmp ne i16* %add.ptr89, null, !dbg !3567
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !3570

if.then92:                                        ; preds = %for.body74
  %90 = load i16, i16* %pixel20, align 2, !dbg !3567
  %call93 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %90), !dbg !3567
  %91 = load i16*, i16** %indexes.addr, align 8, !dbg !3567
  %92 = load i64, i64* %x, align 8, !dbg !3567
  %add.ptr94 = getelementptr inbounds i16, i16* %91, i64 %92, !dbg !3567
  store i16 %call93, i16* %add.ptr94, align 2, !dbg !3567
  br label %if.end95, !dbg !3567

if.end95:                                         ; preds = %if.then92, %for.body74
  %93 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3571
  %endian96 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %93, i32 0, i32 13, !dbg !3572
  %94 = load i32, i32* %endian96, align 8, !dbg !3572
  %95 = load i8*, i8** %p.addr, align 8, !dbg !3573
  %call97 = call i8* @PushShortPixel(i32 %94, i8* %95, i16* %pixel20), !dbg !3574
  store i8* %call97, i8** %p.addr, align 8, !dbg !3575
  %96 = load i16, i16* %pixel20, align 2, !dbg !3576
  %call98 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %96), !dbg !3576
  %conv99 = zext i16 %call98 to i32, !dbg !3576
  %sub100 = sub nsw i32 65535, %conv99, !dbg !3576
  %conv101 = trunc i32 %sub100 to i16, !dbg !3576
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3576
  %opacity102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 3, !dbg !3576
  store i16 %conv101, i16* %opacity102, align 2, !dbg !3576
  %98 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3577
  %pad103 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %98, i32 0, i32 6, !dbg !3578
  %99 = load i64, i64* %pad103, align 8, !dbg !3578
  %100 = load i8*, i8** %p.addr, align 8, !dbg !3579
  %add.ptr104 = getelementptr inbounds i8, i8* %100, i64 %99, !dbg !3579
  store i8* %add.ptr104, i8** %p.addr, align 8, !dbg !3579
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3580
  %incdec.ptr105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 1, !dbg !3580
  store %struct._PixelPacket* %incdec.ptr105, %struct._PixelPacket** %q.addr, align 8, !dbg !3580
  br label %for.inc106, !dbg !3581

for.inc106:                                       ; preds = %if.end95
  %102 = load i64, i64* %x, align 8, !dbg !3582
  %inc107 = add nsw i64 %102, 1, !dbg !3582
  store i64 %inc107, i64* %x, align 8, !dbg !3582
  br label %for.cond71, !dbg !3583, !llvm.loop !3584

for.end108:                                       ; preds = %for.cond71
  br label %sw.epilog, !dbg !3586

sw.bb109:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel110, metadata !3587, metadata !DIExpression()), !dbg !3589
  %103 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3590
  %format111 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %103, i32 0, i32 2, !dbg !3592
  %104 = load i32, i32* %format111, align 8, !dbg !3592
  %cmp112 = icmp eq i32 %104, 1, !dbg !3593
  br i1 %cmp112, label %if.then114, label %if.end149, !dbg !3594

if.then114:                                       ; preds = %sw.bb109
  call void @llvm.dbg.declare(metadata float* %pixel115, metadata !3595, metadata !DIExpression()), !dbg !3597
  store i64 0, i64* %x, align 8, !dbg !3598
  br label %for.cond116, !dbg !3600

for.cond116:                                      ; preds = %for.inc146, %if.then114
  %105 = load i64, i64* %x, align 8, !dbg !3601
  %106 = load i64, i64* %number_pixels.addr, align 8, !dbg !3603
  %cmp117 = icmp slt i64 %105, %106, !dbg !3604
  br i1 %cmp117, label %for.body119, label %for.end148, !dbg !3605

for.body119:                                      ; preds = %for.cond116
  %107 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3606
  %108 = load i8*, i8** %p.addr, align 8, !dbg !3608
  %call120 = call i8* @PushFloatPixel(%struct._QuantumInfo* %107, i8* %108, float* %pixel115), !dbg !3609
  store i8* %call120, i8** %p.addr, align 8, !dbg !3610
  %109 = load float, float* %pixel115, align 4, !dbg !3611
  %call121 = call zeroext i16 @ClampToQuantum(float %109), !dbg !3611
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3611
  %red122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 2, !dbg !3611
  store i16 %call121, i16* %red122, align 2, !dbg !3611
  %111 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3612
  %112 = load i8*, i8** %p.addr, align 8, !dbg !3613
  %call123 = call i8* @PushFloatPixel(%struct._QuantumInfo* %111, i8* %112, float* %pixel115), !dbg !3614
  store i8* %call123, i8** %p.addr, align 8, !dbg !3615
  %113 = load float, float* %pixel115, align 4, !dbg !3616
  %call124 = call zeroext i16 @ClampToQuantum(float %113), !dbg !3616
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3616
  %green125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 1, !dbg !3616
  store i16 %call124, i16* %green125, align 2, !dbg !3616
  %115 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3617
  %116 = load i8*, i8** %p.addr, align 8, !dbg !3618
  %call126 = call i8* @PushFloatPixel(%struct._QuantumInfo* %115, i8* %116, float* %pixel115), !dbg !3619
  store i8* %call126, i8** %p.addr, align 8, !dbg !3620
  %117 = load float, float* %pixel115, align 4, !dbg !3621
  %call127 = call zeroext i16 @ClampToQuantum(float %117), !dbg !3621
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3621
  %blue128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 0, !dbg !3621
  store i16 %call127, i16* %blue128, align 2, !dbg !3621
  %119 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3622
  %120 = load i8*, i8** %p.addr, align 8, !dbg !3623
  %call129 = call i8* @PushFloatPixel(%struct._QuantumInfo* %119, i8* %120, float* %pixel115), !dbg !3624
  store i8* %call129, i8** %p.addr, align 8, !dbg !3625
  %121 = load i16*, i16** %indexes.addr, align 8, !dbg !3626
  %122 = load i64, i64* %x, align 8, !dbg !3626
  %add.ptr130 = getelementptr inbounds i16, i16* %121, i64 %122, !dbg !3626
  %cmp131 = icmp ne i16* %add.ptr130, null, !dbg !3626
  br i1 %cmp131, label %if.then133, label %if.end136, !dbg !3629

if.then133:                                       ; preds = %for.body119
  %123 = load float, float* %pixel115, align 4, !dbg !3626
  %call134 = call zeroext i16 @ClampToQuantum(float %123), !dbg !3626
  %124 = load i16*, i16** %indexes.addr, align 8, !dbg !3626
  %125 = load i64, i64* %x, align 8, !dbg !3626
  %add.ptr135 = getelementptr inbounds i16, i16* %124, i64 %125, !dbg !3626
  store i16 %call134, i16* %add.ptr135, align 2, !dbg !3626
  br label %if.end136, !dbg !3626

if.end136:                                        ; preds = %if.then133, %for.body119
  %126 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3630
  %127 = load i8*, i8** %p.addr, align 8, !dbg !3631
  %call137 = call i8* @PushFloatPixel(%struct._QuantumInfo* %126, i8* %127, float* %pixel115), !dbg !3632
  store i8* %call137, i8** %p.addr, align 8, !dbg !3633
  %128 = load float, float* %pixel115, align 4, !dbg !3634
  %call138 = call zeroext i16 @ClampToQuantum(float %128), !dbg !3634
  %conv139 = zext i16 %call138 to i32, !dbg !3634
  %sub140 = sub nsw i32 65535, %conv139, !dbg !3634
  %conv141 = trunc i32 %sub140 to i16, !dbg !3634
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3634
  %opacity142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 3, !dbg !3634
  store i16 %conv141, i16* %opacity142, align 2, !dbg !3634
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3635
  %pad143 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %130, i32 0, i32 6, !dbg !3636
  %131 = load i64, i64* %pad143, align 8, !dbg !3636
  %132 = load i8*, i8** %p.addr, align 8, !dbg !3637
  %add.ptr144 = getelementptr inbounds i8, i8* %132, i64 %131, !dbg !3637
  store i8* %add.ptr144, i8** %p.addr, align 8, !dbg !3637
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3638
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 1, !dbg !3638
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %q.addr, align 8, !dbg !3638
  br label %for.inc146, !dbg !3639

for.inc146:                                       ; preds = %if.end136
  %134 = load i64, i64* %x, align 8, !dbg !3640
  %inc147 = add nsw i64 %134, 1, !dbg !3640
  store i64 %inc147, i64* %x, align 8, !dbg !3640
  br label %for.cond116, !dbg !3641, !llvm.loop !3642

for.end148:                                       ; preds = %for.cond116
  br label %sw.epilog, !dbg !3644

if.end149:                                        ; preds = %sw.bb109
  store i64 0, i64* %x, align 8, !dbg !3645
  br label %for.cond150, !dbg !3647

for.cond150:                                      ; preds = %for.inc185, %if.end149
  %135 = load i64, i64* %x, align 8, !dbg !3648
  %136 = load i64, i64* %number_pixels.addr, align 8, !dbg !3650
  %cmp151 = icmp slt i64 %135, %136, !dbg !3651
  br i1 %cmp151, label %for.body153, label %for.end187, !dbg !3652

for.body153:                                      ; preds = %for.cond150
  %137 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3653
  %endian154 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %137, i32 0, i32 13, !dbg !3655
  %138 = load i32, i32* %endian154, align 8, !dbg !3655
  %139 = load i8*, i8** %p.addr, align 8, !dbg !3656
  %call155 = call i8* @PushLongPixel(i32 %138, i8* %139, i32* %pixel110), !dbg !3657
  store i8* %call155, i8** %p.addr, align 8, !dbg !3658
  %140 = load i32, i32* %pixel110, align 4, !dbg !3659
  %call156 = call zeroext i16 @ScaleLongToQuantum(i32 %140), !dbg !3659
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3659
  %red157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 2, !dbg !3659
  store i16 %call156, i16* %red157, align 2, !dbg !3659
  %142 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3660
  %endian158 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %142, i32 0, i32 13, !dbg !3661
  %143 = load i32, i32* %endian158, align 8, !dbg !3661
  %144 = load i8*, i8** %p.addr, align 8, !dbg !3662
  %call159 = call i8* @PushLongPixel(i32 %143, i8* %144, i32* %pixel110), !dbg !3663
  store i8* %call159, i8** %p.addr, align 8, !dbg !3664
  %145 = load i32, i32* %pixel110, align 4, !dbg !3665
  %call160 = call zeroext i16 @ScaleLongToQuantum(i32 %145), !dbg !3665
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3665
  %green161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 0, i32 1, !dbg !3665
  store i16 %call160, i16* %green161, align 2, !dbg !3665
  %147 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3666
  %endian162 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %147, i32 0, i32 13, !dbg !3667
  %148 = load i32, i32* %endian162, align 8, !dbg !3667
  %149 = load i8*, i8** %p.addr, align 8, !dbg !3668
  %call163 = call i8* @PushLongPixel(i32 %148, i8* %149, i32* %pixel110), !dbg !3669
  store i8* %call163, i8** %p.addr, align 8, !dbg !3670
  %150 = load i32, i32* %pixel110, align 4, !dbg !3671
  %call164 = call zeroext i16 @ScaleLongToQuantum(i32 %150), !dbg !3671
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3671
  %blue165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i32 0, i32 0, !dbg !3671
  store i16 %call164, i16* %blue165, align 2, !dbg !3671
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3672
  %endian166 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 13, !dbg !3673
  %153 = load i32, i32* %endian166, align 8, !dbg !3673
  %154 = load i8*, i8** %p.addr, align 8, !dbg !3674
  %call167 = call i8* @PushLongPixel(i32 %153, i8* %154, i32* %pixel110), !dbg !3675
  store i8* %call167, i8** %p.addr, align 8, !dbg !3676
  %155 = load i16*, i16** %indexes.addr, align 8, !dbg !3677
  %156 = load i64, i64* %x, align 8, !dbg !3677
  %add.ptr168 = getelementptr inbounds i16, i16* %155, i64 %156, !dbg !3677
  %cmp169 = icmp ne i16* %add.ptr168, null, !dbg !3677
  br i1 %cmp169, label %if.then171, label %if.end174, !dbg !3680

if.then171:                                       ; preds = %for.body153
  %157 = load i32, i32* %pixel110, align 4, !dbg !3677
  %call172 = call zeroext i16 @ScaleLongToQuantum(i32 %157), !dbg !3677
  %158 = load i16*, i16** %indexes.addr, align 8, !dbg !3677
  %159 = load i64, i64* %x, align 8, !dbg !3677
  %add.ptr173 = getelementptr inbounds i16, i16* %158, i64 %159, !dbg !3677
  store i16 %call172, i16* %add.ptr173, align 2, !dbg !3677
  br label %if.end174, !dbg !3677

if.end174:                                        ; preds = %if.then171, %for.body153
  %160 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3681
  %endian175 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %160, i32 0, i32 13, !dbg !3682
  %161 = load i32, i32* %endian175, align 8, !dbg !3682
  %162 = load i8*, i8** %p.addr, align 8, !dbg !3683
  %call176 = call i8* @PushLongPixel(i32 %161, i8* %162, i32* %pixel110), !dbg !3684
  store i8* %call176, i8** %p.addr, align 8, !dbg !3685
  %163 = load i32, i32* %pixel110, align 4, !dbg !3686
  %call177 = call zeroext i16 @ScaleLongToQuantum(i32 %163), !dbg !3686
  %conv178 = zext i16 %call177 to i32, !dbg !3686
  %sub179 = sub nsw i32 65535, %conv178, !dbg !3686
  %conv180 = trunc i32 %sub179 to i16, !dbg !3686
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3686
  %opacity181 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %164, i32 0, i32 3, !dbg !3686
  store i16 %conv180, i16* %opacity181, align 2, !dbg !3686
  %165 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3687
  %pad182 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %165, i32 0, i32 6, !dbg !3688
  %166 = load i64, i64* %pad182, align 8, !dbg !3688
  %167 = load i8*, i8** %p.addr, align 8, !dbg !3689
  %add.ptr183 = getelementptr inbounds i8, i8* %167, i64 %166, !dbg !3689
  store i8* %add.ptr183, i8** %p.addr, align 8, !dbg !3689
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3690
  %incdec.ptr184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 1, !dbg !3690
  store %struct._PixelPacket* %incdec.ptr184, %struct._PixelPacket** %q.addr, align 8, !dbg !3690
  br label %for.inc185, !dbg !3691

for.inc185:                                       ; preds = %if.end174
  %169 = load i64, i64* %x, align 8, !dbg !3692
  %inc186 = add nsw i64 %169, 1, !dbg !3692
  store i64 %inc186, i64* %x, align 8, !dbg !3692
  br label %for.cond150, !dbg !3693, !llvm.loop !3694

for.end187:                                       ; preds = %for.cond150
  br label %sw.epilog, !dbg !3696

sw.bb188:                                         ; preds = %if.end
  %170 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3697
  %format189 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %170, i32 0, i32 2, !dbg !3700
  %171 = load i32, i32* %format189, align 8, !dbg !3700
  %cmp190 = icmp eq i32 %171, 1, !dbg !3701
  br i1 %cmp190, label %if.then192, label %if.end233, !dbg !3702

if.then192:                                       ; preds = %sw.bb188
  call void @llvm.dbg.declare(metadata double* %pixel193, metadata !3703, metadata !DIExpression()), !dbg !3705
  store i64 0, i64* %x, align 8, !dbg !3706
  br label %for.cond194, !dbg !3708

for.cond194:                                      ; preds = %for.inc230, %if.then192
  %172 = load i64, i64* %x, align 8, !dbg !3709
  %173 = load i64, i64* %number_pixels.addr, align 8, !dbg !3711
  %cmp195 = icmp slt i64 %172, %173, !dbg !3712
  br i1 %cmp195, label %for.body197, label %for.end232, !dbg !3713

for.body197:                                      ; preds = %for.cond194
  %174 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3714
  %175 = load i8*, i8** %p.addr, align 8, !dbg !3716
  %call198 = call i8* @PushDoublePixel(%struct._QuantumInfo* %174, i8* %175, double* %pixel193), !dbg !3717
  store i8* %call198, i8** %p.addr, align 8, !dbg !3718
  %176 = load double, double* %pixel193, align 8, !dbg !3719
  %conv199 = fptrunc double %176 to float, !dbg !3719
  %call200 = call zeroext i16 @ClampToQuantum(float %conv199), !dbg !3719
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3719
  %red201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 0, i32 2, !dbg !3719
  store i16 %call200, i16* %red201, align 2, !dbg !3719
  %178 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3720
  %179 = load i8*, i8** %p.addr, align 8, !dbg !3721
  %call202 = call i8* @PushDoublePixel(%struct._QuantumInfo* %178, i8* %179, double* %pixel193), !dbg !3722
  store i8* %call202, i8** %p.addr, align 8, !dbg !3723
  %180 = load double, double* %pixel193, align 8, !dbg !3724
  %conv203 = fptrunc double %180 to float, !dbg !3724
  %call204 = call zeroext i16 @ClampToQuantum(float %conv203), !dbg !3724
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3724
  %green205 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 0, i32 1, !dbg !3724
  store i16 %call204, i16* %green205, align 2, !dbg !3724
  %182 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3725
  %183 = load i8*, i8** %p.addr, align 8, !dbg !3726
  %call206 = call i8* @PushDoublePixel(%struct._QuantumInfo* %182, i8* %183, double* %pixel193), !dbg !3727
  store i8* %call206, i8** %p.addr, align 8, !dbg !3728
  %184 = load double, double* %pixel193, align 8, !dbg !3729
  %conv207 = fptrunc double %184 to float, !dbg !3729
  %call208 = call zeroext i16 @ClampToQuantum(float %conv207), !dbg !3729
  %185 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3729
  %blue209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %185, i32 0, i32 0, !dbg !3729
  store i16 %call208, i16* %blue209, align 2, !dbg !3729
  %186 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3730
  %187 = load i8*, i8** %p.addr, align 8, !dbg !3731
  %call210 = call i8* @PushDoublePixel(%struct._QuantumInfo* %186, i8* %187, double* %pixel193), !dbg !3732
  store i8* %call210, i8** %p.addr, align 8, !dbg !3733
  %188 = load i16*, i16** %indexes.addr, align 8, !dbg !3734
  %189 = load i64, i64* %x, align 8, !dbg !3734
  %add.ptr211 = getelementptr inbounds i16, i16* %188, i64 %189, !dbg !3734
  %cmp212 = icmp ne i16* %add.ptr211, null, !dbg !3734
  br i1 %cmp212, label %if.then214, label %if.end218, !dbg !3737

if.then214:                                       ; preds = %for.body197
  %190 = load double, double* %pixel193, align 8, !dbg !3734
  %conv215 = fptrunc double %190 to float, !dbg !3734
  %call216 = call zeroext i16 @ClampToQuantum(float %conv215), !dbg !3734
  %191 = load i16*, i16** %indexes.addr, align 8, !dbg !3734
  %192 = load i64, i64* %x, align 8, !dbg !3734
  %add.ptr217 = getelementptr inbounds i16, i16* %191, i64 %192, !dbg !3734
  store i16 %call216, i16* %add.ptr217, align 2, !dbg !3734
  br label %if.end218, !dbg !3734

if.end218:                                        ; preds = %if.then214, %for.body197
  %193 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3738
  %194 = load i8*, i8** %p.addr, align 8, !dbg !3739
  %call219 = call i8* @PushDoublePixel(%struct._QuantumInfo* %193, i8* %194, double* %pixel193), !dbg !3740
  store i8* %call219, i8** %p.addr, align 8, !dbg !3741
  %195 = load double, double* %pixel193, align 8, !dbg !3742
  %conv220 = fptrunc double %195 to float, !dbg !3742
  %call221 = call zeroext i16 @ClampToQuantum(float %conv220), !dbg !3742
  %conv222 = zext i16 %call221 to i32, !dbg !3742
  %sub223 = sub nsw i32 65535, %conv222, !dbg !3742
  %conv224 = trunc i32 %sub223 to i16, !dbg !3742
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3742
  %opacity225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 3, !dbg !3742
  store i16 %conv224, i16* %opacity225, align 2, !dbg !3742
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3743
  %198 = load i8*, i8** %p.addr, align 8, !dbg !3744
  %call226 = call i8* @PushDoublePixel(%struct._QuantumInfo* %197, i8* %198, double* %pixel193), !dbg !3745
  store i8* %call226, i8** %p.addr, align 8, !dbg !3746
  %199 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3747
  %pad227 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %199, i32 0, i32 6, !dbg !3748
  %200 = load i64, i64* %pad227, align 8, !dbg !3748
  %201 = load i8*, i8** %p.addr, align 8, !dbg !3749
  %add.ptr228 = getelementptr inbounds i8, i8* %201, i64 %200, !dbg !3749
  store i8* %add.ptr228, i8** %p.addr, align 8, !dbg !3749
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3750
  %incdec.ptr229 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 1, !dbg !3750
  store %struct._PixelPacket* %incdec.ptr229, %struct._PixelPacket** %q.addr, align 8, !dbg !3750
  br label %for.inc230, !dbg !3751

for.inc230:                                       ; preds = %if.end218
  %203 = load i64, i64* %x, align 8, !dbg !3752
  %inc231 = add nsw i64 %203, 1, !dbg !3752
  store i64 %inc231, i64* %x, align 8, !dbg !3752
  br label %for.cond194, !dbg !3753, !llvm.loop !3754

for.end232:                                       ; preds = %for.cond194
  br label %sw.epilog, !dbg !3756

if.end233:                                        ; preds = %sw.bb188
  br label %sw.default, !dbg !3757

sw.default:                                       ; preds = %if.end, %if.end233
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3758
  %depth234 = getelementptr inbounds %struct._Image, %struct._Image* %204, i32 0, i32 9, !dbg !3760
  %205 = load i64, i64* %depth234, align 8, !dbg !3760
  %call235 = call i64 @GetQuantumRange(i64 %205), !dbg !3761
  store i64 %call235, i64* %range, align 8, !dbg !3762
  store i64 0, i64* %x, align 8, !dbg !3763
  br label %for.cond236, !dbg !3765

for.cond236:                                      ; preds = %for.inc269, %sw.default
  %206 = load i64, i64* %x, align 8, !dbg !3766
  %207 = load i64, i64* %number_pixels.addr, align 8, !dbg !3768
  %cmp237 = icmp slt i64 %206, %207, !dbg !3769
  br i1 %cmp237, label %for.body239, label %for.end271, !dbg !3770

for.body239:                                      ; preds = %for.cond236
  %208 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3771
  %209 = load i8*, i8** %p.addr, align 8, !dbg !3773
  %call240 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %208, i8* %209, i32* %pixel), !dbg !3774
  store i8* %call240, i8** %p.addr, align 8, !dbg !3775
  %210 = load i32, i32* %pixel, align 4, !dbg !3776
  %conv241 = zext i32 %210 to i64, !dbg !3776
  %211 = load i64, i64* %range, align 8, !dbg !3776
  %call242 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv241, i64 %211), !dbg !3776
  %212 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3776
  %red243 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %212, i32 0, i32 2, !dbg !3776
  store i16 %call242, i16* %red243, align 2, !dbg !3776
  %213 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3777
  %214 = load i8*, i8** %p.addr, align 8, !dbg !3778
  %call244 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %213, i8* %214, i32* %pixel), !dbg !3779
  store i8* %call244, i8** %p.addr, align 8, !dbg !3780
  %215 = load i32, i32* %pixel, align 4, !dbg !3781
  %conv245 = zext i32 %215 to i64, !dbg !3781
  %216 = load i64, i64* %range, align 8, !dbg !3781
  %call246 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv245, i64 %216), !dbg !3781
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3781
  %green247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 1, !dbg !3781
  store i16 %call246, i16* %green247, align 2, !dbg !3781
  %218 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3782
  %219 = load i8*, i8** %p.addr, align 8, !dbg !3783
  %call248 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %218, i8* %219, i32* %pixel), !dbg !3784
  store i8* %call248, i8** %p.addr, align 8, !dbg !3785
  %220 = load i32, i32* %pixel, align 4, !dbg !3786
  %conv249 = zext i32 %220 to i64, !dbg !3786
  %221 = load i64, i64* %range, align 8, !dbg !3786
  %call250 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv249, i64 %221), !dbg !3786
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3786
  %blue251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 0, !dbg !3786
  store i16 %call250, i16* %blue251, align 2, !dbg !3786
  %223 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3787
  %224 = load i8*, i8** %p.addr, align 8, !dbg !3788
  %call252 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %223, i8* %224, i32* %pixel), !dbg !3789
  store i8* %call252, i8** %p.addr, align 8, !dbg !3790
  %225 = load i16*, i16** %indexes.addr, align 8, !dbg !3791
  %226 = load i64, i64* %x, align 8, !dbg !3791
  %add.ptr253 = getelementptr inbounds i16, i16* %225, i64 %226, !dbg !3791
  %cmp254 = icmp ne i16* %add.ptr253, null, !dbg !3791
  br i1 %cmp254, label %if.then256, label %if.end260, !dbg !3794

if.then256:                                       ; preds = %for.body239
  %227 = load i32, i32* %pixel, align 4, !dbg !3791
  %conv257 = zext i32 %227 to i64, !dbg !3791
  %228 = load i64, i64* %range, align 8, !dbg !3791
  %call258 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv257, i64 %228), !dbg !3791
  %229 = load i16*, i16** %indexes.addr, align 8, !dbg !3791
  %230 = load i64, i64* %x, align 8, !dbg !3791
  %add.ptr259 = getelementptr inbounds i16, i16* %229, i64 %230, !dbg !3791
  store i16 %call258, i16* %add.ptr259, align 2, !dbg !3791
  br label %if.end260, !dbg !3791

if.end260:                                        ; preds = %if.then256, %for.body239
  %231 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3795
  %232 = load i8*, i8** %p.addr, align 8, !dbg !3796
  %call261 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %231, i8* %232, i32* %pixel), !dbg !3797
  store i8* %call261, i8** %p.addr, align 8, !dbg !3798
  %233 = load i32, i32* %pixel, align 4, !dbg !3799
  %conv262 = zext i32 %233 to i64, !dbg !3799
  %234 = load i64, i64* %range, align 8, !dbg !3799
  %call263 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv262, i64 %234), !dbg !3799
  %conv264 = zext i16 %call263 to i32, !dbg !3799
  %sub265 = sub nsw i32 65535, %conv264, !dbg !3799
  %conv266 = trunc i32 %sub265 to i16, !dbg !3799
  %235 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3799
  %opacity267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %235, i32 0, i32 3, !dbg !3799
  store i16 %conv266, i16* %opacity267, align 2, !dbg !3799
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3800
  %incdec.ptr268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 1, !dbg !3800
  store %struct._PixelPacket* %incdec.ptr268, %struct._PixelPacket** %q.addr, align 8, !dbg !3800
  br label %for.inc269, !dbg !3801

for.inc269:                                       ; preds = %if.end260
  %237 = load i64, i64* %x, align 8, !dbg !3802
  %inc270 = add nsw i64 %237, 1, !dbg !3802
  store i64 %inc270, i64* %x, align 8, !dbg !3802
  br label %for.cond236, !dbg !3803, !llvm.loop !3804

for.end271:                                       ; preds = %for.cond236
  br label %sw.epilog, !dbg !3806

sw.epilog:                                        ; preds = %if.then, %for.end271, %for.end232, %for.end187, %for.end148, %for.end108, %for.end69, %for.end
  ret void, !dbg !3807
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportGrayQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !3808 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %black = alloca i16, align 2
  %white = alloca i16, align 2
  %pixel49 = alloca i8, align 1
  %pixel103 = alloca i8, align 1
  %pixel331 = alloca i16, align 2
  %pixel413 = alloca i16, align 2
  %pixel482 = alloca i32, align 4
  %pixel487 = alloca float, align 4
  %pixel529 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !3811, metadata !DIExpression()), !dbg !3812
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !3813, metadata !DIExpression()), !dbg !3814
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !3815, metadata !DIExpression()), !dbg !3816
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3817, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3819, metadata !DIExpression()), !dbg !3820
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3821, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !3823, metadata !DIExpression()), !dbg !3824
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !3825, metadata !DIExpression()), !dbg !3826
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3827
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !3828
  %1 = load i64, i64* %depth, align 8, !dbg !3828
  switch i64 %1, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb48
    i64 8, label %sw.bb102
    i64 10, label %sw.bb145
    i64 12, label %sw.bb324
    i64 16, label %sw.bb412
    i64 32, label %sw.bb481
    i64 64, label %sw.bb524
  ], !dbg !3829

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %black, metadata !3830, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.declare(metadata i16* %white, metadata !3834, metadata !DIExpression()), !dbg !3835
  store i16 0, i16* %black, align 2, !dbg !3836
  store i16 -1, i16* %white, align 2, !dbg !3837
  %2 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3838
  %min_is_white = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %2, i32 0, i32 7, !dbg !3840
  %3 = load i32, i32* %min_is_white, align 8, !dbg !3840
  %cmp = icmp ne i32 %3, 0, !dbg !3841
  br i1 %cmp, label %if.then, label %if.end, !dbg !3842

if.then:                                          ; preds = %sw.bb
  store i16 -1, i16* %black, align 2, !dbg !3843
  store i16 0, i16* %white, align 2, !dbg !3845
  br label %if.end, !dbg !3846

if.end:                                           ; preds = %if.then, %sw.bb
  store i64 0, i64* %x, align 8, !dbg !3847
  br label %for.cond, !dbg !3849

for.cond:                                         ; preds = %for.inc14, %if.end
  %4 = load i64, i64* %x, align 8, !dbg !3850
  %5 = load i64, i64* %number_pixels.addr, align 8, !dbg !3852
  %sub = sub nsw i64 %5, 7, !dbg !3853
  %cmp1 = icmp slt i64 %4, %sub, !dbg !3854
  br i1 %cmp1, label %for.body, label %for.end15, !dbg !3855

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !3856
  br label %for.cond2, !dbg !3859

for.cond2:                                        ; preds = %for.inc, %for.body
  %6 = load i64, i64* %bit, align 8, !dbg !3860
  %cmp3 = icmp slt i64 %6, 8, !dbg !3862
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !3863

for.body4:                                        ; preds = %for.cond2
  %7 = load i8*, i8** %p.addr, align 8, !dbg !3864
  %8 = load i8, i8* %7, align 1, !dbg !3864
  %conv = zext i8 %8 to i32, !dbg !3864
  %9 = load i64, i64* %bit, align 8, !dbg !3864
  %sub5 = sub nsw i64 7, %9, !dbg !3864
  %sh_prom = trunc i64 %sub5 to i32, !dbg !3864
  %shl = shl i32 1, %sh_prom, !dbg !3864
  %and = and i32 %conv, %shl, !dbg !3864
  %cmp6 = icmp eq i32 %and, 0, !dbg !3864
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !3864

cond.true:                                        ; preds = %for.body4
  %10 = load i16, i16* %black, align 2, !dbg !3864
  %conv8 = zext i16 %10 to i32, !dbg !3864
  br label %cond.end, !dbg !3864

cond.false:                                       ; preds = %for.body4
  %11 = load i16, i16* %white, align 2, !dbg !3864
  %conv9 = zext i16 %11 to i32, !dbg !3864
  br label %cond.end, !dbg !3864

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv8, %cond.true ], [ %conv9, %cond.false ], !dbg !3864
  %conv10 = trunc i32 %cond to i16, !dbg !3864
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3864
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 2, !dbg !3864
  store i16 %conv10, i16* %red, align 2, !dbg !3864
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3866
  %red11 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 2, !dbg !3866
  %14 = load i16, i16* %red11, align 2, !dbg !3866
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3866
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 1, !dbg !3866
  store i16 %14, i16* %green, align 2, !dbg !3866
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3867
  %red12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %16, i32 0, i32 2, !dbg !3867
  %17 = load i16, i16* %red12, align 2, !dbg !3867
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3867
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 0, !dbg !3867
  store i16 %17, i16* %blue, align 2, !dbg !3867
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3868
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 1, !dbg !3868
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !3868
  br label %for.inc, !dbg !3869

for.inc:                                          ; preds = %cond.end
  %20 = load i64, i64* %bit, align 8, !dbg !3870
  %inc = add nsw i64 %20, 1, !dbg !3870
  store i64 %inc, i64* %bit, align 8, !dbg !3870
  br label %for.cond2, !dbg !3871, !llvm.loop !3872

for.end:                                          ; preds = %for.cond2
  %21 = load i8*, i8** %p.addr, align 8, !dbg !3874
  %incdec.ptr13 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !3874
  store i8* %incdec.ptr13, i8** %p.addr, align 8, !dbg !3874
  br label %for.inc14, !dbg !3875

for.inc14:                                        ; preds = %for.end
  %22 = load i64, i64* %x, align 8, !dbg !3876
  %add = add nsw i64 %22, 8, !dbg !3876
  store i64 %add, i64* %x, align 8, !dbg !3876
  br label %for.cond, !dbg !3877, !llvm.loop !3878

for.end15:                                        ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !3880
  br label %for.cond16, !dbg !3882

for.cond16:                                       ; preds = %for.inc40, %for.end15
  %23 = load i64, i64* %bit, align 8, !dbg !3883
  %24 = load i64, i64* %number_pixels.addr, align 8, !dbg !3885
  %rem = urem i64 %24, 8, !dbg !3886
  %cmp17 = icmp slt i64 %23, %rem, !dbg !3887
  br i1 %cmp17, label %for.body19, label %for.end42, !dbg !3888

for.body19:                                       ; preds = %for.cond16
  %25 = load i8*, i8** %p.addr, align 8, !dbg !3889
  %26 = load i8, i8* %25, align 1, !dbg !3889
  %conv20 = zext i8 %26 to i32, !dbg !3889
  %27 = load i64, i64* %bit, align 8, !dbg !3889
  %sub21 = sub nsw i64 7, %27, !dbg !3889
  %sh_prom22 = trunc i64 %sub21 to i32, !dbg !3889
  %shl23 = shl i32 1, %sh_prom22, !dbg !3889
  %and24 = and i32 %conv20, %shl23, !dbg !3889
  %cmp25 = icmp eq i32 %and24, 0, !dbg !3889
  br i1 %cmp25, label %cond.true27, label %cond.false29, !dbg !3889

cond.true27:                                      ; preds = %for.body19
  %28 = load i16, i16* %black, align 2, !dbg !3889
  %conv28 = zext i16 %28 to i32, !dbg !3889
  br label %cond.end31, !dbg !3889

cond.false29:                                     ; preds = %for.body19
  %29 = load i16, i16* %white, align 2, !dbg !3889
  %conv30 = zext i16 %29 to i32, !dbg !3889
  br label %cond.end31, !dbg !3889

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %conv28, %cond.true27 ], [ %conv30, %cond.false29 ], !dbg !3889
  %conv33 = trunc i32 %cond32 to i16, !dbg !3889
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3889
  %red34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !3889
  store i16 %conv33, i16* %red34, align 2, !dbg !3889
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3891
  %red35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 2, !dbg !3891
  %32 = load i16, i16* %red35, align 2, !dbg !3891
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3891
  %green36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 1, !dbg !3891
  store i16 %32, i16* %green36, align 2, !dbg !3891
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3892
  %red37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 0, i32 2, !dbg !3892
  %35 = load i16, i16* %red37, align 2, !dbg !3892
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3892
  %blue38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !3892
  store i16 %35, i16* %blue38, align 2, !dbg !3892
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3893
  %incdec.ptr39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 1, !dbg !3893
  store %struct._PixelPacket* %incdec.ptr39, %struct._PixelPacket** %q.addr, align 8, !dbg !3893
  br label %for.inc40, !dbg !3894

for.inc40:                                        ; preds = %cond.end31
  %38 = load i64, i64* %bit, align 8, !dbg !3895
  %inc41 = add nsw i64 %38, 1, !dbg !3895
  store i64 %inc41, i64* %bit, align 8, !dbg !3895
  br label %for.cond16, !dbg !3896, !llvm.loop !3897

for.end42:                                        ; preds = %for.cond16
  %39 = load i64, i64* %bit, align 8, !dbg !3899
  %cmp43 = icmp ne i64 %39, 0, !dbg !3901
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !3902

if.then45:                                        ; preds = %for.end42
  %40 = load i8*, i8** %p.addr, align 8, !dbg !3903
  %incdec.ptr46 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3903
  store i8* %incdec.ptr46, i8** %p.addr, align 8, !dbg !3903
  br label %if.end47, !dbg !3904

if.end47:                                         ; preds = %if.then45, %for.end42
  br label %sw.epilog, !dbg !3905

sw.bb48:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel49, metadata !3906, metadata !DIExpression()), !dbg !3908
  %41 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3909
  %depth50 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %41, i32 0, i32 0, !dbg !3910
  %42 = load i64, i64* %depth50, align 8, !dbg !3910
  %call = call i64 @GetQuantumRange(i64 %42), !dbg !3911
  store i64 %call, i64* %range, align 8, !dbg !3912
  store i64 0, i64* %x, align 8, !dbg !3913
  br label %for.cond51, !dbg !3915

for.cond51:                                       ; preds = %for.inc79, %sw.bb48
  %43 = load i64, i64* %x, align 8, !dbg !3916
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !3918
  %sub52 = sub nsw i64 %44, 1, !dbg !3919
  %cmp53 = icmp slt i64 %43, %sub52, !dbg !3920
  br i1 %cmp53, label %for.body55, label %for.end81, !dbg !3921

for.body55:                                       ; preds = %for.cond51
  %45 = load i8*, i8** %p.addr, align 8, !dbg !3922
  %46 = load i8, i8* %45, align 1, !dbg !3924
  %conv56 = zext i8 %46 to i32, !dbg !3924
  %shr = ashr i32 %conv56, 4, !dbg !3925
  %and57 = and i32 %shr, 15, !dbg !3926
  %conv58 = trunc i32 %and57 to i8, !dbg !3927
  store i8 %conv58, i8* %pixel49, align 1, !dbg !3928
  %47 = load i8, i8* %pixel49, align 1, !dbg !3929
  %conv59 = zext i8 %47 to i64, !dbg !3929
  %48 = load i64, i64* %range, align 8, !dbg !3929
  %call60 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv59, i64 %48), !dbg !3929
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3929
  %red61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 2, !dbg !3929
  store i16 %call60, i16* %red61, align 2, !dbg !3929
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3930
  %red62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 2, !dbg !3930
  %51 = load i16, i16* %red62, align 2, !dbg !3930
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3930
  %green63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 1, !dbg !3930
  store i16 %51, i16* %green63, align 2, !dbg !3930
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3931
  %red64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 2, !dbg !3931
  %54 = load i16, i16* %red64, align 2, !dbg !3931
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3931
  %blue65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 0, !dbg !3931
  store i16 %54, i16* %blue65, align 2, !dbg !3931
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3932
  %incdec.ptr66 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 1, !dbg !3932
  store %struct._PixelPacket* %incdec.ptr66, %struct._PixelPacket** %q.addr, align 8, !dbg !3932
  %57 = load i8*, i8** %p.addr, align 8, !dbg !3933
  %58 = load i8, i8* %57, align 1, !dbg !3934
  %conv67 = zext i8 %58 to i32, !dbg !3935
  %and68 = and i32 %conv67, 15, !dbg !3936
  %conv69 = trunc i32 %and68 to i8, !dbg !3937
  store i8 %conv69, i8* %pixel49, align 1, !dbg !3938
  %59 = load i8, i8* %pixel49, align 1, !dbg !3939
  %conv70 = zext i8 %59 to i64, !dbg !3939
  %60 = load i64, i64* %range, align 8, !dbg !3939
  %call71 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv70, i64 %60), !dbg !3939
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3939
  %red72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !3939
  store i16 %call71, i16* %red72, align 2, !dbg !3939
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3940
  %red73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 2, !dbg !3940
  %63 = load i16, i16* %red73, align 2, !dbg !3940
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3940
  %green74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 0, i32 1, !dbg !3940
  store i16 %63, i16* %green74, align 2, !dbg !3940
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3941
  %red75 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 2, !dbg !3941
  %66 = load i16, i16* %red75, align 2, !dbg !3941
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3941
  %blue76 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 0, !dbg !3941
  store i16 %66, i16* %blue76, align 2, !dbg !3941
  %68 = load i8*, i8** %p.addr, align 8, !dbg !3942
  %incdec.ptr77 = getelementptr inbounds i8, i8* %68, i32 1, !dbg !3942
  store i8* %incdec.ptr77, i8** %p.addr, align 8, !dbg !3942
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3943
  %incdec.ptr78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 1, !dbg !3943
  store %struct._PixelPacket* %incdec.ptr78, %struct._PixelPacket** %q.addr, align 8, !dbg !3943
  br label %for.inc79, !dbg !3944

for.inc79:                                        ; preds = %for.body55
  %70 = load i64, i64* %x, align 8, !dbg !3945
  %add80 = add nsw i64 %70, 2, !dbg !3945
  store i64 %add80, i64* %x, align 8, !dbg !3945
  br label %for.cond51, !dbg !3946, !llvm.loop !3947

for.end81:                                        ; preds = %for.cond51
  store i64 0, i64* %bit, align 8, !dbg !3949
  br label %for.cond82, !dbg !3951

for.cond82:                                       ; preds = %for.inc99, %for.end81
  %71 = load i64, i64* %bit, align 8, !dbg !3952
  %72 = load i64, i64* %number_pixels.addr, align 8, !dbg !3954
  %rem83 = urem i64 %72, 2, !dbg !3955
  %cmp84 = icmp slt i64 %71, %rem83, !dbg !3956
  br i1 %cmp84, label %for.body86, label %for.end101, !dbg !3957

for.body86:                                       ; preds = %for.cond82
  %73 = load i8*, i8** %p.addr, align 8, !dbg !3958
  %incdec.ptr87 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !3958
  store i8* %incdec.ptr87, i8** %p.addr, align 8, !dbg !3958
  %74 = load i8, i8* %73, align 1, !dbg !3960
  %conv88 = zext i8 %74 to i32, !dbg !3960
  %shr89 = ashr i32 %conv88, 4, !dbg !3961
  %conv90 = trunc i32 %shr89 to i8, !dbg !3962
  store i8 %conv90, i8* %pixel49, align 1, !dbg !3963
  %75 = load i8, i8* %pixel49, align 1, !dbg !3964
  %conv91 = zext i8 %75 to i64, !dbg !3964
  %76 = load i64, i64* %range, align 8, !dbg !3964
  %call92 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv91, i64 %76), !dbg !3964
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3964
  %red93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 2, !dbg !3964
  store i16 %call92, i16* %red93, align 2, !dbg !3964
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3965
  %red94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 2, !dbg !3965
  %79 = load i16, i16* %red94, align 2, !dbg !3965
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3965
  %green95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 1, !dbg !3965
  store i16 %79, i16* %green95, align 2, !dbg !3965
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3966
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 2, !dbg !3966
  %82 = load i16, i16* %red96, align 2, !dbg !3966
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3966
  %blue97 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !3966
  store i16 %82, i16* %blue97, align 2, !dbg !3966
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3967
  %incdec.ptr98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 1, !dbg !3967
  store %struct._PixelPacket* %incdec.ptr98, %struct._PixelPacket** %q.addr, align 8, !dbg !3967
  br label %for.inc99, !dbg !3968

for.inc99:                                        ; preds = %for.body86
  %85 = load i64, i64* %bit, align 8, !dbg !3969
  %inc100 = add nsw i64 %85, 1, !dbg !3969
  store i64 %inc100, i64* %bit, align 8, !dbg !3969
  br label %for.cond82, !dbg !3970, !llvm.loop !3971

for.end101:                                       ; preds = %for.cond82
  br label %sw.epilog, !dbg !3973

sw.bb102:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel103, metadata !3974, metadata !DIExpression()), !dbg !3976
  %86 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3977
  %min_is_white104 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %86, i32 0, i32 7, !dbg !3979
  %87 = load i32, i32* %min_is_white104, align 8, !dbg !3979
  %cmp105 = icmp ne i32 %87, 0, !dbg !3980
  br i1 %cmp105, label %if.then107, label %if.end126, !dbg !3981

if.then107:                                       ; preds = %sw.bb102
  store i64 0, i64* %x, align 8, !dbg !3982
  br label %for.cond108, !dbg !3985

for.cond108:                                      ; preds = %for.inc123, %if.then107
  %88 = load i64, i64* %x, align 8, !dbg !3986
  %89 = load i64, i64* %number_pixels.addr, align 8, !dbg !3988
  %cmp109 = icmp slt i64 %88, %89, !dbg !3989
  br i1 %cmp109, label %for.body111, label %for.end125, !dbg !3990

for.body111:                                      ; preds = %for.cond108
  %90 = load i8*, i8** %p.addr, align 8, !dbg !3991
  %call112 = call i8* @PushCharPixel(i8* %90, i8* %pixel103), !dbg !3993
  store i8* %call112, i8** %p.addr, align 8, !dbg !3994
  %91 = load i8, i8* %pixel103, align 1, !dbg !3995
  %call113 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %91), !dbg !3995
  %conv114 = zext i16 %call113 to i32, !dbg !3995
  %sub115 = sub nsw i32 65535, %conv114, !dbg !3995
  %conv116 = trunc i32 %sub115 to i16, !dbg !3995
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3995
  %red117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !3995
  store i16 %conv116, i16* %red117, align 2, !dbg !3995
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3996
  %red118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 2, !dbg !3996
  %94 = load i16, i16* %red118, align 2, !dbg !3996
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3996
  %green119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 1, !dbg !3996
  store i16 %94, i16* %green119, align 2, !dbg !3996
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3997
  %red120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 2, !dbg !3997
  %97 = load i16, i16* %red120, align 2, !dbg !3997
  %98 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3997
  %blue121 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %98, i32 0, i32 0, !dbg !3997
  store i16 %97, i16* %blue121, align 2, !dbg !3997
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3998
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 3, !dbg !3998
  store i16 0, i16* %opacity, align 2, !dbg !3998
  %100 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !3999
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %100, i32 0, i32 6, !dbg !4000
  %101 = load i64, i64* %pad, align 8, !dbg !4000
  %102 = load i8*, i8** %p.addr, align 8, !dbg !4001
  %add.ptr = getelementptr inbounds i8, i8* %102, i64 %101, !dbg !4001
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !4001
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4002
  %incdec.ptr122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 1, !dbg !4002
  store %struct._PixelPacket* %incdec.ptr122, %struct._PixelPacket** %q.addr, align 8, !dbg !4002
  br label %for.inc123, !dbg !4003

for.inc123:                                       ; preds = %for.body111
  %104 = load i64, i64* %x, align 8, !dbg !4004
  %inc124 = add nsw i64 %104, 1, !dbg !4004
  store i64 %inc124, i64* %x, align 8, !dbg !4004
  br label %for.cond108, !dbg !4005, !llvm.loop !4006

for.end125:                                       ; preds = %for.cond108
  br label %sw.epilog, !dbg !4008

if.end126:                                        ; preds = %sw.bb102
  store i64 0, i64* %x, align 8, !dbg !4009
  br label %for.cond127, !dbg !4011

for.cond127:                                      ; preds = %for.inc142, %if.end126
  %105 = load i64, i64* %x, align 8, !dbg !4012
  %106 = load i64, i64* %number_pixels.addr, align 8, !dbg !4014
  %cmp128 = icmp slt i64 %105, %106, !dbg !4015
  br i1 %cmp128, label %for.body130, label %for.end144, !dbg !4016

for.body130:                                      ; preds = %for.cond127
  %107 = load i8*, i8** %p.addr, align 8, !dbg !4017
  %call131 = call i8* @PushCharPixel(i8* %107, i8* %pixel103), !dbg !4019
  store i8* %call131, i8** %p.addr, align 8, !dbg !4020
  %108 = load i8, i8* %pixel103, align 1, !dbg !4021
  %call132 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %108), !dbg !4021
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4021
  %red133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 2, !dbg !4021
  store i16 %call132, i16* %red133, align 2, !dbg !4021
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4022
  %red134 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 2, !dbg !4022
  %111 = load i16, i16* %red134, align 2, !dbg !4022
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4022
  %green135 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 1, !dbg !4022
  store i16 %111, i16* %green135, align 2, !dbg !4022
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4023
  %red136 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 2, !dbg !4023
  %114 = load i16, i16* %red136, align 2, !dbg !4023
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4023
  %blue137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 0, i32 0, !dbg !4023
  store i16 %114, i16* %blue137, align 2, !dbg !4023
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4024
  %opacity138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 3, !dbg !4024
  store i16 0, i16* %opacity138, align 2, !dbg !4024
  %117 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4025
  %pad139 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %117, i32 0, i32 6, !dbg !4026
  %118 = load i64, i64* %pad139, align 8, !dbg !4026
  %119 = load i8*, i8** %p.addr, align 8, !dbg !4027
  %add.ptr140 = getelementptr inbounds i8, i8* %119, i64 %118, !dbg !4027
  store i8* %add.ptr140, i8** %p.addr, align 8, !dbg !4027
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4028
  %incdec.ptr141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %120, i32 1, !dbg !4028
  store %struct._PixelPacket* %incdec.ptr141, %struct._PixelPacket** %q.addr, align 8, !dbg !4028
  br label %for.inc142, !dbg !4029

for.inc142:                                       ; preds = %for.body130
  %121 = load i64, i64* %x, align 8, !dbg !4030
  %inc143 = add nsw i64 %121, 1, !dbg !4030
  store i64 %inc143, i64* %x, align 8, !dbg !4030
  br label %for.cond127, !dbg !4031, !llvm.loop !4032

for.end144:                                       ; preds = %for.cond127
  br label %sw.epilog, !dbg !4034

sw.bb145:                                         ; preds = %entry
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4035
  %depth146 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 0, !dbg !4037
  %123 = load i64, i64* %depth146, align 8, !dbg !4037
  %call147 = call i64 @GetQuantumRange(i64 %123), !dbg !4038
  store i64 %call147, i64* %range, align 8, !dbg !4039
  %124 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4040
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %124, i32 0, i32 8, !dbg !4042
  %125 = load i32, i32* %pack, align 4, !dbg !4042
  %cmp148 = icmp eq i32 %125, 0, !dbg !4043
  br i1 %cmp148, label %if.then150, label %if.end305, !dbg !4044

if.then150:                                       ; preds = %sw.bb145
  %126 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4045
  %endian = getelementptr inbounds %struct._Image, %struct._Image* %126, i32 0, i32 34, !dbg !4048
  %127 = load i32, i32* %endian, align 8, !dbg !4048
  %cmp151 = icmp eq i32 %127, 1, !dbg !4049
  br i1 %cmp151, label %if.then153, label %if.end229, !dbg !4050

if.then153:                                       ; preds = %if.then150
  store i64 0, i64* %x, align 8, !dbg !4051
  br label %for.cond154, !dbg !4054

for.cond154:                                      ; preds = %for.inc193, %if.then153
  %128 = load i64, i64* %x, align 8, !dbg !4055
  %129 = load i64, i64* %number_pixels.addr, align 8, !dbg !4057
  %sub155 = sub i64 %129, 2, !dbg !4058
  %cmp156 = icmp slt i64 %128, %sub155, !dbg !4059
  br i1 %cmp156, label %for.body158, label %for.end195, !dbg !4060

for.body158:                                      ; preds = %for.cond154
  %130 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4061
  %endian159 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %130, i32 0, i32 13, !dbg !4063
  %131 = load i32, i32* %endian159, align 8, !dbg !4063
  %132 = load i8*, i8** %p.addr, align 8, !dbg !4064
  %call160 = call i8* @PushLongPixel(i32 %131, i8* %132, i32* %pixel), !dbg !4065
  store i8* %call160, i8** %p.addr, align 8, !dbg !4066
  %133 = load i32, i32* %pixel, align 4, !dbg !4067
  %shr161 = lshr i32 %133, 22, !dbg !4067
  %and162 = and i32 %shr161, 1023, !dbg !4067
  %conv163 = zext i32 %and162 to i64, !dbg !4067
  %134 = load i64, i64* %range, align 8, !dbg !4067
  %call164 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv163, i64 %134), !dbg !4067
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4067
  %red165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 2, !dbg !4067
  store i16 %call164, i16* %red165, align 2, !dbg !4067
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4068
  %red166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 2, !dbg !4068
  %137 = load i16, i16* %red166, align 2, !dbg !4068
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4068
  %green167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 1, !dbg !4068
  store i16 %137, i16* %green167, align 2, !dbg !4068
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4069
  %red168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 2, !dbg !4069
  %140 = load i16, i16* %red168, align 2, !dbg !4069
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4069
  %blue169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 0, !dbg !4069
  store i16 %140, i16* %blue169, align 2, !dbg !4069
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4070
  %incdec.ptr170 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !4070
  store %struct._PixelPacket* %incdec.ptr170, %struct._PixelPacket** %q.addr, align 8, !dbg !4070
  %143 = load i32, i32* %pixel, align 4, !dbg !4071
  %shr171 = lshr i32 %143, 12, !dbg !4071
  %and172 = and i32 %shr171, 1023, !dbg !4071
  %conv173 = zext i32 %and172 to i64, !dbg !4071
  %144 = load i64, i64* %range, align 8, !dbg !4071
  %call174 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv173, i64 %144), !dbg !4071
  %145 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4071
  %red175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %145, i32 0, i32 2, !dbg !4071
  store i16 %call174, i16* %red175, align 2, !dbg !4071
  %146 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4072
  %red176 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %146, i32 0, i32 2, !dbg !4072
  %147 = load i16, i16* %red176, align 2, !dbg !4072
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4072
  %green177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 1, !dbg !4072
  store i16 %147, i16* %green177, align 2, !dbg !4072
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4073
  %red178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 0, i32 2, !dbg !4073
  %150 = load i16, i16* %red178, align 2, !dbg !4073
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4073
  %blue179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i32 0, i32 0, !dbg !4073
  store i16 %150, i16* %blue179, align 2, !dbg !4073
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4074
  %incdec.ptr180 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 1, !dbg !4074
  store %struct._PixelPacket* %incdec.ptr180, %struct._PixelPacket** %q.addr, align 8, !dbg !4074
  %153 = load i32, i32* %pixel, align 4, !dbg !4075
  %shr181 = lshr i32 %153, 2, !dbg !4075
  %and182 = and i32 %shr181, 1023, !dbg !4075
  %conv183 = zext i32 %and182 to i64, !dbg !4075
  %154 = load i64, i64* %range, align 8, !dbg !4075
  %call184 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv183, i64 %154), !dbg !4075
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4075
  %red185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 2, !dbg !4075
  store i16 %call184, i16* %red185, align 2, !dbg !4075
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4076
  %red186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 2, !dbg !4076
  %157 = load i16, i16* %red186, align 2, !dbg !4076
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4076
  %green187 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 0, i32 1, !dbg !4076
  store i16 %157, i16* %green187, align 2, !dbg !4076
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4077
  %red188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 2, !dbg !4077
  %160 = load i16, i16* %red188, align 2, !dbg !4077
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4077
  %blue189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 0, !dbg !4077
  store i16 %160, i16* %blue189, align 2, !dbg !4077
  %162 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4078
  %pad190 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %162, i32 0, i32 6, !dbg !4079
  %163 = load i64, i64* %pad190, align 8, !dbg !4079
  %164 = load i8*, i8** %p.addr, align 8, !dbg !4080
  %add.ptr191 = getelementptr inbounds i8, i8* %164, i64 %163, !dbg !4080
  store i8* %add.ptr191, i8** %p.addr, align 8, !dbg !4080
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4081
  %incdec.ptr192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i32 1, !dbg !4081
  store %struct._PixelPacket* %incdec.ptr192, %struct._PixelPacket** %q.addr, align 8, !dbg !4081
  br label %for.inc193, !dbg !4082

for.inc193:                                       ; preds = %for.body158
  %166 = load i64, i64* %x, align 8, !dbg !4083
  %add194 = add nsw i64 %166, 3, !dbg !4083
  store i64 %add194, i64* %x, align 8, !dbg !4083
  br label %for.cond154, !dbg !4084, !llvm.loop !4085

for.end195:                                       ; preds = %for.cond154
  %167 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4087
  %endian196 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %167, i32 0, i32 13, !dbg !4088
  %168 = load i32, i32* %endian196, align 8, !dbg !4088
  %169 = load i8*, i8** %p.addr, align 8, !dbg !4089
  %call197 = call i8* @PushLongPixel(i32 %168, i8* %169, i32* %pixel), !dbg !4090
  store i8* %call197, i8** %p.addr, align 8, !dbg !4091
  %170 = load i64, i64* %x, align 8, !dbg !4092
  %inc198 = add nsw i64 %170, 1, !dbg !4092
  store i64 %inc198, i64* %x, align 8, !dbg !4092
  %171 = load i64, i64* %number_pixels.addr, align 8, !dbg !4094
  %sub199 = sub i64 %171, 1, !dbg !4095
  %cmp200 = icmp slt i64 %170, %sub199, !dbg !4096
  br i1 %cmp200, label %if.then202, label %if.end213, !dbg !4097

if.then202:                                       ; preds = %for.end195
  %172 = load i32, i32* %pixel, align 4, !dbg !4098
  %shr203 = lshr i32 %172, 22, !dbg !4098
  %and204 = and i32 %shr203, 1023, !dbg !4098
  %conv205 = zext i32 %and204 to i64, !dbg !4098
  %173 = load i64, i64* %range, align 8, !dbg !4098
  %call206 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv205, i64 %173), !dbg !4098
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4098
  %red207 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 0, i32 2, !dbg !4098
  store i16 %call206, i16* %red207, align 2, !dbg !4098
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4100
  %red208 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 2, !dbg !4100
  %176 = load i16, i16* %red208, align 2, !dbg !4100
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4100
  %green209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 0, i32 1, !dbg !4100
  store i16 %176, i16* %green209, align 2, !dbg !4100
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4101
  %red210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i32 0, i32 2, !dbg !4101
  %179 = load i16, i16* %red210, align 2, !dbg !4101
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4101
  %blue211 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 0, !dbg !4101
  store i16 %179, i16* %blue211, align 2, !dbg !4101
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4102
  %incdec.ptr212 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 1, !dbg !4102
  store %struct._PixelPacket* %incdec.ptr212, %struct._PixelPacket** %q.addr, align 8, !dbg !4102
  br label %if.end213, !dbg !4103

if.end213:                                        ; preds = %if.then202, %for.end195
  %182 = load i64, i64* %x, align 8, !dbg !4104
  %inc214 = add nsw i64 %182, 1, !dbg !4104
  store i64 %inc214, i64* %x, align 8, !dbg !4104
  %183 = load i64, i64* %number_pixels.addr, align 8, !dbg !4106
  %cmp215 = icmp slt i64 %182, %183, !dbg !4107
  br i1 %cmp215, label %if.then217, label %if.end228, !dbg !4108

if.then217:                                       ; preds = %if.end213
  %184 = load i32, i32* %pixel, align 4, !dbg !4109
  %shr218 = lshr i32 %184, 12, !dbg !4109
  %and219 = and i32 %shr218, 1023, !dbg !4109
  %conv220 = zext i32 %and219 to i64, !dbg !4109
  %185 = load i64, i64* %range, align 8, !dbg !4109
  %call221 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv220, i64 %185), !dbg !4109
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4109
  %red222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 2, !dbg !4109
  store i16 %call221, i16* %red222, align 2, !dbg !4109
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4111
  %red223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 0, i32 2, !dbg !4111
  %188 = load i16, i16* %red223, align 2, !dbg !4111
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4111
  %green224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %189, i32 0, i32 1, !dbg !4111
  store i16 %188, i16* %green224, align 2, !dbg !4111
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4112
  %red225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 0, i32 2, !dbg !4112
  %191 = load i16, i16* %red225, align 2, !dbg !4112
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4112
  %blue226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %192, i32 0, i32 0, !dbg !4112
  store i16 %191, i16* %blue226, align 2, !dbg !4112
  %193 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4113
  %incdec.ptr227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %193, i32 1, !dbg !4113
  store %struct._PixelPacket* %incdec.ptr227, %struct._PixelPacket** %q.addr, align 8, !dbg !4113
  br label %if.end228, !dbg !4114

if.end228:                                        ; preds = %if.then217, %if.end213
  br label %sw.epilog, !dbg !4115

if.end229:                                        ; preds = %if.then150
  store i64 0, i64* %x, align 8, !dbg !4116
  br label %for.cond230, !dbg !4118

for.cond230:                                      ; preds = %for.inc269, %if.end229
  %194 = load i64, i64* %x, align 8, !dbg !4119
  %195 = load i64, i64* %number_pixels.addr, align 8, !dbg !4121
  %sub231 = sub i64 %195, 2, !dbg !4122
  %cmp232 = icmp slt i64 %194, %sub231, !dbg !4123
  br i1 %cmp232, label %for.body234, label %for.end271, !dbg !4124

for.body234:                                      ; preds = %for.cond230
  %196 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4125
  %endian235 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %196, i32 0, i32 13, !dbg !4127
  %197 = load i32, i32* %endian235, align 8, !dbg !4127
  %198 = load i8*, i8** %p.addr, align 8, !dbg !4128
  %call236 = call i8* @PushLongPixel(i32 %197, i8* %198, i32* %pixel), !dbg !4129
  store i8* %call236, i8** %p.addr, align 8, !dbg !4130
  %199 = load i32, i32* %pixel, align 4, !dbg !4131
  %shr237 = lshr i32 %199, 2, !dbg !4131
  %and238 = and i32 %shr237, 1023, !dbg !4131
  %conv239 = zext i32 %and238 to i64, !dbg !4131
  %200 = load i64, i64* %range, align 8, !dbg !4131
  %call240 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv239, i64 %200), !dbg !4131
  %201 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4131
  %red241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %201, i32 0, i32 2, !dbg !4131
  store i16 %call240, i16* %red241, align 2, !dbg !4131
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4132
  %red242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 2, !dbg !4132
  %203 = load i16, i16* %red242, align 2, !dbg !4132
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4132
  %green243 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 0, i32 1, !dbg !4132
  store i16 %203, i16* %green243, align 2, !dbg !4132
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4133
  %red244 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 0, i32 2, !dbg !4133
  %206 = load i16, i16* %red244, align 2, !dbg !4133
  %207 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4133
  %blue245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %207, i32 0, i32 0, !dbg !4133
  store i16 %206, i16* %blue245, align 2, !dbg !4133
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4134
  %incdec.ptr246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %208, i32 1, !dbg !4134
  store %struct._PixelPacket* %incdec.ptr246, %struct._PixelPacket** %q.addr, align 8, !dbg !4134
  %209 = load i32, i32* %pixel, align 4, !dbg !4135
  %shr247 = lshr i32 %209, 12, !dbg !4135
  %and248 = and i32 %shr247, 1023, !dbg !4135
  %conv249 = zext i32 %and248 to i64, !dbg !4135
  %210 = load i64, i64* %range, align 8, !dbg !4135
  %call250 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv249, i64 %210), !dbg !4135
  %211 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4135
  %red251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %211, i32 0, i32 2, !dbg !4135
  store i16 %call250, i16* %red251, align 2, !dbg !4135
  %212 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4136
  %red252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %212, i32 0, i32 2, !dbg !4136
  %213 = load i16, i16* %red252, align 2, !dbg !4136
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4136
  %green253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 1, !dbg !4136
  store i16 %213, i16* %green253, align 2, !dbg !4136
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4137
  %red254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i32 0, i32 2, !dbg !4137
  %216 = load i16, i16* %red254, align 2, !dbg !4137
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4137
  %blue255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %217, i32 0, i32 0, !dbg !4137
  store i16 %216, i16* %blue255, align 2, !dbg !4137
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4138
  %incdec.ptr256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 1, !dbg !4138
  store %struct._PixelPacket* %incdec.ptr256, %struct._PixelPacket** %q.addr, align 8, !dbg !4138
  %219 = load i32, i32* %pixel, align 4, !dbg !4139
  %shr257 = lshr i32 %219, 22, !dbg !4139
  %and258 = and i32 %shr257, 1023, !dbg !4139
  %conv259 = zext i32 %and258 to i64, !dbg !4139
  %220 = load i64, i64* %range, align 8, !dbg !4139
  %call260 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv259, i64 %220), !dbg !4139
  %221 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4139
  %red261 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %221, i32 0, i32 2, !dbg !4139
  store i16 %call260, i16* %red261, align 2, !dbg !4139
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4140
  %red262 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 2, !dbg !4140
  %223 = load i16, i16* %red262, align 2, !dbg !4140
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4140
  %green263 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i32 0, i32 1, !dbg !4140
  store i16 %223, i16* %green263, align 2, !dbg !4140
  %225 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4141
  %red264 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %225, i32 0, i32 2, !dbg !4141
  %226 = load i16, i16* %red264, align 2, !dbg !4141
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4141
  %blue265 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 0, i32 0, !dbg !4141
  store i16 %226, i16* %blue265, align 2, !dbg !4141
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4142
  %pad266 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %228, i32 0, i32 6, !dbg !4143
  %229 = load i64, i64* %pad266, align 8, !dbg !4143
  %230 = load i8*, i8** %p.addr, align 8, !dbg !4144
  %add.ptr267 = getelementptr inbounds i8, i8* %230, i64 %229, !dbg !4144
  store i8* %add.ptr267, i8** %p.addr, align 8, !dbg !4144
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4145
  %incdec.ptr268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 1, !dbg !4145
  store %struct._PixelPacket* %incdec.ptr268, %struct._PixelPacket** %q.addr, align 8, !dbg !4145
  br label %for.inc269, !dbg !4146

for.inc269:                                       ; preds = %for.body234
  %232 = load i64, i64* %x, align 8, !dbg !4147
  %add270 = add nsw i64 %232, 3, !dbg !4147
  store i64 %add270, i64* %x, align 8, !dbg !4147
  br label %for.cond230, !dbg !4148, !llvm.loop !4149

for.end271:                                       ; preds = %for.cond230
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4151
  %endian272 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %233, i32 0, i32 13, !dbg !4152
  %234 = load i32, i32* %endian272, align 8, !dbg !4152
  %235 = load i8*, i8** %p.addr, align 8, !dbg !4153
  %call273 = call i8* @PushLongPixel(i32 %234, i8* %235, i32* %pixel), !dbg !4154
  store i8* %call273, i8** %p.addr, align 8, !dbg !4155
  %236 = load i64, i64* %x, align 8, !dbg !4156
  %inc274 = add nsw i64 %236, 1, !dbg !4156
  store i64 %inc274, i64* %x, align 8, !dbg !4156
  %237 = load i64, i64* %number_pixels.addr, align 8, !dbg !4158
  %sub275 = sub i64 %237, 1, !dbg !4159
  %cmp276 = icmp slt i64 %236, %sub275, !dbg !4160
  br i1 %cmp276, label %if.then278, label %if.end289, !dbg !4161

if.then278:                                       ; preds = %for.end271
  %238 = load i32, i32* %pixel, align 4, !dbg !4162
  %shr279 = lshr i32 %238, 2, !dbg !4162
  %and280 = and i32 %shr279, 1023, !dbg !4162
  %conv281 = zext i32 %and280 to i64, !dbg !4162
  %239 = load i64, i64* %range, align 8, !dbg !4162
  %call282 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv281, i64 %239), !dbg !4162
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4162
  %red283 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 2, !dbg !4162
  store i16 %call282, i16* %red283, align 2, !dbg !4162
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4164
  %red284 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 0, i32 2, !dbg !4164
  %242 = load i16, i16* %red284, align 2, !dbg !4164
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4164
  %green285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 1, !dbg !4164
  store i16 %242, i16* %green285, align 2, !dbg !4164
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4165
  %red286 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 0, i32 2, !dbg !4165
  %245 = load i16, i16* %red286, align 2, !dbg !4165
  %246 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4165
  %blue287 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %246, i32 0, i32 0, !dbg !4165
  store i16 %245, i16* %blue287, align 2, !dbg !4165
  %247 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4166
  %incdec.ptr288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %247, i32 1, !dbg !4166
  store %struct._PixelPacket* %incdec.ptr288, %struct._PixelPacket** %q.addr, align 8, !dbg !4166
  br label %if.end289, !dbg !4167

if.end289:                                        ; preds = %if.then278, %for.end271
  %248 = load i64, i64* %x, align 8, !dbg !4168
  %inc290 = add nsw i64 %248, 1, !dbg !4168
  store i64 %inc290, i64* %x, align 8, !dbg !4168
  %249 = load i64, i64* %number_pixels.addr, align 8, !dbg !4170
  %cmp291 = icmp slt i64 %248, %249, !dbg !4171
  br i1 %cmp291, label %if.then293, label %if.end304, !dbg !4172

if.then293:                                       ; preds = %if.end289
  %250 = load i32, i32* %pixel, align 4, !dbg !4173
  %shr294 = lshr i32 %250, 12, !dbg !4173
  %and295 = and i32 %shr294, 1023, !dbg !4173
  %conv296 = zext i32 %and295 to i64, !dbg !4173
  %251 = load i64, i64* %range, align 8, !dbg !4173
  %call297 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv296, i64 %251), !dbg !4173
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4173
  %red298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 2, !dbg !4173
  store i16 %call297, i16* %red298, align 2, !dbg !4173
  %253 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4175
  %red299 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %253, i32 0, i32 2, !dbg !4175
  %254 = load i16, i16* %red299, align 2, !dbg !4175
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4175
  %green300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !4175
  store i16 %254, i16* %green300, align 2, !dbg !4175
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4176
  %red301 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 2, !dbg !4176
  %257 = load i16, i16* %red301, align 2, !dbg !4176
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4176
  %blue302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 0, i32 0, !dbg !4176
  store i16 %257, i16* %blue302, align 2, !dbg !4176
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4177
  %incdec.ptr303 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i32 1, !dbg !4177
  store %struct._PixelPacket* %incdec.ptr303, %struct._PixelPacket** %q.addr, align 8, !dbg !4177
  br label %if.end304, !dbg !4178

if.end304:                                        ; preds = %if.then293, %if.end289
  br label %sw.epilog, !dbg !4179

if.end305:                                        ; preds = %sw.bb145
  store i64 0, i64* %x, align 8, !dbg !4180
  br label %for.cond306, !dbg !4182

for.cond306:                                      ; preds = %for.inc321, %if.end305
  %260 = load i64, i64* %x, align 8, !dbg !4183
  %261 = load i64, i64* %number_pixels.addr, align 8, !dbg !4185
  %cmp307 = icmp slt i64 %260, %261, !dbg !4186
  br i1 %cmp307, label %for.body309, label %for.end323, !dbg !4187

for.body309:                                      ; preds = %for.cond306
  %262 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4188
  %263 = load i8*, i8** %p.addr, align 8, !dbg !4190
  %call310 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %262, i8* %263, i32* %pixel), !dbg !4191
  store i8* %call310, i8** %p.addr, align 8, !dbg !4192
  %264 = load i32, i32* %pixel, align 4, !dbg !4193
  %conv311 = zext i32 %264 to i64, !dbg !4193
  %265 = load i64, i64* %range, align 8, !dbg !4193
  %call312 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv311, i64 %265), !dbg !4193
  %266 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4193
  %red313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %266, i32 0, i32 2, !dbg !4193
  store i16 %call312, i16* %red313, align 2, !dbg !4193
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4194
  %red314 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %267, i32 0, i32 2, !dbg !4194
  %268 = load i16, i16* %red314, align 2, !dbg !4194
  %269 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4194
  %green315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %269, i32 0, i32 1, !dbg !4194
  store i16 %268, i16* %green315, align 2, !dbg !4194
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4195
  %red316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i32 0, i32 2, !dbg !4195
  %271 = load i16, i16* %red316, align 2, !dbg !4195
  %272 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4195
  %blue317 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %272, i32 0, i32 0, !dbg !4195
  store i16 %271, i16* %blue317, align 2, !dbg !4195
  %273 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4196
  %pad318 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %273, i32 0, i32 6, !dbg !4197
  %274 = load i64, i64* %pad318, align 8, !dbg !4197
  %275 = load i8*, i8** %p.addr, align 8, !dbg !4198
  %add.ptr319 = getelementptr inbounds i8, i8* %275, i64 %274, !dbg !4198
  store i8* %add.ptr319, i8** %p.addr, align 8, !dbg !4198
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4199
  %incdec.ptr320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %276, i32 1, !dbg !4199
  store %struct._PixelPacket* %incdec.ptr320, %struct._PixelPacket** %q.addr, align 8, !dbg !4199
  br label %for.inc321, !dbg !4200

for.inc321:                                       ; preds = %for.body309
  %277 = load i64, i64* %x, align 8, !dbg !4201
  %inc322 = add nsw i64 %277, 1, !dbg !4201
  store i64 %inc322, i64* %x, align 8, !dbg !4201
  br label %for.cond306, !dbg !4202, !llvm.loop !4203

for.end323:                                       ; preds = %for.cond306
  br label %sw.epilog, !dbg !4205

sw.bb324:                                         ; preds = %entry
  %278 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4206
  %depth325 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %278, i32 0, i32 0, !dbg !4208
  %279 = load i64, i64* %depth325, align 8, !dbg !4208
  %call326 = call i64 @GetQuantumRange(i64 %279), !dbg !4209
  store i64 %call326, i64* %range, align 8, !dbg !4210
  %280 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4211
  %pack327 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %280, i32 0, i32 8, !dbg !4213
  %281 = load i32, i32* %pack327, align 4, !dbg !4213
  %cmp328 = icmp eq i32 %281, 0, !dbg !4214
  br i1 %cmp328, label %if.then330, label %if.end393, !dbg !4215

if.then330:                                       ; preds = %sw.bb324
  call void @llvm.dbg.declare(metadata i16* %pixel331, metadata !4216, metadata !DIExpression()), !dbg !4218
  store i64 0, i64* %x, align 8, !dbg !4219
  br label %for.cond332, !dbg !4221

for.cond332:                                      ; preds = %for.inc363, %if.then330
  %282 = load i64, i64* %x, align 8, !dbg !4222
  %283 = load i64, i64* %number_pixels.addr, align 8, !dbg !4224
  %sub333 = sub i64 %283, 1, !dbg !4225
  %cmp334 = icmp slt i64 %282, %sub333, !dbg !4226
  br i1 %cmp334, label %for.body336, label %for.end365, !dbg !4227

for.body336:                                      ; preds = %for.cond332
  %284 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4228
  %endian337 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %284, i32 0, i32 13, !dbg !4230
  %285 = load i32, i32* %endian337, align 8, !dbg !4230
  %286 = load i8*, i8** %p.addr, align 8, !dbg !4231
  %call338 = call i8* @PushShortPixel(i32 %285, i8* %286, i16* %pixel331), !dbg !4232
  store i8* %call338, i8** %p.addr, align 8, !dbg !4233
  %287 = load i16, i16* %pixel331, align 2, !dbg !4234
  %conv339 = zext i16 %287 to i32, !dbg !4234
  %shr340 = ashr i32 %conv339, 4, !dbg !4234
  %conv341 = sext i32 %shr340 to i64, !dbg !4234
  %288 = load i64, i64* %range, align 8, !dbg !4234
  %call342 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv341, i64 %288), !dbg !4234
  %289 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4234
  %red343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %289, i32 0, i32 2, !dbg !4234
  store i16 %call342, i16* %red343, align 2, !dbg !4234
  %290 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4235
  %red344 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %290, i32 0, i32 2, !dbg !4235
  %291 = load i16, i16* %red344, align 2, !dbg !4235
  %292 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4235
  %green345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %292, i32 0, i32 1, !dbg !4235
  store i16 %291, i16* %green345, align 2, !dbg !4235
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4236
  %red346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 0, i32 2, !dbg !4236
  %294 = load i16, i16* %red346, align 2, !dbg !4236
  %295 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4236
  %blue347 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %295, i32 0, i32 0, !dbg !4236
  store i16 %294, i16* %blue347, align 2, !dbg !4236
  %296 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4237
  %incdec.ptr348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %296, i32 1, !dbg !4237
  store %struct._PixelPacket* %incdec.ptr348, %struct._PixelPacket** %q.addr, align 8, !dbg !4237
  %297 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4238
  %endian349 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %297, i32 0, i32 13, !dbg !4239
  %298 = load i32, i32* %endian349, align 8, !dbg !4239
  %299 = load i8*, i8** %p.addr, align 8, !dbg !4240
  %call350 = call i8* @PushShortPixel(i32 %298, i8* %299, i16* %pixel331), !dbg !4241
  store i8* %call350, i8** %p.addr, align 8, !dbg !4242
  %300 = load i16, i16* %pixel331, align 2, !dbg !4243
  %conv351 = zext i16 %300 to i32, !dbg !4243
  %shr352 = ashr i32 %conv351, 4, !dbg !4243
  %conv353 = sext i32 %shr352 to i64, !dbg !4243
  %301 = load i64, i64* %range, align 8, !dbg !4243
  %call354 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv353, i64 %301), !dbg !4243
  %302 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4243
  %red355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %302, i32 0, i32 2, !dbg !4243
  store i16 %call354, i16* %red355, align 2, !dbg !4243
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4244
  %red356 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %303, i32 0, i32 2, !dbg !4244
  %304 = load i16, i16* %red356, align 2, !dbg !4244
  %305 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4244
  %green357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %305, i32 0, i32 1, !dbg !4244
  store i16 %304, i16* %green357, align 2, !dbg !4244
  %306 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4245
  %red358 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %306, i32 0, i32 2, !dbg !4245
  %307 = load i16, i16* %red358, align 2, !dbg !4245
  %308 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4245
  %blue359 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %308, i32 0, i32 0, !dbg !4245
  store i16 %307, i16* %blue359, align 2, !dbg !4245
  %309 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4246
  %pad360 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %309, i32 0, i32 6, !dbg !4247
  %310 = load i64, i64* %pad360, align 8, !dbg !4247
  %311 = load i8*, i8** %p.addr, align 8, !dbg !4248
  %add.ptr361 = getelementptr inbounds i8, i8* %311, i64 %310, !dbg !4248
  store i8* %add.ptr361, i8** %p.addr, align 8, !dbg !4248
  %312 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4249
  %incdec.ptr362 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %312, i32 1, !dbg !4249
  store %struct._PixelPacket* %incdec.ptr362, %struct._PixelPacket** %q.addr, align 8, !dbg !4249
  br label %for.inc363, !dbg !4250

for.inc363:                                       ; preds = %for.body336
  %313 = load i64, i64* %x, align 8, !dbg !4251
  %add364 = add nsw i64 %313, 2, !dbg !4251
  store i64 %add364, i64* %x, align 8, !dbg !4251
  br label %for.cond332, !dbg !4252, !llvm.loop !4253

for.end365:                                       ; preds = %for.cond332
  store i64 0, i64* %bit, align 8, !dbg !4255
  br label %for.cond366, !dbg !4257

for.cond366:                                      ; preds = %for.inc385, %for.end365
  %314 = load i64, i64* %bit, align 8, !dbg !4258
  %315 = load i64, i64* %number_pixels.addr, align 8, !dbg !4260
  %rem367 = urem i64 %315, 2, !dbg !4261
  %cmp368 = icmp slt i64 %314, %rem367, !dbg !4262
  br i1 %cmp368, label %for.body370, label %for.end387, !dbg !4263

for.body370:                                      ; preds = %for.cond366
  %316 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4264
  %endian371 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %316, i32 0, i32 13, !dbg !4266
  %317 = load i32, i32* %endian371, align 8, !dbg !4266
  %318 = load i8*, i8** %p.addr, align 8, !dbg !4267
  %call372 = call i8* @PushShortPixel(i32 %317, i8* %318, i16* %pixel331), !dbg !4268
  store i8* %call372, i8** %p.addr, align 8, !dbg !4269
  %319 = load i16, i16* %pixel331, align 2, !dbg !4270
  %conv373 = zext i16 %319 to i32, !dbg !4270
  %shr374 = ashr i32 %conv373, 4, !dbg !4270
  %conv375 = sext i32 %shr374 to i64, !dbg !4270
  %320 = load i64, i64* %range, align 8, !dbg !4270
  %call376 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv375, i64 %320), !dbg !4270
  %321 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4270
  %red377 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %321, i32 0, i32 2, !dbg !4270
  store i16 %call376, i16* %red377, align 2, !dbg !4270
  %322 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4271
  %red378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %322, i32 0, i32 2, !dbg !4271
  %323 = load i16, i16* %red378, align 2, !dbg !4271
  %324 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4271
  %green379 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %324, i32 0, i32 1, !dbg !4271
  store i16 %323, i16* %green379, align 2, !dbg !4271
  %325 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4272
  %red380 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %325, i32 0, i32 2, !dbg !4272
  %326 = load i16, i16* %red380, align 2, !dbg !4272
  %327 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4272
  %blue381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %327, i32 0, i32 0, !dbg !4272
  store i16 %326, i16* %blue381, align 2, !dbg !4272
  %328 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4273
  %pad382 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %328, i32 0, i32 6, !dbg !4274
  %329 = load i64, i64* %pad382, align 8, !dbg !4274
  %330 = load i8*, i8** %p.addr, align 8, !dbg !4275
  %add.ptr383 = getelementptr inbounds i8, i8* %330, i64 %329, !dbg !4275
  store i8* %add.ptr383, i8** %p.addr, align 8, !dbg !4275
  %331 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4276
  %incdec.ptr384 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %331, i32 1, !dbg !4276
  store %struct._PixelPacket* %incdec.ptr384, %struct._PixelPacket** %q.addr, align 8, !dbg !4276
  br label %for.inc385, !dbg !4277

for.inc385:                                       ; preds = %for.body370
  %332 = load i64, i64* %bit, align 8, !dbg !4278
  %inc386 = add nsw i64 %332, 1, !dbg !4278
  store i64 %inc386, i64* %bit, align 8, !dbg !4278
  br label %for.cond366, !dbg !4279, !llvm.loop !4280

for.end387:                                       ; preds = %for.cond366
  %333 = load i64, i64* %bit, align 8, !dbg !4282
  %cmp388 = icmp ne i64 %333, 0, !dbg !4284
  br i1 %cmp388, label %if.then390, label %if.end392, !dbg !4285

if.then390:                                       ; preds = %for.end387
  %334 = load i8*, i8** %p.addr, align 8, !dbg !4286
  %incdec.ptr391 = getelementptr inbounds i8, i8* %334, i32 1, !dbg !4286
  store i8* %incdec.ptr391, i8** %p.addr, align 8, !dbg !4286
  br label %if.end392, !dbg !4287

if.end392:                                        ; preds = %if.then390, %for.end387
  br label %sw.epilog, !dbg !4288

if.end393:                                        ; preds = %sw.bb324
  store i64 0, i64* %x, align 8, !dbg !4289
  br label %for.cond394, !dbg !4291

for.cond394:                                      ; preds = %for.inc409, %if.end393
  %335 = load i64, i64* %x, align 8, !dbg !4292
  %336 = load i64, i64* %number_pixels.addr, align 8, !dbg !4294
  %cmp395 = icmp slt i64 %335, %336, !dbg !4295
  br i1 %cmp395, label %for.body397, label %for.end411, !dbg !4296

for.body397:                                      ; preds = %for.cond394
  %337 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4297
  %338 = load i8*, i8** %p.addr, align 8, !dbg !4299
  %call398 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %337, i8* %338, i32* %pixel), !dbg !4300
  store i8* %call398, i8** %p.addr, align 8, !dbg !4301
  %339 = load i32, i32* %pixel, align 4, !dbg !4302
  %conv399 = zext i32 %339 to i64, !dbg !4302
  %340 = load i64, i64* %range, align 8, !dbg !4302
  %call400 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv399, i64 %340), !dbg !4302
  %341 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4302
  %red401 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %341, i32 0, i32 2, !dbg !4302
  store i16 %call400, i16* %red401, align 2, !dbg !4302
  %342 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4303
  %red402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %342, i32 0, i32 2, !dbg !4303
  %343 = load i16, i16* %red402, align 2, !dbg !4303
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4303
  %green403 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %344, i32 0, i32 1, !dbg !4303
  store i16 %343, i16* %green403, align 2, !dbg !4303
  %345 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4304
  %red404 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %345, i32 0, i32 2, !dbg !4304
  %346 = load i16, i16* %red404, align 2, !dbg !4304
  %347 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4304
  %blue405 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %347, i32 0, i32 0, !dbg !4304
  store i16 %346, i16* %blue405, align 2, !dbg !4304
  %348 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4305
  %pad406 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %348, i32 0, i32 6, !dbg !4306
  %349 = load i64, i64* %pad406, align 8, !dbg !4306
  %350 = load i8*, i8** %p.addr, align 8, !dbg !4307
  %add.ptr407 = getelementptr inbounds i8, i8* %350, i64 %349, !dbg !4307
  store i8* %add.ptr407, i8** %p.addr, align 8, !dbg !4307
  %351 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4308
  %incdec.ptr408 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %351, i32 1, !dbg !4308
  store %struct._PixelPacket* %incdec.ptr408, %struct._PixelPacket** %q.addr, align 8, !dbg !4308
  br label %for.inc409, !dbg !4309

for.inc409:                                       ; preds = %for.body397
  %352 = load i64, i64* %x, align 8, !dbg !4310
  %inc410 = add nsw i64 %352, 1, !dbg !4310
  store i64 %inc410, i64* %x, align 8, !dbg !4310
  br label %for.cond394, !dbg !4311, !llvm.loop !4312

for.end411:                                       ; preds = %for.cond394
  br label %sw.epilog, !dbg !4314

sw.bb412:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel413, metadata !4315, metadata !DIExpression()), !dbg !4317
  %353 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4318
  %min_is_white414 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %353, i32 0, i32 7, !dbg !4320
  %354 = load i32, i32* %min_is_white414, align 8, !dbg !4320
  %cmp415 = icmp ne i32 %354, 0, !dbg !4321
  br i1 %cmp415, label %if.then417, label %if.end439, !dbg !4322

if.then417:                                       ; preds = %sw.bb412
  store i64 0, i64* %x, align 8, !dbg !4323
  br label %for.cond418, !dbg !4326

for.cond418:                                      ; preds = %for.inc436, %if.then417
  %355 = load i64, i64* %x, align 8, !dbg !4327
  %356 = load i64, i64* %number_pixels.addr, align 8, !dbg !4329
  %cmp419 = icmp slt i64 %355, %356, !dbg !4330
  br i1 %cmp419, label %for.body421, label %for.end438, !dbg !4331

for.body421:                                      ; preds = %for.cond418
  %357 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4332
  %endian422 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %357, i32 0, i32 13, !dbg !4334
  %358 = load i32, i32* %endian422, align 8, !dbg !4334
  %359 = load i8*, i8** %p.addr, align 8, !dbg !4335
  %call423 = call i8* @PushShortPixel(i32 %358, i8* %359, i16* %pixel413), !dbg !4336
  store i8* %call423, i8** %p.addr, align 8, !dbg !4337
  %360 = load i16, i16* %pixel413, align 2, !dbg !4338
  %call424 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %360), !dbg !4338
  %conv425 = zext i16 %call424 to i32, !dbg !4338
  %sub426 = sub nsw i32 65535, %conv425, !dbg !4338
  %conv427 = trunc i32 %sub426 to i16, !dbg !4338
  %361 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4338
  %red428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %361, i32 0, i32 2, !dbg !4338
  store i16 %conv427, i16* %red428, align 2, !dbg !4338
  %362 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4339
  %red429 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %362, i32 0, i32 2, !dbg !4339
  %363 = load i16, i16* %red429, align 2, !dbg !4339
  %364 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4339
  %green430 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %364, i32 0, i32 1, !dbg !4339
  store i16 %363, i16* %green430, align 2, !dbg !4339
  %365 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4340
  %red431 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %365, i32 0, i32 2, !dbg !4340
  %366 = load i16, i16* %red431, align 2, !dbg !4340
  %367 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4340
  %blue432 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %367, i32 0, i32 0, !dbg !4340
  store i16 %366, i16* %blue432, align 2, !dbg !4340
  %368 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4341
  %pad433 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %368, i32 0, i32 6, !dbg !4342
  %369 = load i64, i64* %pad433, align 8, !dbg !4342
  %370 = load i8*, i8** %p.addr, align 8, !dbg !4343
  %add.ptr434 = getelementptr inbounds i8, i8* %370, i64 %369, !dbg !4343
  store i8* %add.ptr434, i8** %p.addr, align 8, !dbg !4343
  %371 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4344
  %incdec.ptr435 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %371, i32 1, !dbg !4344
  store %struct._PixelPacket* %incdec.ptr435, %struct._PixelPacket** %q.addr, align 8, !dbg !4344
  br label %for.inc436, !dbg !4345

for.inc436:                                       ; preds = %for.body421
  %372 = load i64, i64* %x, align 8, !dbg !4346
  %inc437 = add nsw i64 %372, 1, !dbg !4346
  store i64 %inc437, i64* %x, align 8, !dbg !4346
  br label %for.cond418, !dbg !4347, !llvm.loop !4348

for.end438:                                       ; preds = %for.cond418
  br label %sw.epilog, !dbg !4350

if.end439:                                        ; preds = %sw.bb412
  %373 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4351
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %373, i32 0, i32 2, !dbg !4353
  %374 = load i32, i32* %format, align 8, !dbg !4353
  %cmp440 = icmp eq i32 %374, 1, !dbg !4354
  br i1 %cmp440, label %if.then442, label %if.end462, !dbg !4355

if.then442:                                       ; preds = %if.end439
  store i64 0, i64* %x, align 8, !dbg !4356
  br label %for.cond443, !dbg !4359

for.cond443:                                      ; preds = %for.inc459, %if.then442
  %375 = load i64, i64* %x, align 8, !dbg !4360
  %376 = load i64, i64* %number_pixels.addr, align 8, !dbg !4362
  %cmp444 = icmp slt i64 %375, %376, !dbg !4363
  br i1 %cmp444, label %for.body446, label %for.end461, !dbg !4364

for.body446:                                      ; preds = %for.cond443
  %377 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4365
  %endian447 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %377, i32 0, i32 13, !dbg !4367
  %378 = load i32, i32* %endian447, align 8, !dbg !4367
  %379 = load i8*, i8** %p.addr, align 8, !dbg !4368
  %call448 = call i8* @PushShortPixel(i32 %378, i8* %379, i16* %pixel413), !dbg !4369
  store i8* %call448, i8** %p.addr, align 8, !dbg !4370
  %380 = load i16, i16* %pixel413, align 2, !dbg !4371
  %call449 = call float @HalfToSinglePrecision(i16 zeroext %380), !dbg !4371
  %mul = fmul float 6.553500e+04, %call449, !dbg !4371
  %call450 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !4371
  %381 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4371
  %red451 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %381, i32 0, i32 2, !dbg !4371
  store i16 %call450, i16* %red451, align 2, !dbg !4371
  %382 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4372
  %red452 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %382, i32 0, i32 2, !dbg !4372
  %383 = load i16, i16* %red452, align 2, !dbg !4372
  %384 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4372
  %green453 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %384, i32 0, i32 1, !dbg !4372
  store i16 %383, i16* %green453, align 2, !dbg !4372
  %385 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4373
  %red454 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %385, i32 0, i32 2, !dbg !4373
  %386 = load i16, i16* %red454, align 2, !dbg !4373
  %387 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4373
  %blue455 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %387, i32 0, i32 0, !dbg !4373
  store i16 %386, i16* %blue455, align 2, !dbg !4373
  %388 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4374
  %pad456 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %388, i32 0, i32 6, !dbg !4375
  %389 = load i64, i64* %pad456, align 8, !dbg !4375
  %390 = load i8*, i8** %p.addr, align 8, !dbg !4376
  %add.ptr457 = getelementptr inbounds i8, i8* %390, i64 %389, !dbg !4376
  store i8* %add.ptr457, i8** %p.addr, align 8, !dbg !4376
  %391 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4377
  %incdec.ptr458 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %391, i32 1, !dbg !4377
  store %struct._PixelPacket* %incdec.ptr458, %struct._PixelPacket** %q.addr, align 8, !dbg !4377
  br label %for.inc459, !dbg !4378

for.inc459:                                       ; preds = %for.body446
  %392 = load i64, i64* %x, align 8, !dbg !4379
  %inc460 = add nsw i64 %392, 1, !dbg !4379
  store i64 %inc460, i64* %x, align 8, !dbg !4379
  br label %for.cond443, !dbg !4380, !llvm.loop !4381

for.end461:                                       ; preds = %for.cond443
  br label %sw.epilog, !dbg !4383

if.end462:                                        ; preds = %if.end439
  store i64 0, i64* %x, align 8, !dbg !4384
  br label %for.cond463, !dbg !4386

for.cond463:                                      ; preds = %for.inc478, %if.end462
  %393 = load i64, i64* %x, align 8, !dbg !4387
  %394 = load i64, i64* %number_pixels.addr, align 8, !dbg !4389
  %cmp464 = icmp slt i64 %393, %394, !dbg !4390
  br i1 %cmp464, label %for.body466, label %for.end480, !dbg !4391

for.body466:                                      ; preds = %for.cond463
  %395 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4392
  %endian467 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %395, i32 0, i32 13, !dbg !4394
  %396 = load i32, i32* %endian467, align 8, !dbg !4394
  %397 = load i8*, i8** %p.addr, align 8, !dbg !4395
  %call468 = call i8* @PushShortPixel(i32 %396, i8* %397, i16* %pixel413), !dbg !4396
  store i8* %call468, i8** %p.addr, align 8, !dbg !4397
  %398 = load i16, i16* %pixel413, align 2, !dbg !4398
  %call469 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %398), !dbg !4398
  %399 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4398
  %red470 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %399, i32 0, i32 2, !dbg !4398
  store i16 %call469, i16* %red470, align 2, !dbg !4398
  %400 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4399
  %red471 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %400, i32 0, i32 2, !dbg !4399
  %401 = load i16, i16* %red471, align 2, !dbg !4399
  %402 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4399
  %green472 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %402, i32 0, i32 1, !dbg !4399
  store i16 %401, i16* %green472, align 2, !dbg !4399
  %403 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4400
  %red473 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %403, i32 0, i32 2, !dbg !4400
  %404 = load i16, i16* %red473, align 2, !dbg !4400
  %405 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4400
  %blue474 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %405, i32 0, i32 0, !dbg !4400
  store i16 %404, i16* %blue474, align 2, !dbg !4400
  %406 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4401
  %pad475 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %406, i32 0, i32 6, !dbg !4402
  %407 = load i64, i64* %pad475, align 8, !dbg !4402
  %408 = load i8*, i8** %p.addr, align 8, !dbg !4403
  %add.ptr476 = getelementptr inbounds i8, i8* %408, i64 %407, !dbg !4403
  store i8* %add.ptr476, i8** %p.addr, align 8, !dbg !4403
  %409 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4404
  %incdec.ptr477 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %409, i32 1, !dbg !4404
  store %struct._PixelPacket* %incdec.ptr477, %struct._PixelPacket** %q.addr, align 8, !dbg !4404
  br label %for.inc478, !dbg !4405

for.inc478:                                       ; preds = %for.body466
  %410 = load i64, i64* %x, align 8, !dbg !4406
  %inc479 = add nsw i64 %410, 1, !dbg !4406
  store i64 %inc479, i64* %x, align 8, !dbg !4406
  br label %for.cond463, !dbg !4407, !llvm.loop !4408

for.end480:                                       ; preds = %for.cond463
  br label %sw.epilog, !dbg !4410

sw.bb481:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel482, metadata !4411, metadata !DIExpression()), !dbg !4413
  %411 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4414
  %format483 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %411, i32 0, i32 2, !dbg !4416
  %412 = load i32, i32* %format483, align 8, !dbg !4416
  %cmp484 = icmp eq i32 %412, 1, !dbg !4417
  br i1 %cmp484, label %if.then486, label %if.end505, !dbg !4418

if.then486:                                       ; preds = %sw.bb481
  call void @llvm.dbg.declare(metadata float* %pixel487, metadata !4419, metadata !DIExpression()), !dbg !4421
  store i64 0, i64* %x, align 8, !dbg !4422
  br label %for.cond488, !dbg !4424

for.cond488:                                      ; preds = %for.inc502, %if.then486
  %413 = load i64, i64* %x, align 8, !dbg !4425
  %414 = load i64, i64* %number_pixels.addr, align 8, !dbg !4427
  %cmp489 = icmp slt i64 %413, %414, !dbg !4428
  br i1 %cmp489, label %for.body491, label %for.end504, !dbg !4429

for.body491:                                      ; preds = %for.cond488
  %415 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4430
  %416 = load i8*, i8** %p.addr, align 8, !dbg !4432
  %call492 = call i8* @PushFloatPixel(%struct._QuantumInfo* %415, i8* %416, float* %pixel487), !dbg !4433
  store i8* %call492, i8** %p.addr, align 8, !dbg !4434
  %417 = load float, float* %pixel487, align 4, !dbg !4435
  %call493 = call zeroext i16 @ClampToQuantum(float %417), !dbg !4435
  %418 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4435
  %red494 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %418, i32 0, i32 2, !dbg !4435
  store i16 %call493, i16* %red494, align 2, !dbg !4435
  %419 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4436
  %red495 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %419, i32 0, i32 2, !dbg !4436
  %420 = load i16, i16* %red495, align 2, !dbg !4436
  %421 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4436
  %green496 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %421, i32 0, i32 1, !dbg !4436
  store i16 %420, i16* %green496, align 2, !dbg !4436
  %422 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4437
  %red497 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %422, i32 0, i32 2, !dbg !4437
  %423 = load i16, i16* %red497, align 2, !dbg !4437
  %424 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4437
  %blue498 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %424, i32 0, i32 0, !dbg !4437
  store i16 %423, i16* %blue498, align 2, !dbg !4437
  %425 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4438
  %pad499 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %425, i32 0, i32 6, !dbg !4439
  %426 = load i64, i64* %pad499, align 8, !dbg !4439
  %427 = load i8*, i8** %p.addr, align 8, !dbg !4440
  %add.ptr500 = getelementptr inbounds i8, i8* %427, i64 %426, !dbg !4440
  store i8* %add.ptr500, i8** %p.addr, align 8, !dbg !4440
  %428 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4441
  %incdec.ptr501 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %428, i32 1, !dbg !4441
  store %struct._PixelPacket* %incdec.ptr501, %struct._PixelPacket** %q.addr, align 8, !dbg !4441
  br label %for.inc502, !dbg !4442

for.inc502:                                       ; preds = %for.body491
  %429 = load i64, i64* %x, align 8, !dbg !4443
  %inc503 = add nsw i64 %429, 1, !dbg !4443
  store i64 %inc503, i64* %x, align 8, !dbg !4443
  br label %for.cond488, !dbg !4444, !llvm.loop !4445

for.end504:                                       ; preds = %for.cond488
  br label %sw.epilog, !dbg !4447

if.end505:                                        ; preds = %sw.bb481
  store i64 0, i64* %x, align 8, !dbg !4448
  br label %for.cond506, !dbg !4450

for.cond506:                                      ; preds = %for.inc521, %if.end505
  %430 = load i64, i64* %x, align 8, !dbg !4451
  %431 = load i64, i64* %number_pixels.addr, align 8, !dbg !4453
  %cmp507 = icmp slt i64 %430, %431, !dbg !4454
  br i1 %cmp507, label %for.body509, label %for.end523, !dbg !4455

for.body509:                                      ; preds = %for.cond506
  %432 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4456
  %endian510 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %432, i32 0, i32 13, !dbg !4458
  %433 = load i32, i32* %endian510, align 8, !dbg !4458
  %434 = load i8*, i8** %p.addr, align 8, !dbg !4459
  %call511 = call i8* @PushLongPixel(i32 %433, i8* %434, i32* %pixel482), !dbg !4460
  store i8* %call511, i8** %p.addr, align 8, !dbg !4461
  %435 = load i32, i32* %pixel482, align 4, !dbg !4462
  %call512 = call zeroext i16 @ScaleLongToQuantum(i32 %435), !dbg !4462
  %436 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4462
  %red513 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %436, i32 0, i32 2, !dbg !4462
  store i16 %call512, i16* %red513, align 2, !dbg !4462
  %437 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4463
  %red514 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %437, i32 0, i32 2, !dbg !4463
  %438 = load i16, i16* %red514, align 2, !dbg !4463
  %439 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4463
  %green515 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %439, i32 0, i32 1, !dbg !4463
  store i16 %438, i16* %green515, align 2, !dbg !4463
  %440 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4464
  %red516 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %440, i32 0, i32 2, !dbg !4464
  %441 = load i16, i16* %red516, align 2, !dbg !4464
  %442 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4464
  %blue517 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %442, i32 0, i32 0, !dbg !4464
  store i16 %441, i16* %blue517, align 2, !dbg !4464
  %443 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4465
  %pad518 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %443, i32 0, i32 6, !dbg !4466
  %444 = load i64, i64* %pad518, align 8, !dbg !4466
  %445 = load i8*, i8** %p.addr, align 8, !dbg !4467
  %add.ptr519 = getelementptr inbounds i8, i8* %445, i64 %444, !dbg !4467
  store i8* %add.ptr519, i8** %p.addr, align 8, !dbg !4467
  %446 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4468
  %incdec.ptr520 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %446, i32 1, !dbg !4468
  store %struct._PixelPacket* %incdec.ptr520, %struct._PixelPacket** %q.addr, align 8, !dbg !4468
  br label %for.inc521, !dbg !4469

for.inc521:                                       ; preds = %for.body509
  %447 = load i64, i64* %x, align 8, !dbg !4470
  %inc522 = add nsw i64 %447, 1, !dbg !4470
  store i64 %inc522, i64* %x, align 8, !dbg !4470
  br label %for.cond506, !dbg !4471, !llvm.loop !4472

for.end523:                                       ; preds = %for.cond506
  br label %sw.epilog, !dbg !4474

sw.bb524:                                         ; preds = %entry
  %448 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4475
  %format525 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %448, i32 0, i32 2, !dbg !4478
  %449 = load i32, i32* %format525, align 8, !dbg !4478
  %cmp526 = icmp eq i32 %449, 1, !dbg !4479
  br i1 %cmp526, label %if.then528, label %if.end548, !dbg !4480

if.then528:                                       ; preds = %sw.bb524
  call void @llvm.dbg.declare(metadata double* %pixel529, metadata !4481, metadata !DIExpression()), !dbg !4483
  store i64 0, i64* %x, align 8, !dbg !4484
  br label %for.cond530, !dbg !4486

for.cond530:                                      ; preds = %for.inc545, %if.then528
  %450 = load i64, i64* %x, align 8, !dbg !4487
  %451 = load i64, i64* %number_pixels.addr, align 8, !dbg !4489
  %cmp531 = icmp slt i64 %450, %451, !dbg !4490
  br i1 %cmp531, label %for.body533, label %for.end547, !dbg !4491

for.body533:                                      ; preds = %for.cond530
  %452 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4492
  %453 = load i8*, i8** %p.addr, align 8, !dbg !4494
  %call534 = call i8* @PushDoublePixel(%struct._QuantumInfo* %452, i8* %453, double* %pixel529), !dbg !4495
  store i8* %call534, i8** %p.addr, align 8, !dbg !4496
  %454 = load double, double* %pixel529, align 8, !dbg !4497
  %conv535 = fptrunc double %454 to float, !dbg !4497
  %call536 = call zeroext i16 @ClampToQuantum(float %conv535), !dbg !4497
  %455 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4497
  %red537 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %455, i32 0, i32 2, !dbg !4497
  store i16 %call536, i16* %red537, align 2, !dbg !4497
  %456 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4498
  %red538 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %456, i32 0, i32 2, !dbg !4498
  %457 = load i16, i16* %red538, align 2, !dbg !4498
  %458 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4498
  %green539 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %458, i32 0, i32 1, !dbg !4498
  store i16 %457, i16* %green539, align 2, !dbg !4498
  %459 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4499
  %red540 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %459, i32 0, i32 2, !dbg !4499
  %460 = load i16, i16* %red540, align 2, !dbg !4499
  %461 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4499
  %blue541 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %461, i32 0, i32 0, !dbg !4499
  store i16 %460, i16* %blue541, align 2, !dbg !4499
  %462 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4500
  %pad542 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %462, i32 0, i32 6, !dbg !4501
  %463 = load i64, i64* %pad542, align 8, !dbg !4501
  %464 = load i8*, i8** %p.addr, align 8, !dbg !4502
  %add.ptr543 = getelementptr inbounds i8, i8* %464, i64 %463, !dbg !4502
  store i8* %add.ptr543, i8** %p.addr, align 8, !dbg !4502
  %465 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4503
  %incdec.ptr544 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %465, i32 1, !dbg !4503
  store %struct._PixelPacket* %incdec.ptr544, %struct._PixelPacket** %q.addr, align 8, !dbg !4503
  br label %for.inc545, !dbg !4504

for.inc545:                                       ; preds = %for.body533
  %466 = load i64, i64* %x, align 8, !dbg !4505
  %inc546 = add nsw i64 %466, 1, !dbg !4505
  store i64 %inc546, i64* %x, align 8, !dbg !4505
  br label %for.cond530, !dbg !4506, !llvm.loop !4507

for.end547:                                       ; preds = %for.cond530
  br label %sw.epilog, !dbg !4509

if.end548:                                        ; preds = %sw.bb524
  br label %sw.default, !dbg !4510

sw.default:                                       ; preds = %entry, %if.end548
  %467 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4511
  %depth549 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %467, i32 0, i32 0, !dbg !4513
  %468 = load i64, i64* %depth549, align 8, !dbg !4513
  %call550 = call i64 @GetQuantumRange(i64 %468), !dbg !4514
  store i64 %call550, i64* %range, align 8, !dbg !4515
  store i64 0, i64* %x, align 8, !dbg !4516
  br label %for.cond551, !dbg !4518

for.cond551:                                      ; preds = %for.inc566, %sw.default
  %469 = load i64, i64* %x, align 8, !dbg !4519
  %470 = load i64, i64* %number_pixels.addr, align 8, !dbg !4521
  %cmp552 = icmp slt i64 %469, %470, !dbg !4522
  br i1 %cmp552, label %for.body554, label %for.end568, !dbg !4523

for.body554:                                      ; preds = %for.cond551
  %471 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4524
  %472 = load i8*, i8** %p.addr, align 8, !dbg !4526
  %call555 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %471, i8* %472, i32* %pixel), !dbg !4527
  store i8* %call555, i8** %p.addr, align 8, !dbg !4528
  %473 = load i32, i32* %pixel, align 4, !dbg !4529
  %conv556 = zext i32 %473 to i64, !dbg !4529
  %474 = load i64, i64* %range, align 8, !dbg !4529
  %call557 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv556, i64 %474), !dbg !4529
  %475 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4529
  %red558 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %475, i32 0, i32 2, !dbg !4529
  store i16 %call557, i16* %red558, align 2, !dbg !4529
  %476 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4530
  %red559 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %476, i32 0, i32 2, !dbg !4530
  %477 = load i16, i16* %red559, align 2, !dbg !4530
  %478 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4530
  %green560 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %478, i32 0, i32 1, !dbg !4530
  store i16 %477, i16* %green560, align 2, !dbg !4530
  %479 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4531
  %red561 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %479, i32 0, i32 2, !dbg !4531
  %480 = load i16, i16* %red561, align 2, !dbg !4531
  %481 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4531
  %blue562 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %481, i32 0, i32 0, !dbg !4531
  store i16 %480, i16* %blue562, align 2, !dbg !4531
  %482 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4532
  %pad563 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %482, i32 0, i32 6, !dbg !4533
  %483 = load i64, i64* %pad563, align 8, !dbg !4533
  %484 = load i8*, i8** %p.addr, align 8, !dbg !4534
  %add.ptr564 = getelementptr inbounds i8, i8* %484, i64 %483, !dbg !4534
  store i8* %add.ptr564, i8** %p.addr, align 8, !dbg !4534
  %485 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4535
  %incdec.ptr565 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %485, i32 1, !dbg !4535
  store %struct._PixelPacket* %incdec.ptr565, %struct._PixelPacket** %q.addr, align 8, !dbg !4535
  br label %for.inc566, !dbg !4536

for.inc566:                                       ; preds = %for.body554
  %486 = load i64, i64* %x, align 8, !dbg !4537
  %inc567 = add nsw i64 %486, 1, !dbg !4537
  store i64 %inc567, i64* %x, align 8, !dbg !4537
  br label %for.cond551, !dbg !4538, !llvm.loop !4539

for.end568:                                       ; preds = %for.cond551
  br label %sw.epilog, !dbg !4541

sw.epilog:                                        ; preds = %for.end568, %for.end547, %for.end523, %for.end504, %for.end480, %for.end461, %for.end438, %for.end411, %if.end392, %for.end323, %if.end304, %if.end228, %for.end144, %for.end125, %for.end101, %if.end47
  ret void, !dbg !4542
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportGrayAlphaQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !4543 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel80 = alloca i8, align 1
  %pixel110 = alloca i8, align 1
  %pixel183 = alloca i16, align 2
  %pixel241 = alloca i32, align 4
  %pixel246 = alloca float, align 4
  %pixel301 = alloca double, align 8
  %range328 = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !4546, metadata !DIExpression()), !dbg !4547
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.declare(metadata i64* %range, metadata !4552, metadata !DIExpression()), !dbg !4553
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4554, metadata !DIExpression()), !dbg !4555
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !4556, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !4558, metadata !DIExpression()), !dbg !4559
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4560
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !4561
  %1 = load i64, i64* %depth, align 8, !dbg !4561
  switch i64 %1, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb79
    i64 8, label %sw.bb109
    i64 10, label %sw.bb132
    i64 12, label %sw.bb157
    i64 16, label %sw.bb182
    i64 32, label %sw.bb240
    i64 64, label %sw.bb296
  ], !dbg !4562

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !4563, metadata !DIExpression()), !dbg !4566
  store i64 0, i64* %bit, align 8, !dbg !4567
  %2 = load i64, i64* %number_pixels.addr, align 8, !dbg !4568
  %sub = sub nsw i64 %2, 3, !dbg !4570
  store i64 %sub, i64* %x, align 8, !dbg !4571
  br label %for.cond, !dbg !4572

for.cond:                                         ; preds = %for.inc28, %sw.bb
  %3 = load i64, i64* %x, align 8, !dbg !4573
  %cmp = icmp sgt i64 %3, 0, !dbg !4575
  br i1 %cmp, label %for.body, label %for.end30, !dbg !4576

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !4577
  br label %for.cond2, !dbg !4580

for.cond2:                                        ; preds = %for.inc, %for.body
  %4 = load i64, i64* %bit, align 8, !dbg !4581
  %cmp3 = icmp slt i64 %4, 8, !dbg !4583
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !4584

for.body4:                                        ; preds = %for.cond2
  %5 = load i8*, i8** %p.addr, align 8, !dbg !4585
  %6 = load i8, i8* %5, align 1, !dbg !4587
  %conv = zext i8 %6 to i32, !dbg !4588
  %7 = load i64, i64* %bit, align 8, !dbg !4589
  %sub5 = sub nsw i64 7, %7, !dbg !4590
  %sh_prom = trunc i64 %sub5 to i32, !dbg !4591
  %shl = shl i32 1, %sh_prom, !dbg !4591
  %and = and i32 %conv, %shl, !dbg !4592
  %cmp6 = icmp ne i32 %and, 0, !dbg !4593
  %8 = zext i1 %cmp6 to i64, !dbg !4594
  %cond = select i1 %cmp6, i32 0, i32 1, !dbg !4594
  %conv8 = trunc i32 %cond to i8, !dbg !4595
  store i8 %conv8, i8* %pixel1, align 1, !dbg !4596
  %9 = load i8, i8* %pixel1, align 1, !dbg !4597
  %conv9 = zext i8 %9 to i32, !dbg !4597
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !4597
  %10 = zext i1 %cmp10 to i64, !dbg !4597
  %cond12 = select i1 %cmp10, i32 0, i32 65535, !dbg !4597
  %conv13 = trunc i32 %cond12 to i16, !dbg !4597
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4597
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 2, !dbg !4597
  store i16 %conv13, i16* %red, align 2, !dbg !4597
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4598
  %red14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 2, !dbg !4598
  %13 = load i16, i16* %red14, align 2, !dbg !4598
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4598
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 1, !dbg !4598
  store i16 %13, i16* %green, align 2, !dbg !4598
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4599
  %red15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 2, !dbg !4599
  %16 = load i16, i16* %red15, align 2, !dbg !4599
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4599
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 0, !dbg !4599
  store i16 %16, i16* %blue, align 2, !dbg !4599
  %18 = load i8*, i8** %p.addr, align 8, !dbg !4600
  %19 = load i8, i8* %18, align 1, !dbg !4600
  %conv16 = zext i8 %19 to i64, !dbg !4600
  %20 = load i64, i64* %bit, align 8, !dbg !4600
  %sub17 = sub nsw i64 6, %20, !dbg !4600
  %conv18 = trunc i64 %sub17 to i8, !dbg !4600
  %conv19 = zext i8 %conv18 to i32, !dbg !4600
  %sh_prom20 = zext i32 %conv19 to i64, !dbg !4600
  %shl21 = shl i64 1, %sh_prom20, !dbg !4600
  %and22 = and i64 %conv16, %shl21, !dbg !4600
  %cmp23 = icmp eq i64 %and22, 0, !dbg !4600
  %21 = zext i1 %cmp23 to i64, !dbg !4600
  %cond25 = select i1 %cmp23, i32 65535, i32 0, !dbg !4600
  %conv26 = trunc i32 %cond25 to i16, !dbg !4600
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4600
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 3, !dbg !4600
  store i16 %conv26, i16* %opacity, align 2, !dbg !4600
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4601
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !4601
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !4601
  br label %for.inc, !dbg !4602

for.inc:                                          ; preds = %for.body4
  %24 = load i64, i64* %bit, align 8, !dbg !4603
  %add = add nsw i64 %24, 2, !dbg !4603
  store i64 %add, i64* %bit, align 8, !dbg !4603
  br label %for.cond2, !dbg !4604, !llvm.loop !4605

for.end:                                          ; preds = %for.cond2
  %25 = load i8*, i8** %p.addr, align 8, !dbg !4607
  %incdec.ptr27 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !4607
  store i8* %incdec.ptr27, i8** %p.addr, align 8, !dbg !4607
  br label %for.inc28, !dbg !4608

for.inc28:                                        ; preds = %for.end
  %26 = load i64, i64* %x, align 8, !dbg !4609
  %sub29 = sub nsw i64 %26, 4, !dbg !4609
  store i64 %sub29, i64* %x, align 8, !dbg !4609
  br label %for.cond, !dbg !4610, !llvm.loop !4611

for.end30:                                        ; preds = %for.cond
  %27 = load i64, i64* %number_pixels.addr, align 8, !dbg !4613
  %rem = urem i64 %27, 4, !dbg !4615
  %cmp31 = icmp ne i64 %rem, 0, !dbg !4616
  br i1 %cmp31, label %if.then, label %if.end, !dbg !4617

if.then:                                          ; preds = %for.end30
  store i64 3, i64* %bit, align 8, !dbg !4618
  br label %for.cond33, !dbg !4620

for.cond33:                                       ; preds = %for.inc71, %if.then
  %28 = load i64, i64* %bit, align 8, !dbg !4621
  %29 = load i64, i64* %number_pixels.addr, align 8, !dbg !4623
  %rem34 = urem i64 %29, 4, !dbg !4624
  %sub35 = sub i64 4, %rem34, !dbg !4625
  %cmp36 = icmp sge i64 %28, %sub35, !dbg !4626
  br i1 %cmp36, label %for.body38, label %for.end73, !dbg !4627

for.body38:                                       ; preds = %for.cond33
  %30 = load i8*, i8** %p.addr, align 8, !dbg !4628
  %31 = load i8, i8* %30, align 1, !dbg !4630
  %conv39 = zext i8 %31 to i32, !dbg !4631
  %32 = load i64, i64* %bit, align 8, !dbg !4632
  %sub40 = sub nsw i64 7, %32, !dbg !4633
  %sh_prom41 = trunc i64 %sub40 to i32, !dbg !4634
  %shl42 = shl i32 1, %sh_prom41, !dbg !4634
  %and43 = and i32 %conv39, %shl42, !dbg !4635
  %cmp44 = icmp ne i32 %and43, 0, !dbg !4636
  %33 = zext i1 %cmp44 to i64, !dbg !4637
  %cond46 = select i1 %cmp44, i32 0, i32 1, !dbg !4637
  %conv47 = trunc i32 %cond46 to i8, !dbg !4638
  store i8 %conv47, i8* %pixel1, align 1, !dbg !4639
  %34 = load i8, i8* %pixel1, align 1, !dbg !4640
  %conv48 = zext i8 %34 to i32, !dbg !4640
  %cmp49 = icmp ne i32 %conv48, 0, !dbg !4640
  %35 = zext i1 %cmp49 to i64, !dbg !4640
  %cond51 = select i1 %cmp49, i32 0, i32 65535, !dbg !4640
  %conv52 = trunc i32 %cond51 to i16, !dbg !4640
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4640
  %red53 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !4640
  store i16 %conv52, i16* %red53, align 2, !dbg !4640
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4641
  %red54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 2, !dbg !4641
  %38 = load i16, i16* %red54, align 2, !dbg !4641
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4641
  %green55 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !4641
  store i16 %38, i16* %green55, align 2, !dbg !4641
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4642
  %red56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 2, !dbg !4642
  %41 = load i16, i16* %red56, align 2, !dbg !4642
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4642
  %blue57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i32 0, i32 0, !dbg !4642
  store i16 %41, i16* %blue57, align 2, !dbg !4642
  %43 = load i8*, i8** %p.addr, align 8, !dbg !4643
  %44 = load i8, i8* %43, align 1, !dbg !4643
  %conv58 = zext i8 %44 to i64, !dbg !4643
  %45 = load i64, i64* %bit, align 8, !dbg !4643
  %sub59 = sub nsw i64 6, %45, !dbg !4643
  %conv60 = trunc i64 %sub59 to i8, !dbg !4643
  %conv61 = zext i8 %conv60 to i32, !dbg !4643
  %sh_prom62 = zext i32 %conv61 to i64, !dbg !4643
  %shl63 = shl i64 1, %sh_prom62, !dbg !4643
  %and64 = and i64 %conv58, %shl63, !dbg !4643
  %cmp65 = icmp eq i64 %and64, 0, !dbg !4643
  %46 = zext i1 %cmp65 to i64, !dbg !4643
  %cond67 = select i1 %cmp65, i32 65535, i32 0, !dbg !4643
  %conv68 = trunc i32 %cond67 to i16, !dbg !4643
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4643
  %opacity69 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 0, i32 3, !dbg !4643
  store i16 %conv68, i16* %opacity69, align 2, !dbg !4643
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4644
  %incdec.ptr70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 1, !dbg !4644
  store %struct._PixelPacket* %incdec.ptr70, %struct._PixelPacket** %q.addr, align 8, !dbg !4644
  br label %for.inc71, !dbg !4645

for.inc71:                                        ; preds = %for.body38
  %49 = load i64, i64* %bit, align 8, !dbg !4646
  %sub72 = sub nsw i64 %49, 2, !dbg !4646
  store i64 %sub72, i64* %bit, align 8, !dbg !4646
  br label %for.cond33, !dbg !4647, !llvm.loop !4648

for.end73:                                        ; preds = %for.cond33
  br label %if.end, !dbg !4649

if.end:                                           ; preds = %for.end73, %for.end30
  %50 = load i64, i64* %bit, align 8, !dbg !4650
  %cmp74 = icmp ne i64 %50, 0, !dbg !4652
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !4653

if.then76:                                        ; preds = %if.end
  %51 = load i8*, i8** %p.addr, align 8, !dbg !4654
  %incdec.ptr77 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !4654
  store i8* %incdec.ptr77, i8** %p.addr, align 8, !dbg !4654
  br label %if.end78, !dbg !4655

if.end78:                                         ; preds = %if.then76, %if.end
  br label %sw.epilog, !dbg !4656

sw.bb79:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel80, metadata !4657, metadata !DIExpression()), !dbg !4659
  %52 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4660
  %depth81 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %52, i32 0, i32 0, !dbg !4661
  %53 = load i64, i64* %depth81, align 8, !dbg !4661
  %call = call i64 @GetQuantumRange(i64 %53), !dbg !4662
  store i64 %call, i64* %range, align 8, !dbg !4663
  store i64 0, i64* %x, align 8, !dbg !4664
  br label %for.cond82, !dbg !4666

for.cond82:                                       ; preds = %for.inc107, %sw.bb79
  %54 = load i64, i64* %x, align 8, !dbg !4667
  %55 = load i64, i64* %number_pixels.addr, align 8, !dbg !4669
  %cmp83 = icmp slt i64 %54, %55, !dbg !4670
  br i1 %cmp83, label %for.body85, label %for.end108, !dbg !4671

for.body85:                                       ; preds = %for.cond82
  %56 = load i8*, i8** %p.addr, align 8, !dbg !4672
  %57 = load i8, i8* %56, align 1, !dbg !4674
  %conv86 = zext i8 %57 to i32, !dbg !4674
  %shr = ashr i32 %conv86, 4, !dbg !4675
  %and87 = and i32 %shr, 15, !dbg !4676
  %conv88 = trunc i32 %and87 to i8, !dbg !4677
  store i8 %conv88, i8* %pixel80, align 1, !dbg !4678
  %58 = load i8, i8* %pixel80, align 1, !dbg !4679
  %conv89 = zext i8 %58 to i64, !dbg !4679
  %59 = load i64, i64* %range, align 8, !dbg !4679
  %call90 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv89, i64 %59), !dbg !4679
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4679
  %red91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 2, !dbg !4679
  store i16 %call90, i16* %red91, align 2, !dbg !4679
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4680
  %red92 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !4680
  %62 = load i16, i16* %red92, align 2, !dbg !4680
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4680
  %green93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 1, !dbg !4680
  store i16 %62, i16* %green93, align 2, !dbg !4680
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4681
  %red94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 0, i32 2, !dbg !4681
  %65 = load i16, i16* %red94, align 2, !dbg !4681
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4681
  %blue95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 0, !dbg !4681
  store i16 %65, i16* %blue95, align 2, !dbg !4681
  %67 = load i8*, i8** %p.addr, align 8, !dbg !4682
  %68 = load i8, i8* %67, align 1, !dbg !4683
  %conv96 = zext i8 %68 to i32, !dbg !4684
  %and97 = and i32 %conv96, 15, !dbg !4685
  %conv98 = trunc i32 %and97 to i8, !dbg !4686
  store i8 %conv98, i8* %pixel80, align 1, !dbg !4687
  %69 = load i8, i8* %pixel80, align 1, !dbg !4688
  %conv99 = zext i8 %69 to i64, !dbg !4688
  %70 = load i64, i64* %range, align 8, !dbg !4688
  %call100 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv99, i64 %70), !dbg !4688
  %conv101 = zext i16 %call100 to i32, !dbg !4688
  %sub102 = sub nsw i32 65535, %conv101, !dbg !4688
  %conv103 = trunc i32 %sub102 to i16, !dbg !4688
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4688
  %opacity104 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 3, !dbg !4688
  store i16 %conv103, i16* %opacity104, align 2, !dbg !4688
  %72 = load i8*, i8** %p.addr, align 8, !dbg !4689
  %incdec.ptr105 = getelementptr inbounds i8, i8* %72, i32 1, !dbg !4689
  store i8* %incdec.ptr105, i8** %p.addr, align 8, !dbg !4689
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4690
  %incdec.ptr106 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 1, !dbg !4690
  store %struct._PixelPacket* %incdec.ptr106, %struct._PixelPacket** %q.addr, align 8, !dbg !4690
  br label %for.inc107, !dbg !4691

for.inc107:                                       ; preds = %for.body85
  %74 = load i64, i64* %x, align 8, !dbg !4692
  %inc = add nsw i64 %74, 1, !dbg !4692
  store i64 %inc, i64* %x, align 8, !dbg !4692
  br label %for.cond82, !dbg !4693, !llvm.loop !4694

for.end108:                                       ; preds = %for.cond82
  br label %sw.epilog, !dbg !4696

sw.bb109:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel110, metadata !4697, metadata !DIExpression()), !dbg !4699
  store i64 0, i64* %x, align 8, !dbg !4700
  br label %for.cond111, !dbg !4702

for.cond111:                                      ; preds = %for.inc129, %sw.bb109
  %75 = load i64, i64* %x, align 8, !dbg !4703
  %76 = load i64, i64* %number_pixels.addr, align 8, !dbg !4705
  %cmp112 = icmp slt i64 %75, %76, !dbg !4706
  br i1 %cmp112, label %for.body114, label %for.end131, !dbg !4707

for.body114:                                      ; preds = %for.cond111
  %77 = load i8*, i8** %p.addr, align 8, !dbg !4708
  %call115 = call i8* @PushCharPixel(i8* %77, i8* %pixel110), !dbg !4710
  store i8* %call115, i8** %p.addr, align 8, !dbg !4711
  %78 = load i8, i8* %pixel110, align 1, !dbg !4712
  %call116 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %78), !dbg !4712
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4712
  %red117 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 2, !dbg !4712
  store i16 %call116, i16* %red117, align 2, !dbg !4712
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4713
  %red118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 2, !dbg !4713
  %81 = load i16, i16* %red118, align 2, !dbg !4713
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4713
  %green119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 1, !dbg !4713
  store i16 %81, i16* %green119, align 2, !dbg !4713
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4714
  %red120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 2, !dbg !4714
  %84 = load i16, i16* %red120, align 2, !dbg !4714
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4714
  %blue121 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 0, i32 0, !dbg !4714
  store i16 %84, i16* %blue121, align 2, !dbg !4714
  %86 = load i8*, i8** %p.addr, align 8, !dbg !4715
  %call122 = call i8* @PushCharPixel(i8* %86, i8* %pixel110), !dbg !4716
  store i8* %call122, i8** %p.addr, align 8, !dbg !4717
  %87 = load i8, i8* %pixel110, align 1, !dbg !4718
  %call123 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %87), !dbg !4718
  %conv124 = zext i16 %call123 to i32, !dbg !4718
  %sub125 = sub nsw i32 65535, %conv124, !dbg !4718
  %conv126 = trunc i32 %sub125 to i16, !dbg !4718
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4718
  %opacity127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 3, !dbg !4718
  store i16 %conv126, i16* %opacity127, align 2, !dbg !4718
  %89 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4719
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %89, i32 0, i32 6, !dbg !4720
  %90 = load i64, i64* %pad, align 8, !dbg !4720
  %91 = load i8*, i8** %p.addr, align 8, !dbg !4721
  %add.ptr = getelementptr inbounds i8, i8* %91, i64 %90, !dbg !4721
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !4721
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4722
  %incdec.ptr128 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 1, !dbg !4722
  store %struct._PixelPacket* %incdec.ptr128, %struct._PixelPacket** %q.addr, align 8, !dbg !4722
  br label %for.inc129, !dbg !4723

for.inc129:                                       ; preds = %for.body114
  %93 = load i64, i64* %x, align 8, !dbg !4724
  %inc130 = add nsw i64 %93, 1, !dbg !4724
  store i64 %inc130, i64* %x, align 8, !dbg !4724
  br label %for.cond111, !dbg !4725, !llvm.loop !4726

for.end131:                                       ; preds = %for.cond111
  br label %sw.epilog, !dbg !4728

sw.bb132:                                         ; preds = %entry
  %94 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4729
  %depth133 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %94, i32 0, i32 0, !dbg !4731
  %95 = load i64, i64* %depth133, align 8, !dbg !4731
  %call134 = call i64 @GetQuantumRange(i64 %95), !dbg !4732
  store i64 %call134, i64* %range, align 8, !dbg !4733
  store i64 0, i64* %x, align 8, !dbg !4734
  br label %for.cond135, !dbg !4736

for.cond135:                                      ; preds = %for.inc154, %sw.bb132
  %96 = load i64, i64* %x, align 8, !dbg !4737
  %97 = load i64, i64* %number_pixels.addr, align 8, !dbg !4739
  %cmp136 = icmp slt i64 %96, %97, !dbg !4740
  br i1 %cmp136, label %for.body138, label %for.end156, !dbg !4741

for.body138:                                      ; preds = %for.cond135
  %98 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4742
  %99 = load i8*, i8** %p.addr, align 8, !dbg !4744
  %call139 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %98, i8* %99, i32* %pixel), !dbg !4745
  store i8* %call139, i8** %p.addr, align 8, !dbg !4746
  %100 = load i32, i32* %pixel, align 4, !dbg !4747
  %conv140 = zext i32 %100 to i64, !dbg !4747
  %101 = load i64, i64* %range, align 8, !dbg !4747
  %call141 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv140, i64 %101), !dbg !4747
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4747
  %red142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 2, !dbg !4747
  store i16 %call141, i16* %red142, align 2, !dbg !4747
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4748
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 0, i32 2, !dbg !4748
  %104 = load i16, i16* %red143, align 2, !dbg !4748
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4748
  %green144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 1, !dbg !4748
  store i16 %104, i16* %green144, align 2, !dbg !4748
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4749
  %red145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 2, !dbg !4749
  %107 = load i16, i16* %red145, align 2, !dbg !4749
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4749
  %blue146 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 0, !dbg !4749
  store i16 %107, i16* %blue146, align 2, !dbg !4749
  %109 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4750
  %110 = load i8*, i8** %p.addr, align 8, !dbg !4751
  %call147 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %109, i8* %110, i32* %pixel), !dbg !4752
  store i8* %call147, i8** %p.addr, align 8, !dbg !4753
  %111 = load i32, i32* %pixel, align 4, !dbg !4754
  %conv148 = zext i32 %111 to i64, !dbg !4754
  %112 = load i64, i64* %range, align 8, !dbg !4754
  %call149 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv148, i64 %112), !dbg !4754
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4754
  %opacity150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 3, !dbg !4754
  store i16 %call149, i16* %opacity150, align 2, !dbg !4754
  %114 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4755
  %pad151 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %114, i32 0, i32 6, !dbg !4756
  %115 = load i64, i64* %pad151, align 8, !dbg !4756
  %116 = load i8*, i8** %p.addr, align 8, !dbg !4757
  %add.ptr152 = getelementptr inbounds i8, i8* %116, i64 %115, !dbg !4757
  store i8* %add.ptr152, i8** %p.addr, align 8, !dbg !4757
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4758
  %incdec.ptr153 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %117, i32 1, !dbg !4758
  store %struct._PixelPacket* %incdec.ptr153, %struct._PixelPacket** %q.addr, align 8, !dbg !4758
  br label %for.inc154, !dbg !4759

for.inc154:                                       ; preds = %for.body138
  %118 = load i64, i64* %x, align 8, !dbg !4760
  %inc155 = add nsw i64 %118, 1, !dbg !4760
  store i64 %inc155, i64* %x, align 8, !dbg !4760
  br label %for.cond135, !dbg !4761, !llvm.loop !4762

for.end156:                                       ; preds = %for.cond135
  br label %sw.epilog, !dbg !4764

sw.bb157:                                         ; preds = %entry
  %119 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4765
  %depth158 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %119, i32 0, i32 0, !dbg !4767
  %120 = load i64, i64* %depth158, align 8, !dbg !4767
  %call159 = call i64 @GetQuantumRange(i64 %120), !dbg !4768
  store i64 %call159, i64* %range, align 8, !dbg !4769
  store i64 0, i64* %x, align 8, !dbg !4770
  br label %for.cond160, !dbg !4772

for.cond160:                                      ; preds = %for.inc179, %sw.bb157
  %121 = load i64, i64* %x, align 8, !dbg !4773
  %122 = load i64, i64* %number_pixels.addr, align 8, !dbg !4775
  %cmp161 = icmp slt i64 %121, %122, !dbg !4776
  br i1 %cmp161, label %for.body163, label %for.end181, !dbg !4777

for.body163:                                      ; preds = %for.cond160
  %123 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4778
  %124 = load i8*, i8** %p.addr, align 8, !dbg !4780
  %call164 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %123, i8* %124, i32* %pixel), !dbg !4781
  store i8* %call164, i8** %p.addr, align 8, !dbg !4782
  %125 = load i32, i32* %pixel, align 4, !dbg !4783
  %conv165 = zext i32 %125 to i64, !dbg !4783
  %126 = load i64, i64* %range, align 8, !dbg !4783
  %call166 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv165, i64 %126), !dbg !4783
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4783
  %red167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 2, !dbg !4783
  store i16 %call166, i16* %red167, align 2, !dbg !4783
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4784
  %red168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 2, !dbg !4784
  %129 = load i16, i16* %red168, align 2, !dbg !4784
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4784
  %green169 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 1, !dbg !4784
  store i16 %129, i16* %green169, align 2, !dbg !4784
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4785
  %red170 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 2, !dbg !4785
  %132 = load i16, i16* %red170, align 2, !dbg !4785
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4785
  %blue171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 0, !dbg !4785
  store i16 %132, i16* %blue171, align 2, !dbg !4785
  %134 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4786
  %135 = load i8*, i8** %p.addr, align 8, !dbg !4787
  %call172 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %134, i8* %135, i32* %pixel), !dbg !4788
  store i8* %call172, i8** %p.addr, align 8, !dbg !4789
  %136 = load i32, i32* %pixel, align 4, !dbg !4790
  %conv173 = zext i32 %136 to i64, !dbg !4790
  %137 = load i64, i64* %range, align 8, !dbg !4790
  %call174 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv173, i64 %137), !dbg !4790
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4790
  %opacity175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 3, !dbg !4790
  store i16 %call174, i16* %opacity175, align 2, !dbg !4790
  %139 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4791
  %pad176 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %139, i32 0, i32 6, !dbg !4792
  %140 = load i64, i64* %pad176, align 8, !dbg !4792
  %141 = load i8*, i8** %p.addr, align 8, !dbg !4793
  %add.ptr177 = getelementptr inbounds i8, i8* %141, i64 %140, !dbg !4793
  store i8* %add.ptr177, i8** %p.addr, align 8, !dbg !4793
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4794
  %incdec.ptr178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 1, !dbg !4794
  store %struct._PixelPacket* %incdec.ptr178, %struct._PixelPacket** %q.addr, align 8, !dbg !4794
  br label %for.inc179, !dbg !4795

for.inc179:                                       ; preds = %for.body163
  %143 = load i64, i64* %x, align 8, !dbg !4796
  %inc180 = add nsw i64 %143, 1, !dbg !4796
  store i64 %inc180, i64* %x, align 8, !dbg !4796
  br label %for.cond160, !dbg !4797, !llvm.loop !4798

for.end181:                                       ; preds = %for.cond160
  br label %sw.epilog, !dbg !4800

sw.bb182:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel183, metadata !4801, metadata !DIExpression()), !dbg !4803
  %144 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4804
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %144, i32 0, i32 2, !dbg !4806
  %145 = load i32, i32* %format, align 8, !dbg !4806
  %cmp184 = icmp eq i32 %145, 1, !dbg !4807
  br i1 %cmp184, label %if.then186, label %if.end214, !dbg !4808

if.then186:                                       ; preds = %sw.bb182
  store i64 0, i64* %x, align 8, !dbg !4809
  br label %for.cond187, !dbg !4812

for.cond187:                                      ; preds = %for.inc211, %if.then186
  %146 = load i64, i64* %x, align 8, !dbg !4813
  %147 = load i64, i64* %number_pixels.addr, align 8, !dbg !4815
  %cmp188 = icmp slt i64 %146, %147, !dbg !4816
  br i1 %cmp188, label %for.body190, label %for.end213, !dbg !4817

for.body190:                                      ; preds = %for.cond187
  %148 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4818
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %148, i32 0, i32 13, !dbg !4820
  %149 = load i32, i32* %endian, align 8, !dbg !4820
  %150 = load i8*, i8** %p.addr, align 8, !dbg !4821
  %call191 = call i8* @PushShortPixel(i32 %149, i8* %150, i16* %pixel183), !dbg !4822
  store i8* %call191, i8** %p.addr, align 8, !dbg !4823
  %151 = load i16, i16* %pixel183, align 2, !dbg !4824
  %call192 = call float @HalfToSinglePrecision(i16 zeroext %151), !dbg !4824
  %mul = fmul float 6.553500e+04, %call192, !dbg !4824
  %call193 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !4824
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4824
  %red194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 0, i32 2, !dbg !4824
  store i16 %call193, i16* %red194, align 2, !dbg !4824
  %153 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4825
  %red195 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %153, i32 0, i32 2, !dbg !4825
  %154 = load i16, i16* %red195, align 2, !dbg !4825
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4825
  %green196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %155, i32 0, i32 1, !dbg !4825
  store i16 %154, i16* %green196, align 2, !dbg !4825
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4826
  %red197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 2, !dbg !4826
  %157 = load i16, i16* %red197, align 2, !dbg !4826
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4826
  %blue198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 0, i32 0, !dbg !4826
  store i16 %157, i16* %blue198, align 2, !dbg !4826
  %159 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4827
  %endian199 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %159, i32 0, i32 13, !dbg !4828
  %160 = load i32, i32* %endian199, align 8, !dbg !4828
  %161 = load i8*, i8** %p.addr, align 8, !dbg !4829
  %call200 = call i8* @PushShortPixel(i32 %160, i8* %161, i16* %pixel183), !dbg !4830
  store i8* %call200, i8** %p.addr, align 8, !dbg !4831
  %162 = load i16, i16* %pixel183, align 2, !dbg !4832
  %call201 = call float @HalfToSinglePrecision(i16 zeroext %162), !dbg !4832
  %mul202 = fmul float 6.553500e+04, %call201, !dbg !4832
  %call203 = call zeroext i16 @ClampToQuantum(float %mul202), !dbg !4832
  %conv204 = zext i16 %call203 to i32, !dbg !4832
  %sub205 = sub nsw i32 65535, %conv204, !dbg !4832
  %conv206 = trunc i32 %sub205 to i16, !dbg !4832
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4832
  %opacity207 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 0, i32 3, !dbg !4832
  store i16 %conv206, i16* %opacity207, align 2, !dbg !4832
  %164 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4833
  %pad208 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %164, i32 0, i32 6, !dbg !4834
  %165 = load i64, i64* %pad208, align 8, !dbg !4834
  %166 = load i8*, i8** %p.addr, align 8, !dbg !4835
  %add.ptr209 = getelementptr inbounds i8, i8* %166, i64 %165, !dbg !4835
  store i8* %add.ptr209, i8** %p.addr, align 8, !dbg !4835
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4836
  %incdec.ptr210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 1, !dbg !4836
  store %struct._PixelPacket* %incdec.ptr210, %struct._PixelPacket** %q.addr, align 8, !dbg !4836
  br label %for.inc211, !dbg !4837

for.inc211:                                       ; preds = %for.body190
  %168 = load i64, i64* %x, align 8, !dbg !4838
  %inc212 = add nsw i64 %168, 1, !dbg !4838
  store i64 %inc212, i64* %x, align 8, !dbg !4838
  br label %for.cond187, !dbg !4839, !llvm.loop !4840

for.end213:                                       ; preds = %for.cond187
  br label %sw.epilog, !dbg !4842

if.end214:                                        ; preds = %sw.bb182
  store i64 0, i64* %x, align 8, !dbg !4843
  br label %for.cond215, !dbg !4845

for.cond215:                                      ; preds = %for.inc237, %if.end214
  %169 = load i64, i64* %x, align 8, !dbg !4846
  %170 = load i64, i64* %number_pixels.addr, align 8, !dbg !4848
  %cmp216 = icmp slt i64 %169, %170, !dbg !4849
  br i1 %cmp216, label %for.body218, label %for.end239, !dbg !4850

for.body218:                                      ; preds = %for.cond215
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4851
  %endian219 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %171, i32 0, i32 13, !dbg !4853
  %172 = load i32, i32* %endian219, align 8, !dbg !4853
  %173 = load i8*, i8** %p.addr, align 8, !dbg !4854
  %call220 = call i8* @PushShortPixel(i32 %172, i8* %173, i16* %pixel183), !dbg !4855
  store i8* %call220, i8** %p.addr, align 8, !dbg !4856
  %174 = load i16, i16* %pixel183, align 2, !dbg !4857
  %call221 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %174), !dbg !4857
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4857
  %red222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 2, !dbg !4857
  store i16 %call221, i16* %red222, align 2, !dbg !4857
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4858
  %red223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %176, i32 0, i32 2, !dbg !4858
  %177 = load i16, i16* %red223, align 2, !dbg !4858
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4858
  %green224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i32 0, i32 1, !dbg !4858
  store i16 %177, i16* %green224, align 2, !dbg !4858
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4859
  %red225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 2, !dbg !4859
  %180 = load i16, i16* %red225, align 2, !dbg !4859
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4859
  %blue226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 0, i32 0, !dbg !4859
  store i16 %180, i16* %blue226, align 2, !dbg !4859
  %182 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4860
  %endian227 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %182, i32 0, i32 13, !dbg !4861
  %183 = load i32, i32* %endian227, align 8, !dbg !4861
  %184 = load i8*, i8** %p.addr, align 8, !dbg !4862
  %call228 = call i8* @PushShortPixel(i32 %183, i8* %184, i16* %pixel183), !dbg !4863
  store i8* %call228, i8** %p.addr, align 8, !dbg !4864
  %185 = load i16, i16* %pixel183, align 2, !dbg !4865
  %call229 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %185), !dbg !4865
  %conv230 = zext i16 %call229 to i32, !dbg !4865
  %sub231 = sub nsw i32 65535, %conv230, !dbg !4865
  %conv232 = trunc i32 %sub231 to i16, !dbg !4865
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4865
  %opacity233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 3, !dbg !4865
  store i16 %conv232, i16* %opacity233, align 2, !dbg !4865
  %187 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4866
  %pad234 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %187, i32 0, i32 6, !dbg !4867
  %188 = load i64, i64* %pad234, align 8, !dbg !4867
  %189 = load i8*, i8** %p.addr, align 8, !dbg !4868
  %add.ptr235 = getelementptr inbounds i8, i8* %189, i64 %188, !dbg !4868
  store i8* %add.ptr235, i8** %p.addr, align 8, !dbg !4868
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4869
  %incdec.ptr236 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 1, !dbg !4869
  store %struct._PixelPacket* %incdec.ptr236, %struct._PixelPacket** %q.addr, align 8, !dbg !4869
  br label %for.inc237, !dbg !4870

for.inc237:                                       ; preds = %for.body218
  %191 = load i64, i64* %x, align 8, !dbg !4871
  %inc238 = add nsw i64 %191, 1, !dbg !4871
  store i64 %inc238, i64* %x, align 8, !dbg !4871
  br label %for.cond215, !dbg !4872, !llvm.loop !4873

for.end239:                                       ; preds = %for.cond215
  br label %sw.epilog, !dbg !4875

sw.bb240:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel241, metadata !4876, metadata !DIExpression()), !dbg !4878
  %192 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4879
  %format242 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %192, i32 0, i32 2, !dbg !4881
  %193 = load i32, i32* %format242, align 8, !dbg !4881
  %cmp243 = icmp eq i32 %193, 1, !dbg !4882
  br i1 %cmp243, label %if.then245, label %if.end270, !dbg !4883

if.then245:                                       ; preds = %sw.bb240
  call void @llvm.dbg.declare(metadata float* %pixel246, metadata !4884, metadata !DIExpression()), !dbg !4886
  store i64 0, i64* %x, align 8, !dbg !4887
  br label %for.cond247, !dbg !4889

for.cond247:                                      ; preds = %for.inc267, %if.then245
  %194 = load i64, i64* %x, align 8, !dbg !4890
  %195 = load i64, i64* %number_pixels.addr, align 8, !dbg !4892
  %cmp248 = icmp slt i64 %194, %195, !dbg !4893
  br i1 %cmp248, label %for.body250, label %for.end269, !dbg !4894

for.body250:                                      ; preds = %for.cond247
  %196 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4895
  %197 = load i8*, i8** %p.addr, align 8, !dbg !4897
  %call251 = call i8* @PushFloatPixel(%struct._QuantumInfo* %196, i8* %197, float* %pixel246), !dbg !4898
  store i8* %call251, i8** %p.addr, align 8, !dbg !4899
  %198 = load float, float* %pixel246, align 4, !dbg !4900
  %call252 = call zeroext i16 @ClampToQuantum(float %198), !dbg !4900
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4900
  %red253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %199, i32 0, i32 2, !dbg !4900
  store i16 %call252, i16* %red253, align 2, !dbg !4900
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4901
  %red254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 2, !dbg !4901
  %201 = load i16, i16* %red254, align 2, !dbg !4901
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4901
  %green255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 1, !dbg !4901
  store i16 %201, i16* %green255, align 2, !dbg !4901
  %203 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4902
  %red256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %203, i32 0, i32 2, !dbg !4902
  %204 = load i16, i16* %red256, align 2, !dbg !4902
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4902
  %blue257 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 0, i32 0, !dbg !4902
  store i16 %204, i16* %blue257, align 2, !dbg !4902
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4903
  %207 = load i8*, i8** %p.addr, align 8, !dbg !4904
  %call258 = call i8* @PushFloatPixel(%struct._QuantumInfo* %206, i8* %207, float* %pixel246), !dbg !4905
  store i8* %call258, i8** %p.addr, align 8, !dbg !4906
  %208 = load float, float* %pixel246, align 4, !dbg !4907
  %call259 = call zeroext i16 @ClampToQuantum(float %208), !dbg !4907
  %conv260 = zext i16 %call259 to i32, !dbg !4907
  %sub261 = sub nsw i32 65535, %conv260, !dbg !4907
  %conv262 = trunc i32 %sub261 to i16, !dbg !4907
  %209 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4907
  %opacity263 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %209, i32 0, i32 3, !dbg !4907
  store i16 %conv262, i16* %opacity263, align 2, !dbg !4907
  %210 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4908
  %pad264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %210, i32 0, i32 6, !dbg !4909
  %211 = load i64, i64* %pad264, align 8, !dbg !4909
  %212 = load i8*, i8** %p.addr, align 8, !dbg !4910
  %add.ptr265 = getelementptr inbounds i8, i8* %212, i64 %211, !dbg !4910
  store i8* %add.ptr265, i8** %p.addr, align 8, !dbg !4910
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4911
  %incdec.ptr266 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 1, !dbg !4911
  store %struct._PixelPacket* %incdec.ptr266, %struct._PixelPacket** %q.addr, align 8, !dbg !4911
  br label %for.inc267, !dbg !4912

for.inc267:                                       ; preds = %for.body250
  %214 = load i64, i64* %x, align 8, !dbg !4913
  %inc268 = add nsw i64 %214, 1, !dbg !4913
  store i64 %inc268, i64* %x, align 8, !dbg !4913
  br label %for.cond247, !dbg !4914, !llvm.loop !4915

for.end269:                                       ; preds = %for.cond247
  br label %sw.epilog, !dbg !4917

if.end270:                                        ; preds = %sw.bb240
  store i64 0, i64* %x, align 8, !dbg !4918
  br label %for.cond271, !dbg !4920

for.cond271:                                      ; preds = %for.inc293, %if.end270
  %215 = load i64, i64* %x, align 8, !dbg !4921
  %216 = load i64, i64* %number_pixels.addr, align 8, !dbg !4923
  %cmp272 = icmp slt i64 %215, %216, !dbg !4924
  br i1 %cmp272, label %for.body274, label %for.end295, !dbg !4925

for.body274:                                      ; preds = %for.cond271
  %217 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4926
  %endian275 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %217, i32 0, i32 13, !dbg !4928
  %218 = load i32, i32* %endian275, align 8, !dbg !4928
  %219 = load i8*, i8** %p.addr, align 8, !dbg !4929
  %call276 = call i8* @PushLongPixel(i32 %218, i8* %219, i32* %pixel241), !dbg !4930
  store i8* %call276, i8** %p.addr, align 8, !dbg !4931
  %220 = load i32, i32* %pixel241, align 4, !dbg !4932
  %call277 = call zeroext i16 @ScaleLongToQuantum(i32 %220), !dbg !4932
  %221 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4932
  %red278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %221, i32 0, i32 2, !dbg !4932
  store i16 %call277, i16* %red278, align 2, !dbg !4932
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4933
  %red279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 2, !dbg !4933
  %223 = load i16, i16* %red279, align 2, !dbg !4933
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4933
  %green280 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i32 0, i32 1, !dbg !4933
  store i16 %223, i16* %green280, align 2, !dbg !4933
  %225 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4934
  %red281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %225, i32 0, i32 2, !dbg !4934
  %226 = load i16, i16* %red281, align 2, !dbg !4934
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4934
  %blue282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 0, i32 0, !dbg !4934
  store i16 %226, i16* %blue282, align 2, !dbg !4934
  %228 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4935
  %endian283 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %228, i32 0, i32 13, !dbg !4936
  %229 = load i32, i32* %endian283, align 8, !dbg !4936
  %230 = load i8*, i8** %p.addr, align 8, !dbg !4937
  %call284 = call i8* @PushLongPixel(i32 %229, i8* %230, i32* %pixel241), !dbg !4938
  store i8* %call284, i8** %p.addr, align 8, !dbg !4939
  %231 = load i32, i32* %pixel241, align 4, !dbg !4940
  %call285 = call zeroext i16 @ScaleLongToQuantum(i32 %231), !dbg !4940
  %conv286 = zext i16 %call285 to i32, !dbg !4940
  %sub287 = sub nsw i32 65535, %conv286, !dbg !4940
  %conv288 = trunc i32 %sub287 to i16, !dbg !4940
  %232 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4940
  %opacity289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %232, i32 0, i32 3, !dbg !4940
  store i16 %conv288, i16* %opacity289, align 2, !dbg !4940
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4941
  %pad290 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %233, i32 0, i32 6, !dbg !4942
  %234 = load i64, i64* %pad290, align 8, !dbg !4942
  %235 = load i8*, i8** %p.addr, align 8, !dbg !4943
  %add.ptr291 = getelementptr inbounds i8, i8* %235, i64 %234, !dbg !4943
  store i8* %add.ptr291, i8** %p.addr, align 8, !dbg !4943
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4944
  %incdec.ptr292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 1, !dbg !4944
  store %struct._PixelPacket* %incdec.ptr292, %struct._PixelPacket** %q.addr, align 8, !dbg !4944
  br label %for.inc293, !dbg !4945

for.inc293:                                       ; preds = %for.body274
  %237 = load i64, i64* %x, align 8, !dbg !4946
  %inc294 = add nsw i64 %237, 1, !dbg !4946
  store i64 %inc294, i64* %x, align 8, !dbg !4946
  br label %for.cond271, !dbg !4947, !llvm.loop !4948

for.end295:                                       ; preds = %for.cond271
  br label %sw.epilog, !dbg !4950

sw.bb296:                                         ; preds = %entry
  %238 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4951
  %format297 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %238, i32 0, i32 2, !dbg !4954
  %239 = load i32, i32* %format297, align 8, !dbg !4954
  %cmp298 = icmp eq i32 %239, 1, !dbg !4955
  br i1 %cmp298, label %if.then300, label %if.end327, !dbg !4956

if.then300:                                       ; preds = %sw.bb296
  call void @llvm.dbg.declare(metadata double* %pixel301, metadata !4957, metadata !DIExpression()), !dbg !4959
  store i64 0, i64* %x, align 8, !dbg !4960
  br label %for.cond302, !dbg !4962

for.cond302:                                      ; preds = %for.inc324, %if.then300
  %240 = load i64, i64* %x, align 8, !dbg !4963
  %241 = load i64, i64* %number_pixels.addr, align 8, !dbg !4965
  %cmp303 = icmp slt i64 %240, %241, !dbg !4966
  br i1 %cmp303, label %for.body305, label %for.end326, !dbg !4967

for.body305:                                      ; preds = %for.cond302
  %242 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4968
  %243 = load i8*, i8** %p.addr, align 8, !dbg !4970
  %call306 = call i8* @PushDoublePixel(%struct._QuantumInfo* %242, i8* %243, double* %pixel301), !dbg !4971
  store i8* %call306, i8** %p.addr, align 8, !dbg !4972
  %244 = load double, double* %pixel301, align 8, !dbg !4973
  %conv307 = fptrunc double %244 to float, !dbg !4973
  %call308 = call zeroext i16 @ClampToQuantum(float %conv307), !dbg !4973
  %245 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4973
  %red309 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %245, i32 0, i32 2, !dbg !4973
  store i16 %call308, i16* %red309, align 2, !dbg !4973
  %246 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4974
  %red310 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %246, i32 0, i32 2, !dbg !4974
  %247 = load i16, i16* %red310, align 2, !dbg !4974
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4974
  %green311 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i32 0, i32 1, !dbg !4974
  store i16 %247, i16* %green311, align 2, !dbg !4974
  %249 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4975
  %red312 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %249, i32 0, i32 2, !dbg !4975
  %250 = load i16, i16* %red312, align 2, !dbg !4975
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4975
  %blue313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 0, !dbg !4975
  store i16 %250, i16* %blue313, align 2, !dbg !4975
  %252 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4976
  %253 = load i8*, i8** %p.addr, align 8, !dbg !4977
  %call314 = call i8* @PushDoublePixel(%struct._QuantumInfo* %252, i8* %253, double* %pixel301), !dbg !4978
  store i8* %call314, i8** %p.addr, align 8, !dbg !4979
  %254 = load double, double* %pixel301, align 8, !dbg !4980
  %conv315 = fptrunc double %254 to float, !dbg !4980
  %call316 = call zeroext i16 @ClampToQuantum(float %conv315), !dbg !4980
  %conv317 = zext i16 %call316 to i32, !dbg !4980
  %sub318 = sub nsw i32 65535, %conv317, !dbg !4980
  %conv319 = trunc i32 %sub318 to i16, !dbg !4980
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4980
  %opacity320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 3, !dbg !4980
  store i16 %conv319, i16* %opacity320, align 2, !dbg !4980
  %256 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4981
  %pad321 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %256, i32 0, i32 6, !dbg !4982
  %257 = load i64, i64* %pad321, align 8, !dbg !4982
  %258 = load i8*, i8** %p.addr, align 8, !dbg !4983
  %add.ptr322 = getelementptr inbounds i8, i8* %258, i64 %257, !dbg !4983
  store i8* %add.ptr322, i8** %p.addr, align 8, !dbg !4983
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !4984
  %incdec.ptr323 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i32 1, !dbg !4984
  store %struct._PixelPacket* %incdec.ptr323, %struct._PixelPacket** %q.addr, align 8, !dbg !4984
  br label %for.inc324, !dbg !4985

for.inc324:                                       ; preds = %for.body305
  %260 = load i64, i64* %x, align 8, !dbg !4986
  %inc325 = add nsw i64 %260, 1, !dbg !4986
  store i64 %inc325, i64* %x, align 8, !dbg !4986
  br label %for.cond302, !dbg !4987, !llvm.loop !4988

for.end326:                                       ; preds = %for.cond302
  br label %sw.epilog, !dbg !4990

if.end327:                                        ; preds = %sw.bb296
  br label %sw.default, !dbg !4991

sw.default:                                       ; preds = %entry, %if.end327
  call void @llvm.dbg.declare(metadata i64* %range328, metadata !4992, metadata !DIExpression()), !dbg !4994
  %261 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !4995
  %depth329 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %261, i32 0, i32 0, !dbg !4996
  %262 = load i64, i64* %depth329, align 8, !dbg !4996
  %call330 = call i64 @GetQuantumRange(i64 %262), !dbg !4997
  store i64 %call330, i64* %range328, align 8, !dbg !4998
  store i64 0, i64* %x, align 8, !dbg !4999
  br label %for.cond331, !dbg !5001

for.cond331:                                      ; preds = %for.inc353, %sw.default
  %263 = load i64, i64* %x, align 8, !dbg !5002
  %264 = load i64, i64* %number_pixels.addr, align 8, !dbg !5004
  %cmp332 = icmp slt i64 %263, %264, !dbg !5005
  br i1 %cmp332, label %for.body334, label %for.end355, !dbg !5006

for.body334:                                      ; preds = %for.cond331
  %265 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5007
  %266 = load i8*, i8** %p.addr, align 8, !dbg !5009
  %call335 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %265, i8* %266, i32* %pixel), !dbg !5010
  store i8* %call335, i8** %p.addr, align 8, !dbg !5011
  %267 = load i32, i32* %pixel, align 4, !dbg !5012
  %conv336 = zext i32 %267 to i64, !dbg !5012
  %268 = load i64, i64* %range328, align 8, !dbg !5012
  %call337 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv336, i64 %268), !dbg !5012
  %269 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5012
  %red338 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %269, i32 0, i32 2, !dbg !5012
  store i16 %call337, i16* %red338, align 2, !dbg !5012
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5013
  %red339 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i32 0, i32 2, !dbg !5013
  %271 = load i16, i16* %red339, align 2, !dbg !5013
  %272 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5013
  %green340 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %272, i32 0, i32 1, !dbg !5013
  store i16 %271, i16* %green340, align 2, !dbg !5013
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5014
  %red341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %273, i32 0, i32 2, !dbg !5014
  %274 = load i16, i16* %red341, align 2, !dbg !5014
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5014
  %blue342 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 0, i32 0, !dbg !5014
  store i16 %274, i16* %blue342, align 2, !dbg !5014
  %276 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5015
  %277 = load i8*, i8** %p.addr, align 8, !dbg !5016
  %call343 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %276, i8* %277, i32* %pixel), !dbg !5017
  store i8* %call343, i8** %p.addr, align 8, !dbg !5018
  %278 = load i32, i32* %pixel, align 4, !dbg !5019
  %conv344 = zext i32 %278 to i64, !dbg !5019
  %279 = load i64, i64* %range328, align 8, !dbg !5019
  %call345 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv344, i64 %279), !dbg !5019
  %conv346 = zext i16 %call345 to i32, !dbg !5019
  %sub347 = sub nsw i32 65535, %conv346, !dbg !5019
  %conv348 = trunc i32 %sub347 to i16, !dbg !5019
  %280 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5019
  %opacity349 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %280, i32 0, i32 3, !dbg !5019
  store i16 %conv348, i16* %opacity349, align 2, !dbg !5019
  %281 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5020
  %pad350 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %281, i32 0, i32 6, !dbg !5021
  %282 = load i64, i64* %pad350, align 8, !dbg !5021
  %283 = load i8*, i8** %p.addr, align 8, !dbg !5022
  %add.ptr351 = getelementptr inbounds i8, i8* %283, i64 %282, !dbg !5022
  store i8* %add.ptr351, i8** %p.addr, align 8, !dbg !5022
  %284 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5023
  %incdec.ptr352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %284, i32 1, !dbg !5023
  store %struct._PixelPacket* %incdec.ptr352, %struct._PixelPacket** %q.addr, align 8, !dbg !5023
  br label %for.inc353, !dbg !5024

for.inc353:                                       ; preds = %for.body334
  %285 = load i64, i64* %x, align 8, !dbg !5025
  %inc354 = add nsw i64 %285, 1, !dbg !5025
  store i64 %inc354, i64* %x, align 8, !dbg !5025
  br label %for.cond331, !dbg !5026, !llvm.loop !5027

for.end355:                                       ; preds = %for.cond331
  br label %sw.epilog, !dbg !5029

sw.epilog:                                        ; preds = %for.end355, %for.end326, %for.end295, %for.end269, %for.end239, %for.end213, %for.end181, %for.end156, %for.end131, %for.end108, %if.end78
  ret void, !dbg !5030
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportGreenQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !5031 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel4 = alloca i16, align 2
  %pixel33 = alloca i32, align 4
  %pixel37 = alloca float, align 4
  %pixel68 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !5034, metadata !DIExpression()), !dbg !5035
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5036, metadata !DIExpression()), !dbg !5037
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5040, metadata !DIExpression()), !dbg !5041
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !5042, metadata !DIExpression()), !dbg !5043
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5044
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !5045
  %1 = load i64, i64* %depth, align 8, !dbg !5045
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb3
    i64 32, label %sw.bb32
    i64 64, label %sw.bb64
  ], !dbg !5046

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !5047, metadata !DIExpression()), !dbg !5050
  store i64 0, i64* %x, align 8, !dbg !5051
  br label %for.cond, !dbg !5053

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !5054
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !5056
  %cmp = icmp slt i64 %2, %3, !dbg !5057
  br i1 %cmp, label %for.body, label %for.end, !dbg !5058

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !5059
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !5061
  store i8* %call, i8** %p.addr, align 8, !dbg !5062
  %5 = load i8, i8* %pixel1, align 1, !dbg !5063
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !5063
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5063
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 1, !dbg !5063
  store i16 %call2, i16* %green, align 2, !dbg !5063
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5064
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 6, !dbg !5065
  %8 = load i64, i64* %pad, align 8, !dbg !5065
  %9 = load i8*, i8** %p.addr, align 8, !dbg !5066
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !5066
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !5066
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5067
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 1, !dbg !5067
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !5067
  br label %for.inc, !dbg !5068

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %x, align 8, !dbg !5069
  %inc = add nsw i64 %11, 1, !dbg !5069
  store i64 %inc, i64* %x, align 8, !dbg !5069
  br label %for.cond, !dbg !5070, !llvm.loop !5071

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !5073

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel4, metadata !5074, metadata !DIExpression()), !dbg !5076
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5077
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 2, !dbg !5079
  %13 = load i32, i32* %format, align 8, !dbg !5079
  %cmp5 = icmp eq i32 %13, 1, !dbg !5080
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5081

if.then:                                          ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !5082
  br label %for.cond6, !dbg !5085

for.cond6:                                        ; preds = %for.inc16, %if.then
  %14 = load i64, i64* %x, align 8, !dbg !5086
  %15 = load i64, i64* %number_pixels.addr, align 8, !dbg !5088
  %cmp7 = icmp slt i64 %14, %15, !dbg !5089
  br i1 %cmp7, label %for.body8, label %for.end18, !dbg !5090

for.body8:                                        ; preds = %for.cond6
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5091
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 13, !dbg !5093
  %17 = load i32, i32* %endian, align 8, !dbg !5093
  %18 = load i8*, i8** %p.addr, align 8, !dbg !5094
  %call9 = call i8* @PushShortPixel(i32 %17, i8* %18, i16* %pixel4), !dbg !5095
  store i8* %call9, i8** %p.addr, align 8, !dbg !5096
  %19 = load i16, i16* %pixel4, align 2, !dbg !5097
  %call10 = call float @HalfToSinglePrecision(i16 zeroext %19), !dbg !5097
  %mul = fmul float 6.553500e+04, %call10, !dbg !5097
  %call11 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !5097
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5097
  %green12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 1, !dbg !5097
  store i16 %call11, i16* %green12, align 2, !dbg !5097
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5098
  %pad13 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !5099
  %22 = load i64, i64* %pad13, align 8, !dbg !5099
  %23 = load i8*, i8** %p.addr, align 8, !dbg !5100
  %add.ptr14 = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !5100
  store i8* %add.ptr14, i8** %p.addr, align 8, !dbg !5100
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5101
  %incdec.ptr15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !5101
  store %struct._PixelPacket* %incdec.ptr15, %struct._PixelPacket** %q.addr, align 8, !dbg !5101
  br label %for.inc16, !dbg !5102

for.inc16:                                        ; preds = %for.body8
  %25 = load i64, i64* %x, align 8, !dbg !5103
  %inc17 = add nsw i64 %25, 1, !dbg !5103
  store i64 %inc17, i64* %x, align 8, !dbg !5103
  br label %for.cond6, !dbg !5104, !llvm.loop !5105

for.end18:                                        ; preds = %for.cond6
  br label %sw.epilog, !dbg !5107

if.end:                                           ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !5108
  br label %for.cond19, !dbg !5110

for.cond19:                                       ; preds = %for.inc29, %if.end
  %26 = load i64, i64* %x, align 8, !dbg !5111
  %27 = load i64, i64* %number_pixels.addr, align 8, !dbg !5113
  %cmp20 = icmp slt i64 %26, %27, !dbg !5114
  br i1 %cmp20, label %for.body21, label %for.end31, !dbg !5115

for.body21:                                       ; preds = %for.cond19
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5116
  %endian22 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 13, !dbg !5118
  %29 = load i32, i32* %endian22, align 8, !dbg !5118
  %30 = load i8*, i8** %p.addr, align 8, !dbg !5119
  %call23 = call i8* @PushShortPixel(i32 %29, i8* %30, i16* %pixel4), !dbg !5120
  store i8* %call23, i8** %p.addr, align 8, !dbg !5121
  %31 = load i16, i16* %pixel4, align 2, !dbg !5122
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !5122
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5122
  %green25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 1, !dbg !5122
  store i16 %call24, i16* %green25, align 2, !dbg !5122
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5123
  %pad26 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 6, !dbg !5124
  %34 = load i64, i64* %pad26, align 8, !dbg !5124
  %35 = load i8*, i8** %p.addr, align 8, !dbg !5125
  %add.ptr27 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !5125
  store i8* %add.ptr27, i8** %p.addr, align 8, !dbg !5125
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5126
  %incdec.ptr28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !5126
  store %struct._PixelPacket* %incdec.ptr28, %struct._PixelPacket** %q.addr, align 8, !dbg !5126
  br label %for.inc29, !dbg !5127

for.inc29:                                        ; preds = %for.body21
  %37 = load i64, i64* %x, align 8, !dbg !5128
  %inc30 = add nsw i64 %37, 1, !dbg !5128
  store i64 %inc30, i64* %x, align 8, !dbg !5128
  br label %for.cond19, !dbg !5129, !llvm.loop !5130

for.end31:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !5132

sw.bb32:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel33, metadata !5133, metadata !DIExpression()), !dbg !5135
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5136
  %format34 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 2, !dbg !5138
  %39 = load i32, i32* %format34, align 8, !dbg !5138
  %cmp35 = icmp eq i32 %39, 1, !dbg !5139
  br i1 %cmp35, label %if.then36, label %if.end50, !dbg !5140

if.then36:                                        ; preds = %sw.bb32
  call void @llvm.dbg.declare(metadata float* %pixel37, metadata !5141, metadata !DIExpression()), !dbg !5143
  store i64 0, i64* %x, align 8, !dbg !5144
  br label %for.cond38, !dbg !5146

for.cond38:                                       ; preds = %for.inc47, %if.then36
  %40 = load i64, i64* %x, align 8, !dbg !5147
  %41 = load i64, i64* %number_pixels.addr, align 8, !dbg !5149
  %cmp39 = icmp slt i64 %40, %41, !dbg !5150
  br i1 %cmp39, label %for.body40, label %for.end49, !dbg !5151

for.body40:                                       ; preds = %for.cond38
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5152
  %43 = load i8*, i8** %p.addr, align 8, !dbg !5154
  %call41 = call i8* @PushFloatPixel(%struct._QuantumInfo* %42, i8* %43, float* %pixel37), !dbg !5155
  store i8* %call41, i8** %p.addr, align 8, !dbg !5156
  %44 = load float, float* %pixel37, align 4, !dbg !5157
  %call42 = call zeroext i16 @ClampToQuantum(float %44), !dbg !5157
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5157
  %green43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 1, !dbg !5157
  store i16 %call42, i16* %green43, align 2, !dbg !5157
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5158
  %pad44 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %46, i32 0, i32 6, !dbg !5159
  %47 = load i64, i64* %pad44, align 8, !dbg !5159
  %48 = load i8*, i8** %p.addr, align 8, !dbg !5160
  %add.ptr45 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !5160
  store i8* %add.ptr45, i8** %p.addr, align 8, !dbg !5160
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5161
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !5161
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %q.addr, align 8, !dbg !5161
  br label %for.inc47, !dbg !5162

for.inc47:                                        ; preds = %for.body40
  %50 = load i64, i64* %x, align 8, !dbg !5163
  %inc48 = add nsw i64 %50, 1, !dbg !5163
  store i64 %inc48, i64* %x, align 8, !dbg !5163
  br label %for.cond38, !dbg !5164, !llvm.loop !5165

for.end49:                                        ; preds = %for.cond38
  br label %sw.epilog, !dbg !5167

if.end50:                                         ; preds = %sw.bb32
  store i64 0, i64* %x, align 8, !dbg !5168
  br label %for.cond51, !dbg !5170

for.cond51:                                       ; preds = %for.inc61, %if.end50
  %51 = load i64, i64* %x, align 8, !dbg !5171
  %52 = load i64, i64* %number_pixels.addr, align 8, !dbg !5173
  %cmp52 = icmp slt i64 %51, %52, !dbg !5174
  br i1 %cmp52, label %for.body53, label %for.end63, !dbg !5175

for.body53:                                       ; preds = %for.cond51
  %53 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5176
  %endian54 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %53, i32 0, i32 13, !dbg !5178
  %54 = load i32, i32* %endian54, align 8, !dbg !5178
  %55 = load i8*, i8** %p.addr, align 8, !dbg !5179
  %call55 = call i8* @PushLongPixel(i32 %54, i8* %55, i32* %pixel33), !dbg !5180
  store i8* %call55, i8** %p.addr, align 8, !dbg !5181
  %56 = load i32, i32* %pixel33, align 4, !dbg !5182
  %call56 = call zeroext i16 @ScaleLongToQuantum(i32 %56), !dbg !5182
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5182
  %green57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 1, !dbg !5182
  store i16 %call56, i16* %green57, align 2, !dbg !5182
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5183
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !5184
  %59 = load i64, i64* %pad58, align 8, !dbg !5184
  %60 = load i8*, i8** %p.addr, align 8, !dbg !5185
  %add.ptr59 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !5185
  store i8* %add.ptr59, i8** %p.addr, align 8, !dbg !5185
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5186
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !5186
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %q.addr, align 8, !dbg !5186
  br label %for.inc61, !dbg !5187

for.inc61:                                        ; preds = %for.body53
  %62 = load i64, i64* %x, align 8, !dbg !5188
  %inc62 = add nsw i64 %62, 1, !dbg !5188
  store i64 %inc62, i64* %x, align 8, !dbg !5188
  br label %for.cond51, !dbg !5189, !llvm.loop !5190

for.end63:                                        ; preds = %for.cond51
  br label %sw.epilog, !dbg !5192

sw.bb64:                                          ; preds = %entry
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5193
  %format65 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 2, !dbg !5196
  %64 = load i32, i32* %format65, align 8, !dbg !5196
  %cmp66 = icmp eq i32 %64, 1, !dbg !5197
  br i1 %cmp66, label %if.then67, label %if.end81, !dbg !5198

if.then67:                                        ; preds = %sw.bb64
  call void @llvm.dbg.declare(metadata double* %pixel68, metadata !5199, metadata !DIExpression()), !dbg !5201
  store i64 0, i64* %x, align 8, !dbg !5202
  br label %for.cond69, !dbg !5204

for.cond69:                                       ; preds = %for.inc78, %if.then67
  %65 = load i64, i64* %x, align 8, !dbg !5205
  %66 = load i64, i64* %number_pixels.addr, align 8, !dbg !5207
  %cmp70 = icmp slt i64 %65, %66, !dbg !5208
  br i1 %cmp70, label %for.body71, label %for.end80, !dbg !5209

for.body71:                                       ; preds = %for.cond69
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5210
  %68 = load i8*, i8** %p.addr, align 8, !dbg !5212
  %call72 = call i8* @PushDoublePixel(%struct._QuantumInfo* %67, i8* %68, double* %pixel68), !dbg !5213
  store i8* %call72, i8** %p.addr, align 8, !dbg !5214
  %69 = load double, double* %pixel68, align 8, !dbg !5215
  %conv = fptrunc double %69 to float, !dbg !5215
  %call73 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5215
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5215
  %green74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 1, !dbg !5215
  store i16 %call73, i16* %green74, align 2, !dbg !5215
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5216
  %pad75 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %71, i32 0, i32 6, !dbg !5217
  %72 = load i64, i64* %pad75, align 8, !dbg !5217
  %73 = load i8*, i8** %p.addr, align 8, !dbg !5218
  %add.ptr76 = getelementptr inbounds i8, i8* %73, i64 %72, !dbg !5218
  store i8* %add.ptr76, i8** %p.addr, align 8, !dbg !5218
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5219
  %incdec.ptr77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 1, !dbg !5219
  store %struct._PixelPacket* %incdec.ptr77, %struct._PixelPacket** %q.addr, align 8, !dbg !5219
  br label %for.inc78, !dbg !5220

for.inc78:                                        ; preds = %for.body71
  %75 = load i64, i64* %x, align 8, !dbg !5221
  %inc79 = add nsw i64 %75, 1, !dbg !5221
  store i64 %inc79, i64* %x, align 8, !dbg !5221
  br label %for.cond69, !dbg !5222, !llvm.loop !5223

for.end80:                                        ; preds = %for.cond69
  br label %sw.epilog, !dbg !5225

if.end81:                                         ; preds = %sw.bb64
  br label %sw.default, !dbg !5226

sw.default:                                       ; preds = %entry, %if.end81
  call void @llvm.dbg.declare(metadata i64* %range, metadata !5227, metadata !DIExpression()), !dbg !5229
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5230
  %depth82 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 0, !dbg !5231
  %77 = load i64, i64* %depth82, align 8, !dbg !5231
  %call83 = call i64 @GetQuantumRange(i64 %77), !dbg !5232
  store i64 %call83, i64* %range, align 8, !dbg !5233
  store i64 0, i64* %x, align 8, !dbg !5234
  br label %for.cond84, !dbg !5236

for.cond84:                                       ; preds = %for.inc95, %sw.default
  %78 = load i64, i64* %x, align 8, !dbg !5237
  %79 = load i64, i64* %number_pixels.addr, align 8, !dbg !5239
  %cmp85 = icmp slt i64 %78, %79, !dbg !5240
  br i1 %cmp85, label %for.body87, label %for.end97, !dbg !5241

for.body87:                                       ; preds = %for.cond84
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5242
  %81 = load i8*, i8** %p.addr, align 8, !dbg !5244
  %call88 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %80, i8* %81, i32* %pixel), !dbg !5245
  store i8* %call88, i8** %p.addr, align 8, !dbg !5246
  %82 = load i32, i32* %pixel, align 4, !dbg !5247
  %conv89 = zext i32 %82 to i64, !dbg !5247
  %83 = load i64, i64* %range, align 8, !dbg !5247
  %call90 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv89, i64 %83), !dbg !5247
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5247
  %green91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 1, !dbg !5247
  store i16 %call90, i16* %green91, align 2, !dbg !5247
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5248
  %pad92 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 6, !dbg !5249
  %86 = load i64, i64* %pad92, align 8, !dbg !5249
  %87 = load i8*, i8** %p.addr, align 8, !dbg !5250
  %add.ptr93 = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !5250
  store i8* %add.ptr93, i8** %p.addr, align 8, !dbg !5250
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5251
  %incdec.ptr94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !5251
  store %struct._PixelPacket* %incdec.ptr94, %struct._PixelPacket** %q.addr, align 8, !dbg !5251
  br label %for.inc95, !dbg !5252

for.inc95:                                        ; preds = %for.body87
  %89 = load i64, i64* %x, align 8, !dbg !5253
  %inc96 = add nsw i64 %89, 1, !dbg !5253
  store i64 %inc96, i64* %x, align 8, !dbg !5253
  br label %for.cond84, !dbg !5254, !llvm.loop !5255

for.end97:                                        ; preds = %for.cond84
  br label %sw.epilog, !dbg !5257

sw.epilog:                                        ; preds = %for.end97, %for.end80, %for.end63, %for.end49, %for.end31, %for.end18, %for.end
  ret void, !dbg !5258
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportIndexQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q, i16* noalias %indexes, %struct._ExceptionInfo* %exception) #0 !dbg !5259 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range_exception = alloca i32, align 4
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel197 = alloca i8, align 1
  %pixel442 = alloca i8, align 1
  %pixel518 = alloca i16, align 2
  %pixel677 = alloca i32, align 4
  %pixel682 = alloca float, align 4
  %pixel841 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5260, metadata !DIExpression()), !dbg !5261
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !5262, metadata !DIExpression()), !dbg !5263
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5266, metadata !DIExpression()), !dbg !5267
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !5268, metadata !DIExpression()), !dbg !5269
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !5270, metadata !DIExpression()), !dbg !5271
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5272, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.declare(metadata i32* %range_exception, metadata !5274, metadata !DIExpression()), !dbg !5275
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5276, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !5278, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !5280, metadata !DIExpression()), !dbg !5281
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5282
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 0, !dbg !5284
  %1 = load i32, i32* %storage_class, align 8, !dbg !5284
  %cmp = icmp ne i32 %1, 2, !dbg !5285
  br i1 %cmp, label %if.then, label %if.end, !dbg !5286

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5287
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5289
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !5290
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5289
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2310, i32 465, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !5291
  br label %if.end1001, !dbg !5292

if.end:                                           ; preds = %entry
  store i32 0, i32* %range_exception, align 4, !dbg !5293
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5294
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !5295
  %5 = load i64, i64* %depth, align 8, !dbg !5295
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb196
    i64 8, label %sw.bb441
    i64 16, label %sw.bb517
    i64 32, label %sw.bb676
    i64 64, label %sw.bb836
  ], !dbg !5296

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !5297, metadata !DIExpression()), !dbg !5300
  store i64 0, i64* %x, align 8, !dbg !5301
  br label %for.cond, !dbg !5303

for.cond:                                         ; preds = %for.inc88, %sw.bb
  %6 = load i64, i64* %x, align 8, !dbg !5304
  %7 = load i64, i64* %number_pixels.addr, align 8, !dbg !5306
  %sub = sub nsw i64 %7, 7, !dbg !5307
  %cmp2 = icmp slt i64 %6, %sub, !dbg !5308
  br i1 %cmp2, label %for.body, label %for.end89, !dbg !5309

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !5310
  br label %for.cond3, !dbg !5313

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i64, i64* %bit, align 8, !dbg !5314
  %cmp4 = icmp slt i64 %8, 8, !dbg !5316
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !5317

for.body5:                                        ; preds = %for.cond3
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5318
  %min_is_white = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 7, !dbg !5321
  %10 = load i32, i32* %min_is_white, align 8, !dbg !5321
  %cmp6 = icmp eq i32 %10, 0, !dbg !5322
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5323

if.then7:                                         ; preds = %for.body5
  %11 = load i8*, i8** %p.addr, align 8, !dbg !5324
  %12 = load i8, i8* %11, align 1, !dbg !5325
  %conv = zext i8 %12 to i32, !dbg !5326
  %13 = load i64, i64* %bit, align 8, !dbg !5327
  %sub8 = sub nsw i64 7, %13, !dbg !5328
  %sh_prom = trunc i64 %sub8 to i32, !dbg !5329
  %shl = shl i32 1, %sh_prom, !dbg !5329
  %and = and i32 %conv, %shl, !dbg !5330
  %cmp9 = icmp eq i32 %and, 0, !dbg !5331
  %14 = zext i1 %cmp9 to i64, !dbg !5332
  %cond = select i1 %cmp9, i32 0, i32 1, !dbg !5332
  %conv11 = trunc i32 %cond to i8, !dbg !5333
  store i8 %conv11, i8* %pixel1, align 1, !dbg !5334
  br label %if.end21, !dbg !5335

if.else:                                          ; preds = %for.body5
  %15 = load i8*, i8** %p.addr, align 8, !dbg !5336
  %16 = load i8, i8* %15, align 1, !dbg !5337
  %conv12 = zext i8 %16 to i32, !dbg !5338
  %17 = load i64, i64* %bit, align 8, !dbg !5339
  %sub13 = sub nsw i64 7, %17, !dbg !5340
  %sh_prom14 = trunc i64 %sub13 to i32, !dbg !5341
  %shl15 = shl i32 1, %sh_prom14, !dbg !5341
  %and16 = and i32 %conv12, %shl15, !dbg !5342
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5343
  %18 = zext i1 %cmp17 to i64, !dbg !5344
  %cond19 = select i1 %cmp17, i32 0, i32 1, !dbg !5344
  %conv20 = trunc i32 %cond19 to i8, !dbg !5345
  store i8 %conv20, i8* %pixel1, align 1, !dbg !5346
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then7
  %19 = load i16*, i16** %indexes.addr, align 8, !dbg !5347
  %20 = load i64, i64* %x, align 8, !dbg !5347
  %add.ptr = getelementptr inbounds i16, i16* %19, i64 %20, !dbg !5347
  %21 = load i64, i64* %bit, align 8, !dbg !5347
  %add.ptr22 = getelementptr inbounds i16, i16* %add.ptr, i64 %21, !dbg !5347
  %cmp23 = icmp ne i16* %add.ptr22, null, !dbg !5347
  br i1 %cmp23, label %if.then25, label %if.end30, !dbg !5350

if.then25:                                        ; preds = %if.end21
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5347
  %23 = load i8, i8* %pixel1, align 1, !dbg !5347
  %conv26 = zext i8 %23 to i64, !dbg !5347
  %call27 = call zeroext i16 @PushColormapIndex(%struct._Image* %22, i64 %conv26, i32* %range_exception), !dbg !5347
  %24 = load i16*, i16** %indexes.addr, align 8, !dbg !5347
  %25 = load i64, i64* %x, align 8, !dbg !5347
  %add.ptr28 = getelementptr inbounds i16, i16* %24, i64 %25, !dbg !5347
  %26 = load i64, i64* %bit, align 8, !dbg !5347
  %add.ptr29 = getelementptr inbounds i16, i16* %add.ptr28, i64 %26, !dbg !5347
  store i16 %call27, i16* %add.ptr29, align 2, !dbg !5347
  br label %if.end30, !dbg !5347

if.end30:                                         ; preds = %if.then25, %if.end21
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5351
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 11, !dbg !5351
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5351
  %29 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %30 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr31 = getelementptr inbounds i16, i16* %29, i64 %30, !dbg !5351
  %31 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr32 = getelementptr inbounds i16, i16* %add.ptr31, i64 %31, !dbg !5351
  %cmp33 = icmp eq i16* %add.ptr32, null, !dbg !5351
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !5351

cond.true:                                        ; preds = %if.end30
  br label %cond.end, !dbg !5351

cond.false:                                       ; preds = %if.end30
  %32 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %33 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr35 = getelementptr inbounds i16, i16* %32, i64 %33, !dbg !5351
  %34 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr36 = getelementptr inbounds i16, i16* %add.ptr35, i64 %34, !dbg !5351
  %35 = load i16, i16* %add.ptr36, align 2, !dbg !5351
  %conv37 = zext i16 %35 to i32, !dbg !5351
  br label %cond.end, !dbg !5351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i32 [ 0, %cond.true ], [ %conv37, %cond.false ], !dbg !5351
  %conv39 = sext i32 %cond38 to i64, !dbg !5351
  %add.ptr40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i64 %conv39, !dbg !5351
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr40, i32 0, i32 2, !dbg !5351
  %36 = load i16, i16* %red, align 2, !dbg !5351
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5351
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 2, !dbg !5351
  store i16 %36, i16* %red41, align 2, !dbg !5351
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5351
  %colormap42 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 11, !dbg !5351
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap42, align 8, !dbg !5351
  %40 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %41 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr43 = getelementptr inbounds i16, i16* %40, i64 %41, !dbg !5351
  %42 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr44 = getelementptr inbounds i16, i16* %add.ptr43, i64 %42, !dbg !5351
  %cmp45 = icmp eq i16* %add.ptr44, null, !dbg !5351
  br i1 %cmp45, label %cond.true47, label %cond.false48, !dbg !5351

cond.true47:                                      ; preds = %cond.end
  br label %cond.end52, !dbg !5351

cond.false48:                                     ; preds = %cond.end
  %43 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %44 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr49 = getelementptr inbounds i16, i16* %43, i64 %44, !dbg !5351
  %45 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr50 = getelementptr inbounds i16, i16* %add.ptr49, i64 %45, !dbg !5351
  %46 = load i16, i16* %add.ptr50, align 2, !dbg !5351
  %conv51 = zext i16 %46 to i32, !dbg !5351
  br label %cond.end52, !dbg !5351

cond.end52:                                       ; preds = %cond.false48, %cond.true47
  %cond53 = phi i32 [ 0, %cond.true47 ], [ %conv51, %cond.false48 ], !dbg !5351
  %conv54 = sext i32 %cond53 to i64, !dbg !5351
  %add.ptr55 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i64 %conv54, !dbg !5351
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr55, i32 0, i32 1, !dbg !5351
  %47 = load i16, i16* %green, align 2, !dbg !5351
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5351
  %green56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 1, !dbg !5351
  store i16 %47, i16* %green56, align 2, !dbg !5351
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5351
  %colormap57 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 11, !dbg !5351
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap57, align 8, !dbg !5351
  %51 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %52 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr58 = getelementptr inbounds i16, i16* %51, i64 %52, !dbg !5351
  %53 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr59 = getelementptr inbounds i16, i16* %add.ptr58, i64 %53, !dbg !5351
  %cmp60 = icmp eq i16* %add.ptr59, null, !dbg !5351
  br i1 %cmp60, label %cond.true62, label %cond.false63, !dbg !5351

cond.true62:                                      ; preds = %cond.end52
  br label %cond.end67, !dbg !5351

cond.false63:                                     ; preds = %cond.end52
  %54 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %55 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr64 = getelementptr inbounds i16, i16* %54, i64 %55, !dbg !5351
  %56 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr65 = getelementptr inbounds i16, i16* %add.ptr64, i64 %56, !dbg !5351
  %57 = load i16, i16* %add.ptr65, align 2, !dbg !5351
  %conv66 = zext i16 %57 to i32, !dbg !5351
  br label %cond.end67, !dbg !5351

cond.end67:                                       ; preds = %cond.false63, %cond.true62
  %cond68 = phi i32 [ 0, %cond.true62 ], [ %conv66, %cond.false63 ], !dbg !5351
  %conv69 = sext i32 %cond68 to i64, !dbg !5351
  %add.ptr70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i64 %conv69, !dbg !5351
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr70, i32 0, i32 0, !dbg !5351
  %58 = load i16, i16* %blue, align 2, !dbg !5351
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5351
  %blue71 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 0, !dbg !5351
  store i16 %58, i16* %blue71, align 2, !dbg !5351
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5351
  %colormap72 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 11, !dbg !5351
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap72, align 8, !dbg !5351
  %62 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %63 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr73 = getelementptr inbounds i16, i16* %62, i64 %63, !dbg !5351
  %64 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr74 = getelementptr inbounds i16, i16* %add.ptr73, i64 %64, !dbg !5351
  %cmp75 = icmp eq i16* %add.ptr74, null, !dbg !5351
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !5351

cond.true77:                                      ; preds = %cond.end67
  br label %cond.end82, !dbg !5351

cond.false78:                                     ; preds = %cond.end67
  %65 = load i16*, i16** %indexes.addr, align 8, !dbg !5351
  %66 = load i64, i64* %x, align 8, !dbg !5351
  %add.ptr79 = getelementptr inbounds i16, i16* %65, i64 %66, !dbg !5351
  %67 = load i64, i64* %bit, align 8, !dbg !5351
  %add.ptr80 = getelementptr inbounds i16, i16* %add.ptr79, i64 %67, !dbg !5351
  %68 = load i16, i16* %add.ptr80, align 2, !dbg !5351
  %conv81 = zext i16 %68 to i32, !dbg !5351
  br label %cond.end82, !dbg !5351

cond.end82:                                       ; preds = %cond.false78, %cond.true77
  %cond83 = phi i32 [ 0, %cond.true77 ], [ %conv81, %cond.false78 ], !dbg !5351
  %conv84 = sext i32 %cond83 to i64, !dbg !5351
  %add.ptr85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i64 %conv84, !dbg !5351
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr85, i32 0, i32 3, !dbg !5351
  %69 = load i16, i16* %opacity, align 2, !dbg !5351
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5351
  %opacity86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 3, !dbg !5351
  store i16 %69, i16* %opacity86, align 2, !dbg !5351
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5353
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 1, !dbg !5353
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !5353
  br label %for.inc, !dbg !5354

for.inc:                                          ; preds = %cond.end82
  %72 = load i64, i64* %bit, align 8, !dbg !5355
  %inc = add nsw i64 %72, 1, !dbg !5355
  store i64 %inc, i64* %bit, align 8, !dbg !5355
  br label %for.cond3, !dbg !5356, !llvm.loop !5357

for.end:                                          ; preds = %for.cond3
  %73 = load i8*, i8** %p.addr, align 8, !dbg !5359
  %incdec.ptr87 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !5359
  store i8* %incdec.ptr87, i8** %p.addr, align 8, !dbg !5359
  br label %for.inc88, !dbg !5360

for.inc88:                                        ; preds = %for.end
  %74 = load i64, i64* %x, align 8, !dbg !5361
  %add = add nsw i64 %74, 8, !dbg !5361
  store i64 %add, i64* %x, align 8, !dbg !5361
  br label %for.cond, !dbg !5362, !llvm.loop !5363

for.end89:                                        ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !5365
  br label %for.cond90, !dbg !5367

for.cond90:                                       ; preds = %for.inc193, %for.end89
  %75 = load i64, i64* %bit, align 8, !dbg !5368
  %76 = load i64, i64* %number_pixels.addr, align 8, !dbg !5370
  %rem = urem i64 %76, 8, !dbg !5371
  %cmp91 = icmp slt i64 %75, %rem, !dbg !5372
  br i1 %cmp91, label %for.body93, label %for.end195, !dbg !5373

for.body93:                                       ; preds = %for.cond90
  %77 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5374
  %min_is_white94 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %77, i32 0, i32 7, !dbg !5377
  %78 = load i32, i32* %min_is_white94, align 8, !dbg !5377
  %cmp95 = icmp eq i32 %78, 0, !dbg !5378
  br i1 %cmp95, label %if.then97, label %if.else107, !dbg !5379

if.then97:                                        ; preds = %for.body93
  %79 = load i8*, i8** %p.addr, align 8, !dbg !5380
  %80 = load i8, i8* %79, align 1, !dbg !5381
  %conv98 = zext i8 %80 to i32, !dbg !5382
  %81 = load i64, i64* %bit, align 8, !dbg !5383
  %sub99 = sub nsw i64 7, %81, !dbg !5384
  %sh_prom100 = trunc i64 %sub99 to i32, !dbg !5385
  %shl101 = shl i32 1, %sh_prom100, !dbg !5385
  %and102 = and i32 %conv98, %shl101, !dbg !5386
  %cmp103 = icmp eq i32 %and102, 0, !dbg !5387
  %82 = zext i1 %cmp103 to i64, !dbg !5388
  %cond105 = select i1 %cmp103, i32 0, i32 1, !dbg !5388
  %conv106 = trunc i32 %cond105 to i8, !dbg !5389
  store i8 %conv106, i8* %pixel1, align 1, !dbg !5390
  br label %if.end117, !dbg !5391

if.else107:                                       ; preds = %for.body93
  %83 = load i8*, i8** %p.addr, align 8, !dbg !5392
  %84 = load i8, i8* %83, align 1, !dbg !5393
  %conv108 = zext i8 %84 to i32, !dbg !5394
  %85 = load i64, i64* %bit, align 8, !dbg !5395
  %sub109 = sub nsw i64 7, %85, !dbg !5396
  %sh_prom110 = trunc i64 %sub109 to i32, !dbg !5397
  %shl111 = shl i32 1, %sh_prom110, !dbg !5397
  %and112 = and i32 %conv108, %shl111, !dbg !5398
  %cmp113 = icmp ne i32 %and112, 0, !dbg !5399
  %86 = zext i1 %cmp113 to i64, !dbg !5400
  %cond115 = select i1 %cmp113, i32 0, i32 1, !dbg !5400
  %conv116 = trunc i32 %cond115 to i8, !dbg !5401
  store i8 %conv116, i8* %pixel1, align 1, !dbg !5402
  br label %if.end117

if.end117:                                        ; preds = %if.else107, %if.then97
  %87 = load i16*, i16** %indexes.addr, align 8, !dbg !5403
  %88 = load i64, i64* %x, align 8, !dbg !5403
  %add.ptr118 = getelementptr inbounds i16, i16* %87, i64 %88, !dbg !5403
  %89 = load i64, i64* %bit, align 8, !dbg !5403
  %add.ptr119 = getelementptr inbounds i16, i16* %add.ptr118, i64 %89, !dbg !5403
  %cmp120 = icmp ne i16* %add.ptr119, null, !dbg !5403
  br i1 %cmp120, label %if.then122, label %if.end127, !dbg !5406

if.then122:                                       ; preds = %if.end117
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5403
  %91 = load i8, i8* %pixel1, align 1, !dbg !5403
  %conv123 = zext i8 %91 to i64, !dbg !5403
  %call124 = call zeroext i16 @PushColormapIndex(%struct._Image* %90, i64 %conv123, i32* %range_exception), !dbg !5403
  %92 = load i16*, i16** %indexes.addr, align 8, !dbg !5403
  %93 = load i64, i64* %x, align 8, !dbg !5403
  %add.ptr125 = getelementptr inbounds i16, i16* %92, i64 %93, !dbg !5403
  %94 = load i64, i64* %bit, align 8, !dbg !5403
  %add.ptr126 = getelementptr inbounds i16, i16* %add.ptr125, i64 %94, !dbg !5403
  store i16 %call124, i16* %add.ptr126, align 2, !dbg !5403
  br label %if.end127, !dbg !5403

if.end127:                                        ; preds = %if.then122, %if.end117
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5407
  %colormap128 = getelementptr inbounds %struct._Image, %struct._Image* %95, i32 0, i32 11, !dbg !5407
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap128, align 8, !dbg !5407
  %97 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %98 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr129 = getelementptr inbounds i16, i16* %97, i64 %98, !dbg !5407
  %99 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr130 = getelementptr inbounds i16, i16* %add.ptr129, i64 %99, !dbg !5407
  %cmp131 = icmp eq i16* %add.ptr130, null, !dbg !5407
  br i1 %cmp131, label %cond.true133, label %cond.false134, !dbg !5407

cond.true133:                                     ; preds = %if.end127
  br label %cond.end138, !dbg !5407

cond.false134:                                    ; preds = %if.end127
  %100 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %101 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr135 = getelementptr inbounds i16, i16* %100, i64 %101, !dbg !5407
  %102 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr136 = getelementptr inbounds i16, i16* %add.ptr135, i64 %102, !dbg !5407
  %103 = load i16, i16* %add.ptr136, align 2, !dbg !5407
  %conv137 = zext i16 %103 to i32, !dbg !5407
  br label %cond.end138, !dbg !5407

cond.end138:                                      ; preds = %cond.false134, %cond.true133
  %cond139 = phi i32 [ 0, %cond.true133 ], [ %conv137, %cond.false134 ], !dbg !5407
  %conv140 = sext i32 %cond139 to i64, !dbg !5407
  %add.ptr141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i64 %conv140, !dbg !5407
  %red142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr141, i32 0, i32 2, !dbg !5407
  %104 = load i16, i16* %red142, align 2, !dbg !5407
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5407
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 2, !dbg !5407
  store i16 %104, i16* %red143, align 2, !dbg !5407
  %106 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5407
  %colormap144 = getelementptr inbounds %struct._Image, %struct._Image* %106, i32 0, i32 11, !dbg !5407
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap144, align 8, !dbg !5407
  %108 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %109 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr145 = getelementptr inbounds i16, i16* %108, i64 %109, !dbg !5407
  %110 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr146 = getelementptr inbounds i16, i16* %add.ptr145, i64 %110, !dbg !5407
  %cmp147 = icmp eq i16* %add.ptr146, null, !dbg !5407
  br i1 %cmp147, label %cond.true149, label %cond.false150, !dbg !5407

cond.true149:                                     ; preds = %cond.end138
  br label %cond.end154, !dbg !5407

cond.false150:                                    ; preds = %cond.end138
  %111 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %112 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr151 = getelementptr inbounds i16, i16* %111, i64 %112, !dbg !5407
  %113 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr152 = getelementptr inbounds i16, i16* %add.ptr151, i64 %113, !dbg !5407
  %114 = load i16, i16* %add.ptr152, align 2, !dbg !5407
  %conv153 = zext i16 %114 to i32, !dbg !5407
  br label %cond.end154, !dbg !5407

cond.end154:                                      ; preds = %cond.false150, %cond.true149
  %cond155 = phi i32 [ 0, %cond.true149 ], [ %conv153, %cond.false150 ], !dbg !5407
  %conv156 = sext i32 %cond155 to i64, !dbg !5407
  %add.ptr157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i64 %conv156, !dbg !5407
  %green158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr157, i32 0, i32 1, !dbg !5407
  %115 = load i16, i16* %green158, align 2, !dbg !5407
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5407
  %green159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 1, !dbg !5407
  store i16 %115, i16* %green159, align 2, !dbg !5407
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5407
  %colormap160 = getelementptr inbounds %struct._Image, %struct._Image* %117, i32 0, i32 11, !dbg !5407
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap160, align 8, !dbg !5407
  %119 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %120 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr161 = getelementptr inbounds i16, i16* %119, i64 %120, !dbg !5407
  %121 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr162 = getelementptr inbounds i16, i16* %add.ptr161, i64 %121, !dbg !5407
  %cmp163 = icmp eq i16* %add.ptr162, null, !dbg !5407
  br i1 %cmp163, label %cond.true165, label %cond.false166, !dbg !5407

cond.true165:                                     ; preds = %cond.end154
  br label %cond.end170, !dbg !5407

cond.false166:                                    ; preds = %cond.end154
  %122 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %123 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr167 = getelementptr inbounds i16, i16* %122, i64 %123, !dbg !5407
  %124 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr168 = getelementptr inbounds i16, i16* %add.ptr167, i64 %124, !dbg !5407
  %125 = load i16, i16* %add.ptr168, align 2, !dbg !5407
  %conv169 = zext i16 %125 to i32, !dbg !5407
  br label %cond.end170, !dbg !5407

cond.end170:                                      ; preds = %cond.false166, %cond.true165
  %cond171 = phi i32 [ 0, %cond.true165 ], [ %conv169, %cond.false166 ], !dbg !5407
  %conv172 = sext i32 %cond171 to i64, !dbg !5407
  %add.ptr173 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i64 %conv172, !dbg !5407
  %blue174 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr173, i32 0, i32 0, !dbg !5407
  %126 = load i16, i16* %blue174, align 2, !dbg !5407
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5407
  %blue175 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 0, !dbg !5407
  store i16 %126, i16* %blue175, align 2, !dbg !5407
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5407
  %colormap176 = getelementptr inbounds %struct._Image, %struct._Image* %128, i32 0, i32 11, !dbg !5407
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap176, align 8, !dbg !5407
  %130 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %131 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr177 = getelementptr inbounds i16, i16* %130, i64 %131, !dbg !5407
  %132 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr178 = getelementptr inbounds i16, i16* %add.ptr177, i64 %132, !dbg !5407
  %cmp179 = icmp eq i16* %add.ptr178, null, !dbg !5407
  br i1 %cmp179, label %cond.true181, label %cond.false182, !dbg !5407

cond.true181:                                     ; preds = %cond.end170
  br label %cond.end186, !dbg !5407

cond.false182:                                    ; preds = %cond.end170
  %133 = load i16*, i16** %indexes.addr, align 8, !dbg !5407
  %134 = load i64, i64* %x, align 8, !dbg !5407
  %add.ptr183 = getelementptr inbounds i16, i16* %133, i64 %134, !dbg !5407
  %135 = load i64, i64* %bit, align 8, !dbg !5407
  %add.ptr184 = getelementptr inbounds i16, i16* %add.ptr183, i64 %135, !dbg !5407
  %136 = load i16, i16* %add.ptr184, align 2, !dbg !5407
  %conv185 = zext i16 %136 to i32, !dbg !5407
  br label %cond.end186, !dbg !5407

cond.end186:                                      ; preds = %cond.false182, %cond.true181
  %cond187 = phi i32 [ 0, %cond.true181 ], [ %conv185, %cond.false182 ], !dbg !5407
  %conv188 = sext i32 %cond187 to i64, !dbg !5407
  %add.ptr189 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i64 %conv188, !dbg !5407
  %opacity190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr189, i32 0, i32 3, !dbg !5407
  %137 = load i16, i16* %opacity190, align 2, !dbg !5407
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5407
  %opacity191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 3, !dbg !5407
  store i16 %137, i16* %opacity191, align 2, !dbg !5407
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5409
  %incdec.ptr192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 1, !dbg !5409
  store %struct._PixelPacket* %incdec.ptr192, %struct._PixelPacket** %q.addr, align 8, !dbg !5409
  br label %for.inc193, !dbg !5410

for.inc193:                                       ; preds = %cond.end186
  %140 = load i64, i64* %bit, align 8, !dbg !5411
  %inc194 = add nsw i64 %140, 1, !dbg !5411
  store i64 %inc194, i64* %bit, align 8, !dbg !5411
  br label %for.cond90, !dbg !5412, !llvm.loop !5413

for.end195:                                       ; preds = %for.cond90
  br label %sw.epilog, !dbg !5415

sw.bb196:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel197, metadata !5416, metadata !DIExpression()), !dbg !5418
  store i64 0, i64* %x, align 8, !dbg !5419
  br label %for.cond198, !dbg !5421

for.cond198:                                      ; preds = %for.inc350, %sw.bb196
  %141 = load i64, i64* %x, align 8, !dbg !5422
  %142 = load i64, i64* %number_pixels.addr, align 8, !dbg !5424
  %sub199 = sub nsw i64 %142, 1, !dbg !5425
  %cmp200 = icmp slt i64 %141, %sub199, !dbg !5426
  br i1 %cmp200, label %for.body202, label %for.end352, !dbg !5427

for.body202:                                      ; preds = %for.cond198
  %143 = load i8*, i8** %p.addr, align 8, !dbg !5428
  %144 = load i8, i8* %143, align 1, !dbg !5430
  %conv203 = zext i8 %144 to i32, !dbg !5430
  %shr = ashr i32 %conv203, 4, !dbg !5431
  %and204 = and i32 %shr, 15, !dbg !5432
  %conv205 = trunc i32 %and204 to i8, !dbg !5433
  store i8 %conv205, i8* %pixel197, align 1, !dbg !5434
  %145 = load i16*, i16** %indexes.addr, align 8, !dbg !5435
  %146 = load i64, i64* %x, align 8, !dbg !5435
  %add.ptr206 = getelementptr inbounds i16, i16* %145, i64 %146, !dbg !5435
  %cmp207 = icmp ne i16* %add.ptr206, null, !dbg !5435
  br i1 %cmp207, label %if.then209, label %if.end213, !dbg !5438

if.then209:                                       ; preds = %for.body202
  %147 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5435
  %148 = load i8, i8* %pixel197, align 1, !dbg !5435
  %conv210 = zext i8 %148 to i64, !dbg !5435
  %call211 = call zeroext i16 @PushColormapIndex(%struct._Image* %147, i64 %conv210, i32* %range_exception), !dbg !5435
  %149 = load i16*, i16** %indexes.addr, align 8, !dbg !5435
  %150 = load i64, i64* %x, align 8, !dbg !5435
  %add.ptr212 = getelementptr inbounds i16, i16* %149, i64 %150, !dbg !5435
  store i16 %call211, i16* %add.ptr212, align 2, !dbg !5435
  br label %if.end213, !dbg !5435

if.end213:                                        ; preds = %if.then209, %for.body202
  %151 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %colormap214 = getelementptr inbounds %struct._Image, %struct._Image* %151, i32 0, i32 11, !dbg !5439
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap214, align 8, !dbg !5439
  %153 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %154 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr215 = getelementptr inbounds i16, i16* %153, i64 %154, !dbg !5439
  %cmp216 = icmp eq i16* %add.ptr215, null, !dbg !5439
  br i1 %cmp216, label %cond.true218, label %cond.false219, !dbg !5439

cond.true218:                                     ; preds = %if.end213
  br label %cond.end222, !dbg !5439

cond.false219:                                    ; preds = %if.end213
  %155 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %156 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr220 = getelementptr inbounds i16, i16* %155, i64 %156, !dbg !5439
  %157 = load i16, i16* %add.ptr220, align 2, !dbg !5439
  %conv221 = zext i16 %157 to i32, !dbg !5439
  br label %cond.end222, !dbg !5439

cond.end222:                                      ; preds = %cond.false219, %cond.true218
  %cond223 = phi i32 [ 0, %cond.true218 ], [ %conv221, %cond.false219 ], !dbg !5439
  %conv224 = sext i32 %cond223 to i64, !dbg !5439
  %add.ptr225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i64 %conv224, !dbg !5439
  %red226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr225, i32 0, i32 2, !dbg !5439
  %158 = load i16, i16* %red226, align 2, !dbg !5439
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5439
  %red227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 2, !dbg !5439
  store i16 %158, i16* %red227, align 2, !dbg !5439
  %160 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %colormap228 = getelementptr inbounds %struct._Image, %struct._Image* %160, i32 0, i32 11, !dbg !5439
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap228, align 8, !dbg !5439
  %162 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %163 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr229 = getelementptr inbounds i16, i16* %162, i64 %163, !dbg !5439
  %cmp230 = icmp eq i16* %add.ptr229, null, !dbg !5439
  br i1 %cmp230, label %cond.true232, label %cond.false233, !dbg !5439

cond.true232:                                     ; preds = %cond.end222
  br label %cond.end236, !dbg !5439

cond.false233:                                    ; preds = %cond.end222
  %164 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %165 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr234 = getelementptr inbounds i16, i16* %164, i64 %165, !dbg !5439
  %166 = load i16, i16* %add.ptr234, align 2, !dbg !5439
  %conv235 = zext i16 %166 to i32, !dbg !5439
  br label %cond.end236, !dbg !5439

cond.end236:                                      ; preds = %cond.false233, %cond.true232
  %cond237 = phi i32 [ 0, %cond.true232 ], [ %conv235, %cond.false233 ], !dbg !5439
  %conv238 = sext i32 %cond237 to i64, !dbg !5439
  %add.ptr239 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i64 %conv238, !dbg !5439
  %green240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr239, i32 0, i32 1, !dbg !5439
  %167 = load i16, i16* %green240, align 2, !dbg !5439
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5439
  %green241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 1, !dbg !5439
  store i16 %167, i16* %green241, align 2, !dbg !5439
  %169 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %colormap242 = getelementptr inbounds %struct._Image, %struct._Image* %169, i32 0, i32 11, !dbg !5439
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap242, align 8, !dbg !5439
  %171 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %172 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr243 = getelementptr inbounds i16, i16* %171, i64 %172, !dbg !5439
  %cmp244 = icmp eq i16* %add.ptr243, null, !dbg !5439
  br i1 %cmp244, label %cond.true246, label %cond.false247, !dbg !5439

cond.true246:                                     ; preds = %cond.end236
  br label %cond.end250, !dbg !5439

cond.false247:                                    ; preds = %cond.end236
  %173 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %174 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr248 = getelementptr inbounds i16, i16* %173, i64 %174, !dbg !5439
  %175 = load i16, i16* %add.ptr248, align 2, !dbg !5439
  %conv249 = zext i16 %175 to i32, !dbg !5439
  br label %cond.end250, !dbg !5439

cond.end250:                                      ; preds = %cond.false247, %cond.true246
  %cond251 = phi i32 [ 0, %cond.true246 ], [ %conv249, %cond.false247 ], !dbg !5439
  %conv252 = sext i32 %cond251 to i64, !dbg !5439
  %add.ptr253 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i64 %conv252, !dbg !5439
  %blue254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr253, i32 0, i32 0, !dbg !5439
  %176 = load i16, i16* %blue254, align 2, !dbg !5439
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5439
  %blue255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 0, i32 0, !dbg !5439
  store i16 %176, i16* %blue255, align 2, !dbg !5439
  %178 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5439
  %colormap256 = getelementptr inbounds %struct._Image, %struct._Image* %178, i32 0, i32 11, !dbg !5439
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap256, align 8, !dbg !5439
  %180 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %181 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr257 = getelementptr inbounds i16, i16* %180, i64 %181, !dbg !5439
  %cmp258 = icmp eq i16* %add.ptr257, null, !dbg !5439
  br i1 %cmp258, label %cond.true260, label %cond.false261, !dbg !5439

cond.true260:                                     ; preds = %cond.end250
  br label %cond.end264, !dbg !5439

cond.false261:                                    ; preds = %cond.end250
  %182 = load i16*, i16** %indexes.addr, align 8, !dbg !5439
  %183 = load i64, i64* %x, align 8, !dbg !5439
  %add.ptr262 = getelementptr inbounds i16, i16* %182, i64 %183, !dbg !5439
  %184 = load i16, i16* %add.ptr262, align 2, !dbg !5439
  %conv263 = zext i16 %184 to i32, !dbg !5439
  br label %cond.end264, !dbg !5439

cond.end264:                                      ; preds = %cond.false261, %cond.true260
  %cond265 = phi i32 [ 0, %cond.true260 ], [ %conv263, %cond.false261 ], !dbg !5439
  %conv266 = sext i32 %cond265 to i64, !dbg !5439
  %add.ptr267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i64 %conv266, !dbg !5439
  %opacity268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr267, i32 0, i32 3, !dbg !5439
  %185 = load i16, i16* %opacity268, align 2, !dbg !5439
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5439
  %opacity269 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 3, !dbg !5439
  store i16 %185, i16* %opacity269, align 2, !dbg !5439
  %187 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5441
  %incdec.ptr270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %187, i32 1, !dbg !5441
  store %struct._PixelPacket* %incdec.ptr270, %struct._PixelPacket** %q.addr, align 8, !dbg !5441
  %188 = load i8*, i8** %p.addr, align 8, !dbg !5442
  %189 = load i8, i8* %188, align 1, !dbg !5443
  %conv271 = zext i8 %189 to i32, !dbg !5444
  %and272 = and i32 %conv271, 15, !dbg !5445
  %conv273 = trunc i32 %and272 to i8, !dbg !5446
  store i8 %conv273, i8* %pixel197, align 1, !dbg !5447
  %190 = load i16*, i16** %indexes.addr, align 8, !dbg !5448
  %191 = load i64, i64* %x, align 8, !dbg !5448
  %add.ptr274 = getelementptr inbounds i16, i16* %190, i64 %191, !dbg !5448
  %add.ptr275 = getelementptr inbounds i16, i16* %add.ptr274, i64 1, !dbg !5448
  %cmp276 = icmp ne i16* %add.ptr275, null, !dbg !5448
  br i1 %cmp276, label %if.then278, label %if.end283, !dbg !5451

if.then278:                                       ; preds = %cond.end264
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5448
  %193 = load i8, i8* %pixel197, align 1, !dbg !5448
  %conv279 = zext i8 %193 to i64, !dbg !5448
  %call280 = call zeroext i16 @PushColormapIndex(%struct._Image* %192, i64 %conv279, i32* %range_exception), !dbg !5448
  %194 = load i16*, i16** %indexes.addr, align 8, !dbg !5448
  %195 = load i64, i64* %x, align 8, !dbg !5448
  %add.ptr281 = getelementptr inbounds i16, i16* %194, i64 %195, !dbg !5448
  %add.ptr282 = getelementptr inbounds i16, i16* %add.ptr281, i64 1, !dbg !5448
  store i16 %call280, i16* %add.ptr282, align 2, !dbg !5448
  br label %if.end283, !dbg !5448

if.end283:                                        ; preds = %if.then278, %cond.end264
  %196 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5452
  %colormap284 = getelementptr inbounds %struct._Image, %struct._Image* %196, i32 0, i32 11, !dbg !5452
  %197 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap284, align 8, !dbg !5452
  %198 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %199 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr285 = getelementptr inbounds i16, i16* %198, i64 %199, !dbg !5452
  %add.ptr286 = getelementptr inbounds i16, i16* %add.ptr285, i64 1, !dbg !5452
  %cmp287 = icmp eq i16* %add.ptr286, null, !dbg !5452
  br i1 %cmp287, label %cond.true289, label %cond.false290, !dbg !5452

cond.true289:                                     ; preds = %if.end283
  br label %cond.end294, !dbg !5452

cond.false290:                                    ; preds = %if.end283
  %200 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %201 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr291 = getelementptr inbounds i16, i16* %200, i64 %201, !dbg !5452
  %add.ptr292 = getelementptr inbounds i16, i16* %add.ptr291, i64 1, !dbg !5452
  %202 = load i16, i16* %add.ptr292, align 2, !dbg !5452
  %conv293 = zext i16 %202 to i32, !dbg !5452
  br label %cond.end294, !dbg !5452

cond.end294:                                      ; preds = %cond.false290, %cond.true289
  %cond295 = phi i32 [ 0, %cond.true289 ], [ %conv293, %cond.false290 ], !dbg !5452
  %conv296 = sext i32 %cond295 to i64, !dbg !5452
  %add.ptr297 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %197, i64 %conv296, !dbg !5452
  %red298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr297, i32 0, i32 2, !dbg !5452
  %203 = load i16, i16* %red298, align 2, !dbg !5452
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5452
  %red299 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 0, i32 2, !dbg !5452
  store i16 %203, i16* %red299, align 2, !dbg !5452
  %205 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5452
  %colormap300 = getelementptr inbounds %struct._Image, %struct._Image* %205, i32 0, i32 11, !dbg !5452
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap300, align 8, !dbg !5452
  %207 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %208 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr301 = getelementptr inbounds i16, i16* %207, i64 %208, !dbg !5452
  %add.ptr302 = getelementptr inbounds i16, i16* %add.ptr301, i64 1, !dbg !5452
  %cmp303 = icmp eq i16* %add.ptr302, null, !dbg !5452
  br i1 %cmp303, label %cond.true305, label %cond.false306, !dbg !5452

cond.true305:                                     ; preds = %cond.end294
  br label %cond.end310, !dbg !5452

cond.false306:                                    ; preds = %cond.end294
  %209 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %210 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr307 = getelementptr inbounds i16, i16* %209, i64 %210, !dbg !5452
  %add.ptr308 = getelementptr inbounds i16, i16* %add.ptr307, i64 1, !dbg !5452
  %211 = load i16, i16* %add.ptr308, align 2, !dbg !5452
  %conv309 = zext i16 %211 to i32, !dbg !5452
  br label %cond.end310, !dbg !5452

cond.end310:                                      ; preds = %cond.false306, %cond.true305
  %cond311 = phi i32 [ 0, %cond.true305 ], [ %conv309, %cond.false306 ], !dbg !5452
  %conv312 = sext i32 %cond311 to i64, !dbg !5452
  %add.ptr313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i64 %conv312, !dbg !5452
  %green314 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr313, i32 0, i32 1, !dbg !5452
  %212 = load i16, i16* %green314, align 2, !dbg !5452
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5452
  %green315 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 0, i32 1, !dbg !5452
  store i16 %212, i16* %green315, align 2, !dbg !5452
  %214 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5452
  %colormap316 = getelementptr inbounds %struct._Image, %struct._Image* %214, i32 0, i32 11, !dbg !5452
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap316, align 8, !dbg !5452
  %216 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %217 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr317 = getelementptr inbounds i16, i16* %216, i64 %217, !dbg !5452
  %add.ptr318 = getelementptr inbounds i16, i16* %add.ptr317, i64 1, !dbg !5452
  %cmp319 = icmp eq i16* %add.ptr318, null, !dbg !5452
  br i1 %cmp319, label %cond.true321, label %cond.false322, !dbg !5452

cond.true321:                                     ; preds = %cond.end310
  br label %cond.end326, !dbg !5452

cond.false322:                                    ; preds = %cond.end310
  %218 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %219 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr323 = getelementptr inbounds i16, i16* %218, i64 %219, !dbg !5452
  %add.ptr324 = getelementptr inbounds i16, i16* %add.ptr323, i64 1, !dbg !5452
  %220 = load i16, i16* %add.ptr324, align 2, !dbg !5452
  %conv325 = zext i16 %220 to i32, !dbg !5452
  br label %cond.end326, !dbg !5452

cond.end326:                                      ; preds = %cond.false322, %cond.true321
  %cond327 = phi i32 [ 0, %cond.true321 ], [ %conv325, %cond.false322 ], !dbg !5452
  %conv328 = sext i32 %cond327 to i64, !dbg !5452
  %add.ptr329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i64 %conv328, !dbg !5452
  %blue330 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr329, i32 0, i32 0, !dbg !5452
  %221 = load i16, i16* %blue330, align 2, !dbg !5452
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5452
  %blue331 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i32 0, i32 0, !dbg !5452
  store i16 %221, i16* %blue331, align 2, !dbg !5452
  %223 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5452
  %colormap332 = getelementptr inbounds %struct._Image, %struct._Image* %223, i32 0, i32 11, !dbg !5452
  %224 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap332, align 8, !dbg !5452
  %225 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %226 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr333 = getelementptr inbounds i16, i16* %225, i64 %226, !dbg !5452
  %add.ptr334 = getelementptr inbounds i16, i16* %add.ptr333, i64 1, !dbg !5452
  %cmp335 = icmp eq i16* %add.ptr334, null, !dbg !5452
  br i1 %cmp335, label %cond.true337, label %cond.false338, !dbg !5452

cond.true337:                                     ; preds = %cond.end326
  br label %cond.end342, !dbg !5452

cond.false338:                                    ; preds = %cond.end326
  %227 = load i16*, i16** %indexes.addr, align 8, !dbg !5452
  %228 = load i64, i64* %x, align 8, !dbg !5452
  %add.ptr339 = getelementptr inbounds i16, i16* %227, i64 %228, !dbg !5452
  %add.ptr340 = getelementptr inbounds i16, i16* %add.ptr339, i64 1, !dbg !5452
  %229 = load i16, i16* %add.ptr340, align 2, !dbg !5452
  %conv341 = zext i16 %229 to i32, !dbg !5452
  br label %cond.end342, !dbg !5452

cond.end342:                                      ; preds = %cond.false338, %cond.true337
  %cond343 = phi i32 [ 0, %cond.true337 ], [ %conv341, %cond.false338 ], !dbg !5452
  %conv344 = sext i32 %cond343 to i64, !dbg !5452
  %add.ptr345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %224, i64 %conv344, !dbg !5452
  %opacity346 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr345, i32 0, i32 3, !dbg !5452
  %230 = load i16, i16* %opacity346, align 2, !dbg !5452
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5452
  %opacity347 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i32 0, i32 3, !dbg !5452
  store i16 %230, i16* %opacity347, align 2, !dbg !5452
  %232 = load i8*, i8** %p.addr, align 8, !dbg !5454
  %incdec.ptr348 = getelementptr inbounds i8, i8* %232, i32 1, !dbg !5454
  store i8* %incdec.ptr348, i8** %p.addr, align 8, !dbg !5454
  %233 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5455
  %incdec.ptr349 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %233, i32 1, !dbg !5455
  store %struct._PixelPacket* %incdec.ptr349, %struct._PixelPacket** %q.addr, align 8, !dbg !5455
  br label %for.inc350, !dbg !5456

for.inc350:                                       ; preds = %cond.end342
  %234 = load i64, i64* %x, align 8, !dbg !5457
  %add351 = add nsw i64 %234, 2, !dbg !5457
  store i64 %add351, i64* %x, align 8, !dbg !5457
  br label %for.cond198, !dbg !5458, !llvm.loop !5459

for.end352:                                       ; preds = %for.cond198
  store i64 0, i64* %bit, align 8, !dbg !5461
  br label %for.cond353, !dbg !5463

for.cond353:                                      ; preds = %for.inc438, %for.end352
  %235 = load i64, i64* %bit, align 8, !dbg !5464
  %236 = load i64, i64* %number_pixels.addr, align 8, !dbg !5466
  %rem354 = urem i64 %236, 2, !dbg !5467
  %cmp355 = icmp slt i64 %235, %rem354, !dbg !5468
  br i1 %cmp355, label %for.body357, label %for.end440, !dbg !5469

for.body357:                                      ; preds = %for.cond353
  %237 = load i8*, i8** %p.addr, align 8, !dbg !5470
  %incdec.ptr358 = getelementptr inbounds i8, i8* %237, i32 1, !dbg !5470
  store i8* %incdec.ptr358, i8** %p.addr, align 8, !dbg !5470
  %238 = load i8, i8* %237, align 1, !dbg !5472
  %conv359 = zext i8 %238 to i32, !dbg !5472
  %shr360 = ashr i32 %conv359, 4, !dbg !5473
  %and361 = and i32 %shr360, 15, !dbg !5474
  %conv362 = trunc i32 %and361 to i8, !dbg !5475
  store i8 %conv362, i8* %pixel197, align 1, !dbg !5476
  %239 = load i16*, i16** %indexes.addr, align 8, !dbg !5477
  %240 = load i64, i64* %x, align 8, !dbg !5477
  %add.ptr363 = getelementptr inbounds i16, i16* %239, i64 %240, !dbg !5477
  %241 = load i64, i64* %bit, align 8, !dbg !5477
  %add.ptr364 = getelementptr inbounds i16, i16* %add.ptr363, i64 %241, !dbg !5477
  %cmp365 = icmp ne i16* %add.ptr364, null, !dbg !5477
  br i1 %cmp365, label %if.then367, label %if.end372, !dbg !5480

if.then367:                                       ; preds = %for.body357
  %242 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5477
  %243 = load i8, i8* %pixel197, align 1, !dbg !5477
  %conv368 = zext i8 %243 to i64, !dbg !5477
  %call369 = call zeroext i16 @PushColormapIndex(%struct._Image* %242, i64 %conv368, i32* %range_exception), !dbg !5477
  %244 = load i16*, i16** %indexes.addr, align 8, !dbg !5477
  %245 = load i64, i64* %x, align 8, !dbg !5477
  %add.ptr370 = getelementptr inbounds i16, i16* %244, i64 %245, !dbg !5477
  %246 = load i64, i64* %bit, align 8, !dbg !5477
  %add.ptr371 = getelementptr inbounds i16, i16* %add.ptr370, i64 %246, !dbg !5477
  store i16 %call369, i16* %add.ptr371, align 2, !dbg !5477
  br label %if.end372, !dbg !5477

if.end372:                                        ; preds = %if.then367, %for.body357
  %247 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5481
  %colormap373 = getelementptr inbounds %struct._Image, %struct._Image* %247, i32 0, i32 11, !dbg !5481
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap373, align 8, !dbg !5481
  %249 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %250 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr374 = getelementptr inbounds i16, i16* %249, i64 %250, !dbg !5481
  %251 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr375 = getelementptr inbounds i16, i16* %add.ptr374, i64 %251, !dbg !5481
  %cmp376 = icmp eq i16* %add.ptr375, null, !dbg !5481
  br i1 %cmp376, label %cond.true378, label %cond.false379, !dbg !5481

cond.true378:                                     ; preds = %if.end372
  br label %cond.end383, !dbg !5481

cond.false379:                                    ; preds = %if.end372
  %252 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %253 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr380 = getelementptr inbounds i16, i16* %252, i64 %253, !dbg !5481
  %254 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr381 = getelementptr inbounds i16, i16* %add.ptr380, i64 %254, !dbg !5481
  %255 = load i16, i16* %add.ptr381, align 2, !dbg !5481
  %conv382 = zext i16 %255 to i32, !dbg !5481
  br label %cond.end383, !dbg !5481

cond.end383:                                      ; preds = %cond.false379, %cond.true378
  %cond384 = phi i32 [ 0, %cond.true378 ], [ %conv382, %cond.false379 ], !dbg !5481
  %conv385 = sext i32 %cond384 to i64, !dbg !5481
  %add.ptr386 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i64 %conv385, !dbg !5481
  %red387 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr386, i32 0, i32 2, !dbg !5481
  %256 = load i16, i16* %red387, align 2, !dbg !5481
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5481
  %red388 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 0, i32 2, !dbg !5481
  store i16 %256, i16* %red388, align 2, !dbg !5481
  %258 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5481
  %colormap389 = getelementptr inbounds %struct._Image, %struct._Image* %258, i32 0, i32 11, !dbg !5481
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap389, align 8, !dbg !5481
  %260 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %261 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr390 = getelementptr inbounds i16, i16* %260, i64 %261, !dbg !5481
  %262 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr391 = getelementptr inbounds i16, i16* %add.ptr390, i64 %262, !dbg !5481
  %cmp392 = icmp eq i16* %add.ptr391, null, !dbg !5481
  br i1 %cmp392, label %cond.true394, label %cond.false395, !dbg !5481

cond.true394:                                     ; preds = %cond.end383
  br label %cond.end399, !dbg !5481

cond.false395:                                    ; preds = %cond.end383
  %263 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %264 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr396 = getelementptr inbounds i16, i16* %263, i64 %264, !dbg !5481
  %265 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr397 = getelementptr inbounds i16, i16* %add.ptr396, i64 %265, !dbg !5481
  %266 = load i16, i16* %add.ptr397, align 2, !dbg !5481
  %conv398 = zext i16 %266 to i32, !dbg !5481
  br label %cond.end399, !dbg !5481

cond.end399:                                      ; preds = %cond.false395, %cond.true394
  %cond400 = phi i32 [ 0, %cond.true394 ], [ %conv398, %cond.false395 ], !dbg !5481
  %conv401 = sext i32 %cond400 to i64, !dbg !5481
  %add.ptr402 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i64 %conv401, !dbg !5481
  %green403 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr402, i32 0, i32 1, !dbg !5481
  %267 = load i16, i16* %green403, align 2, !dbg !5481
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5481
  %green404 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 0, i32 1, !dbg !5481
  store i16 %267, i16* %green404, align 2, !dbg !5481
  %269 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5481
  %colormap405 = getelementptr inbounds %struct._Image, %struct._Image* %269, i32 0, i32 11, !dbg !5481
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap405, align 8, !dbg !5481
  %271 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %272 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr406 = getelementptr inbounds i16, i16* %271, i64 %272, !dbg !5481
  %273 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr407 = getelementptr inbounds i16, i16* %add.ptr406, i64 %273, !dbg !5481
  %cmp408 = icmp eq i16* %add.ptr407, null, !dbg !5481
  br i1 %cmp408, label %cond.true410, label %cond.false411, !dbg !5481

cond.true410:                                     ; preds = %cond.end399
  br label %cond.end415, !dbg !5481

cond.false411:                                    ; preds = %cond.end399
  %274 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %275 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr412 = getelementptr inbounds i16, i16* %274, i64 %275, !dbg !5481
  %276 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr413 = getelementptr inbounds i16, i16* %add.ptr412, i64 %276, !dbg !5481
  %277 = load i16, i16* %add.ptr413, align 2, !dbg !5481
  %conv414 = zext i16 %277 to i32, !dbg !5481
  br label %cond.end415, !dbg !5481

cond.end415:                                      ; preds = %cond.false411, %cond.true410
  %cond416 = phi i32 [ 0, %cond.true410 ], [ %conv414, %cond.false411 ], !dbg !5481
  %conv417 = sext i32 %cond416 to i64, !dbg !5481
  %add.ptr418 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i64 %conv417, !dbg !5481
  %blue419 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr418, i32 0, i32 0, !dbg !5481
  %278 = load i16, i16* %blue419, align 2, !dbg !5481
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5481
  %blue420 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 0, !dbg !5481
  store i16 %278, i16* %blue420, align 2, !dbg !5481
  %280 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5481
  %colormap421 = getelementptr inbounds %struct._Image, %struct._Image* %280, i32 0, i32 11, !dbg !5481
  %281 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap421, align 8, !dbg !5481
  %282 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %283 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr422 = getelementptr inbounds i16, i16* %282, i64 %283, !dbg !5481
  %284 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr423 = getelementptr inbounds i16, i16* %add.ptr422, i64 %284, !dbg !5481
  %cmp424 = icmp eq i16* %add.ptr423, null, !dbg !5481
  br i1 %cmp424, label %cond.true426, label %cond.false427, !dbg !5481

cond.true426:                                     ; preds = %cond.end415
  br label %cond.end431, !dbg !5481

cond.false427:                                    ; preds = %cond.end415
  %285 = load i16*, i16** %indexes.addr, align 8, !dbg !5481
  %286 = load i64, i64* %x, align 8, !dbg !5481
  %add.ptr428 = getelementptr inbounds i16, i16* %285, i64 %286, !dbg !5481
  %287 = load i64, i64* %bit, align 8, !dbg !5481
  %add.ptr429 = getelementptr inbounds i16, i16* %add.ptr428, i64 %287, !dbg !5481
  %288 = load i16, i16* %add.ptr429, align 2, !dbg !5481
  %conv430 = zext i16 %288 to i32, !dbg !5481
  br label %cond.end431, !dbg !5481

cond.end431:                                      ; preds = %cond.false427, %cond.true426
  %cond432 = phi i32 [ 0, %cond.true426 ], [ %conv430, %cond.false427 ], !dbg !5481
  %conv433 = sext i32 %cond432 to i64, !dbg !5481
  %add.ptr434 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %281, i64 %conv433, !dbg !5481
  %opacity435 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr434, i32 0, i32 3, !dbg !5481
  %289 = load i16, i16* %opacity435, align 2, !dbg !5481
  %290 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5481
  %opacity436 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %290, i32 0, i32 3, !dbg !5481
  store i16 %289, i16* %opacity436, align 2, !dbg !5481
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5483
  %incdec.ptr437 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 1, !dbg !5483
  store %struct._PixelPacket* %incdec.ptr437, %struct._PixelPacket** %q.addr, align 8, !dbg !5483
  br label %for.inc438, !dbg !5484

for.inc438:                                       ; preds = %cond.end431
  %292 = load i64, i64* %bit, align 8, !dbg !5485
  %inc439 = add nsw i64 %292, 1, !dbg !5485
  store i64 %inc439, i64* %bit, align 8, !dbg !5485
  br label %for.cond353, !dbg !5486, !llvm.loop !5487

for.end440:                                       ; preds = %for.cond353
  br label %sw.epilog, !dbg !5489

sw.bb441:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel442, metadata !5490, metadata !DIExpression()), !dbg !5492
  store i64 0, i64* %x, align 8, !dbg !5493
  br label %for.cond443, !dbg !5495

for.cond443:                                      ; preds = %for.inc514, %sw.bb441
  %293 = load i64, i64* %x, align 8, !dbg !5496
  %294 = load i64, i64* %number_pixels.addr, align 8, !dbg !5498
  %cmp444 = icmp slt i64 %293, %294, !dbg !5499
  br i1 %cmp444, label %for.body446, label %for.end516, !dbg !5500

for.body446:                                      ; preds = %for.cond443
  %295 = load i8*, i8** %p.addr, align 8, !dbg !5501
  %call447 = call i8* @PushCharPixel(i8* %295, i8* %pixel442), !dbg !5503
  store i8* %call447, i8** %p.addr, align 8, !dbg !5504
  %296 = load i16*, i16** %indexes.addr, align 8, !dbg !5505
  %297 = load i64, i64* %x, align 8, !dbg !5505
  %add.ptr448 = getelementptr inbounds i16, i16* %296, i64 %297, !dbg !5505
  %cmp449 = icmp ne i16* %add.ptr448, null, !dbg !5505
  br i1 %cmp449, label %if.then451, label %if.end455, !dbg !5508

if.then451:                                       ; preds = %for.body446
  %298 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5505
  %299 = load i8, i8* %pixel442, align 1, !dbg !5505
  %conv452 = zext i8 %299 to i64, !dbg !5505
  %call453 = call zeroext i16 @PushColormapIndex(%struct._Image* %298, i64 %conv452, i32* %range_exception), !dbg !5505
  %300 = load i16*, i16** %indexes.addr, align 8, !dbg !5505
  %301 = load i64, i64* %x, align 8, !dbg !5505
  %add.ptr454 = getelementptr inbounds i16, i16* %300, i64 %301, !dbg !5505
  store i16 %call453, i16* %add.ptr454, align 2, !dbg !5505
  br label %if.end455, !dbg !5505

if.end455:                                        ; preds = %if.then451, %for.body446
  %302 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5509
  %colormap456 = getelementptr inbounds %struct._Image, %struct._Image* %302, i32 0, i32 11, !dbg !5509
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap456, align 8, !dbg !5509
  %304 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %305 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr457 = getelementptr inbounds i16, i16* %304, i64 %305, !dbg !5509
  %cmp458 = icmp eq i16* %add.ptr457, null, !dbg !5509
  br i1 %cmp458, label %cond.true460, label %cond.false461, !dbg !5509

cond.true460:                                     ; preds = %if.end455
  br label %cond.end464, !dbg !5509

cond.false461:                                    ; preds = %if.end455
  %306 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %307 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr462 = getelementptr inbounds i16, i16* %306, i64 %307, !dbg !5509
  %308 = load i16, i16* %add.ptr462, align 2, !dbg !5509
  %conv463 = zext i16 %308 to i32, !dbg !5509
  br label %cond.end464, !dbg !5509

cond.end464:                                      ; preds = %cond.false461, %cond.true460
  %cond465 = phi i32 [ 0, %cond.true460 ], [ %conv463, %cond.false461 ], !dbg !5509
  %conv466 = sext i32 %cond465 to i64, !dbg !5509
  %add.ptr467 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %303, i64 %conv466, !dbg !5509
  %red468 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr467, i32 0, i32 2, !dbg !5509
  %309 = load i16, i16* %red468, align 2, !dbg !5509
  %310 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5509
  %red469 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %310, i32 0, i32 2, !dbg !5509
  store i16 %309, i16* %red469, align 2, !dbg !5509
  %311 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5509
  %colormap470 = getelementptr inbounds %struct._Image, %struct._Image* %311, i32 0, i32 11, !dbg !5509
  %312 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap470, align 8, !dbg !5509
  %313 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %314 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr471 = getelementptr inbounds i16, i16* %313, i64 %314, !dbg !5509
  %cmp472 = icmp eq i16* %add.ptr471, null, !dbg !5509
  br i1 %cmp472, label %cond.true474, label %cond.false475, !dbg !5509

cond.true474:                                     ; preds = %cond.end464
  br label %cond.end478, !dbg !5509

cond.false475:                                    ; preds = %cond.end464
  %315 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %316 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr476 = getelementptr inbounds i16, i16* %315, i64 %316, !dbg !5509
  %317 = load i16, i16* %add.ptr476, align 2, !dbg !5509
  %conv477 = zext i16 %317 to i32, !dbg !5509
  br label %cond.end478, !dbg !5509

cond.end478:                                      ; preds = %cond.false475, %cond.true474
  %cond479 = phi i32 [ 0, %cond.true474 ], [ %conv477, %cond.false475 ], !dbg !5509
  %conv480 = sext i32 %cond479 to i64, !dbg !5509
  %add.ptr481 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %312, i64 %conv480, !dbg !5509
  %green482 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr481, i32 0, i32 1, !dbg !5509
  %318 = load i16, i16* %green482, align 2, !dbg !5509
  %319 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5509
  %green483 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %319, i32 0, i32 1, !dbg !5509
  store i16 %318, i16* %green483, align 2, !dbg !5509
  %320 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5509
  %colormap484 = getelementptr inbounds %struct._Image, %struct._Image* %320, i32 0, i32 11, !dbg !5509
  %321 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap484, align 8, !dbg !5509
  %322 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %323 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr485 = getelementptr inbounds i16, i16* %322, i64 %323, !dbg !5509
  %cmp486 = icmp eq i16* %add.ptr485, null, !dbg !5509
  br i1 %cmp486, label %cond.true488, label %cond.false489, !dbg !5509

cond.true488:                                     ; preds = %cond.end478
  br label %cond.end492, !dbg !5509

cond.false489:                                    ; preds = %cond.end478
  %324 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %325 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr490 = getelementptr inbounds i16, i16* %324, i64 %325, !dbg !5509
  %326 = load i16, i16* %add.ptr490, align 2, !dbg !5509
  %conv491 = zext i16 %326 to i32, !dbg !5509
  br label %cond.end492, !dbg !5509

cond.end492:                                      ; preds = %cond.false489, %cond.true488
  %cond493 = phi i32 [ 0, %cond.true488 ], [ %conv491, %cond.false489 ], !dbg !5509
  %conv494 = sext i32 %cond493 to i64, !dbg !5509
  %add.ptr495 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %321, i64 %conv494, !dbg !5509
  %blue496 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr495, i32 0, i32 0, !dbg !5509
  %327 = load i16, i16* %blue496, align 2, !dbg !5509
  %328 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5509
  %blue497 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %328, i32 0, i32 0, !dbg !5509
  store i16 %327, i16* %blue497, align 2, !dbg !5509
  %329 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5509
  %colormap498 = getelementptr inbounds %struct._Image, %struct._Image* %329, i32 0, i32 11, !dbg !5509
  %330 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap498, align 8, !dbg !5509
  %331 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %332 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr499 = getelementptr inbounds i16, i16* %331, i64 %332, !dbg !5509
  %cmp500 = icmp eq i16* %add.ptr499, null, !dbg !5509
  br i1 %cmp500, label %cond.true502, label %cond.false503, !dbg !5509

cond.true502:                                     ; preds = %cond.end492
  br label %cond.end506, !dbg !5509

cond.false503:                                    ; preds = %cond.end492
  %333 = load i16*, i16** %indexes.addr, align 8, !dbg !5509
  %334 = load i64, i64* %x, align 8, !dbg !5509
  %add.ptr504 = getelementptr inbounds i16, i16* %333, i64 %334, !dbg !5509
  %335 = load i16, i16* %add.ptr504, align 2, !dbg !5509
  %conv505 = zext i16 %335 to i32, !dbg !5509
  br label %cond.end506, !dbg !5509

cond.end506:                                      ; preds = %cond.false503, %cond.true502
  %cond507 = phi i32 [ 0, %cond.true502 ], [ %conv505, %cond.false503 ], !dbg !5509
  %conv508 = sext i32 %cond507 to i64, !dbg !5509
  %add.ptr509 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %330, i64 %conv508, !dbg !5509
  %opacity510 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr509, i32 0, i32 3, !dbg !5509
  %336 = load i16, i16* %opacity510, align 2, !dbg !5509
  %337 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5509
  %opacity511 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %337, i32 0, i32 3, !dbg !5509
  store i16 %336, i16* %opacity511, align 2, !dbg !5509
  %338 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5511
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %338, i32 0, i32 6, !dbg !5512
  %339 = load i64, i64* %pad, align 8, !dbg !5512
  %340 = load i8*, i8** %p.addr, align 8, !dbg !5513
  %add.ptr512 = getelementptr inbounds i8, i8* %340, i64 %339, !dbg !5513
  store i8* %add.ptr512, i8** %p.addr, align 8, !dbg !5513
  %341 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5514
  %incdec.ptr513 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %341, i32 1, !dbg !5514
  store %struct._PixelPacket* %incdec.ptr513, %struct._PixelPacket** %q.addr, align 8, !dbg !5514
  br label %for.inc514, !dbg !5515

for.inc514:                                       ; preds = %cond.end506
  %342 = load i64, i64* %x, align 8, !dbg !5516
  %inc515 = add nsw i64 %342, 1, !dbg !5516
  store i64 %inc515, i64* %x, align 8, !dbg !5516
  br label %for.cond443, !dbg !5517, !llvm.loop !5518

for.end516:                                       ; preds = %for.cond443
  br label %sw.epilog, !dbg !5520

sw.bb517:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel518, metadata !5521, metadata !DIExpression()), !dbg !5523
  %343 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5524
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %343, i32 0, i32 2, !dbg !5526
  %344 = load i32, i32* %format, align 8, !dbg !5526
  %cmp519 = icmp eq i32 %344, 1, !dbg !5527
  br i1 %cmp519, label %if.then521, label %if.end599, !dbg !5528

if.then521:                                       ; preds = %sw.bb517
  store i64 0, i64* %x, align 8, !dbg !5529
  br label %for.cond522, !dbg !5532

for.cond522:                                      ; preds = %for.inc596, %if.then521
  %345 = load i64, i64* %x, align 8, !dbg !5533
  %346 = load i64, i64* %number_pixels.addr, align 8, !dbg !5535
  %cmp523 = icmp slt i64 %345, %346, !dbg !5536
  br i1 %cmp523, label %for.body525, label %for.end598, !dbg !5537

for.body525:                                      ; preds = %for.cond522
  %347 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5538
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %347, i32 0, i32 13, !dbg !5540
  %348 = load i32, i32* %endian, align 8, !dbg !5540
  %349 = load i8*, i8** %p.addr, align 8, !dbg !5541
  %call526 = call i8* @PushShortPixel(i32 %348, i8* %349, i16* %pixel518), !dbg !5542
  store i8* %call526, i8** %p.addr, align 8, !dbg !5543
  %350 = load i16*, i16** %indexes.addr, align 8, !dbg !5544
  %351 = load i64, i64* %x, align 8, !dbg !5544
  %add.ptr527 = getelementptr inbounds i16, i16* %350, i64 %351, !dbg !5544
  %cmp528 = icmp ne i16* %add.ptr527, null, !dbg !5544
  br i1 %cmp528, label %if.then530, label %if.end536, !dbg !5547

if.then530:                                       ; preds = %for.body525
  %352 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5544
  %353 = load i16, i16* %pixel518, align 2, !dbg !5544
  %call531 = call float @HalfToSinglePrecision(i16 zeroext %353), !dbg !5544
  %mul = fmul float 6.553500e+04, %call531, !dbg !5544
  %call532 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !5544
  %conv533 = zext i16 %call532 to i64, !dbg !5544
  %call534 = call zeroext i16 @PushColormapIndex(%struct._Image* %352, i64 %conv533, i32* %range_exception), !dbg !5544
  %354 = load i16*, i16** %indexes.addr, align 8, !dbg !5544
  %355 = load i64, i64* %x, align 8, !dbg !5544
  %add.ptr535 = getelementptr inbounds i16, i16* %354, i64 %355, !dbg !5544
  store i16 %call534, i16* %add.ptr535, align 2, !dbg !5544
  br label %if.end536, !dbg !5544

if.end536:                                        ; preds = %if.then530, %for.body525
  %356 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %colormap537 = getelementptr inbounds %struct._Image, %struct._Image* %356, i32 0, i32 11, !dbg !5548
  %357 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap537, align 8, !dbg !5548
  %358 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %359 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr538 = getelementptr inbounds i16, i16* %358, i64 %359, !dbg !5548
  %cmp539 = icmp eq i16* %add.ptr538, null, !dbg !5548
  br i1 %cmp539, label %cond.true541, label %cond.false542, !dbg !5548

cond.true541:                                     ; preds = %if.end536
  br label %cond.end545, !dbg !5548

cond.false542:                                    ; preds = %if.end536
  %360 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %361 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr543 = getelementptr inbounds i16, i16* %360, i64 %361, !dbg !5548
  %362 = load i16, i16* %add.ptr543, align 2, !dbg !5548
  %conv544 = zext i16 %362 to i32, !dbg !5548
  br label %cond.end545, !dbg !5548

cond.end545:                                      ; preds = %cond.false542, %cond.true541
  %cond546 = phi i32 [ 0, %cond.true541 ], [ %conv544, %cond.false542 ], !dbg !5548
  %conv547 = sext i32 %cond546 to i64, !dbg !5548
  %add.ptr548 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %357, i64 %conv547, !dbg !5548
  %red549 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr548, i32 0, i32 2, !dbg !5548
  %363 = load i16, i16* %red549, align 2, !dbg !5548
  %364 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5548
  %red550 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %364, i32 0, i32 2, !dbg !5548
  store i16 %363, i16* %red550, align 2, !dbg !5548
  %365 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %colormap551 = getelementptr inbounds %struct._Image, %struct._Image* %365, i32 0, i32 11, !dbg !5548
  %366 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap551, align 8, !dbg !5548
  %367 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %368 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr552 = getelementptr inbounds i16, i16* %367, i64 %368, !dbg !5548
  %cmp553 = icmp eq i16* %add.ptr552, null, !dbg !5548
  br i1 %cmp553, label %cond.true555, label %cond.false556, !dbg !5548

cond.true555:                                     ; preds = %cond.end545
  br label %cond.end559, !dbg !5548

cond.false556:                                    ; preds = %cond.end545
  %369 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %370 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr557 = getelementptr inbounds i16, i16* %369, i64 %370, !dbg !5548
  %371 = load i16, i16* %add.ptr557, align 2, !dbg !5548
  %conv558 = zext i16 %371 to i32, !dbg !5548
  br label %cond.end559, !dbg !5548

cond.end559:                                      ; preds = %cond.false556, %cond.true555
  %cond560 = phi i32 [ 0, %cond.true555 ], [ %conv558, %cond.false556 ], !dbg !5548
  %conv561 = sext i32 %cond560 to i64, !dbg !5548
  %add.ptr562 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %366, i64 %conv561, !dbg !5548
  %green563 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr562, i32 0, i32 1, !dbg !5548
  %372 = load i16, i16* %green563, align 2, !dbg !5548
  %373 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5548
  %green564 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %373, i32 0, i32 1, !dbg !5548
  store i16 %372, i16* %green564, align 2, !dbg !5548
  %374 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %colormap565 = getelementptr inbounds %struct._Image, %struct._Image* %374, i32 0, i32 11, !dbg !5548
  %375 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap565, align 8, !dbg !5548
  %376 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %377 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr566 = getelementptr inbounds i16, i16* %376, i64 %377, !dbg !5548
  %cmp567 = icmp eq i16* %add.ptr566, null, !dbg !5548
  br i1 %cmp567, label %cond.true569, label %cond.false570, !dbg !5548

cond.true569:                                     ; preds = %cond.end559
  br label %cond.end573, !dbg !5548

cond.false570:                                    ; preds = %cond.end559
  %378 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %379 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr571 = getelementptr inbounds i16, i16* %378, i64 %379, !dbg !5548
  %380 = load i16, i16* %add.ptr571, align 2, !dbg !5548
  %conv572 = zext i16 %380 to i32, !dbg !5548
  br label %cond.end573, !dbg !5548

cond.end573:                                      ; preds = %cond.false570, %cond.true569
  %cond574 = phi i32 [ 0, %cond.true569 ], [ %conv572, %cond.false570 ], !dbg !5548
  %conv575 = sext i32 %cond574 to i64, !dbg !5548
  %add.ptr576 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %375, i64 %conv575, !dbg !5548
  %blue577 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr576, i32 0, i32 0, !dbg !5548
  %381 = load i16, i16* %blue577, align 2, !dbg !5548
  %382 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5548
  %blue578 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %382, i32 0, i32 0, !dbg !5548
  store i16 %381, i16* %blue578, align 2, !dbg !5548
  %383 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5548
  %colormap579 = getelementptr inbounds %struct._Image, %struct._Image* %383, i32 0, i32 11, !dbg !5548
  %384 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap579, align 8, !dbg !5548
  %385 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %386 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr580 = getelementptr inbounds i16, i16* %385, i64 %386, !dbg !5548
  %cmp581 = icmp eq i16* %add.ptr580, null, !dbg !5548
  br i1 %cmp581, label %cond.true583, label %cond.false584, !dbg !5548

cond.true583:                                     ; preds = %cond.end573
  br label %cond.end587, !dbg !5548

cond.false584:                                    ; preds = %cond.end573
  %387 = load i16*, i16** %indexes.addr, align 8, !dbg !5548
  %388 = load i64, i64* %x, align 8, !dbg !5548
  %add.ptr585 = getelementptr inbounds i16, i16* %387, i64 %388, !dbg !5548
  %389 = load i16, i16* %add.ptr585, align 2, !dbg !5548
  %conv586 = zext i16 %389 to i32, !dbg !5548
  br label %cond.end587, !dbg !5548

cond.end587:                                      ; preds = %cond.false584, %cond.true583
  %cond588 = phi i32 [ 0, %cond.true583 ], [ %conv586, %cond.false584 ], !dbg !5548
  %conv589 = sext i32 %cond588 to i64, !dbg !5548
  %add.ptr590 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %384, i64 %conv589, !dbg !5548
  %opacity591 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr590, i32 0, i32 3, !dbg !5548
  %390 = load i16, i16* %opacity591, align 2, !dbg !5548
  %391 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5548
  %opacity592 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %391, i32 0, i32 3, !dbg !5548
  store i16 %390, i16* %opacity592, align 2, !dbg !5548
  %392 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5550
  %pad593 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %392, i32 0, i32 6, !dbg !5551
  %393 = load i64, i64* %pad593, align 8, !dbg !5551
  %394 = load i8*, i8** %p.addr, align 8, !dbg !5552
  %add.ptr594 = getelementptr inbounds i8, i8* %394, i64 %393, !dbg !5552
  store i8* %add.ptr594, i8** %p.addr, align 8, !dbg !5552
  %395 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5553
  %incdec.ptr595 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %395, i32 1, !dbg !5553
  store %struct._PixelPacket* %incdec.ptr595, %struct._PixelPacket** %q.addr, align 8, !dbg !5553
  br label %for.inc596, !dbg !5554

for.inc596:                                       ; preds = %cond.end587
  %396 = load i64, i64* %x, align 8, !dbg !5555
  %inc597 = add nsw i64 %396, 1, !dbg !5555
  store i64 %inc597, i64* %x, align 8, !dbg !5555
  br label %for.cond522, !dbg !5556, !llvm.loop !5557

for.end598:                                       ; preds = %for.cond522
  br label %sw.epilog, !dbg !5559

if.end599:                                        ; preds = %sw.bb517
  store i64 0, i64* %x, align 8, !dbg !5560
  br label %for.cond600, !dbg !5562

for.cond600:                                      ; preds = %for.inc673, %if.end599
  %397 = load i64, i64* %x, align 8, !dbg !5563
  %398 = load i64, i64* %number_pixels.addr, align 8, !dbg !5565
  %cmp601 = icmp slt i64 %397, %398, !dbg !5566
  br i1 %cmp601, label %for.body603, label %for.end675, !dbg !5567

for.body603:                                      ; preds = %for.cond600
  %399 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5568
  %endian604 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %399, i32 0, i32 13, !dbg !5570
  %400 = load i32, i32* %endian604, align 8, !dbg !5570
  %401 = load i8*, i8** %p.addr, align 8, !dbg !5571
  %call605 = call i8* @PushShortPixel(i32 %400, i8* %401, i16* %pixel518), !dbg !5572
  store i8* %call605, i8** %p.addr, align 8, !dbg !5573
  %402 = load i16*, i16** %indexes.addr, align 8, !dbg !5574
  %403 = load i64, i64* %x, align 8, !dbg !5574
  %add.ptr606 = getelementptr inbounds i16, i16* %402, i64 %403, !dbg !5574
  %cmp607 = icmp ne i16* %add.ptr606, null, !dbg !5574
  br i1 %cmp607, label %if.then609, label %if.end613, !dbg !5577

if.then609:                                       ; preds = %for.body603
  %404 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5574
  %405 = load i16, i16* %pixel518, align 2, !dbg !5574
  %conv610 = zext i16 %405 to i64, !dbg !5574
  %call611 = call zeroext i16 @PushColormapIndex(%struct._Image* %404, i64 %conv610, i32* %range_exception), !dbg !5574
  %406 = load i16*, i16** %indexes.addr, align 8, !dbg !5574
  %407 = load i64, i64* %x, align 8, !dbg !5574
  %add.ptr612 = getelementptr inbounds i16, i16* %406, i64 %407, !dbg !5574
  store i16 %call611, i16* %add.ptr612, align 2, !dbg !5574
  br label %if.end613, !dbg !5574

if.end613:                                        ; preds = %if.then609, %for.body603
  %408 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5578
  %colormap614 = getelementptr inbounds %struct._Image, %struct._Image* %408, i32 0, i32 11, !dbg !5578
  %409 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap614, align 8, !dbg !5578
  %410 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %411 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr615 = getelementptr inbounds i16, i16* %410, i64 %411, !dbg !5578
  %cmp616 = icmp eq i16* %add.ptr615, null, !dbg !5578
  br i1 %cmp616, label %cond.true618, label %cond.false619, !dbg !5578

cond.true618:                                     ; preds = %if.end613
  br label %cond.end622, !dbg !5578

cond.false619:                                    ; preds = %if.end613
  %412 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %413 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr620 = getelementptr inbounds i16, i16* %412, i64 %413, !dbg !5578
  %414 = load i16, i16* %add.ptr620, align 2, !dbg !5578
  %conv621 = zext i16 %414 to i32, !dbg !5578
  br label %cond.end622, !dbg !5578

cond.end622:                                      ; preds = %cond.false619, %cond.true618
  %cond623 = phi i32 [ 0, %cond.true618 ], [ %conv621, %cond.false619 ], !dbg !5578
  %conv624 = sext i32 %cond623 to i64, !dbg !5578
  %add.ptr625 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %409, i64 %conv624, !dbg !5578
  %red626 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr625, i32 0, i32 2, !dbg !5578
  %415 = load i16, i16* %red626, align 2, !dbg !5578
  %416 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5578
  %red627 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %416, i32 0, i32 2, !dbg !5578
  store i16 %415, i16* %red627, align 2, !dbg !5578
  %417 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5578
  %colormap628 = getelementptr inbounds %struct._Image, %struct._Image* %417, i32 0, i32 11, !dbg !5578
  %418 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap628, align 8, !dbg !5578
  %419 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %420 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr629 = getelementptr inbounds i16, i16* %419, i64 %420, !dbg !5578
  %cmp630 = icmp eq i16* %add.ptr629, null, !dbg !5578
  br i1 %cmp630, label %cond.true632, label %cond.false633, !dbg !5578

cond.true632:                                     ; preds = %cond.end622
  br label %cond.end636, !dbg !5578

cond.false633:                                    ; preds = %cond.end622
  %421 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %422 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr634 = getelementptr inbounds i16, i16* %421, i64 %422, !dbg !5578
  %423 = load i16, i16* %add.ptr634, align 2, !dbg !5578
  %conv635 = zext i16 %423 to i32, !dbg !5578
  br label %cond.end636, !dbg !5578

cond.end636:                                      ; preds = %cond.false633, %cond.true632
  %cond637 = phi i32 [ 0, %cond.true632 ], [ %conv635, %cond.false633 ], !dbg !5578
  %conv638 = sext i32 %cond637 to i64, !dbg !5578
  %add.ptr639 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %418, i64 %conv638, !dbg !5578
  %green640 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr639, i32 0, i32 1, !dbg !5578
  %424 = load i16, i16* %green640, align 2, !dbg !5578
  %425 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5578
  %green641 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %425, i32 0, i32 1, !dbg !5578
  store i16 %424, i16* %green641, align 2, !dbg !5578
  %426 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5578
  %colormap642 = getelementptr inbounds %struct._Image, %struct._Image* %426, i32 0, i32 11, !dbg !5578
  %427 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap642, align 8, !dbg !5578
  %428 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %429 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr643 = getelementptr inbounds i16, i16* %428, i64 %429, !dbg !5578
  %cmp644 = icmp eq i16* %add.ptr643, null, !dbg !5578
  br i1 %cmp644, label %cond.true646, label %cond.false647, !dbg !5578

cond.true646:                                     ; preds = %cond.end636
  br label %cond.end650, !dbg !5578

cond.false647:                                    ; preds = %cond.end636
  %430 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %431 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr648 = getelementptr inbounds i16, i16* %430, i64 %431, !dbg !5578
  %432 = load i16, i16* %add.ptr648, align 2, !dbg !5578
  %conv649 = zext i16 %432 to i32, !dbg !5578
  br label %cond.end650, !dbg !5578

cond.end650:                                      ; preds = %cond.false647, %cond.true646
  %cond651 = phi i32 [ 0, %cond.true646 ], [ %conv649, %cond.false647 ], !dbg !5578
  %conv652 = sext i32 %cond651 to i64, !dbg !5578
  %add.ptr653 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %427, i64 %conv652, !dbg !5578
  %blue654 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr653, i32 0, i32 0, !dbg !5578
  %433 = load i16, i16* %blue654, align 2, !dbg !5578
  %434 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5578
  %blue655 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %434, i32 0, i32 0, !dbg !5578
  store i16 %433, i16* %blue655, align 2, !dbg !5578
  %435 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5578
  %colormap656 = getelementptr inbounds %struct._Image, %struct._Image* %435, i32 0, i32 11, !dbg !5578
  %436 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap656, align 8, !dbg !5578
  %437 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %438 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr657 = getelementptr inbounds i16, i16* %437, i64 %438, !dbg !5578
  %cmp658 = icmp eq i16* %add.ptr657, null, !dbg !5578
  br i1 %cmp658, label %cond.true660, label %cond.false661, !dbg !5578

cond.true660:                                     ; preds = %cond.end650
  br label %cond.end664, !dbg !5578

cond.false661:                                    ; preds = %cond.end650
  %439 = load i16*, i16** %indexes.addr, align 8, !dbg !5578
  %440 = load i64, i64* %x, align 8, !dbg !5578
  %add.ptr662 = getelementptr inbounds i16, i16* %439, i64 %440, !dbg !5578
  %441 = load i16, i16* %add.ptr662, align 2, !dbg !5578
  %conv663 = zext i16 %441 to i32, !dbg !5578
  br label %cond.end664, !dbg !5578

cond.end664:                                      ; preds = %cond.false661, %cond.true660
  %cond665 = phi i32 [ 0, %cond.true660 ], [ %conv663, %cond.false661 ], !dbg !5578
  %conv666 = sext i32 %cond665 to i64, !dbg !5578
  %add.ptr667 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %436, i64 %conv666, !dbg !5578
  %opacity668 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr667, i32 0, i32 3, !dbg !5578
  %442 = load i16, i16* %opacity668, align 2, !dbg !5578
  %443 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5578
  %opacity669 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %443, i32 0, i32 3, !dbg !5578
  store i16 %442, i16* %opacity669, align 2, !dbg !5578
  %444 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5580
  %pad670 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %444, i32 0, i32 6, !dbg !5581
  %445 = load i64, i64* %pad670, align 8, !dbg !5581
  %446 = load i8*, i8** %p.addr, align 8, !dbg !5582
  %add.ptr671 = getelementptr inbounds i8, i8* %446, i64 %445, !dbg !5582
  store i8* %add.ptr671, i8** %p.addr, align 8, !dbg !5582
  %447 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5583
  %incdec.ptr672 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %447, i32 1, !dbg !5583
  store %struct._PixelPacket* %incdec.ptr672, %struct._PixelPacket** %q.addr, align 8, !dbg !5583
  br label %for.inc673, !dbg !5584

for.inc673:                                       ; preds = %cond.end664
  %448 = load i64, i64* %x, align 8, !dbg !5585
  %inc674 = add nsw i64 %448, 1, !dbg !5585
  store i64 %inc674, i64* %x, align 8, !dbg !5585
  br label %for.cond600, !dbg !5586, !llvm.loop !5587

for.end675:                                       ; preds = %for.cond600
  br label %sw.epilog, !dbg !5589

sw.bb676:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel677, metadata !5590, metadata !DIExpression()), !dbg !5592
  %449 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5593
  %format678 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %449, i32 0, i32 2, !dbg !5595
  %450 = load i32, i32* %format678, align 8, !dbg !5595
  %cmp679 = icmp eq i32 %450, 1, !dbg !5596
  br i1 %cmp679, label %if.then681, label %if.end759, !dbg !5597

if.then681:                                       ; preds = %sw.bb676
  call void @llvm.dbg.declare(metadata float* %pixel682, metadata !5598, metadata !DIExpression()), !dbg !5600
  store i64 0, i64* %x, align 8, !dbg !5601
  br label %for.cond683, !dbg !5603

for.cond683:                                      ; preds = %for.inc756, %if.then681
  %451 = load i64, i64* %x, align 8, !dbg !5604
  %452 = load i64, i64* %number_pixels.addr, align 8, !dbg !5606
  %cmp684 = icmp slt i64 %451, %452, !dbg !5607
  br i1 %cmp684, label %for.body686, label %for.end758, !dbg !5608

for.body686:                                      ; preds = %for.cond683
  %453 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5609
  %454 = load i8*, i8** %p.addr, align 8, !dbg !5611
  %call687 = call i8* @PushFloatPixel(%struct._QuantumInfo* %453, i8* %454, float* %pixel682), !dbg !5612
  store i8* %call687, i8** %p.addr, align 8, !dbg !5613
  %455 = load i16*, i16** %indexes.addr, align 8, !dbg !5614
  %456 = load i64, i64* %x, align 8, !dbg !5614
  %add.ptr688 = getelementptr inbounds i16, i16* %455, i64 %456, !dbg !5614
  %cmp689 = icmp ne i16* %add.ptr688, null, !dbg !5614
  br i1 %cmp689, label %if.then691, label %if.end696, !dbg !5617

if.then691:                                       ; preds = %for.body686
  %457 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5614
  %458 = load float, float* %pixel682, align 4, !dbg !5614
  %call692 = call zeroext i16 @ClampToQuantum(float %458), !dbg !5614
  %conv693 = zext i16 %call692 to i64, !dbg !5614
  %call694 = call zeroext i16 @PushColormapIndex(%struct._Image* %457, i64 %conv693, i32* %range_exception), !dbg !5614
  %459 = load i16*, i16** %indexes.addr, align 8, !dbg !5614
  %460 = load i64, i64* %x, align 8, !dbg !5614
  %add.ptr695 = getelementptr inbounds i16, i16* %459, i64 %460, !dbg !5614
  store i16 %call694, i16* %add.ptr695, align 2, !dbg !5614
  br label %if.end696, !dbg !5614

if.end696:                                        ; preds = %if.then691, %for.body686
  %461 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5618
  %colormap697 = getelementptr inbounds %struct._Image, %struct._Image* %461, i32 0, i32 11, !dbg !5618
  %462 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap697, align 8, !dbg !5618
  %463 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %464 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr698 = getelementptr inbounds i16, i16* %463, i64 %464, !dbg !5618
  %cmp699 = icmp eq i16* %add.ptr698, null, !dbg !5618
  br i1 %cmp699, label %cond.true701, label %cond.false702, !dbg !5618

cond.true701:                                     ; preds = %if.end696
  br label %cond.end705, !dbg !5618

cond.false702:                                    ; preds = %if.end696
  %465 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %466 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr703 = getelementptr inbounds i16, i16* %465, i64 %466, !dbg !5618
  %467 = load i16, i16* %add.ptr703, align 2, !dbg !5618
  %conv704 = zext i16 %467 to i32, !dbg !5618
  br label %cond.end705, !dbg !5618

cond.end705:                                      ; preds = %cond.false702, %cond.true701
  %cond706 = phi i32 [ 0, %cond.true701 ], [ %conv704, %cond.false702 ], !dbg !5618
  %conv707 = sext i32 %cond706 to i64, !dbg !5618
  %add.ptr708 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %462, i64 %conv707, !dbg !5618
  %red709 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr708, i32 0, i32 2, !dbg !5618
  %468 = load i16, i16* %red709, align 2, !dbg !5618
  %469 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5618
  %red710 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %469, i32 0, i32 2, !dbg !5618
  store i16 %468, i16* %red710, align 2, !dbg !5618
  %470 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5618
  %colormap711 = getelementptr inbounds %struct._Image, %struct._Image* %470, i32 0, i32 11, !dbg !5618
  %471 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap711, align 8, !dbg !5618
  %472 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %473 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr712 = getelementptr inbounds i16, i16* %472, i64 %473, !dbg !5618
  %cmp713 = icmp eq i16* %add.ptr712, null, !dbg !5618
  br i1 %cmp713, label %cond.true715, label %cond.false716, !dbg !5618

cond.true715:                                     ; preds = %cond.end705
  br label %cond.end719, !dbg !5618

cond.false716:                                    ; preds = %cond.end705
  %474 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %475 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr717 = getelementptr inbounds i16, i16* %474, i64 %475, !dbg !5618
  %476 = load i16, i16* %add.ptr717, align 2, !dbg !5618
  %conv718 = zext i16 %476 to i32, !dbg !5618
  br label %cond.end719, !dbg !5618

cond.end719:                                      ; preds = %cond.false716, %cond.true715
  %cond720 = phi i32 [ 0, %cond.true715 ], [ %conv718, %cond.false716 ], !dbg !5618
  %conv721 = sext i32 %cond720 to i64, !dbg !5618
  %add.ptr722 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %471, i64 %conv721, !dbg !5618
  %green723 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr722, i32 0, i32 1, !dbg !5618
  %477 = load i16, i16* %green723, align 2, !dbg !5618
  %478 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5618
  %green724 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %478, i32 0, i32 1, !dbg !5618
  store i16 %477, i16* %green724, align 2, !dbg !5618
  %479 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5618
  %colormap725 = getelementptr inbounds %struct._Image, %struct._Image* %479, i32 0, i32 11, !dbg !5618
  %480 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap725, align 8, !dbg !5618
  %481 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %482 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr726 = getelementptr inbounds i16, i16* %481, i64 %482, !dbg !5618
  %cmp727 = icmp eq i16* %add.ptr726, null, !dbg !5618
  br i1 %cmp727, label %cond.true729, label %cond.false730, !dbg !5618

cond.true729:                                     ; preds = %cond.end719
  br label %cond.end733, !dbg !5618

cond.false730:                                    ; preds = %cond.end719
  %483 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %484 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr731 = getelementptr inbounds i16, i16* %483, i64 %484, !dbg !5618
  %485 = load i16, i16* %add.ptr731, align 2, !dbg !5618
  %conv732 = zext i16 %485 to i32, !dbg !5618
  br label %cond.end733, !dbg !5618

cond.end733:                                      ; preds = %cond.false730, %cond.true729
  %cond734 = phi i32 [ 0, %cond.true729 ], [ %conv732, %cond.false730 ], !dbg !5618
  %conv735 = sext i32 %cond734 to i64, !dbg !5618
  %add.ptr736 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %480, i64 %conv735, !dbg !5618
  %blue737 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr736, i32 0, i32 0, !dbg !5618
  %486 = load i16, i16* %blue737, align 2, !dbg !5618
  %487 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5618
  %blue738 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %487, i32 0, i32 0, !dbg !5618
  store i16 %486, i16* %blue738, align 2, !dbg !5618
  %488 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5618
  %colormap739 = getelementptr inbounds %struct._Image, %struct._Image* %488, i32 0, i32 11, !dbg !5618
  %489 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap739, align 8, !dbg !5618
  %490 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %491 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr740 = getelementptr inbounds i16, i16* %490, i64 %491, !dbg !5618
  %cmp741 = icmp eq i16* %add.ptr740, null, !dbg !5618
  br i1 %cmp741, label %cond.true743, label %cond.false744, !dbg !5618

cond.true743:                                     ; preds = %cond.end733
  br label %cond.end747, !dbg !5618

cond.false744:                                    ; preds = %cond.end733
  %492 = load i16*, i16** %indexes.addr, align 8, !dbg !5618
  %493 = load i64, i64* %x, align 8, !dbg !5618
  %add.ptr745 = getelementptr inbounds i16, i16* %492, i64 %493, !dbg !5618
  %494 = load i16, i16* %add.ptr745, align 2, !dbg !5618
  %conv746 = zext i16 %494 to i32, !dbg !5618
  br label %cond.end747, !dbg !5618

cond.end747:                                      ; preds = %cond.false744, %cond.true743
  %cond748 = phi i32 [ 0, %cond.true743 ], [ %conv746, %cond.false744 ], !dbg !5618
  %conv749 = sext i32 %cond748 to i64, !dbg !5618
  %add.ptr750 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %489, i64 %conv749, !dbg !5618
  %opacity751 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr750, i32 0, i32 3, !dbg !5618
  %495 = load i16, i16* %opacity751, align 2, !dbg !5618
  %496 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5618
  %opacity752 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %496, i32 0, i32 3, !dbg !5618
  store i16 %495, i16* %opacity752, align 2, !dbg !5618
  %497 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5620
  %pad753 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %497, i32 0, i32 6, !dbg !5621
  %498 = load i64, i64* %pad753, align 8, !dbg !5621
  %499 = load i8*, i8** %p.addr, align 8, !dbg !5622
  %add.ptr754 = getelementptr inbounds i8, i8* %499, i64 %498, !dbg !5622
  store i8* %add.ptr754, i8** %p.addr, align 8, !dbg !5622
  %500 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5623
  %incdec.ptr755 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %500, i32 1, !dbg !5623
  store %struct._PixelPacket* %incdec.ptr755, %struct._PixelPacket** %q.addr, align 8, !dbg !5623
  br label %for.inc756, !dbg !5624

for.inc756:                                       ; preds = %cond.end747
  %501 = load i64, i64* %x, align 8, !dbg !5625
  %inc757 = add nsw i64 %501, 1, !dbg !5625
  store i64 %inc757, i64* %x, align 8, !dbg !5625
  br label %for.cond683, !dbg !5626, !llvm.loop !5627

for.end758:                                       ; preds = %for.cond683
  br label %sw.epilog, !dbg !5629

if.end759:                                        ; preds = %sw.bb676
  store i64 0, i64* %x, align 8, !dbg !5630
  br label %for.cond760, !dbg !5632

for.cond760:                                      ; preds = %for.inc833, %if.end759
  %502 = load i64, i64* %x, align 8, !dbg !5633
  %503 = load i64, i64* %number_pixels.addr, align 8, !dbg !5635
  %cmp761 = icmp slt i64 %502, %503, !dbg !5636
  br i1 %cmp761, label %for.body763, label %for.end835, !dbg !5637

for.body763:                                      ; preds = %for.cond760
  %504 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5638
  %endian764 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %504, i32 0, i32 13, !dbg !5640
  %505 = load i32, i32* %endian764, align 8, !dbg !5640
  %506 = load i8*, i8** %p.addr, align 8, !dbg !5641
  %call765 = call i8* @PushLongPixel(i32 %505, i8* %506, i32* %pixel677), !dbg !5642
  store i8* %call765, i8** %p.addr, align 8, !dbg !5643
  %507 = load i16*, i16** %indexes.addr, align 8, !dbg !5644
  %508 = load i64, i64* %x, align 8, !dbg !5644
  %add.ptr766 = getelementptr inbounds i16, i16* %507, i64 %508, !dbg !5644
  %cmp767 = icmp ne i16* %add.ptr766, null, !dbg !5644
  br i1 %cmp767, label %if.then769, label %if.end773, !dbg !5647

if.then769:                                       ; preds = %for.body763
  %509 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5644
  %510 = load i32, i32* %pixel677, align 4, !dbg !5644
  %conv770 = zext i32 %510 to i64, !dbg !5644
  %call771 = call zeroext i16 @PushColormapIndex(%struct._Image* %509, i64 %conv770, i32* %range_exception), !dbg !5644
  %511 = load i16*, i16** %indexes.addr, align 8, !dbg !5644
  %512 = load i64, i64* %x, align 8, !dbg !5644
  %add.ptr772 = getelementptr inbounds i16, i16* %511, i64 %512, !dbg !5644
  store i16 %call771, i16* %add.ptr772, align 2, !dbg !5644
  br label %if.end773, !dbg !5644

if.end773:                                        ; preds = %if.then769, %for.body763
  %513 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5648
  %colormap774 = getelementptr inbounds %struct._Image, %struct._Image* %513, i32 0, i32 11, !dbg !5648
  %514 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap774, align 8, !dbg !5648
  %515 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %516 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr775 = getelementptr inbounds i16, i16* %515, i64 %516, !dbg !5648
  %cmp776 = icmp eq i16* %add.ptr775, null, !dbg !5648
  br i1 %cmp776, label %cond.true778, label %cond.false779, !dbg !5648

cond.true778:                                     ; preds = %if.end773
  br label %cond.end782, !dbg !5648

cond.false779:                                    ; preds = %if.end773
  %517 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %518 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr780 = getelementptr inbounds i16, i16* %517, i64 %518, !dbg !5648
  %519 = load i16, i16* %add.ptr780, align 2, !dbg !5648
  %conv781 = zext i16 %519 to i32, !dbg !5648
  br label %cond.end782, !dbg !5648

cond.end782:                                      ; preds = %cond.false779, %cond.true778
  %cond783 = phi i32 [ 0, %cond.true778 ], [ %conv781, %cond.false779 ], !dbg !5648
  %conv784 = sext i32 %cond783 to i64, !dbg !5648
  %add.ptr785 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %514, i64 %conv784, !dbg !5648
  %red786 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr785, i32 0, i32 2, !dbg !5648
  %520 = load i16, i16* %red786, align 2, !dbg !5648
  %521 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5648
  %red787 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %521, i32 0, i32 2, !dbg !5648
  store i16 %520, i16* %red787, align 2, !dbg !5648
  %522 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5648
  %colormap788 = getelementptr inbounds %struct._Image, %struct._Image* %522, i32 0, i32 11, !dbg !5648
  %523 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap788, align 8, !dbg !5648
  %524 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %525 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr789 = getelementptr inbounds i16, i16* %524, i64 %525, !dbg !5648
  %cmp790 = icmp eq i16* %add.ptr789, null, !dbg !5648
  br i1 %cmp790, label %cond.true792, label %cond.false793, !dbg !5648

cond.true792:                                     ; preds = %cond.end782
  br label %cond.end796, !dbg !5648

cond.false793:                                    ; preds = %cond.end782
  %526 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %527 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr794 = getelementptr inbounds i16, i16* %526, i64 %527, !dbg !5648
  %528 = load i16, i16* %add.ptr794, align 2, !dbg !5648
  %conv795 = zext i16 %528 to i32, !dbg !5648
  br label %cond.end796, !dbg !5648

cond.end796:                                      ; preds = %cond.false793, %cond.true792
  %cond797 = phi i32 [ 0, %cond.true792 ], [ %conv795, %cond.false793 ], !dbg !5648
  %conv798 = sext i32 %cond797 to i64, !dbg !5648
  %add.ptr799 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %523, i64 %conv798, !dbg !5648
  %green800 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr799, i32 0, i32 1, !dbg !5648
  %529 = load i16, i16* %green800, align 2, !dbg !5648
  %530 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5648
  %green801 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %530, i32 0, i32 1, !dbg !5648
  store i16 %529, i16* %green801, align 2, !dbg !5648
  %531 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5648
  %colormap802 = getelementptr inbounds %struct._Image, %struct._Image* %531, i32 0, i32 11, !dbg !5648
  %532 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap802, align 8, !dbg !5648
  %533 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %534 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr803 = getelementptr inbounds i16, i16* %533, i64 %534, !dbg !5648
  %cmp804 = icmp eq i16* %add.ptr803, null, !dbg !5648
  br i1 %cmp804, label %cond.true806, label %cond.false807, !dbg !5648

cond.true806:                                     ; preds = %cond.end796
  br label %cond.end810, !dbg !5648

cond.false807:                                    ; preds = %cond.end796
  %535 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %536 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr808 = getelementptr inbounds i16, i16* %535, i64 %536, !dbg !5648
  %537 = load i16, i16* %add.ptr808, align 2, !dbg !5648
  %conv809 = zext i16 %537 to i32, !dbg !5648
  br label %cond.end810, !dbg !5648

cond.end810:                                      ; preds = %cond.false807, %cond.true806
  %cond811 = phi i32 [ 0, %cond.true806 ], [ %conv809, %cond.false807 ], !dbg !5648
  %conv812 = sext i32 %cond811 to i64, !dbg !5648
  %add.ptr813 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %532, i64 %conv812, !dbg !5648
  %blue814 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr813, i32 0, i32 0, !dbg !5648
  %538 = load i16, i16* %blue814, align 2, !dbg !5648
  %539 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5648
  %blue815 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %539, i32 0, i32 0, !dbg !5648
  store i16 %538, i16* %blue815, align 2, !dbg !5648
  %540 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5648
  %colormap816 = getelementptr inbounds %struct._Image, %struct._Image* %540, i32 0, i32 11, !dbg !5648
  %541 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap816, align 8, !dbg !5648
  %542 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %543 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr817 = getelementptr inbounds i16, i16* %542, i64 %543, !dbg !5648
  %cmp818 = icmp eq i16* %add.ptr817, null, !dbg !5648
  br i1 %cmp818, label %cond.true820, label %cond.false821, !dbg !5648

cond.true820:                                     ; preds = %cond.end810
  br label %cond.end824, !dbg !5648

cond.false821:                                    ; preds = %cond.end810
  %544 = load i16*, i16** %indexes.addr, align 8, !dbg !5648
  %545 = load i64, i64* %x, align 8, !dbg !5648
  %add.ptr822 = getelementptr inbounds i16, i16* %544, i64 %545, !dbg !5648
  %546 = load i16, i16* %add.ptr822, align 2, !dbg !5648
  %conv823 = zext i16 %546 to i32, !dbg !5648
  br label %cond.end824, !dbg !5648

cond.end824:                                      ; preds = %cond.false821, %cond.true820
  %cond825 = phi i32 [ 0, %cond.true820 ], [ %conv823, %cond.false821 ], !dbg !5648
  %conv826 = sext i32 %cond825 to i64, !dbg !5648
  %add.ptr827 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %541, i64 %conv826, !dbg !5648
  %opacity828 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr827, i32 0, i32 3, !dbg !5648
  %547 = load i16, i16* %opacity828, align 2, !dbg !5648
  %548 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5648
  %opacity829 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %548, i32 0, i32 3, !dbg !5648
  store i16 %547, i16* %opacity829, align 2, !dbg !5648
  %549 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5650
  %pad830 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %549, i32 0, i32 6, !dbg !5651
  %550 = load i64, i64* %pad830, align 8, !dbg !5651
  %551 = load i8*, i8** %p.addr, align 8, !dbg !5652
  %add.ptr831 = getelementptr inbounds i8, i8* %551, i64 %550, !dbg !5652
  store i8* %add.ptr831, i8** %p.addr, align 8, !dbg !5652
  %552 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5653
  %incdec.ptr832 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %552, i32 1, !dbg !5653
  store %struct._PixelPacket* %incdec.ptr832, %struct._PixelPacket** %q.addr, align 8, !dbg !5653
  br label %for.inc833, !dbg !5654

for.inc833:                                       ; preds = %cond.end824
  %553 = load i64, i64* %x, align 8, !dbg !5655
  %inc834 = add nsw i64 %553, 1, !dbg !5655
  store i64 %inc834, i64* %x, align 8, !dbg !5655
  br label %for.cond760, !dbg !5656, !llvm.loop !5657

for.end835:                                       ; preds = %for.cond760
  br label %sw.epilog, !dbg !5659

sw.bb836:                                         ; preds = %if.end
  %554 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5660
  %format837 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %554, i32 0, i32 2, !dbg !5663
  %555 = load i32, i32* %format837, align 8, !dbg !5663
  %cmp838 = icmp eq i32 %555, 1, !dbg !5664
  br i1 %cmp838, label %if.then840, label %if.end919, !dbg !5665

if.then840:                                       ; preds = %sw.bb836
  call void @llvm.dbg.declare(metadata double* %pixel841, metadata !5666, metadata !DIExpression()), !dbg !5668
  store i64 0, i64* %x, align 8, !dbg !5669
  br label %for.cond842, !dbg !5671

for.cond842:                                      ; preds = %for.inc916, %if.then840
  %556 = load i64, i64* %x, align 8, !dbg !5672
  %557 = load i64, i64* %number_pixels.addr, align 8, !dbg !5674
  %cmp843 = icmp slt i64 %556, %557, !dbg !5675
  br i1 %cmp843, label %for.body845, label %for.end918, !dbg !5676

for.body845:                                      ; preds = %for.cond842
  %558 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5677
  %559 = load i8*, i8** %p.addr, align 8, !dbg !5679
  %call846 = call i8* @PushDoublePixel(%struct._QuantumInfo* %558, i8* %559, double* %pixel841), !dbg !5680
  store i8* %call846, i8** %p.addr, align 8, !dbg !5681
  %560 = load i16*, i16** %indexes.addr, align 8, !dbg !5682
  %561 = load i64, i64* %x, align 8, !dbg !5682
  %add.ptr847 = getelementptr inbounds i16, i16* %560, i64 %561, !dbg !5682
  %cmp848 = icmp ne i16* %add.ptr847, null, !dbg !5682
  br i1 %cmp848, label %if.then850, label %if.end856, !dbg !5685

if.then850:                                       ; preds = %for.body845
  %562 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5682
  %563 = load double, double* %pixel841, align 8, !dbg !5682
  %conv851 = fptrunc double %563 to float, !dbg !5682
  %call852 = call zeroext i16 @ClampToQuantum(float %conv851), !dbg !5682
  %conv853 = zext i16 %call852 to i64, !dbg !5682
  %call854 = call zeroext i16 @PushColormapIndex(%struct._Image* %562, i64 %conv853, i32* %range_exception), !dbg !5682
  %564 = load i16*, i16** %indexes.addr, align 8, !dbg !5682
  %565 = load i64, i64* %x, align 8, !dbg !5682
  %add.ptr855 = getelementptr inbounds i16, i16* %564, i64 %565, !dbg !5682
  store i16 %call854, i16* %add.ptr855, align 2, !dbg !5682
  br label %if.end856, !dbg !5682

if.end856:                                        ; preds = %if.then850, %for.body845
  %566 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5686
  %colormap857 = getelementptr inbounds %struct._Image, %struct._Image* %566, i32 0, i32 11, !dbg !5686
  %567 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap857, align 8, !dbg !5686
  %568 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %569 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr858 = getelementptr inbounds i16, i16* %568, i64 %569, !dbg !5686
  %cmp859 = icmp eq i16* %add.ptr858, null, !dbg !5686
  br i1 %cmp859, label %cond.true861, label %cond.false862, !dbg !5686

cond.true861:                                     ; preds = %if.end856
  br label %cond.end865, !dbg !5686

cond.false862:                                    ; preds = %if.end856
  %570 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %571 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr863 = getelementptr inbounds i16, i16* %570, i64 %571, !dbg !5686
  %572 = load i16, i16* %add.ptr863, align 2, !dbg !5686
  %conv864 = zext i16 %572 to i32, !dbg !5686
  br label %cond.end865, !dbg !5686

cond.end865:                                      ; preds = %cond.false862, %cond.true861
  %cond866 = phi i32 [ 0, %cond.true861 ], [ %conv864, %cond.false862 ], !dbg !5686
  %conv867 = sext i32 %cond866 to i64, !dbg !5686
  %add.ptr868 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %567, i64 %conv867, !dbg !5686
  %red869 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr868, i32 0, i32 2, !dbg !5686
  %573 = load i16, i16* %red869, align 2, !dbg !5686
  %574 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5686
  %red870 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %574, i32 0, i32 2, !dbg !5686
  store i16 %573, i16* %red870, align 2, !dbg !5686
  %575 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5686
  %colormap871 = getelementptr inbounds %struct._Image, %struct._Image* %575, i32 0, i32 11, !dbg !5686
  %576 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap871, align 8, !dbg !5686
  %577 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %578 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr872 = getelementptr inbounds i16, i16* %577, i64 %578, !dbg !5686
  %cmp873 = icmp eq i16* %add.ptr872, null, !dbg !5686
  br i1 %cmp873, label %cond.true875, label %cond.false876, !dbg !5686

cond.true875:                                     ; preds = %cond.end865
  br label %cond.end879, !dbg !5686

cond.false876:                                    ; preds = %cond.end865
  %579 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %580 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr877 = getelementptr inbounds i16, i16* %579, i64 %580, !dbg !5686
  %581 = load i16, i16* %add.ptr877, align 2, !dbg !5686
  %conv878 = zext i16 %581 to i32, !dbg !5686
  br label %cond.end879, !dbg !5686

cond.end879:                                      ; preds = %cond.false876, %cond.true875
  %cond880 = phi i32 [ 0, %cond.true875 ], [ %conv878, %cond.false876 ], !dbg !5686
  %conv881 = sext i32 %cond880 to i64, !dbg !5686
  %add.ptr882 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %576, i64 %conv881, !dbg !5686
  %green883 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr882, i32 0, i32 1, !dbg !5686
  %582 = load i16, i16* %green883, align 2, !dbg !5686
  %583 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5686
  %green884 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %583, i32 0, i32 1, !dbg !5686
  store i16 %582, i16* %green884, align 2, !dbg !5686
  %584 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5686
  %colormap885 = getelementptr inbounds %struct._Image, %struct._Image* %584, i32 0, i32 11, !dbg !5686
  %585 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap885, align 8, !dbg !5686
  %586 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %587 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr886 = getelementptr inbounds i16, i16* %586, i64 %587, !dbg !5686
  %cmp887 = icmp eq i16* %add.ptr886, null, !dbg !5686
  br i1 %cmp887, label %cond.true889, label %cond.false890, !dbg !5686

cond.true889:                                     ; preds = %cond.end879
  br label %cond.end893, !dbg !5686

cond.false890:                                    ; preds = %cond.end879
  %588 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %589 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr891 = getelementptr inbounds i16, i16* %588, i64 %589, !dbg !5686
  %590 = load i16, i16* %add.ptr891, align 2, !dbg !5686
  %conv892 = zext i16 %590 to i32, !dbg !5686
  br label %cond.end893, !dbg !5686

cond.end893:                                      ; preds = %cond.false890, %cond.true889
  %cond894 = phi i32 [ 0, %cond.true889 ], [ %conv892, %cond.false890 ], !dbg !5686
  %conv895 = sext i32 %cond894 to i64, !dbg !5686
  %add.ptr896 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %585, i64 %conv895, !dbg !5686
  %blue897 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr896, i32 0, i32 0, !dbg !5686
  %591 = load i16, i16* %blue897, align 2, !dbg !5686
  %592 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5686
  %blue898 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %592, i32 0, i32 0, !dbg !5686
  store i16 %591, i16* %blue898, align 2, !dbg !5686
  %593 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5686
  %colormap899 = getelementptr inbounds %struct._Image, %struct._Image* %593, i32 0, i32 11, !dbg !5686
  %594 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap899, align 8, !dbg !5686
  %595 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %596 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr900 = getelementptr inbounds i16, i16* %595, i64 %596, !dbg !5686
  %cmp901 = icmp eq i16* %add.ptr900, null, !dbg !5686
  br i1 %cmp901, label %cond.true903, label %cond.false904, !dbg !5686

cond.true903:                                     ; preds = %cond.end893
  br label %cond.end907, !dbg !5686

cond.false904:                                    ; preds = %cond.end893
  %597 = load i16*, i16** %indexes.addr, align 8, !dbg !5686
  %598 = load i64, i64* %x, align 8, !dbg !5686
  %add.ptr905 = getelementptr inbounds i16, i16* %597, i64 %598, !dbg !5686
  %599 = load i16, i16* %add.ptr905, align 2, !dbg !5686
  %conv906 = zext i16 %599 to i32, !dbg !5686
  br label %cond.end907, !dbg !5686

cond.end907:                                      ; preds = %cond.false904, %cond.true903
  %cond908 = phi i32 [ 0, %cond.true903 ], [ %conv906, %cond.false904 ], !dbg !5686
  %conv909 = sext i32 %cond908 to i64, !dbg !5686
  %add.ptr910 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %594, i64 %conv909, !dbg !5686
  %opacity911 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr910, i32 0, i32 3, !dbg !5686
  %600 = load i16, i16* %opacity911, align 2, !dbg !5686
  %601 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5686
  %opacity912 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %601, i32 0, i32 3, !dbg !5686
  store i16 %600, i16* %opacity912, align 2, !dbg !5686
  %602 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5688
  %pad913 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %602, i32 0, i32 6, !dbg !5689
  %603 = load i64, i64* %pad913, align 8, !dbg !5689
  %604 = load i8*, i8** %p.addr, align 8, !dbg !5690
  %add.ptr914 = getelementptr inbounds i8, i8* %604, i64 %603, !dbg !5690
  store i8* %add.ptr914, i8** %p.addr, align 8, !dbg !5690
  %605 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5691
  %incdec.ptr915 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %605, i32 1, !dbg !5691
  store %struct._PixelPacket* %incdec.ptr915, %struct._PixelPacket** %q.addr, align 8, !dbg !5691
  br label %for.inc916, !dbg !5692

for.inc916:                                       ; preds = %cond.end907
  %606 = load i64, i64* %x, align 8, !dbg !5693
  %inc917 = add nsw i64 %606, 1, !dbg !5693
  store i64 %inc917, i64* %x, align 8, !dbg !5693
  br label %for.cond842, !dbg !5694, !llvm.loop !5695

for.end918:                                       ; preds = %for.cond842
  br label %sw.epilog, !dbg !5697

if.end919:                                        ; preds = %sw.bb836
  br label %sw.default, !dbg !5698

sw.default:                                       ; preds = %if.end, %if.end919
  store i64 0, i64* %x, align 8, !dbg !5699
  br label %for.cond920, !dbg !5702

for.cond920:                                      ; preds = %for.inc992, %sw.default
  %607 = load i64, i64* %x, align 8, !dbg !5703
  %608 = load i64, i64* %number_pixels.addr, align 8, !dbg !5705
  %cmp921 = icmp slt i64 %607, %608, !dbg !5706
  br i1 %cmp921, label %for.body923, label %for.end994, !dbg !5707

for.body923:                                      ; preds = %for.cond920
  %609 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5708
  %610 = load i8*, i8** %p.addr, align 8, !dbg !5710
  %call924 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %609, i8* %610, i32* %pixel), !dbg !5711
  store i8* %call924, i8** %p.addr, align 8, !dbg !5712
  %611 = load i16*, i16** %indexes.addr, align 8, !dbg !5713
  %612 = load i64, i64* %x, align 8, !dbg !5713
  %add.ptr925 = getelementptr inbounds i16, i16* %611, i64 %612, !dbg !5713
  %cmp926 = icmp ne i16* %add.ptr925, null, !dbg !5713
  br i1 %cmp926, label %if.then928, label %if.end932, !dbg !5716

if.then928:                                       ; preds = %for.body923
  %613 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5713
  %614 = load i32, i32* %pixel, align 4, !dbg !5713
  %conv929 = zext i32 %614 to i64, !dbg !5713
  %call930 = call zeroext i16 @PushColormapIndex(%struct._Image* %613, i64 %conv929, i32* %range_exception), !dbg !5713
  %615 = load i16*, i16** %indexes.addr, align 8, !dbg !5713
  %616 = load i64, i64* %x, align 8, !dbg !5713
  %add.ptr931 = getelementptr inbounds i16, i16* %615, i64 %616, !dbg !5713
  store i16 %call930, i16* %add.ptr931, align 2, !dbg !5713
  br label %if.end932, !dbg !5713

if.end932:                                        ; preds = %if.then928, %for.body923
  %617 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5717
  %colormap933 = getelementptr inbounds %struct._Image, %struct._Image* %617, i32 0, i32 11, !dbg !5717
  %618 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap933, align 8, !dbg !5717
  %619 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %620 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr934 = getelementptr inbounds i16, i16* %619, i64 %620, !dbg !5717
  %cmp935 = icmp eq i16* %add.ptr934, null, !dbg !5717
  br i1 %cmp935, label %cond.true937, label %cond.false938, !dbg !5717

cond.true937:                                     ; preds = %if.end932
  br label %cond.end941, !dbg !5717

cond.false938:                                    ; preds = %if.end932
  %621 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %622 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr939 = getelementptr inbounds i16, i16* %621, i64 %622, !dbg !5717
  %623 = load i16, i16* %add.ptr939, align 2, !dbg !5717
  %conv940 = zext i16 %623 to i32, !dbg !5717
  br label %cond.end941, !dbg !5717

cond.end941:                                      ; preds = %cond.false938, %cond.true937
  %cond942 = phi i32 [ 0, %cond.true937 ], [ %conv940, %cond.false938 ], !dbg !5717
  %conv943 = sext i32 %cond942 to i64, !dbg !5717
  %add.ptr944 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %618, i64 %conv943, !dbg !5717
  %red945 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr944, i32 0, i32 2, !dbg !5717
  %624 = load i16, i16* %red945, align 2, !dbg !5717
  %625 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5717
  %red946 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %625, i32 0, i32 2, !dbg !5717
  store i16 %624, i16* %red946, align 2, !dbg !5717
  %626 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5717
  %colormap947 = getelementptr inbounds %struct._Image, %struct._Image* %626, i32 0, i32 11, !dbg !5717
  %627 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap947, align 8, !dbg !5717
  %628 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %629 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr948 = getelementptr inbounds i16, i16* %628, i64 %629, !dbg !5717
  %cmp949 = icmp eq i16* %add.ptr948, null, !dbg !5717
  br i1 %cmp949, label %cond.true951, label %cond.false952, !dbg !5717

cond.true951:                                     ; preds = %cond.end941
  br label %cond.end955, !dbg !5717

cond.false952:                                    ; preds = %cond.end941
  %630 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %631 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr953 = getelementptr inbounds i16, i16* %630, i64 %631, !dbg !5717
  %632 = load i16, i16* %add.ptr953, align 2, !dbg !5717
  %conv954 = zext i16 %632 to i32, !dbg !5717
  br label %cond.end955, !dbg !5717

cond.end955:                                      ; preds = %cond.false952, %cond.true951
  %cond956 = phi i32 [ 0, %cond.true951 ], [ %conv954, %cond.false952 ], !dbg !5717
  %conv957 = sext i32 %cond956 to i64, !dbg !5717
  %add.ptr958 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %627, i64 %conv957, !dbg !5717
  %green959 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr958, i32 0, i32 1, !dbg !5717
  %633 = load i16, i16* %green959, align 2, !dbg !5717
  %634 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5717
  %green960 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %634, i32 0, i32 1, !dbg !5717
  store i16 %633, i16* %green960, align 2, !dbg !5717
  %635 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5717
  %colormap961 = getelementptr inbounds %struct._Image, %struct._Image* %635, i32 0, i32 11, !dbg !5717
  %636 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap961, align 8, !dbg !5717
  %637 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %638 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr962 = getelementptr inbounds i16, i16* %637, i64 %638, !dbg !5717
  %cmp963 = icmp eq i16* %add.ptr962, null, !dbg !5717
  br i1 %cmp963, label %cond.true965, label %cond.false966, !dbg !5717

cond.true965:                                     ; preds = %cond.end955
  br label %cond.end969, !dbg !5717

cond.false966:                                    ; preds = %cond.end955
  %639 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %640 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr967 = getelementptr inbounds i16, i16* %639, i64 %640, !dbg !5717
  %641 = load i16, i16* %add.ptr967, align 2, !dbg !5717
  %conv968 = zext i16 %641 to i32, !dbg !5717
  br label %cond.end969, !dbg !5717

cond.end969:                                      ; preds = %cond.false966, %cond.true965
  %cond970 = phi i32 [ 0, %cond.true965 ], [ %conv968, %cond.false966 ], !dbg !5717
  %conv971 = sext i32 %cond970 to i64, !dbg !5717
  %add.ptr972 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %636, i64 %conv971, !dbg !5717
  %blue973 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr972, i32 0, i32 0, !dbg !5717
  %642 = load i16, i16* %blue973, align 2, !dbg !5717
  %643 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5717
  %blue974 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %643, i32 0, i32 0, !dbg !5717
  store i16 %642, i16* %blue974, align 2, !dbg !5717
  %644 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5717
  %colormap975 = getelementptr inbounds %struct._Image, %struct._Image* %644, i32 0, i32 11, !dbg !5717
  %645 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap975, align 8, !dbg !5717
  %646 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %647 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr976 = getelementptr inbounds i16, i16* %646, i64 %647, !dbg !5717
  %cmp977 = icmp eq i16* %add.ptr976, null, !dbg !5717
  br i1 %cmp977, label %cond.true979, label %cond.false980, !dbg !5717

cond.true979:                                     ; preds = %cond.end969
  br label %cond.end983, !dbg !5717

cond.false980:                                    ; preds = %cond.end969
  %648 = load i16*, i16** %indexes.addr, align 8, !dbg !5717
  %649 = load i64, i64* %x, align 8, !dbg !5717
  %add.ptr981 = getelementptr inbounds i16, i16* %648, i64 %649, !dbg !5717
  %650 = load i16, i16* %add.ptr981, align 2, !dbg !5717
  %conv982 = zext i16 %650 to i32, !dbg !5717
  br label %cond.end983, !dbg !5717

cond.end983:                                      ; preds = %cond.false980, %cond.true979
  %cond984 = phi i32 [ 0, %cond.true979 ], [ %conv982, %cond.false980 ], !dbg !5717
  %conv985 = sext i32 %cond984 to i64, !dbg !5717
  %add.ptr986 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %645, i64 %conv985, !dbg !5717
  %opacity987 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr986, i32 0, i32 3, !dbg !5717
  %651 = load i16, i16* %opacity987, align 2, !dbg !5717
  %652 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5717
  %opacity988 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %652, i32 0, i32 3, !dbg !5717
  store i16 %651, i16* %opacity988, align 2, !dbg !5717
  %653 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5719
  %pad989 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %653, i32 0, i32 6, !dbg !5720
  %654 = load i64, i64* %pad989, align 8, !dbg !5720
  %655 = load i8*, i8** %p.addr, align 8, !dbg !5721
  %add.ptr990 = getelementptr inbounds i8, i8* %655, i64 %654, !dbg !5721
  store i8* %add.ptr990, i8** %p.addr, align 8, !dbg !5721
  %656 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5722
  %incdec.ptr991 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %656, i32 1, !dbg !5722
  store %struct._PixelPacket* %incdec.ptr991, %struct._PixelPacket** %q.addr, align 8, !dbg !5722
  br label %for.inc992, !dbg !5723

for.inc992:                                       ; preds = %cond.end983
  %657 = load i64, i64* %x, align 8, !dbg !5724
  %inc993 = add nsw i64 %657, 1, !dbg !5724
  store i64 %inc993, i64* %x, align 8, !dbg !5724
  br label %for.cond920, !dbg !5725, !llvm.loop !5726

for.end994:                                       ; preds = %for.cond920
  br label %sw.epilog, !dbg !5728

sw.epilog:                                        ; preds = %for.end994, %for.end918, %for.end835, %for.end758, %for.end675, %for.end598, %for.end516, %for.end440, %for.end195
  %658 = load i32, i32* %range_exception, align 4, !dbg !5729
  %cmp995 = icmp ne i32 %658, 0, !dbg !5731
  br i1 %cmp995, label %if.then997, label %if.end1001, !dbg !5732

if.then997:                                       ; preds = %sw.epilog
  %659 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5733
  %660 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5734
  %filename998 = getelementptr inbounds %struct._Image, %struct._Image* %660, i32 0, i32 53, !dbg !5735
  %arraydecay999 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename998, i64 0, i64 0, !dbg !5734
  %call1000 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %659, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2492, i32 425, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay999), !dbg !5736
  br label %if.end1001, !dbg !5737

if.end1001:                                       ; preds = %if.then, %if.then997, %sw.epilog
  ret void, !dbg !5738
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportIndexAlphaQuantum(%struct._Image* %image, %struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q, i16* noalias %indexes, %struct._ExceptionInfo* %exception) #0 !dbg !5739 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %range_exception = alloca i32, align 4
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel131 = alloca i8, align 1
  %pixel215 = alloca i8, align 1
  %pixel297 = alloca i16, align 2
  %pixel472 = alloca i32, align 4
  %pixel477 = alloca float, align 4
  %pixel649 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !5742, metadata !DIExpression()), !dbg !5743
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !5744, metadata !DIExpression()), !dbg !5745
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !5746, metadata !DIExpression()), !dbg !5747
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !5748, metadata !DIExpression()), !dbg !5749
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !5750, metadata !DIExpression()), !dbg !5751
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.declare(metadata i32* %range_exception, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata i64* %range, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata i64* %x, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !5760, metadata !DIExpression()), !dbg !5761
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !5762, metadata !DIExpression()), !dbg !5763
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5764
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 0, !dbg !5766
  %1 = load i32, i32* %storage_class, align 8, !dbg !5766
  %cmp = icmp ne i32 %1, 2, !dbg !5767
  br i1 %cmp, label %if.then, label %if.end, !dbg !5768

if.then:                                          ; preds = %entry
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5769
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5771
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !5772
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !5771
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2518, i32 465, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !5773
  br label %if.end825, !dbg !5774

if.end:                                           ; preds = %entry
  store i32 0, i32* %range_exception, align 4, !dbg !5775
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5776
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 0, !dbg !5777
  %5 = load i64, i64* %depth, align 8, !dbg !5777
  switch i64 %5, label %sw.default [
    i64 1, label %sw.bb
    i64 4, label %sw.bb130
    i64 8, label %sw.bb214
    i64 16, label %sw.bb296
    i64 32, label %sw.bb471
    i64 64, label %sw.bb644
  ], !dbg !5778

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !5779, metadata !DIExpression()), !dbg !5782
  %6 = load i64, i64* %number_pixels.addr, align 8, !dbg !5783
  %sub = sub nsw i64 %6, 3, !dbg !5785
  store i64 %sub, i64* %x, align 8, !dbg !5786
  br label %for.cond, !dbg !5787

for.cond:                                         ; preds = %for.inc53, %sw.bb
  %7 = load i64, i64* %x, align 8, !dbg !5788
  %cmp2 = icmp sgt i64 %7, 0, !dbg !5790
  br i1 %cmp2, label %for.body, label %for.end55, !dbg !5791

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %bit, align 8, !dbg !5792
  br label %for.cond3, !dbg !5795

for.cond3:                                        ; preds = %for.inc, %for.body
  %8 = load i64, i64* %bit, align 8, !dbg !5796
  %cmp4 = icmp slt i64 %8, 8, !dbg !5798
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !5799

for.body5:                                        ; preds = %for.cond3
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5800
  %min_is_white = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 7, !dbg !5803
  %10 = load i32, i32* %min_is_white, align 8, !dbg !5803
  %cmp6 = icmp eq i32 %10, 0, !dbg !5804
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !5805

if.then7:                                         ; preds = %for.body5
  %11 = load i8*, i8** %p.addr, align 8, !dbg !5806
  %12 = load i8, i8* %11, align 1, !dbg !5807
  %conv = zext i8 %12 to i32, !dbg !5808
  %13 = load i64, i64* %bit, align 8, !dbg !5809
  %sub8 = sub nsw i64 7, %13, !dbg !5810
  %sh_prom = trunc i64 %sub8 to i32, !dbg !5811
  %shl = shl i32 1, %sh_prom, !dbg !5811
  %and = and i32 %conv, %shl, !dbg !5812
  %cmp9 = icmp eq i32 %and, 0, !dbg !5813
  %14 = zext i1 %cmp9 to i64, !dbg !5814
  %cond = select i1 %cmp9, i32 0, i32 1, !dbg !5814
  %conv11 = trunc i32 %cond to i8, !dbg !5815
  store i8 %conv11, i8* %pixel1, align 1, !dbg !5816
  br label %if.end21, !dbg !5817

if.else:                                          ; preds = %for.body5
  %15 = load i8*, i8** %p.addr, align 8, !dbg !5818
  %16 = load i8, i8* %15, align 1, !dbg !5819
  %conv12 = zext i8 %16 to i32, !dbg !5820
  %17 = load i64, i64* %bit, align 8, !dbg !5821
  %sub13 = sub nsw i64 7, %17, !dbg !5822
  %sh_prom14 = trunc i64 %sub13 to i32, !dbg !5823
  %shl15 = shl i32 1, %sh_prom14, !dbg !5823
  %and16 = and i32 %conv12, %shl15, !dbg !5824
  %cmp17 = icmp ne i32 %and16, 0, !dbg !5825
  %18 = zext i1 %cmp17 to i64, !dbg !5826
  %cond19 = select i1 %cmp17, i32 0, i32 1, !dbg !5826
  %conv20 = trunc i32 %cond19 to i8, !dbg !5827
  store i8 %conv20, i8* %pixel1, align 1, !dbg !5828
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then7
  %19 = load i16*, i16** %indexes.addr, align 8, !dbg !5829
  %20 = load i64, i64* %x, align 8, !dbg !5829
  %add.ptr = getelementptr inbounds i16, i16* %19, i64 %20, !dbg !5829
  %21 = load i64, i64* %bit, align 8, !dbg !5829
  %div = sdiv i64 %21, 2, !dbg !5829
  %add.ptr22 = getelementptr inbounds i16, i16* %add.ptr, i64 %div, !dbg !5829
  %cmp23 = icmp ne i16* %add.ptr22, null, !dbg !5829
  br i1 %cmp23, label %if.then25, label %if.end34, !dbg !5832

if.then25:                                        ; preds = %if.end21
  %22 = load i8, i8* %pixel1, align 1, !dbg !5829
  %conv26 = zext i8 %22 to i32, !dbg !5829
  %cmp27 = icmp eq i32 %conv26, 0, !dbg !5829
  %23 = zext i1 %cmp27 to i64, !dbg !5829
  %cond29 = select i1 %cmp27, i32 0, i32 1, !dbg !5829
  %conv30 = trunc i32 %cond29 to i16, !dbg !5829
  %24 = load i16*, i16** %indexes.addr, align 8, !dbg !5829
  %25 = load i64, i64* %x, align 8, !dbg !5829
  %add.ptr31 = getelementptr inbounds i16, i16* %24, i64 %25, !dbg !5829
  %26 = load i64, i64* %bit, align 8, !dbg !5829
  %div32 = sdiv i64 %26, 2, !dbg !5829
  %add.ptr33 = getelementptr inbounds i16, i16* %add.ptr31, i64 %div32, !dbg !5829
  store i16 %conv30, i16* %add.ptr33, align 2, !dbg !5829
  br label %if.end34, !dbg !5829

if.end34:                                         ; preds = %if.then25, %if.end21
  %27 = load i8, i8* %pixel1, align 1, !dbg !5833
  %conv35 = zext i8 %27 to i32, !dbg !5833
  %cmp36 = icmp eq i32 %conv35, 0, !dbg !5833
  %28 = zext i1 %cmp36 to i64, !dbg !5833
  %cond38 = select i1 %cmp36, i32 0, i32 65535, !dbg !5833
  %conv39 = trunc i32 %cond38 to i16, !dbg !5833
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5833
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 2, !dbg !5833
  store i16 %conv39, i16* %red, align 2, !dbg !5833
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5834
  %red40 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !5834
  %31 = load i16, i16* %red40, align 2, !dbg !5834
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5834
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 1, !dbg !5834
  store i16 %31, i16* %green, align 2, !dbg !5834
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5835
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 2, !dbg !5835
  %34 = load i16, i16* %red41, align 2, !dbg !5835
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5835
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 0, !dbg !5835
  store i16 %34, i16* %blue, align 2, !dbg !5835
  %36 = load i8*, i8** %p.addr, align 8, !dbg !5836
  %37 = load i8, i8* %36, align 1, !dbg !5836
  %conv42 = zext i8 %37 to i64, !dbg !5836
  %38 = load i64, i64* %bit, align 8, !dbg !5836
  %sub43 = sub nsw i64 6, %38, !dbg !5836
  %conv44 = trunc i64 %sub43 to i8, !dbg !5836
  %conv45 = zext i8 %conv44 to i32, !dbg !5836
  %sh_prom46 = zext i32 %conv45 to i64, !dbg !5836
  %shl47 = shl i64 1, %sh_prom46, !dbg !5836
  %and48 = and i64 %conv42, %shl47, !dbg !5836
  %cmp49 = icmp eq i64 %and48, 0, !dbg !5836
  %39 = zext i1 %cmp49 to i64, !dbg !5836
  %cond51 = select i1 %cmp49, i32 65535, i32 0, !dbg !5836
  %conv52 = trunc i32 %cond51 to i16, !dbg !5836
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5836
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 3, !dbg !5836
  store i16 %conv52, i16* %opacity, align 2, !dbg !5836
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5837
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 1, !dbg !5837
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !5837
  br label %for.inc, !dbg !5838

for.inc:                                          ; preds = %if.end34
  %42 = load i64, i64* %bit, align 8, !dbg !5839
  %add = add nsw i64 %42, 2, !dbg !5839
  store i64 %add, i64* %bit, align 8, !dbg !5839
  br label %for.cond3, !dbg !5840, !llvm.loop !5841

for.end:                                          ; preds = %for.cond3
  br label %for.inc53, !dbg !5843

for.inc53:                                        ; preds = %for.end
  %43 = load i64, i64* %x, align 8, !dbg !5844
  %sub54 = sub nsw i64 %43, 4, !dbg !5844
  store i64 %sub54, i64* %x, align 8, !dbg !5844
  br label %for.cond, !dbg !5845, !llvm.loop !5846

for.end55:                                        ; preds = %for.cond
  %44 = load i64, i64* %number_pixels.addr, align 8, !dbg !5848
  %rem = urem i64 %44, 4, !dbg !5850
  %cmp56 = icmp ne i64 %rem, 0, !dbg !5851
  br i1 %cmp56, label %if.then58, label %if.end129, !dbg !5852

if.then58:                                        ; preds = %for.end55
  store i64 0, i64* %bit, align 8, !dbg !5853
  br label %for.cond59, !dbg !5855

for.cond59:                                       ; preds = %for.inc126, %if.then58
  %45 = load i64, i64* %bit, align 8, !dbg !5856
  %46 = load i64, i64* %number_pixels.addr, align 8, !dbg !5858
  %rem60 = urem i64 %46, 4, !dbg !5859
  %cmp61 = icmp slt i64 %45, %rem60, !dbg !5860
  br i1 %cmp61, label %for.body63, label %for.end128, !dbg !5861

for.body63:                                       ; preds = %for.cond59
  %47 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5862
  %min_is_white64 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %47, i32 0, i32 7, !dbg !5865
  %48 = load i32, i32* %min_is_white64, align 8, !dbg !5865
  %cmp65 = icmp eq i32 %48, 0, !dbg !5866
  br i1 %cmp65, label %if.then67, label %if.else77, !dbg !5867

if.then67:                                        ; preds = %for.body63
  %49 = load i8*, i8** %p.addr, align 8, !dbg !5868
  %50 = load i8, i8* %49, align 1, !dbg !5869
  %conv68 = zext i8 %50 to i32, !dbg !5870
  %51 = load i64, i64* %bit, align 8, !dbg !5871
  %sub69 = sub nsw i64 7, %51, !dbg !5872
  %sh_prom70 = trunc i64 %sub69 to i32, !dbg !5873
  %shl71 = shl i32 1, %sh_prom70, !dbg !5873
  %and72 = and i32 %conv68, %shl71, !dbg !5874
  %cmp73 = icmp eq i32 %and72, 0, !dbg !5875
  %52 = zext i1 %cmp73 to i64, !dbg !5876
  %cond75 = select i1 %cmp73, i32 0, i32 1, !dbg !5876
  %conv76 = trunc i32 %cond75 to i8, !dbg !5877
  store i8 %conv76, i8* %pixel1, align 1, !dbg !5878
  br label %if.end87, !dbg !5879

if.else77:                                        ; preds = %for.body63
  %53 = load i8*, i8** %p.addr, align 8, !dbg !5880
  %54 = load i8, i8* %53, align 1, !dbg !5881
  %conv78 = zext i8 %54 to i32, !dbg !5882
  %55 = load i64, i64* %bit, align 8, !dbg !5883
  %sub79 = sub nsw i64 7, %55, !dbg !5884
  %sh_prom80 = trunc i64 %sub79 to i32, !dbg !5885
  %shl81 = shl i32 1, %sh_prom80, !dbg !5885
  %and82 = and i32 %conv78, %shl81, !dbg !5886
  %cmp83 = icmp ne i32 %and82, 0, !dbg !5887
  %56 = zext i1 %cmp83 to i64, !dbg !5888
  %cond85 = select i1 %cmp83, i32 0, i32 1, !dbg !5888
  %conv86 = trunc i32 %cond85 to i8, !dbg !5889
  store i8 %conv86, i8* %pixel1, align 1, !dbg !5890
  br label %if.end87

if.end87:                                         ; preds = %if.else77, %if.then67
  %57 = load i16*, i16** %indexes.addr, align 8, !dbg !5891
  %58 = load i64, i64* %x, align 8, !dbg !5891
  %add.ptr88 = getelementptr inbounds i16, i16* %57, i64 %58, !dbg !5891
  %59 = load i64, i64* %bit, align 8, !dbg !5891
  %div89 = sdiv i64 %59, 2, !dbg !5891
  %add.ptr90 = getelementptr inbounds i16, i16* %add.ptr88, i64 %div89, !dbg !5891
  %cmp91 = icmp ne i16* %add.ptr90, null, !dbg !5891
  br i1 %cmp91, label %if.then93, label %if.end102, !dbg !5894

if.then93:                                        ; preds = %if.end87
  %60 = load i8, i8* %pixel1, align 1, !dbg !5891
  %conv94 = zext i8 %60 to i32, !dbg !5891
  %cmp95 = icmp eq i32 %conv94, 0, !dbg !5891
  %61 = zext i1 %cmp95 to i64, !dbg !5891
  %cond97 = select i1 %cmp95, i32 0, i32 1, !dbg !5891
  %conv98 = trunc i32 %cond97 to i16, !dbg !5891
  %62 = load i16*, i16** %indexes.addr, align 8, !dbg !5891
  %63 = load i64, i64* %x, align 8, !dbg !5891
  %add.ptr99 = getelementptr inbounds i16, i16* %62, i64 %63, !dbg !5891
  %64 = load i64, i64* %bit, align 8, !dbg !5891
  %div100 = sdiv i64 %64, 2, !dbg !5891
  %add.ptr101 = getelementptr inbounds i16, i16* %add.ptr99, i64 %div100, !dbg !5891
  store i16 %conv98, i16* %add.ptr101, align 2, !dbg !5891
  br label %if.end102, !dbg !5891

if.end102:                                        ; preds = %if.then93, %if.end87
  %65 = load i8, i8* %pixel1, align 1, !dbg !5895
  %conv103 = zext i8 %65 to i32, !dbg !5895
  %cmp104 = icmp eq i32 %conv103, 0, !dbg !5895
  %66 = zext i1 %cmp104 to i64, !dbg !5895
  %cond106 = select i1 %cmp104, i32 0, i32 65535, !dbg !5895
  %conv107 = trunc i32 %cond106 to i16, !dbg !5895
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5895
  %red108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 2, !dbg !5895
  store i16 %conv107, i16* %red108, align 2, !dbg !5895
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5896
  %red109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 2, !dbg !5896
  %69 = load i16, i16* %red109, align 2, !dbg !5896
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5896
  %green110 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 1, !dbg !5896
  store i16 %69, i16* %green110, align 2, !dbg !5896
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5897
  %red111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 2, !dbg !5897
  %72 = load i16, i16* %red111, align 2, !dbg !5897
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5897
  %blue112 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 0, i32 0, !dbg !5897
  store i16 %72, i16* %blue112, align 2, !dbg !5897
  %74 = load i8*, i8** %p.addr, align 8, !dbg !5898
  %75 = load i8, i8* %74, align 1, !dbg !5898
  %conv113 = zext i8 %75 to i64, !dbg !5898
  %76 = load i64, i64* %bit, align 8, !dbg !5898
  %sub114 = sub nsw i64 6, %76, !dbg !5898
  %conv115 = trunc i64 %sub114 to i8, !dbg !5898
  %conv116 = zext i8 %conv115 to i32, !dbg !5898
  %sh_prom117 = zext i32 %conv116 to i64, !dbg !5898
  %shl118 = shl i64 1, %sh_prom117, !dbg !5898
  %and119 = and i64 %conv113, %shl118, !dbg !5898
  %cmp120 = icmp eq i64 %and119, 0, !dbg !5898
  %77 = zext i1 %cmp120 to i64, !dbg !5898
  %cond122 = select i1 %cmp120, i32 65535, i32 0, !dbg !5898
  %conv123 = trunc i32 %cond122 to i16, !dbg !5898
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5898
  %opacity124 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 3, !dbg !5898
  store i16 %conv123, i16* %opacity124, align 2, !dbg !5898
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5899
  %incdec.ptr125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 1, !dbg !5899
  store %struct._PixelPacket* %incdec.ptr125, %struct._PixelPacket** %q.addr, align 8, !dbg !5899
  br label %for.inc126, !dbg !5900

for.inc126:                                       ; preds = %if.end102
  %80 = load i64, i64* %bit, align 8, !dbg !5901
  %add127 = add nsw i64 %80, 2, !dbg !5901
  store i64 %add127, i64* %bit, align 8, !dbg !5901
  br label %for.cond59, !dbg !5902, !llvm.loop !5903

for.end128:                                       ; preds = %for.cond59
  br label %if.end129, !dbg !5904

if.end129:                                        ; preds = %for.end128, %for.end55
  br label %sw.epilog, !dbg !5905

sw.bb130:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel131, metadata !5906, metadata !DIExpression()), !dbg !5908
  %81 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5909
  %depth132 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %81, i32 0, i32 0, !dbg !5910
  %82 = load i64, i64* %depth132, align 8, !dbg !5910
  %call133 = call i64 @GetQuantumRange(i64 %82), !dbg !5911
  store i64 %call133, i64* %range, align 8, !dbg !5912
  store i64 0, i64* %x, align 8, !dbg !5913
  br label %for.cond134, !dbg !5915

for.cond134:                                      ; preds = %for.inc212, %sw.bb130
  %83 = load i64, i64* %x, align 8, !dbg !5916
  %84 = load i64, i64* %number_pixels.addr, align 8, !dbg !5918
  %cmp135 = icmp slt i64 %83, %84, !dbg !5919
  br i1 %cmp135, label %for.body137, label %for.end213, !dbg !5920

for.body137:                                      ; preds = %for.cond134
  %85 = load i8*, i8** %p.addr, align 8, !dbg !5921
  %86 = load i8, i8* %85, align 1, !dbg !5923
  %conv138 = zext i8 %86 to i32, !dbg !5923
  %shr = ashr i32 %conv138, 4, !dbg !5924
  %and139 = and i32 %shr, 15, !dbg !5925
  %conv140 = trunc i32 %and139 to i8, !dbg !5926
  store i8 %conv140, i8* %pixel131, align 1, !dbg !5927
  %87 = load i16*, i16** %indexes.addr, align 8, !dbg !5928
  %88 = load i64, i64* %x, align 8, !dbg !5928
  %add.ptr141 = getelementptr inbounds i16, i16* %87, i64 %88, !dbg !5928
  %cmp142 = icmp ne i16* %add.ptr141, null, !dbg !5928
  br i1 %cmp142, label %if.then144, label %if.end148, !dbg !5931

if.then144:                                       ; preds = %for.body137
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5928
  %90 = load i8, i8* %pixel131, align 1, !dbg !5928
  %conv145 = zext i8 %90 to i64, !dbg !5928
  %call146 = call zeroext i16 @PushColormapIndex(%struct._Image* %89, i64 %conv145, i32* %range_exception), !dbg !5928
  %91 = load i16*, i16** %indexes.addr, align 8, !dbg !5928
  %92 = load i64, i64* %x, align 8, !dbg !5928
  %add.ptr147 = getelementptr inbounds i16, i16* %91, i64 %92, !dbg !5928
  store i16 %call146, i16* %add.ptr147, align 2, !dbg !5928
  br label %if.end148, !dbg !5928

if.end148:                                        ; preds = %if.then144, %for.body137
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5932
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %93, i32 0, i32 11, !dbg !5932
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5932
  %95 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %96 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr149 = getelementptr inbounds i16, i16* %95, i64 %96, !dbg !5932
  %cmp150 = icmp eq i16* %add.ptr149, null, !dbg !5932
  br i1 %cmp150, label %cond.true, label %cond.false, !dbg !5932

cond.true:                                        ; preds = %if.end148
  br label %cond.end, !dbg !5932

cond.false:                                       ; preds = %if.end148
  %97 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %98 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr152 = getelementptr inbounds i16, i16* %97, i64 %98, !dbg !5932
  %99 = load i16, i16* %add.ptr152, align 2, !dbg !5932
  %conv153 = zext i16 %99 to i32, !dbg !5932
  br label %cond.end, !dbg !5932

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond154 = phi i32 [ 0, %cond.true ], [ %conv153, %cond.false ], !dbg !5932
  %conv155 = sext i32 %cond154 to i64, !dbg !5932
  %add.ptr156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i64 %conv155, !dbg !5932
  %red157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr156, i32 0, i32 2, !dbg !5932
  %100 = load i16, i16* %red157, align 2, !dbg !5932
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5932
  %red158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 0, i32 2, !dbg !5932
  store i16 %100, i16* %red158, align 2, !dbg !5932
  %102 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5932
  %colormap159 = getelementptr inbounds %struct._Image, %struct._Image* %102, i32 0, i32 11, !dbg !5932
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap159, align 8, !dbg !5932
  %104 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %105 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr160 = getelementptr inbounds i16, i16* %104, i64 %105, !dbg !5932
  %cmp161 = icmp eq i16* %add.ptr160, null, !dbg !5932
  br i1 %cmp161, label %cond.true163, label %cond.false164, !dbg !5932

cond.true163:                                     ; preds = %cond.end
  br label %cond.end167, !dbg !5932

cond.false164:                                    ; preds = %cond.end
  %106 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %107 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr165 = getelementptr inbounds i16, i16* %106, i64 %107, !dbg !5932
  %108 = load i16, i16* %add.ptr165, align 2, !dbg !5932
  %conv166 = zext i16 %108 to i32, !dbg !5932
  br label %cond.end167, !dbg !5932

cond.end167:                                      ; preds = %cond.false164, %cond.true163
  %cond168 = phi i32 [ 0, %cond.true163 ], [ %conv166, %cond.false164 ], !dbg !5932
  %conv169 = sext i32 %cond168 to i64, !dbg !5932
  %add.ptr170 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i64 %conv169, !dbg !5932
  %green171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr170, i32 0, i32 1, !dbg !5932
  %109 = load i16, i16* %green171, align 2, !dbg !5932
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5932
  %green172 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 1, !dbg !5932
  store i16 %109, i16* %green172, align 2, !dbg !5932
  %111 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5932
  %colormap173 = getelementptr inbounds %struct._Image, %struct._Image* %111, i32 0, i32 11, !dbg !5932
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap173, align 8, !dbg !5932
  %113 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %114 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr174 = getelementptr inbounds i16, i16* %113, i64 %114, !dbg !5932
  %cmp175 = icmp eq i16* %add.ptr174, null, !dbg !5932
  br i1 %cmp175, label %cond.true177, label %cond.false178, !dbg !5932

cond.true177:                                     ; preds = %cond.end167
  br label %cond.end181, !dbg !5932

cond.false178:                                    ; preds = %cond.end167
  %115 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %116 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr179 = getelementptr inbounds i16, i16* %115, i64 %116, !dbg !5932
  %117 = load i16, i16* %add.ptr179, align 2, !dbg !5932
  %conv180 = zext i16 %117 to i32, !dbg !5932
  br label %cond.end181, !dbg !5932

cond.end181:                                      ; preds = %cond.false178, %cond.true177
  %cond182 = phi i32 [ 0, %cond.true177 ], [ %conv180, %cond.false178 ], !dbg !5932
  %conv183 = sext i32 %cond182 to i64, !dbg !5932
  %add.ptr184 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i64 %conv183, !dbg !5932
  %blue185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr184, i32 0, i32 0, !dbg !5932
  %118 = load i16, i16* %blue185, align 2, !dbg !5932
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5932
  %blue186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 0, !dbg !5932
  store i16 %118, i16* %blue186, align 2, !dbg !5932
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5932
  %colormap187 = getelementptr inbounds %struct._Image, %struct._Image* %120, i32 0, i32 11, !dbg !5932
  %121 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap187, align 8, !dbg !5932
  %122 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %123 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr188 = getelementptr inbounds i16, i16* %122, i64 %123, !dbg !5932
  %cmp189 = icmp eq i16* %add.ptr188, null, !dbg !5932
  br i1 %cmp189, label %cond.true191, label %cond.false192, !dbg !5932

cond.true191:                                     ; preds = %cond.end181
  br label %cond.end195, !dbg !5932

cond.false192:                                    ; preds = %cond.end181
  %124 = load i16*, i16** %indexes.addr, align 8, !dbg !5932
  %125 = load i64, i64* %x, align 8, !dbg !5932
  %add.ptr193 = getelementptr inbounds i16, i16* %124, i64 %125, !dbg !5932
  %126 = load i16, i16* %add.ptr193, align 2, !dbg !5932
  %conv194 = zext i16 %126 to i32, !dbg !5932
  br label %cond.end195, !dbg !5932

cond.end195:                                      ; preds = %cond.false192, %cond.true191
  %cond196 = phi i32 [ 0, %cond.true191 ], [ %conv194, %cond.false192 ], !dbg !5932
  %conv197 = sext i32 %cond196 to i64, !dbg !5932
  %add.ptr198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %121, i64 %conv197, !dbg !5932
  %opacity199 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr198, i32 0, i32 3, !dbg !5932
  %127 = load i16, i16* %opacity199, align 2, !dbg !5932
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5932
  %opacity200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 3, !dbg !5932
  store i16 %127, i16* %opacity200, align 2, !dbg !5932
  %129 = load i8*, i8** %p.addr, align 8, !dbg !5934
  %130 = load i8, i8* %129, align 1, !dbg !5935
  %conv201 = zext i8 %130 to i32, !dbg !5936
  %and202 = and i32 %conv201, 15, !dbg !5937
  %conv203 = trunc i32 %and202 to i8, !dbg !5938
  store i8 %conv203, i8* %pixel131, align 1, !dbg !5939
  %131 = load i8, i8* %pixel131, align 1, !dbg !5940
  %conv204 = zext i8 %131 to i64, !dbg !5940
  %132 = load i64, i64* %range, align 8, !dbg !5940
  %call205 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv204, i64 %132), !dbg !5940
  %conv206 = zext i16 %call205 to i32, !dbg !5940
  %sub207 = sub nsw i32 65535, %conv206, !dbg !5940
  %conv208 = trunc i32 %sub207 to i16, !dbg !5940
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5940
  %opacity209 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %133, i32 0, i32 3, !dbg !5940
  store i16 %conv208, i16* %opacity209, align 2, !dbg !5940
  %134 = load i8*, i8** %p.addr, align 8, !dbg !5941
  %incdec.ptr210 = getelementptr inbounds i8, i8* %134, i32 1, !dbg !5941
  store i8* %incdec.ptr210, i8** %p.addr, align 8, !dbg !5941
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5942
  %incdec.ptr211 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 1, !dbg !5942
  store %struct._PixelPacket* %incdec.ptr211, %struct._PixelPacket** %q.addr, align 8, !dbg !5942
  br label %for.inc212, !dbg !5943

for.inc212:                                       ; preds = %cond.end195
  %136 = load i64, i64* %x, align 8, !dbg !5944
  %inc = add nsw i64 %136, 1, !dbg !5944
  store i64 %inc, i64* %x, align 8, !dbg !5944
  br label %for.cond134, !dbg !5945, !llvm.loop !5946

for.end213:                                       ; preds = %for.cond134
  br label %sw.epilog, !dbg !5948

sw.bb214:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %pixel215, metadata !5949, metadata !DIExpression()), !dbg !5951
  store i64 0, i64* %x, align 8, !dbg !5952
  br label %for.cond216, !dbg !5954

for.cond216:                                      ; preds = %for.inc293, %sw.bb214
  %137 = load i64, i64* %x, align 8, !dbg !5955
  %138 = load i64, i64* %number_pixels.addr, align 8, !dbg !5957
  %cmp217 = icmp slt i64 %137, %138, !dbg !5958
  br i1 %cmp217, label %for.body219, label %for.end295, !dbg !5959

for.body219:                                      ; preds = %for.cond216
  %139 = load i8*, i8** %p.addr, align 8, !dbg !5960
  %call220 = call i8* @PushCharPixel(i8* %139, i8* %pixel215), !dbg !5962
  store i8* %call220, i8** %p.addr, align 8, !dbg !5963
  %140 = load i16*, i16** %indexes.addr, align 8, !dbg !5964
  %141 = load i64, i64* %x, align 8, !dbg !5964
  %add.ptr221 = getelementptr inbounds i16, i16* %140, i64 %141, !dbg !5964
  %cmp222 = icmp ne i16* %add.ptr221, null, !dbg !5964
  br i1 %cmp222, label %if.then224, label %if.end228, !dbg !5967

if.then224:                                       ; preds = %for.body219
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5964
  %143 = load i8, i8* %pixel215, align 1, !dbg !5964
  %conv225 = zext i8 %143 to i64, !dbg !5964
  %call226 = call zeroext i16 @PushColormapIndex(%struct._Image* %142, i64 %conv225, i32* %range_exception), !dbg !5964
  %144 = load i16*, i16** %indexes.addr, align 8, !dbg !5964
  %145 = load i64, i64* %x, align 8, !dbg !5964
  %add.ptr227 = getelementptr inbounds i16, i16* %144, i64 %145, !dbg !5964
  store i16 %call226, i16* %add.ptr227, align 2, !dbg !5964
  br label %if.end228, !dbg !5964

if.end228:                                        ; preds = %if.then224, %for.body219
  %146 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5968
  %colormap229 = getelementptr inbounds %struct._Image, %struct._Image* %146, i32 0, i32 11, !dbg !5968
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap229, align 8, !dbg !5968
  %148 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %149 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr230 = getelementptr inbounds i16, i16* %148, i64 %149, !dbg !5968
  %cmp231 = icmp eq i16* %add.ptr230, null, !dbg !5968
  br i1 %cmp231, label %cond.true233, label %cond.false234, !dbg !5968

cond.true233:                                     ; preds = %if.end228
  br label %cond.end237, !dbg !5968

cond.false234:                                    ; preds = %if.end228
  %150 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %151 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr235 = getelementptr inbounds i16, i16* %150, i64 %151, !dbg !5968
  %152 = load i16, i16* %add.ptr235, align 2, !dbg !5968
  %conv236 = zext i16 %152 to i32, !dbg !5968
  br label %cond.end237, !dbg !5968

cond.end237:                                      ; preds = %cond.false234, %cond.true233
  %cond238 = phi i32 [ 0, %cond.true233 ], [ %conv236, %cond.false234 ], !dbg !5968
  %conv239 = sext i32 %cond238 to i64, !dbg !5968
  %add.ptr240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i64 %conv239, !dbg !5968
  %red241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr240, i32 0, i32 2, !dbg !5968
  %153 = load i16, i16* %red241, align 2, !dbg !5968
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5968
  %red242 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 0, i32 2, !dbg !5968
  store i16 %153, i16* %red242, align 2, !dbg !5968
  %155 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5968
  %colormap243 = getelementptr inbounds %struct._Image, %struct._Image* %155, i32 0, i32 11, !dbg !5968
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap243, align 8, !dbg !5968
  %157 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %158 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr244 = getelementptr inbounds i16, i16* %157, i64 %158, !dbg !5968
  %cmp245 = icmp eq i16* %add.ptr244, null, !dbg !5968
  br i1 %cmp245, label %cond.true247, label %cond.false248, !dbg !5968

cond.true247:                                     ; preds = %cond.end237
  br label %cond.end251, !dbg !5968

cond.false248:                                    ; preds = %cond.end237
  %159 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %160 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr249 = getelementptr inbounds i16, i16* %159, i64 %160, !dbg !5968
  %161 = load i16, i16* %add.ptr249, align 2, !dbg !5968
  %conv250 = zext i16 %161 to i32, !dbg !5968
  br label %cond.end251, !dbg !5968

cond.end251:                                      ; preds = %cond.false248, %cond.true247
  %cond252 = phi i32 [ 0, %cond.true247 ], [ %conv250, %cond.false248 ], !dbg !5968
  %conv253 = sext i32 %cond252 to i64, !dbg !5968
  %add.ptr254 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i64 %conv253, !dbg !5968
  %green255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr254, i32 0, i32 1, !dbg !5968
  %162 = load i16, i16* %green255, align 2, !dbg !5968
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5968
  %green256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %163, i32 0, i32 1, !dbg !5968
  store i16 %162, i16* %green256, align 2, !dbg !5968
  %164 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5968
  %colormap257 = getelementptr inbounds %struct._Image, %struct._Image* %164, i32 0, i32 11, !dbg !5968
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap257, align 8, !dbg !5968
  %166 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %167 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr258 = getelementptr inbounds i16, i16* %166, i64 %167, !dbg !5968
  %cmp259 = icmp eq i16* %add.ptr258, null, !dbg !5968
  br i1 %cmp259, label %cond.true261, label %cond.false262, !dbg !5968

cond.true261:                                     ; preds = %cond.end251
  br label %cond.end265, !dbg !5968

cond.false262:                                    ; preds = %cond.end251
  %168 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %169 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr263 = getelementptr inbounds i16, i16* %168, i64 %169, !dbg !5968
  %170 = load i16, i16* %add.ptr263, align 2, !dbg !5968
  %conv264 = zext i16 %170 to i32, !dbg !5968
  br label %cond.end265, !dbg !5968

cond.end265:                                      ; preds = %cond.false262, %cond.true261
  %cond266 = phi i32 [ 0, %cond.true261 ], [ %conv264, %cond.false262 ], !dbg !5968
  %conv267 = sext i32 %cond266 to i64, !dbg !5968
  %add.ptr268 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %165, i64 %conv267, !dbg !5968
  %blue269 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr268, i32 0, i32 0, !dbg !5968
  %171 = load i16, i16* %blue269, align 2, !dbg !5968
  %172 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5968
  %blue270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %172, i32 0, i32 0, !dbg !5968
  store i16 %171, i16* %blue270, align 2, !dbg !5968
  %173 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5968
  %colormap271 = getelementptr inbounds %struct._Image, %struct._Image* %173, i32 0, i32 11, !dbg !5968
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap271, align 8, !dbg !5968
  %175 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %176 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr272 = getelementptr inbounds i16, i16* %175, i64 %176, !dbg !5968
  %cmp273 = icmp eq i16* %add.ptr272, null, !dbg !5968
  br i1 %cmp273, label %cond.true275, label %cond.false276, !dbg !5968

cond.true275:                                     ; preds = %cond.end265
  br label %cond.end279, !dbg !5968

cond.false276:                                    ; preds = %cond.end265
  %177 = load i16*, i16** %indexes.addr, align 8, !dbg !5968
  %178 = load i64, i64* %x, align 8, !dbg !5968
  %add.ptr277 = getelementptr inbounds i16, i16* %177, i64 %178, !dbg !5968
  %179 = load i16, i16* %add.ptr277, align 2, !dbg !5968
  %conv278 = zext i16 %179 to i32, !dbg !5968
  br label %cond.end279, !dbg !5968

cond.end279:                                      ; preds = %cond.false276, %cond.true275
  %cond280 = phi i32 [ 0, %cond.true275 ], [ %conv278, %cond.false276 ], !dbg !5968
  %conv281 = sext i32 %cond280 to i64, !dbg !5968
  %add.ptr282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i64 %conv281, !dbg !5968
  %opacity283 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr282, i32 0, i32 3, !dbg !5968
  %180 = load i16, i16* %opacity283, align 2, !dbg !5968
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5968
  %opacity284 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 0, i32 3, !dbg !5968
  store i16 %180, i16* %opacity284, align 2, !dbg !5968
  %182 = load i8*, i8** %p.addr, align 8, !dbg !5970
  %call285 = call i8* @PushCharPixel(i8* %182, i8* %pixel215), !dbg !5971
  store i8* %call285, i8** %p.addr, align 8, !dbg !5972
  %183 = load i8, i8* %pixel215, align 1, !dbg !5973
  %call286 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %183), !dbg !5973
  %conv287 = zext i16 %call286 to i32, !dbg !5973
  %sub288 = sub nsw i32 65535, %conv287, !dbg !5973
  %conv289 = trunc i32 %sub288 to i16, !dbg !5973
  %184 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5973
  %opacity290 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %184, i32 0, i32 3, !dbg !5973
  store i16 %conv289, i16* %opacity290, align 2, !dbg !5973
  %185 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5974
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %185, i32 0, i32 6, !dbg !5975
  %186 = load i64, i64* %pad, align 8, !dbg !5975
  %187 = load i8*, i8** %p.addr, align 8, !dbg !5976
  %add.ptr291 = getelementptr inbounds i8, i8* %187, i64 %186, !dbg !5976
  store i8* %add.ptr291, i8** %p.addr, align 8, !dbg !5976
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !5977
  %incdec.ptr292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 1, !dbg !5977
  store %struct._PixelPacket* %incdec.ptr292, %struct._PixelPacket** %q.addr, align 8, !dbg !5977
  br label %for.inc293, !dbg !5978

for.inc293:                                       ; preds = %cond.end279
  %189 = load i64, i64* %x, align 8, !dbg !5979
  %inc294 = add nsw i64 %189, 1, !dbg !5979
  store i64 %inc294, i64* %x, align 8, !dbg !5979
  br label %for.cond216, !dbg !5980, !llvm.loop !5981

for.end295:                                       ; preds = %for.cond216
  br label %sw.epilog, !dbg !5983

sw.bb296:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i16* %pixel297, metadata !5984, metadata !DIExpression()), !dbg !5986
  %190 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !5987
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %190, i32 0, i32 2, !dbg !5989
  %191 = load i32, i32* %format, align 8, !dbg !5989
  %cmp298 = icmp eq i32 %191, 1, !dbg !5990
  br i1 %cmp298, label %if.then300, label %if.end387, !dbg !5991

if.then300:                                       ; preds = %sw.bb296
  store i64 0, i64* %x, align 8, !dbg !5992
  br label %for.cond301, !dbg !5995

for.cond301:                                      ; preds = %for.inc384, %if.then300
  %192 = load i64, i64* %x, align 8, !dbg !5996
  %193 = load i64, i64* %number_pixels.addr, align 8, !dbg !5998
  %cmp302 = icmp slt i64 %192, %193, !dbg !5999
  br i1 %cmp302, label %for.body304, label %for.end386, !dbg !6000

for.body304:                                      ; preds = %for.cond301
  %194 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6001
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %194, i32 0, i32 13, !dbg !6003
  %195 = load i32, i32* %endian, align 8, !dbg !6003
  %196 = load i8*, i8** %p.addr, align 8, !dbg !6004
  %call305 = call i8* @PushShortPixel(i32 %195, i8* %196, i16* %pixel297), !dbg !6005
  store i8* %call305, i8** %p.addr, align 8, !dbg !6006
  %197 = load i16*, i16** %indexes.addr, align 8, !dbg !6007
  %198 = load i64, i64* %x, align 8, !dbg !6007
  %add.ptr306 = getelementptr inbounds i16, i16* %197, i64 %198, !dbg !6007
  %cmp307 = icmp ne i16* %add.ptr306, null, !dbg !6007
  br i1 %cmp307, label %if.then309, label %if.end315, !dbg !6010

if.then309:                                       ; preds = %for.body304
  %199 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6007
  %200 = load i16, i16* %pixel297, align 2, !dbg !6007
  %call310 = call float @HalfToSinglePrecision(i16 zeroext %200), !dbg !6007
  %mul = fmul float 6.553500e+04, %call310, !dbg !6007
  %call311 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !6007
  %conv312 = zext i16 %call311 to i64, !dbg !6007
  %call313 = call zeroext i16 @PushColormapIndex(%struct._Image* %199, i64 %conv312, i32* %range_exception), !dbg !6007
  %201 = load i16*, i16** %indexes.addr, align 8, !dbg !6007
  %202 = load i64, i64* %x, align 8, !dbg !6007
  %add.ptr314 = getelementptr inbounds i16, i16* %201, i64 %202, !dbg !6007
  store i16 %call313, i16* %add.ptr314, align 2, !dbg !6007
  br label %if.end315, !dbg !6007

if.end315:                                        ; preds = %if.then309, %for.body304
  %203 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6011
  %colormap316 = getelementptr inbounds %struct._Image, %struct._Image* %203, i32 0, i32 11, !dbg !6011
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap316, align 8, !dbg !6011
  %205 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %206 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr317 = getelementptr inbounds i16, i16* %205, i64 %206, !dbg !6011
  %cmp318 = icmp eq i16* %add.ptr317, null, !dbg !6011
  br i1 %cmp318, label %cond.true320, label %cond.false321, !dbg !6011

cond.true320:                                     ; preds = %if.end315
  br label %cond.end324, !dbg !6011

cond.false321:                                    ; preds = %if.end315
  %207 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %208 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr322 = getelementptr inbounds i16, i16* %207, i64 %208, !dbg !6011
  %209 = load i16, i16* %add.ptr322, align 2, !dbg !6011
  %conv323 = zext i16 %209 to i32, !dbg !6011
  br label %cond.end324, !dbg !6011

cond.end324:                                      ; preds = %cond.false321, %cond.true320
  %cond325 = phi i32 [ 0, %cond.true320 ], [ %conv323, %cond.false321 ], !dbg !6011
  %conv326 = sext i32 %cond325 to i64, !dbg !6011
  %add.ptr327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i64 %conv326, !dbg !6011
  %red328 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr327, i32 0, i32 2, !dbg !6011
  %210 = load i16, i16* %red328, align 2, !dbg !6011
  %211 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6011
  %red329 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %211, i32 0, i32 2, !dbg !6011
  store i16 %210, i16* %red329, align 2, !dbg !6011
  %212 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6011
  %colormap330 = getelementptr inbounds %struct._Image, %struct._Image* %212, i32 0, i32 11, !dbg !6011
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap330, align 8, !dbg !6011
  %214 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %215 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr331 = getelementptr inbounds i16, i16* %214, i64 %215, !dbg !6011
  %cmp332 = icmp eq i16* %add.ptr331, null, !dbg !6011
  br i1 %cmp332, label %cond.true334, label %cond.false335, !dbg !6011

cond.true334:                                     ; preds = %cond.end324
  br label %cond.end338, !dbg !6011

cond.false335:                                    ; preds = %cond.end324
  %216 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %217 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr336 = getelementptr inbounds i16, i16* %216, i64 %217, !dbg !6011
  %218 = load i16, i16* %add.ptr336, align 2, !dbg !6011
  %conv337 = zext i16 %218 to i32, !dbg !6011
  br label %cond.end338, !dbg !6011

cond.end338:                                      ; preds = %cond.false335, %cond.true334
  %cond339 = phi i32 [ 0, %cond.true334 ], [ %conv337, %cond.false335 ], !dbg !6011
  %conv340 = sext i32 %cond339 to i64, !dbg !6011
  %add.ptr341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i64 %conv340, !dbg !6011
  %green342 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr341, i32 0, i32 1, !dbg !6011
  %219 = load i16, i16* %green342, align 2, !dbg !6011
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6011
  %green343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 1, !dbg !6011
  store i16 %219, i16* %green343, align 2, !dbg !6011
  %221 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6011
  %colormap344 = getelementptr inbounds %struct._Image, %struct._Image* %221, i32 0, i32 11, !dbg !6011
  %222 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap344, align 8, !dbg !6011
  %223 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %224 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr345 = getelementptr inbounds i16, i16* %223, i64 %224, !dbg !6011
  %cmp346 = icmp eq i16* %add.ptr345, null, !dbg !6011
  br i1 %cmp346, label %cond.true348, label %cond.false349, !dbg !6011

cond.true348:                                     ; preds = %cond.end338
  br label %cond.end352, !dbg !6011

cond.false349:                                    ; preds = %cond.end338
  %225 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %226 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr350 = getelementptr inbounds i16, i16* %225, i64 %226, !dbg !6011
  %227 = load i16, i16* %add.ptr350, align 2, !dbg !6011
  %conv351 = zext i16 %227 to i32, !dbg !6011
  br label %cond.end352, !dbg !6011

cond.end352:                                      ; preds = %cond.false349, %cond.true348
  %cond353 = phi i32 [ 0, %cond.true348 ], [ %conv351, %cond.false349 ], !dbg !6011
  %conv354 = sext i32 %cond353 to i64, !dbg !6011
  %add.ptr355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %222, i64 %conv354, !dbg !6011
  %blue356 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr355, i32 0, i32 0, !dbg !6011
  %228 = load i16, i16* %blue356, align 2, !dbg !6011
  %229 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6011
  %blue357 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %229, i32 0, i32 0, !dbg !6011
  store i16 %228, i16* %blue357, align 2, !dbg !6011
  %230 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6011
  %colormap358 = getelementptr inbounds %struct._Image, %struct._Image* %230, i32 0, i32 11, !dbg !6011
  %231 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap358, align 8, !dbg !6011
  %232 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %233 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr359 = getelementptr inbounds i16, i16* %232, i64 %233, !dbg !6011
  %cmp360 = icmp eq i16* %add.ptr359, null, !dbg !6011
  br i1 %cmp360, label %cond.true362, label %cond.false363, !dbg !6011

cond.true362:                                     ; preds = %cond.end352
  br label %cond.end366, !dbg !6011

cond.false363:                                    ; preds = %cond.end352
  %234 = load i16*, i16** %indexes.addr, align 8, !dbg !6011
  %235 = load i64, i64* %x, align 8, !dbg !6011
  %add.ptr364 = getelementptr inbounds i16, i16* %234, i64 %235, !dbg !6011
  %236 = load i16, i16* %add.ptr364, align 2, !dbg !6011
  %conv365 = zext i16 %236 to i32, !dbg !6011
  br label %cond.end366, !dbg !6011

cond.end366:                                      ; preds = %cond.false363, %cond.true362
  %cond367 = phi i32 [ 0, %cond.true362 ], [ %conv365, %cond.false363 ], !dbg !6011
  %conv368 = sext i32 %cond367 to i64, !dbg !6011
  %add.ptr369 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %231, i64 %conv368, !dbg !6011
  %opacity370 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr369, i32 0, i32 3, !dbg !6011
  %237 = load i16, i16* %opacity370, align 2, !dbg !6011
  %238 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6011
  %opacity371 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %238, i32 0, i32 3, !dbg !6011
  store i16 %237, i16* %opacity371, align 2, !dbg !6011
  %239 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6013
  %endian372 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %239, i32 0, i32 13, !dbg !6014
  %240 = load i32, i32* %endian372, align 8, !dbg !6014
  %241 = load i8*, i8** %p.addr, align 8, !dbg !6015
  %call373 = call i8* @PushShortPixel(i32 %240, i8* %241, i16* %pixel297), !dbg !6016
  store i8* %call373, i8** %p.addr, align 8, !dbg !6017
  %242 = load i16, i16* %pixel297, align 2, !dbg !6018
  %call374 = call float @HalfToSinglePrecision(i16 zeroext %242), !dbg !6018
  %mul375 = fmul float 6.553500e+04, %call374, !dbg !6018
  %call376 = call zeroext i16 @ClampToQuantum(float %mul375), !dbg !6018
  %conv377 = zext i16 %call376 to i32, !dbg !6018
  %sub378 = sub nsw i32 65535, %conv377, !dbg !6018
  %conv379 = trunc i32 %sub378 to i16, !dbg !6018
  %243 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6018
  %opacity380 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %243, i32 0, i32 3, !dbg !6018
  store i16 %conv379, i16* %opacity380, align 2, !dbg !6018
  %244 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6019
  %pad381 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %244, i32 0, i32 6, !dbg !6020
  %245 = load i64, i64* %pad381, align 8, !dbg !6020
  %246 = load i8*, i8** %p.addr, align 8, !dbg !6021
  %add.ptr382 = getelementptr inbounds i8, i8* %246, i64 %245, !dbg !6021
  store i8* %add.ptr382, i8** %p.addr, align 8, !dbg !6021
  %247 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6022
  %incdec.ptr383 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %247, i32 1, !dbg !6022
  store %struct._PixelPacket* %incdec.ptr383, %struct._PixelPacket** %q.addr, align 8, !dbg !6022
  br label %for.inc384, !dbg !6023

for.inc384:                                       ; preds = %cond.end366
  %248 = load i64, i64* %x, align 8, !dbg !6024
  %inc385 = add nsw i64 %248, 1, !dbg !6024
  store i64 %inc385, i64* %x, align 8, !dbg !6024
  br label %for.cond301, !dbg !6025, !llvm.loop !6026

for.end386:                                       ; preds = %for.cond301
  br label %sw.epilog, !dbg !6028

if.end387:                                        ; preds = %sw.bb296
  store i64 0, i64* %x, align 8, !dbg !6029
  br label %for.cond388, !dbg !6031

for.cond388:                                      ; preds = %for.inc468, %if.end387
  %249 = load i64, i64* %x, align 8, !dbg !6032
  %250 = load i64, i64* %number_pixels.addr, align 8, !dbg !6034
  %cmp389 = icmp slt i64 %249, %250, !dbg !6035
  br i1 %cmp389, label %for.body391, label %for.end470, !dbg !6036

for.body391:                                      ; preds = %for.cond388
  %251 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6037
  %endian392 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %251, i32 0, i32 13, !dbg !6039
  %252 = load i32, i32* %endian392, align 8, !dbg !6039
  %253 = load i8*, i8** %p.addr, align 8, !dbg !6040
  %call393 = call i8* @PushShortPixel(i32 %252, i8* %253, i16* %pixel297), !dbg !6041
  store i8* %call393, i8** %p.addr, align 8, !dbg !6042
  %254 = load i16*, i16** %indexes.addr, align 8, !dbg !6043
  %255 = load i64, i64* %x, align 8, !dbg !6043
  %add.ptr394 = getelementptr inbounds i16, i16* %254, i64 %255, !dbg !6043
  %cmp395 = icmp ne i16* %add.ptr394, null, !dbg !6043
  br i1 %cmp395, label %if.then397, label %if.end401, !dbg !6046

if.then397:                                       ; preds = %for.body391
  %256 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6043
  %257 = load i16, i16* %pixel297, align 2, !dbg !6043
  %conv398 = zext i16 %257 to i64, !dbg !6043
  %call399 = call zeroext i16 @PushColormapIndex(%struct._Image* %256, i64 %conv398, i32* %range_exception), !dbg !6043
  %258 = load i16*, i16** %indexes.addr, align 8, !dbg !6043
  %259 = load i64, i64* %x, align 8, !dbg !6043
  %add.ptr400 = getelementptr inbounds i16, i16* %258, i64 %259, !dbg !6043
  store i16 %call399, i16* %add.ptr400, align 2, !dbg !6043
  br label %if.end401, !dbg !6043

if.end401:                                        ; preds = %if.then397, %for.body391
  %260 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6047
  %colormap402 = getelementptr inbounds %struct._Image, %struct._Image* %260, i32 0, i32 11, !dbg !6047
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap402, align 8, !dbg !6047
  %262 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %263 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr403 = getelementptr inbounds i16, i16* %262, i64 %263, !dbg !6047
  %cmp404 = icmp eq i16* %add.ptr403, null, !dbg !6047
  br i1 %cmp404, label %cond.true406, label %cond.false407, !dbg !6047

cond.true406:                                     ; preds = %if.end401
  br label %cond.end410, !dbg !6047

cond.false407:                                    ; preds = %if.end401
  %264 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %265 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr408 = getelementptr inbounds i16, i16* %264, i64 %265, !dbg !6047
  %266 = load i16, i16* %add.ptr408, align 2, !dbg !6047
  %conv409 = zext i16 %266 to i32, !dbg !6047
  br label %cond.end410, !dbg !6047

cond.end410:                                      ; preds = %cond.false407, %cond.true406
  %cond411 = phi i32 [ 0, %cond.true406 ], [ %conv409, %cond.false407 ], !dbg !6047
  %conv412 = sext i32 %cond411 to i64, !dbg !6047
  %add.ptr413 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i64 %conv412, !dbg !6047
  %red414 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr413, i32 0, i32 2, !dbg !6047
  %267 = load i16, i16* %red414, align 2, !dbg !6047
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6047
  %red415 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 0, i32 2, !dbg !6047
  store i16 %267, i16* %red415, align 2, !dbg !6047
  %269 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6047
  %colormap416 = getelementptr inbounds %struct._Image, %struct._Image* %269, i32 0, i32 11, !dbg !6047
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap416, align 8, !dbg !6047
  %271 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %272 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr417 = getelementptr inbounds i16, i16* %271, i64 %272, !dbg !6047
  %cmp418 = icmp eq i16* %add.ptr417, null, !dbg !6047
  br i1 %cmp418, label %cond.true420, label %cond.false421, !dbg !6047

cond.true420:                                     ; preds = %cond.end410
  br label %cond.end424, !dbg !6047

cond.false421:                                    ; preds = %cond.end410
  %273 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %274 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr422 = getelementptr inbounds i16, i16* %273, i64 %274, !dbg !6047
  %275 = load i16, i16* %add.ptr422, align 2, !dbg !6047
  %conv423 = zext i16 %275 to i32, !dbg !6047
  br label %cond.end424, !dbg !6047

cond.end424:                                      ; preds = %cond.false421, %cond.true420
  %cond425 = phi i32 [ 0, %cond.true420 ], [ %conv423, %cond.false421 ], !dbg !6047
  %conv426 = sext i32 %cond425 to i64, !dbg !6047
  %add.ptr427 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i64 %conv426, !dbg !6047
  %green428 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr427, i32 0, i32 1, !dbg !6047
  %276 = load i16, i16* %green428, align 2, !dbg !6047
  %277 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6047
  %green429 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %277, i32 0, i32 1, !dbg !6047
  store i16 %276, i16* %green429, align 2, !dbg !6047
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6047
  %colormap430 = getelementptr inbounds %struct._Image, %struct._Image* %278, i32 0, i32 11, !dbg !6047
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap430, align 8, !dbg !6047
  %280 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %281 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr431 = getelementptr inbounds i16, i16* %280, i64 %281, !dbg !6047
  %cmp432 = icmp eq i16* %add.ptr431, null, !dbg !6047
  br i1 %cmp432, label %cond.true434, label %cond.false435, !dbg !6047

cond.true434:                                     ; preds = %cond.end424
  br label %cond.end438, !dbg !6047

cond.false435:                                    ; preds = %cond.end424
  %282 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %283 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr436 = getelementptr inbounds i16, i16* %282, i64 %283, !dbg !6047
  %284 = load i16, i16* %add.ptr436, align 2, !dbg !6047
  %conv437 = zext i16 %284 to i32, !dbg !6047
  br label %cond.end438, !dbg !6047

cond.end438:                                      ; preds = %cond.false435, %cond.true434
  %cond439 = phi i32 [ 0, %cond.true434 ], [ %conv437, %cond.false435 ], !dbg !6047
  %conv440 = sext i32 %cond439 to i64, !dbg !6047
  %add.ptr441 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i64 %conv440, !dbg !6047
  %blue442 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr441, i32 0, i32 0, !dbg !6047
  %285 = load i16, i16* %blue442, align 2, !dbg !6047
  %286 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6047
  %blue443 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %286, i32 0, i32 0, !dbg !6047
  store i16 %285, i16* %blue443, align 2, !dbg !6047
  %287 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6047
  %colormap444 = getelementptr inbounds %struct._Image, %struct._Image* %287, i32 0, i32 11, !dbg !6047
  %288 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap444, align 8, !dbg !6047
  %289 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %290 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr445 = getelementptr inbounds i16, i16* %289, i64 %290, !dbg !6047
  %cmp446 = icmp eq i16* %add.ptr445, null, !dbg !6047
  br i1 %cmp446, label %cond.true448, label %cond.false449, !dbg !6047

cond.true448:                                     ; preds = %cond.end438
  br label %cond.end452, !dbg !6047

cond.false449:                                    ; preds = %cond.end438
  %291 = load i16*, i16** %indexes.addr, align 8, !dbg !6047
  %292 = load i64, i64* %x, align 8, !dbg !6047
  %add.ptr450 = getelementptr inbounds i16, i16* %291, i64 %292, !dbg !6047
  %293 = load i16, i16* %add.ptr450, align 2, !dbg !6047
  %conv451 = zext i16 %293 to i32, !dbg !6047
  br label %cond.end452, !dbg !6047

cond.end452:                                      ; preds = %cond.false449, %cond.true448
  %cond453 = phi i32 [ 0, %cond.true448 ], [ %conv451, %cond.false449 ], !dbg !6047
  %conv454 = sext i32 %cond453 to i64, !dbg !6047
  %add.ptr455 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %288, i64 %conv454, !dbg !6047
  %opacity456 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr455, i32 0, i32 3, !dbg !6047
  %294 = load i16, i16* %opacity456, align 2, !dbg !6047
  %295 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6047
  %opacity457 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %295, i32 0, i32 3, !dbg !6047
  store i16 %294, i16* %opacity457, align 2, !dbg !6047
  %296 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6049
  %endian458 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %296, i32 0, i32 13, !dbg !6050
  %297 = load i32, i32* %endian458, align 8, !dbg !6050
  %298 = load i8*, i8** %p.addr, align 8, !dbg !6051
  %call459 = call i8* @PushShortPixel(i32 %297, i8* %298, i16* %pixel297), !dbg !6052
  store i8* %call459, i8** %p.addr, align 8, !dbg !6053
  %299 = load i16, i16* %pixel297, align 2, !dbg !6054
  %call460 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %299), !dbg !6054
  %conv461 = zext i16 %call460 to i32, !dbg !6054
  %sub462 = sub nsw i32 65535, %conv461, !dbg !6054
  %conv463 = trunc i32 %sub462 to i16, !dbg !6054
  %300 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6054
  %opacity464 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %300, i32 0, i32 3, !dbg !6054
  store i16 %conv463, i16* %opacity464, align 2, !dbg !6054
  %301 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6055
  %pad465 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %301, i32 0, i32 6, !dbg !6056
  %302 = load i64, i64* %pad465, align 8, !dbg !6056
  %303 = load i8*, i8** %p.addr, align 8, !dbg !6057
  %add.ptr466 = getelementptr inbounds i8, i8* %303, i64 %302, !dbg !6057
  store i8* %add.ptr466, i8** %p.addr, align 8, !dbg !6057
  %304 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6058
  %incdec.ptr467 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %304, i32 1, !dbg !6058
  store %struct._PixelPacket* %incdec.ptr467, %struct._PixelPacket** %q.addr, align 8, !dbg !6058
  br label %for.inc468, !dbg !6059

for.inc468:                                       ; preds = %cond.end452
  %305 = load i64, i64* %x, align 8, !dbg !6060
  %inc469 = add nsw i64 %305, 1, !dbg !6060
  store i64 %inc469, i64* %x, align 8, !dbg !6060
  br label %for.cond388, !dbg !6061, !llvm.loop !6062

for.end470:                                       ; preds = %for.cond388
  br label %sw.epilog, !dbg !6064

sw.bb471:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %pixel472, metadata !6065, metadata !DIExpression()), !dbg !6067
  %306 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6068
  %format473 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %306, i32 0, i32 2, !dbg !6070
  %307 = load i32, i32* %format473, align 8, !dbg !6070
  %cmp474 = icmp eq i32 %307, 1, !dbg !6071
  br i1 %cmp474, label %if.then476, label %if.end560, !dbg !6072

if.then476:                                       ; preds = %sw.bb471
  call void @llvm.dbg.declare(metadata float* %pixel477, metadata !6073, metadata !DIExpression()), !dbg !6075
  store i64 0, i64* %x, align 8, !dbg !6076
  br label %for.cond478, !dbg !6078

for.cond478:                                      ; preds = %for.inc557, %if.then476
  %308 = load i64, i64* %x, align 8, !dbg !6079
  %309 = load i64, i64* %number_pixels.addr, align 8, !dbg !6081
  %cmp479 = icmp slt i64 %308, %309, !dbg !6082
  br i1 %cmp479, label %for.body481, label %for.end559, !dbg !6083

for.body481:                                      ; preds = %for.cond478
  %310 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6084
  %311 = load i8*, i8** %p.addr, align 8, !dbg !6086
  %call482 = call i8* @PushFloatPixel(%struct._QuantumInfo* %310, i8* %311, float* %pixel477), !dbg !6087
  store i8* %call482, i8** %p.addr, align 8, !dbg !6088
  %312 = load i16*, i16** %indexes.addr, align 8, !dbg !6089
  %313 = load i64, i64* %x, align 8, !dbg !6089
  %add.ptr483 = getelementptr inbounds i16, i16* %312, i64 %313, !dbg !6089
  %cmp484 = icmp ne i16* %add.ptr483, null, !dbg !6089
  br i1 %cmp484, label %if.then486, label %if.end491, !dbg !6092

if.then486:                                       ; preds = %for.body481
  %314 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6089
  %315 = load float, float* %pixel477, align 4, !dbg !6089
  %call487 = call zeroext i16 @ClampToQuantum(float %315), !dbg !6089
  %conv488 = zext i16 %call487 to i64, !dbg !6089
  %call489 = call zeroext i16 @PushColormapIndex(%struct._Image* %314, i64 %conv488, i32* %range_exception), !dbg !6089
  %316 = load i16*, i16** %indexes.addr, align 8, !dbg !6089
  %317 = load i64, i64* %x, align 8, !dbg !6089
  %add.ptr490 = getelementptr inbounds i16, i16* %316, i64 %317, !dbg !6089
  store i16 %call489, i16* %add.ptr490, align 2, !dbg !6089
  br label %if.end491, !dbg !6089

if.end491:                                        ; preds = %if.then486, %for.body481
  %318 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6093
  %colormap492 = getelementptr inbounds %struct._Image, %struct._Image* %318, i32 0, i32 11, !dbg !6093
  %319 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap492, align 8, !dbg !6093
  %320 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %321 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr493 = getelementptr inbounds i16, i16* %320, i64 %321, !dbg !6093
  %cmp494 = icmp eq i16* %add.ptr493, null, !dbg !6093
  br i1 %cmp494, label %cond.true496, label %cond.false497, !dbg !6093

cond.true496:                                     ; preds = %if.end491
  br label %cond.end500, !dbg !6093

cond.false497:                                    ; preds = %if.end491
  %322 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %323 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr498 = getelementptr inbounds i16, i16* %322, i64 %323, !dbg !6093
  %324 = load i16, i16* %add.ptr498, align 2, !dbg !6093
  %conv499 = zext i16 %324 to i32, !dbg !6093
  br label %cond.end500, !dbg !6093

cond.end500:                                      ; preds = %cond.false497, %cond.true496
  %cond501 = phi i32 [ 0, %cond.true496 ], [ %conv499, %cond.false497 ], !dbg !6093
  %conv502 = sext i32 %cond501 to i64, !dbg !6093
  %add.ptr503 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %319, i64 %conv502, !dbg !6093
  %red504 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr503, i32 0, i32 2, !dbg !6093
  %325 = load i16, i16* %red504, align 2, !dbg !6093
  %326 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6093
  %red505 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %326, i32 0, i32 2, !dbg !6093
  store i16 %325, i16* %red505, align 2, !dbg !6093
  %327 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6093
  %colormap506 = getelementptr inbounds %struct._Image, %struct._Image* %327, i32 0, i32 11, !dbg !6093
  %328 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap506, align 8, !dbg !6093
  %329 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %330 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr507 = getelementptr inbounds i16, i16* %329, i64 %330, !dbg !6093
  %cmp508 = icmp eq i16* %add.ptr507, null, !dbg !6093
  br i1 %cmp508, label %cond.true510, label %cond.false511, !dbg !6093

cond.true510:                                     ; preds = %cond.end500
  br label %cond.end514, !dbg !6093

cond.false511:                                    ; preds = %cond.end500
  %331 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %332 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr512 = getelementptr inbounds i16, i16* %331, i64 %332, !dbg !6093
  %333 = load i16, i16* %add.ptr512, align 2, !dbg !6093
  %conv513 = zext i16 %333 to i32, !dbg !6093
  br label %cond.end514, !dbg !6093

cond.end514:                                      ; preds = %cond.false511, %cond.true510
  %cond515 = phi i32 [ 0, %cond.true510 ], [ %conv513, %cond.false511 ], !dbg !6093
  %conv516 = sext i32 %cond515 to i64, !dbg !6093
  %add.ptr517 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %328, i64 %conv516, !dbg !6093
  %green518 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr517, i32 0, i32 1, !dbg !6093
  %334 = load i16, i16* %green518, align 2, !dbg !6093
  %335 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6093
  %green519 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %335, i32 0, i32 1, !dbg !6093
  store i16 %334, i16* %green519, align 2, !dbg !6093
  %336 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6093
  %colormap520 = getelementptr inbounds %struct._Image, %struct._Image* %336, i32 0, i32 11, !dbg !6093
  %337 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap520, align 8, !dbg !6093
  %338 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %339 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr521 = getelementptr inbounds i16, i16* %338, i64 %339, !dbg !6093
  %cmp522 = icmp eq i16* %add.ptr521, null, !dbg !6093
  br i1 %cmp522, label %cond.true524, label %cond.false525, !dbg !6093

cond.true524:                                     ; preds = %cond.end514
  br label %cond.end528, !dbg !6093

cond.false525:                                    ; preds = %cond.end514
  %340 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %341 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr526 = getelementptr inbounds i16, i16* %340, i64 %341, !dbg !6093
  %342 = load i16, i16* %add.ptr526, align 2, !dbg !6093
  %conv527 = zext i16 %342 to i32, !dbg !6093
  br label %cond.end528, !dbg !6093

cond.end528:                                      ; preds = %cond.false525, %cond.true524
  %cond529 = phi i32 [ 0, %cond.true524 ], [ %conv527, %cond.false525 ], !dbg !6093
  %conv530 = sext i32 %cond529 to i64, !dbg !6093
  %add.ptr531 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %337, i64 %conv530, !dbg !6093
  %blue532 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr531, i32 0, i32 0, !dbg !6093
  %343 = load i16, i16* %blue532, align 2, !dbg !6093
  %344 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6093
  %blue533 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %344, i32 0, i32 0, !dbg !6093
  store i16 %343, i16* %blue533, align 2, !dbg !6093
  %345 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6093
  %colormap534 = getelementptr inbounds %struct._Image, %struct._Image* %345, i32 0, i32 11, !dbg !6093
  %346 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap534, align 8, !dbg !6093
  %347 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %348 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr535 = getelementptr inbounds i16, i16* %347, i64 %348, !dbg !6093
  %cmp536 = icmp eq i16* %add.ptr535, null, !dbg !6093
  br i1 %cmp536, label %cond.true538, label %cond.false539, !dbg !6093

cond.true538:                                     ; preds = %cond.end528
  br label %cond.end542, !dbg !6093

cond.false539:                                    ; preds = %cond.end528
  %349 = load i16*, i16** %indexes.addr, align 8, !dbg !6093
  %350 = load i64, i64* %x, align 8, !dbg !6093
  %add.ptr540 = getelementptr inbounds i16, i16* %349, i64 %350, !dbg !6093
  %351 = load i16, i16* %add.ptr540, align 2, !dbg !6093
  %conv541 = zext i16 %351 to i32, !dbg !6093
  br label %cond.end542, !dbg !6093

cond.end542:                                      ; preds = %cond.false539, %cond.true538
  %cond543 = phi i32 [ 0, %cond.true538 ], [ %conv541, %cond.false539 ], !dbg !6093
  %conv544 = sext i32 %cond543 to i64, !dbg !6093
  %add.ptr545 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %346, i64 %conv544, !dbg !6093
  %opacity546 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr545, i32 0, i32 3, !dbg !6093
  %352 = load i16, i16* %opacity546, align 2, !dbg !6093
  %353 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6093
  %opacity547 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %353, i32 0, i32 3, !dbg !6093
  store i16 %352, i16* %opacity547, align 2, !dbg !6093
  %354 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6095
  %355 = load i8*, i8** %p.addr, align 8, !dbg !6096
  %call548 = call i8* @PushFloatPixel(%struct._QuantumInfo* %354, i8* %355, float* %pixel477), !dbg !6097
  store i8* %call548, i8** %p.addr, align 8, !dbg !6098
  %356 = load float, float* %pixel477, align 4, !dbg !6099
  %call549 = call zeroext i16 @ClampToQuantum(float %356), !dbg !6099
  %conv550 = zext i16 %call549 to i32, !dbg !6099
  %sub551 = sub nsw i32 65535, %conv550, !dbg !6099
  %conv552 = trunc i32 %sub551 to i16, !dbg !6099
  %357 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6099
  %opacity553 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %357, i32 0, i32 3, !dbg !6099
  store i16 %conv552, i16* %opacity553, align 2, !dbg !6099
  %358 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6100
  %pad554 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %358, i32 0, i32 6, !dbg !6101
  %359 = load i64, i64* %pad554, align 8, !dbg !6101
  %360 = load i8*, i8** %p.addr, align 8, !dbg !6102
  %add.ptr555 = getelementptr inbounds i8, i8* %360, i64 %359, !dbg !6102
  store i8* %add.ptr555, i8** %p.addr, align 8, !dbg !6102
  %361 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6103
  %incdec.ptr556 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %361, i32 1, !dbg !6103
  store %struct._PixelPacket* %incdec.ptr556, %struct._PixelPacket** %q.addr, align 8, !dbg !6103
  br label %for.inc557, !dbg !6104

for.inc557:                                       ; preds = %cond.end542
  %362 = load i64, i64* %x, align 8, !dbg !6105
  %inc558 = add nsw i64 %362, 1, !dbg !6105
  store i64 %inc558, i64* %x, align 8, !dbg !6105
  br label %for.cond478, !dbg !6106, !llvm.loop !6107

for.end559:                                       ; preds = %for.cond478
  br label %sw.epilog, !dbg !6109

if.end560:                                        ; preds = %sw.bb471
  store i64 0, i64* %x, align 8, !dbg !6110
  br label %for.cond561, !dbg !6112

for.cond561:                                      ; preds = %for.inc641, %if.end560
  %363 = load i64, i64* %x, align 8, !dbg !6113
  %364 = load i64, i64* %number_pixels.addr, align 8, !dbg !6115
  %cmp562 = icmp slt i64 %363, %364, !dbg !6116
  br i1 %cmp562, label %for.body564, label %for.end643, !dbg !6117

for.body564:                                      ; preds = %for.cond561
  %365 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6118
  %endian565 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %365, i32 0, i32 13, !dbg !6120
  %366 = load i32, i32* %endian565, align 8, !dbg !6120
  %367 = load i8*, i8** %p.addr, align 8, !dbg !6121
  %call566 = call i8* @PushLongPixel(i32 %366, i8* %367, i32* %pixel472), !dbg !6122
  store i8* %call566, i8** %p.addr, align 8, !dbg !6123
  %368 = load i16*, i16** %indexes.addr, align 8, !dbg !6124
  %369 = load i64, i64* %x, align 8, !dbg !6124
  %add.ptr567 = getelementptr inbounds i16, i16* %368, i64 %369, !dbg !6124
  %cmp568 = icmp ne i16* %add.ptr567, null, !dbg !6124
  br i1 %cmp568, label %if.then570, label %if.end574, !dbg !6127

if.then570:                                       ; preds = %for.body564
  %370 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6124
  %371 = load i32, i32* %pixel472, align 4, !dbg !6124
  %conv571 = zext i32 %371 to i64, !dbg !6124
  %call572 = call zeroext i16 @PushColormapIndex(%struct._Image* %370, i64 %conv571, i32* %range_exception), !dbg !6124
  %372 = load i16*, i16** %indexes.addr, align 8, !dbg !6124
  %373 = load i64, i64* %x, align 8, !dbg !6124
  %add.ptr573 = getelementptr inbounds i16, i16* %372, i64 %373, !dbg !6124
  store i16 %call572, i16* %add.ptr573, align 2, !dbg !6124
  br label %if.end574, !dbg !6124

if.end574:                                        ; preds = %if.then570, %for.body564
  %374 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6128
  %colormap575 = getelementptr inbounds %struct._Image, %struct._Image* %374, i32 0, i32 11, !dbg !6128
  %375 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap575, align 8, !dbg !6128
  %376 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %377 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr576 = getelementptr inbounds i16, i16* %376, i64 %377, !dbg !6128
  %cmp577 = icmp eq i16* %add.ptr576, null, !dbg !6128
  br i1 %cmp577, label %cond.true579, label %cond.false580, !dbg !6128

cond.true579:                                     ; preds = %if.end574
  br label %cond.end583, !dbg !6128

cond.false580:                                    ; preds = %if.end574
  %378 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %379 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr581 = getelementptr inbounds i16, i16* %378, i64 %379, !dbg !6128
  %380 = load i16, i16* %add.ptr581, align 2, !dbg !6128
  %conv582 = zext i16 %380 to i32, !dbg !6128
  br label %cond.end583, !dbg !6128

cond.end583:                                      ; preds = %cond.false580, %cond.true579
  %cond584 = phi i32 [ 0, %cond.true579 ], [ %conv582, %cond.false580 ], !dbg !6128
  %conv585 = sext i32 %cond584 to i64, !dbg !6128
  %add.ptr586 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %375, i64 %conv585, !dbg !6128
  %red587 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr586, i32 0, i32 2, !dbg !6128
  %381 = load i16, i16* %red587, align 2, !dbg !6128
  %382 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6128
  %red588 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %382, i32 0, i32 2, !dbg !6128
  store i16 %381, i16* %red588, align 2, !dbg !6128
  %383 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6128
  %colormap589 = getelementptr inbounds %struct._Image, %struct._Image* %383, i32 0, i32 11, !dbg !6128
  %384 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap589, align 8, !dbg !6128
  %385 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %386 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr590 = getelementptr inbounds i16, i16* %385, i64 %386, !dbg !6128
  %cmp591 = icmp eq i16* %add.ptr590, null, !dbg !6128
  br i1 %cmp591, label %cond.true593, label %cond.false594, !dbg !6128

cond.true593:                                     ; preds = %cond.end583
  br label %cond.end597, !dbg !6128

cond.false594:                                    ; preds = %cond.end583
  %387 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %388 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr595 = getelementptr inbounds i16, i16* %387, i64 %388, !dbg !6128
  %389 = load i16, i16* %add.ptr595, align 2, !dbg !6128
  %conv596 = zext i16 %389 to i32, !dbg !6128
  br label %cond.end597, !dbg !6128

cond.end597:                                      ; preds = %cond.false594, %cond.true593
  %cond598 = phi i32 [ 0, %cond.true593 ], [ %conv596, %cond.false594 ], !dbg !6128
  %conv599 = sext i32 %cond598 to i64, !dbg !6128
  %add.ptr600 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %384, i64 %conv599, !dbg !6128
  %green601 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr600, i32 0, i32 1, !dbg !6128
  %390 = load i16, i16* %green601, align 2, !dbg !6128
  %391 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6128
  %green602 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %391, i32 0, i32 1, !dbg !6128
  store i16 %390, i16* %green602, align 2, !dbg !6128
  %392 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6128
  %colormap603 = getelementptr inbounds %struct._Image, %struct._Image* %392, i32 0, i32 11, !dbg !6128
  %393 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap603, align 8, !dbg !6128
  %394 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %395 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr604 = getelementptr inbounds i16, i16* %394, i64 %395, !dbg !6128
  %cmp605 = icmp eq i16* %add.ptr604, null, !dbg !6128
  br i1 %cmp605, label %cond.true607, label %cond.false608, !dbg !6128

cond.true607:                                     ; preds = %cond.end597
  br label %cond.end611, !dbg !6128

cond.false608:                                    ; preds = %cond.end597
  %396 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %397 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr609 = getelementptr inbounds i16, i16* %396, i64 %397, !dbg !6128
  %398 = load i16, i16* %add.ptr609, align 2, !dbg !6128
  %conv610 = zext i16 %398 to i32, !dbg !6128
  br label %cond.end611, !dbg !6128

cond.end611:                                      ; preds = %cond.false608, %cond.true607
  %cond612 = phi i32 [ 0, %cond.true607 ], [ %conv610, %cond.false608 ], !dbg !6128
  %conv613 = sext i32 %cond612 to i64, !dbg !6128
  %add.ptr614 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %393, i64 %conv613, !dbg !6128
  %blue615 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr614, i32 0, i32 0, !dbg !6128
  %399 = load i16, i16* %blue615, align 2, !dbg !6128
  %400 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6128
  %blue616 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %400, i32 0, i32 0, !dbg !6128
  store i16 %399, i16* %blue616, align 2, !dbg !6128
  %401 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6128
  %colormap617 = getelementptr inbounds %struct._Image, %struct._Image* %401, i32 0, i32 11, !dbg !6128
  %402 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap617, align 8, !dbg !6128
  %403 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %404 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr618 = getelementptr inbounds i16, i16* %403, i64 %404, !dbg !6128
  %cmp619 = icmp eq i16* %add.ptr618, null, !dbg !6128
  br i1 %cmp619, label %cond.true621, label %cond.false622, !dbg !6128

cond.true621:                                     ; preds = %cond.end611
  br label %cond.end625, !dbg !6128

cond.false622:                                    ; preds = %cond.end611
  %405 = load i16*, i16** %indexes.addr, align 8, !dbg !6128
  %406 = load i64, i64* %x, align 8, !dbg !6128
  %add.ptr623 = getelementptr inbounds i16, i16* %405, i64 %406, !dbg !6128
  %407 = load i16, i16* %add.ptr623, align 2, !dbg !6128
  %conv624 = zext i16 %407 to i32, !dbg !6128
  br label %cond.end625, !dbg !6128

cond.end625:                                      ; preds = %cond.false622, %cond.true621
  %cond626 = phi i32 [ 0, %cond.true621 ], [ %conv624, %cond.false622 ], !dbg !6128
  %conv627 = sext i32 %cond626 to i64, !dbg !6128
  %add.ptr628 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %402, i64 %conv627, !dbg !6128
  %opacity629 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr628, i32 0, i32 3, !dbg !6128
  %408 = load i16, i16* %opacity629, align 2, !dbg !6128
  %409 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6128
  %opacity630 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %409, i32 0, i32 3, !dbg !6128
  store i16 %408, i16* %opacity630, align 2, !dbg !6128
  %410 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6130
  %endian631 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %410, i32 0, i32 13, !dbg !6131
  %411 = load i32, i32* %endian631, align 8, !dbg !6131
  %412 = load i8*, i8** %p.addr, align 8, !dbg !6132
  %call632 = call i8* @PushLongPixel(i32 %411, i8* %412, i32* %pixel472), !dbg !6133
  store i8* %call632, i8** %p.addr, align 8, !dbg !6134
  %413 = load i32, i32* %pixel472, align 4, !dbg !6135
  %call633 = call zeroext i16 @ScaleLongToQuantum(i32 %413), !dbg !6135
  %conv634 = zext i16 %call633 to i32, !dbg !6135
  %sub635 = sub nsw i32 65535, %conv634, !dbg !6135
  %conv636 = trunc i32 %sub635 to i16, !dbg !6135
  %414 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6135
  %opacity637 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %414, i32 0, i32 3, !dbg !6135
  store i16 %conv636, i16* %opacity637, align 2, !dbg !6135
  %415 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6136
  %pad638 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %415, i32 0, i32 6, !dbg !6137
  %416 = load i64, i64* %pad638, align 8, !dbg !6137
  %417 = load i8*, i8** %p.addr, align 8, !dbg !6138
  %add.ptr639 = getelementptr inbounds i8, i8* %417, i64 %416, !dbg !6138
  store i8* %add.ptr639, i8** %p.addr, align 8, !dbg !6138
  %418 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6139
  %incdec.ptr640 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %418, i32 1, !dbg !6139
  store %struct._PixelPacket* %incdec.ptr640, %struct._PixelPacket** %q.addr, align 8, !dbg !6139
  br label %for.inc641, !dbg !6140

for.inc641:                                       ; preds = %cond.end625
  %419 = load i64, i64* %x, align 8, !dbg !6141
  %inc642 = add nsw i64 %419, 1, !dbg !6141
  store i64 %inc642, i64* %x, align 8, !dbg !6141
  br label %for.cond561, !dbg !6142, !llvm.loop !6143

for.end643:                                       ; preds = %for.cond561
  br label %sw.epilog, !dbg !6145

sw.bb644:                                         ; preds = %if.end
  %420 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6146
  %format645 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %420, i32 0, i32 2, !dbg !6149
  %421 = load i32, i32* %format645, align 8, !dbg !6149
  %cmp646 = icmp eq i32 %421, 1, !dbg !6150
  br i1 %cmp646, label %if.then648, label %if.end734, !dbg !6151

if.then648:                                       ; preds = %sw.bb644
  call void @llvm.dbg.declare(metadata double* %pixel649, metadata !6152, metadata !DIExpression()), !dbg !6154
  store i64 0, i64* %x, align 8, !dbg !6155
  br label %for.cond650, !dbg !6157

for.cond650:                                      ; preds = %for.inc731, %if.then648
  %422 = load i64, i64* %x, align 8, !dbg !6158
  %423 = load i64, i64* %number_pixels.addr, align 8, !dbg !6160
  %cmp651 = icmp slt i64 %422, %423, !dbg !6161
  br i1 %cmp651, label %for.body653, label %for.end733, !dbg !6162

for.body653:                                      ; preds = %for.cond650
  %424 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6163
  %425 = load i8*, i8** %p.addr, align 8, !dbg !6165
  %call654 = call i8* @PushDoublePixel(%struct._QuantumInfo* %424, i8* %425, double* %pixel649), !dbg !6166
  store i8* %call654, i8** %p.addr, align 8, !dbg !6167
  %426 = load i16*, i16** %indexes.addr, align 8, !dbg !6168
  %427 = load i64, i64* %x, align 8, !dbg !6168
  %add.ptr655 = getelementptr inbounds i16, i16* %426, i64 %427, !dbg !6168
  %cmp656 = icmp ne i16* %add.ptr655, null, !dbg !6168
  br i1 %cmp656, label %if.then658, label %if.end664, !dbg !6171

if.then658:                                       ; preds = %for.body653
  %428 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6168
  %429 = load double, double* %pixel649, align 8, !dbg !6168
  %conv659 = fptrunc double %429 to float, !dbg !6168
  %call660 = call zeroext i16 @ClampToQuantum(float %conv659), !dbg !6168
  %conv661 = zext i16 %call660 to i64, !dbg !6168
  %call662 = call zeroext i16 @PushColormapIndex(%struct._Image* %428, i64 %conv661, i32* %range_exception), !dbg !6168
  %430 = load i16*, i16** %indexes.addr, align 8, !dbg !6168
  %431 = load i64, i64* %x, align 8, !dbg !6168
  %add.ptr663 = getelementptr inbounds i16, i16* %430, i64 %431, !dbg !6168
  store i16 %call662, i16* %add.ptr663, align 2, !dbg !6168
  br label %if.end664, !dbg !6168

if.end664:                                        ; preds = %if.then658, %for.body653
  %432 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6172
  %colormap665 = getelementptr inbounds %struct._Image, %struct._Image* %432, i32 0, i32 11, !dbg !6172
  %433 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap665, align 8, !dbg !6172
  %434 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %435 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr666 = getelementptr inbounds i16, i16* %434, i64 %435, !dbg !6172
  %cmp667 = icmp eq i16* %add.ptr666, null, !dbg !6172
  br i1 %cmp667, label %cond.true669, label %cond.false670, !dbg !6172

cond.true669:                                     ; preds = %if.end664
  br label %cond.end673, !dbg !6172

cond.false670:                                    ; preds = %if.end664
  %436 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %437 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr671 = getelementptr inbounds i16, i16* %436, i64 %437, !dbg !6172
  %438 = load i16, i16* %add.ptr671, align 2, !dbg !6172
  %conv672 = zext i16 %438 to i32, !dbg !6172
  br label %cond.end673, !dbg !6172

cond.end673:                                      ; preds = %cond.false670, %cond.true669
  %cond674 = phi i32 [ 0, %cond.true669 ], [ %conv672, %cond.false670 ], !dbg !6172
  %conv675 = sext i32 %cond674 to i64, !dbg !6172
  %add.ptr676 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %433, i64 %conv675, !dbg !6172
  %red677 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr676, i32 0, i32 2, !dbg !6172
  %439 = load i16, i16* %red677, align 2, !dbg !6172
  %440 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6172
  %red678 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %440, i32 0, i32 2, !dbg !6172
  store i16 %439, i16* %red678, align 2, !dbg !6172
  %441 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6172
  %colormap679 = getelementptr inbounds %struct._Image, %struct._Image* %441, i32 0, i32 11, !dbg !6172
  %442 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap679, align 8, !dbg !6172
  %443 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %444 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr680 = getelementptr inbounds i16, i16* %443, i64 %444, !dbg !6172
  %cmp681 = icmp eq i16* %add.ptr680, null, !dbg !6172
  br i1 %cmp681, label %cond.true683, label %cond.false684, !dbg !6172

cond.true683:                                     ; preds = %cond.end673
  br label %cond.end687, !dbg !6172

cond.false684:                                    ; preds = %cond.end673
  %445 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %446 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr685 = getelementptr inbounds i16, i16* %445, i64 %446, !dbg !6172
  %447 = load i16, i16* %add.ptr685, align 2, !dbg !6172
  %conv686 = zext i16 %447 to i32, !dbg !6172
  br label %cond.end687, !dbg !6172

cond.end687:                                      ; preds = %cond.false684, %cond.true683
  %cond688 = phi i32 [ 0, %cond.true683 ], [ %conv686, %cond.false684 ], !dbg !6172
  %conv689 = sext i32 %cond688 to i64, !dbg !6172
  %add.ptr690 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %442, i64 %conv689, !dbg !6172
  %green691 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr690, i32 0, i32 1, !dbg !6172
  %448 = load i16, i16* %green691, align 2, !dbg !6172
  %449 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6172
  %green692 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %449, i32 0, i32 1, !dbg !6172
  store i16 %448, i16* %green692, align 2, !dbg !6172
  %450 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6172
  %colormap693 = getelementptr inbounds %struct._Image, %struct._Image* %450, i32 0, i32 11, !dbg !6172
  %451 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap693, align 8, !dbg !6172
  %452 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %453 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr694 = getelementptr inbounds i16, i16* %452, i64 %453, !dbg !6172
  %cmp695 = icmp eq i16* %add.ptr694, null, !dbg !6172
  br i1 %cmp695, label %cond.true697, label %cond.false698, !dbg !6172

cond.true697:                                     ; preds = %cond.end687
  br label %cond.end701, !dbg !6172

cond.false698:                                    ; preds = %cond.end687
  %454 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %455 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr699 = getelementptr inbounds i16, i16* %454, i64 %455, !dbg !6172
  %456 = load i16, i16* %add.ptr699, align 2, !dbg !6172
  %conv700 = zext i16 %456 to i32, !dbg !6172
  br label %cond.end701, !dbg !6172

cond.end701:                                      ; preds = %cond.false698, %cond.true697
  %cond702 = phi i32 [ 0, %cond.true697 ], [ %conv700, %cond.false698 ], !dbg !6172
  %conv703 = sext i32 %cond702 to i64, !dbg !6172
  %add.ptr704 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %451, i64 %conv703, !dbg !6172
  %blue705 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr704, i32 0, i32 0, !dbg !6172
  %457 = load i16, i16* %blue705, align 2, !dbg !6172
  %458 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6172
  %blue706 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %458, i32 0, i32 0, !dbg !6172
  store i16 %457, i16* %blue706, align 2, !dbg !6172
  %459 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6172
  %colormap707 = getelementptr inbounds %struct._Image, %struct._Image* %459, i32 0, i32 11, !dbg !6172
  %460 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap707, align 8, !dbg !6172
  %461 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %462 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr708 = getelementptr inbounds i16, i16* %461, i64 %462, !dbg !6172
  %cmp709 = icmp eq i16* %add.ptr708, null, !dbg !6172
  br i1 %cmp709, label %cond.true711, label %cond.false712, !dbg !6172

cond.true711:                                     ; preds = %cond.end701
  br label %cond.end715, !dbg !6172

cond.false712:                                    ; preds = %cond.end701
  %463 = load i16*, i16** %indexes.addr, align 8, !dbg !6172
  %464 = load i64, i64* %x, align 8, !dbg !6172
  %add.ptr713 = getelementptr inbounds i16, i16* %463, i64 %464, !dbg !6172
  %465 = load i16, i16* %add.ptr713, align 2, !dbg !6172
  %conv714 = zext i16 %465 to i32, !dbg !6172
  br label %cond.end715, !dbg !6172

cond.end715:                                      ; preds = %cond.false712, %cond.true711
  %cond716 = phi i32 [ 0, %cond.true711 ], [ %conv714, %cond.false712 ], !dbg !6172
  %conv717 = sext i32 %cond716 to i64, !dbg !6172
  %add.ptr718 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %460, i64 %conv717, !dbg !6172
  %opacity719 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr718, i32 0, i32 3, !dbg !6172
  %466 = load i16, i16* %opacity719, align 2, !dbg !6172
  %467 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6172
  %opacity720 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %467, i32 0, i32 3, !dbg !6172
  store i16 %466, i16* %opacity720, align 2, !dbg !6172
  %468 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6174
  %469 = load i8*, i8** %p.addr, align 8, !dbg !6175
  %call721 = call i8* @PushDoublePixel(%struct._QuantumInfo* %468, i8* %469, double* %pixel649), !dbg !6176
  store i8* %call721, i8** %p.addr, align 8, !dbg !6177
  %470 = load double, double* %pixel649, align 8, !dbg !6178
  %conv722 = fptrunc double %470 to float, !dbg !6178
  %call723 = call zeroext i16 @ClampToQuantum(float %conv722), !dbg !6178
  %conv724 = zext i16 %call723 to i32, !dbg !6178
  %sub725 = sub nsw i32 65535, %conv724, !dbg !6178
  %conv726 = trunc i32 %sub725 to i16, !dbg !6178
  %471 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6178
  %opacity727 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %471, i32 0, i32 3, !dbg !6178
  store i16 %conv726, i16* %opacity727, align 2, !dbg !6178
  %472 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6179
  %pad728 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %472, i32 0, i32 6, !dbg !6180
  %473 = load i64, i64* %pad728, align 8, !dbg !6180
  %474 = load i8*, i8** %p.addr, align 8, !dbg !6181
  %add.ptr729 = getelementptr inbounds i8, i8* %474, i64 %473, !dbg !6181
  store i8* %add.ptr729, i8** %p.addr, align 8, !dbg !6181
  %475 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6182
  %incdec.ptr730 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %475, i32 1, !dbg !6182
  store %struct._PixelPacket* %incdec.ptr730, %struct._PixelPacket** %q.addr, align 8, !dbg !6182
  br label %for.inc731, !dbg !6183

for.inc731:                                       ; preds = %cond.end715
  %476 = load i64, i64* %x, align 8, !dbg !6184
  %inc732 = add nsw i64 %476, 1, !dbg !6184
  store i64 %inc732, i64* %x, align 8, !dbg !6184
  br label %for.cond650, !dbg !6185, !llvm.loop !6186

for.end733:                                       ; preds = %for.cond650
  br label %sw.epilog, !dbg !6188

if.end734:                                        ; preds = %sw.bb644
  br label %sw.default, !dbg !6189

sw.default:                                       ; preds = %if.end, %if.end734
  %477 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6190
  %depth735 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %477, i32 0, i32 0, !dbg !6192
  %478 = load i64, i64* %depth735, align 8, !dbg !6192
  %call736 = call i64 @GetQuantumRange(i64 %478), !dbg !6193
  store i64 %call736, i64* %range, align 8, !dbg !6194
  store i64 0, i64* %x, align 8, !dbg !6195
  br label %for.cond737, !dbg !6197

for.cond737:                                      ; preds = %for.inc816, %sw.default
  %479 = load i64, i64* %x, align 8, !dbg !6198
  %480 = load i64, i64* %number_pixels.addr, align 8, !dbg !6200
  %cmp738 = icmp slt i64 %479, %480, !dbg !6201
  br i1 %cmp738, label %for.body740, label %for.end818, !dbg !6202

for.body740:                                      ; preds = %for.cond737
  %481 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6203
  %482 = load i8*, i8** %p.addr, align 8, !dbg !6205
  %call741 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %481, i8* %482, i32* %pixel), !dbg !6206
  store i8* %call741, i8** %p.addr, align 8, !dbg !6207
  %483 = load i16*, i16** %indexes.addr, align 8, !dbg !6208
  %484 = load i64, i64* %x, align 8, !dbg !6208
  %add.ptr742 = getelementptr inbounds i16, i16* %483, i64 %484, !dbg !6208
  %cmp743 = icmp ne i16* %add.ptr742, null, !dbg !6208
  br i1 %cmp743, label %if.then745, label %if.end749, !dbg !6211

if.then745:                                       ; preds = %for.body740
  %485 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6208
  %486 = load i32, i32* %pixel, align 4, !dbg !6208
  %conv746 = zext i32 %486 to i64, !dbg !6208
  %call747 = call zeroext i16 @PushColormapIndex(%struct._Image* %485, i64 %conv746, i32* %range_exception), !dbg !6208
  %487 = load i16*, i16** %indexes.addr, align 8, !dbg !6208
  %488 = load i64, i64* %x, align 8, !dbg !6208
  %add.ptr748 = getelementptr inbounds i16, i16* %487, i64 %488, !dbg !6208
  store i16 %call747, i16* %add.ptr748, align 2, !dbg !6208
  br label %if.end749, !dbg !6208

if.end749:                                        ; preds = %if.then745, %for.body740
  %489 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6212
  %colormap750 = getelementptr inbounds %struct._Image, %struct._Image* %489, i32 0, i32 11, !dbg !6212
  %490 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap750, align 8, !dbg !6212
  %491 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %492 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr751 = getelementptr inbounds i16, i16* %491, i64 %492, !dbg !6212
  %cmp752 = icmp eq i16* %add.ptr751, null, !dbg !6212
  br i1 %cmp752, label %cond.true754, label %cond.false755, !dbg !6212

cond.true754:                                     ; preds = %if.end749
  br label %cond.end758, !dbg !6212

cond.false755:                                    ; preds = %if.end749
  %493 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %494 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr756 = getelementptr inbounds i16, i16* %493, i64 %494, !dbg !6212
  %495 = load i16, i16* %add.ptr756, align 2, !dbg !6212
  %conv757 = zext i16 %495 to i32, !dbg !6212
  br label %cond.end758, !dbg !6212

cond.end758:                                      ; preds = %cond.false755, %cond.true754
  %cond759 = phi i32 [ 0, %cond.true754 ], [ %conv757, %cond.false755 ], !dbg !6212
  %conv760 = sext i32 %cond759 to i64, !dbg !6212
  %add.ptr761 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %490, i64 %conv760, !dbg !6212
  %red762 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr761, i32 0, i32 2, !dbg !6212
  %496 = load i16, i16* %red762, align 2, !dbg !6212
  %497 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6212
  %red763 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %497, i32 0, i32 2, !dbg !6212
  store i16 %496, i16* %red763, align 2, !dbg !6212
  %498 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6212
  %colormap764 = getelementptr inbounds %struct._Image, %struct._Image* %498, i32 0, i32 11, !dbg !6212
  %499 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap764, align 8, !dbg !6212
  %500 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %501 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr765 = getelementptr inbounds i16, i16* %500, i64 %501, !dbg !6212
  %cmp766 = icmp eq i16* %add.ptr765, null, !dbg !6212
  br i1 %cmp766, label %cond.true768, label %cond.false769, !dbg !6212

cond.true768:                                     ; preds = %cond.end758
  br label %cond.end772, !dbg !6212

cond.false769:                                    ; preds = %cond.end758
  %502 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %503 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr770 = getelementptr inbounds i16, i16* %502, i64 %503, !dbg !6212
  %504 = load i16, i16* %add.ptr770, align 2, !dbg !6212
  %conv771 = zext i16 %504 to i32, !dbg !6212
  br label %cond.end772, !dbg !6212

cond.end772:                                      ; preds = %cond.false769, %cond.true768
  %cond773 = phi i32 [ 0, %cond.true768 ], [ %conv771, %cond.false769 ], !dbg !6212
  %conv774 = sext i32 %cond773 to i64, !dbg !6212
  %add.ptr775 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %499, i64 %conv774, !dbg !6212
  %green776 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr775, i32 0, i32 1, !dbg !6212
  %505 = load i16, i16* %green776, align 2, !dbg !6212
  %506 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6212
  %green777 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %506, i32 0, i32 1, !dbg !6212
  store i16 %505, i16* %green777, align 2, !dbg !6212
  %507 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6212
  %colormap778 = getelementptr inbounds %struct._Image, %struct._Image* %507, i32 0, i32 11, !dbg !6212
  %508 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap778, align 8, !dbg !6212
  %509 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %510 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr779 = getelementptr inbounds i16, i16* %509, i64 %510, !dbg !6212
  %cmp780 = icmp eq i16* %add.ptr779, null, !dbg !6212
  br i1 %cmp780, label %cond.true782, label %cond.false783, !dbg !6212

cond.true782:                                     ; preds = %cond.end772
  br label %cond.end786, !dbg !6212

cond.false783:                                    ; preds = %cond.end772
  %511 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %512 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr784 = getelementptr inbounds i16, i16* %511, i64 %512, !dbg !6212
  %513 = load i16, i16* %add.ptr784, align 2, !dbg !6212
  %conv785 = zext i16 %513 to i32, !dbg !6212
  br label %cond.end786, !dbg !6212

cond.end786:                                      ; preds = %cond.false783, %cond.true782
  %cond787 = phi i32 [ 0, %cond.true782 ], [ %conv785, %cond.false783 ], !dbg !6212
  %conv788 = sext i32 %cond787 to i64, !dbg !6212
  %add.ptr789 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %508, i64 %conv788, !dbg !6212
  %blue790 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr789, i32 0, i32 0, !dbg !6212
  %514 = load i16, i16* %blue790, align 2, !dbg !6212
  %515 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6212
  %blue791 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %515, i32 0, i32 0, !dbg !6212
  store i16 %514, i16* %blue791, align 2, !dbg !6212
  %516 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6212
  %colormap792 = getelementptr inbounds %struct._Image, %struct._Image* %516, i32 0, i32 11, !dbg !6212
  %517 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap792, align 8, !dbg !6212
  %518 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %519 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr793 = getelementptr inbounds i16, i16* %518, i64 %519, !dbg !6212
  %cmp794 = icmp eq i16* %add.ptr793, null, !dbg !6212
  br i1 %cmp794, label %cond.true796, label %cond.false797, !dbg !6212

cond.true796:                                     ; preds = %cond.end786
  br label %cond.end800, !dbg !6212

cond.false797:                                    ; preds = %cond.end786
  %520 = load i16*, i16** %indexes.addr, align 8, !dbg !6212
  %521 = load i64, i64* %x, align 8, !dbg !6212
  %add.ptr798 = getelementptr inbounds i16, i16* %520, i64 %521, !dbg !6212
  %522 = load i16, i16* %add.ptr798, align 2, !dbg !6212
  %conv799 = zext i16 %522 to i32, !dbg !6212
  br label %cond.end800, !dbg !6212

cond.end800:                                      ; preds = %cond.false797, %cond.true796
  %cond801 = phi i32 [ 0, %cond.true796 ], [ %conv799, %cond.false797 ], !dbg !6212
  %conv802 = sext i32 %cond801 to i64, !dbg !6212
  %add.ptr803 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %517, i64 %conv802, !dbg !6212
  %opacity804 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr803, i32 0, i32 3, !dbg !6212
  %523 = load i16, i16* %opacity804, align 2, !dbg !6212
  %524 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6212
  %opacity805 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %524, i32 0, i32 3, !dbg !6212
  store i16 %523, i16* %opacity805, align 2, !dbg !6212
  %525 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6214
  %526 = load i8*, i8** %p.addr, align 8, !dbg !6215
  %call806 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %525, i8* %526, i32* %pixel), !dbg !6216
  store i8* %call806, i8** %p.addr, align 8, !dbg !6217
  %527 = load i32, i32* %pixel, align 4, !dbg !6218
  %conv807 = zext i32 %527 to i64, !dbg !6218
  %528 = load i64, i64* %range, align 8, !dbg !6218
  %call808 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv807, i64 %528), !dbg !6218
  %conv809 = zext i16 %call808 to i32, !dbg !6218
  %sub810 = sub nsw i32 65535, %conv809, !dbg !6218
  %conv811 = trunc i32 %sub810 to i16, !dbg !6218
  %529 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6218
  %opacity812 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %529, i32 0, i32 3, !dbg !6218
  store i16 %conv811, i16* %opacity812, align 2, !dbg !6218
  %530 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6219
  %pad813 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %530, i32 0, i32 6, !dbg !6220
  %531 = load i64, i64* %pad813, align 8, !dbg !6220
  %532 = load i8*, i8** %p.addr, align 8, !dbg !6221
  %add.ptr814 = getelementptr inbounds i8, i8* %532, i64 %531, !dbg !6221
  store i8* %add.ptr814, i8** %p.addr, align 8, !dbg !6221
  %533 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6222
  %incdec.ptr815 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %533, i32 1, !dbg !6222
  store %struct._PixelPacket* %incdec.ptr815, %struct._PixelPacket** %q.addr, align 8, !dbg !6222
  br label %for.inc816, !dbg !6223

for.inc816:                                       ; preds = %cond.end800
  %534 = load i64, i64* %x, align 8, !dbg !6224
  %inc817 = add nsw i64 %534, 1, !dbg !6224
  store i64 %inc817, i64* %x, align 8, !dbg !6224
  br label %for.cond737, !dbg !6225, !llvm.loop !6226

for.end818:                                       ; preds = %for.cond737
  br label %sw.epilog, !dbg !6228

sw.epilog:                                        ; preds = %for.end818, %for.end733, %for.end643, %for.end559, %for.end470, %for.end386, %for.end295, %for.end213, %if.end129
  %535 = load i32, i32* %range_exception, align 4, !dbg !6229
  %cmp819 = icmp ne i32 %535, 0, !dbg !6231
  br i1 %cmp819, label %if.then821, label %if.end825, !dbg !6232

if.then821:                                       ; preds = %sw.epilog
  %536 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6233
  %537 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6234
  %filename822 = getelementptr inbounds %struct._Image, %struct._Image* %537, i32 0, i32 53, !dbg !6235
  %arraydecay823 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename822, i64 0, i64 0, !dbg !6234
  %call824 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %536, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2711, i32 425, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay823), !dbg !6236
  br label %if.end825, !dbg !6237

if.end825:                                        ; preds = %if.then, %if.then821, %sw.epilog
  ret void, !dbg !6238
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportRedQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !6239 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel4 = alloca i16, align 2
  %pixel33 = alloca i32, align 4
  %pixel37 = alloca float, align 4
  %pixel68 = alloca double, align 8
  %range = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6248, metadata !DIExpression()), !dbg !6249
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !6250, metadata !DIExpression()), !dbg !6251
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6252
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !6253
  %1 = load i64, i64* %depth, align 8, !dbg !6253
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 16, label %sw.bb3
    i64 32, label %sw.bb32
    i64 64, label %sw.bb64
  ], !dbg !6254

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !6255, metadata !DIExpression()), !dbg !6258
  store i64 0, i64* %x, align 8, !dbg !6259
  br label %for.cond, !dbg !6261

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !6262
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !6264
  %cmp = icmp slt i64 %2, %3, !dbg !6265
  br i1 %cmp, label %for.body, label %for.end, !dbg !6266

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !6267
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !6269
  store i8* %call, i8** %p.addr, align 8, !dbg !6270
  %5 = load i8, i8* %pixel1, align 1, !dbg !6271
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !6271
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6271
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 2, !dbg !6271
  store i16 %call2, i16* %red, align 2, !dbg !6271
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6272
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %7, i32 0, i32 6, !dbg !6273
  %8 = load i64, i64* %pad, align 8, !dbg !6273
  %9 = load i8*, i8** %p.addr, align 8, !dbg !6274
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 %8, !dbg !6274
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !6274
  %10 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6275
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %10, i32 1, !dbg !6275
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !6275
  br label %for.inc, !dbg !6276

for.inc:                                          ; preds = %for.body
  %11 = load i64, i64* %x, align 8, !dbg !6277
  %inc = add nsw i64 %11, 1, !dbg !6277
  store i64 %inc, i64* %x, align 8, !dbg !6277
  br label %for.cond, !dbg !6278, !llvm.loop !6279

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6281

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel4, metadata !6282, metadata !DIExpression()), !dbg !6284
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6285
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 2, !dbg !6287
  %13 = load i32, i32* %format, align 8, !dbg !6287
  %cmp5 = icmp eq i32 %13, 1, !dbg !6288
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6289

if.then:                                          ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !6290
  br label %for.cond6, !dbg !6293

for.cond6:                                        ; preds = %for.inc16, %if.then
  %14 = load i64, i64* %x, align 8, !dbg !6294
  %15 = load i64, i64* %number_pixels.addr, align 8, !dbg !6296
  %cmp7 = icmp slt i64 %14, %15, !dbg !6297
  br i1 %cmp7, label %for.body8, label %for.end18, !dbg !6298

for.body8:                                        ; preds = %for.cond6
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6299
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 13, !dbg !6301
  %17 = load i32, i32* %endian, align 8, !dbg !6301
  %18 = load i8*, i8** %p.addr, align 8, !dbg !6302
  %call9 = call i8* @PushShortPixel(i32 %17, i8* %18, i16* %pixel4), !dbg !6303
  store i8* %call9, i8** %p.addr, align 8, !dbg !6304
  %19 = load i16, i16* %pixel4, align 2, !dbg !6305
  %call10 = call float @HalfToSinglePrecision(i16 zeroext %19), !dbg !6305
  %mul = fmul float 6.553500e+04, %call10, !dbg !6305
  %call11 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !6305
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6305
  %red12 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 2, !dbg !6305
  store i16 %call11, i16* %red12, align 2, !dbg !6305
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6306
  %pad13 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 6, !dbg !6307
  %22 = load i64, i64* %pad13, align 8, !dbg !6307
  %23 = load i8*, i8** %p.addr, align 8, !dbg !6308
  %add.ptr14 = getelementptr inbounds i8, i8* %23, i64 %22, !dbg !6308
  store i8* %add.ptr14, i8** %p.addr, align 8, !dbg !6308
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6309
  %incdec.ptr15 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !6309
  store %struct._PixelPacket* %incdec.ptr15, %struct._PixelPacket** %q.addr, align 8, !dbg !6309
  br label %for.inc16, !dbg !6310

for.inc16:                                        ; preds = %for.body8
  %25 = load i64, i64* %x, align 8, !dbg !6311
  %inc17 = add nsw i64 %25, 1, !dbg !6311
  store i64 %inc17, i64* %x, align 8, !dbg !6311
  br label %for.cond6, !dbg !6312, !llvm.loop !6313

for.end18:                                        ; preds = %for.cond6
  br label %sw.epilog, !dbg !6315

if.end:                                           ; preds = %sw.bb3
  store i64 0, i64* %x, align 8, !dbg !6316
  br label %for.cond19, !dbg !6318

for.cond19:                                       ; preds = %for.inc29, %if.end
  %26 = load i64, i64* %x, align 8, !dbg !6319
  %27 = load i64, i64* %number_pixels.addr, align 8, !dbg !6321
  %cmp20 = icmp slt i64 %26, %27, !dbg !6322
  br i1 %cmp20, label %for.body21, label %for.end31, !dbg !6323

for.body21:                                       ; preds = %for.cond19
  %28 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6324
  %endian22 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %28, i32 0, i32 13, !dbg !6326
  %29 = load i32, i32* %endian22, align 8, !dbg !6326
  %30 = load i8*, i8** %p.addr, align 8, !dbg !6327
  %call23 = call i8* @PushShortPixel(i32 %29, i8* %30, i16* %pixel4), !dbg !6328
  store i8* %call23, i8** %p.addr, align 8, !dbg !6329
  %31 = load i16, i16* %pixel4, align 2, !dbg !6330
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !6330
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6330
  %red25 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 2, !dbg !6330
  store i16 %call24, i16* %red25, align 2, !dbg !6330
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6331
  %pad26 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 6, !dbg !6332
  %34 = load i64, i64* %pad26, align 8, !dbg !6332
  %35 = load i8*, i8** %p.addr, align 8, !dbg !6333
  %add.ptr27 = getelementptr inbounds i8, i8* %35, i64 %34, !dbg !6333
  store i8* %add.ptr27, i8** %p.addr, align 8, !dbg !6333
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6334
  %incdec.ptr28 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !6334
  store %struct._PixelPacket* %incdec.ptr28, %struct._PixelPacket** %q.addr, align 8, !dbg !6334
  br label %for.inc29, !dbg !6335

for.inc29:                                        ; preds = %for.body21
  %37 = load i64, i64* %x, align 8, !dbg !6336
  %inc30 = add nsw i64 %37, 1, !dbg !6336
  store i64 %inc30, i64* %x, align 8, !dbg !6336
  br label %for.cond19, !dbg !6337, !llvm.loop !6338

for.end31:                                        ; preds = %for.cond19
  br label %sw.epilog, !dbg !6340

sw.bb32:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel33, metadata !6341, metadata !DIExpression()), !dbg !6343
  %38 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6344
  %format34 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %38, i32 0, i32 2, !dbg !6346
  %39 = load i32, i32* %format34, align 8, !dbg !6346
  %cmp35 = icmp eq i32 %39, 1, !dbg !6347
  br i1 %cmp35, label %if.then36, label %if.end50, !dbg !6348

if.then36:                                        ; preds = %sw.bb32
  call void @llvm.dbg.declare(metadata float* %pixel37, metadata !6349, metadata !DIExpression()), !dbg !6351
  store i64 0, i64* %x, align 8, !dbg !6352
  br label %for.cond38, !dbg !6354

for.cond38:                                       ; preds = %for.inc47, %if.then36
  %40 = load i64, i64* %x, align 8, !dbg !6355
  %41 = load i64, i64* %number_pixels.addr, align 8, !dbg !6357
  %cmp39 = icmp slt i64 %40, %41, !dbg !6358
  br i1 %cmp39, label %for.body40, label %for.end49, !dbg !6359

for.body40:                                       ; preds = %for.cond38
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6360
  %43 = load i8*, i8** %p.addr, align 8, !dbg !6362
  %call41 = call i8* @PushFloatPixel(%struct._QuantumInfo* %42, i8* %43, float* %pixel37), !dbg !6363
  store i8* %call41, i8** %p.addr, align 8, !dbg !6364
  %44 = load float, float* %pixel37, align 4, !dbg !6365
  %call42 = call zeroext i16 @ClampToQuantum(float %44), !dbg !6365
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6365
  %red43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 2, !dbg !6365
  store i16 %call42, i16* %red43, align 2, !dbg !6365
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6366
  %pad44 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %46, i32 0, i32 6, !dbg !6367
  %47 = load i64, i64* %pad44, align 8, !dbg !6367
  %48 = load i8*, i8** %p.addr, align 8, !dbg !6368
  %add.ptr45 = getelementptr inbounds i8, i8* %48, i64 %47, !dbg !6368
  store i8* %add.ptr45, i8** %p.addr, align 8, !dbg !6368
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6369
  %incdec.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 1, !dbg !6369
  store %struct._PixelPacket* %incdec.ptr46, %struct._PixelPacket** %q.addr, align 8, !dbg !6369
  br label %for.inc47, !dbg !6370

for.inc47:                                        ; preds = %for.body40
  %50 = load i64, i64* %x, align 8, !dbg !6371
  %inc48 = add nsw i64 %50, 1, !dbg !6371
  store i64 %inc48, i64* %x, align 8, !dbg !6371
  br label %for.cond38, !dbg !6372, !llvm.loop !6373

for.end49:                                        ; preds = %for.cond38
  br label %sw.epilog, !dbg !6375

if.end50:                                         ; preds = %sw.bb32
  store i64 0, i64* %x, align 8, !dbg !6376
  br label %for.cond51, !dbg !6378

for.cond51:                                       ; preds = %for.inc61, %if.end50
  %51 = load i64, i64* %x, align 8, !dbg !6379
  %52 = load i64, i64* %number_pixels.addr, align 8, !dbg !6381
  %cmp52 = icmp slt i64 %51, %52, !dbg !6382
  br i1 %cmp52, label %for.body53, label %for.end63, !dbg !6383

for.body53:                                       ; preds = %for.cond51
  %53 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6384
  %endian54 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %53, i32 0, i32 13, !dbg !6386
  %54 = load i32, i32* %endian54, align 8, !dbg !6386
  %55 = load i8*, i8** %p.addr, align 8, !dbg !6387
  %call55 = call i8* @PushLongPixel(i32 %54, i8* %55, i32* %pixel33), !dbg !6388
  store i8* %call55, i8** %p.addr, align 8, !dbg !6389
  %56 = load i32, i32* %pixel33, align 4, !dbg !6390
  %call56 = call zeroext i16 @ScaleLongToQuantum(i32 %56), !dbg !6390
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6390
  %red57 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 2, !dbg !6390
  store i16 %call56, i16* %red57, align 2, !dbg !6390
  %58 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6391
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %58, i32 0, i32 6, !dbg !6392
  %59 = load i64, i64* %pad58, align 8, !dbg !6392
  %60 = load i8*, i8** %p.addr, align 8, !dbg !6393
  %add.ptr59 = getelementptr inbounds i8, i8* %60, i64 %59, !dbg !6393
  store i8* %add.ptr59, i8** %p.addr, align 8, !dbg !6393
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6394
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !6394
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %q.addr, align 8, !dbg !6394
  br label %for.inc61, !dbg !6395

for.inc61:                                        ; preds = %for.body53
  %62 = load i64, i64* %x, align 8, !dbg !6396
  %inc62 = add nsw i64 %62, 1, !dbg !6396
  store i64 %inc62, i64* %x, align 8, !dbg !6396
  br label %for.cond51, !dbg !6397, !llvm.loop !6398

for.end63:                                        ; preds = %for.cond51
  br label %sw.epilog, !dbg !6400

sw.bb64:                                          ; preds = %entry
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6401
  %format65 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %63, i32 0, i32 2, !dbg !6404
  %64 = load i32, i32* %format65, align 8, !dbg !6404
  %cmp66 = icmp eq i32 %64, 1, !dbg !6405
  br i1 %cmp66, label %if.then67, label %if.end81, !dbg !6406

if.then67:                                        ; preds = %sw.bb64
  call void @llvm.dbg.declare(metadata double* %pixel68, metadata !6407, metadata !DIExpression()), !dbg !6409
  store i64 0, i64* %x, align 8, !dbg !6410
  br label %for.cond69, !dbg !6412

for.cond69:                                       ; preds = %for.inc78, %if.then67
  %65 = load i64, i64* %x, align 8, !dbg !6413
  %66 = load i64, i64* %number_pixels.addr, align 8, !dbg !6415
  %cmp70 = icmp slt i64 %65, %66, !dbg !6416
  br i1 %cmp70, label %for.body71, label %for.end80, !dbg !6417

for.body71:                                       ; preds = %for.cond69
  %67 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6418
  %68 = load i8*, i8** %p.addr, align 8, !dbg !6420
  %call72 = call i8* @PushDoublePixel(%struct._QuantumInfo* %67, i8* %68, double* %pixel68), !dbg !6421
  store i8* %call72, i8** %p.addr, align 8, !dbg !6422
  %69 = load double, double* %pixel68, align 8, !dbg !6423
  %conv = fptrunc double %69 to float, !dbg !6423
  %call73 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !6423
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6423
  %red74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 2, !dbg !6423
  store i16 %call73, i16* %red74, align 2, !dbg !6423
  %71 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6424
  %pad75 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %71, i32 0, i32 6, !dbg !6425
  %72 = load i64, i64* %pad75, align 8, !dbg !6425
  %73 = load i8*, i8** %p.addr, align 8, !dbg !6426
  %add.ptr76 = getelementptr inbounds i8, i8* %73, i64 %72, !dbg !6426
  store i8* %add.ptr76, i8** %p.addr, align 8, !dbg !6426
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6427
  %incdec.ptr77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 1, !dbg !6427
  store %struct._PixelPacket* %incdec.ptr77, %struct._PixelPacket** %q.addr, align 8, !dbg !6427
  br label %for.inc78, !dbg !6428

for.inc78:                                        ; preds = %for.body71
  %75 = load i64, i64* %x, align 8, !dbg !6429
  %inc79 = add nsw i64 %75, 1, !dbg !6429
  store i64 %inc79, i64* %x, align 8, !dbg !6429
  br label %for.cond69, !dbg !6430, !llvm.loop !6431

for.end80:                                        ; preds = %for.cond69
  br label %sw.epilog, !dbg !6433

if.end81:                                         ; preds = %sw.bb64
  br label %sw.default, !dbg !6434

sw.default:                                       ; preds = %entry, %if.end81
  call void @llvm.dbg.declare(metadata i64* %range, metadata !6435, metadata !DIExpression()), !dbg !6437
  %76 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6438
  %depth82 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %76, i32 0, i32 0, !dbg !6439
  %77 = load i64, i64* %depth82, align 8, !dbg !6439
  %call83 = call i64 @GetQuantumRange(i64 %77), !dbg !6440
  store i64 %call83, i64* %range, align 8, !dbg !6441
  store i64 0, i64* %x, align 8, !dbg !6442
  br label %for.cond84, !dbg !6444

for.cond84:                                       ; preds = %for.inc95, %sw.default
  %78 = load i64, i64* %x, align 8, !dbg !6445
  %79 = load i64, i64* %number_pixels.addr, align 8, !dbg !6447
  %cmp85 = icmp slt i64 %78, %79, !dbg !6448
  br i1 %cmp85, label %for.body87, label %for.end97, !dbg !6449

for.body87:                                       ; preds = %for.cond84
  %80 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6450
  %81 = load i8*, i8** %p.addr, align 8, !dbg !6452
  %call88 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %80, i8* %81, i32* %pixel), !dbg !6453
  store i8* %call88, i8** %p.addr, align 8, !dbg !6454
  %82 = load i32, i32* %pixel, align 4, !dbg !6455
  %conv89 = zext i32 %82 to i64, !dbg !6455
  %83 = load i64, i64* %range, align 8, !dbg !6455
  %call90 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv89, i64 %83), !dbg !6455
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6455
  %red91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 2, !dbg !6455
  store i16 %call90, i16* %red91, align 2, !dbg !6455
  %85 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6456
  %pad92 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %85, i32 0, i32 6, !dbg !6457
  %86 = load i64, i64* %pad92, align 8, !dbg !6457
  %87 = load i8*, i8** %p.addr, align 8, !dbg !6458
  %add.ptr93 = getelementptr inbounds i8, i8* %87, i64 %86, !dbg !6458
  store i8* %add.ptr93, i8** %p.addr, align 8, !dbg !6458
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6459
  %incdec.ptr94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 1, !dbg !6459
  store %struct._PixelPacket* %incdec.ptr94, %struct._PixelPacket** %q.addr, align 8, !dbg !6459
  br label %for.inc95, !dbg !6460

for.inc95:                                        ; preds = %for.body87
  %89 = load i64, i64* %x, align 8, !dbg !6461
  %inc96 = add nsw i64 %89, 1, !dbg !6461
  store i64 %inc96, i64* %x, align 8, !dbg !6461
  br label %for.cond84, !dbg !6462, !llvm.loop !6463

for.end97:                                        ; preds = %for.cond84
  br label %sw.epilog, !dbg !6465

sw.epilog:                                        ; preds = %for.end97, %for.end80, %for.end63, %for.end49, %for.end31, %for.end18, %for.end
  ret void, !dbg !6466
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportRGBQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !6467 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %bit = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %pixel84 = alloca i16, align 2
  %pixel227 = alloca i16, align 2
  %pixel283 = alloca i32, align 4
  %pixel288 = alloca float, align 4
  %pixel336 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata i64* %range, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata i64* %bit, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6484
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !6485
  %1 = load i64, i64* %depth, align 8, !dbg !6485
  switch i64 %1, label %sw.default360 [
    i64 8, label %sw.bb
    i64 10, label %sw.bb7
    i64 12, label %sw.bb77
    i64 16, label %sw.bb226
    i64 32, label %sw.bb282
    i64 64, label %sw.bb331
  ], !dbg !6486

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !6487, metadata !DIExpression()), !dbg !6490
  store i64 0, i64* %x, align 8, !dbg !6491
  br label %for.cond, !dbg !6493

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !6494
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !6496
  %cmp = icmp slt i64 %2, %3, !dbg !6497
  br i1 %cmp, label %for.body, label %for.end, !dbg !6498

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !6499
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !6501
  store i8* %call, i8** %p.addr, align 8, !dbg !6502
  %5 = load i8, i8* %pixel1, align 1, !dbg !6503
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !6503
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6503
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 2, !dbg !6503
  store i16 %call2, i16* %red, align 2, !dbg !6503
  %7 = load i8*, i8** %p.addr, align 8, !dbg !6504
  %call3 = call i8* @PushCharPixel(i8* %7, i8* %pixel1), !dbg !6505
  store i8* %call3, i8** %p.addr, align 8, !dbg !6506
  %8 = load i8, i8* %pixel1, align 1, !dbg !6507
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %8), !dbg !6507
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6507
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 1, !dbg !6507
  store i16 %call4, i16* %green, align 2, !dbg !6507
  %10 = load i8*, i8** %p.addr, align 8, !dbg !6508
  %call5 = call i8* @PushCharPixel(i8* %10, i8* %pixel1), !dbg !6509
  store i8* %call5, i8** %p.addr, align 8, !dbg !6510
  %11 = load i8, i8* %pixel1, align 1, !dbg !6511
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %11), !dbg !6511
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6511
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 0, !dbg !6511
  store i16 %call6, i16* %blue, align 2, !dbg !6511
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6512
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 3, !dbg !6512
  store i16 0, i16* %opacity, align 2, !dbg !6512
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6513
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 6, !dbg !6514
  %15 = load i64, i64* %pad, align 8, !dbg !6514
  %16 = load i8*, i8** %p.addr, align 8, !dbg !6515
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %15, !dbg !6515
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !6515
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6516
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 1, !dbg !6516
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !6516
  br label %for.inc, !dbg !6517

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %x, align 8, !dbg !6518
  %inc = add nsw i64 %18, 1, !dbg !6518
  store i64 %inc, i64* %x, align 8, !dbg !6518
  br label %for.cond, !dbg !6519, !llvm.loop !6520

for.end:                                          ; preds = %for.cond
  br label %sw.epilog383, !dbg !6522

sw.bb7:                                           ; preds = %entry
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6523
  %depth8 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 0, !dbg !6525
  %20 = load i64, i64* %depth8, align 8, !dbg !6525
  %call9 = call i64 @GetQuantumRange(i64 %20), !dbg !6526
  store i64 %call9, i64* %range, align 8, !dbg !6527
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6528
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 8, !dbg !6530
  %22 = load i32, i32* %pack, align 4, !dbg !6530
  %cmp10 = icmp eq i32 %22, 0, !dbg !6531
  br i1 %cmp10, label %if.then, label %if.end, !dbg !6532

if.then:                                          ; preds = %sw.bb7
  store i64 0, i64* %x, align 8, !dbg !6533
  br label %for.cond11, !dbg !6536

for.cond11:                                       ; preds = %for.inc30, %if.then
  %23 = load i64, i64* %x, align 8, !dbg !6537
  %24 = load i64, i64* %number_pixels.addr, align 8, !dbg !6539
  %cmp12 = icmp slt i64 %23, %24, !dbg !6540
  br i1 %cmp12, label %for.body13, label %for.end32, !dbg !6541

for.body13:                                       ; preds = %for.cond11
  %25 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6542
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %25, i32 0, i32 13, !dbg !6544
  %26 = load i32, i32* %endian, align 8, !dbg !6544
  %27 = load i8*, i8** %p.addr, align 8, !dbg !6545
  %call14 = call i8* @PushLongPixel(i32 %26, i8* %27, i32* %pixel), !dbg !6546
  store i8* %call14, i8** %p.addr, align 8, !dbg !6547
  %28 = load i32, i32* %pixel, align 4, !dbg !6548
  %shr = lshr i32 %28, 22, !dbg !6548
  %and = and i32 %shr, 1023, !dbg !6548
  %conv = zext i32 %and to i64, !dbg !6548
  %29 = load i64, i64* %range, align 8, !dbg !6548
  %call15 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv, i64 %29), !dbg !6548
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6548
  %red16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !6548
  store i16 %call15, i16* %red16, align 2, !dbg !6548
  %31 = load i32, i32* %pixel, align 4, !dbg !6549
  %shr17 = lshr i32 %31, 12, !dbg !6549
  %and18 = and i32 %shr17, 1023, !dbg !6549
  %conv19 = zext i32 %and18 to i64, !dbg !6549
  %32 = load i64, i64* %range, align 8, !dbg !6549
  %call20 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv19, i64 %32), !dbg !6549
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6549
  %green21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 1, !dbg !6549
  store i16 %call20, i16* %green21, align 2, !dbg !6549
  %34 = load i32, i32* %pixel, align 4, !dbg !6550
  %shr22 = lshr i32 %34, 2, !dbg !6550
  %and23 = and i32 %shr22, 1023, !dbg !6550
  %conv24 = zext i32 %and23 to i64, !dbg !6550
  %35 = load i64, i64* %range, align 8, !dbg !6550
  %call25 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv24, i64 %35), !dbg !6550
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6550
  %blue26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !6550
  store i16 %call25, i16* %blue26, align 2, !dbg !6550
  %37 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6551
  %pad27 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %37, i32 0, i32 6, !dbg !6552
  %38 = load i64, i64* %pad27, align 8, !dbg !6552
  %39 = load i8*, i8** %p.addr, align 8, !dbg !6553
  %add.ptr28 = getelementptr inbounds i8, i8* %39, i64 %38, !dbg !6553
  store i8* %add.ptr28, i8** %p.addr, align 8, !dbg !6553
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6554
  %incdec.ptr29 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 1, !dbg !6554
  store %struct._PixelPacket* %incdec.ptr29, %struct._PixelPacket** %q.addr, align 8, !dbg !6554
  br label %for.inc30, !dbg !6555

for.inc30:                                        ; preds = %for.body13
  %41 = load i64, i64* %x, align 8, !dbg !6556
  %inc31 = add nsw i64 %41, 1, !dbg !6556
  store i64 %inc31, i64* %x, align 8, !dbg !6556
  br label %for.cond11, !dbg !6557, !llvm.loop !6558

for.end32:                                        ; preds = %for.cond11
  br label %sw.epilog383, !dbg !6560

if.end:                                           ; preds = %sw.bb7
  %42 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6561
  %quantum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %42, i32 0, i32 1, !dbg !6563
  %43 = load i64, i64* %quantum, align 8, !dbg !6563
  %cmp33 = icmp eq i64 %43, 32, !dbg !6564
  br i1 %cmp33, label %if.then35, label %if.end56, !dbg !6565

if.then35:                                        ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !6566
  br label %for.cond36, !dbg !6569

for.cond36:                                       ; preds = %for.inc53, %if.then35
  %44 = load i64, i64* %x, align 8, !dbg !6570
  %45 = load i64, i64* %number_pixels.addr, align 8, !dbg !6572
  %cmp37 = icmp slt i64 %44, %45, !dbg !6573
  br i1 %cmp37, label %for.body39, label %for.end55, !dbg !6574

for.body39:                                       ; preds = %for.cond36
  %46 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6575
  %47 = load i8*, i8** %p.addr, align 8, !dbg !6577
  %call40 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %46, i8* %47, i32* %pixel), !dbg !6578
  store i8* %call40, i8** %p.addr, align 8, !dbg !6579
  %48 = load i32, i32* %pixel, align 4, !dbg !6580
  %conv41 = zext i32 %48 to i64, !dbg !6580
  %49 = load i64, i64* %range, align 8, !dbg !6580
  %call42 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv41, i64 %49), !dbg !6580
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6580
  %red43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 2, !dbg !6580
  store i16 %call42, i16* %red43, align 2, !dbg !6580
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6581
  %52 = load i8*, i8** %p.addr, align 8, !dbg !6582
  %call44 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %51, i8* %52, i32* %pixel), !dbg !6583
  store i8* %call44, i8** %p.addr, align 8, !dbg !6584
  %53 = load i32, i32* %pixel, align 4, !dbg !6585
  %conv45 = zext i32 %53 to i64, !dbg !6585
  %54 = load i64, i64* %range, align 8, !dbg !6585
  %call46 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv45, i64 %54), !dbg !6585
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6585
  %green47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !6585
  store i16 %call46, i16* %green47, align 2, !dbg !6585
  %56 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6586
  %57 = load i8*, i8** %p.addr, align 8, !dbg !6587
  %call48 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %56, i8* %57, i32* %pixel), !dbg !6588
  store i8* %call48, i8** %p.addr, align 8, !dbg !6589
  %58 = load i32, i32* %pixel, align 4, !dbg !6590
  %conv49 = zext i32 %58 to i64, !dbg !6590
  %59 = load i64, i64* %range, align 8, !dbg !6590
  %call50 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv49, i64 %59), !dbg !6590
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6590
  %blue51 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 0, !dbg !6590
  store i16 %call50, i16* %blue51, align 2, !dbg !6590
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6591
  %incdec.ptr52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 1, !dbg !6591
  store %struct._PixelPacket* %incdec.ptr52, %struct._PixelPacket** %q.addr, align 8, !dbg !6591
  br label %for.inc53, !dbg !6592

for.inc53:                                        ; preds = %for.body39
  %62 = load i64, i64* %x, align 8, !dbg !6593
  %inc54 = add nsw i64 %62, 1, !dbg !6593
  store i64 %inc54, i64* %x, align 8, !dbg !6593
  br label %for.cond36, !dbg !6594, !llvm.loop !6595

for.end55:                                        ; preds = %for.cond36
  br label %sw.epilog383, !dbg !6597

if.end56:                                         ; preds = %if.end
  store i64 0, i64* %x, align 8, !dbg !6598
  br label %for.cond57, !dbg !6600

for.cond57:                                       ; preds = %for.inc74, %if.end56
  %63 = load i64, i64* %x, align 8, !dbg !6601
  %64 = load i64, i64* %number_pixels.addr, align 8, !dbg !6603
  %cmp58 = icmp slt i64 %63, %64, !dbg !6604
  br i1 %cmp58, label %for.body60, label %for.end76, !dbg !6605

for.body60:                                       ; preds = %for.cond57
  %65 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6606
  %66 = load i8*, i8** %p.addr, align 8, !dbg !6608
  %call61 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %65, i8* %66, i32* %pixel), !dbg !6609
  store i8* %call61, i8** %p.addr, align 8, !dbg !6610
  %67 = load i32, i32* %pixel, align 4, !dbg !6611
  %conv62 = zext i32 %67 to i64, !dbg !6611
  %68 = load i64, i64* %range, align 8, !dbg !6611
  %call63 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv62, i64 %68), !dbg !6611
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6611
  %red64 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 2, !dbg !6611
  store i16 %call63, i16* %red64, align 2, !dbg !6611
  %70 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6612
  %71 = load i8*, i8** %p.addr, align 8, !dbg !6613
  %call65 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %70, i8* %71, i32* %pixel), !dbg !6614
  store i8* %call65, i8** %p.addr, align 8, !dbg !6615
  %72 = load i32, i32* %pixel, align 4, !dbg !6616
  %conv66 = zext i32 %72 to i64, !dbg !6616
  %73 = load i64, i64* %range, align 8, !dbg !6616
  %call67 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv66, i64 %73), !dbg !6616
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6616
  %green68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 1, !dbg !6616
  store i16 %call67, i16* %green68, align 2, !dbg !6616
  %75 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6617
  %76 = load i8*, i8** %p.addr, align 8, !dbg !6618
  %call69 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %75, i8* %76, i32* %pixel), !dbg !6619
  store i8* %call69, i8** %p.addr, align 8, !dbg !6620
  %77 = load i32, i32* %pixel, align 4, !dbg !6621
  %conv70 = zext i32 %77 to i64, !dbg !6621
  %78 = load i64, i64* %range, align 8, !dbg !6621
  %call71 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv70, i64 %78), !dbg !6621
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6621
  %blue72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !6621
  store i16 %call71, i16* %blue72, align 2, !dbg !6621
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6622
  %incdec.ptr73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 1, !dbg !6622
  store %struct._PixelPacket* %incdec.ptr73, %struct._PixelPacket** %q.addr, align 8, !dbg !6622
  br label %for.inc74, !dbg !6623

for.inc74:                                        ; preds = %for.body60
  %81 = load i64, i64* %x, align 8, !dbg !6624
  %inc75 = add nsw i64 %81, 1, !dbg !6624
  store i64 %inc75, i64* %x, align 8, !dbg !6624
  br label %for.cond57, !dbg !6625, !llvm.loop !6626

for.end76:                                        ; preds = %for.cond57
  br label %sw.epilog383, !dbg !6628

sw.bb77:                                          ; preds = %entry
  %82 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6629
  %depth78 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %82, i32 0, i32 0, !dbg !6631
  %83 = load i64, i64* %depth78, align 8, !dbg !6631
  %call79 = call i64 @GetQuantumRange(i64 %83), !dbg !6632
  store i64 %call79, i64* %range, align 8, !dbg !6633
  %84 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6634
  %pack80 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %84, i32 0, i32 8, !dbg !6636
  %85 = load i32, i32* %pack80, align 4, !dbg !6636
  %cmp81 = icmp eq i32 %85, 0, !dbg !6637
  br i1 %cmp81, label %if.then83, label %if.end180, !dbg !6638

if.then83:                                        ; preds = %sw.bb77
  call void @llvm.dbg.declare(metadata i16* %pixel84, metadata !6639, metadata !DIExpression()), !dbg !6641
  store i64 0, i64* %x, align 8, !dbg !6642
  br label %for.cond85, !dbg !6644

for.cond85:                                       ; preds = %for.inc136, %if.then83
  %86 = load i64, i64* %x, align 8, !dbg !6645
  %87 = load i64, i64* %number_pixels.addr, align 8, !dbg !6647
  %mul = mul i64 3, %87, !dbg !6648
  %sub = sub i64 %mul, 1, !dbg !6649
  %cmp86 = icmp slt i64 %86, %sub, !dbg !6650
  br i1 %cmp86, label %for.body88, label %for.end138, !dbg !6651

for.body88:                                       ; preds = %for.cond85
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6652
  %endian89 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 13, !dbg !6654
  %89 = load i32, i32* %endian89, align 8, !dbg !6654
  %90 = load i8*, i8** %p.addr, align 8, !dbg !6655
  %call90 = call i8* @PushShortPixel(i32 %89, i8* %90, i16* %pixel84), !dbg !6656
  store i8* %call90, i8** %p.addr, align 8, !dbg !6657
  %91 = load i64, i64* %x, align 8, !dbg !6658
  %rem = srem i64 %91, 3, !dbg !6659
  switch i64 %rem, label %sw.default [
    i64 0, label %sw.bb91
    i64 1, label %sw.bb97
    i64 2, label %sw.bb103
  ], !dbg !6660

sw.default:                                       ; preds = %for.body88
  br label %sw.bb91, !dbg !6661

sw.bb91:                                          ; preds = %for.body88, %sw.default
  %92 = load i16, i16* %pixel84, align 2, !dbg !6662
  %conv92 = zext i16 %92 to i32, !dbg !6662
  %shr93 = ashr i32 %conv92, 4, !dbg !6662
  %conv94 = sext i32 %shr93 to i64, !dbg !6662
  %93 = load i64, i64* %range, align 8, !dbg !6662
  %call95 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv94, i64 %93), !dbg !6662
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6662
  %red96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 0, i32 2, !dbg !6662
  store i16 %call95, i16* %red96, align 2, !dbg !6662
  br label %sw.epilog, !dbg !6665

sw.bb97:                                          ; preds = %for.body88
  %95 = load i16, i16* %pixel84, align 2, !dbg !6666
  %conv98 = zext i16 %95 to i32, !dbg !6666
  %shr99 = ashr i32 %conv98, 4, !dbg !6666
  %conv100 = sext i32 %shr99 to i64, !dbg !6666
  %96 = load i64, i64* %range, align 8, !dbg !6666
  %call101 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv100, i64 %96), !dbg !6666
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6666
  %green102 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 1, !dbg !6666
  store i16 %call101, i16* %green102, align 2, !dbg !6666
  br label %sw.epilog, !dbg !6668

sw.bb103:                                         ; preds = %for.body88
  %98 = load i16, i16* %pixel84, align 2, !dbg !6669
  %conv104 = zext i16 %98 to i32, !dbg !6669
  %shr105 = ashr i32 %conv104, 4, !dbg !6669
  %conv106 = sext i32 %shr105 to i64, !dbg !6669
  %99 = load i64, i64* %range, align 8, !dbg !6669
  %call107 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv106, i64 %99), !dbg !6669
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6669
  %blue108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 0, !dbg !6669
  store i16 %call107, i16* %blue108, align 2, !dbg !6669
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6671
  %incdec.ptr109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %101, i32 1, !dbg !6671
  store %struct._PixelPacket* %incdec.ptr109, %struct._PixelPacket** %q.addr, align 8, !dbg !6671
  br label %sw.epilog, !dbg !6672

sw.epilog:                                        ; preds = %sw.bb103, %sw.bb97, %sw.bb91
  %102 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6673
  %endian110 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %102, i32 0, i32 13, !dbg !6674
  %103 = load i32, i32* %endian110, align 8, !dbg !6674
  %104 = load i8*, i8** %p.addr, align 8, !dbg !6675
  %call111 = call i8* @PushShortPixel(i32 %103, i8* %104, i16* %pixel84), !dbg !6676
  store i8* %call111, i8** %p.addr, align 8, !dbg !6677
  %105 = load i64, i64* %x, align 8, !dbg !6678
  %add = add nsw i64 %105, 1, !dbg !6679
  %rem112 = srem i64 %add, 3, !dbg !6680
  switch i64 %rem112, label %sw.default113 [
    i64 0, label %sw.bb114
    i64 1, label %sw.bb120
    i64 2, label %sw.bb126
  ], !dbg !6681

sw.default113:                                    ; preds = %sw.epilog
  br label %sw.bb114, !dbg !6682

sw.bb114:                                         ; preds = %sw.epilog, %sw.default113
  %106 = load i16, i16* %pixel84, align 2, !dbg !6683
  %conv115 = zext i16 %106 to i32, !dbg !6683
  %shr116 = ashr i32 %conv115, 4, !dbg !6683
  %conv117 = sext i32 %shr116 to i64, !dbg !6683
  %107 = load i64, i64* %range, align 8, !dbg !6683
  %call118 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv117, i64 %107), !dbg !6683
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6683
  %red119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 2, !dbg !6683
  store i16 %call118, i16* %red119, align 2, !dbg !6683
  br label %sw.epilog133, !dbg !6686

sw.bb120:                                         ; preds = %sw.epilog
  %109 = load i16, i16* %pixel84, align 2, !dbg !6687
  %conv121 = zext i16 %109 to i32, !dbg !6687
  %shr122 = ashr i32 %conv121, 4, !dbg !6687
  %conv123 = sext i32 %shr122 to i64, !dbg !6687
  %110 = load i64, i64* %range, align 8, !dbg !6687
  %call124 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv123, i64 %110), !dbg !6687
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6687
  %green125 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i32 0, i32 1, !dbg !6687
  store i16 %call124, i16* %green125, align 2, !dbg !6687
  br label %sw.epilog133, !dbg !6689

sw.bb126:                                         ; preds = %sw.epilog
  %112 = load i16, i16* %pixel84, align 2, !dbg !6690
  %conv127 = zext i16 %112 to i32, !dbg !6690
  %shr128 = ashr i32 %conv127, 4, !dbg !6690
  %conv129 = sext i32 %shr128 to i64, !dbg !6690
  %113 = load i64, i64* %range, align 8, !dbg !6690
  %call130 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv129, i64 %113), !dbg !6690
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6690
  %blue131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 0, !dbg !6690
  store i16 %call130, i16* %blue131, align 2, !dbg !6690
  %115 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6692
  %incdec.ptr132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %115, i32 1, !dbg !6692
  store %struct._PixelPacket* %incdec.ptr132, %struct._PixelPacket** %q.addr, align 8, !dbg !6692
  br label %sw.epilog133, !dbg !6693

sw.epilog133:                                     ; preds = %sw.bb126, %sw.bb120, %sw.bb114
  %116 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6694
  %pad134 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %116, i32 0, i32 6, !dbg !6695
  %117 = load i64, i64* %pad134, align 8, !dbg !6695
  %118 = load i8*, i8** %p.addr, align 8, !dbg !6696
  %add.ptr135 = getelementptr inbounds i8, i8* %118, i64 %117, !dbg !6696
  store i8* %add.ptr135, i8** %p.addr, align 8, !dbg !6696
  br label %for.inc136, !dbg !6697

for.inc136:                                       ; preds = %sw.epilog133
  %119 = load i64, i64* %x, align 8, !dbg !6698
  %add137 = add nsw i64 %119, 2, !dbg !6698
  store i64 %add137, i64* %x, align 8, !dbg !6698
  br label %for.cond85, !dbg !6699, !llvm.loop !6700

for.end138:                                       ; preds = %for.cond85
  store i64 0, i64* %bit, align 8, !dbg !6702
  br label %for.cond139, !dbg !6704

for.cond139:                                      ; preds = %for.inc172, %for.end138
  %120 = load i64, i64* %bit, align 8, !dbg !6705
  %121 = load i64, i64* %number_pixels.addr, align 8, !dbg !6707
  %mul140 = mul i64 3, %121, !dbg !6708
  %rem141 = urem i64 %mul140, 2, !dbg !6709
  %cmp142 = icmp slt i64 %120, %rem141, !dbg !6710
  br i1 %cmp142, label %for.body144, label %for.end174, !dbg !6711

for.body144:                                      ; preds = %for.cond139
  %122 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6712
  %endian145 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %122, i32 0, i32 13, !dbg !6714
  %123 = load i32, i32* %endian145, align 8, !dbg !6714
  %124 = load i8*, i8** %p.addr, align 8, !dbg !6715
  %call146 = call i8* @PushShortPixel(i32 %123, i8* %124, i16* %pixel84), !dbg !6716
  store i8* %call146, i8** %p.addr, align 8, !dbg !6717
  %125 = load i64, i64* %x, align 8, !dbg !6718
  %126 = load i64, i64* %bit, align 8, !dbg !6719
  %add147 = add nsw i64 %125, %126, !dbg !6720
  %rem148 = srem i64 %add147, 3, !dbg !6721
  switch i64 %rem148, label %sw.default149 [
    i64 0, label %sw.bb150
    i64 1, label %sw.bb156
    i64 2, label %sw.bb162
  ], !dbg !6722

sw.default149:                                    ; preds = %for.body144
  br label %sw.bb150, !dbg !6723

sw.bb150:                                         ; preds = %for.body144, %sw.default149
  %127 = load i16, i16* %pixel84, align 2, !dbg !6724
  %conv151 = zext i16 %127 to i32, !dbg !6724
  %shr152 = ashr i32 %conv151, 4, !dbg !6724
  %conv153 = sext i32 %shr152 to i64, !dbg !6724
  %128 = load i64, i64* %range, align 8, !dbg !6724
  %call154 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv153, i64 %128), !dbg !6724
  %129 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6724
  %red155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %129, i32 0, i32 2, !dbg !6724
  store i16 %call154, i16* %red155, align 2, !dbg !6724
  br label %sw.epilog169, !dbg !6727

sw.bb156:                                         ; preds = %for.body144
  %130 = load i16, i16* %pixel84, align 2, !dbg !6728
  %conv157 = zext i16 %130 to i32, !dbg !6728
  %shr158 = ashr i32 %conv157, 4, !dbg !6728
  %conv159 = sext i32 %shr158 to i64, !dbg !6728
  %131 = load i64, i64* %range, align 8, !dbg !6728
  %call160 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv159, i64 %131), !dbg !6728
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6728
  %green161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 1, !dbg !6728
  store i16 %call160, i16* %green161, align 2, !dbg !6728
  br label %sw.epilog169, !dbg !6730

sw.bb162:                                         ; preds = %for.body144
  %133 = load i16, i16* %pixel84, align 2, !dbg !6731
  %conv163 = zext i16 %133 to i32, !dbg !6731
  %shr164 = ashr i32 %conv163, 4, !dbg !6731
  %conv165 = sext i32 %shr164 to i64, !dbg !6731
  %134 = load i64, i64* %range, align 8, !dbg !6731
  %call166 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv165, i64 %134), !dbg !6731
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6731
  %blue167 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 0, !dbg !6731
  store i16 %call166, i16* %blue167, align 2, !dbg !6731
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6733
  %incdec.ptr168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 1, !dbg !6733
  store %struct._PixelPacket* %incdec.ptr168, %struct._PixelPacket** %q.addr, align 8, !dbg !6733
  br label %sw.epilog169, !dbg !6734

sw.epilog169:                                     ; preds = %sw.bb162, %sw.bb156, %sw.bb150
  %137 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6735
  %pad170 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %137, i32 0, i32 6, !dbg !6736
  %138 = load i64, i64* %pad170, align 8, !dbg !6736
  %139 = load i8*, i8** %p.addr, align 8, !dbg !6737
  %add.ptr171 = getelementptr inbounds i8, i8* %139, i64 %138, !dbg !6737
  store i8* %add.ptr171, i8** %p.addr, align 8, !dbg !6737
  br label %for.inc172, !dbg !6738

for.inc172:                                       ; preds = %sw.epilog169
  %140 = load i64, i64* %bit, align 8, !dbg !6739
  %inc173 = add nsw i64 %140, 1, !dbg !6739
  store i64 %inc173, i64* %bit, align 8, !dbg !6739
  br label %for.cond139, !dbg !6740, !llvm.loop !6741

for.end174:                                       ; preds = %for.cond139
  %141 = load i64, i64* %bit, align 8, !dbg !6743
  %cmp175 = icmp ne i64 %141, 0, !dbg !6745
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !6746

if.then177:                                       ; preds = %for.end174
  %142 = load i8*, i8** %p.addr, align 8, !dbg !6747
  %incdec.ptr178 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !6747
  store i8* %incdec.ptr178, i8** %p.addr, align 8, !dbg !6747
  br label %if.end179, !dbg !6748

if.end179:                                        ; preds = %if.then177, %for.end174
  br label %sw.epilog383, !dbg !6749

if.end180:                                        ; preds = %sw.bb77
  %143 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6750
  %quantum181 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %143, i32 0, i32 1, !dbg !6752
  %144 = load i64, i64* %quantum181, align 8, !dbg !6752
  %cmp182 = icmp eq i64 %144, 32, !dbg !6753
  br i1 %cmp182, label %if.then184, label %if.end205, !dbg !6754

if.then184:                                       ; preds = %if.end180
  store i64 0, i64* %x, align 8, !dbg !6755
  br label %for.cond185, !dbg !6758

for.cond185:                                      ; preds = %for.inc202, %if.then184
  %145 = load i64, i64* %x, align 8, !dbg !6759
  %146 = load i64, i64* %number_pixels.addr, align 8, !dbg !6761
  %cmp186 = icmp slt i64 %145, %146, !dbg !6762
  br i1 %cmp186, label %for.body188, label %for.end204, !dbg !6763

for.body188:                                      ; preds = %for.cond185
  %147 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6764
  %148 = load i8*, i8** %p.addr, align 8, !dbg !6766
  %call189 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %147, i8* %148, i32* %pixel), !dbg !6767
  store i8* %call189, i8** %p.addr, align 8, !dbg !6768
  %149 = load i32, i32* %pixel, align 4, !dbg !6769
  %conv190 = zext i32 %149 to i64, !dbg !6769
  %150 = load i64, i64* %range, align 8, !dbg !6769
  %call191 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv190, i64 %150), !dbg !6769
  %151 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6769
  %red192 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %151, i32 0, i32 2, !dbg !6769
  store i16 %call191, i16* %red192, align 2, !dbg !6769
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6770
  %153 = load i8*, i8** %p.addr, align 8, !dbg !6771
  %call193 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %152, i8* %153, i32* %pixel), !dbg !6772
  store i8* %call193, i8** %p.addr, align 8, !dbg !6773
  %154 = load i32, i32* %pixel, align 4, !dbg !6774
  %conv194 = zext i32 %154 to i64, !dbg !6774
  %155 = load i64, i64* %range, align 8, !dbg !6774
  %call195 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv194, i64 %155), !dbg !6774
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6774
  %green196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 1, !dbg !6774
  store i16 %call195, i16* %green196, align 2, !dbg !6774
  %157 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6775
  %158 = load i8*, i8** %p.addr, align 8, !dbg !6776
  %call197 = call i8* @PushQuantumLongPixel(%struct._QuantumInfo* %157, i8* %158, i32* %pixel), !dbg !6777
  store i8* %call197, i8** %p.addr, align 8, !dbg !6778
  %159 = load i32, i32* %pixel, align 4, !dbg !6779
  %conv198 = zext i32 %159 to i64, !dbg !6779
  %160 = load i64, i64* %range, align 8, !dbg !6779
  %call199 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv198, i64 %160), !dbg !6779
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6779
  %blue200 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 0, !dbg !6779
  store i16 %call199, i16* %blue200, align 2, !dbg !6779
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6780
  %incdec.ptr201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 1, !dbg !6780
  store %struct._PixelPacket* %incdec.ptr201, %struct._PixelPacket** %q.addr, align 8, !dbg !6780
  br label %for.inc202, !dbg !6781

for.inc202:                                       ; preds = %for.body188
  %163 = load i64, i64* %x, align 8, !dbg !6782
  %inc203 = add nsw i64 %163, 1, !dbg !6782
  store i64 %inc203, i64* %x, align 8, !dbg !6782
  br label %for.cond185, !dbg !6783, !llvm.loop !6784

for.end204:                                       ; preds = %for.cond185
  br label %sw.epilog383, !dbg !6786

if.end205:                                        ; preds = %if.end180
  store i64 0, i64* %x, align 8, !dbg !6787
  br label %for.cond206, !dbg !6789

for.cond206:                                      ; preds = %for.inc223, %if.end205
  %164 = load i64, i64* %x, align 8, !dbg !6790
  %165 = load i64, i64* %number_pixels.addr, align 8, !dbg !6792
  %cmp207 = icmp slt i64 %164, %165, !dbg !6793
  br i1 %cmp207, label %for.body209, label %for.end225, !dbg !6794

for.body209:                                      ; preds = %for.cond206
  %166 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6795
  %167 = load i8*, i8** %p.addr, align 8, !dbg !6797
  %call210 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %166, i8* %167, i32* %pixel), !dbg !6798
  store i8* %call210, i8** %p.addr, align 8, !dbg !6799
  %168 = load i32, i32* %pixel, align 4, !dbg !6800
  %conv211 = zext i32 %168 to i64, !dbg !6800
  %169 = load i64, i64* %range, align 8, !dbg !6800
  %call212 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv211, i64 %169), !dbg !6800
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6800
  %red213 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %170, i32 0, i32 2, !dbg !6800
  store i16 %call212, i16* %red213, align 2, !dbg !6800
  %171 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6801
  %172 = load i8*, i8** %p.addr, align 8, !dbg !6802
  %call214 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %171, i8* %172, i32* %pixel), !dbg !6803
  store i8* %call214, i8** %p.addr, align 8, !dbg !6804
  %173 = load i32, i32* %pixel, align 4, !dbg !6805
  %conv215 = zext i32 %173 to i64, !dbg !6805
  %174 = load i64, i64* %range, align 8, !dbg !6805
  %call216 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv215, i64 %174), !dbg !6805
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6805
  %green217 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 0, i32 1, !dbg !6805
  store i16 %call216, i16* %green217, align 2, !dbg !6805
  %176 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6806
  %177 = load i8*, i8** %p.addr, align 8, !dbg !6807
  %call218 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %176, i8* %177, i32* %pixel), !dbg !6808
  store i8* %call218, i8** %p.addr, align 8, !dbg !6809
  %178 = load i32, i32* %pixel, align 4, !dbg !6810
  %conv219 = zext i32 %178 to i64, !dbg !6810
  %179 = load i64, i64* %range, align 8, !dbg !6810
  %call220 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv219, i64 %179), !dbg !6810
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6810
  %blue221 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 0, i32 0, !dbg !6810
  store i16 %call220, i16* %blue221, align 2, !dbg !6810
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6811
  %incdec.ptr222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 1, !dbg !6811
  store %struct._PixelPacket* %incdec.ptr222, %struct._PixelPacket** %q.addr, align 8, !dbg !6811
  br label %for.inc223, !dbg !6812

for.inc223:                                       ; preds = %for.body209
  %182 = load i64, i64* %x, align 8, !dbg !6813
  %inc224 = add nsw i64 %182, 1, !dbg !6813
  store i64 %inc224, i64* %x, align 8, !dbg !6813
  br label %for.cond206, !dbg !6814, !llvm.loop !6815

for.end225:                                       ; preds = %for.cond206
  br label %sw.epilog383, !dbg !6817

sw.bb226:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel227, metadata !6818, metadata !DIExpression()), !dbg !6820
  %183 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6821
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %183, i32 0, i32 2, !dbg !6823
  %184 = load i32, i32* %format, align 8, !dbg !6823
  %cmp228 = icmp eq i32 %184, 1, !dbg !6824
  br i1 %cmp228, label %if.then230, label %if.end259, !dbg !6825

if.then230:                                       ; preds = %sw.bb226
  store i64 0, i64* %x, align 8, !dbg !6826
  br label %for.cond231, !dbg !6829

for.cond231:                                      ; preds = %for.inc256, %if.then230
  %185 = load i64, i64* %x, align 8, !dbg !6830
  %186 = load i64, i64* %number_pixels.addr, align 8, !dbg !6832
  %cmp232 = icmp slt i64 %185, %186, !dbg !6833
  br i1 %cmp232, label %for.body234, label %for.end258, !dbg !6834

for.body234:                                      ; preds = %for.cond231
  %187 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6835
  %endian235 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %187, i32 0, i32 13, !dbg !6837
  %188 = load i32, i32* %endian235, align 8, !dbg !6837
  %189 = load i8*, i8** %p.addr, align 8, !dbg !6838
  %call236 = call i8* @PushShortPixel(i32 %188, i8* %189, i16* %pixel227), !dbg !6839
  store i8* %call236, i8** %p.addr, align 8, !dbg !6840
  %190 = load i16, i16* %pixel227, align 2, !dbg !6841
  %call237 = call float @HalfToSinglePrecision(i16 zeroext %190), !dbg !6841
  %mul238 = fmul float 6.553500e+04, %call237, !dbg !6841
  %call239 = call zeroext i16 @ClampToQuantum(float %mul238), !dbg !6841
  %191 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6841
  %red240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %191, i32 0, i32 2, !dbg !6841
  store i16 %call239, i16* %red240, align 2, !dbg !6841
  %192 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6842
  %endian241 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %192, i32 0, i32 13, !dbg !6843
  %193 = load i32, i32* %endian241, align 8, !dbg !6843
  %194 = load i8*, i8** %p.addr, align 8, !dbg !6844
  %call242 = call i8* @PushShortPixel(i32 %193, i8* %194, i16* %pixel227), !dbg !6845
  store i8* %call242, i8** %p.addr, align 8, !dbg !6846
  %195 = load i16, i16* %pixel227, align 2, !dbg !6847
  %call243 = call float @HalfToSinglePrecision(i16 zeroext %195), !dbg !6847
  %mul244 = fmul float 6.553500e+04, %call243, !dbg !6847
  %call245 = call zeroext i16 @ClampToQuantum(float %mul244), !dbg !6847
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6847
  %green246 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 1, !dbg !6847
  store i16 %call245, i16* %green246, align 2, !dbg !6847
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6848
  %endian247 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %197, i32 0, i32 13, !dbg !6849
  %198 = load i32, i32* %endian247, align 8, !dbg !6849
  %199 = load i8*, i8** %p.addr, align 8, !dbg !6850
  %call248 = call i8* @PushShortPixel(i32 %198, i8* %199, i16* %pixel227), !dbg !6851
  store i8* %call248, i8** %p.addr, align 8, !dbg !6852
  %200 = load i16, i16* %pixel227, align 2, !dbg !6853
  %call249 = call float @HalfToSinglePrecision(i16 zeroext %200), !dbg !6853
  %mul250 = fmul float 6.553500e+04, %call249, !dbg !6853
  %call251 = call zeroext i16 @ClampToQuantum(float %mul250), !dbg !6853
  %201 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6853
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %201, i32 0, i32 0, !dbg !6853
  store i16 %call251, i16* %blue252, align 2, !dbg !6853
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6854
  %pad253 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %202, i32 0, i32 6, !dbg !6855
  %203 = load i64, i64* %pad253, align 8, !dbg !6855
  %204 = load i8*, i8** %p.addr, align 8, !dbg !6856
  %add.ptr254 = getelementptr inbounds i8, i8* %204, i64 %203, !dbg !6856
  store i8* %add.ptr254, i8** %p.addr, align 8, !dbg !6856
  %205 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6857
  %incdec.ptr255 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %205, i32 1, !dbg !6857
  store %struct._PixelPacket* %incdec.ptr255, %struct._PixelPacket** %q.addr, align 8, !dbg !6857
  br label %for.inc256, !dbg !6858

for.inc256:                                       ; preds = %for.body234
  %206 = load i64, i64* %x, align 8, !dbg !6859
  %inc257 = add nsw i64 %206, 1, !dbg !6859
  store i64 %inc257, i64* %x, align 8, !dbg !6859
  br label %for.cond231, !dbg !6860, !llvm.loop !6861

for.end258:                                       ; preds = %for.cond231
  br label %sw.epilog383, !dbg !6863

if.end259:                                        ; preds = %sw.bb226
  store i64 0, i64* %x, align 8, !dbg !6864
  br label %for.cond260, !dbg !6866

for.cond260:                                      ; preds = %for.inc279, %if.end259
  %207 = load i64, i64* %x, align 8, !dbg !6867
  %208 = load i64, i64* %number_pixels.addr, align 8, !dbg !6869
  %cmp261 = icmp slt i64 %207, %208, !dbg !6870
  br i1 %cmp261, label %for.body263, label %for.end281, !dbg !6871

for.body263:                                      ; preds = %for.cond260
  %209 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6872
  %endian264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %209, i32 0, i32 13, !dbg !6874
  %210 = load i32, i32* %endian264, align 8, !dbg !6874
  %211 = load i8*, i8** %p.addr, align 8, !dbg !6875
  %call265 = call i8* @PushShortPixel(i32 %210, i8* %211, i16* %pixel227), !dbg !6876
  store i8* %call265, i8** %p.addr, align 8, !dbg !6877
  %212 = load i16, i16* %pixel227, align 2, !dbg !6878
  %call266 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %212), !dbg !6878
  %213 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6878
  %red267 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %213, i32 0, i32 2, !dbg !6878
  store i16 %call266, i16* %red267, align 2, !dbg !6878
  %214 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6879
  %endian268 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %214, i32 0, i32 13, !dbg !6880
  %215 = load i32, i32* %endian268, align 8, !dbg !6880
  %216 = load i8*, i8** %p.addr, align 8, !dbg !6881
  %call269 = call i8* @PushShortPixel(i32 %215, i8* %216, i16* %pixel227), !dbg !6882
  store i8* %call269, i8** %p.addr, align 8, !dbg !6883
  %217 = load i16, i16* %pixel227, align 2, !dbg !6884
  %call270 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %217), !dbg !6884
  %218 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6884
  %green271 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %218, i32 0, i32 1, !dbg !6884
  store i16 %call270, i16* %green271, align 2, !dbg !6884
  %219 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6885
  %endian272 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %219, i32 0, i32 13, !dbg !6886
  %220 = load i32, i32* %endian272, align 8, !dbg !6886
  %221 = load i8*, i8** %p.addr, align 8, !dbg !6887
  %call273 = call i8* @PushShortPixel(i32 %220, i8* %221, i16* %pixel227), !dbg !6888
  store i8* %call273, i8** %p.addr, align 8, !dbg !6889
  %222 = load i16, i16* %pixel227, align 2, !dbg !6890
  %call274 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %222), !dbg !6890
  %223 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6890
  %blue275 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %223, i32 0, i32 0, !dbg !6890
  store i16 %call274, i16* %blue275, align 2, !dbg !6890
  %224 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6891
  %pad276 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %224, i32 0, i32 6, !dbg !6892
  %225 = load i64, i64* %pad276, align 8, !dbg !6892
  %226 = load i8*, i8** %p.addr, align 8, !dbg !6893
  %add.ptr277 = getelementptr inbounds i8, i8* %226, i64 %225, !dbg !6893
  store i8* %add.ptr277, i8** %p.addr, align 8, !dbg !6893
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6894
  %incdec.ptr278 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 1, !dbg !6894
  store %struct._PixelPacket* %incdec.ptr278, %struct._PixelPacket** %q.addr, align 8, !dbg !6894
  br label %for.inc279, !dbg !6895

for.inc279:                                       ; preds = %for.body263
  %228 = load i64, i64* %x, align 8, !dbg !6896
  %inc280 = add nsw i64 %228, 1, !dbg !6896
  store i64 %inc280, i64* %x, align 8, !dbg !6896
  br label %for.cond260, !dbg !6897, !llvm.loop !6898

for.end281:                                       ; preds = %for.cond260
  br label %sw.epilog383, !dbg !6900

sw.bb282:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel283, metadata !6901, metadata !DIExpression()), !dbg !6903
  %229 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6904
  %format284 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %229, i32 0, i32 2, !dbg !6906
  %230 = load i32, i32* %format284, align 8, !dbg !6906
  %cmp285 = icmp eq i32 %230, 1, !dbg !6907
  br i1 %cmp285, label %if.then287, label %if.end308, !dbg !6908

if.then287:                                       ; preds = %sw.bb282
  call void @llvm.dbg.declare(metadata float* %pixel288, metadata !6909, metadata !DIExpression()), !dbg !6911
  store i64 0, i64* %x, align 8, !dbg !6912
  br label %for.cond289, !dbg !6914

for.cond289:                                      ; preds = %for.inc305, %if.then287
  %231 = load i64, i64* %x, align 8, !dbg !6915
  %232 = load i64, i64* %number_pixels.addr, align 8, !dbg !6917
  %cmp290 = icmp slt i64 %231, %232, !dbg !6918
  br i1 %cmp290, label %for.body292, label %for.end307, !dbg !6919

for.body292:                                      ; preds = %for.cond289
  %233 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6920
  %234 = load i8*, i8** %p.addr, align 8, !dbg !6922
  %call293 = call i8* @PushFloatPixel(%struct._QuantumInfo* %233, i8* %234, float* %pixel288), !dbg !6923
  store i8* %call293, i8** %p.addr, align 8, !dbg !6924
  %235 = load float, float* %pixel288, align 4, !dbg !6925
  %call294 = call zeroext i16 @ClampToQuantum(float %235), !dbg !6925
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6925
  %red295 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 2, !dbg !6925
  store i16 %call294, i16* %red295, align 2, !dbg !6925
  %237 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6926
  %238 = load i8*, i8** %p.addr, align 8, !dbg !6927
  %call296 = call i8* @PushFloatPixel(%struct._QuantumInfo* %237, i8* %238, float* %pixel288), !dbg !6928
  store i8* %call296, i8** %p.addr, align 8, !dbg !6929
  %239 = load float, float* %pixel288, align 4, !dbg !6930
  %call297 = call zeroext i16 @ClampToQuantum(float %239), !dbg !6930
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6930
  %green298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 1, !dbg !6930
  store i16 %call297, i16* %green298, align 2, !dbg !6930
  %241 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6931
  %242 = load i8*, i8** %p.addr, align 8, !dbg !6932
  %call299 = call i8* @PushFloatPixel(%struct._QuantumInfo* %241, i8* %242, float* %pixel288), !dbg !6933
  store i8* %call299, i8** %p.addr, align 8, !dbg !6934
  %243 = load float, float* %pixel288, align 4, !dbg !6935
  %call300 = call zeroext i16 @ClampToQuantum(float %243), !dbg !6935
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6935
  %blue301 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 0, i32 0, !dbg !6935
  store i16 %call300, i16* %blue301, align 2, !dbg !6935
  %245 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6936
  %pad302 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %245, i32 0, i32 6, !dbg !6937
  %246 = load i64, i64* %pad302, align 8, !dbg !6937
  %247 = load i8*, i8** %p.addr, align 8, !dbg !6938
  %add.ptr303 = getelementptr inbounds i8, i8* %247, i64 %246, !dbg !6938
  store i8* %add.ptr303, i8** %p.addr, align 8, !dbg !6938
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6939
  %incdec.ptr304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i32 1, !dbg !6939
  store %struct._PixelPacket* %incdec.ptr304, %struct._PixelPacket** %q.addr, align 8, !dbg !6939
  br label %for.inc305, !dbg !6940

for.inc305:                                       ; preds = %for.body292
  %249 = load i64, i64* %x, align 8, !dbg !6941
  %inc306 = add nsw i64 %249, 1, !dbg !6941
  store i64 %inc306, i64* %x, align 8, !dbg !6941
  br label %for.cond289, !dbg !6942, !llvm.loop !6943

for.end307:                                       ; preds = %for.cond289
  br label %sw.epilog383, !dbg !6945

if.end308:                                        ; preds = %sw.bb282
  store i64 0, i64* %x, align 8, !dbg !6946
  br label %for.cond309, !dbg !6948

for.cond309:                                      ; preds = %for.inc328, %if.end308
  %250 = load i64, i64* %x, align 8, !dbg !6949
  %251 = load i64, i64* %number_pixels.addr, align 8, !dbg !6951
  %cmp310 = icmp slt i64 %250, %251, !dbg !6952
  br i1 %cmp310, label %for.body312, label %for.end330, !dbg !6953

for.body312:                                      ; preds = %for.cond309
  %252 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6954
  %endian313 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %252, i32 0, i32 13, !dbg !6956
  %253 = load i32, i32* %endian313, align 8, !dbg !6956
  %254 = load i8*, i8** %p.addr, align 8, !dbg !6957
  %call314 = call i8* @PushLongPixel(i32 %253, i8* %254, i32* %pixel283), !dbg !6958
  store i8* %call314, i8** %p.addr, align 8, !dbg !6959
  %255 = load i32, i32* %pixel283, align 4, !dbg !6960
  %call315 = call zeroext i16 @ScaleLongToQuantum(i32 %255), !dbg !6960
  %256 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6960
  %red316 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %256, i32 0, i32 2, !dbg !6960
  store i16 %call315, i16* %red316, align 2, !dbg !6960
  %257 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6961
  %endian317 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %257, i32 0, i32 13, !dbg !6962
  %258 = load i32, i32* %endian317, align 8, !dbg !6962
  %259 = load i8*, i8** %p.addr, align 8, !dbg !6963
  %call318 = call i8* @PushLongPixel(i32 %258, i8* %259, i32* %pixel283), !dbg !6964
  store i8* %call318, i8** %p.addr, align 8, !dbg !6965
  %260 = load i32, i32* %pixel283, align 4, !dbg !6966
  %call319 = call zeroext i16 @ScaleLongToQuantum(i32 %260), !dbg !6966
  %261 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6966
  %green320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %261, i32 0, i32 1, !dbg !6966
  store i16 %call319, i16* %green320, align 2, !dbg !6966
  %262 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6967
  %endian321 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %262, i32 0, i32 13, !dbg !6968
  %263 = load i32, i32* %endian321, align 8, !dbg !6968
  %264 = load i8*, i8** %p.addr, align 8, !dbg !6969
  %call322 = call i8* @PushLongPixel(i32 %263, i8* %264, i32* %pixel283), !dbg !6970
  store i8* %call322, i8** %p.addr, align 8, !dbg !6971
  %265 = load i32, i32* %pixel283, align 4, !dbg !6972
  %call323 = call zeroext i16 @ScaleLongToQuantum(i32 %265), !dbg !6972
  %266 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6972
  %blue324 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %266, i32 0, i32 0, !dbg !6972
  store i16 %call323, i16* %blue324, align 2, !dbg !6972
  %267 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6973
  %pad325 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %267, i32 0, i32 6, !dbg !6974
  %268 = load i64, i64* %pad325, align 8, !dbg !6974
  %269 = load i8*, i8** %p.addr, align 8, !dbg !6975
  %add.ptr326 = getelementptr inbounds i8, i8* %269, i64 %268, !dbg !6975
  store i8* %add.ptr326, i8** %p.addr, align 8, !dbg !6975
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !6976
  %incdec.ptr327 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %270, i32 1, !dbg !6976
  store %struct._PixelPacket* %incdec.ptr327, %struct._PixelPacket** %q.addr, align 8, !dbg !6976
  br label %for.inc328, !dbg !6977

for.inc328:                                       ; preds = %for.body312
  %271 = load i64, i64* %x, align 8, !dbg !6978
  %inc329 = add nsw i64 %271, 1, !dbg !6978
  store i64 %inc329, i64* %x, align 8, !dbg !6978
  br label %for.cond309, !dbg !6979, !llvm.loop !6980

for.end330:                                       ; preds = %for.cond309
  br label %sw.epilog383, !dbg !6982

sw.bb331:                                         ; preds = %entry
  %272 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !6983
  %format332 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %272, i32 0, i32 2, !dbg !6986
  %273 = load i32, i32* %format332, align 8, !dbg !6986
  %cmp333 = icmp eq i32 %273, 1, !dbg !6987
  br i1 %cmp333, label %if.then335, label %if.end359, !dbg !6988

if.then335:                                       ; preds = %sw.bb331
  call void @llvm.dbg.declare(metadata double* %pixel336, metadata !6989, metadata !DIExpression()), !dbg !6991
  store i64 0, i64* %x, align 8, !dbg !6992
  br label %for.cond337, !dbg !6994

for.cond337:                                      ; preds = %for.inc356, %if.then335
  %274 = load i64, i64* %x, align 8, !dbg !6995
  %275 = load i64, i64* %number_pixels.addr, align 8, !dbg !6997
  %cmp338 = icmp slt i64 %274, %275, !dbg !6998
  br i1 %cmp338, label %for.body340, label %for.end358, !dbg !6999

for.body340:                                      ; preds = %for.cond337
  %276 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7000
  %277 = load i8*, i8** %p.addr, align 8, !dbg !7002
  %call341 = call i8* @PushDoublePixel(%struct._QuantumInfo* %276, i8* %277, double* %pixel336), !dbg !7003
  store i8* %call341, i8** %p.addr, align 8, !dbg !7004
  %278 = load double, double* %pixel336, align 8, !dbg !7005
  %conv342 = fptrunc double %278 to float, !dbg !7005
  %call343 = call zeroext i16 @ClampToQuantum(float %conv342), !dbg !7005
  %279 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7005
  %red344 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %279, i32 0, i32 2, !dbg !7005
  store i16 %call343, i16* %red344, align 2, !dbg !7005
  %280 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7006
  %281 = load i8*, i8** %p.addr, align 8, !dbg !7007
  %call345 = call i8* @PushDoublePixel(%struct._QuantumInfo* %280, i8* %281, double* %pixel336), !dbg !7008
  store i8* %call345, i8** %p.addr, align 8, !dbg !7009
  %282 = load double, double* %pixel336, align 8, !dbg !7010
  %conv346 = fptrunc double %282 to float, !dbg !7010
  %call347 = call zeroext i16 @ClampToQuantum(float %conv346), !dbg !7010
  %283 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7010
  %green348 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %283, i32 0, i32 1, !dbg !7010
  store i16 %call347, i16* %green348, align 2, !dbg !7010
  %284 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7011
  %285 = load i8*, i8** %p.addr, align 8, !dbg !7012
  %call349 = call i8* @PushDoublePixel(%struct._QuantumInfo* %284, i8* %285, double* %pixel336), !dbg !7013
  store i8* %call349, i8** %p.addr, align 8, !dbg !7014
  %286 = load double, double* %pixel336, align 8, !dbg !7015
  %conv350 = fptrunc double %286 to float, !dbg !7015
  %call351 = call zeroext i16 @ClampToQuantum(float %conv350), !dbg !7015
  %287 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7015
  %blue352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %287, i32 0, i32 0, !dbg !7015
  store i16 %call351, i16* %blue352, align 2, !dbg !7015
  %288 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7016
  %pad353 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %288, i32 0, i32 6, !dbg !7017
  %289 = load i64, i64* %pad353, align 8, !dbg !7017
  %290 = load i8*, i8** %p.addr, align 8, !dbg !7018
  %add.ptr354 = getelementptr inbounds i8, i8* %290, i64 %289, !dbg !7018
  store i8* %add.ptr354, i8** %p.addr, align 8, !dbg !7018
  %291 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7019
  %incdec.ptr355 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %291, i32 1, !dbg !7019
  store %struct._PixelPacket* %incdec.ptr355, %struct._PixelPacket** %q.addr, align 8, !dbg !7019
  br label %for.inc356, !dbg !7020

for.inc356:                                       ; preds = %for.body340
  %292 = load i64, i64* %x, align 8, !dbg !7021
  %inc357 = add nsw i64 %292, 1, !dbg !7021
  store i64 %inc357, i64* %x, align 8, !dbg !7021
  br label %for.cond337, !dbg !7022, !llvm.loop !7023

for.end358:                                       ; preds = %for.cond337
  br label %sw.epilog383, !dbg !7025

if.end359:                                        ; preds = %sw.bb331
  br label %sw.default360, !dbg !7026

sw.default360:                                    ; preds = %entry, %if.end359
  %293 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7027
  %depth361 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %293, i32 0, i32 0, !dbg !7029
  %294 = load i64, i64* %depth361, align 8, !dbg !7029
  %call362 = call i64 @GetQuantumRange(i64 %294), !dbg !7030
  store i64 %call362, i64* %range, align 8, !dbg !7031
  store i64 0, i64* %x, align 8, !dbg !7032
  br label %for.cond363, !dbg !7034

for.cond363:                                      ; preds = %for.inc380, %sw.default360
  %295 = load i64, i64* %x, align 8, !dbg !7035
  %296 = load i64, i64* %number_pixels.addr, align 8, !dbg !7037
  %cmp364 = icmp slt i64 %295, %296, !dbg !7038
  br i1 %cmp364, label %for.body366, label %for.end382, !dbg !7039

for.body366:                                      ; preds = %for.cond363
  %297 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7040
  %298 = load i8*, i8** %p.addr, align 8, !dbg !7042
  %call367 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %297, i8* %298, i32* %pixel), !dbg !7043
  store i8* %call367, i8** %p.addr, align 8, !dbg !7044
  %299 = load i32, i32* %pixel, align 4, !dbg !7045
  %conv368 = zext i32 %299 to i64, !dbg !7045
  %300 = load i64, i64* %range, align 8, !dbg !7045
  %call369 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv368, i64 %300), !dbg !7045
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7045
  %red370 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 2, !dbg !7045
  store i16 %call369, i16* %red370, align 2, !dbg !7045
  %302 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7046
  %303 = load i8*, i8** %p.addr, align 8, !dbg !7047
  %call371 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %302, i8* %303, i32* %pixel), !dbg !7048
  store i8* %call371, i8** %p.addr, align 8, !dbg !7049
  %304 = load i32, i32* %pixel, align 4, !dbg !7050
  %conv372 = zext i32 %304 to i64, !dbg !7050
  %305 = load i64, i64* %range, align 8, !dbg !7050
  %call373 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv372, i64 %305), !dbg !7050
  %306 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7050
  %green374 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %306, i32 0, i32 1, !dbg !7050
  store i16 %call373, i16* %green374, align 2, !dbg !7050
  %307 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7051
  %308 = load i8*, i8** %p.addr, align 8, !dbg !7052
  %call375 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %307, i8* %308, i32* %pixel), !dbg !7053
  store i8* %call375, i8** %p.addr, align 8, !dbg !7054
  %309 = load i32, i32* %pixel, align 4, !dbg !7055
  %conv376 = zext i32 %309 to i64, !dbg !7055
  %310 = load i64, i64* %range, align 8, !dbg !7055
  %call377 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv376, i64 %310), !dbg !7055
  %311 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7055
  %blue378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %311, i32 0, i32 0, !dbg !7055
  store i16 %call377, i16* %blue378, align 2, !dbg !7055
  %312 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7056
  %incdec.ptr379 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %312, i32 1, !dbg !7056
  store %struct._PixelPacket* %incdec.ptr379, %struct._PixelPacket** %q.addr, align 8, !dbg !7056
  br label %for.inc380, !dbg !7057

for.inc380:                                       ; preds = %for.body366
  %313 = load i64, i64* %x, align 8, !dbg !7058
  %inc381 = add nsw i64 %313, 1, !dbg !7058
  store i64 %inc381, i64* %x, align 8, !dbg !7058
  br label %for.cond363, !dbg !7059, !llvm.loop !7060

for.end382:                                       ; preds = %for.cond363
  br label %sw.epilog383, !dbg !7062

sw.epilog383:                                     ; preds = %for.end382, %for.end358, %for.end330, %for.end307, %for.end281, %for.end258, %for.end225, %for.end204, %if.end179, %for.end76, %for.end55, %for.end32, %for.end
  ret void, !dbg !7063
}

; Function Attrs: noinline nounwind uwtable
define internal void @ImportRGBAQuantum(%struct._QuantumInfo* %quantum_info, i64 %number_pixels, i8* noalias %p, %struct._PixelPacket* noalias %q) #0 !dbg !7064 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %number_pixels.addr = alloca i64, align 8
  %p.addr = alloca i8*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %range = alloca i64, align 8
  %x = alloca i64, align 8
  %pixel = alloca i32, align 4
  %pixel1 = alloca i8, align 1
  %i = alloca i64, align 8
  %quantum = alloca i64, align 8
  %n = alloca i64, align 8
  %pixel96 = alloca i16, align 2
  %pixel167 = alloca i32, align 4
  %pixel172 = alloca float, align 4
  %pixel233 = alloca double, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  store i64 %number_pixels, i64* %number_pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_pixels.addr, metadata !7067, metadata !DIExpression()), !dbg !7068
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata i64* %range, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i32* %pixel, metadata !7077, metadata !DIExpression()), !dbg !7078
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7079
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 0, !dbg !7080
  %1 = load i64, i64* %depth, align 8, !dbg !7080
  switch i64 %1, label %sw.default [
    i64 8, label %sw.bb
    i64 10, label %sw.bb10
    i64 16, label %sw.bb95
    i64 32, label %sw.bb166
    i64 64, label %sw.bb228
  ], !dbg !7081

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %pixel1, metadata !7082, metadata !DIExpression()), !dbg !7085
  store i64 0, i64* %x, align 8, !dbg !7086
  br label %for.cond, !dbg !7088

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %x, align 8, !dbg !7089
  %3 = load i64, i64* %number_pixels.addr, align 8, !dbg !7091
  %cmp = icmp slt i64 %2, %3, !dbg !7092
  br i1 %cmp, label %for.body, label %for.end, !dbg !7093

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !7094
  %call = call i8* @PushCharPixel(i8* %4, i8* %pixel1), !dbg !7096
  store i8* %call, i8** %p.addr, align 8, !dbg !7097
  %5 = load i8, i8* %pixel1, align 1, !dbg !7098
  %call2 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %5), !dbg !7098
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7098
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 2, !dbg !7098
  store i16 %call2, i16* %red, align 2, !dbg !7098
  %7 = load i8*, i8** %p.addr, align 8, !dbg !7099
  %call3 = call i8* @PushCharPixel(i8* %7, i8* %pixel1), !dbg !7100
  store i8* %call3, i8** %p.addr, align 8, !dbg !7101
  %8 = load i8, i8* %pixel1, align 1, !dbg !7102
  %call4 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %8), !dbg !7102
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7102
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 1, !dbg !7102
  store i16 %call4, i16* %green, align 2, !dbg !7102
  %10 = load i8*, i8** %p.addr, align 8, !dbg !7103
  %call5 = call i8* @PushCharPixel(i8* %10, i8* %pixel1), !dbg !7104
  store i8* %call5, i8** %p.addr, align 8, !dbg !7105
  %11 = load i8, i8* %pixel1, align 1, !dbg !7106
  %call6 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %11), !dbg !7106
  %12 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7106
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %12, i32 0, i32 0, !dbg !7106
  store i16 %call6, i16* %blue, align 2, !dbg !7106
  %13 = load i8*, i8** %p.addr, align 8, !dbg !7107
  %call7 = call i8* @PushCharPixel(i8* %13, i8* %pixel1), !dbg !7108
  store i8* %call7, i8** %p.addr, align 8, !dbg !7109
  %14 = load i8, i8* %pixel1, align 1, !dbg !7110
  %call8 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext %14), !dbg !7110
  %conv = zext i16 %call8 to i32, !dbg !7110
  %sub = sub nsw i32 65535, %conv, !dbg !7110
  %conv9 = trunc i32 %sub to i16, !dbg !7110
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7110
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 3, !dbg !7110
  store i16 %conv9, i16* %opacity, align 2, !dbg !7110
  %16 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7111
  %pad = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %16, i32 0, i32 6, !dbg !7112
  %17 = load i64, i64* %pad, align 8, !dbg !7112
  %18 = load i8*, i8** %p.addr, align 8, !dbg !7113
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 %17, !dbg !7113
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !7113
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7114
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 1, !dbg !7114
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q.addr, align 8, !dbg !7114
  br label %for.inc, !dbg !7115

for.inc:                                          ; preds = %for.body
  %20 = load i64, i64* %x, align 8, !dbg !7116
  %inc = add nsw i64 %20, 1, !dbg !7116
  store i64 %inc, i64* %x, align 8, !dbg !7116
  br label %for.cond, !dbg !7117, !llvm.loop !7118

for.end:                                          ; preds = %for.cond
  br label %sw.epilog293, !dbg !7120

sw.bb10:                                          ; preds = %entry
  store i32 0, i32* %pixel, align 4, !dbg !7121
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7123
  %pack = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 8, !dbg !7125
  %22 = load i32, i32* %pack, align 4, !dbg !7125
  %cmp11 = icmp eq i32 %22, 0, !dbg !7126
  br i1 %cmp11, label %if.then, label %if.end, !dbg !7127

if.then:                                          ; preds = %sw.bb10
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7128, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !7131, metadata !DIExpression()), !dbg !7132
  call void @llvm.dbg.declare(metadata i64* %n, metadata !7133, metadata !DIExpression()), !dbg !7134
  store i64 0, i64* %n, align 8, !dbg !7135
  store i64 0, i64* %quantum, align 8, !dbg !7136
  store i64 0, i64* %x, align 8, !dbg !7137
  br label %for.cond13, !dbg !7139

for.cond13:                                       ; preds = %for.inc61, %if.then
  %23 = load i64, i64* %x, align 8, !dbg !7140
  %24 = load i64, i64* %number_pixels.addr, align 8, !dbg !7142
  %cmp14 = icmp slt i64 %23, %24, !dbg !7143
  br i1 %cmp14, label %for.body16, label %for.end63, !dbg !7144

for.body16:                                       ; preds = %for.cond13
  store i64 0, i64* %i, align 8, !dbg !7145
  br label %for.cond17, !dbg !7148

for.cond17:                                       ; preds = %for.inc55, %for.body16
  %25 = load i64, i64* %i, align 8, !dbg !7149
  %cmp18 = icmp slt i64 %25, 4, !dbg !7151
  br i1 %cmp18, label %for.body20, label %for.end57, !dbg !7152

for.body20:                                       ; preds = %for.cond17
  %26 = load i64, i64* %n, align 8, !dbg !7153
  %rem = srem i64 %26, 3, !dbg !7155
  switch i64 %rem, label %sw.epilog [
    i64 0, label %sw.bb21
    i64 1, label %sw.bb26
    i64 2, label %sw.bb33
  ], !dbg !7156

sw.bb21:                                          ; preds = %for.body20
  %27 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7157
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %27, i32 0, i32 13, !dbg !7160
  %28 = load i32, i32* %endian, align 8, !dbg !7160
  %29 = load i8*, i8** %p.addr, align 8, !dbg !7161
  %call22 = call i8* @PushLongPixel(i32 %28, i8* %29, i32* %pixel), !dbg !7162
  store i8* %call22, i8** %p.addr, align 8, !dbg !7163
  %30 = load i32, i32* %pixel, align 4, !dbg !7164
  %shr = lshr i32 %30, 22, !dbg !7165
  %and = and i32 %shr, 1023, !dbg !7166
  %shl = shl i32 %and, 6, !dbg !7167
  %conv23 = trunc i32 %shl to i16, !dbg !7168
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv23), !dbg !7169
  %conv25 = zext i16 %call24 to i64, !dbg !7170
  store i64 %conv25, i64* %quantum, align 8, !dbg !7171
  br label %sw.epilog, !dbg !7172

sw.bb26:                                          ; preds = %for.body20
  %31 = load i32, i32* %pixel, align 4, !dbg !7173
  %shr27 = lshr i32 %31, 12, !dbg !7175
  %and28 = and i32 %shr27, 1023, !dbg !7176
  %shl29 = shl i32 %and28, 6, !dbg !7177
  %conv30 = trunc i32 %shl29 to i16, !dbg !7178
  %call31 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv30), !dbg !7179
  %conv32 = zext i16 %call31 to i64, !dbg !7180
  store i64 %conv32, i64* %quantum, align 8, !dbg !7181
  br label %sw.epilog, !dbg !7182

sw.bb33:                                          ; preds = %for.body20
  %32 = load i32, i32* %pixel, align 4, !dbg !7183
  %shr34 = lshr i32 %32, 2, !dbg !7185
  %and35 = and i32 %shr34, 1023, !dbg !7186
  %shl36 = shl i32 %and35, 6, !dbg !7187
  %conv37 = trunc i32 %shl36 to i16, !dbg !7188
  %call38 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv37), !dbg !7189
  %conv39 = zext i16 %call38 to i64, !dbg !7190
  store i64 %conv39, i64* %quantum, align 8, !dbg !7191
  br label %sw.epilog, !dbg !7192

sw.epilog:                                        ; preds = %for.body20, %sw.bb33, %sw.bb26, %sw.bb21
  %33 = load i64, i64* %i, align 8, !dbg !7193
  switch i64 %33, label %sw.epilog53 [
    i64 0, label %sw.bb40
    i64 1, label %sw.bb43
    i64 2, label %sw.bb46
    i64 3, label %sw.bb49
  ], !dbg !7194

sw.bb40:                                          ; preds = %sw.epilog
  %34 = load i64, i64* %quantum, align 8, !dbg !7195
  %conv41 = trunc i64 %34 to i16, !dbg !7195
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7195
  %red42 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 2, !dbg !7195
  store i16 %conv41, i16* %red42, align 2, !dbg !7195
  br label %sw.epilog53, !dbg !7197

sw.bb43:                                          ; preds = %sw.epilog
  %36 = load i64, i64* %quantum, align 8, !dbg !7198
  %conv44 = trunc i64 %36 to i16, !dbg !7198
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7198
  %green45 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 1, !dbg !7198
  store i16 %conv44, i16* %green45, align 2, !dbg !7198
  br label %sw.epilog53, !dbg !7199

sw.bb46:                                          ; preds = %sw.epilog
  %38 = load i64, i64* %quantum, align 8, !dbg !7200
  %conv47 = trunc i64 %38 to i16, !dbg !7200
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7200
  %blue48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 0, !dbg !7200
  store i16 %conv47, i16* %blue48, align 2, !dbg !7200
  br label %sw.epilog53, !dbg !7201

sw.bb49:                                          ; preds = %sw.epilog
  %40 = load i64, i64* %quantum, align 8, !dbg !7202
  %sub50 = sub i64 65535, %40, !dbg !7202
  %conv51 = trunc i64 %sub50 to i16, !dbg !7202
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7202
  %opacity52 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 0, i32 3, !dbg !7202
  store i16 %conv51, i16* %opacity52, align 2, !dbg !7202
  br label %sw.epilog53, !dbg !7203

sw.epilog53:                                      ; preds = %sw.epilog, %sw.bb49, %sw.bb46, %sw.bb43, %sw.bb40
  %42 = load i64, i64* %n, align 8, !dbg !7204
  %inc54 = add nsw i64 %42, 1, !dbg !7204
  store i64 %inc54, i64* %n, align 8, !dbg !7204
  br label %for.inc55, !dbg !7205

for.inc55:                                        ; preds = %sw.epilog53
  %43 = load i64, i64* %i, align 8, !dbg !7206
  %inc56 = add nsw i64 %43, 1, !dbg !7206
  store i64 %inc56, i64* %i, align 8, !dbg !7206
  br label %for.cond17, !dbg !7207, !llvm.loop !7208

for.end57:                                        ; preds = %for.cond17
  %44 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7210
  %pad58 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %44, i32 0, i32 6, !dbg !7211
  %45 = load i64, i64* %pad58, align 8, !dbg !7211
  %46 = load i8*, i8** %p.addr, align 8, !dbg !7212
  %add.ptr59 = getelementptr inbounds i8, i8* %46, i64 %45, !dbg !7212
  store i8* %add.ptr59, i8** %p.addr, align 8, !dbg !7212
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7213
  %incdec.ptr60 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 1, !dbg !7213
  store %struct._PixelPacket* %incdec.ptr60, %struct._PixelPacket** %q.addr, align 8, !dbg !7213
  br label %for.inc61, !dbg !7214

for.inc61:                                        ; preds = %for.end57
  %48 = load i64, i64* %x, align 8, !dbg !7215
  %inc62 = add nsw i64 %48, 1, !dbg !7215
  store i64 %inc62, i64* %x, align 8, !dbg !7215
  br label %for.cond13, !dbg !7216, !llvm.loop !7217

for.end63:                                        ; preds = %for.cond13
  br label %sw.epilog293, !dbg !7219

if.end:                                           ; preds = %sw.bb10
  store i64 0, i64* %x, align 8, !dbg !7220
  br label %for.cond64, !dbg !7222

for.cond64:                                       ; preds = %for.inc92, %if.end
  %49 = load i64, i64* %x, align 8, !dbg !7223
  %50 = load i64, i64* %number_pixels.addr, align 8, !dbg !7225
  %cmp65 = icmp slt i64 %49, %50, !dbg !7226
  br i1 %cmp65, label %for.body67, label %for.end94, !dbg !7227

for.body67:                                       ; preds = %for.cond64
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7228
  %52 = load i8*, i8** %p.addr, align 8, !dbg !7230
  %call68 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %51, i8* %52, i32* %pixel), !dbg !7231
  store i8* %call68, i8** %p.addr, align 8, !dbg !7232
  %53 = load i32, i32* %pixel, align 4, !dbg !7233
  %shl69 = shl i32 %53, 6, !dbg !7233
  %conv70 = trunc i32 %shl69 to i16, !dbg !7233
  %call71 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv70), !dbg !7233
  %54 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7233
  %red72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %54, i32 0, i32 2, !dbg !7233
  store i16 %call71, i16* %red72, align 2, !dbg !7233
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7234
  %56 = load i8*, i8** %p.addr, align 8, !dbg !7235
  %call73 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %55, i8* %56, i32* %pixel), !dbg !7236
  store i8* %call73, i8** %p.addr, align 8, !dbg !7237
  %57 = load i32, i32* %pixel, align 4, !dbg !7238
  %shl74 = shl i32 %57, 6, !dbg !7238
  %conv75 = trunc i32 %shl74 to i16, !dbg !7238
  %call76 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv75), !dbg !7238
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7238
  %green77 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 1, !dbg !7238
  store i16 %call76, i16* %green77, align 2, !dbg !7238
  %59 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7239
  %60 = load i8*, i8** %p.addr, align 8, !dbg !7240
  %call78 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %59, i8* %60, i32* %pixel), !dbg !7241
  store i8* %call78, i8** %p.addr, align 8, !dbg !7242
  %61 = load i32, i32* %pixel, align 4, !dbg !7243
  %shl79 = shl i32 %61, 6, !dbg !7243
  %conv80 = trunc i32 %shl79 to i16, !dbg !7243
  %call81 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv80), !dbg !7243
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7243
  %blue82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 0, !dbg !7243
  store i16 %call81, i16* %blue82, align 2, !dbg !7243
  %63 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7244
  %64 = load i8*, i8** %p.addr, align 8, !dbg !7245
  %call83 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %63, i8* %64, i32* %pixel), !dbg !7246
  store i8* %call83, i8** %p.addr, align 8, !dbg !7247
  %65 = load i32, i32* %pixel, align 4, !dbg !7248
  %shl84 = shl i32 %65, 6, !dbg !7248
  %conv85 = trunc i32 %shl84 to i16, !dbg !7248
  %call86 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %conv85), !dbg !7248
  %conv87 = zext i16 %call86 to i32, !dbg !7248
  %sub88 = sub nsw i32 65535, %conv87, !dbg !7248
  %conv89 = trunc i32 %sub88 to i16, !dbg !7248
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7248
  %opacity90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 3, !dbg !7248
  store i16 %conv89, i16* %opacity90, align 2, !dbg !7248
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7249
  %incdec.ptr91 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 1, !dbg !7249
  store %struct._PixelPacket* %incdec.ptr91, %struct._PixelPacket** %q.addr, align 8, !dbg !7249
  br label %for.inc92, !dbg !7250

for.inc92:                                        ; preds = %for.body67
  %68 = load i64, i64* %x, align 8, !dbg !7251
  %inc93 = add nsw i64 %68, 1, !dbg !7251
  store i64 %inc93, i64* %x, align 8, !dbg !7251
  br label %for.cond64, !dbg !7252, !llvm.loop !7253

for.end94:                                        ; preds = %for.cond64
  br label %sw.epilog293, !dbg !7255

sw.bb95:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i16* %pixel96, metadata !7256, metadata !DIExpression()), !dbg !7258
  %69 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7259
  %format = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %69, i32 0, i32 2, !dbg !7261
  %70 = load i32, i32* %format, align 8, !dbg !7261
  %cmp97 = icmp eq i32 %70, 1, !dbg !7262
  br i1 %cmp97, label %if.then99, label %if.end136, !dbg !7263

if.then99:                                        ; preds = %sw.bb95
  store i64 0, i64* %x, align 8, !dbg !7264
  br label %for.cond100, !dbg !7267

for.cond100:                                      ; preds = %for.inc133, %if.then99
  %71 = load i64, i64* %x, align 8, !dbg !7268
  %72 = load i64, i64* %number_pixels.addr, align 8, !dbg !7270
  %cmp101 = icmp slt i64 %71, %72, !dbg !7271
  br i1 %cmp101, label %for.body103, label %for.end135, !dbg !7272

for.body103:                                      ; preds = %for.cond100
  %73 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7273
  %endian104 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %73, i32 0, i32 13, !dbg !7275
  %74 = load i32, i32* %endian104, align 8, !dbg !7275
  %75 = load i8*, i8** %p.addr, align 8, !dbg !7276
  %call105 = call i8* @PushShortPixel(i32 %74, i8* %75, i16* %pixel96), !dbg !7277
  store i8* %call105, i8** %p.addr, align 8, !dbg !7278
  %76 = load i16, i16* %pixel96, align 2, !dbg !7279
  %call106 = call float @HalfToSinglePrecision(i16 zeroext %76), !dbg !7279
  %mul = fmul float 6.553500e+04, %call106, !dbg !7279
  %call107 = call zeroext i16 @ClampToQuantum(float %mul), !dbg !7279
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7279
  %red108 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 2, !dbg !7279
  store i16 %call107, i16* %red108, align 2, !dbg !7279
  %78 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7280
  %endian109 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %78, i32 0, i32 13, !dbg !7281
  %79 = load i32, i32* %endian109, align 8, !dbg !7281
  %80 = load i8*, i8** %p.addr, align 8, !dbg !7282
  %call110 = call i8* @PushShortPixel(i32 %79, i8* %80, i16* %pixel96), !dbg !7283
  store i8* %call110, i8** %p.addr, align 8, !dbg !7284
  %81 = load i16, i16* %pixel96, align 2, !dbg !7285
  %call111 = call float @HalfToSinglePrecision(i16 zeroext %81), !dbg !7285
  %mul112 = fmul float 6.553500e+04, %call111, !dbg !7285
  %call113 = call zeroext i16 @ClampToQuantum(float %mul112), !dbg !7285
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7285
  %green114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 0, i32 1, !dbg !7285
  store i16 %call113, i16* %green114, align 2, !dbg !7285
  %83 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7286
  %endian115 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %83, i32 0, i32 13, !dbg !7287
  %84 = load i32, i32* %endian115, align 8, !dbg !7287
  %85 = load i8*, i8** %p.addr, align 8, !dbg !7288
  %call116 = call i8* @PushShortPixel(i32 %84, i8* %85, i16* %pixel96), !dbg !7289
  store i8* %call116, i8** %p.addr, align 8, !dbg !7290
  %86 = load i16, i16* %pixel96, align 2, !dbg !7291
  %call117 = call float @HalfToSinglePrecision(i16 zeroext %86), !dbg !7291
  %mul118 = fmul float 6.553500e+04, %call117, !dbg !7291
  %call119 = call zeroext i16 @ClampToQuantum(float %mul118), !dbg !7291
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7291
  %blue120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 0, i32 0, !dbg !7291
  store i16 %call119, i16* %blue120, align 2, !dbg !7291
  %88 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7292
  %endian121 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %88, i32 0, i32 13, !dbg !7293
  %89 = load i32, i32* %endian121, align 8, !dbg !7293
  %90 = load i8*, i8** %p.addr, align 8, !dbg !7294
  %call122 = call i8* @PushShortPixel(i32 %89, i8* %90, i16* %pixel96), !dbg !7295
  store i8* %call122, i8** %p.addr, align 8, !dbg !7296
  %91 = load i16, i16* %pixel96, align 2, !dbg !7297
  %call123 = call float @HalfToSinglePrecision(i16 zeroext %91), !dbg !7297
  %mul124 = fmul float 6.553500e+04, %call123, !dbg !7297
  %call125 = call zeroext i16 @ClampToQuantum(float %mul124), !dbg !7297
  %conv126 = zext i16 %call125 to i32, !dbg !7297
  %sub127 = sub nsw i32 65535, %conv126, !dbg !7297
  %conv128 = trunc i32 %sub127 to i16, !dbg !7297
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7297
  %opacity129 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 3, !dbg !7297
  store i16 %conv128, i16* %opacity129, align 2, !dbg !7297
  %93 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7298
  %pad130 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %93, i32 0, i32 6, !dbg !7299
  %94 = load i64, i64* %pad130, align 8, !dbg !7299
  %95 = load i8*, i8** %p.addr, align 8, !dbg !7300
  %add.ptr131 = getelementptr inbounds i8, i8* %95, i64 %94, !dbg !7300
  store i8* %add.ptr131, i8** %p.addr, align 8, !dbg !7300
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7301
  %incdec.ptr132 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 1, !dbg !7301
  store %struct._PixelPacket* %incdec.ptr132, %struct._PixelPacket** %q.addr, align 8, !dbg !7301
  br label %for.inc133, !dbg !7302

for.inc133:                                       ; preds = %for.body103
  %97 = load i64, i64* %x, align 8, !dbg !7303
  %inc134 = add nsw i64 %97, 1, !dbg !7303
  store i64 %inc134, i64* %x, align 8, !dbg !7303
  br label %for.cond100, !dbg !7304, !llvm.loop !7305

for.end135:                                       ; preds = %for.cond100
  br label %sw.epilog293, !dbg !7307

if.end136:                                        ; preds = %sw.bb95
  store i64 0, i64* %x, align 8, !dbg !7308
  br label %for.cond137, !dbg !7310

for.cond137:                                      ; preds = %for.inc163, %if.end136
  %98 = load i64, i64* %x, align 8, !dbg !7311
  %99 = load i64, i64* %number_pixels.addr, align 8, !dbg !7313
  %cmp138 = icmp slt i64 %98, %99, !dbg !7314
  br i1 %cmp138, label %for.body140, label %for.end165, !dbg !7315

for.body140:                                      ; preds = %for.cond137
  %100 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7316
  %endian141 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %100, i32 0, i32 13, !dbg !7318
  %101 = load i32, i32* %endian141, align 8, !dbg !7318
  %102 = load i8*, i8** %p.addr, align 8, !dbg !7319
  %call142 = call i8* @PushShortPixel(i32 %101, i8* %102, i16* %pixel96), !dbg !7320
  store i8* %call142, i8** %p.addr, align 8, !dbg !7321
  %103 = load i16, i16* %pixel96, align 2, !dbg !7322
  %call143 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %103), !dbg !7322
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7322
  %red144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 0, i32 2, !dbg !7322
  store i16 %call143, i16* %red144, align 2, !dbg !7322
  %105 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7323
  %endian145 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %105, i32 0, i32 13, !dbg !7324
  %106 = load i32, i32* %endian145, align 8, !dbg !7324
  %107 = load i8*, i8** %p.addr, align 8, !dbg !7325
  %call146 = call i8* @PushShortPixel(i32 %106, i8* %107, i16* %pixel96), !dbg !7326
  store i8* %call146, i8** %p.addr, align 8, !dbg !7327
  %108 = load i16, i16* %pixel96, align 2, !dbg !7328
  %call147 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %108), !dbg !7328
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7328
  %green148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 1, !dbg !7328
  store i16 %call147, i16* %green148, align 2, !dbg !7328
  %110 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7329
  %endian149 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %110, i32 0, i32 13, !dbg !7330
  %111 = load i32, i32* %endian149, align 8, !dbg !7330
  %112 = load i8*, i8** %p.addr, align 8, !dbg !7331
  %call150 = call i8* @PushShortPixel(i32 %111, i8* %112, i16* %pixel96), !dbg !7332
  store i8* %call150, i8** %p.addr, align 8, !dbg !7333
  %113 = load i16, i16* %pixel96, align 2, !dbg !7334
  %call151 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %113), !dbg !7334
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7334
  %blue152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 0, !dbg !7334
  store i16 %call151, i16* %blue152, align 2, !dbg !7334
  %115 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7335
  %endian153 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %115, i32 0, i32 13, !dbg !7336
  %116 = load i32, i32* %endian153, align 8, !dbg !7336
  %117 = load i8*, i8** %p.addr, align 8, !dbg !7337
  %call154 = call i8* @PushShortPixel(i32 %116, i8* %117, i16* %pixel96), !dbg !7338
  store i8* %call154, i8** %p.addr, align 8, !dbg !7339
  %118 = load i16, i16* %pixel96, align 2, !dbg !7340
  %call155 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %118), !dbg !7340
  %conv156 = zext i16 %call155 to i32, !dbg !7340
  %sub157 = sub nsw i32 65535, %conv156, !dbg !7340
  %conv158 = trunc i32 %sub157 to i16, !dbg !7340
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7340
  %opacity159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %119, i32 0, i32 3, !dbg !7340
  store i16 %conv158, i16* %opacity159, align 2, !dbg !7340
  %120 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7341
  %pad160 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %120, i32 0, i32 6, !dbg !7342
  %121 = load i64, i64* %pad160, align 8, !dbg !7342
  %122 = load i8*, i8** %p.addr, align 8, !dbg !7343
  %add.ptr161 = getelementptr inbounds i8, i8* %122, i64 %121, !dbg !7343
  store i8* %add.ptr161, i8** %p.addr, align 8, !dbg !7343
  %123 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7344
  %incdec.ptr162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %123, i32 1, !dbg !7344
  store %struct._PixelPacket* %incdec.ptr162, %struct._PixelPacket** %q.addr, align 8, !dbg !7344
  br label %for.inc163, !dbg !7345

for.inc163:                                       ; preds = %for.body140
  %124 = load i64, i64* %x, align 8, !dbg !7346
  %inc164 = add nsw i64 %124, 1, !dbg !7346
  store i64 %inc164, i64* %x, align 8, !dbg !7346
  br label %for.cond137, !dbg !7347, !llvm.loop !7348

for.end165:                                       ; preds = %for.cond137
  br label %sw.epilog293, !dbg !7350

sw.bb166:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %pixel167, metadata !7351, metadata !DIExpression()), !dbg !7353
  %125 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7354
  %format168 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %125, i32 0, i32 2, !dbg !7356
  %126 = load i32, i32* %format168, align 8, !dbg !7356
  %cmp169 = icmp eq i32 %126, 1, !dbg !7357
  br i1 %cmp169, label %if.then171, label %if.end198, !dbg !7358

if.then171:                                       ; preds = %sw.bb166
  call void @llvm.dbg.declare(metadata float* %pixel172, metadata !7359, metadata !DIExpression()), !dbg !7361
  store i64 0, i64* %x, align 8, !dbg !7362
  br label %for.cond173, !dbg !7364

for.cond173:                                      ; preds = %for.inc195, %if.then171
  %127 = load i64, i64* %x, align 8, !dbg !7365
  %128 = load i64, i64* %number_pixels.addr, align 8, !dbg !7367
  %cmp174 = icmp slt i64 %127, %128, !dbg !7368
  br i1 %cmp174, label %for.body176, label %for.end197, !dbg !7369

for.body176:                                      ; preds = %for.cond173
  %129 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7370
  %130 = load i8*, i8** %p.addr, align 8, !dbg !7372
  %call177 = call i8* @PushFloatPixel(%struct._QuantumInfo* %129, i8* %130, float* %pixel172), !dbg !7373
  store i8* %call177, i8** %p.addr, align 8, !dbg !7374
  %131 = load float, float* %pixel172, align 4, !dbg !7375
  %call178 = call zeroext i16 @ClampToQuantum(float %131), !dbg !7375
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7375
  %red179 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 2, !dbg !7375
  store i16 %call178, i16* %red179, align 2, !dbg !7375
  %133 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7376
  %134 = load i8*, i8** %p.addr, align 8, !dbg !7377
  %call180 = call i8* @PushFloatPixel(%struct._QuantumInfo* %133, i8* %134, float* %pixel172), !dbg !7378
  store i8* %call180, i8** %p.addr, align 8, !dbg !7379
  %135 = load float, float* %pixel172, align 4, !dbg !7380
  %call181 = call zeroext i16 @ClampToQuantum(float %135), !dbg !7380
  %136 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7380
  %green182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %136, i32 0, i32 1, !dbg !7380
  store i16 %call181, i16* %green182, align 2, !dbg !7380
  %137 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7381
  %138 = load i8*, i8** %p.addr, align 8, !dbg !7382
  %call183 = call i8* @PushFloatPixel(%struct._QuantumInfo* %137, i8* %138, float* %pixel172), !dbg !7383
  store i8* %call183, i8** %p.addr, align 8, !dbg !7384
  %139 = load float, float* %pixel172, align 4, !dbg !7385
  %call184 = call zeroext i16 @ClampToQuantum(float %139), !dbg !7385
  %140 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7385
  %blue185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %140, i32 0, i32 0, !dbg !7385
  store i16 %call184, i16* %blue185, align 2, !dbg !7385
  %141 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7386
  %142 = load i8*, i8** %p.addr, align 8, !dbg !7387
  %call186 = call i8* @PushFloatPixel(%struct._QuantumInfo* %141, i8* %142, float* %pixel172), !dbg !7388
  store i8* %call186, i8** %p.addr, align 8, !dbg !7389
  %143 = load float, float* %pixel172, align 4, !dbg !7390
  %call187 = call zeroext i16 @ClampToQuantum(float %143), !dbg !7390
  %conv188 = zext i16 %call187 to i32, !dbg !7390
  %sub189 = sub nsw i32 65535, %conv188, !dbg !7390
  %conv190 = trunc i32 %sub189 to i16, !dbg !7390
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7390
  %opacity191 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 3, !dbg !7390
  store i16 %conv190, i16* %opacity191, align 2, !dbg !7390
  %145 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7391
  %pad192 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %145, i32 0, i32 6, !dbg !7392
  %146 = load i64, i64* %pad192, align 8, !dbg !7392
  %147 = load i8*, i8** %p.addr, align 8, !dbg !7393
  %add.ptr193 = getelementptr inbounds i8, i8* %147, i64 %146, !dbg !7393
  store i8* %add.ptr193, i8** %p.addr, align 8, !dbg !7393
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7394
  %incdec.ptr194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 1, !dbg !7394
  store %struct._PixelPacket* %incdec.ptr194, %struct._PixelPacket** %q.addr, align 8, !dbg !7394
  br label %for.inc195, !dbg !7395

for.inc195:                                       ; preds = %for.body176
  %149 = load i64, i64* %x, align 8, !dbg !7396
  %inc196 = add nsw i64 %149, 1, !dbg !7396
  store i64 %inc196, i64* %x, align 8, !dbg !7396
  br label %for.cond173, !dbg !7397, !llvm.loop !7398

for.end197:                                       ; preds = %for.cond173
  br label %sw.epilog293, !dbg !7400

if.end198:                                        ; preds = %sw.bb166
  store i64 0, i64* %x, align 8, !dbg !7401
  br label %for.cond199, !dbg !7403

for.cond199:                                      ; preds = %for.inc225, %if.end198
  %150 = load i64, i64* %x, align 8, !dbg !7404
  %151 = load i64, i64* %number_pixels.addr, align 8, !dbg !7406
  %cmp200 = icmp slt i64 %150, %151, !dbg !7407
  br i1 %cmp200, label %for.body202, label %for.end227, !dbg !7408

for.body202:                                      ; preds = %for.cond199
  %152 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7409
  %endian203 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %152, i32 0, i32 13, !dbg !7411
  %153 = load i32, i32* %endian203, align 8, !dbg !7411
  %154 = load i8*, i8** %p.addr, align 8, !dbg !7412
  %call204 = call i8* @PushLongPixel(i32 %153, i8* %154, i32* %pixel167), !dbg !7413
  store i8* %call204, i8** %p.addr, align 8, !dbg !7414
  %155 = load i32, i32* %pixel167, align 4, !dbg !7415
  %call205 = call zeroext i16 @ScaleLongToQuantum(i32 %155), !dbg !7415
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7415
  %red206 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 2, !dbg !7415
  store i16 %call205, i16* %red206, align 2, !dbg !7415
  %157 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7416
  %endian207 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %157, i32 0, i32 13, !dbg !7417
  %158 = load i32, i32* %endian207, align 8, !dbg !7417
  %159 = load i8*, i8** %p.addr, align 8, !dbg !7418
  %call208 = call i8* @PushLongPixel(i32 %158, i8* %159, i32* %pixel167), !dbg !7419
  store i8* %call208, i8** %p.addr, align 8, !dbg !7420
  %160 = load i32, i32* %pixel167, align 4, !dbg !7421
  %call209 = call zeroext i16 @ScaleLongToQuantum(i32 %160), !dbg !7421
  %161 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7421
  %green210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %161, i32 0, i32 1, !dbg !7421
  store i16 %call209, i16* %green210, align 2, !dbg !7421
  %162 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7422
  %endian211 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %162, i32 0, i32 13, !dbg !7423
  %163 = load i32, i32* %endian211, align 8, !dbg !7423
  %164 = load i8*, i8** %p.addr, align 8, !dbg !7424
  %call212 = call i8* @PushLongPixel(i32 %163, i8* %164, i32* %pixel167), !dbg !7425
  store i8* %call212, i8** %p.addr, align 8, !dbg !7426
  %165 = load i32, i32* %pixel167, align 4, !dbg !7427
  %call213 = call zeroext i16 @ScaleLongToQuantum(i32 %165), !dbg !7427
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7427
  %blue214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 0, !dbg !7427
  store i16 %call213, i16* %blue214, align 2, !dbg !7427
  %167 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7428
  %endian215 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %167, i32 0, i32 13, !dbg !7429
  %168 = load i32, i32* %endian215, align 8, !dbg !7429
  %169 = load i8*, i8** %p.addr, align 8, !dbg !7430
  %call216 = call i8* @PushLongPixel(i32 %168, i8* %169, i32* %pixel167), !dbg !7431
  store i8* %call216, i8** %p.addr, align 8, !dbg !7432
  %170 = load i32, i32* %pixel167, align 4, !dbg !7433
  %call217 = call zeroext i16 @ScaleLongToQuantum(i32 %170), !dbg !7433
  %conv218 = zext i16 %call217 to i32, !dbg !7433
  %sub219 = sub nsw i32 65535, %conv218, !dbg !7433
  %conv220 = trunc i32 %sub219 to i16, !dbg !7433
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7433
  %opacity221 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %171, i32 0, i32 3, !dbg !7433
  store i16 %conv220, i16* %opacity221, align 2, !dbg !7433
  %172 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7434
  %pad222 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %172, i32 0, i32 6, !dbg !7435
  %173 = load i64, i64* %pad222, align 8, !dbg !7435
  %174 = load i8*, i8** %p.addr, align 8, !dbg !7436
  %add.ptr223 = getelementptr inbounds i8, i8* %174, i64 %173, !dbg !7436
  store i8* %add.ptr223, i8** %p.addr, align 8, !dbg !7436
  %175 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7437
  %incdec.ptr224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %175, i32 1, !dbg !7437
  store %struct._PixelPacket* %incdec.ptr224, %struct._PixelPacket** %q.addr, align 8, !dbg !7437
  br label %for.inc225, !dbg !7438

for.inc225:                                       ; preds = %for.body202
  %176 = load i64, i64* %x, align 8, !dbg !7439
  %inc226 = add nsw i64 %176, 1, !dbg !7439
  store i64 %inc226, i64* %x, align 8, !dbg !7439
  br label %for.cond199, !dbg !7440, !llvm.loop !7441

for.end227:                                       ; preds = %for.cond199
  br label %sw.epilog293, !dbg !7443

sw.bb228:                                         ; preds = %entry
  %177 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7444
  %format229 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %177, i32 0, i32 2, !dbg !7447
  %178 = load i32, i32* %format229, align 8, !dbg !7447
  %cmp230 = icmp eq i32 %178, 1, !dbg !7448
  br i1 %cmp230, label %if.then232, label %if.end263, !dbg !7449

if.then232:                                       ; preds = %sw.bb228
  call void @llvm.dbg.declare(metadata double* %pixel233, metadata !7450, metadata !DIExpression()), !dbg !7452
  store i64 0, i64* %x, align 8, !dbg !7453
  br label %for.cond234, !dbg !7455

for.cond234:                                      ; preds = %for.inc260, %if.then232
  %179 = load i64, i64* %x, align 8, !dbg !7456
  %180 = load i64, i64* %number_pixels.addr, align 8, !dbg !7458
  %cmp235 = icmp slt i64 %179, %180, !dbg !7459
  br i1 %cmp235, label %for.body237, label %for.end262, !dbg !7460

for.body237:                                      ; preds = %for.cond234
  %181 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7461
  %182 = load i8*, i8** %p.addr, align 8, !dbg !7463
  %call238 = call i8* @PushDoublePixel(%struct._QuantumInfo* %181, i8* %182, double* %pixel233), !dbg !7464
  store i8* %call238, i8** %p.addr, align 8, !dbg !7465
  %183 = load double, double* %pixel233, align 8, !dbg !7466
  %conv239 = fptrunc double %183 to float, !dbg !7466
  %call240 = call zeroext i16 @ClampToQuantum(float %conv239), !dbg !7466
  %184 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7466
  %red241 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %184, i32 0, i32 2, !dbg !7466
  store i16 %call240, i16* %red241, align 2, !dbg !7466
  %185 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7467
  %186 = load i8*, i8** %p.addr, align 8, !dbg !7468
  %call242 = call i8* @PushDoublePixel(%struct._QuantumInfo* %185, i8* %186, double* %pixel233), !dbg !7469
  store i8* %call242, i8** %p.addr, align 8, !dbg !7470
  %187 = load double, double* %pixel233, align 8, !dbg !7471
  %conv243 = fptrunc double %187 to float, !dbg !7471
  %call244 = call zeroext i16 @ClampToQuantum(float %conv243), !dbg !7471
  %188 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7471
  %green245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %188, i32 0, i32 1, !dbg !7471
  store i16 %call244, i16* %green245, align 2, !dbg !7471
  %189 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7472
  %190 = load i8*, i8** %p.addr, align 8, !dbg !7473
  %call246 = call i8* @PushDoublePixel(%struct._QuantumInfo* %189, i8* %190, double* %pixel233), !dbg !7474
  store i8* %call246, i8** %p.addr, align 8, !dbg !7475
  %191 = load double, double* %pixel233, align 8, !dbg !7476
  %conv247 = fptrunc double %191 to float, !dbg !7476
  %call248 = call zeroext i16 @ClampToQuantum(float %conv247), !dbg !7476
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7476
  %blue249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %192, i32 0, i32 0, !dbg !7476
  store i16 %call248, i16* %blue249, align 2, !dbg !7476
  %193 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7477
  %194 = load i8*, i8** %p.addr, align 8, !dbg !7478
  %call250 = call i8* @PushDoublePixel(%struct._QuantumInfo* %193, i8* %194, double* %pixel233), !dbg !7479
  store i8* %call250, i8** %p.addr, align 8, !dbg !7480
  %195 = load double, double* %pixel233, align 8, !dbg !7481
  %conv251 = fptrunc double %195 to float, !dbg !7481
  %call252 = call zeroext i16 @ClampToQuantum(float %conv251), !dbg !7481
  %conv253 = zext i16 %call252 to i32, !dbg !7481
  %sub254 = sub nsw i32 65535, %conv253, !dbg !7481
  %conv255 = trunc i32 %sub254 to i16, !dbg !7481
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7481
  %opacity256 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 3, !dbg !7481
  store i16 %conv255, i16* %opacity256, align 2, !dbg !7481
  %197 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7482
  %pad257 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %197, i32 0, i32 6, !dbg !7483
  %198 = load i64, i64* %pad257, align 8, !dbg !7483
  %199 = load i8*, i8** %p.addr, align 8, !dbg !7484
  %add.ptr258 = getelementptr inbounds i8, i8* %199, i64 %198, !dbg !7484
  store i8* %add.ptr258, i8** %p.addr, align 8, !dbg !7484
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7485
  %incdec.ptr259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 1, !dbg !7485
  store %struct._PixelPacket* %incdec.ptr259, %struct._PixelPacket** %q.addr, align 8, !dbg !7485
  br label %for.inc260, !dbg !7486

for.inc260:                                       ; preds = %for.body237
  %201 = load i64, i64* %x, align 8, !dbg !7487
  %inc261 = add nsw i64 %201, 1, !dbg !7487
  store i64 %inc261, i64* %x, align 8, !dbg !7487
  br label %for.cond234, !dbg !7488, !llvm.loop !7489

for.end262:                                       ; preds = %for.cond234
  br label %sw.epilog293, !dbg !7491

if.end263:                                        ; preds = %sw.bb228
  br label %sw.default, !dbg !7492

sw.default:                                       ; preds = %entry, %if.end263
  %202 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7493
  %depth264 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %202, i32 0, i32 0, !dbg !7495
  %203 = load i64, i64* %depth264, align 8, !dbg !7495
  %call265 = call i64 @GetQuantumRange(i64 %203), !dbg !7496
  store i64 %call265, i64* %range, align 8, !dbg !7497
  store i64 0, i64* %x, align 8, !dbg !7498
  br label %for.cond266, !dbg !7500

for.cond266:                                      ; preds = %for.inc290, %sw.default
  %204 = load i64, i64* %x, align 8, !dbg !7501
  %205 = load i64, i64* %number_pixels.addr, align 8, !dbg !7503
  %cmp267 = icmp slt i64 %204, %205, !dbg !7504
  br i1 %cmp267, label %for.body269, label %for.end292, !dbg !7505

for.body269:                                      ; preds = %for.cond266
  %206 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7506
  %207 = load i8*, i8** %p.addr, align 8, !dbg !7508
  %call270 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %206, i8* %207, i32* %pixel), !dbg !7509
  store i8* %call270, i8** %p.addr, align 8, !dbg !7510
  %208 = load i32, i32* %pixel, align 4, !dbg !7511
  %conv271 = zext i32 %208 to i64, !dbg !7511
  %209 = load i64, i64* %range, align 8, !dbg !7511
  %call272 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv271, i64 %209), !dbg !7511
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7511
  %red273 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 0, i32 2, !dbg !7511
  store i16 %call272, i16* %red273, align 2, !dbg !7511
  %211 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7512
  %212 = load i8*, i8** %p.addr, align 8, !dbg !7513
  %call274 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %211, i8* %212, i32* %pixel), !dbg !7514
  store i8* %call274, i8** %p.addr, align 8, !dbg !7515
  %213 = load i32, i32* %pixel, align 4, !dbg !7516
  %conv275 = zext i32 %213 to i64, !dbg !7516
  %214 = load i64, i64* %range, align 8, !dbg !7516
  %call276 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv275, i64 %214), !dbg !7516
  %215 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7516
  %green277 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %215, i32 0, i32 1, !dbg !7516
  store i16 %call276, i16* %green277, align 2, !dbg !7516
  %216 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7517
  %217 = load i8*, i8** %p.addr, align 8, !dbg !7518
  %call278 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %216, i8* %217, i32* %pixel), !dbg !7519
  store i8* %call278, i8** %p.addr, align 8, !dbg !7520
  %218 = load i32, i32* %pixel, align 4, !dbg !7521
  %conv279 = zext i32 %218 to i64, !dbg !7521
  %219 = load i64, i64* %range, align 8, !dbg !7521
  %call280 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv279, i64 %219), !dbg !7521
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7521
  %blue281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 0, !dbg !7521
  store i16 %call280, i16* %blue281, align 2, !dbg !7521
  %221 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7522
  %222 = load i8*, i8** %p.addr, align 8, !dbg !7523
  %call282 = call i8* @PushQuantumPixel(%struct._QuantumInfo* %221, i8* %222, i32* %pixel), !dbg !7524
  store i8* %call282, i8** %p.addr, align 8, !dbg !7525
  %223 = load i32, i32* %pixel, align 4, !dbg !7526
  %conv283 = zext i32 %223 to i64, !dbg !7526
  %224 = load i64, i64* %range, align 8, !dbg !7526
  %call284 = call zeroext i16 @ScaleAnyToQuantum(i64 %conv283, i64 %224), !dbg !7526
  %conv285 = zext i16 %call284 to i32, !dbg !7526
  %sub286 = sub nsw i32 65535, %conv285, !dbg !7526
  %conv287 = trunc i32 %sub286 to i16, !dbg !7526
  %225 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7526
  %opacity288 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %225, i32 0, i32 3, !dbg !7526
  store i16 %conv287, i16* %opacity288, align 2, !dbg !7526
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !7527
  %incdec.ptr289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 1, !dbg !7527
  store %struct._PixelPacket* %incdec.ptr289, %struct._PixelPacket** %q.addr, align 8, !dbg !7527
  br label %for.inc290, !dbg !7528

for.inc290:                                       ; preds = %for.body269
  %227 = load i64, i64* %x, align 8, !dbg !7529
  %inc291 = add nsw i64 %227, 1, !dbg !7529
  store i64 %inc291, i64* %x, align 8, !dbg !7529
  br label %for.cond266, !dbg !7530, !llvm.loop !7531

for.end292:                                       ; preds = %for.cond266
  br label %sw.epilog293, !dbg !7533

sw.epilog293:                                     ; preds = %for.end292, %for.end262, %for.end227, %for.end197, %for.end165, %for.end135, %for.end94, %for.end63, %for.end
  ret void, !dbg !7534
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !7535 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata double* %sign, metadata !7542, metadata !DIExpression()), !dbg !7543
  %0 = load double, double* %x.addr, align 8, !dbg !7544
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !7545
  %1 = zext i1 %cmp to i64, !dbg !7544
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !7544
  store double %cond, double* %sign, align 8, !dbg !7546
  %2 = load double, double* %sign, align 8, !dbg !7547
  %3 = load double, double* %x.addr, align 8, !dbg !7549
  %mul = fmul double %2, %3, !dbg !7550
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !7551
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7552

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !7553
  %div = fdiv double 1.000000e+00, %4, !dbg !7554
  store double %div, double* %retval, align 8, !dbg !7555
  br label %return, !dbg !7555

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !7556
  %div2 = fdiv double %5, 1.000000e-15, !dbg !7557
  store double %div2, double* %retval, align 8, !dbg !7558
  br label %return, !dbg !7558

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !7559
  ret double %6, !dbg !7559
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !7560 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  %0 = load float, float* %value.addr, align 4, !dbg !7566
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !7568
  br i1 %cmp, label %if.then, label %if.end, !dbg !7569

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !7570
  br label %return, !dbg !7570

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !7571
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !7573
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7574

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !7575
  br label %return, !dbg !7575

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !7576
  %add = fadd float %2, 5.000000e-01, !dbg !7577
  %conv = fptoui float %add to i16, !dbg !7578
  store i16 %conv, i16* %retval, align 2, !dbg !7579
  br label %return, !dbg !7579

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !7580
  ret i16 %3, !dbg !7580
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushCharPixel(i8* %pixels, i8* %pixel) #0 !dbg !7581 {
entry:
  %pixels.addr = alloca i8*, align 8
  %pixel.addr = alloca i8*, align 8
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  store i8* %pixel, i8** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixel.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  %0 = load i8*, i8** %pixels.addr, align 8, !dbg !7588
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7588
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !7588
  %1 = load i8, i8* %0, align 1, !dbg !7589
  %2 = load i8*, i8** %pixel.addr, align 8, !dbg !7590
  store i8 %1, i8* %2, align 1, !dbg !7591
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !7592
  ret i8* %3, !dbg !7593
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleCharToQuantum(i8 zeroext %value) #0 !dbg !7594 {
entry:
  %value.addr = alloca i8, align 1
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !7597, metadata !DIExpression()), !dbg !7598
  %0 = load i8, i8* %value.addr, align 1, !dbg !7599
  %conv = zext i8 %0 to i32, !dbg !7599
  %mul = mul i32 257, %conv, !dbg !7600
  %conv1 = trunc i32 %mul to i16, !dbg !7601
  ret i16 %conv1, !dbg !7602
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushShortPixel(i32 %endian, i8* %pixels, i16* %pixel) #0 !dbg !7603 {
entry:
  %retval = alloca i8*, align 8
  %endian.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %pixel.addr = alloca i16*, align 8
  %quantum = alloca i32, align 4
  store i32 %endian, i32* %endian.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endian.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  store i16* %pixel, i16** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pixel.addr, metadata !7612, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.declare(metadata i32* %quantum, metadata !7614, metadata !DIExpression()), !dbg !7615
  %0 = load i32, i32* %endian.addr, align 4, !dbg !7616
  %cmp = icmp eq i32 %0, 1, !dbg !7618
  br i1 %cmp, label %if.then, label %if.end, !dbg !7619

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !7620
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7620
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !7620
  %2 = load i8, i8* %1, align 1, !dbg !7622
  %conv = zext i8 %2 to i32, !dbg !7623
  store i32 %conv, i32* %quantum, align 4, !dbg !7624
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !7625
  %incdec.ptr1 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7625
  store i8* %incdec.ptr1, i8** %pixels.addr, align 8, !dbg !7625
  %4 = load i8, i8* %3, align 1, !dbg !7626
  %conv2 = zext i8 %4 to i32, !dbg !7626
  %shl = shl i32 %conv2, 8, !dbg !7627
  %5 = load i32, i32* %quantum, align 4, !dbg !7628
  %or = or i32 %5, %shl, !dbg !7628
  store i32 %or, i32* %quantum, align 4, !dbg !7628
  %6 = load i32, i32* %quantum, align 4, !dbg !7629
  %and = and i32 %6, 65535, !dbg !7630
  %conv3 = trunc i32 %and to i16, !dbg !7631
  %7 = load i16*, i16** %pixel.addr, align 8, !dbg !7632
  store i16 %conv3, i16* %7, align 2, !dbg !7633
  %8 = load i8*, i8** %pixels.addr, align 8, !dbg !7634
  store i8* %8, i8** %retval, align 8, !dbg !7635
  br label %return, !dbg !7635

if.end:                                           ; preds = %entry
  %9 = load i8*, i8** %pixels.addr, align 8, !dbg !7636
  %incdec.ptr4 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7636
  store i8* %incdec.ptr4, i8** %pixels.addr, align 8, !dbg !7636
  %10 = load i8, i8* %9, align 1, !dbg !7637
  %conv5 = zext i8 %10 to i32, !dbg !7637
  %shl6 = shl i32 %conv5, 8, !dbg !7638
  store i32 %shl6, i32* %quantum, align 4, !dbg !7639
  %11 = load i8*, i8** %pixels.addr, align 8, !dbg !7640
  %incdec.ptr7 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !7640
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !7640
  %12 = load i8, i8* %11, align 1, !dbg !7641
  %conv8 = zext i8 %12 to i32, !dbg !7642
  %13 = load i32, i32* %quantum, align 4, !dbg !7643
  %or9 = or i32 %13, %conv8, !dbg !7643
  store i32 %or9, i32* %quantum, align 4, !dbg !7643
  %14 = load i32, i32* %quantum, align 4, !dbg !7644
  %and10 = and i32 %14, 65535, !dbg !7645
  %conv11 = trunc i32 %and10 to i16, !dbg !7646
  %15 = load i16*, i16** %pixel.addr, align 8, !dbg !7647
  store i16 %conv11, i16* %15, align 2, !dbg !7648
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !7649
  store i8* %16, i8** %retval, align 8, !dbg !7650
  br label %return, !dbg !7650

return:                                           ; preds = %if.end, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !7651
  ret i8* %17, !dbg !7651
}

; Function Attrs: noinline nounwind uwtable
define internal float @HalfToSinglePrecision(i16 zeroext %half) #0 !dbg !7652 {
entry:
  %half.addr = alloca i16, align 2
  %exponent = alloca i32, align 4
  %significand = alloca i32, align 4
  %sign_bit = alloca i32, align 4
  %map = alloca %union._SinglePrecision, align 4
  %value = alloca i32, align 4
  store i16 %half, i16* %half.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %half.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.declare(metadata i32* %exponent, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata i32* %significand, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata i32* %sign_bit, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata %union._SinglePrecision* %map, metadata !7664, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7671, metadata !DIExpression()), !dbg !7672
  %0 = load i16, i16* %half.addr, align 2, !dbg !7673
  %conv = zext i16 %0 to i32, !dbg !7673
  %shr = ashr i32 %conv, 15, !dbg !7674
  %and = and i32 %shr, 1, !dbg !7675
  store i32 %and, i32* %sign_bit, align 4, !dbg !7676
  %1 = load i16, i16* %half.addr, align 2, !dbg !7677
  %conv1 = zext i16 %1 to i32, !dbg !7677
  %shr2 = ashr i32 %conv1, 10, !dbg !7678
  %and3 = and i32 %shr2, 31, !dbg !7679
  store i32 %and3, i32* %exponent, align 4, !dbg !7680
  %2 = load i16, i16* %half.addr, align 2, !dbg !7681
  %conv4 = zext i16 %2 to i32, !dbg !7681
  %and5 = and i32 %conv4, 1023, !dbg !7682
  store i32 %and5, i32* %significand, align 4, !dbg !7683
  %3 = load i32, i32* %exponent, align 4, !dbg !7684
  %cmp = icmp eq i32 %3, 0, !dbg !7686
  br i1 %cmp, label %if.then, label %if.else19, !dbg !7687

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %significand, align 4, !dbg !7688
  %cmp7 = icmp eq i32 %4, 0, !dbg !7691
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !7692

if.then9:                                         ; preds = %if.then
  %5 = load i32, i32* %sign_bit, align 4, !dbg !7693
  %shl = shl i32 %5, 31, !dbg !7694
  store i32 %shl, i32* %value, align 4, !dbg !7695
  br label %if.end, !dbg !7696

if.else:                                          ; preds = %if.then
  br label %while.cond, !dbg !7697

while.cond:                                       ; preds = %while.body, %if.else
  %6 = load i32, i32* %significand, align 4, !dbg !7699
  %and10 = and i32 %6, 1024, !dbg !7700
  %cmp11 = icmp eq i32 %and10, 0, !dbg !7701
  br i1 %cmp11, label %while.body, label %while.end, !dbg !7697

while.body:                                       ; preds = %while.cond
  %7 = load i32, i32* %significand, align 4, !dbg !7702
  %shl13 = shl i32 %7, 1, !dbg !7702
  store i32 %shl13, i32* %significand, align 4, !dbg !7702
  %8 = load i32, i32* %exponent, align 4, !dbg !7704
  %dec = add i32 %8, -1, !dbg !7704
  store i32 %dec, i32* %exponent, align 4, !dbg !7704
  br label %while.cond, !dbg !7697, !llvm.loop !7705

while.end:                                        ; preds = %while.cond
  %9 = load i32, i32* %exponent, align 4, !dbg !7707
  %inc = add i32 %9, 1, !dbg !7707
  store i32 %inc, i32* %exponent, align 4, !dbg !7707
  %10 = load i32, i32* %significand, align 4, !dbg !7708
  %and14 = and i32 %10, -1025, !dbg !7708
  store i32 %and14, i32* %significand, align 4, !dbg !7708
  %11 = load i32, i32* %exponent, align 4, !dbg !7709
  %add = add i32 %11, 112, !dbg !7709
  store i32 %add, i32* %exponent, align 4, !dbg !7709
  %12 = load i32, i32* %sign_bit, align 4, !dbg !7710
  %shl15 = shl i32 %12, 31, !dbg !7711
  %13 = load i32, i32* %exponent, align 4, !dbg !7712
  %shl16 = shl i32 %13, 23, !dbg !7713
  %or = or i32 %shl15, %shl16, !dbg !7714
  %14 = load i32, i32* %significand, align 4, !dbg !7715
  %shl17 = shl i32 %14, 13, !dbg !7716
  %or18 = or i32 %or, %shl17, !dbg !7717
  store i32 %or18, i32* %value, align 4, !dbg !7718
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then9
  br label %if.end39, !dbg !7719

if.else19:                                        ; preds = %entry
  %15 = load i32, i32* %exponent, align 4, !dbg !7720
  %cmp20 = icmp eq i32 %15, 31, !dbg !7722
  br i1 %cmp20, label %if.then22, label %if.else31, !dbg !7723

if.then22:                                        ; preds = %if.else19
  %16 = load i32, i32* %sign_bit, align 4, !dbg !7724
  %shl23 = shl i32 %16, 31, !dbg !7726
  %or24 = or i32 %shl23, 2139095040, !dbg !7727
  store i32 %or24, i32* %value, align 4, !dbg !7728
  %17 = load i32, i32* %significand, align 4, !dbg !7729
  %cmp25 = icmp ne i32 %17, 0, !dbg !7731
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !7732

if.then27:                                        ; preds = %if.then22
  %18 = load i32, i32* %significand, align 4, !dbg !7733
  %shl28 = shl i32 %18, 13, !dbg !7734
  %19 = load i32, i32* %value, align 4, !dbg !7735
  %or29 = or i32 %19, %shl28, !dbg !7735
  store i32 %or29, i32* %value, align 4, !dbg !7735
  br label %if.end30, !dbg !7736

if.end30:                                         ; preds = %if.then27, %if.then22
  br label %if.end38, !dbg !7737

if.else31:                                        ; preds = %if.else19
  %20 = load i32, i32* %exponent, align 4, !dbg !7738
  %add32 = add i32 %20, 112, !dbg !7738
  store i32 %add32, i32* %exponent, align 4, !dbg !7738
  %21 = load i32, i32* %significand, align 4, !dbg !7740
  %shl33 = shl i32 %21, 13, !dbg !7740
  store i32 %shl33, i32* %significand, align 4, !dbg !7740
  %22 = load i32, i32* %sign_bit, align 4, !dbg !7741
  %shl34 = shl i32 %22, 31, !dbg !7742
  %23 = load i32, i32* %exponent, align 4, !dbg !7743
  %shl35 = shl i32 %23, 23, !dbg !7744
  %or36 = or i32 %shl34, %shl35, !dbg !7745
  %24 = load i32, i32* %significand, align 4, !dbg !7746
  %or37 = or i32 %or36, %24, !dbg !7747
  store i32 %or37, i32* %value, align 4, !dbg !7748
  br label %if.end38

if.end38:                                         ; preds = %if.else31, %if.end30
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %25 = load i32, i32* %value, align 4, !dbg !7749
  %fixed_point = bitcast %union._SinglePrecision* %map to i32*, !dbg !7750
  store i32 %25, i32* %fixed_point, align 4, !dbg !7751
  %single_precision = bitcast %union._SinglePrecision* %map to float*, !dbg !7752
  %26 = load float, float* %single_precision, align 4, !dbg !7752
  ret float %26, !dbg !7753
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleShortToQuantum(i16 zeroext %value) #0 !dbg !7754 {
entry:
  %value.addr = alloca i16, align 2
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  %0 = load i16, i16* %value.addr, align 2, !dbg !7759
  ret i16 %0, !dbg !7760
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushFloatPixel(%struct._QuantumInfo* %quantum_info, i8* noalias %pixels, float* %pixel) #0 !dbg !7761 {
entry:
  %retval = alloca i8*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixels.addr = alloca i8*, align 8
  %pixel.addr = alloca float*, align 8
  %p = alloca float*, align 8
  %quantum = alloca [4 x i8], align 1
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7766, metadata !DIExpression()), !dbg !7767
  store float* %pixel, float** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pixel.addr, metadata !7768, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.declare(metadata float** %p, metadata !7770, metadata !DIExpression()), !dbg !7771
  call void @llvm.dbg.declare(metadata [4 x i8]* %quantum, metadata !7772, metadata !DIExpression()), !dbg !7774
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7775
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 13, !dbg !7777
  %1 = load i32, i32* %endian, align 8, !dbg !7777
  %cmp = icmp eq i32 %1, 1, !dbg !7778
  br i1 %cmp, label %if.then, label %if.end, !dbg !7779

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pixels.addr, align 8, !dbg !7780
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !7780
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !7780
  %3 = load i8, i8* %2, align 1, !dbg !7782
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !7783
  store i8 %3, i8* %arrayidx, align 1, !dbg !7784
  %4 = load i8*, i8** %pixels.addr, align 8, !dbg !7785
  %incdec.ptr1 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7785
  store i8* %incdec.ptr1, i8** %pixels.addr, align 8, !dbg !7785
  %5 = load i8, i8* %4, align 1, !dbg !7786
  %arrayidx2 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 1, !dbg !7787
  store i8 %5, i8* %arrayidx2, align 1, !dbg !7788
  %6 = load i8*, i8** %pixels.addr, align 8, !dbg !7789
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7789
  store i8* %incdec.ptr3, i8** %pixels.addr, align 8, !dbg !7789
  %7 = load i8, i8* %6, align 1, !dbg !7790
  %arrayidx4 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 2, !dbg !7791
  store i8 %7, i8* %arrayidx4, align 1, !dbg !7792
  %8 = load i8*, i8** %pixels.addr, align 8, !dbg !7793
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7793
  store i8* %incdec.ptr5, i8** %pixels.addr, align 8, !dbg !7793
  %9 = load i8, i8* %8, align 1, !dbg !7794
  %arrayidx6 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 3, !dbg !7795
  store i8 %9, i8* %arrayidx6, align 1, !dbg !7796
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !7797
  %10 = bitcast i8* %arraydecay to float*, !dbg !7798
  store float* %10, float** %p, align 8, !dbg !7799
  %11 = load float*, float** %p, align 8, !dbg !7800
  %12 = load float, float* %11, align 4, !dbg !7801
  %13 = load float*, float** %pixel.addr, align 8, !dbg !7802
  store float %12, float* %13, align 4, !dbg !7803
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7804
  %minimum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 3, !dbg !7805
  %15 = load double, double* %minimum, align 8, !dbg !7805
  %16 = load float*, float** %pixel.addr, align 8, !dbg !7806
  %17 = load float, float* %16, align 4, !dbg !7807
  %conv = fpext float %17 to double, !dbg !7807
  %sub = fsub double %conv, %15, !dbg !7807
  %conv7 = fptrunc double %sub to float, !dbg !7807
  store float %conv7, float* %16, align 4, !dbg !7807
  %18 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7808
  %scale = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %18, i32 0, i32 5, !dbg !7809
  %19 = load double, double* %scale, align 8, !dbg !7809
  %20 = load float*, float** %pixel.addr, align 8, !dbg !7810
  %21 = load float, float* %20, align 4, !dbg !7811
  %conv8 = fpext float %21 to double, !dbg !7811
  %mul = fmul double %conv8, %19, !dbg !7811
  %conv9 = fptrunc double %mul to float, !dbg !7811
  store float %conv9, float* %20, align 4, !dbg !7811
  %22 = load i8*, i8** %pixels.addr, align 8, !dbg !7812
  store i8* %22, i8** %retval, align 8, !dbg !7813
  br label %return, !dbg !7813

if.end:                                           ; preds = %entry
  %23 = load i8*, i8** %pixels.addr, align 8, !dbg !7814
  %incdec.ptr10 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7814
  store i8* %incdec.ptr10, i8** %pixels.addr, align 8, !dbg !7814
  %24 = load i8, i8* %23, align 1, !dbg !7815
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 3, !dbg !7816
  store i8 %24, i8* %arrayidx11, align 1, !dbg !7817
  %25 = load i8*, i8** %pixels.addr, align 8, !dbg !7818
  %incdec.ptr12 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !7818
  store i8* %incdec.ptr12, i8** %pixels.addr, align 8, !dbg !7818
  %26 = load i8, i8* %25, align 1, !dbg !7819
  %arrayidx13 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 2, !dbg !7820
  store i8 %26, i8* %arrayidx13, align 1, !dbg !7821
  %27 = load i8*, i8** %pixels.addr, align 8, !dbg !7822
  %incdec.ptr14 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !7822
  store i8* %incdec.ptr14, i8** %pixels.addr, align 8, !dbg !7822
  %28 = load i8, i8* %27, align 1, !dbg !7823
  %arrayidx15 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 1, !dbg !7824
  store i8 %28, i8* %arrayidx15, align 1, !dbg !7825
  %29 = load i8*, i8** %pixels.addr, align 8, !dbg !7826
  %incdec.ptr16 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !7826
  store i8* %incdec.ptr16, i8** %pixels.addr, align 8, !dbg !7826
  %30 = load i8, i8* %29, align 1, !dbg !7827
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !7828
  store i8 %30, i8* %arrayidx17, align 1, !dbg !7829
  %arraydecay18 = getelementptr inbounds [4 x i8], [4 x i8]* %quantum, i64 0, i64 0, !dbg !7830
  %31 = bitcast i8* %arraydecay18 to float*, !dbg !7831
  store float* %31, float** %p, align 8, !dbg !7832
  %32 = load float*, float** %p, align 8, !dbg !7833
  %33 = load float, float* %32, align 4, !dbg !7834
  %34 = load float*, float** %pixel.addr, align 8, !dbg !7835
  store float %33, float* %34, align 4, !dbg !7836
  %35 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7837
  %minimum19 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %35, i32 0, i32 3, !dbg !7838
  %36 = load double, double* %minimum19, align 8, !dbg !7838
  %37 = load float*, float** %pixel.addr, align 8, !dbg !7839
  %38 = load float, float* %37, align 4, !dbg !7840
  %conv20 = fpext float %38 to double, !dbg !7840
  %sub21 = fsub double %conv20, %36, !dbg !7840
  %conv22 = fptrunc double %sub21 to float, !dbg !7840
  store float %conv22, float* %37, align 4, !dbg !7840
  %39 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7841
  %scale23 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %39, i32 0, i32 5, !dbg !7842
  %40 = load double, double* %scale23, align 8, !dbg !7842
  %41 = load float*, float** %pixel.addr, align 8, !dbg !7843
  %42 = load float, float* %41, align 4, !dbg !7844
  %conv24 = fpext float %42 to double, !dbg !7844
  %mul25 = fmul double %conv24, %40, !dbg !7844
  %conv26 = fptrunc double %mul25 to float, !dbg !7844
  store float %conv26, float* %41, align 4, !dbg !7844
  %43 = load i8*, i8** %pixels.addr, align 8, !dbg !7845
  store i8* %43, i8** %retval, align 8, !dbg !7846
  br label %return, !dbg !7846

return:                                           ; preds = %if.end, %if.then
  %44 = load i8*, i8** %retval, align 8, !dbg !7847
  ret i8* %44, !dbg !7847
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushLongPixel(i32 %endian, i8* %pixels, i32* %pixel) #0 !dbg !7848 {
entry:
  %retval = alloca i8*, align 8
  %endian.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %pixel.addr = alloca i32*, align 8
  %quantum = alloca i32, align 4
  store i32 %endian, i32* %endian.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endian.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  store i32* %pixel, i32** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pixel.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  call void @llvm.dbg.declare(metadata i32* %quantum, metadata !7858, metadata !DIExpression()), !dbg !7859
  %0 = load i32, i32* %endian.addr, align 4, !dbg !7860
  %cmp = icmp eq i32 %0, 1, !dbg !7862
  br i1 %cmp, label %if.then, label %if.end, !dbg !7863

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %pixels.addr, align 8, !dbg !7864
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7864
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !7864
  %2 = load i8, i8* %1, align 1, !dbg !7866
  %conv = zext i8 %2 to i32, !dbg !7867
  store i32 %conv, i32* %quantum, align 4, !dbg !7868
  %3 = load i8*, i8** %pixels.addr, align 8, !dbg !7869
  %incdec.ptr1 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !7869
  store i8* %incdec.ptr1, i8** %pixels.addr, align 8, !dbg !7869
  %4 = load i8, i8* %3, align 1, !dbg !7870
  %conv2 = zext i8 %4 to i32, !dbg !7870
  %shl = shl i32 %conv2, 8, !dbg !7871
  %5 = load i32, i32* %quantum, align 4, !dbg !7872
  %or = or i32 %5, %shl, !dbg !7872
  store i32 %or, i32* %quantum, align 4, !dbg !7872
  %6 = load i8*, i8** %pixels.addr, align 8, !dbg !7873
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7873
  store i8* %incdec.ptr3, i8** %pixels.addr, align 8, !dbg !7873
  %7 = load i8, i8* %6, align 1, !dbg !7874
  %conv4 = zext i8 %7 to i32, !dbg !7874
  %shl5 = shl i32 %conv4, 16, !dbg !7875
  %8 = load i32, i32* %quantum, align 4, !dbg !7876
  %or6 = or i32 %8, %shl5, !dbg !7876
  store i32 %or6, i32* %quantum, align 4, !dbg !7876
  %9 = load i8*, i8** %pixels.addr, align 8, !dbg !7877
  %incdec.ptr7 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7877
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !7877
  %10 = load i8, i8* %9, align 1, !dbg !7878
  %conv8 = zext i8 %10 to i32, !dbg !7878
  %shl9 = shl i32 %conv8, 24, !dbg !7879
  %11 = load i32, i32* %quantum, align 4, !dbg !7880
  %or10 = or i32 %11, %shl9, !dbg !7880
  store i32 %or10, i32* %quantum, align 4, !dbg !7880
  %12 = load i32, i32* %quantum, align 4, !dbg !7881
  %13 = load i32*, i32** %pixel.addr, align 8, !dbg !7882
  store i32 %12, i32* %13, align 4, !dbg !7883
  %14 = load i8*, i8** %pixels.addr, align 8, !dbg !7884
  store i8* %14, i8** %retval, align 8, !dbg !7885
  br label %return, !dbg !7885

if.end:                                           ; preds = %entry
  %15 = load i8*, i8** %pixels.addr, align 8, !dbg !7886
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !7886
  store i8* %incdec.ptr11, i8** %pixels.addr, align 8, !dbg !7886
  %16 = load i8, i8* %15, align 1, !dbg !7887
  %conv12 = zext i8 %16 to i32, !dbg !7887
  %shl13 = shl i32 %conv12, 24, !dbg !7888
  store i32 %shl13, i32* %quantum, align 4, !dbg !7889
  %17 = load i8*, i8** %pixels.addr, align 8, !dbg !7890
  %incdec.ptr14 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7890
  store i8* %incdec.ptr14, i8** %pixels.addr, align 8, !dbg !7890
  %18 = load i8, i8* %17, align 1, !dbg !7891
  %conv15 = zext i8 %18 to i32, !dbg !7891
  %shl16 = shl i32 %conv15, 16, !dbg !7892
  %19 = load i32, i32* %quantum, align 4, !dbg !7893
  %or17 = or i32 %19, %shl16, !dbg !7893
  store i32 %or17, i32* %quantum, align 4, !dbg !7893
  %20 = load i8*, i8** %pixels.addr, align 8, !dbg !7894
  %incdec.ptr18 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !7894
  store i8* %incdec.ptr18, i8** %pixels.addr, align 8, !dbg !7894
  %21 = load i8, i8* %20, align 1, !dbg !7895
  %conv19 = zext i8 %21 to i32, !dbg !7895
  %shl20 = shl i32 %conv19, 8, !dbg !7896
  %22 = load i32, i32* %quantum, align 4, !dbg !7897
  %or21 = or i32 %22, %shl20, !dbg !7897
  store i32 %or21, i32* %quantum, align 4, !dbg !7897
  %23 = load i8*, i8** %pixels.addr, align 8, !dbg !7898
  %incdec.ptr22 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7898
  store i8* %incdec.ptr22, i8** %pixels.addr, align 8, !dbg !7898
  %24 = load i8, i8* %23, align 1, !dbg !7899
  %conv23 = zext i8 %24 to i32, !dbg !7900
  %25 = load i32, i32* %quantum, align 4, !dbg !7901
  %or24 = or i32 %25, %conv23, !dbg !7901
  store i32 %or24, i32* %quantum, align 4, !dbg !7901
  %26 = load i32, i32* %quantum, align 4, !dbg !7902
  %27 = load i32*, i32** %pixel.addr, align 8, !dbg !7903
  store i32 %26, i32* %27, align 4, !dbg !7904
  %28 = load i8*, i8** %pixels.addr, align 8, !dbg !7905
  store i8* %28, i8** %retval, align 8, !dbg !7906
  br label %return, !dbg !7906

return:                                           ; preds = %if.end, %if.then
  %29 = load i8*, i8** %retval, align 8, !dbg !7907
  ret i8* %29, !dbg !7907
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleLongToQuantum(i32 %value) #0 !dbg !7908 {
entry:
  %value.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7911, metadata !DIExpression()), !dbg !7912
  %0 = load i32, i32* %value.addr, align 4, !dbg !7913
  %conv = zext i32 %0 to i64, !dbg !7913
  %add = add i64 %conv, 32768, !dbg !7914
  %div = udiv i64 %add, 65537, !dbg !7915
  %conv1 = trunc i64 %div to i16, !dbg !7916
  ret i16 %conv1, !dbg !7917
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushDoublePixel(%struct._QuantumInfo* %quantum_info, i8* noalias %pixels, double* %pixel) #0 !dbg !7918 {
entry:
  %retval = alloca i8*, align 8
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixels.addr = alloca i8*, align 8
  %pixel.addr = alloca double*, align 8
  %p = alloca double*, align 8
  %quantum = alloca [8 x i8], align 1
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !7921, metadata !DIExpression()), !dbg !7922
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store double* %pixel, double** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata double** %pixel.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  call void @llvm.dbg.declare(metadata double** %p, metadata !7927, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.declare(metadata [8 x i8]* %quantum, metadata !7929, metadata !DIExpression()), !dbg !7933
  %0 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7934
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %0, i32 0, i32 13, !dbg !7936
  %1 = load i32, i32* %endian, align 8, !dbg !7936
  %cmp = icmp eq i32 %1, 1, !dbg !7937
  br i1 %cmp, label %if.then, label %if.end, !dbg !7938

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %pixels.addr, align 8, !dbg !7939
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !7939
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !7939
  %3 = load i8, i8* %2, align 1, !dbg !7941
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !7942
  store i8 %3, i8* %arrayidx, align 1, !dbg !7943
  %4 = load i8*, i8** %pixels.addr, align 8, !dbg !7944
  %incdec.ptr1 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7944
  store i8* %incdec.ptr1, i8** %pixels.addr, align 8, !dbg !7944
  %5 = load i8, i8* %4, align 1, !dbg !7945
  %arrayidx2 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 1, !dbg !7946
  store i8 %5, i8* %arrayidx2, align 1, !dbg !7947
  %6 = load i8*, i8** %pixels.addr, align 8, !dbg !7948
  %incdec.ptr3 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7948
  store i8* %incdec.ptr3, i8** %pixels.addr, align 8, !dbg !7948
  %7 = load i8, i8* %6, align 1, !dbg !7949
  %arrayidx4 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 2, !dbg !7950
  store i8 %7, i8* %arrayidx4, align 1, !dbg !7951
  %8 = load i8*, i8** %pixels.addr, align 8, !dbg !7952
  %incdec.ptr5 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7952
  store i8* %incdec.ptr5, i8** %pixels.addr, align 8, !dbg !7952
  %9 = load i8, i8* %8, align 1, !dbg !7953
  %arrayidx6 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 3, !dbg !7954
  store i8 %9, i8* %arrayidx6, align 1, !dbg !7955
  %10 = load i8*, i8** %pixels.addr, align 8, !dbg !7956
  %incdec.ptr7 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7956
  store i8* %incdec.ptr7, i8** %pixels.addr, align 8, !dbg !7956
  %11 = load i8, i8* %10, align 1, !dbg !7957
  %arrayidx8 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 4, !dbg !7958
  store i8 %11, i8* %arrayidx8, align 1, !dbg !7959
  %12 = load i8*, i8** %pixels.addr, align 8, !dbg !7960
  %incdec.ptr9 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !7960
  store i8* %incdec.ptr9, i8** %pixels.addr, align 8, !dbg !7960
  %13 = load i8, i8* %12, align 1, !dbg !7961
  %arrayidx10 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 5, !dbg !7962
  store i8 %13, i8* %arrayidx10, align 1, !dbg !7963
  %14 = load i8*, i8** %pixels.addr, align 8, !dbg !7964
  %incdec.ptr11 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7964
  store i8* %incdec.ptr11, i8** %pixels.addr, align 8, !dbg !7964
  %15 = load i8, i8* %14, align 1, !dbg !7965
  %arrayidx12 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 6, !dbg !7966
  store i8 %15, i8* %arrayidx12, align 1, !dbg !7967
  %16 = load i8*, i8** %pixels.addr, align 8, !dbg !7968
  %incdec.ptr13 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !7968
  store i8* %incdec.ptr13, i8** %pixels.addr, align 8, !dbg !7968
  %17 = load i8, i8* %16, align 1, !dbg !7969
  %arrayidx14 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 7, !dbg !7970
  store i8 %17, i8* %arrayidx14, align 1, !dbg !7971
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !7972
  %18 = bitcast i8* %arraydecay to double*, !dbg !7973
  store double* %18, double** %p, align 8, !dbg !7974
  %19 = load double*, double** %p, align 8, !dbg !7975
  %20 = load double, double* %19, align 8, !dbg !7976
  %21 = load double*, double** %pixel.addr, align 8, !dbg !7977
  store double %20, double* %21, align 8, !dbg !7978
  %22 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7979
  %minimum = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %22, i32 0, i32 3, !dbg !7980
  %23 = load double, double* %minimum, align 8, !dbg !7980
  %24 = load double*, double** %pixel.addr, align 8, !dbg !7981
  %25 = load double, double* %24, align 8, !dbg !7982
  %sub = fsub double %25, %23, !dbg !7982
  store double %sub, double* %24, align 8, !dbg !7982
  %26 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !7983
  %scale = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %26, i32 0, i32 5, !dbg !7984
  %27 = load double, double* %scale, align 8, !dbg !7984
  %28 = load double*, double** %pixel.addr, align 8, !dbg !7985
  %29 = load double, double* %28, align 8, !dbg !7986
  %mul = fmul double %29, %27, !dbg !7986
  store double %mul, double* %28, align 8, !dbg !7986
  %30 = load i8*, i8** %pixels.addr, align 8, !dbg !7987
  store i8* %30, i8** %retval, align 8, !dbg !7988
  br label %return, !dbg !7988

if.end:                                           ; preds = %entry
  %31 = load i8*, i8** %pixels.addr, align 8, !dbg !7989
  %incdec.ptr15 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7989
  store i8* %incdec.ptr15, i8** %pixels.addr, align 8, !dbg !7989
  %32 = load i8, i8* %31, align 1, !dbg !7990
  %arrayidx16 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 7, !dbg !7991
  store i8 %32, i8* %arrayidx16, align 1, !dbg !7992
  %33 = load i8*, i8** %pixels.addr, align 8, !dbg !7993
  %incdec.ptr17 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !7993
  store i8* %incdec.ptr17, i8** %pixels.addr, align 8, !dbg !7993
  %34 = load i8, i8* %33, align 1, !dbg !7994
  %arrayidx18 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 6, !dbg !7995
  store i8 %34, i8* %arrayidx18, align 1, !dbg !7996
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !7997
  %incdec.ptr19 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7997
  store i8* %incdec.ptr19, i8** %pixels.addr, align 8, !dbg !7997
  %36 = load i8, i8* %35, align 1, !dbg !7998
  %arrayidx20 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 5, !dbg !7999
  store i8 %36, i8* %arrayidx20, align 1, !dbg !8000
  %37 = load i8*, i8** %pixels.addr, align 8, !dbg !8001
  %incdec.ptr21 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8001
  store i8* %incdec.ptr21, i8** %pixels.addr, align 8, !dbg !8001
  %38 = load i8, i8* %37, align 1, !dbg !8002
  %arrayidx22 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 4, !dbg !8003
  store i8 %38, i8* %arrayidx22, align 1, !dbg !8004
  %39 = load i8*, i8** %pixels.addr, align 8, !dbg !8005
  %incdec.ptr23 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8005
  store i8* %incdec.ptr23, i8** %pixels.addr, align 8, !dbg !8005
  %40 = load i8, i8* %39, align 1, !dbg !8006
  %arrayidx24 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 3, !dbg !8007
  store i8 %40, i8* %arrayidx24, align 1, !dbg !8008
  %41 = load i8*, i8** %pixels.addr, align 8, !dbg !8009
  %incdec.ptr25 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !8009
  store i8* %incdec.ptr25, i8** %pixels.addr, align 8, !dbg !8009
  %42 = load i8, i8* %41, align 1, !dbg !8010
  %arrayidx26 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 2, !dbg !8011
  store i8 %42, i8* %arrayidx26, align 1, !dbg !8012
  %43 = load i8*, i8** %pixels.addr, align 8, !dbg !8013
  %incdec.ptr27 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !8013
  store i8* %incdec.ptr27, i8** %pixels.addr, align 8, !dbg !8013
  %44 = load i8, i8* %43, align 1, !dbg !8014
  %arrayidx28 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 1, !dbg !8015
  store i8 %44, i8* %arrayidx28, align 1, !dbg !8016
  %45 = load i8*, i8** %pixels.addr, align 8, !dbg !8017
  %incdec.ptr29 = getelementptr inbounds i8, i8* %45, i32 1, !dbg !8017
  store i8* %incdec.ptr29, i8** %pixels.addr, align 8, !dbg !8017
  %46 = load i8, i8* %45, align 1, !dbg !8018
  %arrayidx30 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !8019
  store i8 %46, i8* %arrayidx30, align 1, !dbg !8020
  %arraydecay31 = getelementptr inbounds [8 x i8], [8 x i8]* %quantum, i64 0, i64 0, !dbg !8021
  %47 = bitcast i8* %arraydecay31 to double*, !dbg !8022
  store double* %47, double** %p, align 8, !dbg !8023
  %48 = load double*, double** %p, align 8, !dbg !8024
  %49 = load double, double* %48, align 8, !dbg !8025
  %50 = load double*, double** %pixel.addr, align 8, !dbg !8026
  store double %49, double* %50, align 8, !dbg !8027
  %51 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8028
  %minimum32 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %51, i32 0, i32 3, !dbg !8029
  %52 = load double, double* %minimum32, align 8, !dbg !8029
  %53 = load double*, double** %pixel.addr, align 8, !dbg !8030
  %54 = load double, double* %53, align 8, !dbg !8031
  %sub33 = fsub double %54, %52, !dbg !8031
  store double %sub33, double* %53, align 8, !dbg !8031
  %55 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8032
  %scale34 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %55, i32 0, i32 5, !dbg !8033
  %56 = load double, double* %scale34, align 8, !dbg !8033
  %57 = load double*, double** %pixel.addr, align 8, !dbg !8034
  %58 = load double, double* %57, align 8, !dbg !8035
  %mul35 = fmul double %58, %56, !dbg !8035
  store double %mul35, double* %57, align 8, !dbg !8035
  %59 = load i8*, i8** %pixels.addr, align 8, !dbg !8036
  store i8* %59, i8** %retval, align 8, !dbg !8037
  br label %return, !dbg !8037

return:                                           ; preds = %if.end, %if.then
  %60 = load i8*, i8** %retval, align 8, !dbg !8038
  ret i8* %60, !dbg !8038
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @GetQuantumRange(i64 %depth) #0 !dbg !8039 {
entry:
  %depth.addr = alloca i64, align 8
  %one = alloca i64, align 8
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !8043, metadata !DIExpression()), !dbg !8044
  call void @llvm.dbg.declare(metadata i64* %one, metadata !8045, metadata !DIExpression()), !dbg !8046
  store i64 1, i64* %one, align 8, !dbg !8047
  %0 = load i64, i64* %one, align 8, !dbg !8048
  %1 = load i64, i64* %depth.addr, align 8, !dbg !8049
  %sub = sub i64 %1, 1, !dbg !8050
  %shl = shl i64 %0, %sub, !dbg !8051
  %2 = load i64, i64* %one, align 8, !dbg !8052
  %3 = load i64, i64* %depth.addr, align 8, !dbg !8053
  %sub1 = sub i64 %3, 1, !dbg !8054
  %shl2 = shl i64 %2, %sub1, !dbg !8055
  %sub3 = sub i64 %shl2, 1, !dbg !8056
  %add = add i64 %shl, %sub3, !dbg !8057
  ret i64 %add, !dbg !8058
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushQuantumPixel(%struct._QuantumInfo* %quantum_info, i8* noalias %pixels, i32* %quantum) #0 !dbg !8059 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixels.addr = alloca i8*, align 8
  %quantum.addr = alloca i32*, align 8
  %i = alloca i64, align 8
  %quantum_bits = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !8062, metadata !DIExpression()), !dbg !8063
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  store i32* %quantum, i32** %quantum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum.addr, metadata !8066, metadata !DIExpression()), !dbg !8067
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8068, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.declare(metadata i64* %quantum_bits, metadata !8070, metadata !DIExpression()), !dbg !8071
  %0 = load i32*, i32** %quantum.addr, align 8, !dbg !8072
  store i32 0, i32* %0, align 4, !dbg !8073
  %1 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8074
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %1, i32 0, i32 0, !dbg !8076
  %2 = load i64, i64* %depth, align 8, !dbg !8076
  store i64 %2, i64* %i, align 8, !dbg !8077
  br label %for.cond, !dbg !8078

for.cond:                                         ; preds = %if.end12, %entry
  %3 = load i64, i64* %i, align 8, !dbg !8079
  %cmp = icmp sgt i64 %3, 0, !dbg !8081
  br i1 %cmp, label %for.body, label %for.end, !dbg !8082

for.body:                                         ; preds = %for.cond
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8083
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 14, !dbg !8086
  %bits = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 2, !dbg !8087
  %5 = load i64, i64* %bits, align 8, !dbg !8087
  %cmp1 = icmp eq i64 %5, 0, !dbg !8088
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8089

if.then:                                          ; preds = %for.body
  %6 = load i8*, i8** %pixels.addr, align 8, !dbg !8090
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8090
  store i8* %incdec.ptr, i8** %pixels.addr, align 8, !dbg !8090
  %7 = load i8, i8* %6, align 1, !dbg !8092
  %conv = zext i8 %7 to i32, !dbg !8093
  %8 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8094
  %state2 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %8, i32 0, i32 14, !dbg !8095
  %pixel = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state2, i32 0, i32 1, !dbg !8096
  store i32 %conv, i32* %pixel, align 8, !dbg !8097
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8098
  %state3 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 14, !dbg !8099
  %bits4 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state3, i32 0, i32 2, !dbg !8100
  store i64 8, i64* %bits4, align 8, !dbg !8101
  br label %if.end, !dbg !8102

if.end:                                           ; preds = %if.then, %for.body
  %10 = load i64, i64* %i, align 8, !dbg !8103
  store i64 %10, i64* %quantum_bits, align 8, !dbg !8104
  %11 = load i64, i64* %quantum_bits, align 8, !dbg !8105
  %12 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8107
  %state5 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %12, i32 0, i32 14, !dbg !8108
  %bits6 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state5, i32 0, i32 2, !dbg !8109
  %13 = load i64, i64* %bits6, align 8, !dbg !8109
  %cmp7 = icmp ugt i64 %11, %13, !dbg !8110
  br i1 %cmp7, label %if.then9, label %if.end12, !dbg !8111

if.then9:                                         ; preds = %if.end
  %14 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8112
  %state10 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %14, i32 0, i32 14, !dbg !8113
  %bits11 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state10, i32 0, i32 2, !dbg !8114
  %15 = load i64, i64* %bits11, align 8, !dbg !8114
  store i64 %15, i64* %quantum_bits, align 8, !dbg !8115
  br label %if.end12, !dbg !8116

if.end12:                                         ; preds = %if.then9, %if.end
  %16 = load i64, i64* %quantum_bits, align 8, !dbg !8117
  %17 = load i64, i64* %i, align 8, !dbg !8118
  %sub = sub nsw i64 %17, %16, !dbg !8118
  store i64 %sub, i64* %i, align 8, !dbg !8118
  %18 = load i64, i64* %quantum_bits, align 8, !dbg !8119
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8120
  %state13 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 14, !dbg !8121
  %bits14 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state13, i32 0, i32 2, !dbg !8122
  %20 = load i64, i64* %bits14, align 8, !dbg !8123
  %sub15 = sub i64 %20, %18, !dbg !8123
  store i64 %sub15, i64* %bits14, align 8, !dbg !8123
  %21 = load i32*, i32** %quantum.addr, align 8, !dbg !8124
  %22 = load i32, i32* %21, align 4, !dbg !8125
  %23 = load i64, i64* %quantum_bits, align 8, !dbg !8126
  %sh_prom = trunc i64 %23 to i32, !dbg !8127
  %shl = shl i32 %22, %sh_prom, !dbg !8127
  %conv16 = zext i32 %shl to i64, !dbg !8128
  %24 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8129
  %state17 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %24, i32 0, i32 14, !dbg !8130
  %pixel18 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state17, i32 0, i32 1, !dbg !8131
  %25 = load i32, i32* %pixel18, align 8, !dbg !8131
  %26 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8132
  %state19 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %26, i32 0, i32 14, !dbg !8133
  %bits20 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state19, i32 0, i32 2, !dbg !8134
  %27 = load i64, i64* %bits20, align 8, !dbg !8134
  %sh_prom21 = trunc i64 %27 to i32, !dbg !8135
  %shr = lshr i32 %25, %sh_prom21, !dbg !8135
  %conv22 = zext i32 %shr to i64, !dbg !8136
  %28 = load i64, i64* %quantum_bits, align 8, !dbg !8137
  %shl23 = shl i64 -1, %28, !dbg !8138
  %neg = xor i64 %shl23, -1, !dbg !8139
  %and = and i64 %conv22, %neg, !dbg !8140
  %or = or i64 %conv16, %and, !dbg !8141
  %conv24 = trunc i64 %or to i32, !dbg !8142
  %29 = load i32*, i32** %quantum.addr, align 8, !dbg !8143
  store i32 %conv24, i32* %29, align 4, !dbg !8144
  br label %for.cond, !dbg !8145, !llvm.loop !8146

for.end:                                          ; preds = %for.cond
  %30 = load i8*, i8** %pixels.addr, align 8, !dbg !8148
  ret i8* %30, !dbg !8149
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleAnyToQuantum(i64 %quantum, i64 %range) #0 !dbg !8150 {
entry:
  %quantum.addr = alloca i64, align 8
  %range.addr = alloca i64, align 8
  store i64 %quantum, i64* %quantum.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %quantum.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i64 %range, i64* %range.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %range.addr, metadata !8156, metadata !DIExpression()), !dbg !8157
  %0 = load i64, i64* %quantum.addr, align 8, !dbg !8158
  %conv = uitofp i64 %0 to float, !dbg !8158
  %mul = fmul float 6.553500e+04, %conv, !dbg !8159
  %1 = load i64, i64* %range.addr, align 8, !dbg !8160
  %conv1 = uitofp i64 %1 to float, !dbg !8160
  %div = fdiv float %mul, %conv1, !dbg !8161
  %conv2 = fpext float %div to double, !dbg !8162
  %add = fadd double %conv2, 5.000000e-01, !dbg !8163
  %conv3 = fptoui double %add to i16, !dbg !8164
  ret i16 %conv3, !dbg !8165
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @PushQuantumLongPixel(%struct._QuantumInfo* %quantum_info, i8* noalias %pixels, i32* %quantum) #0 !dbg !8166 {
entry:
  %quantum_info.addr = alloca %struct._QuantumInfo*, align 8
  %pixels.addr = alloca i8*, align 8
  %quantum.addr = alloca i32*, align 8
  %i = alloca i64, align 8
  %quantum_bits = alloca i64, align 8
  store %struct._QuantumInfo* %quantum_info, %struct._QuantumInfo** %quantum_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info.addr, metadata !8167, metadata !DIExpression()), !dbg !8168
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !8169, metadata !DIExpression()), !dbg !8170
  store i32* %quantum, i32** %quantum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %quantum.addr, metadata !8171, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8173, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.declare(metadata i64* %quantum_bits, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = load i32*, i32** %quantum.addr, align 8, !dbg !8177
  store i32 0, i32* %0, align 4, !dbg !8178
  %1 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8179
  %depth = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %1, i32 0, i32 0, !dbg !8181
  %2 = load i64, i64* %depth, align 8, !dbg !8181
  store i64 %2, i64* %i, align 8, !dbg !8182
  br label %for.cond, !dbg !8183

for.cond:                                         ; preds = %if.end11, %entry
  %3 = load i64, i64* %i, align 8, !dbg !8184
  %cmp = icmp sgt i64 %3, 0, !dbg !8186
  br i1 %cmp, label %for.body, label %for.end, !dbg !8187

for.body:                                         ; preds = %for.cond
  %4 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8188
  %state = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %4, i32 0, i32 14, !dbg !8191
  %bits = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state, i32 0, i32 2, !dbg !8192
  %5 = load i64, i64* %bits, align 8, !dbg !8192
  %cmp1 = icmp eq i64 %5, 0, !dbg !8193
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8194

if.then:                                          ; preds = %for.body
  %6 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8195
  %endian = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %6, i32 0, i32 13, !dbg !8197
  %7 = load i32, i32* %endian, align 8, !dbg !8197
  %8 = load i8*, i8** %pixels.addr, align 8, !dbg !8198
  %9 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8199
  %state2 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %9, i32 0, i32 14, !dbg !8200
  %pixel = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state2, i32 0, i32 1, !dbg !8201
  %call = call i8* @PushLongPixel(i32 %7, i8* %8, i32* %pixel), !dbg !8202
  store i8* %call, i8** %pixels.addr, align 8, !dbg !8203
  %10 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8204
  %state3 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %10, i32 0, i32 14, !dbg !8205
  %bits4 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state3, i32 0, i32 2, !dbg !8206
  store i64 32, i64* %bits4, align 8, !dbg !8207
  br label %if.end, !dbg !8208

if.end:                                           ; preds = %if.then, %for.body
  %11 = load i64, i64* %i, align 8, !dbg !8209
  store i64 %11, i64* %quantum_bits, align 8, !dbg !8210
  %12 = load i64, i64* %quantum_bits, align 8, !dbg !8211
  %13 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8213
  %state5 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %13, i32 0, i32 14, !dbg !8214
  %bits6 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state5, i32 0, i32 2, !dbg !8215
  %14 = load i64, i64* %bits6, align 8, !dbg !8215
  %cmp7 = icmp ugt i64 %12, %14, !dbg !8216
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !8217

if.then8:                                         ; preds = %if.end
  %15 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8218
  %state9 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %15, i32 0, i32 14, !dbg !8219
  %bits10 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state9, i32 0, i32 2, !dbg !8220
  %16 = load i64, i64* %bits10, align 8, !dbg !8220
  store i64 %16, i64* %quantum_bits, align 8, !dbg !8221
  br label %if.end11, !dbg !8222

if.end11:                                         ; preds = %if.then8, %if.end
  %17 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8223
  %state12 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %17, i32 0, i32 14, !dbg !8224
  %pixel13 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state12, i32 0, i32 1, !dbg !8225
  %18 = load i32, i32* %pixel13, align 8, !dbg !8225
  %19 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8226
  %state14 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %19, i32 0, i32 14, !dbg !8227
  %bits15 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state14, i32 0, i32 2, !dbg !8228
  %20 = load i64, i64* %bits15, align 8, !dbg !8228
  %sub = sub i64 32, %20, !dbg !8229
  %sh_prom = trunc i64 %sub to i32, !dbg !8230
  %shr = lshr i32 %18, %sh_prom, !dbg !8230
  %21 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8231
  %state16 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %21, i32 0, i32 14, !dbg !8232
  %mask = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state16, i32 0, i32 3, !dbg !8233
  %22 = load i32*, i32** %mask, align 8, !dbg !8233
  %23 = load i64, i64* %quantum_bits, align 8, !dbg !8234
  %arrayidx = getelementptr inbounds i32, i32* %22, i64 %23, !dbg !8231
  %24 = load i32, i32* %arrayidx, align 4, !dbg !8231
  %and = and i32 %shr, %24, !dbg !8235
  %25 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8236
  %depth17 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %25, i32 0, i32 0, !dbg !8237
  %26 = load i64, i64* %depth17, align 8, !dbg !8237
  %27 = load i64, i64* %i, align 8, !dbg !8238
  %sub18 = sub i64 %26, %27, !dbg !8239
  %sh_prom19 = trunc i64 %sub18 to i32, !dbg !8240
  %shl = shl i32 %and, %sh_prom19, !dbg !8240
  %28 = load i32*, i32** %quantum.addr, align 8, !dbg !8241
  %29 = load i32, i32* %28, align 4, !dbg !8242
  %or = or i32 %29, %shl, !dbg !8242
  store i32 %or, i32* %28, align 4, !dbg !8242
  %30 = load i64, i64* %quantum_bits, align 8, !dbg !8243
  %31 = load i64, i64* %i, align 8, !dbg !8244
  %sub20 = sub nsw i64 %31, %30, !dbg !8244
  store i64 %sub20, i64* %i, align 8, !dbg !8244
  %32 = load i64, i64* %quantum_bits, align 8, !dbg !8245
  %33 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info.addr, align 8, !dbg !8246
  %state21 = getelementptr inbounds %struct._QuantumInfo, %struct._QuantumInfo* %33, i32 0, i32 14, !dbg !8247
  %bits22 = getelementptr inbounds %struct._QuantumState, %struct._QuantumState* %state21, i32 0, i32 2, !dbg !8248
  %34 = load i64, i64* %bits22, align 8, !dbg !8249
  %sub23 = sub i64 %34, %32, !dbg !8249
  store i64 %sub23, i64* %bits22, align 8, !dbg !8249
  br label %for.cond, !dbg !8250, !llvm.loop !8251

for.end:                                          ; preds = %for.cond
  %35 = load i8*, i8** %pixels.addr, align 8, !dbg !8253
  ret i8* %35, !dbg !8254
}

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @PushColormapIndex(%struct._Image* %image, i64 %index, i32* %range_exception) #0 !dbg !8255 {
entry:
  %retval = alloca i16, align 2
  %image.addr = alloca %struct._Image*, align 8
  %index.addr = alloca i64, align 8
  %range_exception.addr = alloca i32*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !8261, metadata !DIExpression()), !dbg !8262
  store i32* %range_exception, i32** %range_exception.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %range_exception.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  %0 = load i64, i64* %index.addr, align 8, !dbg !8265
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8267
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 10, !dbg !8268
  %2 = load i64, i64* %colors, align 8, !dbg !8268
  %cmp = icmp ult i64 %0, %2, !dbg !8269
  br i1 %cmp, label %if.then, label %if.end, !dbg !8270

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %index.addr, align 8, !dbg !8271
  %conv = trunc i64 %3 to i16, !dbg !8272
  store i16 %conv, i16* %retval, align 2, !dbg !8273
  br label %return, !dbg !8273

if.end:                                           ; preds = %entry
  %4 = load i32*, i32** %range_exception.addr, align 8, !dbg !8274
  store i32 1, i32* %4, align 4, !dbg !8275
  store i16 0, i16* %retval, align 2, !dbg !8276
  br label %return, !dbg !8276

return:                                           ; preds = %if.end, %if.then
  %5 = load i16, i16* %retval, align 2, !dbg !8277
  ret i16 %5, !dbg !8277
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!506, !507, !508}
!llvm.ident = !{!509}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !434, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/quantum-import.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !47, !72, !84, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !374, !379, !409}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11, line: 25, baseType: !5, size: 32, elements: !12)
!11 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12 = !{!13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!13 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!14 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!17 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!18 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!19 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!20 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!21 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!22 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!23 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!24 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!25 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!26 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!27 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!28 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!29 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!30 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!31 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!32 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!33 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!34 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!35 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!36 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!37 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!38 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!39 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!40 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!41 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!42 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!43 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!46 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !48, line: 25, baseType: !5, size: 32, elements: !49)
!48 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71}
!50 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!68 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!69 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!70 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 75, baseType: !5, size: 32, elements: !74)
!73 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!74 = !{!75, !76, !77, !78, !79, !80, !81, !82, !83}
!75 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!80 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!81 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!82 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!83 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !85)
!85 = !{!86, !87}
!86 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !73, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 44, baseType: !5, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373}
!370 = !DIEnumerator(name: "UndefinedQuantumFormat", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "FloatingPointQuantumFormat", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "SignedQuantumFormat", value: 2, isUnsigned: true)
!373 = !DIEnumerator(name: "UnsignedQuantumFormat", value: 3, isUnsigned: true)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 37, baseType: !5, size: 32, elements: !375)
!375 = !{!376, !377, !378}
!376 = !DIEnumerator(name: "UndefinedQuantumAlpha", value: 0, isUnsigned: true)
!377 = !DIEnumerator(name: "AssociatedQuantumAlpha", value: 1, isUnsigned: true)
!378 = !DIEnumerator(name: "DisassociatedQuantumAlpha", value: 2, isUnsigned: true)
!379 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 52, baseType: !5, size: 32, elements: !380)
!380 = !{!381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408}
!381 = !DIEnumerator(name: "UndefinedQuantum", value: 0, isUnsigned: true)
!382 = !DIEnumerator(name: "AlphaQuantum", value: 1, isUnsigned: true)
!383 = !DIEnumerator(name: "BlackQuantum", value: 2, isUnsigned: true)
!384 = !DIEnumerator(name: "BlueQuantum", value: 3, isUnsigned: true)
!385 = !DIEnumerator(name: "CMYKAQuantum", value: 4, isUnsigned: true)
!386 = !DIEnumerator(name: "CMYKQuantum", value: 5, isUnsigned: true)
!387 = !DIEnumerator(name: "CyanQuantum", value: 6, isUnsigned: true)
!388 = !DIEnumerator(name: "GrayAlphaQuantum", value: 7, isUnsigned: true)
!389 = !DIEnumerator(name: "GrayQuantum", value: 8, isUnsigned: true)
!390 = !DIEnumerator(name: "GreenQuantum", value: 9, isUnsigned: true)
!391 = !DIEnumerator(name: "IndexAlphaQuantum", value: 10, isUnsigned: true)
!392 = !DIEnumerator(name: "IndexQuantum", value: 11, isUnsigned: true)
!393 = !DIEnumerator(name: "MagentaQuantum", value: 12, isUnsigned: true)
!394 = !DIEnumerator(name: "OpacityQuantum", value: 13, isUnsigned: true)
!395 = !DIEnumerator(name: "RedQuantum", value: 14, isUnsigned: true)
!396 = !DIEnumerator(name: "RGBAQuantum", value: 15, isUnsigned: true)
!397 = !DIEnumerator(name: "BGRAQuantum", value: 16, isUnsigned: true)
!398 = !DIEnumerator(name: "RGBOQuantum", value: 17, isUnsigned: true)
!399 = !DIEnumerator(name: "RGBQuantum", value: 18, isUnsigned: true)
!400 = !DIEnumerator(name: "YellowQuantum", value: 19, isUnsigned: true)
!401 = !DIEnumerator(name: "GrayPadQuantum", value: 20, isUnsigned: true)
!402 = !DIEnumerator(name: "RGBPadQuantum", value: 21, isUnsigned: true)
!403 = !DIEnumerator(name: "CbYCrYQuantum", value: 22, isUnsigned: true)
!404 = !DIEnumerator(name: "CbYCrQuantum", value: 23, isUnsigned: true)
!405 = !DIEnumerator(name: "CbYCrAQuantum", value: 24, isUnsigned: true)
!406 = !DIEnumerator(name: "CMYKOQuantum", value: 25, isUnsigned: true)
!407 = !DIEnumerator(name: "BGRQuantum", value: 26, isUnsigned: true)
!408 = !DIEnumerator(name: "BGROQuantum", value: 27, isUnsigned: true)
!409 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !410, line: 34, baseType: !5, size: 32, elements: !411)
!410 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!411 = !{!412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433}
!412 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!413 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!414 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!415 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!416 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!417 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!418 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!419 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!421 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!422 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!423 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!424 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!425 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!426 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!427 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!428 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!429 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!430 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!431 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!432 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!433 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!434 = !{!435, !436, !439, !440, !444, !488, !493, !456, !495, !5, !494, !497, !498, !500, !501, !450, !502, !503, !438, !504}
!435 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!438 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !442, line: 50, baseType: !443)
!442 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumInfo", file: !147, line: 85, baseType: !446)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumInfo", file: !447, line: 42, size: 1216, elements: !448)
!447 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!448 = !{!449, !452, !453, !455, !457, !458, !459, !460, !462, !463, !465, !466, !469, !470, !472, !482, !487}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !446, file: !447, line: 45, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !451, line: 46, baseType: !435)
!451 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!452 = !DIDerivedType(tag: DW_TAG_member, name: "quantum", scope: !446, file: !447, line: 46, baseType: !450, size: 64, offset: 64)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !446, file: !447, line: 49, baseType: !454, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumFormatType", file: !147, line: 50, baseType: !368)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !446, file: !447, line: 52, baseType: !456, size: 64, offset: 192)
!456 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !446, file: !447, line: 53, baseType: !456, size: 64, offset: 256)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !446, file: !447, line: 54, baseType: !456, size: 64, offset: 320)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !446, file: !447, line: 57, baseType: !450, size: 64, offset: 384)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "min_is_white", scope: !446, file: !447, line: 60, baseType: !461, size: 32, offset: 448)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !84)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "pack", scope: !446, file: !447, line: 61, baseType: !461, size: 32, offset: 480)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_type", scope: !446, file: !447, line: 64, baseType: !464, size: 32, offset: 512)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAlphaType", file: !147, line: 42, baseType: !374)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "number_threads", scope: !446, file: !447, line: 67, baseType: !450, size: 64, offset: 576)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !446, file: !447, line: 70, baseType: !467, size: 64, offset: 640)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !446, file: !447, line: 73, baseType: !450, size: 64, offset: 704)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !446, file: !447, line: 76, baseType: !471, size: 32, offset: 768)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !446, file: !447, line: 79, baseType: !473, size: 256, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumState", file: !447, line: 40, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumState", file: !447, line: 27, size: 256, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "inverse_scale", scope: !474, file: !447, line: 30, baseType: !456, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !474, file: !447, line: 33, baseType: !5, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !474, file: !447, line: 36, baseType: !450, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !474, file: !447, line: 39, baseType: !480, size: 64, offset: 192)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !446, file: !447, line: 82, baseType: !483, size: 64, offset: 1088)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !485, line: 26, baseType: !486)
!485 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!486 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !485, line: 25, flags: DIFlagFwdDecl)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !446, file: !447, line: 85, baseType: !450, size: 64, offset: 1152)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !489, line: 77, baseType: !490)
!489 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !491, line: 193, baseType: !492)
!491 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!492 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !494)
!494 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !496)
!496 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !499)
!499 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAny", file: !4, line: 170, baseType: !498)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !493)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !503)
!506 = !{i32 7, !"Dwarf Version", i32 4}
!507 = !{i32 2, !"Debug Info Version", i32 3}
!508 = !{i32 1, !"wchar_size", i32 4}
!509 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!510 = distinct !DISubprogram(name: "ImportQuantumPixels", scope: !1, file: !1, line: 3367, type: !511, scopeLine: 3370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !719)
!511 = !DISubroutineType(types: !512)
!512 = !{!450, !513, !440, !713, !715, !717, !718}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !73, line: 150, size: 105920, elements: !516)
!516 = !{!517, !519, !521, !523, !524, !526, !527, !528, !529, !530, !531, !532, !541, !542, !543, !544, !545, !559, !561, !562, !564, !567, !568, !569, !570, !571, !572, !580, !581, !582, !583, !584, !585, !587, !589, !590, !592, !594, !596, !598, !599, !600, !601, !602, !603, !604, !612, !627, !639, !640, !641, !642, !646, !650, !654, !655, !656, !657, !658, !672, !673, !675, !676, !684, !685, !687, !688, !689, !690, !691, !692, !694, !695, !696, !697, !698, !699, !700, !702, !703, !704, !705, !706, !710, !712}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !515, file: !73, line: 153, baseType: !518, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !3)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !515, file: !73, line: 156, baseType: !520, size: 32, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !11, line: 61, baseType: !10)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !515, file: !73, line: 159, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !48, line: 49, baseType: !47)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !515, file: !73, line: 162, baseType: !450, size: 64, offset: 128)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !515, file: !73, line: 165, baseType: !525, size: 32, offset: 192)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !73, line: 86, baseType: !72)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !515, file: !73, line: 168, baseType: !461, size: 32, offset: 224)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !515, file: !73, line: 169, baseType: !461, size: 32, offset: 256)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !515, file: !73, line: 172, baseType: !450, size: 64, offset: 320)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !515, file: !73, line: 173, baseType: !450, size: 64, offset: 384)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !515, file: !73, line: 174, baseType: !450, size: 64, offset: 448)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !515, file: !73, line: 175, baseType: !450, size: 64, offset: 512)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !515, file: !73, line: 178, baseType: !533, size: 64, offset: 576)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !535, file: !326, line: 143, baseType: !493, size: 16)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !535, file: !326, line: 144, baseType: !493, size: 16, offset: 16)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !535, file: !326, line: 145, baseType: !493, size: 16, offset: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !535, file: !326, line: 146, baseType: !493, size: 16, offset: 48)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !515, file: !73, line: 179, baseType: !534, size: 64, offset: 640)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !515, file: !73, line: 180, baseType: !534, size: 64, offset: 704)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !515, file: !73, line: 181, baseType: !534, size: 64, offset: 768)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !515, file: !73, line: 184, baseType: !456, size: 64, offset: 832)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !515, file: !73, line: 187, baseType: !546, size: 768, offset: 896)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !73, line: 128, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !73, line: 121, size: 768, elements: !548)
!548 = !{!549, !556, !557, !558}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !547, file: !73, line: 124, baseType: !550, size: 192)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !73, line: 101, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !73, line: 95, size: 192, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !551, file: !73, line: 98, baseType: !456, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !551, file: !73, line: 99, baseType: !456, size: 64, offset: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !551, file: !73, line: 100, baseType: !456, size: 64, offset: 128)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !547, file: !73, line: 125, baseType: !550, size: 192, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !547, file: !73, line: 126, baseType: !550, size: 192, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !547, file: !73, line: 127, baseType: !550, size: 192, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !515, file: !73, line: 190, baseType: !560, size: 32, offset: 1664)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !515, file: !73, line: 193, baseType: !439, size: 64, offset: 1728)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !515, file: !73, line: 196, baseType: !563, size: 32, offset: 1792)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !73, line: 93, baseType: !96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !515, file: !73, line: 199, baseType: !565, size: 64, offset: 1856)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !515, file: !73, line: 200, baseType: !565, size: 64, offset: 1920)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !515, file: !73, line: 201, baseType: !565, size: 64, offset: 1984)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !515, file: !73, line: 204, baseType: !488, size: 64, offset: 2048)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !515, file: !73, line: 207, baseType: !456, size: 64, offset: 2112)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !515, file: !73, line: 208, baseType: !456, size: 64, offset: 2176)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !515, file: !73, line: 211, baseType: !573, size: 256, offset: 2240)
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !575)
!575 = !{!576, !577, !578, !579}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !574, file: !153, line: 124, baseType: !450, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !574, file: !153, line: 125, baseType: !450, size: 64, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !574, file: !153, line: 128, baseType: !488, size: 64, offset: 128)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !574, file: !153, line: 129, baseType: !488, size: 64, offset: 192)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !515, file: !73, line: 212, baseType: !573, size: 256, offset: 2496)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !515, file: !73, line: 213, baseType: !573, size: 256, offset: 2752)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !515, file: !73, line: 216, baseType: !456, size: 64, offset: 3008)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !515, file: !73, line: 217, baseType: !456, size: 64, offset: 3072)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !515, file: !73, line: 218, baseType: !456, size: 64, offset: 3136)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !515, file: !73, line: 221, baseType: !586, size: 32, offset: 3200)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !515, file: !73, line: 224, baseType: !588, size: 32, offset: 3232)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !73, line: 73, baseType: !136)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !515, file: !73, line: 227, baseType: !471, size: 32, offset: 3264)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !515, file: !73, line: 230, baseType: !591, size: 32, offset: 3296)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !515, file: !73, line: 233, baseType: !593, size: 32, offset: 3328)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !515, file: !73, line: 236, baseType: !595, size: 32, offset: 3360)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !515, file: !73, line: 239, baseType: !597, size: 64, offset: 3392)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !515, file: !73, line: 242, baseType: !450, size: 64, offset: 3456)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !515, file: !73, line: 243, baseType: !450, size: 64, offset: 3520)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !515, file: !73, line: 246, baseType: !488, size: 64, offset: 3584)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !515, file: !73, line: 249, baseType: !450, size: 64, offset: 3648)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !515, file: !73, line: 250, baseType: !450, size: 64, offset: 3712)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !515, file: !73, line: 253, baseType: !488, size: 64, offset: 3776)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !515, file: !73, line: 256, baseType: !605, size: 192, offset: 3840)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !606, line: 68, baseType: !607)
!606 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !606, line: 62, size: 192, elements: !608)
!608 = !{!609, !610, !611}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !607, file: !606, line: 65, baseType: !456, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !607, file: !606, line: 66, baseType: !456, size: 64, offset: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !607, file: !606, line: 67, baseType: !456, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !515, file: !73, line: 259, baseType: !613, size: 512, offset: 4032)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !614)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !615)
!615 = !{!616, !623, !624, !626}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !614, file: !247, line: 43, baseType: !617, size: 192)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !618)
!618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !619)
!619 = !{!620, !621, !622}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !618, file: !247, line: 35, baseType: !456, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !618, file: !247, line: 36, baseType: !456, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !618, file: !247, line: 37, baseType: !456, size: 64, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !614, file: !247, line: 44, baseType: !617, size: 192, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !614, file: !247, line: 47, baseType: !625, size: 32, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !614, file: !247, line: 50, baseType: !450, size: 64, offset: 448)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !515, file: !73, line: 262, baseType: !628, size: 64, offset: 4544)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !629, line: 26, baseType: !630)
!629 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!461, !633, !635, !638, !439}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!635 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !636)
!636 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !637)
!637 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !498)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !515, file: !73, line: 265, baseType: !439, size: 64, offset: 4608)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !515, file: !73, line: 266, baseType: !439, size: 64, offset: 4672)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !515, file: !73, line: 267, baseType: !439, size: 64, offset: 4736)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !515, file: !73, line: 270, baseType: !643, size: 64, offset: 4800)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !48, line: 52, baseType: !645)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !48, line: 51, flags: DIFlagFwdDecl)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !515, file: !73, line: 273, baseType: !647, size: 64, offset: 4864)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !649)
!649 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !515, file: !73, line: 276, baseType: !651, size: 32768, offset: 4928)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !566, size: 32768, elements: !652)
!652 = !{!653}
!653 = !DISubrange(count: 4096)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !515, file: !73, line: 277, baseType: !651, size: 32768, offset: 37696)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !515, file: !73, line: 278, baseType: !651, size: 32768, offset: 70464)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !515, file: !73, line: 281, baseType: !450, size: 64, offset: 103232)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !515, file: !73, line: 282, baseType: !450, size: 64, offset: 103296)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !515, file: !73, line: 285, baseType: !659, size: 448, offset: 103360)
!659 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !661)
!661 = !{!662, !664, !666, !667, !668, !669, !670, !671}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !660, file: !253, line: 105, baseType: !663, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !660, file: !253, line: 108, baseType: !665, size: 32, offset: 32)
!665 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !660, file: !253, line: 111, baseType: !565, size: 64, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !660, file: !253, line: 112, baseType: !565, size: 64, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !660, file: !253, line: 115, baseType: !439, size: 64, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !660, file: !253, line: 118, baseType: !461, size: 32, offset: 256)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !660, file: !253, line: 121, baseType: !483, size: 64, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !660, file: !253, line: 124, baseType: !450, size: 64, offset: 384)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !515, file: !73, line: 288, baseType: !461, size: 32, offset: 103808)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !515, file: !73, line: 291, baseType: !674, size: 64, offset: 103872)
!674 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !488)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !515, file: !73, line: 294, baseType: !483, size: 64, offset: 103936)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !515, file: !73, line: 297, baseType: !677, size: 256, offset: 104000)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !679)
!679 = !{!680, !681, !682, !683}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !678, file: !89, line: 30, baseType: !565, size: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !678, file: !89, line: 33, baseType: !450, size: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !678, file: !89, line: 36, baseType: !468, size: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !678, file: !89, line: 39, baseType: !450, size: 64, offset: 192)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !515, file: !73, line: 298, baseType: !677, size: 256, offset: 104256)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !515, file: !73, line: 299, baseType: !686, size: 64, offset: 104512)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !515, file: !73, line: 302, baseType: !450, size: 64, offset: 104576)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !515, file: !73, line: 305, baseType: !450, size: 64, offset: 104640)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !515, file: !73, line: 308, baseType: !597, size: 64, offset: 104704)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !515, file: !73, line: 309, baseType: !597, size: 64, offset: 104768)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !515, file: !73, line: 310, baseType: !597, size: 64, offset: 104832)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !515, file: !73, line: 313, baseType: !693, size: 32, offset: 104896)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !515, file: !73, line: 316, baseType: !461, size: 32, offset: 104928)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !515, file: !73, line: 319, baseType: !534, size: 64, offset: 104960)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !515, file: !73, line: 322, baseType: !597, size: 64, offset: 105024)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !515, file: !73, line: 325, baseType: !573, size: 256, offset: 105088)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !515, file: !73, line: 328, baseType: !439, size: 64, offset: 105344)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !515, file: !73, line: 329, baseType: !439, size: 64, offset: 105408)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !515, file: !73, line: 332, baseType: !701, size: 32, offset: 105472)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !73, line: 61, baseType: !342)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !515, file: !73, line: 335, baseType: !461, size: 32, offset: 105504)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !515, file: !73, line: 338, baseType: !498, size: 64, offset: 105536)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !515, file: !73, line: 341, baseType: !461, size: 32, offset: 105600)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !515, file: !73, line: 344, baseType: !450, size: 64, offset: 105664)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !515, file: !73, line: 347, baseType: !707, size: 64, offset: 105728)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !708, line: 7, baseType: !709)
!708 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !491, line: 160, baseType: !492)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !515, file: !73, line: 350, baseType: !711, size: 32, offset: 105792)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !515, file: !73, line: 353, baseType: !450, size: 64, offset: 105856)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumType", file: !147, line: 82, baseType: !379)
!717 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !436)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!719 = !{}
!720 = !DILocalVariable(name: "image", arg: 1, scope: !510, file: !1, line: 3367, type: !513)
!721 = !DILocation(line: 3367, column: 48, scope: !510)
!722 = !DILocalVariable(name: "image_view", arg: 2, scope: !510, file: !1, line: 3367, type: !440)
!723 = !DILocation(line: 3367, column: 65, scope: !510)
!724 = !DILocalVariable(name: "quantum_info", arg: 3, scope: !510, file: !1, line: 3368, type: !713)
!725 = !DILocation(line: 3368, column: 22, scope: !510)
!726 = !DILocalVariable(name: "quantum_type", arg: 4, scope: !510, file: !1, line: 3368, type: !715)
!727 = !DILocation(line: 3368, column: 53, scope: !510)
!728 = !DILocalVariable(name: "pixels", arg: 5, scope: !510, file: !1, line: 3369, type: !717)
!729 = !DILocation(line: 3369, column: 33, scope: !510)
!730 = !DILocalVariable(name: "exception", arg: 6, scope: !510, file: !1, line: 3369, type: !718)
!731 = !DILocation(line: 3369, column: 55, scope: !510)
!732 = !DILocalVariable(name: "number_pixels", scope: !510, file: !1, line: 3372, type: !498)
!733 = !DILocation(line: 3372, column: 5, scope: !510)
!734 = !DILocalVariable(name: "p", scope: !510, file: !1, line: 3375, type: !717)
!735 = !DILocation(line: 3375, column: 15, scope: !510)
!736 = !DILocalVariable(name: "indexes", scope: !510, file: !1, line: 3378, type: !737)
!737 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !502)
!738 = !DILocation(line: 3378, column: 15, scope: !510)
!739 = !DILocalVariable(name: "x", scope: !510, file: !1, line: 3381, type: !488)
!740 = !DILocation(line: 3381, column: 5, scope: !510)
!741 = !DILocalVariable(name: "q", scope: !510, file: !1, line: 3384, type: !742)
!742 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !533)
!743 = !DILocation(line: 3384, column: 15, scope: !510)
!744 = !DILocalVariable(name: "extent", scope: !510, file: !1, line: 3387, type: !450)
!745 = !DILocation(line: 3387, column: 5, scope: !510)
!746 = !DILocation(line: 3391, column: 7, scope: !747)
!747 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3391, column: 7)
!748 = !DILocation(line: 3391, column: 14, scope: !747)
!749 = !DILocation(line: 3391, column: 20, scope: !747)
!750 = !DILocation(line: 3391, column: 7, scope: !510)
!751 = !DILocation(line: 3392, column: 61, scope: !747)
!752 = !DILocation(line: 3392, column: 68, scope: !747)
!753 = !DILocation(line: 3392, column: 12, scope: !747)
!754 = !DILocation(line: 3392, column: 5, scope: !747)
!755 = !DILocation(line: 3395, column: 7, scope: !756)
!756 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3395, column: 7)
!757 = !DILocation(line: 3395, column: 14, scope: !756)
!758 = !DILocation(line: 3395, column: 7, scope: !510)
!759 = !DILocation(line: 3396, column: 29, scope: !756)
!760 = !DILocation(line: 3396, column: 12, scope: !756)
!761 = !DILocation(line: 3396, column: 11, scope: !756)
!762 = !DILocation(line: 3396, column: 5, scope: !756)
!763 = !DILocation(line: 3397, column: 4, scope: !510)
!764 = !DILocation(line: 3398, column: 5, scope: !510)
!765 = !DILocation(line: 3398, column: 4, scope: !510)
!766 = !DILocation(line: 3399, column: 7, scope: !767)
!767 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3399, column: 7)
!768 = !DILocation(line: 3399, column: 18, scope: !767)
!769 = !DILocation(line: 3399, column: 7, scope: !510)
!770 = !DILocation(line: 3401, column: 36, scope: !771)
!771 = distinct !DILexicalBlock(scope: !767, file: !1, line: 3400, column: 5)
!772 = !DILocation(line: 3401, column: 21, scope: !771)
!773 = !DILocation(line: 3401, column: 20, scope: !771)
!774 = !DILocation(line: 3402, column: 32, scope: !771)
!775 = !DILocation(line: 3402, column: 9, scope: !771)
!776 = !DILocation(line: 3402, column: 8, scope: !771)
!777 = !DILocation(line: 3403, column: 38, scope: !771)
!778 = !DILocation(line: 3403, column: 15, scope: !771)
!779 = !DILocation(line: 3403, column: 14, scope: !771)
!780 = !DILocation(line: 3404, column: 5, scope: !771)
!781 = !DILocation(line: 3407, column: 40, scope: !782)
!782 = distinct !DILexicalBlock(scope: !767, file: !1, line: 3406, column: 5)
!783 = !DILocation(line: 3407, column: 21, scope: !782)
!784 = !DILocation(line: 3407, column: 20, scope: !782)
!785 = !DILocation(line: 3408, column: 41, scope: !782)
!786 = !DILocation(line: 3408, column: 9, scope: !782)
!787 = !DILocation(line: 3408, column: 8, scope: !782)
!788 = !DILocation(line: 3409, column: 47, scope: !782)
!789 = !DILocation(line: 3409, column: 15, scope: !782)
!790 = !DILocation(line: 3409, column: 14, scope: !782)
!791 = !DILocation(line: 3411, column: 37, scope: !510)
!792 = !DILocation(line: 3411, column: 3, scope: !510)
!793 = !DILocation(line: 3412, column: 27, scope: !510)
!794 = !DILocation(line: 3412, column: 33, scope: !510)
!795 = !DILocation(line: 3412, column: 46, scope: !510)
!796 = !DILocation(line: 3412, column: 10, scope: !510)
!797 = !DILocation(line: 3412, column: 9, scope: !510)
!798 = !DILocation(line: 3413, column: 11, scope: !510)
!799 = !DILocation(line: 3413, column: 3, scope: !510)
!800 = !DILocation(line: 3417, column: 42, scope: !801)
!801 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3416, column: 5)
!802 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3414, column: 3)
!803 = !DILocation(line: 3417, column: 55, scope: !801)
!804 = !DILocation(line: 3417, column: 69, scope: !801)
!805 = !DILocation(line: 3417, column: 71, scope: !801)
!806 = !DILocation(line: 3417, column: 7, scope: !801)
!807 = !DILocation(line: 3418, column: 7, scope: !801)
!808 = !DILocation(line: 3422, column: 40, scope: !809)
!809 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3421, column: 5)
!810 = !DILocation(line: 3422, column: 53, scope: !809)
!811 = !DILocation(line: 3422, column: 67, scope: !809)
!812 = !DILocation(line: 3422, column: 69, scope: !809)
!813 = !DILocation(line: 3422, column: 7, scope: !809)
!814 = !DILocation(line: 3423, column: 7, scope: !809)
!815 = !DILocation(line: 3428, column: 41, scope: !816)
!816 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3427, column: 5)
!817 = !DILocation(line: 3428, column: 54, scope: !816)
!818 = !DILocation(line: 3428, column: 68, scope: !816)
!819 = !DILocation(line: 3428, column: 70, scope: !816)
!820 = !DILocation(line: 3428, column: 7, scope: !816)
!821 = !DILocation(line: 3429, column: 7, scope: !816)
!822 = !DILocation(line: 3433, column: 26, scope: !823)
!823 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3432, column: 5)
!824 = !DILocation(line: 3433, column: 48, scope: !823)
!825 = !DILocation(line: 3433, column: 61, scope: !823)
!826 = !DILocation(line: 3433, column: 75, scope: !823)
!827 = !DILocation(line: 3433, column: 77, scope: !823)
!828 = !DILocation(line: 3434, column: 9, scope: !823)
!829 = !DILocation(line: 3434, column: 17, scope: !823)
!830 = !DILocation(line: 3433, column: 7, scope: !823)
!831 = !DILocation(line: 3435, column: 7, scope: !823)
!832 = !DILocation(line: 3440, column: 41, scope: !833)
!833 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3439, column: 5)
!834 = !DILocation(line: 3440, column: 54, scope: !833)
!835 = !DILocation(line: 3440, column: 68, scope: !833)
!836 = !DILocation(line: 3440, column: 70, scope: !833)
!837 = !DILocation(line: 3440, column: 7, scope: !833)
!838 = !DILocation(line: 3441, column: 7, scope: !833)
!839 = !DILocation(line: 3445, column: 27, scope: !840)
!840 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3444, column: 5)
!841 = !DILocation(line: 3445, column: 49, scope: !840)
!842 = !DILocation(line: 3445, column: 62, scope: !840)
!843 = !DILocation(line: 3445, column: 76, scope: !840)
!844 = !DILocation(line: 3446, column: 9, scope: !840)
!845 = !DILocation(line: 3445, column: 7, scope: !840)
!846 = !DILocation(line: 3447, column: 7, scope: !840)
!847 = !DILocation(line: 3451, column: 25, scope: !848)
!848 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3450, column: 5)
!849 = !DILocation(line: 3451, column: 47, scope: !848)
!850 = !DILocation(line: 3451, column: 60, scope: !848)
!851 = !DILocation(line: 3451, column: 74, scope: !848)
!852 = !DILocation(line: 3451, column: 76, scope: !848)
!853 = !DILocation(line: 3452, column: 9, scope: !848)
!854 = !DILocation(line: 3452, column: 17, scope: !848)
!855 = !DILocation(line: 3451, column: 7, scope: !848)
!856 = !DILocation(line: 3453, column: 7, scope: !848)
!857 = !DILocation(line: 3458, column: 26, scope: !858)
!858 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3457, column: 5)
!859 = !DILocation(line: 3458, column: 48, scope: !858)
!860 = !DILocation(line: 3458, column: 61, scope: !858)
!861 = !DILocation(line: 3458, column: 75, scope: !858)
!862 = !DILocation(line: 3458, column: 77, scope: !858)
!863 = !DILocation(line: 3459, column: 9, scope: !858)
!864 = !DILocation(line: 3459, column: 17, scope: !858)
!865 = !DILocation(line: 3458, column: 7, scope: !858)
!866 = !DILocation(line: 3460, column: 7, scope: !858)
!867 = !DILocation(line: 3464, column: 25, scope: !868)
!868 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3463, column: 5)
!869 = !DILocation(line: 3464, column: 47, scope: !868)
!870 = !DILocation(line: 3464, column: 60, scope: !868)
!871 = !DILocation(line: 3464, column: 74, scope: !868)
!872 = !DILocation(line: 3464, column: 76, scope: !868)
!873 = !DILocation(line: 3464, column: 7, scope: !868)
!874 = !DILocation(line: 3465, column: 7, scope: !868)
!875 = !DILocation(line: 3469, column: 46, scope: !876)
!876 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3468, column: 5)
!877 = !DILocation(line: 3469, column: 59, scope: !876)
!878 = !DILocation(line: 3469, column: 73, scope: !876)
!879 = !DILocation(line: 3469, column: 75, scope: !876)
!880 = !DILocation(line: 3469, column: 7, scope: !876)
!881 = !DILocation(line: 3470, column: 7, scope: !876)
!882 = !DILocation(line: 3475, column: 42, scope: !883)
!883 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3474, column: 5)
!884 = !DILocation(line: 3475, column: 55, scope: !883)
!885 = !DILocation(line: 3475, column: 69, scope: !883)
!886 = !DILocation(line: 3475, column: 71, scope: !883)
!887 = !DILocation(line: 3475, column: 7, scope: !883)
!888 = !DILocation(line: 3476, column: 7, scope: !883)
!889 = !DILocation(line: 3480, column: 26, scope: !890)
!890 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3479, column: 5)
!891 = !DILocation(line: 3480, column: 48, scope: !890)
!892 = !DILocation(line: 3480, column: 61, scope: !890)
!893 = !DILocation(line: 3480, column: 75, scope: !890)
!894 = !DILocation(line: 3480, column: 77, scope: !890)
!895 = !DILocation(line: 3481, column: 9, scope: !890)
!896 = !DILocation(line: 3481, column: 17, scope: !890)
!897 = !DILocation(line: 3480, column: 7, scope: !890)
!898 = !DILocation(line: 3482, column: 7, scope: !890)
!899 = !DILocation(line: 3486, column: 31, scope: !900)
!900 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3485, column: 5)
!901 = !DILocation(line: 3486, column: 53, scope: !900)
!902 = !DILocation(line: 3486, column: 66, scope: !900)
!903 = !DILocation(line: 3487, column: 9, scope: !900)
!904 = !DILocation(line: 3487, column: 11, scope: !900)
!905 = !DILocation(line: 3487, column: 13, scope: !900)
!906 = !DILocation(line: 3487, column: 21, scope: !900)
!907 = !DILocation(line: 3486, column: 7, scope: !900)
!908 = !DILocation(line: 3488, column: 7, scope: !900)
!909 = !DILocation(line: 3493, column: 40, scope: !910)
!910 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3492, column: 5)
!911 = !DILocation(line: 3493, column: 53, scope: !910)
!912 = !DILocation(line: 3493, column: 67, scope: !910)
!913 = !DILocation(line: 3493, column: 69, scope: !910)
!914 = !DILocation(line: 3493, column: 7, scope: !910)
!915 = !DILocation(line: 3494, column: 7, scope: !910)
!916 = !DILocation(line: 3499, column: 40, scope: !917)
!917 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3498, column: 5)
!918 = !DILocation(line: 3499, column: 53, scope: !917)
!919 = !DILocation(line: 3499, column: 67, scope: !917)
!920 = !DILocation(line: 3499, column: 69, scope: !917)
!921 = !DILocation(line: 3499, column: 7, scope: !917)
!922 = !DILocation(line: 3500, column: 7, scope: !917)
!923 = !DILocation(line: 3506, column: 41, scope: !924)
!924 = distinct !DILexicalBlock(scope: !802, file: !1, line: 3505, column: 5)
!925 = !DILocation(line: 3506, column: 54, scope: !924)
!926 = !DILocation(line: 3506, column: 68, scope: !924)
!927 = !DILocation(line: 3506, column: 70, scope: !924)
!928 = !DILocation(line: 3506, column: 7, scope: !924)
!929 = !DILocation(line: 3507, column: 7, scope: !924)
!930 = !DILocation(line: 3510, column: 7, scope: !802)
!931 = !DILocation(line: 3512, column: 8, scope: !932)
!932 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3512, column: 7)
!933 = !DILocation(line: 3512, column: 21, scope: !932)
!934 = !DILocation(line: 3512, column: 38, scope: !932)
!935 = !DILocation(line: 3512, column: 42, scope: !932)
!936 = !DILocation(line: 3512, column: 55, scope: !932)
!937 = !DILocation(line: 3512, column: 7, scope: !510)
!938 = !DILocalVariable(name: "quantum", scope: !939, file: !1, line: 3515, type: !493)
!939 = distinct !DILexicalBlock(scope: !932, file: !1, line: 3513, column: 5)
!940 = !DILocation(line: 3515, column: 9, scope: !939)
!941 = !DILocalVariable(name: "q", scope: !939, file: !1, line: 3518, type: !742)
!942 = !DILocation(line: 3518, column: 19, scope: !939)
!943 = !DILocation(line: 3520, column: 32, scope: !939)
!944 = !DILocation(line: 3520, column: 9, scope: !939)
!945 = !DILocation(line: 3520, column: 8, scope: !939)
!946 = !DILocation(line: 3521, column: 11, scope: !947)
!947 = distinct !DILexicalBlock(scope: !939, file: !1, line: 3521, column: 11)
!948 = !DILocation(line: 3521, column: 22, scope: !947)
!949 = !DILocation(line: 3521, column: 11, scope: !939)
!950 = !DILocation(line: 3522, column: 43, scope: !947)
!951 = !DILocation(line: 3522, column: 11, scope: !947)
!952 = !DILocation(line: 3522, column: 10, scope: !947)
!953 = !DILocation(line: 3522, column: 9, scope: !947)
!954 = !DILocation(line: 3523, column: 13, scope: !955)
!955 = distinct !DILexicalBlock(scope: !939, file: !1, line: 3523, column: 7)
!956 = !DILocation(line: 3523, column: 12, scope: !955)
!957 = !DILocation(line: 3523, column: 17, scope: !958)
!958 = distinct !DILexicalBlock(scope: !955, file: !1, line: 3523, column: 7)
!959 = !DILocation(line: 3523, column: 31, scope: !958)
!960 = !DILocation(line: 3523, column: 19, scope: !958)
!961 = !DILocation(line: 3523, column: 7, scope: !955)
!962 = !DILocation(line: 3525, column: 17, scope: !963)
!963 = distinct !DILexicalBlock(scope: !958, file: !1, line: 3524, column: 7)
!964 = !DILocation(line: 3525, column: 16, scope: !963)
!965 = !DILocation(line: 3526, column: 9, scope: !963)
!966 = !DILocation(line: 3527, column: 9, scope: !963)
!967 = !DILocation(line: 3528, column: 10, scope: !963)
!968 = !DILocation(line: 3529, column: 7, scope: !963)
!969 = !DILocation(line: 3523, column: 47, scope: !958)
!970 = !DILocation(line: 3523, column: 7, scope: !958)
!971 = distinct !{!971, !961, !972}
!972 = !DILocation(line: 3529, column: 7, scope: !955)
!973 = !DILocation(line: 3530, column: 5, scope: !939)
!974 = !DILocation(line: 3531, column: 8, scope: !975)
!975 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3531, column: 7)
!976 = !DILocation(line: 3531, column: 21, scope: !975)
!977 = !DILocation(line: 3531, column: 37, scope: !975)
!978 = !DILocation(line: 3531, column: 41, scope: !975)
!979 = !DILocation(line: 3531, column: 54, scope: !975)
!980 = !DILocation(line: 3531, column: 7, scope: !510)
!981 = !DILocalVariable(name: "q", scope: !982, file: !1, line: 3534, type: !742)
!982 = distinct !DILexicalBlock(scope: !975, file: !1, line: 3532, column: 5)
!983 = !DILocation(line: 3534, column: 19, scope: !982)
!984 = !DILocation(line: 3536, column: 32, scope: !982)
!985 = !DILocation(line: 3536, column: 9, scope: !982)
!986 = !DILocation(line: 3536, column: 8, scope: !982)
!987 = !DILocation(line: 3537, column: 11, scope: !988)
!988 = distinct !DILexicalBlock(scope: !982, file: !1, line: 3537, column: 11)
!989 = !DILocation(line: 3537, column: 22, scope: !988)
!990 = !DILocation(line: 3537, column: 11, scope: !982)
!991 = !DILocation(line: 3538, column: 43, scope: !988)
!992 = !DILocation(line: 3538, column: 11, scope: !988)
!993 = !DILocation(line: 3538, column: 10, scope: !988)
!994 = !DILocation(line: 3538, column: 9, scope: !988)
!995 = !DILocation(line: 3539, column: 13, scope: !996)
!996 = distinct !DILexicalBlock(scope: !982, file: !1, line: 3539, column: 7)
!997 = !DILocation(line: 3539, column: 12, scope: !996)
!998 = !DILocation(line: 3539, column: 17, scope: !999)
!999 = distinct !DILexicalBlock(scope: !996, file: !1, line: 3539, column: 7)
!1000 = !DILocation(line: 3539, column: 31, scope: !999)
!1001 = !DILocation(line: 3539, column: 19, scope: !999)
!1002 = !DILocation(line: 3539, column: 7, scope: !996)
!1003 = !DILocation(line: 3541, column: 9, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !999, file: !1, line: 3540, column: 7)
!1005 = !DILocation(line: 3542, column: 10, scope: !1004)
!1006 = !DILocation(line: 3543, column: 7, scope: !1004)
!1007 = !DILocation(line: 3539, column: 47, scope: !999)
!1008 = !DILocation(line: 3539, column: 7, scope: !999)
!1009 = distinct !{!1009, !1002, !1010}
!1010 = !DILocation(line: 3543, column: 7, scope: !996)
!1011 = !DILocation(line: 3544, column: 5, scope: !982)
!1012 = !DILocation(line: 3545, column: 7, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !510, file: !1, line: 3545, column: 7)
!1014 = !DILocation(line: 3545, column: 21, scope: !1013)
!1015 = !DILocation(line: 3545, column: 32, scope: !1013)
!1016 = !DILocation(line: 3545, column: 7, scope: !510)
!1017 = !DILocalVariable(name: "alpha", scope: !1018, file: !1, line: 3548, type: !495)
!1018 = distinct !DILexicalBlock(scope: !1013, file: !1, line: 3546, column: 5)
!1019 = !DILocation(line: 3548, column: 9, scope: !1018)
!1020 = !DILocalVariable(name: "q", scope: !1018, file: !1, line: 3551, type: !742)
!1021 = !DILocation(line: 3551, column: 19, scope: !1018)
!1022 = !DILocation(line: 3556, column: 32, scope: !1018)
!1023 = !DILocation(line: 3556, column: 9, scope: !1018)
!1024 = !DILocation(line: 3556, column: 8, scope: !1018)
!1025 = !DILocation(line: 3557, column: 11, scope: !1026)
!1026 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 3557, column: 11)
!1027 = !DILocation(line: 3557, column: 22, scope: !1026)
!1028 = !DILocation(line: 3557, column: 11, scope: !1018)
!1029 = !DILocation(line: 3558, column: 43, scope: !1026)
!1030 = !DILocation(line: 3558, column: 11, scope: !1026)
!1031 = !DILocation(line: 3558, column: 10, scope: !1026)
!1032 = !DILocation(line: 3558, column: 9, scope: !1026)
!1033 = !DILocation(line: 3559, column: 13, scope: !1034)
!1034 = distinct !DILexicalBlock(scope: !1018, file: !1, line: 3559, column: 7)
!1035 = !DILocation(line: 3559, column: 12, scope: !1034)
!1036 = !DILocation(line: 3559, column: 17, scope: !1037)
!1037 = distinct !DILexicalBlock(scope: !1034, file: !1, line: 3559, column: 7)
!1038 = !DILocation(line: 3559, column: 31, scope: !1037)
!1039 = !DILocation(line: 3559, column: 19, scope: !1037)
!1040 = !DILocation(line: 3559, column: 7, scope: !1034)
!1041 = !DILocation(line: 3561, column: 28, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !1037, file: !1, line: 3560, column: 7)
!1043 = !DILocation(line: 3561, column: 27, scope: !1042)
!1044 = !DILocation(line: 3561, column: 15, scope: !1042)
!1045 = !DILocation(line: 3561, column: 14, scope: !1042)
!1046 = !DILocation(line: 3562, column: 37, scope: !1042)
!1047 = !DILocation(line: 3562, column: 15, scope: !1042)
!1048 = !DILocation(line: 3562, column: 14, scope: !1042)
!1049 = !DILocation(line: 3563, column: 9, scope: !1042)
!1050 = !DILocation(line: 3565, column: 9, scope: !1042)
!1051 = !DILocation(line: 3567, column: 9, scope: !1042)
!1052 = !DILocation(line: 3569, column: 10, scope: !1042)
!1053 = !DILocation(line: 3570, column: 7, scope: !1042)
!1054 = !DILocation(line: 3559, column: 47, scope: !1037)
!1055 = !DILocation(line: 3559, column: 7, scope: !1037)
!1056 = distinct !{!1056, !1040, !1057}
!1057 = !DILocation(line: 3570, column: 7, scope: !1034)
!1058 = !DILocation(line: 3571, column: 5, scope: !1018)
!1059 = !DILocation(line: 3572, column: 10, scope: !510)
!1060 = !DILocation(line: 3572, column: 3, scope: !510)
!1061 = distinct !DISubprogram(name: "ImportAlphaQuantum", scope: !1, file: !1, line: 255, type: !1062, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !444, !638, !717, !742}
!1064 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !1061, file: !1, line: 255, type: !444)
!1065 = !DILocation(line: 255, column: 45, scope: !1061)
!1066 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !1061, file: !1, line: 256, type: !638)
!1067 = !DILocation(line: 256, column: 24, scope: !1061)
!1068 = !DILocalVariable(name: "p", arg: 3, scope: !1061, file: !1, line: 256, type: !717)
!1069 = !DILocation(line: 256, column: 68, scope: !1061)
!1070 = !DILocalVariable(name: "q", arg: 4, scope: !1061, file: !1, line: 257, type: !742)
!1071 = !DILocation(line: 257, column: 25, scope: !1061)
!1072 = !DILocalVariable(name: "x", scope: !1061, file: !1, line: 260, type: !488)
!1073 = !DILocation(line: 260, column: 5, scope: !1061)
!1074 = !DILocalVariable(name: "pixel", scope: !1061, file: !1, line: 263, type: !5)
!1075 = !DILocation(line: 263, column: 5, scope: !1061)
!1076 = !DILocation(line: 265, column: 11, scope: !1061)
!1077 = !DILocation(line: 265, column: 25, scope: !1061)
!1078 = !DILocation(line: 265, column: 3, scope: !1061)
!1079 = !DILocalVariable(name: "pixel", scope: !1080, file: !1, line: 270, type: !438)
!1080 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 268, column: 5)
!1081 = distinct !DILexicalBlock(scope: !1061, file: !1, line: 266, column: 3)
!1082 = !DILocation(line: 270, column: 9, scope: !1080)
!1083 = !DILocation(line: 272, column: 13, scope: !1084)
!1084 = distinct !DILexicalBlock(scope: !1080, file: !1, line: 272, column: 7)
!1085 = !DILocation(line: 272, column: 12, scope: !1084)
!1086 = !DILocation(line: 272, column: 17, scope: !1087)
!1087 = distinct !DILexicalBlock(scope: !1084, file: !1, line: 272, column: 7)
!1088 = !DILocation(line: 272, column: 31, scope: !1087)
!1089 = !DILocation(line: 272, column: 19, scope: !1087)
!1090 = !DILocation(line: 272, column: 7, scope: !1084)
!1091 = !DILocation(line: 274, column: 25, scope: !1092)
!1092 = distinct !DILexicalBlock(scope: !1087, file: !1, line: 273, column: 7)
!1093 = !DILocation(line: 274, column: 11, scope: !1092)
!1094 = !DILocation(line: 274, column: 10, scope: !1092)
!1095 = !DILocation(line: 275, column: 9, scope: !1092)
!1096 = !DILocation(line: 276, column: 12, scope: !1092)
!1097 = !DILocation(line: 276, column: 26, scope: !1092)
!1098 = !DILocation(line: 276, column: 10, scope: !1092)
!1099 = !DILocation(line: 277, column: 10, scope: !1092)
!1100 = !DILocation(line: 278, column: 7, scope: !1092)
!1101 = !DILocation(line: 272, column: 47, scope: !1087)
!1102 = !DILocation(line: 272, column: 7, scope: !1087)
!1103 = distinct !{!1103, !1090, !1104}
!1104 = !DILocation(line: 278, column: 7, scope: !1084)
!1105 = !DILocation(line: 279, column: 7, scope: !1080)
!1106 = !DILocalVariable(name: "pixel", scope: !1107, file: !1, line: 284, type: !494)
!1107 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 282, column: 5)
!1108 = !DILocation(line: 284, column: 9, scope: !1107)
!1109 = !DILocation(line: 286, column: 11, scope: !1110)
!1110 = distinct !DILexicalBlock(scope: !1107, file: !1, line: 286, column: 11)
!1111 = !DILocation(line: 286, column: 25, scope: !1110)
!1112 = !DILocation(line: 286, column: 32, scope: !1110)
!1113 = !DILocation(line: 286, column: 11, scope: !1107)
!1114 = !DILocation(line: 288, column: 17, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1116, file: !1, line: 288, column: 11)
!1116 = distinct !DILexicalBlock(scope: !1110, file: !1, line: 287, column: 9)
!1117 = !DILocation(line: 288, column: 16, scope: !1115)
!1118 = !DILocation(line: 288, column: 21, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !1115, file: !1, line: 288, column: 11)
!1120 = !DILocation(line: 288, column: 35, scope: !1119)
!1121 = !DILocation(line: 288, column: 23, scope: !1119)
!1122 = !DILocation(line: 288, column: 11, scope: !1115)
!1123 = !DILocation(line: 290, column: 30, scope: !1124)
!1124 = distinct !DILexicalBlock(scope: !1119, file: !1, line: 289, column: 11)
!1125 = !DILocation(line: 290, column: 44, scope: !1124)
!1126 = !DILocation(line: 290, column: 51, scope: !1124)
!1127 = !DILocation(line: 290, column: 15, scope: !1124)
!1128 = !DILocation(line: 290, column: 14, scope: !1124)
!1129 = !DILocation(line: 291, column: 13, scope: !1124)
!1130 = !DILocation(line: 293, column: 16, scope: !1124)
!1131 = !DILocation(line: 293, column: 30, scope: !1124)
!1132 = !DILocation(line: 293, column: 14, scope: !1124)
!1133 = !DILocation(line: 294, column: 14, scope: !1124)
!1134 = !DILocation(line: 295, column: 11, scope: !1124)
!1135 = !DILocation(line: 288, column: 51, scope: !1119)
!1136 = !DILocation(line: 288, column: 11, scope: !1119)
!1137 = distinct !{!1137, !1122, !1138}
!1138 = !DILocation(line: 295, column: 11, scope: !1115)
!1139 = !DILocation(line: 296, column: 11, scope: !1116)
!1140 = !DILocation(line: 298, column: 13, scope: !1141)
!1141 = distinct !DILexicalBlock(scope: !1107, file: !1, line: 298, column: 7)
!1142 = !DILocation(line: 298, column: 12, scope: !1141)
!1143 = !DILocation(line: 298, column: 17, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1141, file: !1, line: 298, column: 7)
!1145 = !DILocation(line: 298, column: 31, scope: !1144)
!1146 = !DILocation(line: 298, column: 19, scope: !1144)
!1147 = !DILocation(line: 298, column: 7, scope: !1141)
!1148 = !DILocation(line: 300, column: 26, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1144, file: !1, line: 299, column: 7)
!1150 = !DILocation(line: 300, column: 40, scope: !1149)
!1151 = !DILocation(line: 300, column: 47, scope: !1149)
!1152 = !DILocation(line: 300, column: 11, scope: !1149)
!1153 = !DILocation(line: 300, column: 10, scope: !1149)
!1154 = !DILocation(line: 301, column: 9, scope: !1149)
!1155 = !DILocation(line: 302, column: 12, scope: !1149)
!1156 = !DILocation(line: 302, column: 26, scope: !1149)
!1157 = !DILocation(line: 302, column: 10, scope: !1149)
!1158 = !DILocation(line: 303, column: 10, scope: !1149)
!1159 = !DILocation(line: 304, column: 7, scope: !1149)
!1160 = !DILocation(line: 298, column: 47, scope: !1144)
!1161 = !DILocation(line: 298, column: 7, scope: !1144)
!1162 = distinct !{!1162, !1147, !1163}
!1163 = !DILocation(line: 304, column: 7, scope: !1141)
!1164 = !DILocation(line: 305, column: 7, scope: !1107)
!1165 = !DILocalVariable(name: "pixel", scope: !1166, file: !1, line: 310, type: !5)
!1166 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 308, column: 5)
!1167 = !DILocation(line: 310, column: 9, scope: !1166)
!1168 = !DILocation(line: 312, column: 11, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 312, column: 11)
!1170 = !DILocation(line: 312, column: 25, scope: !1169)
!1171 = !DILocation(line: 312, column: 32, scope: !1169)
!1172 = !DILocation(line: 312, column: 11, scope: !1166)
!1173 = !DILocalVariable(name: "pixel", scope: !1174, file: !1, line: 315, type: !496)
!1174 = distinct !DILexicalBlock(scope: !1169, file: !1, line: 313, column: 9)
!1175 = !DILocation(line: 315, column: 13, scope: !1174)
!1176 = !DILocation(line: 317, column: 17, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1174, file: !1, line: 317, column: 11)
!1178 = !DILocation(line: 317, column: 16, scope: !1177)
!1179 = !DILocation(line: 317, column: 21, scope: !1180)
!1180 = distinct !DILexicalBlock(scope: !1177, file: !1, line: 317, column: 11)
!1181 = !DILocation(line: 317, column: 35, scope: !1180)
!1182 = !DILocation(line: 317, column: 23, scope: !1180)
!1183 = !DILocation(line: 317, column: 11, scope: !1177)
!1184 = !DILocation(line: 319, column: 30, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1180, file: !1, line: 318, column: 11)
!1186 = !DILocation(line: 319, column: 43, scope: !1185)
!1187 = !DILocation(line: 319, column: 15, scope: !1185)
!1188 = !DILocation(line: 319, column: 14, scope: !1185)
!1189 = !DILocation(line: 320, column: 13, scope: !1185)
!1190 = !DILocation(line: 321, column: 16, scope: !1185)
!1191 = !DILocation(line: 321, column: 30, scope: !1185)
!1192 = !DILocation(line: 321, column: 14, scope: !1185)
!1193 = !DILocation(line: 322, column: 14, scope: !1185)
!1194 = !DILocation(line: 323, column: 11, scope: !1185)
!1195 = !DILocation(line: 317, column: 51, scope: !1180)
!1196 = !DILocation(line: 317, column: 11, scope: !1180)
!1197 = distinct !{!1197, !1183, !1198}
!1198 = !DILocation(line: 323, column: 11, scope: !1177)
!1199 = !DILocation(line: 324, column: 11, scope: !1174)
!1200 = !DILocation(line: 326, column: 13, scope: !1201)
!1201 = distinct !DILexicalBlock(scope: !1166, file: !1, line: 326, column: 7)
!1202 = !DILocation(line: 326, column: 12, scope: !1201)
!1203 = !DILocation(line: 326, column: 17, scope: !1204)
!1204 = distinct !DILexicalBlock(scope: !1201, file: !1, line: 326, column: 7)
!1205 = !DILocation(line: 326, column: 31, scope: !1204)
!1206 = !DILocation(line: 326, column: 19, scope: !1204)
!1207 = !DILocation(line: 326, column: 7, scope: !1201)
!1208 = !DILocation(line: 328, column: 25, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1204, file: !1, line: 327, column: 7)
!1210 = !DILocation(line: 328, column: 39, scope: !1209)
!1211 = !DILocation(line: 328, column: 46, scope: !1209)
!1212 = !DILocation(line: 328, column: 11, scope: !1209)
!1213 = !DILocation(line: 328, column: 10, scope: !1209)
!1214 = !DILocation(line: 329, column: 9, scope: !1209)
!1215 = !DILocation(line: 330, column: 12, scope: !1209)
!1216 = !DILocation(line: 330, column: 26, scope: !1209)
!1217 = !DILocation(line: 330, column: 10, scope: !1209)
!1218 = !DILocation(line: 331, column: 10, scope: !1209)
!1219 = !DILocation(line: 332, column: 7, scope: !1209)
!1220 = !DILocation(line: 326, column: 47, scope: !1204)
!1221 = !DILocation(line: 326, column: 7, scope: !1204)
!1222 = distinct !{!1222, !1207, !1223}
!1223 = !DILocation(line: 332, column: 7, scope: !1201)
!1224 = !DILocation(line: 333, column: 7, scope: !1166)
!1225 = !DILocation(line: 337, column: 11, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1227, file: !1, line: 337, column: 11)
!1227 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 336, column: 5)
!1228 = !DILocation(line: 337, column: 25, scope: !1226)
!1229 = !DILocation(line: 337, column: 32, scope: !1226)
!1230 = !DILocation(line: 337, column: 11, scope: !1227)
!1231 = !DILocalVariable(name: "pixel", scope: !1232, file: !1, line: 340, type: !456)
!1232 = distinct !DILexicalBlock(scope: !1226, file: !1, line: 338, column: 9)
!1233 = !DILocation(line: 340, column: 13, scope: !1232)
!1234 = !DILocation(line: 342, column: 17, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 342, column: 11)
!1236 = !DILocation(line: 342, column: 16, scope: !1235)
!1237 = !DILocation(line: 342, column: 21, scope: !1238)
!1238 = distinct !DILexicalBlock(scope: !1235, file: !1, line: 342, column: 11)
!1239 = !DILocation(line: 342, column: 35, scope: !1238)
!1240 = !DILocation(line: 342, column: 23, scope: !1238)
!1241 = !DILocation(line: 342, column: 11, scope: !1235)
!1242 = !DILocation(line: 344, column: 31, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 343, column: 11)
!1244 = !DILocation(line: 344, column: 44, scope: !1243)
!1245 = !DILocation(line: 344, column: 15, scope: !1243)
!1246 = !DILocation(line: 344, column: 14, scope: !1243)
!1247 = !DILocation(line: 345, column: 13, scope: !1243)
!1248 = !DILocation(line: 346, column: 16, scope: !1243)
!1249 = !DILocation(line: 346, column: 30, scope: !1243)
!1250 = !DILocation(line: 346, column: 14, scope: !1243)
!1251 = !DILocation(line: 347, column: 14, scope: !1243)
!1252 = !DILocation(line: 348, column: 11, scope: !1243)
!1253 = !DILocation(line: 342, column: 51, scope: !1238)
!1254 = !DILocation(line: 342, column: 11, scope: !1238)
!1255 = distinct !{!1255, !1241, !1256}
!1256 = !DILocation(line: 348, column: 11, scope: !1235)
!1257 = !DILocation(line: 349, column: 11, scope: !1232)
!1258 = !DILocation(line: 351, column: 5, scope: !1227)
!1259 = !DILocalVariable(name: "range", scope: !1260, file: !1, line: 355, type: !501)
!1260 = distinct !DILexicalBlock(scope: !1081, file: !1, line: 353, column: 5)
!1261 = !DILocation(line: 355, column: 9, scope: !1260)
!1262 = !DILocation(line: 357, column: 29, scope: !1260)
!1263 = !DILocation(line: 357, column: 43, scope: !1260)
!1264 = !DILocation(line: 357, column: 13, scope: !1260)
!1265 = !DILocation(line: 357, column: 12, scope: !1260)
!1266 = !DILocation(line: 358, column: 13, scope: !1267)
!1267 = distinct !DILexicalBlock(scope: !1260, file: !1, line: 358, column: 7)
!1268 = !DILocation(line: 358, column: 12, scope: !1267)
!1269 = !DILocation(line: 358, column: 17, scope: !1270)
!1270 = distinct !DILexicalBlock(scope: !1267, file: !1, line: 358, column: 7)
!1271 = !DILocation(line: 358, column: 31, scope: !1270)
!1272 = !DILocation(line: 358, column: 19, scope: !1270)
!1273 = !DILocation(line: 358, column: 7, scope: !1267)
!1274 = !DILocation(line: 360, column: 28, scope: !1275)
!1275 = distinct !DILexicalBlock(scope: !1270, file: !1, line: 359, column: 7)
!1276 = !DILocation(line: 360, column: 41, scope: !1275)
!1277 = !DILocation(line: 360, column: 11, scope: !1275)
!1278 = !DILocation(line: 360, column: 10, scope: !1275)
!1279 = !DILocation(line: 361, column: 9, scope: !1275)
!1280 = !DILocation(line: 362, column: 12, scope: !1275)
!1281 = !DILocation(line: 362, column: 26, scope: !1275)
!1282 = !DILocation(line: 362, column: 10, scope: !1275)
!1283 = !DILocation(line: 363, column: 10, scope: !1275)
!1284 = !DILocation(line: 364, column: 7, scope: !1275)
!1285 = !DILocation(line: 358, column: 47, scope: !1270)
!1286 = !DILocation(line: 358, column: 7, scope: !1270)
!1287 = distinct !{!1287, !1273, !1288}
!1288 = !DILocation(line: 364, column: 7, scope: !1267)
!1289 = !DILocation(line: 365, column: 7, scope: !1260)
!1290 = !DILocation(line: 368, column: 1, scope: !1061)
!1291 = distinct !DISubprogram(name: "ImportBGRQuantum", scope: !1, file: !1, line: 370, type: !1062, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1292 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !1291, file: !1, line: 370, type: !444)
!1293 = !DILocation(line: 370, column: 43, scope: !1291)
!1294 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !1291, file: !1, line: 371, type: !638)
!1295 = !DILocation(line: 371, column: 24, scope: !1291)
!1296 = !DILocalVariable(name: "p", arg: 3, scope: !1291, file: !1, line: 371, type: !717)
!1297 = !DILocation(line: 371, column: 68, scope: !1291)
!1298 = !DILocalVariable(name: "q", arg: 4, scope: !1291, file: !1, line: 372, type: !742)
!1299 = !DILocation(line: 372, column: 25, scope: !1291)
!1300 = !DILocalVariable(name: "range", scope: !1291, file: !1, line: 375, type: !501)
!1301 = !DILocation(line: 375, column: 5, scope: !1291)
!1302 = !DILocalVariable(name: "x", scope: !1291, file: !1, line: 378, type: !488)
!1303 = !DILocation(line: 378, column: 5, scope: !1291)
!1304 = !DILocalVariable(name: "bit", scope: !1291, file: !1, line: 381, type: !488)
!1305 = !DILocation(line: 381, column: 5, scope: !1291)
!1306 = !DILocalVariable(name: "pixel", scope: !1291, file: !1, line: 384, type: !5)
!1307 = !DILocation(line: 384, column: 5, scope: !1291)
!1308 = !DILocation(line: 386, column: 11, scope: !1291)
!1309 = !DILocation(line: 386, column: 25, scope: !1291)
!1310 = !DILocation(line: 386, column: 3, scope: !1291)
!1311 = !DILocalVariable(name: "pixel", scope: !1312, file: !1, line: 391, type: !438)
!1312 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 389, column: 5)
!1313 = distinct !DILexicalBlock(scope: !1291, file: !1, line: 387, column: 3)
!1314 = !DILocation(line: 391, column: 9, scope: !1312)
!1315 = !DILocation(line: 393, column: 13, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1312, file: !1, line: 393, column: 7)
!1317 = !DILocation(line: 393, column: 12, scope: !1316)
!1318 = !DILocation(line: 393, column: 17, scope: !1319)
!1319 = distinct !DILexicalBlock(scope: !1316, file: !1, line: 393, column: 7)
!1320 = !DILocation(line: 393, column: 31, scope: !1319)
!1321 = !DILocation(line: 393, column: 19, scope: !1319)
!1322 = !DILocation(line: 393, column: 7, scope: !1316)
!1323 = !DILocation(line: 395, column: 25, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1319, file: !1, line: 394, column: 7)
!1325 = !DILocation(line: 395, column: 11, scope: !1324)
!1326 = !DILocation(line: 395, column: 10, scope: !1324)
!1327 = !DILocation(line: 396, column: 9, scope: !1324)
!1328 = !DILocation(line: 397, column: 25, scope: !1324)
!1329 = !DILocation(line: 397, column: 11, scope: !1324)
!1330 = !DILocation(line: 397, column: 10, scope: !1324)
!1331 = !DILocation(line: 398, column: 9, scope: !1324)
!1332 = !DILocation(line: 399, column: 25, scope: !1324)
!1333 = !DILocation(line: 399, column: 11, scope: !1324)
!1334 = !DILocation(line: 399, column: 10, scope: !1324)
!1335 = !DILocation(line: 400, column: 9, scope: !1324)
!1336 = !DILocation(line: 401, column: 9, scope: !1324)
!1337 = !DILocation(line: 402, column: 12, scope: !1324)
!1338 = !DILocation(line: 402, column: 26, scope: !1324)
!1339 = !DILocation(line: 402, column: 10, scope: !1324)
!1340 = !DILocation(line: 403, column: 10, scope: !1324)
!1341 = !DILocation(line: 404, column: 7, scope: !1324)
!1342 = !DILocation(line: 393, column: 47, scope: !1319)
!1343 = !DILocation(line: 393, column: 7, scope: !1319)
!1344 = distinct !{!1344, !1322, !1345}
!1345 = !DILocation(line: 404, column: 7, scope: !1316)
!1346 = !DILocation(line: 405, column: 7, scope: !1312)
!1347 = !DILocation(line: 409, column: 29, scope: !1348)
!1348 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 408, column: 5)
!1349 = !DILocation(line: 409, column: 43, scope: !1348)
!1350 = !DILocation(line: 409, column: 13, scope: !1348)
!1351 = !DILocation(line: 409, column: 12, scope: !1348)
!1352 = !DILocation(line: 410, column: 11, scope: !1353)
!1353 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 410, column: 11)
!1354 = !DILocation(line: 410, column: 25, scope: !1353)
!1355 = !DILocation(line: 410, column: 30, scope: !1353)
!1356 = !DILocation(line: 410, column: 11, scope: !1348)
!1357 = !DILocation(line: 412, column: 17, scope: !1358)
!1358 = distinct !DILexicalBlock(scope: !1359, file: !1, line: 412, column: 11)
!1359 = distinct !DILexicalBlock(scope: !1353, file: !1, line: 411, column: 9)
!1360 = !DILocation(line: 412, column: 16, scope: !1358)
!1361 = !DILocation(line: 412, column: 21, scope: !1362)
!1362 = distinct !DILexicalBlock(scope: !1358, file: !1, line: 412, column: 11)
!1363 = !DILocation(line: 412, column: 35, scope: !1362)
!1364 = !DILocation(line: 412, column: 23, scope: !1362)
!1365 = !DILocation(line: 412, column: 11, scope: !1358)
!1366 = !DILocation(line: 414, column: 29, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1362, file: !1, line: 413, column: 11)
!1368 = !DILocation(line: 414, column: 43, scope: !1367)
!1369 = !DILocation(line: 414, column: 50, scope: !1367)
!1370 = !DILocation(line: 414, column: 15, scope: !1367)
!1371 = !DILocation(line: 414, column: 14, scope: !1367)
!1372 = !DILocation(line: 415, column: 13, scope: !1367)
!1373 = !DILocation(line: 416, column: 13, scope: !1367)
!1374 = !DILocation(line: 417, column: 13, scope: !1367)
!1375 = !DILocation(line: 418, column: 16, scope: !1367)
!1376 = !DILocation(line: 418, column: 30, scope: !1367)
!1377 = !DILocation(line: 418, column: 14, scope: !1367)
!1378 = !DILocation(line: 419, column: 14, scope: !1367)
!1379 = !DILocation(line: 420, column: 11, scope: !1367)
!1380 = !DILocation(line: 412, column: 51, scope: !1362)
!1381 = !DILocation(line: 412, column: 11, scope: !1362)
!1382 = distinct !{!1382, !1365, !1383}
!1383 = !DILocation(line: 420, column: 11, scope: !1358)
!1384 = !DILocation(line: 421, column: 11, scope: !1359)
!1385 = !DILocation(line: 423, column: 11, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 423, column: 11)
!1387 = !DILocation(line: 423, column: 25, scope: !1386)
!1388 = !DILocation(line: 423, column: 33, scope: !1386)
!1389 = !DILocation(line: 423, column: 11, scope: !1348)
!1390 = !DILocation(line: 425, column: 17, scope: !1391)
!1391 = distinct !DILexicalBlock(scope: !1392, file: !1, line: 425, column: 11)
!1392 = distinct !DILexicalBlock(scope: !1386, file: !1, line: 424, column: 9)
!1393 = !DILocation(line: 425, column: 16, scope: !1391)
!1394 = !DILocation(line: 425, column: 21, scope: !1395)
!1395 = distinct !DILexicalBlock(scope: !1391, file: !1, line: 425, column: 11)
!1396 = !DILocation(line: 425, column: 35, scope: !1395)
!1397 = !DILocation(line: 425, column: 23, scope: !1395)
!1398 = !DILocation(line: 425, column: 11, scope: !1391)
!1399 = !DILocation(line: 427, column: 36, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1395, file: !1, line: 426, column: 11)
!1401 = !DILocation(line: 427, column: 49, scope: !1400)
!1402 = !DILocation(line: 427, column: 15, scope: !1400)
!1403 = !DILocation(line: 427, column: 14, scope: !1400)
!1404 = !DILocation(line: 428, column: 13, scope: !1400)
!1405 = !DILocation(line: 429, column: 36, scope: !1400)
!1406 = !DILocation(line: 429, column: 49, scope: !1400)
!1407 = !DILocation(line: 429, column: 15, scope: !1400)
!1408 = !DILocation(line: 429, column: 14, scope: !1400)
!1409 = !DILocation(line: 430, column: 13, scope: !1400)
!1410 = !DILocation(line: 431, column: 36, scope: !1400)
!1411 = !DILocation(line: 431, column: 49, scope: !1400)
!1412 = !DILocation(line: 431, column: 15, scope: !1400)
!1413 = !DILocation(line: 431, column: 14, scope: !1400)
!1414 = !DILocation(line: 432, column: 13, scope: !1400)
!1415 = !DILocation(line: 433, column: 14, scope: !1400)
!1416 = !DILocation(line: 434, column: 11, scope: !1400)
!1417 = !DILocation(line: 425, column: 51, scope: !1395)
!1418 = !DILocation(line: 425, column: 11, scope: !1395)
!1419 = distinct !{!1419, !1398, !1420}
!1420 = !DILocation(line: 434, column: 11, scope: !1391)
!1421 = !DILocation(line: 435, column: 11, scope: !1392)
!1422 = !DILocation(line: 437, column: 13, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1348, file: !1, line: 437, column: 7)
!1424 = !DILocation(line: 437, column: 12, scope: !1423)
!1425 = !DILocation(line: 437, column: 17, scope: !1426)
!1426 = distinct !DILexicalBlock(scope: !1423, file: !1, line: 437, column: 7)
!1427 = !DILocation(line: 437, column: 31, scope: !1426)
!1428 = !DILocation(line: 437, column: 19, scope: !1426)
!1429 = !DILocation(line: 437, column: 7, scope: !1423)
!1430 = !DILocation(line: 439, column: 28, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1426, file: !1, line: 438, column: 7)
!1432 = !DILocation(line: 439, column: 41, scope: !1431)
!1433 = !DILocation(line: 439, column: 11, scope: !1431)
!1434 = !DILocation(line: 439, column: 10, scope: !1431)
!1435 = !DILocation(line: 440, column: 9, scope: !1431)
!1436 = !DILocation(line: 441, column: 28, scope: !1431)
!1437 = !DILocation(line: 441, column: 41, scope: !1431)
!1438 = !DILocation(line: 441, column: 11, scope: !1431)
!1439 = !DILocation(line: 441, column: 10, scope: !1431)
!1440 = !DILocation(line: 442, column: 9, scope: !1431)
!1441 = !DILocation(line: 443, column: 28, scope: !1431)
!1442 = !DILocation(line: 443, column: 41, scope: !1431)
!1443 = !DILocation(line: 443, column: 11, scope: !1431)
!1444 = !DILocation(line: 443, column: 10, scope: !1431)
!1445 = !DILocation(line: 444, column: 9, scope: !1431)
!1446 = !DILocation(line: 445, column: 10, scope: !1431)
!1447 = !DILocation(line: 446, column: 7, scope: !1431)
!1448 = !DILocation(line: 437, column: 47, scope: !1426)
!1449 = !DILocation(line: 437, column: 7, scope: !1426)
!1450 = distinct !{!1450, !1429, !1451}
!1451 = !DILocation(line: 446, column: 7, scope: !1423)
!1452 = !DILocation(line: 447, column: 7, scope: !1348)
!1453 = !DILocation(line: 451, column: 29, scope: !1454)
!1454 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 450, column: 5)
!1455 = !DILocation(line: 451, column: 43, scope: !1454)
!1456 = !DILocation(line: 451, column: 13, scope: !1454)
!1457 = !DILocation(line: 451, column: 12, scope: !1454)
!1458 = !DILocation(line: 452, column: 11, scope: !1459)
!1459 = distinct !DILexicalBlock(scope: !1454, file: !1, line: 452, column: 11)
!1460 = !DILocation(line: 452, column: 25, scope: !1459)
!1461 = !DILocation(line: 452, column: 30, scope: !1459)
!1462 = !DILocation(line: 452, column: 11, scope: !1454)
!1463 = !DILocalVariable(name: "pixel", scope: !1464, file: !1, line: 455, type: !494)
!1464 = distinct !DILexicalBlock(scope: !1459, file: !1, line: 453, column: 9)
!1465 = !DILocation(line: 455, column: 13, scope: !1464)
!1466 = !DILocation(line: 457, column: 17, scope: !1467)
!1467 = distinct !DILexicalBlock(scope: !1464, file: !1, line: 457, column: 11)
!1468 = !DILocation(line: 457, column: 16, scope: !1467)
!1469 = !DILocation(line: 457, column: 21, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1467, file: !1, line: 457, column: 11)
!1471 = !DILocation(line: 457, column: 38, scope: !1470)
!1472 = !DILocation(line: 457, column: 37, scope: !1470)
!1473 = !DILocation(line: 457, column: 51, scope: !1470)
!1474 = !DILocation(line: 457, column: 23, scope: !1470)
!1475 = !DILocation(line: 457, column: 11, scope: !1467)
!1476 = !DILocation(line: 459, column: 30, scope: !1477)
!1477 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 458, column: 11)
!1478 = !DILocation(line: 459, column: 44, scope: !1477)
!1479 = !DILocation(line: 459, column: 51, scope: !1477)
!1480 = !DILocation(line: 459, column: 15, scope: !1477)
!1481 = !DILocation(line: 459, column: 14, scope: !1477)
!1482 = !DILocation(line: 460, column: 21, scope: !1477)
!1483 = !DILocation(line: 460, column: 23, scope: !1477)
!1484 = !DILocation(line: 460, column: 13, scope: !1477)
!1485 = !DILocation(line: 461, column: 13, scope: !1477)
!1486 = !DILocation(line: 465, column: 17, scope: !1487)
!1487 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 464, column: 15)
!1488 = distinct !DILexicalBlock(scope: !1477, file: !1, line: 461, column: 13)
!1489 = !DILocation(line: 467, column: 17, scope: !1487)
!1490 = !DILocation(line: 471, column: 17, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 470, column: 15)
!1492 = !DILocation(line: 473, column: 17, scope: !1491)
!1493 = !DILocation(line: 477, column: 17, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1488, file: !1, line: 476, column: 15)
!1495 = !DILocation(line: 479, column: 18, scope: !1494)
!1496 = !DILocation(line: 480, column: 17, scope: !1494)
!1497 = !DILocation(line: 483, column: 30, scope: !1477)
!1498 = !DILocation(line: 483, column: 44, scope: !1477)
!1499 = !DILocation(line: 483, column: 51, scope: !1477)
!1500 = !DILocation(line: 483, column: 15, scope: !1477)
!1501 = !DILocation(line: 483, column: 14, scope: !1477)
!1502 = !DILocation(line: 484, column: 22, scope: !1477)
!1503 = !DILocation(line: 484, column: 23, scope: !1477)
!1504 = !DILocation(line: 484, column: 27, scope: !1477)
!1505 = !DILocation(line: 484, column: 13, scope: !1477)
!1506 = !DILocation(line: 485, column: 13, scope: !1477)
!1507 = !DILocation(line: 489, column: 17, scope: !1508)
!1508 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 488, column: 15)
!1509 = distinct !DILexicalBlock(scope: !1477, file: !1, line: 485, column: 13)
!1510 = !DILocation(line: 491, column: 17, scope: !1508)
!1511 = !DILocation(line: 495, column: 17, scope: !1512)
!1512 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 494, column: 15)
!1513 = !DILocation(line: 497, column: 17, scope: !1512)
!1514 = !DILocation(line: 501, column: 17, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 500, column: 15)
!1516 = !DILocation(line: 503, column: 18, scope: !1515)
!1517 = !DILocation(line: 504, column: 17, scope: !1515)
!1518 = !DILocation(line: 507, column: 16, scope: !1477)
!1519 = !DILocation(line: 507, column: 30, scope: !1477)
!1520 = !DILocation(line: 507, column: 14, scope: !1477)
!1521 = !DILocation(line: 508, column: 11, scope: !1477)
!1522 = !DILocation(line: 457, column: 57, scope: !1470)
!1523 = !DILocation(line: 457, column: 11, scope: !1470)
!1524 = distinct !{!1524, !1475, !1525}
!1525 = !DILocation(line: 508, column: 11, scope: !1467)
!1526 = !DILocation(line: 509, column: 19, scope: !1527)
!1527 = distinct !DILexicalBlock(scope: !1464, file: !1, line: 509, column: 11)
!1528 = !DILocation(line: 509, column: 16, scope: !1527)
!1529 = !DILocation(line: 509, column: 23, scope: !1530)
!1530 = distinct !DILexicalBlock(scope: !1527, file: !1, line: 509, column: 11)
!1531 = !DILocation(line: 509, column: 42, scope: !1530)
!1532 = !DILocation(line: 509, column: 41, scope: !1530)
!1533 = !DILocation(line: 509, column: 56, scope: !1530)
!1534 = !DILocation(line: 509, column: 27, scope: !1530)
!1535 = !DILocation(line: 509, column: 11, scope: !1527)
!1536 = !DILocation(line: 511, column: 30, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1530, file: !1, line: 510, column: 11)
!1538 = !DILocation(line: 511, column: 44, scope: !1537)
!1539 = !DILocation(line: 511, column: 51, scope: !1537)
!1540 = !DILocation(line: 511, column: 15, scope: !1537)
!1541 = !DILocation(line: 511, column: 14, scope: !1537)
!1542 = !DILocation(line: 512, column: 22, scope: !1537)
!1543 = !DILocation(line: 512, column: 24, scope: !1537)
!1544 = !DILocation(line: 512, column: 23, scope: !1537)
!1545 = !DILocation(line: 512, column: 29, scope: !1537)
!1546 = !DILocation(line: 512, column: 13, scope: !1537)
!1547 = !DILocation(line: 513, column: 13, scope: !1537)
!1548 = !DILocation(line: 517, column: 17, scope: !1549)
!1549 = distinct !DILexicalBlock(scope: !1550, file: !1, line: 516, column: 15)
!1550 = distinct !DILexicalBlock(scope: !1537, file: !1, line: 513, column: 13)
!1551 = !DILocation(line: 519, column: 17, scope: !1549)
!1552 = !DILocation(line: 523, column: 17, scope: !1553)
!1553 = distinct !DILexicalBlock(scope: !1550, file: !1, line: 522, column: 15)
!1554 = !DILocation(line: 525, column: 17, scope: !1553)
!1555 = !DILocation(line: 529, column: 17, scope: !1556)
!1556 = distinct !DILexicalBlock(scope: !1550, file: !1, line: 528, column: 15)
!1557 = !DILocation(line: 531, column: 18, scope: !1556)
!1558 = !DILocation(line: 532, column: 17, scope: !1556)
!1559 = !DILocation(line: 535, column: 16, scope: !1537)
!1560 = !DILocation(line: 535, column: 30, scope: !1537)
!1561 = !DILocation(line: 535, column: 14, scope: !1537)
!1562 = !DILocation(line: 536, column: 11, scope: !1537)
!1563 = !DILocation(line: 509, column: 65, scope: !1530)
!1564 = !DILocation(line: 509, column: 11, scope: !1530)
!1565 = distinct !{!1565, !1535, !1566}
!1566 = !DILocation(line: 536, column: 11, scope: !1527)
!1567 = !DILocation(line: 537, column: 15, scope: !1568)
!1568 = distinct !DILexicalBlock(scope: !1464, file: !1, line: 537, column: 15)
!1569 = !DILocation(line: 537, column: 19, scope: !1568)
!1570 = !DILocation(line: 537, column: 15, scope: !1464)
!1571 = !DILocation(line: 538, column: 14, scope: !1568)
!1572 = !DILocation(line: 538, column: 13, scope: !1568)
!1573 = !DILocation(line: 539, column: 11, scope: !1464)
!1574 = !DILocation(line: 541, column: 11, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1454, file: !1, line: 541, column: 11)
!1576 = !DILocation(line: 541, column: 25, scope: !1575)
!1577 = !DILocation(line: 541, column: 33, scope: !1575)
!1578 = !DILocation(line: 541, column: 11, scope: !1454)
!1579 = !DILocation(line: 543, column: 17, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1581, file: !1, line: 543, column: 11)
!1581 = distinct !DILexicalBlock(scope: !1575, file: !1, line: 542, column: 9)
!1582 = !DILocation(line: 543, column: 16, scope: !1580)
!1583 = !DILocation(line: 543, column: 21, scope: !1584)
!1584 = distinct !DILexicalBlock(scope: !1580, file: !1, line: 543, column: 11)
!1585 = !DILocation(line: 543, column: 35, scope: !1584)
!1586 = !DILocation(line: 543, column: 23, scope: !1584)
!1587 = !DILocation(line: 543, column: 11, scope: !1580)
!1588 = !DILocation(line: 545, column: 36, scope: !1589)
!1589 = distinct !DILexicalBlock(scope: !1584, file: !1, line: 544, column: 11)
!1590 = !DILocation(line: 545, column: 49, scope: !1589)
!1591 = !DILocation(line: 545, column: 15, scope: !1589)
!1592 = !DILocation(line: 545, column: 14, scope: !1589)
!1593 = !DILocation(line: 546, column: 13, scope: !1589)
!1594 = !DILocation(line: 547, column: 36, scope: !1589)
!1595 = !DILocation(line: 547, column: 49, scope: !1589)
!1596 = !DILocation(line: 547, column: 15, scope: !1589)
!1597 = !DILocation(line: 547, column: 14, scope: !1589)
!1598 = !DILocation(line: 548, column: 13, scope: !1589)
!1599 = !DILocation(line: 549, column: 36, scope: !1589)
!1600 = !DILocation(line: 549, column: 49, scope: !1589)
!1601 = !DILocation(line: 549, column: 15, scope: !1589)
!1602 = !DILocation(line: 549, column: 14, scope: !1589)
!1603 = !DILocation(line: 550, column: 13, scope: !1589)
!1604 = !DILocation(line: 551, column: 14, scope: !1589)
!1605 = !DILocation(line: 552, column: 11, scope: !1589)
!1606 = !DILocation(line: 543, column: 51, scope: !1584)
!1607 = !DILocation(line: 543, column: 11, scope: !1584)
!1608 = distinct !{!1608, !1587, !1609}
!1609 = !DILocation(line: 552, column: 11, scope: !1580)
!1610 = !DILocation(line: 553, column: 11, scope: !1581)
!1611 = !DILocation(line: 555, column: 13, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1454, file: !1, line: 555, column: 7)
!1613 = !DILocation(line: 555, column: 12, scope: !1612)
!1614 = !DILocation(line: 555, column: 17, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1612, file: !1, line: 555, column: 7)
!1616 = !DILocation(line: 555, column: 31, scope: !1615)
!1617 = !DILocation(line: 555, column: 19, scope: !1615)
!1618 = !DILocation(line: 555, column: 7, scope: !1612)
!1619 = !DILocation(line: 557, column: 28, scope: !1620)
!1620 = distinct !DILexicalBlock(scope: !1615, file: !1, line: 556, column: 7)
!1621 = !DILocation(line: 557, column: 41, scope: !1620)
!1622 = !DILocation(line: 557, column: 11, scope: !1620)
!1623 = !DILocation(line: 557, column: 10, scope: !1620)
!1624 = !DILocation(line: 558, column: 9, scope: !1620)
!1625 = !DILocation(line: 559, column: 28, scope: !1620)
!1626 = !DILocation(line: 559, column: 41, scope: !1620)
!1627 = !DILocation(line: 559, column: 11, scope: !1620)
!1628 = !DILocation(line: 559, column: 10, scope: !1620)
!1629 = !DILocation(line: 560, column: 9, scope: !1620)
!1630 = !DILocation(line: 561, column: 28, scope: !1620)
!1631 = !DILocation(line: 561, column: 41, scope: !1620)
!1632 = !DILocation(line: 561, column: 11, scope: !1620)
!1633 = !DILocation(line: 561, column: 10, scope: !1620)
!1634 = !DILocation(line: 562, column: 9, scope: !1620)
!1635 = !DILocation(line: 563, column: 10, scope: !1620)
!1636 = !DILocation(line: 564, column: 7, scope: !1620)
!1637 = !DILocation(line: 555, column: 47, scope: !1615)
!1638 = !DILocation(line: 555, column: 7, scope: !1615)
!1639 = distinct !{!1639, !1618, !1640}
!1640 = !DILocation(line: 564, column: 7, scope: !1612)
!1641 = !DILocation(line: 565, column: 7, scope: !1454)
!1642 = !DILocalVariable(name: "pixel", scope: !1643, file: !1, line: 570, type: !494)
!1643 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 568, column: 5)
!1644 = !DILocation(line: 570, column: 9, scope: !1643)
!1645 = !DILocation(line: 572, column: 11, scope: !1646)
!1646 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 572, column: 11)
!1647 = !DILocation(line: 572, column: 25, scope: !1646)
!1648 = !DILocation(line: 572, column: 32, scope: !1646)
!1649 = !DILocation(line: 572, column: 11, scope: !1643)
!1650 = !DILocation(line: 574, column: 17, scope: !1651)
!1651 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 574, column: 11)
!1652 = distinct !DILexicalBlock(scope: !1646, file: !1, line: 573, column: 9)
!1653 = !DILocation(line: 574, column: 16, scope: !1651)
!1654 = !DILocation(line: 574, column: 21, scope: !1655)
!1655 = distinct !DILexicalBlock(scope: !1651, file: !1, line: 574, column: 11)
!1656 = !DILocation(line: 574, column: 35, scope: !1655)
!1657 = !DILocation(line: 574, column: 23, scope: !1655)
!1658 = !DILocation(line: 574, column: 11, scope: !1651)
!1659 = !DILocation(line: 576, column: 30, scope: !1660)
!1660 = distinct !DILexicalBlock(scope: !1655, file: !1, line: 575, column: 11)
!1661 = !DILocation(line: 576, column: 44, scope: !1660)
!1662 = !DILocation(line: 576, column: 51, scope: !1660)
!1663 = !DILocation(line: 576, column: 15, scope: !1660)
!1664 = !DILocation(line: 576, column: 14, scope: !1660)
!1665 = !DILocation(line: 577, column: 13, scope: !1660)
!1666 = !DILocation(line: 579, column: 30, scope: !1660)
!1667 = !DILocation(line: 579, column: 44, scope: !1660)
!1668 = !DILocation(line: 579, column: 51, scope: !1660)
!1669 = !DILocation(line: 579, column: 15, scope: !1660)
!1670 = !DILocation(line: 579, column: 14, scope: !1660)
!1671 = !DILocation(line: 580, column: 13, scope: !1660)
!1672 = !DILocation(line: 582, column: 30, scope: !1660)
!1673 = !DILocation(line: 582, column: 44, scope: !1660)
!1674 = !DILocation(line: 582, column: 51, scope: !1660)
!1675 = !DILocation(line: 582, column: 15, scope: !1660)
!1676 = !DILocation(line: 582, column: 14, scope: !1660)
!1677 = !DILocation(line: 583, column: 13, scope: !1660)
!1678 = !DILocation(line: 585, column: 16, scope: !1660)
!1679 = !DILocation(line: 585, column: 30, scope: !1660)
!1680 = !DILocation(line: 585, column: 14, scope: !1660)
!1681 = !DILocation(line: 586, column: 14, scope: !1660)
!1682 = !DILocation(line: 587, column: 11, scope: !1660)
!1683 = !DILocation(line: 574, column: 51, scope: !1655)
!1684 = !DILocation(line: 574, column: 11, scope: !1655)
!1685 = distinct !{!1685, !1658, !1686}
!1686 = !DILocation(line: 587, column: 11, scope: !1651)
!1687 = !DILocation(line: 588, column: 11, scope: !1652)
!1688 = !DILocation(line: 590, column: 13, scope: !1689)
!1689 = distinct !DILexicalBlock(scope: !1643, file: !1, line: 590, column: 7)
!1690 = !DILocation(line: 590, column: 12, scope: !1689)
!1691 = !DILocation(line: 590, column: 17, scope: !1692)
!1692 = distinct !DILexicalBlock(scope: !1689, file: !1, line: 590, column: 7)
!1693 = !DILocation(line: 590, column: 31, scope: !1692)
!1694 = !DILocation(line: 590, column: 19, scope: !1692)
!1695 = !DILocation(line: 590, column: 7, scope: !1689)
!1696 = !DILocation(line: 592, column: 26, scope: !1697)
!1697 = distinct !DILexicalBlock(scope: !1692, file: !1, line: 591, column: 7)
!1698 = !DILocation(line: 592, column: 40, scope: !1697)
!1699 = !DILocation(line: 592, column: 47, scope: !1697)
!1700 = !DILocation(line: 592, column: 11, scope: !1697)
!1701 = !DILocation(line: 592, column: 10, scope: !1697)
!1702 = !DILocation(line: 593, column: 9, scope: !1697)
!1703 = !DILocation(line: 594, column: 26, scope: !1697)
!1704 = !DILocation(line: 594, column: 40, scope: !1697)
!1705 = !DILocation(line: 594, column: 47, scope: !1697)
!1706 = !DILocation(line: 594, column: 11, scope: !1697)
!1707 = !DILocation(line: 594, column: 10, scope: !1697)
!1708 = !DILocation(line: 595, column: 9, scope: !1697)
!1709 = !DILocation(line: 596, column: 26, scope: !1697)
!1710 = !DILocation(line: 596, column: 40, scope: !1697)
!1711 = !DILocation(line: 596, column: 47, scope: !1697)
!1712 = !DILocation(line: 596, column: 11, scope: !1697)
!1713 = !DILocation(line: 596, column: 10, scope: !1697)
!1714 = !DILocation(line: 597, column: 9, scope: !1697)
!1715 = !DILocation(line: 598, column: 12, scope: !1697)
!1716 = !DILocation(line: 598, column: 26, scope: !1697)
!1717 = !DILocation(line: 598, column: 10, scope: !1697)
!1718 = !DILocation(line: 599, column: 10, scope: !1697)
!1719 = !DILocation(line: 600, column: 7, scope: !1697)
!1720 = !DILocation(line: 590, column: 47, scope: !1692)
!1721 = !DILocation(line: 590, column: 7, scope: !1692)
!1722 = distinct !{!1722, !1695, !1723}
!1723 = !DILocation(line: 600, column: 7, scope: !1689)
!1724 = !DILocation(line: 601, column: 7, scope: !1643)
!1725 = !DILocalVariable(name: "pixel", scope: !1726, file: !1, line: 606, type: !5)
!1726 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 604, column: 5)
!1727 = !DILocation(line: 606, column: 9, scope: !1726)
!1728 = !DILocation(line: 608, column: 11, scope: !1729)
!1729 = distinct !DILexicalBlock(scope: !1726, file: !1, line: 608, column: 11)
!1730 = !DILocation(line: 608, column: 25, scope: !1729)
!1731 = !DILocation(line: 608, column: 32, scope: !1729)
!1732 = !DILocation(line: 608, column: 11, scope: !1726)
!1733 = !DILocalVariable(name: "pixel", scope: !1734, file: !1, line: 611, type: !496)
!1734 = distinct !DILexicalBlock(scope: !1729, file: !1, line: 609, column: 9)
!1735 = !DILocation(line: 611, column: 13, scope: !1734)
!1736 = !DILocation(line: 613, column: 17, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1734, file: !1, line: 613, column: 11)
!1738 = !DILocation(line: 613, column: 16, scope: !1737)
!1739 = !DILocation(line: 613, column: 21, scope: !1740)
!1740 = distinct !DILexicalBlock(scope: !1737, file: !1, line: 613, column: 11)
!1741 = !DILocation(line: 613, column: 35, scope: !1740)
!1742 = !DILocation(line: 613, column: 23, scope: !1740)
!1743 = !DILocation(line: 613, column: 11, scope: !1737)
!1744 = !DILocation(line: 615, column: 30, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1740, file: !1, line: 614, column: 11)
!1746 = !DILocation(line: 615, column: 43, scope: !1745)
!1747 = !DILocation(line: 615, column: 15, scope: !1745)
!1748 = !DILocation(line: 615, column: 14, scope: !1745)
!1749 = !DILocation(line: 616, column: 13, scope: !1745)
!1750 = !DILocation(line: 617, column: 30, scope: !1745)
!1751 = !DILocation(line: 617, column: 43, scope: !1745)
!1752 = !DILocation(line: 617, column: 15, scope: !1745)
!1753 = !DILocation(line: 617, column: 14, scope: !1745)
!1754 = !DILocation(line: 618, column: 13, scope: !1745)
!1755 = !DILocation(line: 619, column: 30, scope: !1745)
!1756 = !DILocation(line: 619, column: 43, scope: !1745)
!1757 = !DILocation(line: 619, column: 15, scope: !1745)
!1758 = !DILocation(line: 619, column: 14, scope: !1745)
!1759 = !DILocation(line: 620, column: 13, scope: !1745)
!1760 = !DILocation(line: 621, column: 16, scope: !1745)
!1761 = !DILocation(line: 621, column: 30, scope: !1745)
!1762 = !DILocation(line: 621, column: 14, scope: !1745)
!1763 = !DILocation(line: 622, column: 14, scope: !1745)
!1764 = !DILocation(line: 623, column: 11, scope: !1745)
!1765 = !DILocation(line: 613, column: 51, scope: !1740)
!1766 = !DILocation(line: 613, column: 11, scope: !1740)
!1767 = distinct !{!1767, !1743, !1768}
!1768 = !DILocation(line: 623, column: 11, scope: !1737)
!1769 = !DILocation(line: 624, column: 11, scope: !1734)
!1770 = !DILocation(line: 626, column: 13, scope: !1771)
!1771 = distinct !DILexicalBlock(scope: !1726, file: !1, line: 626, column: 7)
!1772 = !DILocation(line: 626, column: 12, scope: !1771)
!1773 = !DILocation(line: 626, column: 17, scope: !1774)
!1774 = distinct !DILexicalBlock(scope: !1771, file: !1, line: 626, column: 7)
!1775 = !DILocation(line: 626, column: 31, scope: !1774)
!1776 = !DILocation(line: 626, column: 19, scope: !1774)
!1777 = !DILocation(line: 626, column: 7, scope: !1771)
!1778 = !DILocation(line: 628, column: 25, scope: !1779)
!1779 = distinct !DILexicalBlock(scope: !1774, file: !1, line: 627, column: 7)
!1780 = !DILocation(line: 628, column: 39, scope: !1779)
!1781 = !DILocation(line: 628, column: 46, scope: !1779)
!1782 = !DILocation(line: 628, column: 11, scope: !1779)
!1783 = !DILocation(line: 628, column: 10, scope: !1779)
!1784 = !DILocation(line: 629, column: 9, scope: !1779)
!1785 = !DILocation(line: 630, column: 25, scope: !1779)
!1786 = !DILocation(line: 630, column: 39, scope: !1779)
!1787 = !DILocation(line: 630, column: 46, scope: !1779)
!1788 = !DILocation(line: 630, column: 11, scope: !1779)
!1789 = !DILocation(line: 630, column: 10, scope: !1779)
!1790 = !DILocation(line: 631, column: 9, scope: !1779)
!1791 = !DILocation(line: 632, column: 25, scope: !1779)
!1792 = !DILocation(line: 632, column: 39, scope: !1779)
!1793 = !DILocation(line: 632, column: 46, scope: !1779)
!1794 = !DILocation(line: 632, column: 11, scope: !1779)
!1795 = !DILocation(line: 632, column: 10, scope: !1779)
!1796 = !DILocation(line: 633, column: 9, scope: !1779)
!1797 = !DILocation(line: 634, column: 12, scope: !1779)
!1798 = !DILocation(line: 634, column: 26, scope: !1779)
!1799 = !DILocation(line: 634, column: 10, scope: !1779)
!1800 = !DILocation(line: 635, column: 10, scope: !1779)
!1801 = !DILocation(line: 636, column: 7, scope: !1779)
!1802 = !DILocation(line: 626, column: 47, scope: !1774)
!1803 = !DILocation(line: 626, column: 7, scope: !1774)
!1804 = distinct !{!1804, !1777, !1805}
!1805 = !DILocation(line: 636, column: 7, scope: !1771)
!1806 = !DILocation(line: 637, column: 7, scope: !1726)
!1807 = !DILocation(line: 641, column: 11, scope: !1808)
!1808 = distinct !DILexicalBlock(scope: !1809, file: !1, line: 641, column: 11)
!1809 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 640, column: 5)
!1810 = !DILocation(line: 641, column: 25, scope: !1808)
!1811 = !DILocation(line: 641, column: 32, scope: !1808)
!1812 = !DILocation(line: 641, column: 11, scope: !1809)
!1813 = !DILocalVariable(name: "pixel", scope: !1814, file: !1, line: 644, type: !456)
!1814 = distinct !DILexicalBlock(scope: !1808, file: !1, line: 642, column: 9)
!1815 = !DILocation(line: 644, column: 13, scope: !1814)
!1816 = !DILocation(line: 646, column: 17, scope: !1817)
!1817 = distinct !DILexicalBlock(scope: !1814, file: !1, line: 646, column: 11)
!1818 = !DILocation(line: 646, column: 16, scope: !1817)
!1819 = !DILocation(line: 646, column: 21, scope: !1820)
!1820 = distinct !DILexicalBlock(scope: !1817, file: !1, line: 646, column: 11)
!1821 = !DILocation(line: 646, column: 35, scope: !1820)
!1822 = !DILocation(line: 646, column: 23, scope: !1820)
!1823 = !DILocation(line: 646, column: 11, scope: !1817)
!1824 = !DILocation(line: 648, column: 31, scope: !1825)
!1825 = distinct !DILexicalBlock(scope: !1820, file: !1, line: 647, column: 11)
!1826 = !DILocation(line: 648, column: 44, scope: !1825)
!1827 = !DILocation(line: 648, column: 15, scope: !1825)
!1828 = !DILocation(line: 648, column: 14, scope: !1825)
!1829 = !DILocation(line: 649, column: 13, scope: !1825)
!1830 = !DILocation(line: 650, column: 31, scope: !1825)
!1831 = !DILocation(line: 650, column: 44, scope: !1825)
!1832 = !DILocation(line: 650, column: 15, scope: !1825)
!1833 = !DILocation(line: 650, column: 14, scope: !1825)
!1834 = !DILocation(line: 651, column: 13, scope: !1825)
!1835 = !DILocation(line: 652, column: 31, scope: !1825)
!1836 = !DILocation(line: 652, column: 44, scope: !1825)
!1837 = !DILocation(line: 652, column: 15, scope: !1825)
!1838 = !DILocation(line: 652, column: 14, scope: !1825)
!1839 = !DILocation(line: 653, column: 13, scope: !1825)
!1840 = !DILocation(line: 654, column: 16, scope: !1825)
!1841 = !DILocation(line: 654, column: 30, scope: !1825)
!1842 = !DILocation(line: 654, column: 14, scope: !1825)
!1843 = !DILocation(line: 655, column: 14, scope: !1825)
!1844 = !DILocation(line: 656, column: 11, scope: !1825)
!1845 = !DILocation(line: 646, column: 51, scope: !1820)
!1846 = !DILocation(line: 646, column: 11, scope: !1820)
!1847 = distinct !{!1847, !1823, !1848}
!1848 = !DILocation(line: 656, column: 11, scope: !1817)
!1849 = !DILocation(line: 657, column: 11, scope: !1814)
!1850 = !DILocation(line: 659, column: 5, scope: !1809)
!1851 = !DILocation(line: 662, column: 29, scope: !1852)
!1852 = distinct !DILexicalBlock(scope: !1313, file: !1, line: 661, column: 5)
!1853 = !DILocation(line: 662, column: 43, scope: !1852)
!1854 = !DILocation(line: 662, column: 13, scope: !1852)
!1855 = !DILocation(line: 662, column: 12, scope: !1852)
!1856 = !DILocation(line: 663, column: 13, scope: !1857)
!1857 = distinct !DILexicalBlock(scope: !1852, file: !1, line: 663, column: 7)
!1858 = !DILocation(line: 663, column: 12, scope: !1857)
!1859 = !DILocation(line: 663, column: 17, scope: !1860)
!1860 = distinct !DILexicalBlock(scope: !1857, file: !1, line: 663, column: 7)
!1861 = !DILocation(line: 663, column: 31, scope: !1860)
!1862 = !DILocation(line: 663, column: 19, scope: !1860)
!1863 = !DILocation(line: 663, column: 7, scope: !1857)
!1864 = !DILocation(line: 665, column: 28, scope: !1865)
!1865 = distinct !DILexicalBlock(scope: !1860, file: !1, line: 664, column: 7)
!1866 = !DILocation(line: 665, column: 41, scope: !1865)
!1867 = !DILocation(line: 665, column: 11, scope: !1865)
!1868 = !DILocation(line: 665, column: 10, scope: !1865)
!1869 = !DILocation(line: 666, column: 9, scope: !1865)
!1870 = !DILocation(line: 667, column: 28, scope: !1865)
!1871 = !DILocation(line: 667, column: 41, scope: !1865)
!1872 = !DILocation(line: 667, column: 11, scope: !1865)
!1873 = !DILocation(line: 667, column: 10, scope: !1865)
!1874 = !DILocation(line: 668, column: 9, scope: !1865)
!1875 = !DILocation(line: 669, column: 28, scope: !1865)
!1876 = !DILocation(line: 669, column: 41, scope: !1865)
!1877 = !DILocation(line: 669, column: 11, scope: !1865)
!1878 = !DILocation(line: 669, column: 10, scope: !1865)
!1879 = !DILocation(line: 670, column: 9, scope: !1865)
!1880 = !DILocation(line: 671, column: 10, scope: !1865)
!1881 = !DILocation(line: 672, column: 7, scope: !1865)
!1882 = !DILocation(line: 663, column: 47, scope: !1860)
!1883 = !DILocation(line: 663, column: 7, scope: !1860)
!1884 = distinct !{!1884, !1863, !1885}
!1885 = !DILocation(line: 672, column: 7, scope: !1857)
!1886 = !DILocation(line: 673, column: 7, scope: !1852)
!1887 = !DILocation(line: 676, column: 1, scope: !1291)
!1888 = distinct !DISubprogram(name: "ImportBGRAQuantum", scope: !1, file: !1, line: 678, type: !1062, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!1889 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !1888, file: !1, line: 678, type: !444)
!1890 = !DILocation(line: 678, column: 44, scope: !1888)
!1891 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !1888, file: !1, line: 679, type: !638)
!1892 = !DILocation(line: 679, column: 24, scope: !1888)
!1893 = !DILocalVariable(name: "p", arg: 3, scope: !1888, file: !1, line: 679, type: !717)
!1894 = !DILocation(line: 679, column: 68, scope: !1888)
!1895 = !DILocalVariable(name: "q", arg: 4, scope: !1888, file: !1, line: 680, type: !742)
!1896 = !DILocation(line: 680, column: 25, scope: !1888)
!1897 = !DILocalVariable(name: "range", scope: !1888, file: !1, line: 683, type: !501)
!1898 = !DILocation(line: 683, column: 5, scope: !1888)
!1899 = !DILocalVariable(name: "x", scope: !1888, file: !1, line: 686, type: !488)
!1900 = !DILocation(line: 686, column: 5, scope: !1888)
!1901 = !DILocalVariable(name: "pixel", scope: !1888, file: !1, line: 689, type: !5)
!1902 = !DILocation(line: 689, column: 5, scope: !1888)
!1903 = !DILocation(line: 691, column: 11, scope: !1888)
!1904 = !DILocation(line: 691, column: 25, scope: !1888)
!1905 = !DILocation(line: 691, column: 3, scope: !1888)
!1906 = !DILocalVariable(name: "pixel", scope: !1907, file: !1, line: 696, type: !438)
!1907 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 694, column: 5)
!1908 = distinct !DILexicalBlock(scope: !1888, file: !1, line: 692, column: 3)
!1909 = !DILocation(line: 696, column: 9, scope: !1907)
!1910 = !DILocation(line: 698, column: 13, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1907, file: !1, line: 698, column: 7)
!1912 = !DILocation(line: 698, column: 12, scope: !1911)
!1913 = !DILocation(line: 698, column: 17, scope: !1914)
!1914 = distinct !DILexicalBlock(scope: !1911, file: !1, line: 698, column: 7)
!1915 = !DILocation(line: 698, column: 31, scope: !1914)
!1916 = !DILocation(line: 698, column: 19, scope: !1914)
!1917 = !DILocation(line: 698, column: 7, scope: !1911)
!1918 = !DILocation(line: 700, column: 25, scope: !1919)
!1919 = distinct !DILexicalBlock(scope: !1914, file: !1, line: 699, column: 7)
!1920 = !DILocation(line: 700, column: 11, scope: !1919)
!1921 = !DILocation(line: 700, column: 10, scope: !1919)
!1922 = !DILocation(line: 701, column: 9, scope: !1919)
!1923 = !DILocation(line: 702, column: 25, scope: !1919)
!1924 = !DILocation(line: 702, column: 11, scope: !1919)
!1925 = !DILocation(line: 702, column: 10, scope: !1919)
!1926 = !DILocation(line: 703, column: 9, scope: !1919)
!1927 = !DILocation(line: 704, column: 25, scope: !1919)
!1928 = !DILocation(line: 704, column: 11, scope: !1919)
!1929 = !DILocation(line: 704, column: 10, scope: !1919)
!1930 = !DILocation(line: 705, column: 9, scope: !1919)
!1931 = !DILocation(line: 706, column: 25, scope: !1919)
!1932 = !DILocation(line: 706, column: 11, scope: !1919)
!1933 = !DILocation(line: 706, column: 10, scope: !1919)
!1934 = !DILocation(line: 707, column: 9, scope: !1919)
!1935 = !DILocation(line: 708, column: 12, scope: !1919)
!1936 = !DILocation(line: 708, column: 26, scope: !1919)
!1937 = !DILocation(line: 708, column: 10, scope: !1919)
!1938 = !DILocation(line: 709, column: 10, scope: !1919)
!1939 = !DILocation(line: 710, column: 7, scope: !1919)
!1940 = !DILocation(line: 698, column: 47, scope: !1914)
!1941 = !DILocation(line: 698, column: 7, scope: !1914)
!1942 = distinct !{!1942, !1917, !1943}
!1943 = !DILocation(line: 710, column: 7, scope: !1911)
!1944 = !DILocation(line: 711, column: 7, scope: !1907)
!1945 = !DILocation(line: 715, column: 12, scope: !1946)
!1946 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 714, column: 5)
!1947 = !DILocation(line: 716, column: 11, scope: !1948)
!1948 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 716, column: 11)
!1949 = !DILocation(line: 716, column: 25, scope: !1948)
!1950 = !DILocation(line: 716, column: 30, scope: !1948)
!1951 = !DILocation(line: 716, column: 11, scope: !1946)
!1952 = !DILocalVariable(name: "i", scope: !1953, file: !1, line: 719, type: !488)
!1953 = distinct !DILexicalBlock(scope: !1948, file: !1, line: 717, column: 9)
!1954 = !DILocation(line: 719, column: 13, scope: !1953)
!1955 = !DILocalVariable(name: "quantum", scope: !1953, file: !1, line: 722, type: !450)
!1956 = !DILocation(line: 722, column: 13, scope: !1953)
!1957 = !DILocalVariable(name: "n", scope: !1953, file: !1, line: 725, type: !488)
!1958 = !DILocation(line: 725, column: 13, scope: !1953)
!1959 = !DILocation(line: 727, column: 12, scope: !1953)
!1960 = !DILocation(line: 728, column: 18, scope: !1953)
!1961 = !DILocation(line: 729, column: 17, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 729, column: 11)
!1963 = !DILocation(line: 729, column: 16, scope: !1962)
!1964 = !DILocation(line: 729, column: 21, scope: !1965)
!1965 = distinct !DILexicalBlock(scope: !1962, file: !1, line: 729, column: 11)
!1966 = !DILocation(line: 729, column: 35, scope: !1965)
!1967 = !DILocation(line: 729, column: 23, scope: !1965)
!1968 = !DILocation(line: 729, column: 11, scope: !1962)
!1969 = !DILocation(line: 731, column: 19, scope: !1970)
!1970 = distinct !DILexicalBlock(scope: !1971, file: !1, line: 731, column: 13)
!1971 = distinct !DILexicalBlock(scope: !1965, file: !1, line: 730, column: 11)
!1972 = !DILocation(line: 731, column: 18, scope: !1970)
!1973 = !DILocation(line: 731, column: 23, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1970, file: !1, line: 731, column: 13)
!1975 = !DILocation(line: 731, column: 25, scope: !1974)
!1976 = !DILocation(line: 731, column: 13, scope: !1970)
!1977 = !DILocation(line: 733, column: 23, scope: !1978)
!1978 = distinct !DILexicalBlock(scope: !1974, file: !1, line: 732, column: 13)
!1979 = !DILocation(line: 733, column: 25, scope: !1978)
!1980 = !DILocation(line: 733, column: 15, scope: !1978)
!1981 = !DILocation(line: 737, column: 35, scope: !1982)
!1982 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 736, column: 17)
!1983 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 734, column: 15)
!1984 = !DILocation(line: 737, column: 49, scope: !1982)
!1985 = !DILocation(line: 737, column: 56, scope: !1982)
!1986 = !DILocation(line: 737, column: 21, scope: !1982)
!1987 = !DILocation(line: 737, column: 20, scope: !1982)
!1988 = !DILocation(line: 739, column: 24, scope: !1982)
!1989 = !DILocation(line: 739, column: 30, scope: !1982)
!1990 = !DILocation(line: 739, column: 37, scope: !1982)
!1991 = !DILocation(line: 739, column: 46, scope: !1982)
!1992 = !DILocation(line: 738, column: 57, scope: !1982)
!1993 = !DILocation(line: 738, column: 37, scope: !1982)
!1994 = !DILocation(line: 738, column: 27, scope: !1982)
!1995 = !DILocation(line: 738, column: 26, scope: !1982)
!1996 = !DILocation(line: 740, column: 19, scope: !1982)
!1997 = !DILocation(line: 745, column: 24, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 743, column: 17)
!1999 = !DILocation(line: 745, column: 30, scope: !1998)
!2000 = !DILocation(line: 745, column: 37, scope: !1998)
!2001 = !DILocation(line: 745, column: 46, scope: !1998)
!2002 = !DILocation(line: 744, column: 57, scope: !1998)
!2003 = !DILocation(line: 744, column: 37, scope: !1998)
!2004 = !DILocation(line: 744, column: 27, scope: !1998)
!2005 = !DILocation(line: 744, column: 26, scope: !1998)
!2006 = !DILocation(line: 746, column: 19, scope: !1998)
!2007 = !DILocation(line: 751, column: 24, scope: !2008)
!2008 = distinct !DILexicalBlock(scope: !1983, file: !1, line: 749, column: 17)
!2009 = !DILocation(line: 751, column: 30, scope: !2008)
!2010 = !DILocation(line: 751, column: 36, scope: !2008)
!2011 = !DILocation(line: 751, column: 45, scope: !2008)
!2012 = !DILocation(line: 750, column: 57, scope: !2008)
!2013 = !DILocation(line: 750, column: 37, scope: !2008)
!2014 = !DILocation(line: 750, column: 27, scope: !2008)
!2015 = !DILocation(line: 750, column: 26, scope: !2008)
!2016 = !DILocation(line: 752, column: 19, scope: !2008)
!2017 = !DILocation(line: 755, column: 23, scope: !1978)
!2018 = !DILocation(line: 755, column: 15, scope: !1978)
!2019 = !DILocation(line: 757, column: 25, scope: !2020)
!2020 = distinct !DILexicalBlock(scope: !1978, file: !1, line: 756, column: 15)
!2021 = !DILocation(line: 757, column: 49, scope: !2020)
!2022 = !DILocation(line: 758, column: 25, scope: !2020)
!2023 = !DILocation(line: 758, column: 51, scope: !2020)
!2024 = !DILocation(line: 759, column: 25, scope: !2020)
!2025 = !DILocation(line: 759, column: 50, scope: !2020)
!2026 = !DILocation(line: 760, column: 25, scope: !2020)
!2027 = !DILocation(line: 760, column: 51, scope: !2020)
!2028 = !DILocation(line: 762, column: 16, scope: !1978)
!2029 = !DILocation(line: 763, column: 13, scope: !1978)
!2030 = !DILocation(line: 731, column: 31, scope: !1974)
!2031 = !DILocation(line: 731, column: 13, scope: !1974)
!2032 = distinct !{!2032, !1976, !2033}
!2033 = !DILocation(line: 763, column: 13, scope: !1970)
!2034 = !DILocation(line: 764, column: 16, scope: !1971)
!2035 = !DILocation(line: 764, column: 30, scope: !1971)
!2036 = !DILocation(line: 764, column: 14, scope: !1971)
!2037 = !DILocation(line: 765, column: 14, scope: !1971)
!2038 = !DILocation(line: 766, column: 11, scope: !1971)
!2039 = !DILocation(line: 729, column: 51, scope: !1965)
!2040 = !DILocation(line: 729, column: 11, scope: !1965)
!2041 = distinct !{!2041, !1968, !2042}
!2042 = !DILocation(line: 766, column: 11, scope: !1962)
!2043 = !DILocation(line: 767, column: 11, scope: !1953)
!2044 = !DILocation(line: 769, column: 13, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !1946, file: !1, line: 769, column: 7)
!2046 = !DILocation(line: 769, column: 12, scope: !2045)
!2047 = !DILocation(line: 769, column: 17, scope: !2048)
!2048 = distinct !DILexicalBlock(scope: !2045, file: !1, line: 769, column: 7)
!2049 = !DILocation(line: 769, column: 31, scope: !2048)
!2050 = !DILocation(line: 769, column: 19, scope: !2048)
!2051 = !DILocation(line: 769, column: 7, scope: !2045)
!2052 = !DILocation(line: 771, column: 28, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2048, file: !1, line: 770, column: 7)
!2054 = !DILocation(line: 771, column: 41, scope: !2053)
!2055 = !DILocation(line: 771, column: 11, scope: !2053)
!2056 = !DILocation(line: 771, column: 10, scope: !2053)
!2057 = !DILocation(line: 772, column: 9, scope: !2053)
!2058 = !DILocation(line: 773, column: 28, scope: !2053)
!2059 = !DILocation(line: 773, column: 41, scope: !2053)
!2060 = !DILocation(line: 773, column: 11, scope: !2053)
!2061 = !DILocation(line: 773, column: 10, scope: !2053)
!2062 = !DILocation(line: 774, column: 9, scope: !2053)
!2063 = !DILocation(line: 775, column: 28, scope: !2053)
!2064 = !DILocation(line: 775, column: 41, scope: !2053)
!2065 = !DILocation(line: 775, column: 11, scope: !2053)
!2066 = !DILocation(line: 775, column: 10, scope: !2053)
!2067 = !DILocation(line: 776, column: 9, scope: !2053)
!2068 = !DILocation(line: 777, column: 28, scope: !2053)
!2069 = !DILocation(line: 777, column: 41, scope: !2053)
!2070 = !DILocation(line: 777, column: 11, scope: !2053)
!2071 = !DILocation(line: 777, column: 10, scope: !2053)
!2072 = !DILocation(line: 778, column: 9, scope: !2053)
!2073 = !DILocation(line: 779, column: 10, scope: !2053)
!2074 = !DILocation(line: 780, column: 7, scope: !2053)
!2075 = !DILocation(line: 769, column: 47, scope: !2048)
!2076 = !DILocation(line: 769, column: 7, scope: !2048)
!2077 = distinct !{!2077, !2051, !2078}
!2078 = !DILocation(line: 780, column: 7, scope: !2045)
!2079 = !DILocation(line: 781, column: 7, scope: !1946)
!2080 = !DILocalVariable(name: "pixel", scope: !2081, file: !1, line: 786, type: !494)
!2081 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 784, column: 5)
!2082 = !DILocation(line: 786, column: 9, scope: !2081)
!2083 = !DILocation(line: 788, column: 11, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 788, column: 11)
!2085 = !DILocation(line: 788, column: 25, scope: !2084)
!2086 = !DILocation(line: 788, column: 32, scope: !2084)
!2087 = !DILocation(line: 788, column: 11, scope: !2081)
!2088 = !DILocation(line: 790, column: 17, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2090, file: !1, line: 790, column: 11)
!2090 = distinct !DILexicalBlock(scope: !2084, file: !1, line: 789, column: 9)
!2091 = !DILocation(line: 790, column: 16, scope: !2089)
!2092 = !DILocation(line: 790, column: 21, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2089, file: !1, line: 790, column: 11)
!2094 = !DILocation(line: 790, column: 35, scope: !2093)
!2095 = !DILocation(line: 790, column: 23, scope: !2093)
!2096 = !DILocation(line: 790, column: 11, scope: !2089)
!2097 = !DILocation(line: 792, column: 30, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 791, column: 11)
!2099 = !DILocation(line: 792, column: 44, scope: !2098)
!2100 = !DILocation(line: 792, column: 51, scope: !2098)
!2101 = !DILocation(line: 792, column: 15, scope: !2098)
!2102 = !DILocation(line: 792, column: 14, scope: !2098)
!2103 = !DILocation(line: 793, column: 13, scope: !2098)
!2104 = !DILocation(line: 795, column: 30, scope: !2098)
!2105 = !DILocation(line: 795, column: 44, scope: !2098)
!2106 = !DILocation(line: 795, column: 51, scope: !2098)
!2107 = !DILocation(line: 795, column: 15, scope: !2098)
!2108 = !DILocation(line: 795, column: 14, scope: !2098)
!2109 = !DILocation(line: 796, column: 13, scope: !2098)
!2110 = !DILocation(line: 798, column: 30, scope: !2098)
!2111 = !DILocation(line: 798, column: 44, scope: !2098)
!2112 = !DILocation(line: 798, column: 51, scope: !2098)
!2113 = !DILocation(line: 798, column: 15, scope: !2098)
!2114 = !DILocation(line: 798, column: 14, scope: !2098)
!2115 = !DILocation(line: 799, column: 13, scope: !2098)
!2116 = !DILocation(line: 801, column: 30, scope: !2098)
!2117 = !DILocation(line: 801, column: 44, scope: !2098)
!2118 = !DILocation(line: 801, column: 51, scope: !2098)
!2119 = !DILocation(line: 801, column: 15, scope: !2098)
!2120 = !DILocation(line: 801, column: 14, scope: !2098)
!2121 = !DILocation(line: 802, column: 13, scope: !2098)
!2122 = !DILocation(line: 804, column: 16, scope: !2098)
!2123 = !DILocation(line: 804, column: 30, scope: !2098)
!2124 = !DILocation(line: 804, column: 14, scope: !2098)
!2125 = !DILocation(line: 805, column: 14, scope: !2098)
!2126 = !DILocation(line: 806, column: 11, scope: !2098)
!2127 = !DILocation(line: 790, column: 51, scope: !2093)
!2128 = !DILocation(line: 790, column: 11, scope: !2093)
!2129 = distinct !{!2129, !2096, !2130}
!2130 = !DILocation(line: 806, column: 11, scope: !2089)
!2131 = !DILocation(line: 807, column: 11, scope: !2090)
!2132 = !DILocation(line: 809, column: 13, scope: !2133)
!2133 = distinct !DILexicalBlock(scope: !2081, file: !1, line: 809, column: 7)
!2134 = !DILocation(line: 809, column: 12, scope: !2133)
!2135 = !DILocation(line: 809, column: 17, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !2133, file: !1, line: 809, column: 7)
!2137 = !DILocation(line: 809, column: 31, scope: !2136)
!2138 = !DILocation(line: 809, column: 19, scope: !2136)
!2139 = !DILocation(line: 809, column: 7, scope: !2133)
!2140 = !DILocation(line: 811, column: 26, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !2136, file: !1, line: 810, column: 7)
!2142 = !DILocation(line: 811, column: 40, scope: !2141)
!2143 = !DILocation(line: 811, column: 47, scope: !2141)
!2144 = !DILocation(line: 811, column: 11, scope: !2141)
!2145 = !DILocation(line: 811, column: 10, scope: !2141)
!2146 = !DILocation(line: 812, column: 9, scope: !2141)
!2147 = !DILocation(line: 813, column: 26, scope: !2141)
!2148 = !DILocation(line: 813, column: 40, scope: !2141)
!2149 = !DILocation(line: 813, column: 47, scope: !2141)
!2150 = !DILocation(line: 813, column: 11, scope: !2141)
!2151 = !DILocation(line: 813, column: 10, scope: !2141)
!2152 = !DILocation(line: 814, column: 9, scope: !2141)
!2153 = !DILocation(line: 815, column: 26, scope: !2141)
!2154 = !DILocation(line: 815, column: 40, scope: !2141)
!2155 = !DILocation(line: 815, column: 47, scope: !2141)
!2156 = !DILocation(line: 815, column: 11, scope: !2141)
!2157 = !DILocation(line: 815, column: 10, scope: !2141)
!2158 = !DILocation(line: 816, column: 9, scope: !2141)
!2159 = !DILocation(line: 817, column: 26, scope: !2141)
!2160 = !DILocation(line: 817, column: 40, scope: !2141)
!2161 = !DILocation(line: 817, column: 47, scope: !2141)
!2162 = !DILocation(line: 817, column: 11, scope: !2141)
!2163 = !DILocation(line: 817, column: 10, scope: !2141)
!2164 = !DILocation(line: 818, column: 9, scope: !2141)
!2165 = !DILocation(line: 819, column: 12, scope: !2141)
!2166 = !DILocation(line: 819, column: 26, scope: !2141)
!2167 = !DILocation(line: 819, column: 10, scope: !2141)
!2168 = !DILocation(line: 820, column: 10, scope: !2141)
!2169 = !DILocation(line: 821, column: 7, scope: !2141)
!2170 = !DILocation(line: 809, column: 47, scope: !2136)
!2171 = !DILocation(line: 809, column: 7, scope: !2136)
!2172 = distinct !{!2172, !2139, !2173}
!2173 = !DILocation(line: 821, column: 7, scope: !2133)
!2174 = !DILocation(line: 822, column: 7, scope: !2081)
!2175 = !DILocalVariable(name: "pixel", scope: !2176, file: !1, line: 827, type: !5)
!2176 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 825, column: 5)
!2177 = !DILocation(line: 827, column: 9, scope: !2176)
!2178 = !DILocation(line: 829, column: 11, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 829, column: 11)
!2180 = !DILocation(line: 829, column: 25, scope: !2179)
!2181 = !DILocation(line: 829, column: 32, scope: !2179)
!2182 = !DILocation(line: 829, column: 11, scope: !2176)
!2183 = !DILocalVariable(name: "pixel", scope: !2184, file: !1, line: 832, type: !496)
!2184 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 830, column: 9)
!2185 = !DILocation(line: 832, column: 13, scope: !2184)
!2186 = !DILocation(line: 834, column: 17, scope: !2187)
!2187 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 834, column: 11)
!2188 = !DILocation(line: 834, column: 16, scope: !2187)
!2189 = !DILocation(line: 834, column: 21, scope: !2190)
!2190 = distinct !DILexicalBlock(scope: !2187, file: !1, line: 834, column: 11)
!2191 = !DILocation(line: 834, column: 35, scope: !2190)
!2192 = !DILocation(line: 834, column: 23, scope: !2190)
!2193 = !DILocation(line: 834, column: 11, scope: !2187)
!2194 = !DILocation(line: 836, column: 30, scope: !2195)
!2195 = distinct !DILexicalBlock(scope: !2190, file: !1, line: 835, column: 11)
!2196 = !DILocation(line: 836, column: 43, scope: !2195)
!2197 = !DILocation(line: 836, column: 15, scope: !2195)
!2198 = !DILocation(line: 836, column: 14, scope: !2195)
!2199 = !DILocation(line: 837, column: 13, scope: !2195)
!2200 = !DILocation(line: 838, column: 30, scope: !2195)
!2201 = !DILocation(line: 838, column: 43, scope: !2195)
!2202 = !DILocation(line: 838, column: 15, scope: !2195)
!2203 = !DILocation(line: 838, column: 14, scope: !2195)
!2204 = !DILocation(line: 839, column: 13, scope: !2195)
!2205 = !DILocation(line: 840, column: 30, scope: !2195)
!2206 = !DILocation(line: 840, column: 43, scope: !2195)
!2207 = !DILocation(line: 840, column: 15, scope: !2195)
!2208 = !DILocation(line: 840, column: 14, scope: !2195)
!2209 = !DILocation(line: 841, column: 13, scope: !2195)
!2210 = !DILocation(line: 842, column: 30, scope: !2195)
!2211 = !DILocation(line: 842, column: 43, scope: !2195)
!2212 = !DILocation(line: 842, column: 15, scope: !2195)
!2213 = !DILocation(line: 842, column: 14, scope: !2195)
!2214 = !DILocation(line: 843, column: 13, scope: !2195)
!2215 = !DILocation(line: 844, column: 16, scope: !2195)
!2216 = !DILocation(line: 844, column: 30, scope: !2195)
!2217 = !DILocation(line: 844, column: 14, scope: !2195)
!2218 = !DILocation(line: 845, column: 14, scope: !2195)
!2219 = !DILocation(line: 846, column: 11, scope: !2195)
!2220 = !DILocation(line: 834, column: 51, scope: !2190)
!2221 = !DILocation(line: 834, column: 11, scope: !2190)
!2222 = distinct !{!2222, !2193, !2223}
!2223 = !DILocation(line: 846, column: 11, scope: !2187)
!2224 = !DILocation(line: 847, column: 11, scope: !2184)
!2225 = !DILocation(line: 849, column: 13, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2176, file: !1, line: 849, column: 7)
!2227 = !DILocation(line: 849, column: 12, scope: !2226)
!2228 = !DILocation(line: 849, column: 17, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2226, file: !1, line: 849, column: 7)
!2230 = !DILocation(line: 849, column: 31, scope: !2229)
!2231 = !DILocation(line: 849, column: 19, scope: !2229)
!2232 = !DILocation(line: 849, column: 7, scope: !2226)
!2233 = !DILocation(line: 851, column: 25, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2229, file: !1, line: 850, column: 7)
!2235 = !DILocation(line: 851, column: 39, scope: !2234)
!2236 = !DILocation(line: 851, column: 46, scope: !2234)
!2237 = !DILocation(line: 851, column: 11, scope: !2234)
!2238 = !DILocation(line: 851, column: 10, scope: !2234)
!2239 = !DILocation(line: 852, column: 9, scope: !2234)
!2240 = !DILocation(line: 853, column: 25, scope: !2234)
!2241 = !DILocation(line: 853, column: 39, scope: !2234)
!2242 = !DILocation(line: 853, column: 46, scope: !2234)
!2243 = !DILocation(line: 853, column: 11, scope: !2234)
!2244 = !DILocation(line: 853, column: 10, scope: !2234)
!2245 = !DILocation(line: 854, column: 9, scope: !2234)
!2246 = !DILocation(line: 855, column: 25, scope: !2234)
!2247 = !DILocation(line: 855, column: 39, scope: !2234)
!2248 = !DILocation(line: 855, column: 46, scope: !2234)
!2249 = !DILocation(line: 855, column: 11, scope: !2234)
!2250 = !DILocation(line: 855, column: 10, scope: !2234)
!2251 = !DILocation(line: 856, column: 9, scope: !2234)
!2252 = !DILocation(line: 857, column: 25, scope: !2234)
!2253 = !DILocation(line: 857, column: 39, scope: !2234)
!2254 = !DILocation(line: 857, column: 46, scope: !2234)
!2255 = !DILocation(line: 857, column: 11, scope: !2234)
!2256 = !DILocation(line: 857, column: 10, scope: !2234)
!2257 = !DILocation(line: 858, column: 9, scope: !2234)
!2258 = !DILocation(line: 859, column: 12, scope: !2234)
!2259 = !DILocation(line: 859, column: 26, scope: !2234)
!2260 = !DILocation(line: 859, column: 10, scope: !2234)
!2261 = !DILocation(line: 860, column: 10, scope: !2234)
!2262 = !DILocation(line: 861, column: 7, scope: !2234)
!2263 = !DILocation(line: 849, column: 47, scope: !2229)
!2264 = !DILocation(line: 849, column: 7, scope: !2229)
!2265 = distinct !{!2265, !2232, !2266}
!2266 = !DILocation(line: 861, column: 7, scope: !2226)
!2267 = !DILocation(line: 862, column: 7, scope: !2176)
!2268 = !DILocation(line: 866, column: 11, scope: !2269)
!2269 = distinct !DILexicalBlock(scope: !2270, file: !1, line: 866, column: 11)
!2270 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 865, column: 5)
!2271 = !DILocation(line: 866, column: 25, scope: !2269)
!2272 = !DILocation(line: 866, column: 32, scope: !2269)
!2273 = !DILocation(line: 866, column: 11, scope: !2270)
!2274 = !DILocalVariable(name: "pixel", scope: !2275, file: !1, line: 869, type: !456)
!2275 = distinct !DILexicalBlock(scope: !2269, file: !1, line: 867, column: 9)
!2276 = !DILocation(line: 869, column: 13, scope: !2275)
!2277 = !DILocation(line: 871, column: 17, scope: !2278)
!2278 = distinct !DILexicalBlock(scope: !2275, file: !1, line: 871, column: 11)
!2279 = !DILocation(line: 871, column: 16, scope: !2278)
!2280 = !DILocation(line: 871, column: 21, scope: !2281)
!2281 = distinct !DILexicalBlock(scope: !2278, file: !1, line: 871, column: 11)
!2282 = !DILocation(line: 871, column: 35, scope: !2281)
!2283 = !DILocation(line: 871, column: 23, scope: !2281)
!2284 = !DILocation(line: 871, column: 11, scope: !2278)
!2285 = !DILocation(line: 873, column: 31, scope: !2286)
!2286 = distinct !DILexicalBlock(scope: !2281, file: !1, line: 872, column: 11)
!2287 = !DILocation(line: 873, column: 44, scope: !2286)
!2288 = !DILocation(line: 873, column: 15, scope: !2286)
!2289 = !DILocation(line: 873, column: 14, scope: !2286)
!2290 = !DILocation(line: 874, column: 13, scope: !2286)
!2291 = !DILocation(line: 875, column: 31, scope: !2286)
!2292 = !DILocation(line: 875, column: 44, scope: !2286)
!2293 = !DILocation(line: 875, column: 15, scope: !2286)
!2294 = !DILocation(line: 875, column: 14, scope: !2286)
!2295 = !DILocation(line: 876, column: 13, scope: !2286)
!2296 = !DILocation(line: 877, column: 31, scope: !2286)
!2297 = !DILocation(line: 877, column: 44, scope: !2286)
!2298 = !DILocation(line: 877, column: 15, scope: !2286)
!2299 = !DILocation(line: 877, column: 14, scope: !2286)
!2300 = !DILocation(line: 878, column: 13, scope: !2286)
!2301 = !DILocation(line: 879, column: 31, scope: !2286)
!2302 = !DILocation(line: 879, column: 44, scope: !2286)
!2303 = !DILocation(line: 879, column: 15, scope: !2286)
!2304 = !DILocation(line: 879, column: 14, scope: !2286)
!2305 = !DILocation(line: 880, column: 13, scope: !2286)
!2306 = !DILocation(line: 881, column: 16, scope: !2286)
!2307 = !DILocation(line: 881, column: 30, scope: !2286)
!2308 = !DILocation(line: 881, column: 14, scope: !2286)
!2309 = !DILocation(line: 882, column: 14, scope: !2286)
!2310 = !DILocation(line: 883, column: 11, scope: !2286)
!2311 = !DILocation(line: 871, column: 51, scope: !2281)
!2312 = !DILocation(line: 871, column: 11, scope: !2281)
!2313 = distinct !{!2313, !2284, !2314}
!2314 = !DILocation(line: 883, column: 11, scope: !2278)
!2315 = !DILocation(line: 884, column: 11, scope: !2275)
!2316 = !DILocation(line: 886, column: 5, scope: !2270)
!2317 = !DILocation(line: 889, column: 29, scope: !2318)
!2318 = distinct !DILexicalBlock(scope: !1908, file: !1, line: 888, column: 5)
!2319 = !DILocation(line: 889, column: 43, scope: !2318)
!2320 = !DILocation(line: 889, column: 13, scope: !2318)
!2321 = !DILocation(line: 889, column: 12, scope: !2318)
!2322 = !DILocation(line: 890, column: 13, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2318, file: !1, line: 890, column: 7)
!2324 = !DILocation(line: 890, column: 12, scope: !2323)
!2325 = !DILocation(line: 890, column: 17, scope: !2326)
!2326 = distinct !DILexicalBlock(scope: !2323, file: !1, line: 890, column: 7)
!2327 = !DILocation(line: 890, column: 31, scope: !2326)
!2328 = !DILocation(line: 890, column: 19, scope: !2326)
!2329 = !DILocation(line: 890, column: 7, scope: !2323)
!2330 = !DILocation(line: 892, column: 28, scope: !2331)
!2331 = distinct !DILexicalBlock(scope: !2326, file: !1, line: 891, column: 7)
!2332 = !DILocation(line: 892, column: 41, scope: !2331)
!2333 = !DILocation(line: 892, column: 11, scope: !2331)
!2334 = !DILocation(line: 892, column: 10, scope: !2331)
!2335 = !DILocation(line: 893, column: 9, scope: !2331)
!2336 = !DILocation(line: 894, column: 28, scope: !2331)
!2337 = !DILocation(line: 894, column: 41, scope: !2331)
!2338 = !DILocation(line: 894, column: 11, scope: !2331)
!2339 = !DILocation(line: 894, column: 10, scope: !2331)
!2340 = !DILocation(line: 895, column: 9, scope: !2331)
!2341 = !DILocation(line: 896, column: 28, scope: !2331)
!2342 = !DILocation(line: 896, column: 41, scope: !2331)
!2343 = !DILocation(line: 896, column: 11, scope: !2331)
!2344 = !DILocation(line: 896, column: 10, scope: !2331)
!2345 = !DILocation(line: 897, column: 9, scope: !2331)
!2346 = !DILocation(line: 898, column: 28, scope: !2331)
!2347 = !DILocation(line: 898, column: 41, scope: !2331)
!2348 = !DILocation(line: 898, column: 11, scope: !2331)
!2349 = !DILocation(line: 898, column: 10, scope: !2331)
!2350 = !DILocation(line: 899, column: 9, scope: !2331)
!2351 = !DILocation(line: 900, column: 10, scope: !2331)
!2352 = !DILocation(line: 901, column: 7, scope: !2331)
!2353 = !DILocation(line: 890, column: 47, scope: !2326)
!2354 = !DILocation(line: 890, column: 7, scope: !2326)
!2355 = distinct !{!2355, !2329, !2356}
!2356 = !DILocation(line: 901, column: 7, scope: !2323)
!2357 = !DILocation(line: 902, column: 7, scope: !2318)
!2358 = !DILocation(line: 905, column: 1, scope: !1888)
!2359 = distinct !DISubprogram(name: "ImportBlackQuantum", scope: !1, file: !1, line: 907, type: !2360, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2360 = !DISubroutineType(types: !2361)
!2361 = !{null, !2362, !444, !638, !717, !742, !737, !718}
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!2364 = !DILocalVariable(name: "image", arg: 1, scope: !2359, file: !1, line: 907, type: !2362)
!2365 = !DILocation(line: 907, column: 45, scope: !2359)
!2366 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !2359, file: !1, line: 907, type: !444)
!2367 = !DILocation(line: 907, column: 64, scope: !2359)
!2368 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !2359, file: !1, line: 908, type: !638)
!2369 = !DILocation(line: 908, column: 24, scope: !2359)
!2370 = !DILocalVariable(name: "p", arg: 4, scope: !2359, file: !1, line: 908, type: !717)
!2371 = !DILocation(line: 908, column: 68, scope: !2359)
!2372 = !DILocalVariable(name: "q", arg: 5, scope: !2359, file: !1, line: 909, type: !742)
!2373 = !DILocation(line: 909, column: 25, scope: !2359)
!2374 = !DILocalVariable(name: "indexes", arg: 6, scope: !2359, file: !1, line: 909, type: !737)
!2375 = !DILocation(line: 909, column: 49, scope: !2359)
!2376 = !DILocalVariable(name: "exception", arg: 7, scope: !2359, file: !1, line: 910, type: !718)
!2377 = !DILocation(line: 910, column: 18, scope: !2359)
!2378 = !DILocalVariable(name: "x", scope: !2359, file: !1, line: 913, type: !488)
!2379 = !DILocation(line: 913, column: 5, scope: !2359)
!2380 = !DILocalVariable(name: "pixel", scope: !2359, file: !1, line: 916, type: !5)
!2381 = !DILocation(line: 916, column: 5, scope: !2359)
!2382 = !DILocation(line: 918, column: 7, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2359, file: !1, line: 918, column: 7)
!2384 = !DILocation(line: 918, column: 14, scope: !2383)
!2385 = !DILocation(line: 918, column: 25, scope: !2383)
!2386 = !DILocation(line: 918, column: 7, scope: !2359)
!2387 = !DILocation(line: 920, column: 35, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2383, file: !1, line: 919, column: 5)
!2389 = !DILocation(line: 921, column: 46, scope: !2388)
!2390 = !DILocation(line: 921, column: 53, scope: !2388)
!2391 = !DILocation(line: 920, column: 14, scope: !2388)
!2392 = !DILocation(line: 922, column: 7, scope: !2388)
!2393 = !DILocation(line: 924, column: 11, scope: !2359)
!2394 = !DILocation(line: 924, column: 25, scope: !2359)
!2395 = !DILocation(line: 924, column: 3, scope: !2359)
!2396 = !DILocalVariable(name: "pixel", scope: !2397, file: !1, line: 929, type: !438)
!2397 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 927, column: 5)
!2398 = distinct !DILexicalBlock(scope: !2359, file: !1, line: 925, column: 3)
!2399 = !DILocation(line: 929, column: 9, scope: !2397)
!2400 = !DILocation(line: 931, column: 13, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2397, file: !1, line: 931, column: 7)
!2402 = !DILocation(line: 931, column: 12, scope: !2401)
!2403 = !DILocation(line: 931, column: 17, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2401, file: !1, line: 931, column: 7)
!2405 = !DILocation(line: 931, column: 31, scope: !2404)
!2406 = !DILocation(line: 931, column: 19, scope: !2404)
!2407 = !DILocation(line: 931, column: 7, scope: !2401)
!2408 = !DILocation(line: 933, column: 25, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2404, file: !1, line: 932, column: 7)
!2410 = !DILocation(line: 933, column: 11, scope: !2409)
!2411 = !DILocation(line: 933, column: 10, scope: !2409)
!2412 = !DILocation(line: 934, column: 9, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2414, file: !1, line: 934, column: 9)
!2414 = distinct !DILexicalBlock(scope: !2409, file: !1, line: 934, column: 9)
!2415 = !DILocation(line: 934, column: 9, scope: !2414)
!2416 = !DILocation(line: 935, column: 12, scope: !2409)
!2417 = !DILocation(line: 935, column: 26, scope: !2409)
!2418 = !DILocation(line: 935, column: 10, scope: !2409)
!2419 = !DILocation(line: 936, column: 7, scope: !2409)
!2420 = !DILocation(line: 931, column: 47, scope: !2404)
!2421 = !DILocation(line: 931, column: 7, scope: !2404)
!2422 = distinct !{!2422, !2407, !2423}
!2423 = !DILocation(line: 936, column: 7, scope: !2401)
!2424 = !DILocation(line: 937, column: 7, scope: !2397)
!2425 = !DILocalVariable(name: "pixel", scope: !2426, file: !1, line: 942, type: !494)
!2426 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 940, column: 5)
!2427 = !DILocation(line: 942, column: 9, scope: !2426)
!2428 = !DILocation(line: 944, column: 11, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2426, file: !1, line: 944, column: 11)
!2430 = !DILocation(line: 944, column: 25, scope: !2429)
!2431 = !DILocation(line: 944, column: 32, scope: !2429)
!2432 = !DILocation(line: 944, column: 11, scope: !2426)
!2433 = !DILocation(line: 946, column: 17, scope: !2434)
!2434 = distinct !DILexicalBlock(scope: !2435, file: !1, line: 946, column: 11)
!2435 = distinct !DILexicalBlock(scope: !2429, file: !1, line: 945, column: 9)
!2436 = !DILocation(line: 946, column: 16, scope: !2434)
!2437 = !DILocation(line: 946, column: 21, scope: !2438)
!2438 = distinct !DILexicalBlock(scope: !2434, file: !1, line: 946, column: 11)
!2439 = !DILocation(line: 946, column: 35, scope: !2438)
!2440 = !DILocation(line: 946, column: 23, scope: !2438)
!2441 = !DILocation(line: 946, column: 11, scope: !2434)
!2442 = !DILocation(line: 948, column: 30, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2438, file: !1, line: 947, column: 11)
!2444 = !DILocation(line: 948, column: 44, scope: !2443)
!2445 = !DILocation(line: 948, column: 51, scope: !2443)
!2446 = !DILocation(line: 948, column: 15, scope: !2443)
!2447 = !DILocation(line: 948, column: 14, scope: !2443)
!2448 = !DILocation(line: 949, column: 13, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2450, file: !1, line: 949, column: 13)
!2450 = distinct !DILexicalBlock(scope: !2443, file: !1, line: 949, column: 13)
!2451 = !DILocation(line: 949, column: 13, scope: !2450)
!2452 = !DILocation(line: 951, column: 16, scope: !2443)
!2453 = !DILocation(line: 951, column: 30, scope: !2443)
!2454 = !DILocation(line: 951, column: 14, scope: !2443)
!2455 = !DILocation(line: 952, column: 11, scope: !2443)
!2456 = !DILocation(line: 946, column: 51, scope: !2438)
!2457 = !DILocation(line: 946, column: 11, scope: !2438)
!2458 = distinct !{!2458, !2441, !2459}
!2459 = !DILocation(line: 952, column: 11, scope: !2434)
!2460 = !DILocation(line: 953, column: 11, scope: !2435)
!2461 = !DILocation(line: 955, column: 13, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2426, file: !1, line: 955, column: 7)
!2463 = !DILocation(line: 955, column: 12, scope: !2462)
!2464 = !DILocation(line: 955, column: 17, scope: !2465)
!2465 = distinct !DILexicalBlock(scope: !2462, file: !1, line: 955, column: 7)
!2466 = !DILocation(line: 955, column: 31, scope: !2465)
!2467 = !DILocation(line: 955, column: 19, scope: !2465)
!2468 = !DILocation(line: 955, column: 7, scope: !2462)
!2469 = !DILocation(line: 957, column: 26, scope: !2470)
!2470 = distinct !DILexicalBlock(scope: !2465, file: !1, line: 956, column: 7)
!2471 = !DILocation(line: 957, column: 40, scope: !2470)
!2472 = !DILocation(line: 957, column: 47, scope: !2470)
!2473 = !DILocation(line: 957, column: 11, scope: !2470)
!2474 = !DILocation(line: 957, column: 10, scope: !2470)
!2475 = !DILocation(line: 958, column: 9, scope: !2476)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !1, line: 958, column: 9)
!2477 = distinct !DILexicalBlock(scope: !2470, file: !1, line: 958, column: 9)
!2478 = !DILocation(line: 958, column: 9, scope: !2477)
!2479 = !DILocation(line: 959, column: 12, scope: !2470)
!2480 = !DILocation(line: 959, column: 26, scope: !2470)
!2481 = !DILocation(line: 959, column: 10, scope: !2470)
!2482 = !DILocation(line: 960, column: 7, scope: !2470)
!2483 = !DILocation(line: 955, column: 47, scope: !2465)
!2484 = !DILocation(line: 955, column: 7, scope: !2465)
!2485 = distinct !{!2485, !2468, !2486}
!2486 = !DILocation(line: 960, column: 7, scope: !2462)
!2487 = !DILocation(line: 961, column: 7, scope: !2426)
!2488 = !DILocalVariable(name: "pixel", scope: !2489, file: !1, line: 966, type: !5)
!2489 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 964, column: 5)
!2490 = !DILocation(line: 966, column: 9, scope: !2489)
!2491 = !DILocation(line: 968, column: 11, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 968, column: 11)
!2493 = !DILocation(line: 968, column: 25, scope: !2492)
!2494 = !DILocation(line: 968, column: 32, scope: !2492)
!2495 = !DILocation(line: 968, column: 11, scope: !2489)
!2496 = !DILocalVariable(name: "pixel", scope: !2497, file: !1, line: 971, type: !496)
!2497 = distinct !DILexicalBlock(scope: !2492, file: !1, line: 969, column: 9)
!2498 = !DILocation(line: 971, column: 13, scope: !2497)
!2499 = !DILocation(line: 973, column: 17, scope: !2500)
!2500 = distinct !DILexicalBlock(scope: !2497, file: !1, line: 973, column: 11)
!2501 = !DILocation(line: 973, column: 16, scope: !2500)
!2502 = !DILocation(line: 973, column: 21, scope: !2503)
!2503 = distinct !DILexicalBlock(scope: !2500, file: !1, line: 973, column: 11)
!2504 = !DILocation(line: 973, column: 35, scope: !2503)
!2505 = !DILocation(line: 973, column: 23, scope: !2503)
!2506 = !DILocation(line: 973, column: 11, scope: !2500)
!2507 = !DILocation(line: 975, column: 30, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2503, file: !1, line: 974, column: 11)
!2509 = !DILocation(line: 975, column: 43, scope: !2508)
!2510 = !DILocation(line: 975, column: 15, scope: !2508)
!2511 = !DILocation(line: 975, column: 14, scope: !2508)
!2512 = !DILocation(line: 976, column: 13, scope: !2513)
!2513 = distinct !DILexicalBlock(scope: !2514, file: !1, line: 976, column: 13)
!2514 = distinct !DILexicalBlock(scope: !2508, file: !1, line: 976, column: 13)
!2515 = !DILocation(line: 976, column: 13, scope: !2514)
!2516 = !DILocation(line: 977, column: 16, scope: !2508)
!2517 = !DILocation(line: 977, column: 30, scope: !2508)
!2518 = !DILocation(line: 977, column: 14, scope: !2508)
!2519 = !DILocation(line: 978, column: 14, scope: !2508)
!2520 = !DILocation(line: 979, column: 11, scope: !2508)
!2521 = !DILocation(line: 973, column: 51, scope: !2503)
!2522 = !DILocation(line: 973, column: 11, scope: !2503)
!2523 = distinct !{!2523, !2506, !2524}
!2524 = !DILocation(line: 979, column: 11, scope: !2500)
!2525 = !DILocation(line: 980, column: 11, scope: !2497)
!2526 = !DILocation(line: 982, column: 13, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 982, column: 7)
!2528 = !DILocation(line: 982, column: 12, scope: !2527)
!2529 = !DILocation(line: 982, column: 17, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2527, file: !1, line: 982, column: 7)
!2531 = !DILocation(line: 982, column: 31, scope: !2530)
!2532 = !DILocation(line: 982, column: 19, scope: !2530)
!2533 = !DILocation(line: 982, column: 7, scope: !2527)
!2534 = !DILocation(line: 984, column: 25, scope: !2535)
!2535 = distinct !DILexicalBlock(scope: !2530, file: !1, line: 983, column: 7)
!2536 = !DILocation(line: 984, column: 39, scope: !2535)
!2537 = !DILocation(line: 984, column: 46, scope: !2535)
!2538 = !DILocation(line: 984, column: 11, scope: !2535)
!2539 = !DILocation(line: 984, column: 10, scope: !2535)
!2540 = !DILocation(line: 985, column: 9, scope: !2541)
!2541 = distinct !DILexicalBlock(scope: !2542, file: !1, line: 985, column: 9)
!2542 = distinct !DILexicalBlock(scope: !2535, file: !1, line: 985, column: 9)
!2543 = !DILocation(line: 985, column: 9, scope: !2542)
!2544 = !DILocation(line: 986, column: 12, scope: !2535)
!2545 = !DILocation(line: 986, column: 26, scope: !2535)
!2546 = !DILocation(line: 986, column: 10, scope: !2535)
!2547 = !DILocation(line: 987, column: 10, scope: !2535)
!2548 = !DILocation(line: 988, column: 7, scope: !2535)
!2549 = !DILocation(line: 982, column: 47, scope: !2530)
!2550 = !DILocation(line: 982, column: 7, scope: !2530)
!2551 = distinct !{!2551, !2533, !2552}
!2552 = !DILocation(line: 988, column: 7, scope: !2527)
!2553 = !DILocation(line: 989, column: 7, scope: !2489)
!2554 = !DILocation(line: 993, column: 11, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2556, file: !1, line: 993, column: 11)
!2556 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 992, column: 5)
!2557 = !DILocation(line: 993, column: 25, scope: !2555)
!2558 = !DILocation(line: 993, column: 32, scope: !2555)
!2559 = !DILocation(line: 993, column: 11, scope: !2556)
!2560 = !DILocalVariable(name: "pixel", scope: !2561, file: !1, line: 996, type: !456)
!2561 = distinct !DILexicalBlock(scope: !2555, file: !1, line: 994, column: 9)
!2562 = !DILocation(line: 996, column: 13, scope: !2561)
!2563 = !DILocation(line: 998, column: 17, scope: !2564)
!2564 = distinct !DILexicalBlock(scope: !2561, file: !1, line: 998, column: 11)
!2565 = !DILocation(line: 998, column: 16, scope: !2564)
!2566 = !DILocation(line: 998, column: 21, scope: !2567)
!2567 = distinct !DILexicalBlock(scope: !2564, file: !1, line: 998, column: 11)
!2568 = !DILocation(line: 998, column: 35, scope: !2567)
!2569 = !DILocation(line: 998, column: 23, scope: !2567)
!2570 = !DILocation(line: 998, column: 11, scope: !2564)
!2571 = !DILocation(line: 1000, column: 31, scope: !2572)
!2572 = distinct !DILexicalBlock(scope: !2567, file: !1, line: 999, column: 11)
!2573 = !DILocation(line: 1000, column: 44, scope: !2572)
!2574 = !DILocation(line: 1000, column: 15, scope: !2572)
!2575 = !DILocation(line: 1000, column: 14, scope: !2572)
!2576 = !DILocation(line: 1001, column: 13, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2578, file: !1, line: 1001, column: 13)
!2578 = distinct !DILexicalBlock(scope: !2572, file: !1, line: 1001, column: 13)
!2579 = !DILocation(line: 1001, column: 13, scope: !2578)
!2580 = !DILocation(line: 1002, column: 16, scope: !2572)
!2581 = !DILocation(line: 1002, column: 30, scope: !2572)
!2582 = !DILocation(line: 1002, column: 14, scope: !2572)
!2583 = !DILocation(line: 1003, column: 14, scope: !2572)
!2584 = !DILocation(line: 1004, column: 11, scope: !2572)
!2585 = !DILocation(line: 998, column: 51, scope: !2567)
!2586 = !DILocation(line: 998, column: 11, scope: !2567)
!2587 = distinct !{!2587, !2570, !2588}
!2588 = !DILocation(line: 1004, column: 11, scope: !2564)
!2589 = !DILocation(line: 1005, column: 11, scope: !2561)
!2590 = !DILocation(line: 1007, column: 5, scope: !2556)
!2591 = !DILocalVariable(name: "range", scope: !2592, file: !1, line: 1011, type: !501)
!2592 = distinct !DILexicalBlock(scope: !2398, file: !1, line: 1009, column: 5)
!2593 = !DILocation(line: 1011, column: 9, scope: !2592)
!2594 = !DILocation(line: 1013, column: 29, scope: !2592)
!2595 = !DILocation(line: 1013, column: 43, scope: !2592)
!2596 = !DILocation(line: 1013, column: 13, scope: !2592)
!2597 = !DILocation(line: 1013, column: 12, scope: !2592)
!2598 = !DILocation(line: 1014, column: 13, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2592, file: !1, line: 1014, column: 7)
!2600 = !DILocation(line: 1014, column: 12, scope: !2599)
!2601 = !DILocation(line: 1014, column: 17, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2599, file: !1, line: 1014, column: 7)
!2603 = !DILocation(line: 1014, column: 31, scope: !2602)
!2604 = !DILocation(line: 1014, column: 19, scope: !2602)
!2605 = !DILocation(line: 1014, column: 7, scope: !2599)
!2606 = !DILocation(line: 1016, column: 28, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2602, file: !1, line: 1015, column: 7)
!2608 = !DILocation(line: 1016, column: 41, scope: !2607)
!2609 = !DILocation(line: 1016, column: 11, scope: !2607)
!2610 = !DILocation(line: 1016, column: 10, scope: !2607)
!2611 = !DILocation(line: 1017, column: 9, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2613, file: !1, line: 1017, column: 9)
!2613 = distinct !DILexicalBlock(scope: !2607, file: !1, line: 1017, column: 9)
!2614 = !DILocation(line: 1017, column: 9, scope: !2613)
!2615 = !DILocation(line: 1018, column: 12, scope: !2607)
!2616 = !DILocation(line: 1018, column: 26, scope: !2607)
!2617 = !DILocation(line: 1018, column: 10, scope: !2607)
!2618 = !DILocation(line: 1019, column: 10, scope: !2607)
!2619 = !DILocation(line: 1020, column: 7, scope: !2607)
!2620 = !DILocation(line: 1014, column: 47, scope: !2602)
!2621 = !DILocation(line: 1014, column: 7, scope: !2602)
!2622 = distinct !{!2622, !2605, !2623}
!2623 = !DILocation(line: 1020, column: 7, scope: !2599)
!2624 = !DILocation(line: 1021, column: 7, scope: !2592)
!2625 = !DILocation(line: 1024, column: 1, scope: !2359)
!2626 = distinct !DISubprogram(name: "ImportBlueQuantum", scope: !1, file: !1, line: 1026, type: !1062, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2627 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !2626, file: !1, line: 1026, type: !444)
!2628 = !DILocation(line: 1026, column: 44, scope: !2626)
!2629 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !2626, file: !1, line: 1027, type: !638)
!2630 = !DILocation(line: 1027, column: 24, scope: !2626)
!2631 = !DILocalVariable(name: "p", arg: 3, scope: !2626, file: !1, line: 1027, type: !717)
!2632 = !DILocation(line: 1027, column: 68, scope: !2626)
!2633 = !DILocalVariable(name: "q", arg: 4, scope: !2626, file: !1, line: 1028, type: !742)
!2634 = !DILocation(line: 1028, column: 25, scope: !2626)
!2635 = !DILocalVariable(name: "x", scope: !2626, file: !1, line: 1031, type: !488)
!2636 = !DILocation(line: 1031, column: 5, scope: !2626)
!2637 = !DILocalVariable(name: "pixel", scope: !2626, file: !1, line: 1034, type: !5)
!2638 = !DILocation(line: 1034, column: 5, scope: !2626)
!2639 = !DILocation(line: 1036, column: 11, scope: !2626)
!2640 = !DILocation(line: 1036, column: 25, scope: !2626)
!2641 = !DILocation(line: 1036, column: 3, scope: !2626)
!2642 = !DILocalVariable(name: "pixel", scope: !2643, file: !1, line: 1041, type: !438)
!2643 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1039, column: 5)
!2644 = distinct !DILexicalBlock(scope: !2626, file: !1, line: 1037, column: 3)
!2645 = !DILocation(line: 1041, column: 9, scope: !2643)
!2646 = !DILocation(line: 1043, column: 13, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2643, file: !1, line: 1043, column: 7)
!2648 = !DILocation(line: 1043, column: 12, scope: !2647)
!2649 = !DILocation(line: 1043, column: 17, scope: !2650)
!2650 = distinct !DILexicalBlock(scope: !2647, file: !1, line: 1043, column: 7)
!2651 = !DILocation(line: 1043, column: 31, scope: !2650)
!2652 = !DILocation(line: 1043, column: 19, scope: !2650)
!2653 = !DILocation(line: 1043, column: 7, scope: !2647)
!2654 = !DILocation(line: 1045, column: 25, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2650, file: !1, line: 1044, column: 7)
!2656 = !DILocation(line: 1045, column: 11, scope: !2655)
!2657 = !DILocation(line: 1045, column: 10, scope: !2655)
!2658 = !DILocation(line: 1046, column: 9, scope: !2655)
!2659 = !DILocation(line: 1047, column: 12, scope: !2655)
!2660 = !DILocation(line: 1047, column: 26, scope: !2655)
!2661 = !DILocation(line: 1047, column: 10, scope: !2655)
!2662 = !DILocation(line: 1048, column: 10, scope: !2655)
!2663 = !DILocation(line: 1049, column: 7, scope: !2655)
!2664 = !DILocation(line: 1043, column: 47, scope: !2650)
!2665 = !DILocation(line: 1043, column: 7, scope: !2650)
!2666 = distinct !{!2666, !2653, !2667}
!2667 = !DILocation(line: 1049, column: 7, scope: !2647)
!2668 = !DILocation(line: 1050, column: 7, scope: !2643)
!2669 = !DILocalVariable(name: "pixel", scope: !2670, file: !1, line: 1055, type: !494)
!2670 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1053, column: 5)
!2671 = !DILocation(line: 1055, column: 9, scope: !2670)
!2672 = !DILocation(line: 1057, column: 11, scope: !2673)
!2673 = distinct !DILexicalBlock(scope: !2670, file: !1, line: 1057, column: 11)
!2674 = !DILocation(line: 1057, column: 25, scope: !2673)
!2675 = !DILocation(line: 1057, column: 32, scope: !2673)
!2676 = !DILocation(line: 1057, column: 11, scope: !2670)
!2677 = !DILocation(line: 1059, column: 17, scope: !2678)
!2678 = distinct !DILexicalBlock(scope: !2679, file: !1, line: 1059, column: 11)
!2679 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 1058, column: 9)
!2680 = !DILocation(line: 1059, column: 16, scope: !2678)
!2681 = !DILocation(line: 1059, column: 21, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2678, file: !1, line: 1059, column: 11)
!2683 = !DILocation(line: 1059, column: 35, scope: !2682)
!2684 = !DILocation(line: 1059, column: 23, scope: !2682)
!2685 = !DILocation(line: 1059, column: 11, scope: !2678)
!2686 = !DILocation(line: 1061, column: 30, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2682, file: !1, line: 1060, column: 11)
!2688 = !DILocation(line: 1061, column: 44, scope: !2687)
!2689 = !DILocation(line: 1061, column: 51, scope: !2687)
!2690 = !DILocation(line: 1061, column: 15, scope: !2687)
!2691 = !DILocation(line: 1061, column: 14, scope: !2687)
!2692 = !DILocation(line: 1062, column: 13, scope: !2687)
!2693 = !DILocation(line: 1064, column: 16, scope: !2687)
!2694 = !DILocation(line: 1064, column: 30, scope: !2687)
!2695 = !DILocation(line: 1064, column: 14, scope: !2687)
!2696 = !DILocation(line: 1065, column: 14, scope: !2687)
!2697 = !DILocation(line: 1066, column: 11, scope: !2687)
!2698 = !DILocation(line: 1059, column: 51, scope: !2682)
!2699 = !DILocation(line: 1059, column: 11, scope: !2682)
!2700 = distinct !{!2700, !2685, !2701}
!2701 = !DILocation(line: 1066, column: 11, scope: !2678)
!2702 = !DILocation(line: 1067, column: 11, scope: !2679)
!2703 = !DILocation(line: 1069, column: 13, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2670, file: !1, line: 1069, column: 7)
!2705 = !DILocation(line: 1069, column: 12, scope: !2704)
!2706 = !DILocation(line: 1069, column: 17, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2704, file: !1, line: 1069, column: 7)
!2708 = !DILocation(line: 1069, column: 31, scope: !2707)
!2709 = !DILocation(line: 1069, column: 19, scope: !2707)
!2710 = !DILocation(line: 1069, column: 7, scope: !2704)
!2711 = !DILocation(line: 1071, column: 26, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2707, file: !1, line: 1070, column: 7)
!2713 = !DILocation(line: 1071, column: 40, scope: !2712)
!2714 = !DILocation(line: 1071, column: 47, scope: !2712)
!2715 = !DILocation(line: 1071, column: 11, scope: !2712)
!2716 = !DILocation(line: 1071, column: 10, scope: !2712)
!2717 = !DILocation(line: 1072, column: 9, scope: !2712)
!2718 = !DILocation(line: 1073, column: 12, scope: !2712)
!2719 = !DILocation(line: 1073, column: 26, scope: !2712)
!2720 = !DILocation(line: 1073, column: 10, scope: !2712)
!2721 = !DILocation(line: 1074, column: 10, scope: !2712)
!2722 = !DILocation(line: 1075, column: 7, scope: !2712)
!2723 = !DILocation(line: 1069, column: 47, scope: !2707)
!2724 = !DILocation(line: 1069, column: 7, scope: !2707)
!2725 = distinct !{!2725, !2710, !2726}
!2726 = !DILocation(line: 1075, column: 7, scope: !2704)
!2727 = !DILocation(line: 1076, column: 7, scope: !2670)
!2728 = !DILocalVariable(name: "pixel", scope: !2729, file: !1, line: 1081, type: !5)
!2729 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1079, column: 5)
!2730 = !DILocation(line: 1081, column: 9, scope: !2729)
!2731 = !DILocation(line: 1083, column: 11, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2729, file: !1, line: 1083, column: 11)
!2733 = !DILocation(line: 1083, column: 25, scope: !2732)
!2734 = !DILocation(line: 1083, column: 32, scope: !2732)
!2735 = !DILocation(line: 1083, column: 11, scope: !2729)
!2736 = !DILocalVariable(name: "pixel", scope: !2737, file: !1, line: 1086, type: !496)
!2737 = distinct !DILexicalBlock(scope: !2732, file: !1, line: 1084, column: 9)
!2738 = !DILocation(line: 1086, column: 13, scope: !2737)
!2739 = !DILocation(line: 1088, column: 17, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2737, file: !1, line: 1088, column: 11)
!2741 = !DILocation(line: 1088, column: 16, scope: !2740)
!2742 = !DILocation(line: 1088, column: 21, scope: !2743)
!2743 = distinct !DILexicalBlock(scope: !2740, file: !1, line: 1088, column: 11)
!2744 = !DILocation(line: 1088, column: 35, scope: !2743)
!2745 = !DILocation(line: 1088, column: 23, scope: !2743)
!2746 = !DILocation(line: 1088, column: 11, scope: !2740)
!2747 = !DILocation(line: 1090, column: 30, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2743, file: !1, line: 1089, column: 11)
!2749 = !DILocation(line: 1090, column: 43, scope: !2748)
!2750 = !DILocation(line: 1090, column: 15, scope: !2748)
!2751 = !DILocation(line: 1090, column: 14, scope: !2748)
!2752 = !DILocation(line: 1091, column: 13, scope: !2748)
!2753 = !DILocation(line: 1092, column: 16, scope: !2748)
!2754 = !DILocation(line: 1092, column: 30, scope: !2748)
!2755 = !DILocation(line: 1092, column: 14, scope: !2748)
!2756 = !DILocation(line: 1093, column: 14, scope: !2748)
!2757 = !DILocation(line: 1094, column: 11, scope: !2748)
!2758 = !DILocation(line: 1088, column: 51, scope: !2743)
!2759 = !DILocation(line: 1088, column: 11, scope: !2743)
!2760 = distinct !{!2760, !2746, !2761}
!2761 = !DILocation(line: 1094, column: 11, scope: !2740)
!2762 = !DILocation(line: 1095, column: 11, scope: !2737)
!2763 = !DILocation(line: 1097, column: 13, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2729, file: !1, line: 1097, column: 7)
!2765 = !DILocation(line: 1097, column: 12, scope: !2764)
!2766 = !DILocation(line: 1097, column: 17, scope: !2767)
!2767 = distinct !DILexicalBlock(scope: !2764, file: !1, line: 1097, column: 7)
!2768 = !DILocation(line: 1097, column: 31, scope: !2767)
!2769 = !DILocation(line: 1097, column: 19, scope: !2767)
!2770 = !DILocation(line: 1097, column: 7, scope: !2764)
!2771 = !DILocation(line: 1099, column: 25, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2767, file: !1, line: 1098, column: 7)
!2773 = !DILocation(line: 1099, column: 39, scope: !2772)
!2774 = !DILocation(line: 1099, column: 46, scope: !2772)
!2775 = !DILocation(line: 1099, column: 11, scope: !2772)
!2776 = !DILocation(line: 1099, column: 10, scope: !2772)
!2777 = !DILocation(line: 1100, column: 9, scope: !2772)
!2778 = !DILocation(line: 1101, column: 12, scope: !2772)
!2779 = !DILocation(line: 1101, column: 26, scope: !2772)
!2780 = !DILocation(line: 1101, column: 10, scope: !2772)
!2781 = !DILocation(line: 1102, column: 10, scope: !2772)
!2782 = !DILocation(line: 1103, column: 7, scope: !2772)
!2783 = !DILocation(line: 1097, column: 47, scope: !2767)
!2784 = !DILocation(line: 1097, column: 7, scope: !2767)
!2785 = distinct !{!2785, !2770, !2786}
!2786 = !DILocation(line: 1103, column: 7, scope: !2764)
!2787 = !DILocation(line: 1104, column: 7, scope: !2729)
!2788 = !DILocation(line: 1108, column: 11, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2790, file: !1, line: 1108, column: 11)
!2790 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1107, column: 5)
!2791 = !DILocation(line: 1108, column: 25, scope: !2789)
!2792 = !DILocation(line: 1108, column: 32, scope: !2789)
!2793 = !DILocation(line: 1108, column: 11, scope: !2790)
!2794 = !DILocalVariable(name: "pixel", scope: !2795, file: !1, line: 1111, type: !456)
!2795 = distinct !DILexicalBlock(scope: !2789, file: !1, line: 1109, column: 9)
!2796 = !DILocation(line: 1111, column: 13, scope: !2795)
!2797 = !DILocation(line: 1113, column: 17, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2795, file: !1, line: 1113, column: 11)
!2799 = !DILocation(line: 1113, column: 16, scope: !2798)
!2800 = !DILocation(line: 1113, column: 21, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2798, file: !1, line: 1113, column: 11)
!2802 = !DILocation(line: 1113, column: 35, scope: !2801)
!2803 = !DILocation(line: 1113, column: 23, scope: !2801)
!2804 = !DILocation(line: 1113, column: 11, scope: !2798)
!2805 = !DILocation(line: 1115, column: 31, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2801, file: !1, line: 1114, column: 11)
!2807 = !DILocation(line: 1115, column: 44, scope: !2806)
!2808 = !DILocation(line: 1115, column: 15, scope: !2806)
!2809 = !DILocation(line: 1115, column: 14, scope: !2806)
!2810 = !DILocation(line: 1116, column: 13, scope: !2806)
!2811 = !DILocation(line: 1117, column: 16, scope: !2806)
!2812 = !DILocation(line: 1117, column: 30, scope: !2806)
!2813 = !DILocation(line: 1117, column: 14, scope: !2806)
!2814 = !DILocation(line: 1118, column: 14, scope: !2806)
!2815 = !DILocation(line: 1119, column: 11, scope: !2806)
!2816 = !DILocation(line: 1113, column: 51, scope: !2801)
!2817 = !DILocation(line: 1113, column: 11, scope: !2801)
!2818 = distinct !{!2818, !2804, !2819}
!2819 = !DILocation(line: 1119, column: 11, scope: !2798)
!2820 = !DILocation(line: 1120, column: 11, scope: !2795)
!2821 = !DILocation(line: 1122, column: 5, scope: !2790)
!2822 = !DILocalVariable(name: "range", scope: !2823, file: !1, line: 1126, type: !501)
!2823 = distinct !DILexicalBlock(scope: !2644, file: !1, line: 1124, column: 5)
!2824 = !DILocation(line: 1126, column: 9, scope: !2823)
!2825 = !DILocation(line: 1128, column: 29, scope: !2823)
!2826 = !DILocation(line: 1128, column: 43, scope: !2823)
!2827 = !DILocation(line: 1128, column: 13, scope: !2823)
!2828 = !DILocation(line: 1128, column: 12, scope: !2823)
!2829 = !DILocation(line: 1129, column: 13, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2823, file: !1, line: 1129, column: 7)
!2831 = !DILocation(line: 1129, column: 12, scope: !2830)
!2832 = !DILocation(line: 1129, column: 17, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 1129, column: 7)
!2834 = !DILocation(line: 1129, column: 31, scope: !2833)
!2835 = !DILocation(line: 1129, column: 19, scope: !2833)
!2836 = !DILocation(line: 1129, column: 7, scope: !2830)
!2837 = !DILocation(line: 1131, column: 28, scope: !2838)
!2838 = distinct !DILexicalBlock(scope: !2833, file: !1, line: 1130, column: 7)
!2839 = !DILocation(line: 1131, column: 41, scope: !2838)
!2840 = !DILocation(line: 1131, column: 11, scope: !2838)
!2841 = !DILocation(line: 1131, column: 10, scope: !2838)
!2842 = !DILocation(line: 1132, column: 9, scope: !2838)
!2843 = !DILocation(line: 1133, column: 12, scope: !2838)
!2844 = !DILocation(line: 1133, column: 26, scope: !2838)
!2845 = !DILocation(line: 1133, column: 10, scope: !2838)
!2846 = !DILocation(line: 1134, column: 10, scope: !2838)
!2847 = !DILocation(line: 1135, column: 7, scope: !2838)
!2848 = !DILocation(line: 1129, column: 47, scope: !2833)
!2849 = !DILocation(line: 1129, column: 7, scope: !2833)
!2850 = distinct !{!2850, !2836, !2851}
!2851 = !DILocation(line: 1135, column: 7, scope: !2830)
!2852 = !DILocation(line: 1136, column: 7, scope: !2823)
!2853 = !DILocation(line: 1139, column: 1, scope: !2626)
!2854 = distinct !DISubprogram(name: "ImportCbYCrYQuantum", scope: !1, file: !1, line: 1141, type: !2855, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{null, !2362, !444, !638, !717, !742}
!2857 = !DILocalVariable(name: "image", arg: 1, scope: !2854, file: !1, line: 1141, type: !2362)
!2858 = !DILocation(line: 1141, column: 46, scope: !2854)
!2859 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !2854, file: !1, line: 1141, type: !444)
!2860 = !DILocation(line: 1141, column: 65, scope: !2854)
!2861 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !2854, file: !1, line: 1142, type: !638)
!2862 = !DILocation(line: 1142, column: 24, scope: !2854)
!2863 = !DILocalVariable(name: "p", arg: 4, scope: !2854, file: !1, line: 1142, type: !717)
!2864 = !DILocation(line: 1142, column: 68, scope: !2854)
!2865 = !DILocalVariable(name: "q", arg: 5, scope: !2854, file: !1, line: 1143, type: !742)
!2866 = !DILocation(line: 1143, column: 25, scope: !2854)
!2867 = !DILocalVariable(name: "x", scope: !2854, file: !1, line: 1146, type: !488)
!2868 = !DILocation(line: 1146, column: 5, scope: !2854)
!2869 = !DILocalVariable(name: "pixel", scope: !2854, file: !1, line: 1149, type: !5)
!2870 = !DILocation(line: 1149, column: 5, scope: !2854)
!2871 = !DILocation(line: 1151, column: 11, scope: !2854)
!2872 = !DILocation(line: 1151, column: 25, scope: !2854)
!2873 = !DILocation(line: 1151, column: 3, scope: !2854)
!2874 = !DILocalVariable(name: "cbcr", scope: !2875, file: !1, line: 1156, type: !2877)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !1, line: 1154, column: 5)
!2876 = distinct !DILexicalBlock(scope: !2854, file: !1, line: 1152, column: 3)
!2877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2878)
!2878 = !{!2879}
!2879 = !DISubrange(count: 4)
!2880 = !DILocation(line: 1156, column: 9, scope: !2875)
!2881 = !DILocation(line: 1158, column: 12, scope: !2875)
!2882 = !DILocation(line: 1159, column: 11, scope: !2883)
!2883 = distinct !DILexicalBlock(scope: !2875, file: !1, line: 1159, column: 11)
!2884 = !DILocation(line: 1159, column: 25, scope: !2883)
!2885 = !DILocation(line: 1159, column: 30, scope: !2883)
!2886 = !DILocation(line: 1159, column: 11, scope: !2875)
!2887 = !DILocalVariable(name: "i", scope: !2888, file: !1, line: 1162, type: !488)
!2888 = distinct !DILexicalBlock(scope: !2883, file: !1, line: 1160, column: 9)
!2889 = !DILocation(line: 1162, column: 13, scope: !2888)
!2890 = !DILocalVariable(name: "quantum", scope: !2888, file: !1, line: 1165, type: !450)
!2891 = !DILocation(line: 1165, column: 13, scope: !2888)
!2892 = !DILocalVariable(name: "n", scope: !2888, file: !1, line: 1168, type: !488)
!2893 = !DILocation(line: 1168, column: 13, scope: !2888)
!2894 = !DILocation(line: 1170, column: 12, scope: !2888)
!2895 = !DILocation(line: 1171, column: 18, scope: !2888)
!2896 = !DILocation(line: 1172, column: 17, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2888, file: !1, line: 1172, column: 11)
!2898 = !DILocation(line: 1172, column: 16, scope: !2897)
!2899 = !DILocation(line: 1172, column: 21, scope: !2900)
!2900 = distinct !DILexicalBlock(scope: !2897, file: !1, line: 1172, column: 11)
!2901 = !DILocation(line: 1172, column: 35, scope: !2900)
!2902 = !DILocation(line: 1172, column: 23, scope: !2900)
!2903 = !DILocation(line: 1172, column: 11, scope: !2897)
!2904 = !DILocation(line: 1174, column: 19, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !1, line: 1174, column: 13)
!2906 = distinct !DILexicalBlock(scope: !2900, file: !1, line: 1173, column: 11)
!2907 = !DILocation(line: 1174, column: 18, scope: !2905)
!2908 = !DILocation(line: 1174, column: 23, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2905, file: !1, line: 1174, column: 13)
!2910 = !DILocation(line: 1174, column: 25, scope: !2909)
!2911 = !DILocation(line: 1174, column: 13, scope: !2905)
!2912 = !DILocation(line: 1176, column: 23, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2909, file: !1, line: 1175, column: 13)
!2914 = !DILocation(line: 1176, column: 25, scope: !2913)
!2915 = !DILocation(line: 1176, column: 15, scope: !2913)
!2916 = !DILocation(line: 1180, column: 35, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1179, column: 17)
!2918 = distinct !DILexicalBlock(scope: !2913, file: !1, line: 1177, column: 15)
!2919 = !DILocation(line: 1180, column: 49, scope: !2917)
!2920 = !DILocation(line: 1180, column: 56, scope: !2917)
!2921 = !DILocation(line: 1180, column: 21, scope: !2917)
!2922 = !DILocation(line: 1180, column: 20, scope: !2917)
!2923 = !DILocation(line: 1182, column: 24, scope: !2917)
!2924 = !DILocation(line: 1182, column: 30, scope: !2917)
!2925 = !DILocation(line: 1182, column: 37, scope: !2917)
!2926 = !DILocation(line: 1182, column: 46, scope: !2917)
!2927 = !DILocation(line: 1181, column: 57, scope: !2917)
!2928 = !DILocation(line: 1181, column: 37, scope: !2917)
!2929 = !DILocation(line: 1181, column: 27, scope: !2917)
!2930 = !DILocation(line: 1181, column: 26, scope: !2917)
!2931 = !DILocation(line: 1183, column: 19, scope: !2917)
!2932 = !DILocation(line: 1188, column: 24, scope: !2933)
!2933 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1186, column: 17)
!2934 = !DILocation(line: 1188, column: 30, scope: !2933)
!2935 = !DILocation(line: 1188, column: 37, scope: !2933)
!2936 = !DILocation(line: 1188, column: 46, scope: !2933)
!2937 = !DILocation(line: 1187, column: 57, scope: !2933)
!2938 = !DILocation(line: 1187, column: 37, scope: !2933)
!2939 = !DILocation(line: 1187, column: 27, scope: !2933)
!2940 = !DILocation(line: 1187, column: 26, scope: !2933)
!2941 = !DILocation(line: 1189, column: 19, scope: !2933)
!2942 = !DILocation(line: 1194, column: 24, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1192, column: 17)
!2944 = !DILocation(line: 1194, column: 30, scope: !2943)
!2945 = !DILocation(line: 1194, column: 36, scope: !2943)
!2946 = !DILocation(line: 1194, column: 45, scope: !2943)
!2947 = !DILocation(line: 1193, column: 57, scope: !2943)
!2948 = !DILocation(line: 1193, column: 37, scope: !2943)
!2949 = !DILocation(line: 1193, column: 27, scope: !2943)
!2950 = !DILocation(line: 1193, column: 26, scope: !2943)
!2951 = !DILocation(line: 1195, column: 19, scope: !2943)
!2952 = !DILocation(line: 1198, column: 34, scope: !2913)
!2953 = !DILocation(line: 1198, column: 23, scope: !2913)
!2954 = !DILocation(line: 1198, column: 20, scope: !2913)
!2955 = !DILocation(line: 1198, column: 15, scope: !2913)
!2956 = !DILocation(line: 1198, column: 22, scope: !2913)
!2957 = !DILocation(line: 1199, column: 16, scope: !2913)
!2958 = !DILocation(line: 1200, column: 13, scope: !2913)
!2959 = !DILocation(line: 1174, column: 31, scope: !2909)
!2960 = !DILocation(line: 1174, column: 13, scope: !2909)
!2961 = distinct !{!2961, !2911, !2962}
!2962 = !DILocation(line: 1200, column: 13, scope: !2905)
!2963 = !DILocation(line: 1201, column: 16, scope: !2906)
!2964 = !DILocation(line: 1201, column: 30, scope: !2906)
!2965 = !DILocation(line: 1201, column: 14, scope: !2906)
!2966 = !DILocation(line: 1202, column: 13, scope: !2906)
!2967 = !DILocation(line: 1203, column: 13, scope: !2906)
!2968 = !DILocation(line: 1204, column: 13, scope: !2906)
!2969 = !DILocation(line: 1205, column: 14, scope: !2906)
!2970 = !DILocation(line: 1206, column: 13, scope: !2906)
!2971 = !DILocation(line: 1207, column: 13, scope: !2906)
!2972 = !DILocation(line: 1208, column: 13, scope: !2906)
!2973 = !DILocation(line: 1209, column: 14, scope: !2906)
!2974 = !DILocation(line: 1210, column: 11, scope: !2906)
!2975 = !DILocation(line: 1172, column: 51, scope: !2900)
!2976 = !DILocation(line: 1172, column: 11, scope: !2900)
!2977 = distinct !{!2977, !2903, !2978}
!2978 = !DILocation(line: 1210, column: 11, scope: !2897)
!2979 = !DILocation(line: 1211, column: 11, scope: !2888)
!2980 = !DILocation(line: 1213, column: 5, scope: !2875)
!2981 = !DILocalVariable(name: "range", scope: !2982, file: !1, line: 1217, type: !501)
!2982 = distinct !DILexicalBlock(scope: !2876, file: !1, line: 1215, column: 5)
!2983 = !DILocation(line: 1217, column: 9, scope: !2982)
!2984 = !DILocation(line: 1219, column: 29, scope: !2982)
!2985 = !DILocation(line: 1219, column: 36, scope: !2982)
!2986 = !DILocation(line: 1219, column: 13, scope: !2982)
!2987 = !DILocation(line: 1219, column: 12, scope: !2982)
!2988 = !DILocation(line: 1220, column: 13, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 1220, column: 7)
!2990 = !DILocation(line: 1220, column: 12, scope: !2989)
!2991 = !DILocation(line: 1220, column: 17, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2989, file: !1, line: 1220, column: 7)
!2993 = !DILocation(line: 1220, column: 31, scope: !2992)
!2994 = !DILocation(line: 1220, column: 19, scope: !2992)
!2995 = !DILocation(line: 1220, column: 7, scope: !2989)
!2996 = !DILocation(line: 1222, column: 28, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2992, file: !1, line: 1221, column: 7)
!2998 = !DILocation(line: 1222, column: 41, scope: !2997)
!2999 = !DILocation(line: 1222, column: 11, scope: !2997)
!3000 = !DILocation(line: 1222, column: 10, scope: !2997)
!3001 = !DILocation(line: 1223, column: 9, scope: !2997)
!3002 = !DILocation(line: 1224, column: 28, scope: !2997)
!3003 = !DILocation(line: 1224, column: 41, scope: !2997)
!3004 = !DILocation(line: 1224, column: 11, scope: !2997)
!3005 = !DILocation(line: 1224, column: 10, scope: !2997)
!3006 = !DILocation(line: 1225, column: 9, scope: !2997)
!3007 = !DILocation(line: 1226, column: 10, scope: !2997)
!3008 = !DILocation(line: 1227, column: 7, scope: !2997)
!3009 = !DILocation(line: 1220, column: 47, scope: !2992)
!3010 = !DILocation(line: 1220, column: 7, scope: !2992)
!3011 = distinct !{!3011, !2995, !3012}
!3012 = !DILocation(line: 1227, column: 7, scope: !2989)
!3013 = !DILocation(line: 1228, column: 7, scope: !2982)
!3014 = !DILocation(line: 1231, column: 1, scope: !2854)
!3015 = distinct !DISubprogram(name: "ImportCMYKQuantum", scope: !1, file: !1, line: 1233, type: !2360, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3016 = !DILocalVariable(name: "image", arg: 1, scope: !3015, file: !1, line: 1233, type: !2362)
!3017 = !DILocation(line: 1233, column: 44, scope: !3015)
!3018 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !3015, file: !1, line: 1233, type: !444)
!3019 = !DILocation(line: 1233, column: 63, scope: !3015)
!3020 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !3015, file: !1, line: 1234, type: !638)
!3021 = !DILocation(line: 1234, column: 24, scope: !3015)
!3022 = !DILocalVariable(name: "p", arg: 4, scope: !3015, file: !1, line: 1234, type: !717)
!3023 = !DILocation(line: 1234, column: 68, scope: !3015)
!3024 = !DILocalVariable(name: "q", arg: 5, scope: !3015, file: !1, line: 1235, type: !742)
!3025 = !DILocation(line: 1235, column: 25, scope: !3015)
!3026 = !DILocalVariable(name: "indexes", arg: 6, scope: !3015, file: !1, line: 1235, type: !737)
!3027 = !DILocation(line: 1235, column: 49, scope: !3015)
!3028 = !DILocalVariable(name: "exception", arg: 7, scope: !3015, file: !1, line: 1236, type: !718)
!3029 = !DILocation(line: 1236, column: 18, scope: !3015)
!3030 = !DILocalVariable(name: "range", scope: !3015, file: !1, line: 1239, type: !501)
!3031 = !DILocation(line: 1239, column: 5, scope: !3015)
!3032 = !DILocalVariable(name: "x", scope: !3015, file: !1, line: 1242, type: !488)
!3033 = !DILocation(line: 1242, column: 5, scope: !3015)
!3034 = !DILocalVariable(name: "pixel", scope: !3015, file: !1, line: 1245, type: !5)
!3035 = !DILocation(line: 1245, column: 5, scope: !3015)
!3036 = !DILocation(line: 1247, column: 7, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 1247, column: 7)
!3038 = !DILocation(line: 1247, column: 14, scope: !3037)
!3039 = !DILocation(line: 1247, column: 25, scope: !3037)
!3040 = !DILocation(line: 1247, column: 7, scope: !3015)
!3041 = !DILocation(line: 1249, column: 35, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3037, file: !1, line: 1248, column: 5)
!3043 = !DILocation(line: 1250, column: 46, scope: !3042)
!3044 = !DILocation(line: 1250, column: 53, scope: !3042)
!3045 = !DILocation(line: 1249, column: 14, scope: !3042)
!3046 = !DILocation(line: 1251, column: 7, scope: !3042)
!3047 = !DILocation(line: 1253, column: 11, scope: !3015)
!3048 = !DILocation(line: 1253, column: 25, scope: !3015)
!3049 = !DILocation(line: 1253, column: 3, scope: !3015)
!3050 = !DILocalVariable(name: "pixel", scope: !3051, file: !1, line: 1258, type: !438)
!3051 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 1256, column: 5)
!3052 = distinct !DILexicalBlock(scope: !3015, file: !1, line: 1254, column: 3)
!3053 = !DILocation(line: 1258, column: 9, scope: !3051)
!3054 = !DILocation(line: 1260, column: 13, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3051, file: !1, line: 1260, column: 7)
!3056 = !DILocation(line: 1260, column: 12, scope: !3055)
!3057 = !DILocation(line: 1260, column: 17, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3055, file: !1, line: 1260, column: 7)
!3059 = !DILocation(line: 1260, column: 31, scope: !3058)
!3060 = !DILocation(line: 1260, column: 19, scope: !3058)
!3061 = !DILocation(line: 1260, column: 7, scope: !3055)
!3062 = !DILocation(line: 1262, column: 25, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3058, file: !1, line: 1261, column: 7)
!3064 = !DILocation(line: 1262, column: 11, scope: !3063)
!3065 = !DILocation(line: 1262, column: 10, scope: !3063)
!3066 = !DILocation(line: 1263, column: 9, scope: !3063)
!3067 = !DILocation(line: 1264, column: 25, scope: !3063)
!3068 = !DILocation(line: 1264, column: 11, scope: !3063)
!3069 = !DILocation(line: 1264, column: 10, scope: !3063)
!3070 = !DILocation(line: 1265, column: 9, scope: !3063)
!3071 = !DILocation(line: 1266, column: 25, scope: !3063)
!3072 = !DILocation(line: 1266, column: 11, scope: !3063)
!3073 = !DILocation(line: 1266, column: 10, scope: !3063)
!3074 = !DILocation(line: 1267, column: 9, scope: !3063)
!3075 = !DILocation(line: 1268, column: 25, scope: !3063)
!3076 = !DILocation(line: 1268, column: 11, scope: !3063)
!3077 = !DILocation(line: 1268, column: 10, scope: !3063)
!3078 = !DILocation(line: 1269, column: 9, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3080, file: !1, line: 1269, column: 9)
!3080 = distinct !DILexicalBlock(scope: !3063, file: !1, line: 1269, column: 9)
!3081 = !DILocation(line: 1269, column: 9, scope: !3080)
!3082 = !DILocation(line: 1270, column: 12, scope: !3063)
!3083 = !DILocation(line: 1270, column: 26, scope: !3063)
!3084 = !DILocation(line: 1270, column: 10, scope: !3063)
!3085 = !DILocation(line: 1271, column: 10, scope: !3063)
!3086 = !DILocation(line: 1272, column: 7, scope: !3063)
!3087 = !DILocation(line: 1260, column: 47, scope: !3058)
!3088 = !DILocation(line: 1260, column: 7, scope: !3058)
!3089 = distinct !{!3089, !3061, !3090}
!3090 = !DILocation(line: 1272, column: 7, scope: !3055)
!3091 = !DILocation(line: 1273, column: 7, scope: !3051)
!3092 = !DILocalVariable(name: "pixel", scope: !3093, file: !1, line: 1278, type: !494)
!3093 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 1276, column: 5)
!3094 = !DILocation(line: 1278, column: 9, scope: !3093)
!3095 = !DILocation(line: 1280, column: 11, scope: !3096)
!3096 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 1280, column: 11)
!3097 = !DILocation(line: 1280, column: 25, scope: !3096)
!3098 = !DILocation(line: 1280, column: 32, scope: !3096)
!3099 = !DILocation(line: 1280, column: 11, scope: !3093)
!3100 = !DILocation(line: 1282, column: 17, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3102, file: !1, line: 1282, column: 11)
!3102 = distinct !DILexicalBlock(scope: !3096, file: !1, line: 1281, column: 9)
!3103 = !DILocation(line: 1282, column: 16, scope: !3101)
!3104 = !DILocation(line: 1282, column: 21, scope: !3105)
!3105 = distinct !DILexicalBlock(scope: !3101, file: !1, line: 1282, column: 11)
!3106 = !DILocation(line: 1282, column: 35, scope: !3105)
!3107 = !DILocation(line: 1282, column: 23, scope: !3105)
!3108 = !DILocation(line: 1282, column: 11, scope: !3101)
!3109 = !DILocation(line: 1284, column: 30, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3105, file: !1, line: 1283, column: 11)
!3111 = !DILocation(line: 1284, column: 44, scope: !3110)
!3112 = !DILocation(line: 1284, column: 51, scope: !3110)
!3113 = !DILocation(line: 1284, column: 15, scope: !3110)
!3114 = !DILocation(line: 1284, column: 14, scope: !3110)
!3115 = !DILocation(line: 1285, column: 13, scope: !3110)
!3116 = !DILocation(line: 1287, column: 30, scope: !3110)
!3117 = !DILocation(line: 1287, column: 44, scope: !3110)
!3118 = !DILocation(line: 1287, column: 51, scope: !3110)
!3119 = !DILocation(line: 1287, column: 15, scope: !3110)
!3120 = !DILocation(line: 1287, column: 14, scope: !3110)
!3121 = !DILocation(line: 1288, column: 13, scope: !3110)
!3122 = !DILocation(line: 1290, column: 30, scope: !3110)
!3123 = !DILocation(line: 1290, column: 44, scope: !3110)
!3124 = !DILocation(line: 1290, column: 51, scope: !3110)
!3125 = !DILocation(line: 1290, column: 15, scope: !3110)
!3126 = !DILocation(line: 1290, column: 14, scope: !3110)
!3127 = !DILocation(line: 1291, column: 13, scope: !3110)
!3128 = !DILocation(line: 1293, column: 30, scope: !3110)
!3129 = !DILocation(line: 1293, column: 44, scope: !3110)
!3130 = !DILocation(line: 1293, column: 51, scope: !3110)
!3131 = !DILocation(line: 1293, column: 15, scope: !3110)
!3132 = !DILocation(line: 1293, column: 14, scope: !3110)
!3133 = !DILocation(line: 1294, column: 13, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3135, file: !1, line: 1294, column: 13)
!3135 = distinct !DILexicalBlock(scope: !3110, file: !1, line: 1294, column: 13)
!3136 = !DILocation(line: 1294, column: 13, scope: !3135)
!3137 = !DILocation(line: 1296, column: 16, scope: !3110)
!3138 = !DILocation(line: 1296, column: 30, scope: !3110)
!3139 = !DILocation(line: 1296, column: 14, scope: !3110)
!3140 = !DILocation(line: 1297, column: 14, scope: !3110)
!3141 = !DILocation(line: 1298, column: 11, scope: !3110)
!3142 = !DILocation(line: 1282, column: 51, scope: !3105)
!3143 = !DILocation(line: 1282, column: 11, scope: !3105)
!3144 = distinct !{!3144, !3108, !3145}
!3145 = !DILocation(line: 1298, column: 11, scope: !3101)
!3146 = !DILocation(line: 1299, column: 11, scope: !3102)
!3147 = !DILocation(line: 1301, column: 13, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3093, file: !1, line: 1301, column: 7)
!3149 = !DILocation(line: 1301, column: 12, scope: !3148)
!3150 = !DILocation(line: 1301, column: 17, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3148, file: !1, line: 1301, column: 7)
!3152 = !DILocation(line: 1301, column: 31, scope: !3151)
!3153 = !DILocation(line: 1301, column: 19, scope: !3151)
!3154 = !DILocation(line: 1301, column: 7, scope: !3148)
!3155 = !DILocation(line: 1303, column: 26, scope: !3156)
!3156 = distinct !DILexicalBlock(scope: !3151, file: !1, line: 1302, column: 7)
!3157 = !DILocation(line: 1303, column: 40, scope: !3156)
!3158 = !DILocation(line: 1303, column: 47, scope: !3156)
!3159 = !DILocation(line: 1303, column: 11, scope: !3156)
!3160 = !DILocation(line: 1303, column: 10, scope: !3156)
!3161 = !DILocation(line: 1304, column: 9, scope: !3156)
!3162 = !DILocation(line: 1305, column: 26, scope: !3156)
!3163 = !DILocation(line: 1305, column: 40, scope: !3156)
!3164 = !DILocation(line: 1305, column: 47, scope: !3156)
!3165 = !DILocation(line: 1305, column: 11, scope: !3156)
!3166 = !DILocation(line: 1305, column: 10, scope: !3156)
!3167 = !DILocation(line: 1306, column: 9, scope: !3156)
!3168 = !DILocation(line: 1307, column: 26, scope: !3156)
!3169 = !DILocation(line: 1307, column: 40, scope: !3156)
!3170 = !DILocation(line: 1307, column: 47, scope: !3156)
!3171 = !DILocation(line: 1307, column: 11, scope: !3156)
!3172 = !DILocation(line: 1307, column: 10, scope: !3156)
!3173 = !DILocation(line: 1308, column: 9, scope: !3156)
!3174 = !DILocation(line: 1309, column: 26, scope: !3156)
!3175 = !DILocation(line: 1309, column: 40, scope: !3156)
!3176 = !DILocation(line: 1309, column: 47, scope: !3156)
!3177 = !DILocation(line: 1309, column: 11, scope: !3156)
!3178 = !DILocation(line: 1309, column: 10, scope: !3156)
!3179 = !DILocation(line: 1310, column: 9, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3181, file: !1, line: 1310, column: 9)
!3181 = distinct !DILexicalBlock(scope: !3156, file: !1, line: 1310, column: 9)
!3182 = !DILocation(line: 1310, column: 9, scope: !3181)
!3183 = !DILocation(line: 1311, column: 12, scope: !3156)
!3184 = !DILocation(line: 1311, column: 26, scope: !3156)
!3185 = !DILocation(line: 1311, column: 10, scope: !3156)
!3186 = !DILocation(line: 1312, column: 10, scope: !3156)
!3187 = !DILocation(line: 1313, column: 7, scope: !3156)
!3188 = !DILocation(line: 1301, column: 47, scope: !3151)
!3189 = !DILocation(line: 1301, column: 7, scope: !3151)
!3190 = distinct !{!3190, !3154, !3191}
!3191 = !DILocation(line: 1313, column: 7, scope: !3148)
!3192 = !DILocation(line: 1314, column: 7, scope: !3093)
!3193 = !DILocalVariable(name: "pixel", scope: !3194, file: !1, line: 1319, type: !5)
!3194 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 1317, column: 5)
!3195 = !DILocation(line: 1319, column: 9, scope: !3194)
!3196 = !DILocation(line: 1321, column: 11, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3194, file: !1, line: 1321, column: 11)
!3198 = !DILocation(line: 1321, column: 25, scope: !3197)
!3199 = !DILocation(line: 1321, column: 32, scope: !3197)
!3200 = !DILocation(line: 1321, column: 11, scope: !3194)
!3201 = !DILocalVariable(name: "pixel", scope: !3202, file: !1, line: 1324, type: !496)
!3202 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 1322, column: 9)
!3203 = !DILocation(line: 1324, column: 13, scope: !3202)
!3204 = !DILocation(line: 1326, column: 17, scope: !3205)
!3205 = distinct !DILexicalBlock(scope: !3202, file: !1, line: 1326, column: 11)
!3206 = !DILocation(line: 1326, column: 16, scope: !3205)
!3207 = !DILocation(line: 1326, column: 21, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3205, file: !1, line: 1326, column: 11)
!3209 = !DILocation(line: 1326, column: 35, scope: !3208)
!3210 = !DILocation(line: 1326, column: 23, scope: !3208)
!3211 = !DILocation(line: 1326, column: 11, scope: !3205)
!3212 = !DILocation(line: 1328, column: 30, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3208, file: !1, line: 1327, column: 11)
!3214 = !DILocation(line: 1328, column: 43, scope: !3213)
!3215 = !DILocation(line: 1328, column: 15, scope: !3213)
!3216 = !DILocation(line: 1328, column: 14, scope: !3213)
!3217 = !DILocation(line: 1329, column: 13, scope: !3213)
!3218 = !DILocation(line: 1330, column: 30, scope: !3213)
!3219 = !DILocation(line: 1330, column: 43, scope: !3213)
!3220 = !DILocation(line: 1330, column: 15, scope: !3213)
!3221 = !DILocation(line: 1330, column: 14, scope: !3213)
!3222 = !DILocation(line: 1331, column: 13, scope: !3213)
!3223 = !DILocation(line: 1332, column: 30, scope: !3213)
!3224 = !DILocation(line: 1332, column: 43, scope: !3213)
!3225 = !DILocation(line: 1332, column: 15, scope: !3213)
!3226 = !DILocation(line: 1332, column: 14, scope: !3213)
!3227 = !DILocation(line: 1333, column: 13, scope: !3213)
!3228 = !DILocation(line: 1334, column: 30, scope: !3213)
!3229 = !DILocation(line: 1334, column: 43, scope: !3213)
!3230 = !DILocation(line: 1334, column: 15, scope: !3213)
!3231 = !DILocation(line: 1334, column: 14, scope: !3213)
!3232 = !DILocation(line: 1335, column: 13, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !1, line: 1335, column: 13)
!3234 = distinct !DILexicalBlock(scope: !3213, file: !1, line: 1335, column: 13)
!3235 = !DILocation(line: 1335, column: 13, scope: !3234)
!3236 = !DILocation(line: 1336, column: 16, scope: !3213)
!3237 = !DILocation(line: 1336, column: 30, scope: !3213)
!3238 = !DILocation(line: 1336, column: 14, scope: !3213)
!3239 = !DILocation(line: 1337, column: 14, scope: !3213)
!3240 = !DILocation(line: 1338, column: 11, scope: !3213)
!3241 = !DILocation(line: 1326, column: 51, scope: !3208)
!3242 = !DILocation(line: 1326, column: 11, scope: !3208)
!3243 = distinct !{!3243, !3211, !3244}
!3244 = !DILocation(line: 1338, column: 11, scope: !3205)
!3245 = !DILocation(line: 1339, column: 11, scope: !3202)
!3246 = !DILocation(line: 1341, column: 13, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3194, file: !1, line: 1341, column: 7)
!3248 = !DILocation(line: 1341, column: 12, scope: !3247)
!3249 = !DILocation(line: 1341, column: 17, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3247, file: !1, line: 1341, column: 7)
!3251 = !DILocation(line: 1341, column: 31, scope: !3250)
!3252 = !DILocation(line: 1341, column: 19, scope: !3250)
!3253 = !DILocation(line: 1341, column: 7, scope: !3247)
!3254 = !DILocation(line: 1343, column: 25, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3250, file: !1, line: 1342, column: 7)
!3256 = !DILocation(line: 1343, column: 39, scope: !3255)
!3257 = !DILocation(line: 1343, column: 46, scope: !3255)
!3258 = !DILocation(line: 1343, column: 11, scope: !3255)
!3259 = !DILocation(line: 1343, column: 10, scope: !3255)
!3260 = !DILocation(line: 1344, column: 9, scope: !3255)
!3261 = !DILocation(line: 1345, column: 25, scope: !3255)
!3262 = !DILocation(line: 1345, column: 39, scope: !3255)
!3263 = !DILocation(line: 1345, column: 46, scope: !3255)
!3264 = !DILocation(line: 1345, column: 11, scope: !3255)
!3265 = !DILocation(line: 1345, column: 10, scope: !3255)
!3266 = !DILocation(line: 1346, column: 9, scope: !3255)
!3267 = !DILocation(line: 1347, column: 25, scope: !3255)
!3268 = !DILocation(line: 1347, column: 39, scope: !3255)
!3269 = !DILocation(line: 1347, column: 46, scope: !3255)
!3270 = !DILocation(line: 1347, column: 11, scope: !3255)
!3271 = !DILocation(line: 1347, column: 10, scope: !3255)
!3272 = !DILocation(line: 1348, column: 9, scope: !3255)
!3273 = !DILocation(line: 1349, column: 25, scope: !3255)
!3274 = !DILocation(line: 1349, column: 39, scope: !3255)
!3275 = !DILocation(line: 1349, column: 46, scope: !3255)
!3276 = !DILocation(line: 1349, column: 11, scope: !3255)
!3277 = !DILocation(line: 1349, column: 10, scope: !3255)
!3278 = !DILocation(line: 1350, column: 9, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 1350, column: 9)
!3280 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1350, column: 9)
!3281 = !DILocation(line: 1350, column: 9, scope: !3280)
!3282 = !DILocation(line: 1351, column: 12, scope: !3255)
!3283 = !DILocation(line: 1351, column: 26, scope: !3255)
!3284 = !DILocation(line: 1351, column: 10, scope: !3255)
!3285 = !DILocation(line: 1352, column: 10, scope: !3255)
!3286 = !DILocation(line: 1353, column: 7, scope: !3255)
!3287 = !DILocation(line: 1341, column: 47, scope: !3250)
!3288 = !DILocation(line: 1341, column: 7, scope: !3250)
!3289 = distinct !{!3289, !3253, !3290}
!3290 = !DILocation(line: 1353, column: 7, scope: !3247)
!3291 = !DILocation(line: 1354, column: 7, scope: !3194)
!3292 = !DILocation(line: 1358, column: 11, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !1, line: 1358, column: 11)
!3294 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 1357, column: 5)
!3295 = !DILocation(line: 1358, column: 25, scope: !3293)
!3296 = !DILocation(line: 1358, column: 32, scope: !3293)
!3297 = !DILocation(line: 1358, column: 11, scope: !3294)
!3298 = !DILocalVariable(name: "pixel", scope: !3299, file: !1, line: 1361, type: !456)
!3299 = distinct !DILexicalBlock(scope: !3293, file: !1, line: 1359, column: 9)
!3300 = !DILocation(line: 1361, column: 13, scope: !3299)
!3301 = !DILocation(line: 1363, column: 17, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3299, file: !1, line: 1363, column: 11)
!3303 = !DILocation(line: 1363, column: 16, scope: !3302)
!3304 = !DILocation(line: 1363, column: 21, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3302, file: !1, line: 1363, column: 11)
!3306 = !DILocation(line: 1363, column: 35, scope: !3305)
!3307 = !DILocation(line: 1363, column: 23, scope: !3305)
!3308 = !DILocation(line: 1363, column: 11, scope: !3302)
!3309 = !DILocation(line: 1365, column: 31, scope: !3310)
!3310 = distinct !DILexicalBlock(scope: !3305, file: !1, line: 1364, column: 11)
!3311 = !DILocation(line: 1365, column: 44, scope: !3310)
!3312 = !DILocation(line: 1365, column: 15, scope: !3310)
!3313 = !DILocation(line: 1365, column: 14, scope: !3310)
!3314 = !DILocation(line: 1366, column: 13, scope: !3310)
!3315 = !DILocation(line: 1367, column: 31, scope: !3310)
!3316 = !DILocation(line: 1367, column: 44, scope: !3310)
!3317 = !DILocation(line: 1367, column: 15, scope: !3310)
!3318 = !DILocation(line: 1367, column: 14, scope: !3310)
!3319 = !DILocation(line: 1368, column: 13, scope: !3310)
!3320 = !DILocation(line: 1369, column: 31, scope: !3310)
!3321 = !DILocation(line: 1369, column: 44, scope: !3310)
!3322 = !DILocation(line: 1369, column: 15, scope: !3310)
!3323 = !DILocation(line: 1369, column: 14, scope: !3310)
!3324 = !DILocation(line: 1370, column: 13, scope: !3310)
!3325 = !DILocation(line: 1371, column: 31, scope: !3310)
!3326 = !DILocation(line: 1371, column: 44, scope: !3310)
!3327 = !DILocation(line: 1371, column: 15, scope: !3310)
!3328 = !DILocation(line: 1371, column: 14, scope: !3310)
!3329 = !DILocation(line: 1372, column: 13, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3331, file: !1, line: 1372, column: 13)
!3331 = distinct !DILexicalBlock(scope: !3310, file: !1, line: 1372, column: 13)
!3332 = !DILocation(line: 1372, column: 13, scope: !3331)
!3333 = !DILocation(line: 1373, column: 31, scope: !3310)
!3334 = !DILocation(line: 1373, column: 44, scope: !3310)
!3335 = !DILocation(line: 1373, column: 15, scope: !3310)
!3336 = !DILocation(line: 1373, column: 14, scope: !3310)
!3337 = !DILocation(line: 1374, column: 16, scope: !3310)
!3338 = !DILocation(line: 1374, column: 30, scope: !3310)
!3339 = !DILocation(line: 1374, column: 14, scope: !3310)
!3340 = !DILocation(line: 1375, column: 14, scope: !3310)
!3341 = !DILocation(line: 1376, column: 11, scope: !3310)
!3342 = !DILocation(line: 1363, column: 51, scope: !3305)
!3343 = !DILocation(line: 1363, column: 11, scope: !3305)
!3344 = distinct !{!3344, !3308, !3345}
!3345 = !DILocation(line: 1376, column: 11, scope: !3302)
!3346 = !DILocation(line: 1377, column: 11, scope: !3299)
!3347 = !DILocation(line: 1379, column: 5, scope: !3294)
!3348 = !DILocation(line: 1382, column: 29, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3052, file: !1, line: 1381, column: 5)
!3350 = !DILocation(line: 1382, column: 43, scope: !3349)
!3351 = !DILocation(line: 1382, column: 13, scope: !3349)
!3352 = !DILocation(line: 1382, column: 12, scope: !3349)
!3353 = !DILocation(line: 1383, column: 13, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3349, file: !1, line: 1383, column: 7)
!3355 = !DILocation(line: 1383, column: 12, scope: !3354)
!3356 = !DILocation(line: 1383, column: 17, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3354, file: !1, line: 1383, column: 7)
!3358 = !DILocation(line: 1383, column: 31, scope: !3357)
!3359 = !DILocation(line: 1383, column: 19, scope: !3357)
!3360 = !DILocation(line: 1383, column: 7, scope: !3354)
!3361 = !DILocation(line: 1385, column: 28, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3357, file: !1, line: 1384, column: 7)
!3363 = !DILocation(line: 1385, column: 41, scope: !3362)
!3364 = !DILocation(line: 1385, column: 11, scope: !3362)
!3365 = !DILocation(line: 1385, column: 10, scope: !3362)
!3366 = !DILocation(line: 1386, column: 9, scope: !3362)
!3367 = !DILocation(line: 1387, column: 28, scope: !3362)
!3368 = !DILocation(line: 1387, column: 41, scope: !3362)
!3369 = !DILocation(line: 1387, column: 11, scope: !3362)
!3370 = !DILocation(line: 1387, column: 10, scope: !3362)
!3371 = !DILocation(line: 1388, column: 9, scope: !3362)
!3372 = !DILocation(line: 1389, column: 28, scope: !3362)
!3373 = !DILocation(line: 1389, column: 41, scope: !3362)
!3374 = !DILocation(line: 1389, column: 11, scope: !3362)
!3375 = !DILocation(line: 1389, column: 10, scope: !3362)
!3376 = !DILocation(line: 1390, column: 9, scope: !3362)
!3377 = !DILocation(line: 1391, column: 28, scope: !3362)
!3378 = !DILocation(line: 1391, column: 41, scope: !3362)
!3379 = !DILocation(line: 1391, column: 11, scope: !3362)
!3380 = !DILocation(line: 1391, column: 10, scope: !3362)
!3381 = !DILocation(line: 1392, column: 9, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3383, file: !1, line: 1392, column: 9)
!3383 = distinct !DILexicalBlock(scope: !3362, file: !1, line: 1392, column: 9)
!3384 = !DILocation(line: 1392, column: 9, scope: !3383)
!3385 = !DILocation(line: 1393, column: 10, scope: !3362)
!3386 = !DILocation(line: 1394, column: 7, scope: !3362)
!3387 = !DILocation(line: 1383, column: 47, scope: !3357)
!3388 = !DILocation(line: 1383, column: 7, scope: !3357)
!3389 = distinct !{!3389, !3360, !3390}
!3390 = !DILocation(line: 1394, column: 7, scope: !3354)
!3391 = !DILocation(line: 1395, column: 7, scope: !3349)
!3392 = !DILocation(line: 1398, column: 1, scope: !3015)
!3393 = distinct !DISubprogram(name: "ImportCMYKAQuantum", scope: !1, file: !1, line: 1400, type: !2360, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3394 = !DILocalVariable(name: "image", arg: 1, scope: !3393, file: !1, line: 1400, type: !2362)
!3395 = !DILocation(line: 1400, column: 45, scope: !3393)
!3396 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !3393, file: !1, line: 1400, type: !444)
!3397 = !DILocation(line: 1400, column: 64, scope: !3393)
!3398 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !3393, file: !1, line: 1401, type: !638)
!3399 = !DILocation(line: 1401, column: 24, scope: !3393)
!3400 = !DILocalVariable(name: "p", arg: 4, scope: !3393, file: !1, line: 1401, type: !717)
!3401 = !DILocation(line: 1401, column: 68, scope: !3393)
!3402 = !DILocalVariable(name: "q", arg: 5, scope: !3393, file: !1, line: 1402, type: !742)
!3403 = !DILocation(line: 1402, column: 25, scope: !3393)
!3404 = !DILocalVariable(name: "indexes", arg: 6, scope: !3393, file: !1, line: 1402, type: !737)
!3405 = !DILocation(line: 1402, column: 49, scope: !3393)
!3406 = !DILocalVariable(name: "exception", arg: 7, scope: !3393, file: !1, line: 1403, type: !718)
!3407 = !DILocation(line: 1403, column: 18, scope: !3393)
!3408 = !DILocalVariable(name: "range", scope: !3393, file: !1, line: 1406, type: !501)
!3409 = !DILocation(line: 1406, column: 5, scope: !3393)
!3410 = !DILocalVariable(name: "x", scope: !3393, file: !1, line: 1409, type: !488)
!3411 = !DILocation(line: 1409, column: 5, scope: !3393)
!3412 = !DILocalVariable(name: "pixel", scope: !3393, file: !1, line: 1412, type: !5)
!3413 = !DILocation(line: 1412, column: 5, scope: !3393)
!3414 = !DILocation(line: 1414, column: 7, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3393, file: !1, line: 1414, column: 7)
!3416 = !DILocation(line: 1414, column: 14, scope: !3415)
!3417 = !DILocation(line: 1414, column: 25, scope: !3415)
!3418 = !DILocation(line: 1414, column: 7, scope: !3393)
!3419 = !DILocation(line: 1416, column: 35, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3415, file: !1, line: 1415, column: 5)
!3421 = !DILocation(line: 1417, column: 46, scope: !3420)
!3422 = !DILocation(line: 1417, column: 53, scope: !3420)
!3423 = !DILocation(line: 1416, column: 14, scope: !3420)
!3424 = !DILocation(line: 1418, column: 7, scope: !3420)
!3425 = !DILocation(line: 1420, column: 11, scope: !3393)
!3426 = !DILocation(line: 1420, column: 25, scope: !3393)
!3427 = !DILocation(line: 1420, column: 3, scope: !3393)
!3428 = !DILocalVariable(name: "pixel", scope: !3429, file: !1, line: 1425, type: !438)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1423, column: 5)
!3430 = distinct !DILexicalBlock(scope: !3393, file: !1, line: 1421, column: 3)
!3431 = !DILocation(line: 1425, column: 9, scope: !3429)
!3432 = !DILocation(line: 1427, column: 13, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3429, file: !1, line: 1427, column: 7)
!3434 = !DILocation(line: 1427, column: 12, scope: !3433)
!3435 = !DILocation(line: 1427, column: 17, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !1, line: 1427, column: 7)
!3437 = !DILocation(line: 1427, column: 31, scope: !3436)
!3438 = !DILocation(line: 1427, column: 19, scope: !3436)
!3439 = !DILocation(line: 1427, column: 7, scope: !3433)
!3440 = !DILocation(line: 1429, column: 25, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3436, file: !1, line: 1428, column: 7)
!3442 = !DILocation(line: 1429, column: 11, scope: !3441)
!3443 = !DILocation(line: 1429, column: 10, scope: !3441)
!3444 = !DILocation(line: 1430, column: 9, scope: !3441)
!3445 = !DILocation(line: 1431, column: 25, scope: !3441)
!3446 = !DILocation(line: 1431, column: 11, scope: !3441)
!3447 = !DILocation(line: 1431, column: 10, scope: !3441)
!3448 = !DILocation(line: 1432, column: 9, scope: !3441)
!3449 = !DILocation(line: 1433, column: 25, scope: !3441)
!3450 = !DILocation(line: 1433, column: 11, scope: !3441)
!3451 = !DILocation(line: 1433, column: 10, scope: !3441)
!3452 = !DILocation(line: 1434, column: 9, scope: !3441)
!3453 = !DILocation(line: 1435, column: 25, scope: !3441)
!3454 = !DILocation(line: 1435, column: 11, scope: !3441)
!3455 = !DILocation(line: 1435, column: 10, scope: !3441)
!3456 = !DILocation(line: 1436, column: 9, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3458, file: !1, line: 1436, column: 9)
!3458 = distinct !DILexicalBlock(scope: !3441, file: !1, line: 1436, column: 9)
!3459 = !DILocation(line: 1436, column: 9, scope: !3458)
!3460 = !DILocation(line: 1437, column: 25, scope: !3441)
!3461 = !DILocation(line: 1437, column: 11, scope: !3441)
!3462 = !DILocation(line: 1437, column: 10, scope: !3441)
!3463 = !DILocation(line: 1438, column: 9, scope: !3441)
!3464 = !DILocation(line: 1439, column: 12, scope: !3441)
!3465 = !DILocation(line: 1439, column: 26, scope: !3441)
!3466 = !DILocation(line: 1439, column: 10, scope: !3441)
!3467 = !DILocation(line: 1440, column: 10, scope: !3441)
!3468 = !DILocation(line: 1441, column: 7, scope: !3441)
!3469 = !DILocation(line: 1427, column: 47, scope: !3436)
!3470 = !DILocation(line: 1427, column: 7, scope: !3436)
!3471 = distinct !{!3471, !3439, !3472}
!3472 = !DILocation(line: 1441, column: 7, scope: !3433)
!3473 = !DILocation(line: 1442, column: 7, scope: !3429)
!3474 = !DILocalVariable(name: "pixel", scope: !3475, file: !1, line: 1447, type: !494)
!3475 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1445, column: 5)
!3476 = !DILocation(line: 1447, column: 9, scope: !3475)
!3477 = !DILocation(line: 1449, column: 11, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3475, file: !1, line: 1449, column: 11)
!3479 = !DILocation(line: 1449, column: 25, scope: !3478)
!3480 = !DILocation(line: 1449, column: 32, scope: !3478)
!3481 = !DILocation(line: 1449, column: 11, scope: !3475)
!3482 = !DILocation(line: 1451, column: 17, scope: !3483)
!3483 = distinct !DILexicalBlock(scope: !3484, file: !1, line: 1451, column: 11)
!3484 = distinct !DILexicalBlock(scope: !3478, file: !1, line: 1450, column: 9)
!3485 = !DILocation(line: 1451, column: 16, scope: !3483)
!3486 = !DILocation(line: 1451, column: 21, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3483, file: !1, line: 1451, column: 11)
!3488 = !DILocation(line: 1451, column: 35, scope: !3487)
!3489 = !DILocation(line: 1451, column: 23, scope: !3487)
!3490 = !DILocation(line: 1451, column: 11, scope: !3483)
!3491 = !DILocation(line: 1453, column: 30, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !1, line: 1452, column: 11)
!3493 = !DILocation(line: 1453, column: 44, scope: !3492)
!3494 = !DILocation(line: 1453, column: 51, scope: !3492)
!3495 = !DILocation(line: 1453, column: 15, scope: !3492)
!3496 = !DILocation(line: 1453, column: 14, scope: !3492)
!3497 = !DILocation(line: 1454, column: 13, scope: !3492)
!3498 = !DILocation(line: 1456, column: 30, scope: !3492)
!3499 = !DILocation(line: 1456, column: 44, scope: !3492)
!3500 = !DILocation(line: 1456, column: 51, scope: !3492)
!3501 = !DILocation(line: 1456, column: 15, scope: !3492)
!3502 = !DILocation(line: 1456, column: 14, scope: !3492)
!3503 = !DILocation(line: 1457, column: 13, scope: !3492)
!3504 = !DILocation(line: 1459, column: 30, scope: !3492)
!3505 = !DILocation(line: 1459, column: 44, scope: !3492)
!3506 = !DILocation(line: 1459, column: 51, scope: !3492)
!3507 = !DILocation(line: 1459, column: 15, scope: !3492)
!3508 = !DILocation(line: 1459, column: 14, scope: !3492)
!3509 = !DILocation(line: 1460, column: 13, scope: !3492)
!3510 = !DILocation(line: 1462, column: 30, scope: !3492)
!3511 = !DILocation(line: 1462, column: 44, scope: !3492)
!3512 = !DILocation(line: 1462, column: 51, scope: !3492)
!3513 = !DILocation(line: 1462, column: 15, scope: !3492)
!3514 = !DILocation(line: 1462, column: 14, scope: !3492)
!3515 = !DILocation(line: 1463, column: 13, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !1, line: 1463, column: 13)
!3517 = distinct !DILexicalBlock(scope: !3492, file: !1, line: 1463, column: 13)
!3518 = !DILocation(line: 1463, column: 13, scope: !3517)
!3519 = !DILocation(line: 1465, column: 30, scope: !3492)
!3520 = !DILocation(line: 1465, column: 44, scope: !3492)
!3521 = !DILocation(line: 1465, column: 51, scope: !3492)
!3522 = !DILocation(line: 1465, column: 15, scope: !3492)
!3523 = !DILocation(line: 1465, column: 14, scope: !3492)
!3524 = !DILocation(line: 1466, column: 13, scope: !3492)
!3525 = !DILocation(line: 1468, column: 16, scope: !3492)
!3526 = !DILocation(line: 1468, column: 30, scope: !3492)
!3527 = !DILocation(line: 1468, column: 14, scope: !3492)
!3528 = !DILocation(line: 1469, column: 14, scope: !3492)
!3529 = !DILocation(line: 1470, column: 11, scope: !3492)
!3530 = !DILocation(line: 1451, column: 51, scope: !3487)
!3531 = !DILocation(line: 1451, column: 11, scope: !3487)
!3532 = distinct !{!3532, !3490, !3533}
!3533 = !DILocation(line: 1470, column: 11, scope: !3483)
!3534 = !DILocation(line: 1471, column: 11, scope: !3484)
!3535 = !DILocation(line: 1473, column: 13, scope: !3536)
!3536 = distinct !DILexicalBlock(scope: !3475, file: !1, line: 1473, column: 7)
!3537 = !DILocation(line: 1473, column: 12, scope: !3536)
!3538 = !DILocation(line: 1473, column: 17, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3536, file: !1, line: 1473, column: 7)
!3540 = !DILocation(line: 1473, column: 31, scope: !3539)
!3541 = !DILocation(line: 1473, column: 19, scope: !3539)
!3542 = !DILocation(line: 1473, column: 7, scope: !3536)
!3543 = !DILocation(line: 1475, column: 26, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3539, file: !1, line: 1474, column: 7)
!3545 = !DILocation(line: 1475, column: 40, scope: !3544)
!3546 = !DILocation(line: 1475, column: 47, scope: !3544)
!3547 = !DILocation(line: 1475, column: 11, scope: !3544)
!3548 = !DILocation(line: 1475, column: 10, scope: !3544)
!3549 = !DILocation(line: 1476, column: 9, scope: !3544)
!3550 = !DILocation(line: 1477, column: 26, scope: !3544)
!3551 = !DILocation(line: 1477, column: 40, scope: !3544)
!3552 = !DILocation(line: 1477, column: 47, scope: !3544)
!3553 = !DILocation(line: 1477, column: 11, scope: !3544)
!3554 = !DILocation(line: 1477, column: 10, scope: !3544)
!3555 = !DILocation(line: 1478, column: 9, scope: !3544)
!3556 = !DILocation(line: 1479, column: 26, scope: !3544)
!3557 = !DILocation(line: 1479, column: 40, scope: !3544)
!3558 = !DILocation(line: 1479, column: 47, scope: !3544)
!3559 = !DILocation(line: 1479, column: 11, scope: !3544)
!3560 = !DILocation(line: 1479, column: 10, scope: !3544)
!3561 = !DILocation(line: 1480, column: 9, scope: !3544)
!3562 = !DILocation(line: 1481, column: 26, scope: !3544)
!3563 = !DILocation(line: 1481, column: 40, scope: !3544)
!3564 = !DILocation(line: 1481, column: 47, scope: !3544)
!3565 = !DILocation(line: 1481, column: 11, scope: !3544)
!3566 = !DILocation(line: 1481, column: 10, scope: !3544)
!3567 = !DILocation(line: 1482, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3569, file: !1, line: 1482, column: 9)
!3569 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 1482, column: 9)
!3570 = !DILocation(line: 1482, column: 9, scope: !3569)
!3571 = !DILocation(line: 1483, column: 26, scope: !3544)
!3572 = !DILocation(line: 1483, column: 40, scope: !3544)
!3573 = !DILocation(line: 1483, column: 47, scope: !3544)
!3574 = !DILocation(line: 1483, column: 11, scope: !3544)
!3575 = !DILocation(line: 1483, column: 10, scope: !3544)
!3576 = !DILocation(line: 1484, column: 9, scope: !3544)
!3577 = !DILocation(line: 1485, column: 12, scope: !3544)
!3578 = !DILocation(line: 1485, column: 26, scope: !3544)
!3579 = !DILocation(line: 1485, column: 10, scope: !3544)
!3580 = !DILocation(line: 1486, column: 10, scope: !3544)
!3581 = !DILocation(line: 1487, column: 7, scope: !3544)
!3582 = !DILocation(line: 1473, column: 47, scope: !3539)
!3583 = !DILocation(line: 1473, column: 7, scope: !3539)
!3584 = distinct !{!3584, !3542, !3585}
!3585 = !DILocation(line: 1487, column: 7, scope: !3536)
!3586 = !DILocation(line: 1488, column: 7, scope: !3475)
!3587 = !DILocalVariable(name: "pixel", scope: !3588, file: !1, line: 1493, type: !5)
!3588 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1491, column: 5)
!3589 = !DILocation(line: 1493, column: 9, scope: !3588)
!3590 = !DILocation(line: 1495, column: 11, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 1495, column: 11)
!3592 = !DILocation(line: 1495, column: 25, scope: !3591)
!3593 = !DILocation(line: 1495, column: 32, scope: !3591)
!3594 = !DILocation(line: 1495, column: 11, scope: !3588)
!3595 = !DILocalVariable(name: "pixel", scope: !3596, file: !1, line: 1498, type: !496)
!3596 = distinct !DILexicalBlock(scope: !3591, file: !1, line: 1496, column: 9)
!3597 = !DILocation(line: 1498, column: 13, scope: !3596)
!3598 = !DILocation(line: 1500, column: 17, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3596, file: !1, line: 1500, column: 11)
!3600 = !DILocation(line: 1500, column: 16, scope: !3599)
!3601 = !DILocation(line: 1500, column: 21, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3599, file: !1, line: 1500, column: 11)
!3603 = !DILocation(line: 1500, column: 35, scope: !3602)
!3604 = !DILocation(line: 1500, column: 23, scope: !3602)
!3605 = !DILocation(line: 1500, column: 11, scope: !3599)
!3606 = !DILocation(line: 1502, column: 30, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 1501, column: 11)
!3608 = !DILocation(line: 1502, column: 43, scope: !3607)
!3609 = !DILocation(line: 1502, column: 15, scope: !3607)
!3610 = !DILocation(line: 1502, column: 14, scope: !3607)
!3611 = !DILocation(line: 1503, column: 13, scope: !3607)
!3612 = !DILocation(line: 1504, column: 30, scope: !3607)
!3613 = !DILocation(line: 1504, column: 43, scope: !3607)
!3614 = !DILocation(line: 1504, column: 15, scope: !3607)
!3615 = !DILocation(line: 1504, column: 14, scope: !3607)
!3616 = !DILocation(line: 1505, column: 13, scope: !3607)
!3617 = !DILocation(line: 1506, column: 30, scope: !3607)
!3618 = !DILocation(line: 1506, column: 43, scope: !3607)
!3619 = !DILocation(line: 1506, column: 15, scope: !3607)
!3620 = !DILocation(line: 1506, column: 14, scope: !3607)
!3621 = !DILocation(line: 1507, column: 13, scope: !3607)
!3622 = !DILocation(line: 1508, column: 30, scope: !3607)
!3623 = !DILocation(line: 1508, column: 43, scope: !3607)
!3624 = !DILocation(line: 1508, column: 15, scope: !3607)
!3625 = !DILocation(line: 1508, column: 14, scope: !3607)
!3626 = !DILocation(line: 1509, column: 13, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3628, file: !1, line: 1509, column: 13)
!3628 = distinct !DILexicalBlock(scope: !3607, file: !1, line: 1509, column: 13)
!3629 = !DILocation(line: 1509, column: 13, scope: !3628)
!3630 = !DILocation(line: 1510, column: 30, scope: !3607)
!3631 = !DILocation(line: 1510, column: 43, scope: !3607)
!3632 = !DILocation(line: 1510, column: 15, scope: !3607)
!3633 = !DILocation(line: 1510, column: 14, scope: !3607)
!3634 = !DILocation(line: 1511, column: 13, scope: !3607)
!3635 = !DILocation(line: 1512, column: 16, scope: !3607)
!3636 = !DILocation(line: 1512, column: 30, scope: !3607)
!3637 = !DILocation(line: 1512, column: 14, scope: !3607)
!3638 = !DILocation(line: 1513, column: 14, scope: !3607)
!3639 = !DILocation(line: 1514, column: 11, scope: !3607)
!3640 = !DILocation(line: 1500, column: 51, scope: !3602)
!3641 = !DILocation(line: 1500, column: 11, scope: !3602)
!3642 = distinct !{!3642, !3605, !3643}
!3643 = !DILocation(line: 1514, column: 11, scope: !3599)
!3644 = !DILocation(line: 1515, column: 11, scope: !3596)
!3645 = !DILocation(line: 1517, column: 13, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3588, file: !1, line: 1517, column: 7)
!3647 = !DILocation(line: 1517, column: 12, scope: !3646)
!3648 = !DILocation(line: 1517, column: 17, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !1, line: 1517, column: 7)
!3650 = !DILocation(line: 1517, column: 31, scope: !3649)
!3651 = !DILocation(line: 1517, column: 19, scope: !3649)
!3652 = !DILocation(line: 1517, column: 7, scope: !3646)
!3653 = !DILocation(line: 1519, column: 25, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 1518, column: 7)
!3655 = !DILocation(line: 1519, column: 39, scope: !3654)
!3656 = !DILocation(line: 1519, column: 46, scope: !3654)
!3657 = !DILocation(line: 1519, column: 11, scope: !3654)
!3658 = !DILocation(line: 1519, column: 10, scope: !3654)
!3659 = !DILocation(line: 1520, column: 9, scope: !3654)
!3660 = !DILocation(line: 1521, column: 25, scope: !3654)
!3661 = !DILocation(line: 1521, column: 39, scope: !3654)
!3662 = !DILocation(line: 1521, column: 46, scope: !3654)
!3663 = !DILocation(line: 1521, column: 11, scope: !3654)
!3664 = !DILocation(line: 1521, column: 10, scope: !3654)
!3665 = !DILocation(line: 1522, column: 9, scope: !3654)
!3666 = !DILocation(line: 1523, column: 25, scope: !3654)
!3667 = !DILocation(line: 1523, column: 39, scope: !3654)
!3668 = !DILocation(line: 1523, column: 46, scope: !3654)
!3669 = !DILocation(line: 1523, column: 11, scope: !3654)
!3670 = !DILocation(line: 1523, column: 10, scope: !3654)
!3671 = !DILocation(line: 1524, column: 9, scope: !3654)
!3672 = !DILocation(line: 1525, column: 25, scope: !3654)
!3673 = !DILocation(line: 1525, column: 39, scope: !3654)
!3674 = !DILocation(line: 1525, column: 46, scope: !3654)
!3675 = !DILocation(line: 1525, column: 11, scope: !3654)
!3676 = !DILocation(line: 1525, column: 10, scope: !3654)
!3677 = !DILocation(line: 1526, column: 9, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3679, file: !1, line: 1526, column: 9)
!3679 = distinct !DILexicalBlock(scope: !3654, file: !1, line: 1526, column: 9)
!3680 = !DILocation(line: 1526, column: 9, scope: !3679)
!3681 = !DILocation(line: 1527, column: 25, scope: !3654)
!3682 = !DILocation(line: 1527, column: 39, scope: !3654)
!3683 = !DILocation(line: 1527, column: 46, scope: !3654)
!3684 = !DILocation(line: 1527, column: 11, scope: !3654)
!3685 = !DILocation(line: 1527, column: 10, scope: !3654)
!3686 = !DILocation(line: 1528, column: 9, scope: !3654)
!3687 = !DILocation(line: 1529, column: 12, scope: !3654)
!3688 = !DILocation(line: 1529, column: 26, scope: !3654)
!3689 = !DILocation(line: 1529, column: 10, scope: !3654)
!3690 = !DILocation(line: 1530, column: 10, scope: !3654)
!3691 = !DILocation(line: 1531, column: 7, scope: !3654)
!3692 = !DILocation(line: 1517, column: 47, scope: !3649)
!3693 = !DILocation(line: 1517, column: 7, scope: !3649)
!3694 = distinct !{!3694, !3652, !3695}
!3695 = !DILocation(line: 1531, column: 7, scope: !3646)
!3696 = !DILocation(line: 1532, column: 7, scope: !3588)
!3697 = !DILocation(line: 1536, column: 11, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !1, line: 1536, column: 11)
!3699 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1535, column: 5)
!3700 = !DILocation(line: 1536, column: 25, scope: !3698)
!3701 = !DILocation(line: 1536, column: 32, scope: !3698)
!3702 = !DILocation(line: 1536, column: 11, scope: !3699)
!3703 = !DILocalVariable(name: "pixel", scope: !3704, file: !1, line: 1539, type: !456)
!3704 = distinct !DILexicalBlock(scope: !3698, file: !1, line: 1537, column: 9)
!3705 = !DILocation(line: 1539, column: 13, scope: !3704)
!3706 = !DILocation(line: 1541, column: 17, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3704, file: !1, line: 1541, column: 11)
!3708 = !DILocation(line: 1541, column: 16, scope: !3707)
!3709 = !DILocation(line: 1541, column: 21, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3707, file: !1, line: 1541, column: 11)
!3711 = !DILocation(line: 1541, column: 35, scope: !3710)
!3712 = !DILocation(line: 1541, column: 23, scope: !3710)
!3713 = !DILocation(line: 1541, column: 11, scope: !3707)
!3714 = !DILocation(line: 1543, column: 31, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3710, file: !1, line: 1542, column: 11)
!3716 = !DILocation(line: 1543, column: 44, scope: !3715)
!3717 = !DILocation(line: 1543, column: 15, scope: !3715)
!3718 = !DILocation(line: 1543, column: 14, scope: !3715)
!3719 = !DILocation(line: 1544, column: 13, scope: !3715)
!3720 = !DILocation(line: 1545, column: 31, scope: !3715)
!3721 = !DILocation(line: 1545, column: 44, scope: !3715)
!3722 = !DILocation(line: 1545, column: 15, scope: !3715)
!3723 = !DILocation(line: 1545, column: 14, scope: !3715)
!3724 = !DILocation(line: 1546, column: 13, scope: !3715)
!3725 = !DILocation(line: 1547, column: 31, scope: !3715)
!3726 = !DILocation(line: 1547, column: 44, scope: !3715)
!3727 = !DILocation(line: 1547, column: 15, scope: !3715)
!3728 = !DILocation(line: 1547, column: 14, scope: !3715)
!3729 = !DILocation(line: 1548, column: 13, scope: !3715)
!3730 = !DILocation(line: 1549, column: 31, scope: !3715)
!3731 = !DILocation(line: 1549, column: 44, scope: !3715)
!3732 = !DILocation(line: 1549, column: 15, scope: !3715)
!3733 = !DILocation(line: 1549, column: 14, scope: !3715)
!3734 = !DILocation(line: 1550, column: 13, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1550, column: 13)
!3736 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 1550, column: 13)
!3737 = !DILocation(line: 1550, column: 13, scope: !3736)
!3738 = !DILocation(line: 1551, column: 31, scope: !3715)
!3739 = !DILocation(line: 1551, column: 44, scope: !3715)
!3740 = !DILocation(line: 1551, column: 15, scope: !3715)
!3741 = !DILocation(line: 1551, column: 14, scope: !3715)
!3742 = !DILocation(line: 1552, column: 13, scope: !3715)
!3743 = !DILocation(line: 1553, column: 31, scope: !3715)
!3744 = !DILocation(line: 1553, column: 44, scope: !3715)
!3745 = !DILocation(line: 1553, column: 15, scope: !3715)
!3746 = !DILocation(line: 1553, column: 14, scope: !3715)
!3747 = !DILocation(line: 1554, column: 16, scope: !3715)
!3748 = !DILocation(line: 1554, column: 30, scope: !3715)
!3749 = !DILocation(line: 1554, column: 14, scope: !3715)
!3750 = !DILocation(line: 1555, column: 14, scope: !3715)
!3751 = !DILocation(line: 1556, column: 11, scope: !3715)
!3752 = !DILocation(line: 1541, column: 51, scope: !3710)
!3753 = !DILocation(line: 1541, column: 11, scope: !3710)
!3754 = distinct !{!3754, !3713, !3755}
!3755 = !DILocation(line: 1556, column: 11, scope: !3707)
!3756 = !DILocation(line: 1557, column: 11, scope: !3704)
!3757 = !DILocation(line: 1559, column: 5, scope: !3699)
!3758 = !DILocation(line: 1562, column: 29, scope: !3759)
!3759 = distinct !DILexicalBlock(scope: !3430, file: !1, line: 1561, column: 5)
!3760 = !DILocation(line: 1562, column: 36, scope: !3759)
!3761 = !DILocation(line: 1562, column: 13, scope: !3759)
!3762 = !DILocation(line: 1562, column: 12, scope: !3759)
!3763 = !DILocation(line: 1563, column: 13, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 1563, column: 7)
!3765 = !DILocation(line: 1563, column: 12, scope: !3764)
!3766 = !DILocation(line: 1563, column: 17, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !1, line: 1563, column: 7)
!3768 = !DILocation(line: 1563, column: 31, scope: !3767)
!3769 = !DILocation(line: 1563, column: 19, scope: !3767)
!3770 = !DILocation(line: 1563, column: 7, scope: !3764)
!3771 = !DILocation(line: 1565, column: 28, scope: !3772)
!3772 = distinct !DILexicalBlock(scope: !3767, file: !1, line: 1564, column: 7)
!3773 = !DILocation(line: 1565, column: 41, scope: !3772)
!3774 = !DILocation(line: 1565, column: 11, scope: !3772)
!3775 = !DILocation(line: 1565, column: 10, scope: !3772)
!3776 = !DILocation(line: 1566, column: 9, scope: !3772)
!3777 = !DILocation(line: 1567, column: 28, scope: !3772)
!3778 = !DILocation(line: 1567, column: 41, scope: !3772)
!3779 = !DILocation(line: 1567, column: 11, scope: !3772)
!3780 = !DILocation(line: 1567, column: 10, scope: !3772)
!3781 = !DILocation(line: 1568, column: 9, scope: !3772)
!3782 = !DILocation(line: 1569, column: 28, scope: !3772)
!3783 = !DILocation(line: 1569, column: 41, scope: !3772)
!3784 = !DILocation(line: 1569, column: 11, scope: !3772)
!3785 = !DILocation(line: 1569, column: 10, scope: !3772)
!3786 = !DILocation(line: 1570, column: 9, scope: !3772)
!3787 = !DILocation(line: 1571, column: 28, scope: !3772)
!3788 = !DILocation(line: 1571, column: 41, scope: !3772)
!3789 = !DILocation(line: 1571, column: 11, scope: !3772)
!3790 = !DILocation(line: 1571, column: 10, scope: !3772)
!3791 = !DILocation(line: 1572, column: 9, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3793, file: !1, line: 1572, column: 9)
!3793 = distinct !DILexicalBlock(scope: !3772, file: !1, line: 1572, column: 9)
!3794 = !DILocation(line: 1572, column: 9, scope: !3793)
!3795 = !DILocation(line: 1573, column: 28, scope: !3772)
!3796 = !DILocation(line: 1573, column: 41, scope: !3772)
!3797 = !DILocation(line: 1573, column: 11, scope: !3772)
!3798 = !DILocation(line: 1573, column: 10, scope: !3772)
!3799 = !DILocation(line: 1574, column: 9, scope: !3772)
!3800 = !DILocation(line: 1575, column: 10, scope: !3772)
!3801 = !DILocation(line: 1576, column: 7, scope: !3772)
!3802 = !DILocation(line: 1563, column: 47, scope: !3767)
!3803 = !DILocation(line: 1563, column: 7, scope: !3767)
!3804 = distinct !{!3804, !3770, !3805}
!3805 = !DILocation(line: 1576, column: 7, scope: !3764)
!3806 = !DILocation(line: 1577, column: 7, scope: !3759)
!3807 = !DILocation(line: 1580, column: 1, scope: !3393)
!3808 = distinct !DISubprogram(name: "ImportGrayQuantum", scope: !1, file: !1, line: 1582, type: !2855, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!3809 = !DILocalVariable(name: "image", arg: 1, scope: !3808, file: !1, line: 1582, type: !2362)
!3810 = !DILocation(line: 1582, column: 44, scope: !3808)
!3811 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !3808, file: !1, line: 1582, type: !444)
!3812 = !DILocation(line: 1582, column: 63, scope: !3808)
!3813 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !3808, file: !1, line: 1583, type: !638)
!3814 = !DILocation(line: 1583, column: 24, scope: !3808)
!3815 = !DILocalVariable(name: "p", arg: 4, scope: !3808, file: !1, line: 1583, type: !717)
!3816 = !DILocation(line: 1583, column: 68, scope: !3808)
!3817 = !DILocalVariable(name: "q", arg: 5, scope: !3808, file: !1, line: 1584, type: !742)
!3818 = !DILocation(line: 1584, column: 25, scope: !3808)
!3819 = !DILocalVariable(name: "range", scope: !3808, file: !1, line: 1587, type: !501)
!3820 = !DILocation(line: 1587, column: 5, scope: !3808)
!3821 = !DILocalVariable(name: "x", scope: !3808, file: !1, line: 1590, type: !488)
!3822 = !DILocation(line: 1590, column: 5, scope: !3808)
!3823 = !DILocalVariable(name: "bit", scope: !3808, file: !1, line: 1593, type: !488)
!3824 = !DILocation(line: 1593, column: 5, scope: !3808)
!3825 = !DILocalVariable(name: "pixel", scope: !3808, file: !1, line: 1596, type: !5)
!3826 = !DILocation(line: 1596, column: 5, scope: !3808)
!3827 = !DILocation(line: 1598, column: 11, scope: !3808)
!3828 = !DILocation(line: 1598, column: 25, scope: !3808)
!3829 = !DILocation(line: 1598, column: 3, scope: !3808)
!3830 = !DILocalVariable(name: "black", scope: !3831, file: !1, line: 1603, type: !493)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1601, column: 5)
!3832 = distinct !DILexicalBlock(scope: !3808, file: !1, line: 1599, column: 3)
!3833 = !DILocation(line: 1603, column: 9, scope: !3831)
!3834 = !DILocalVariable(name: "white", scope: !3831, file: !1, line: 1604, type: !493)
!3835 = !DILocation(line: 1604, column: 9, scope: !3831)
!3836 = !DILocation(line: 1606, column: 12, scope: !3831)
!3837 = !DILocation(line: 1607, column: 12, scope: !3831)
!3838 = !DILocation(line: 1608, column: 11, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 1608, column: 11)
!3840 = !DILocation(line: 1608, column: 25, scope: !3839)
!3841 = !DILocation(line: 1608, column: 38, scope: !3839)
!3842 = !DILocation(line: 1608, column: 11, scope: !3831)
!3843 = !DILocation(line: 1610, column: 16, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3839, file: !1, line: 1609, column: 9)
!3845 = !DILocation(line: 1611, column: 16, scope: !3844)
!3846 = !DILocation(line: 1612, column: 9, scope: !3844)
!3847 = !DILocation(line: 1613, column: 13, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 1613, column: 7)
!3849 = !DILocation(line: 1613, column: 12, scope: !3848)
!3850 = !DILocation(line: 1613, column: 17, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3848, file: !1, line: 1613, column: 7)
!3852 = !DILocation(line: 1613, column: 32, scope: !3851)
!3853 = !DILocation(line: 1613, column: 45, scope: !3851)
!3854 = !DILocation(line: 1613, column: 19, scope: !3851)
!3855 = !DILocation(line: 1613, column: 7, scope: !3848)
!3856 = !DILocation(line: 1615, column: 17, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3858, file: !1, line: 1615, column: 9)
!3858 = distinct !DILexicalBlock(scope: !3851, file: !1, line: 1614, column: 7)
!3859 = !DILocation(line: 1615, column: 14, scope: !3857)
!3860 = !DILocation(line: 1615, column: 21, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3857, file: !1, line: 1615, column: 9)
!3862 = !DILocation(line: 1615, column: 25, scope: !3861)
!3863 = !DILocation(line: 1615, column: 9, scope: !3857)
!3864 = !DILocation(line: 1617, column: 11, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !3861, file: !1, line: 1616, column: 9)
!3866 = !DILocation(line: 1618, column: 11, scope: !3865)
!3867 = !DILocation(line: 1619, column: 11, scope: !3865)
!3868 = !DILocation(line: 1620, column: 12, scope: !3865)
!3869 = !DILocation(line: 1621, column: 9, scope: !3865)
!3870 = !DILocation(line: 1615, column: 33, scope: !3861)
!3871 = !DILocation(line: 1615, column: 9, scope: !3861)
!3872 = distinct !{!3872, !3863, !3873}
!3873 = !DILocation(line: 1621, column: 9, scope: !3857)
!3874 = !DILocation(line: 1622, column: 10, scope: !3858)
!3875 = !DILocation(line: 1623, column: 7, scope: !3858)
!3876 = !DILocation(line: 1613, column: 51, scope: !3851)
!3877 = !DILocation(line: 1613, column: 7, scope: !3851)
!3878 = distinct !{!3878, !3855, !3879}
!3879 = !DILocation(line: 1623, column: 7, scope: !3848)
!3880 = !DILocation(line: 1624, column: 15, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 1624, column: 7)
!3882 = !DILocation(line: 1624, column: 12, scope: !3881)
!3883 = !DILocation(line: 1624, column: 19, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3881, file: !1, line: 1624, column: 7)
!3885 = !DILocation(line: 1624, column: 36, scope: !3884)
!3886 = !DILocation(line: 1624, column: 50, scope: !3884)
!3887 = !DILocation(line: 1624, column: 23, scope: !3884)
!3888 = !DILocation(line: 1624, column: 7, scope: !3881)
!3889 = !DILocation(line: 1626, column: 9, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !1, line: 1625, column: 7)
!3891 = !DILocation(line: 1627, column: 9, scope: !3890)
!3892 = !DILocation(line: 1628, column: 9, scope: !3890)
!3893 = !DILocation(line: 1629, column: 10, scope: !3890)
!3894 = !DILocation(line: 1630, column: 7, scope: !3890)
!3895 = !DILocation(line: 1624, column: 59, scope: !3884)
!3896 = !DILocation(line: 1624, column: 7, scope: !3884)
!3897 = distinct !{!3897, !3888, !3898}
!3898 = !DILocation(line: 1630, column: 7, scope: !3881)
!3899 = !DILocation(line: 1631, column: 11, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 1631, column: 11)
!3901 = !DILocation(line: 1631, column: 15, scope: !3900)
!3902 = !DILocation(line: 1631, column: 11, scope: !3831)
!3903 = !DILocation(line: 1632, column: 10, scope: !3900)
!3904 = !DILocation(line: 1632, column: 9, scope: !3900)
!3905 = !DILocation(line: 1633, column: 7, scope: !3831)
!3906 = !DILocalVariable(name: "pixel", scope: !3907, file: !1, line: 1638, type: !438)
!3907 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1636, column: 5)
!3908 = !DILocation(line: 1638, column: 9, scope: !3907)
!3909 = !DILocation(line: 1640, column: 29, scope: !3907)
!3910 = !DILocation(line: 1640, column: 43, scope: !3907)
!3911 = !DILocation(line: 1640, column: 13, scope: !3907)
!3912 = !DILocation(line: 1640, column: 12, scope: !3907)
!3913 = !DILocation(line: 1641, column: 13, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3907, file: !1, line: 1641, column: 7)
!3915 = !DILocation(line: 1641, column: 12, scope: !3914)
!3916 = !DILocation(line: 1641, column: 17, scope: !3917)
!3917 = distinct !DILexicalBlock(scope: !3914, file: !1, line: 1641, column: 7)
!3918 = !DILocation(line: 1641, column: 32, scope: !3917)
!3919 = !DILocation(line: 1641, column: 45, scope: !3917)
!3920 = !DILocation(line: 1641, column: 19, scope: !3917)
!3921 = !DILocation(line: 1641, column: 7, scope: !3914)
!3922 = !DILocation(line: 1643, column: 34, scope: !3923)
!3923 = distinct !DILexicalBlock(scope: !3917, file: !1, line: 1642, column: 7)
!3924 = !DILocation(line: 1643, column: 33, scope: !3923)
!3925 = !DILocation(line: 1643, column: 36, scope: !3923)
!3926 = !DILocation(line: 1643, column: 42, scope: !3923)
!3927 = !DILocation(line: 1643, column: 15, scope: !3923)
!3928 = !DILocation(line: 1643, column: 14, scope: !3923)
!3929 = !DILocation(line: 1644, column: 9, scope: !3923)
!3930 = !DILocation(line: 1645, column: 9, scope: !3923)
!3931 = !DILocation(line: 1646, column: 9, scope: !3923)
!3932 = !DILocation(line: 1647, column: 10, scope: !3923)
!3933 = !DILocation(line: 1648, column: 34, scope: !3923)
!3934 = !DILocation(line: 1648, column: 33, scope: !3923)
!3935 = !DILocation(line: 1648, column: 32, scope: !3923)
!3936 = !DILocation(line: 1648, column: 37, scope: !3923)
!3937 = !DILocation(line: 1648, column: 15, scope: !3923)
!3938 = !DILocation(line: 1648, column: 14, scope: !3923)
!3939 = !DILocation(line: 1649, column: 9, scope: !3923)
!3940 = !DILocation(line: 1650, column: 9, scope: !3923)
!3941 = !DILocation(line: 1651, column: 9, scope: !3923)
!3942 = !DILocation(line: 1652, column: 10, scope: !3923)
!3943 = !DILocation(line: 1653, column: 10, scope: !3923)
!3944 = !DILocation(line: 1654, column: 7, scope: !3923)
!3945 = !DILocation(line: 1641, column: 51, scope: !3917)
!3946 = !DILocation(line: 1641, column: 7, scope: !3917)
!3947 = distinct !{!3947, !3921, !3948}
!3948 = !DILocation(line: 1654, column: 7, scope: !3914)
!3949 = !DILocation(line: 1655, column: 15, scope: !3950)
!3950 = distinct !DILexicalBlock(scope: !3907, file: !1, line: 1655, column: 7)
!3951 = !DILocation(line: 1655, column: 12, scope: !3950)
!3952 = !DILocation(line: 1655, column: 19, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3950, file: !1, line: 1655, column: 7)
!3954 = !DILocation(line: 1655, column: 36, scope: !3953)
!3955 = !DILocation(line: 1655, column: 50, scope: !3953)
!3956 = !DILocation(line: 1655, column: 23, scope: !3953)
!3957 = !DILocation(line: 1655, column: 7, scope: !3950)
!3958 = !DILocation(line: 1657, column: 34, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3953, file: !1, line: 1656, column: 7)
!3960 = !DILocation(line: 1657, column: 32, scope: !3959)
!3961 = !DILocation(line: 1657, column: 37, scope: !3959)
!3962 = !DILocation(line: 1657, column: 15, scope: !3959)
!3963 = !DILocation(line: 1657, column: 14, scope: !3959)
!3964 = !DILocation(line: 1658, column: 9, scope: !3959)
!3965 = !DILocation(line: 1659, column: 9, scope: !3959)
!3966 = !DILocation(line: 1660, column: 9, scope: !3959)
!3967 = !DILocation(line: 1661, column: 10, scope: !3959)
!3968 = !DILocation(line: 1662, column: 7, scope: !3959)
!3969 = !DILocation(line: 1655, column: 59, scope: !3953)
!3970 = !DILocation(line: 1655, column: 7, scope: !3953)
!3971 = distinct !{!3971, !3957, !3972}
!3972 = !DILocation(line: 1662, column: 7, scope: !3950)
!3973 = !DILocation(line: 1663, column: 7, scope: !3907)
!3974 = !DILocalVariable(name: "pixel", scope: !3975, file: !1, line: 1668, type: !438)
!3975 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1666, column: 5)
!3976 = !DILocation(line: 1668, column: 9, scope: !3975)
!3977 = !DILocation(line: 1670, column: 11, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 1670, column: 11)
!3979 = !DILocation(line: 1670, column: 25, scope: !3978)
!3980 = !DILocation(line: 1670, column: 38, scope: !3978)
!3981 = !DILocation(line: 1670, column: 11, scope: !3975)
!3982 = !DILocation(line: 1672, column: 17, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !1, line: 1672, column: 11)
!3984 = distinct !DILexicalBlock(scope: !3978, file: !1, line: 1671, column: 9)
!3985 = !DILocation(line: 1672, column: 16, scope: !3983)
!3986 = !DILocation(line: 1672, column: 21, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !1, line: 1672, column: 11)
!3988 = !DILocation(line: 1672, column: 35, scope: !3987)
!3989 = !DILocation(line: 1672, column: 23, scope: !3987)
!3990 = !DILocation(line: 1672, column: 11, scope: !3983)
!3991 = !DILocation(line: 1674, column: 29, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3987, file: !1, line: 1673, column: 11)
!3993 = !DILocation(line: 1674, column: 15, scope: !3992)
!3994 = !DILocation(line: 1674, column: 14, scope: !3992)
!3995 = !DILocation(line: 1675, column: 13, scope: !3992)
!3996 = !DILocation(line: 1676, column: 13, scope: !3992)
!3997 = !DILocation(line: 1677, column: 13, scope: !3992)
!3998 = !DILocation(line: 1678, column: 13, scope: !3992)
!3999 = !DILocation(line: 1679, column: 16, scope: !3992)
!4000 = !DILocation(line: 1679, column: 30, scope: !3992)
!4001 = !DILocation(line: 1679, column: 14, scope: !3992)
!4002 = !DILocation(line: 1680, column: 14, scope: !3992)
!4003 = !DILocation(line: 1681, column: 11, scope: !3992)
!4004 = !DILocation(line: 1672, column: 51, scope: !3987)
!4005 = !DILocation(line: 1672, column: 11, scope: !3987)
!4006 = distinct !{!4006, !3990, !4007}
!4007 = !DILocation(line: 1681, column: 11, scope: !3983)
!4008 = !DILocation(line: 1682, column: 11, scope: !3984)
!4009 = !DILocation(line: 1684, column: 13, scope: !4010)
!4010 = distinct !DILexicalBlock(scope: !3975, file: !1, line: 1684, column: 7)
!4011 = !DILocation(line: 1684, column: 12, scope: !4010)
!4012 = !DILocation(line: 1684, column: 17, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4010, file: !1, line: 1684, column: 7)
!4014 = !DILocation(line: 1684, column: 31, scope: !4013)
!4015 = !DILocation(line: 1684, column: 19, scope: !4013)
!4016 = !DILocation(line: 1684, column: 7, scope: !4010)
!4017 = !DILocation(line: 1686, column: 25, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4013, file: !1, line: 1685, column: 7)
!4019 = !DILocation(line: 1686, column: 11, scope: !4018)
!4020 = !DILocation(line: 1686, column: 10, scope: !4018)
!4021 = !DILocation(line: 1687, column: 9, scope: !4018)
!4022 = !DILocation(line: 1688, column: 9, scope: !4018)
!4023 = !DILocation(line: 1689, column: 9, scope: !4018)
!4024 = !DILocation(line: 1690, column: 9, scope: !4018)
!4025 = !DILocation(line: 1691, column: 12, scope: !4018)
!4026 = !DILocation(line: 1691, column: 26, scope: !4018)
!4027 = !DILocation(line: 1691, column: 10, scope: !4018)
!4028 = !DILocation(line: 1692, column: 10, scope: !4018)
!4029 = !DILocation(line: 1693, column: 7, scope: !4018)
!4030 = !DILocation(line: 1684, column: 47, scope: !4013)
!4031 = !DILocation(line: 1684, column: 7, scope: !4013)
!4032 = distinct !{!4032, !4016, !4033}
!4033 = !DILocation(line: 1693, column: 7, scope: !4010)
!4034 = !DILocation(line: 1694, column: 7, scope: !3975)
!4035 = !DILocation(line: 1698, column: 29, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1697, column: 5)
!4037 = !DILocation(line: 1698, column: 43, scope: !4036)
!4038 = !DILocation(line: 1698, column: 13, scope: !4036)
!4039 = !DILocation(line: 1698, column: 12, scope: !4036)
!4040 = !DILocation(line: 1699, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4036, file: !1, line: 1699, column: 11)
!4042 = !DILocation(line: 1699, column: 25, scope: !4041)
!4043 = !DILocation(line: 1699, column: 30, scope: !4041)
!4044 = !DILocation(line: 1699, column: 11, scope: !4036)
!4045 = !DILocation(line: 1701, column: 15, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !1, line: 1701, column: 15)
!4047 = distinct !DILexicalBlock(scope: !4041, file: !1, line: 1700, column: 9)
!4048 = !DILocation(line: 1701, column: 22, scope: !4046)
!4049 = !DILocation(line: 1701, column: 29, scope: !4046)
!4050 = !DILocation(line: 1701, column: 15, scope: !4047)
!4051 = !DILocation(line: 1703, column: 21, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 1703, column: 15)
!4053 = distinct !DILexicalBlock(scope: !4046, file: !1, line: 1702, column: 13)
!4054 = !DILocation(line: 1703, column: 20, scope: !4052)
!4055 = !DILocation(line: 1703, column: 25, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4052, file: !1, line: 1703, column: 15)
!4057 = !DILocation(line: 1703, column: 40, scope: !4056)
!4058 = !DILocation(line: 1703, column: 53, scope: !4056)
!4059 = !DILocation(line: 1703, column: 27, scope: !4056)
!4060 = !DILocation(line: 1703, column: 15, scope: !4052)
!4061 = !DILocation(line: 1705, column: 33, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4056, file: !1, line: 1704, column: 15)
!4063 = !DILocation(line: 1705, column: 47, scope: !4062)
!4064 = !DILocation(line: 1705, column: 54, scope: !4062)
!4065 = !DILocation(line: 1705, column: 19, scope: !4062)
!4066 = !DILocation(line: 1705, column: 18, scope: !4062)
!4067 = !DILocation(line: 1706, column: 17, scope: !4062)
!4068 = !DILocation(line: 1707, column: 17, scope: !4062)
!4069 = !DILocation(line: 1708, column: 17, scope: !4062)
!4070 = !DILocation(line: 1709, column: 18, scope: !4062)
!4071 = !DILocation(line: 1710, column: 17, scope: !4062)
!4072 = !DILocation(line: 1711, column: 17, scope: !4062)
!4073 = !DILocation(line: 1712, column: 17, scope: !4062)
!4074 = !DILocation(line: 1713, column: 18, scope: !4062)
!4075 = !DILocation(line: 1714, column: 17, scope: !4062)
!4076 = !DILocation(line: 1715, column: 17, scope: !4062)
!4077 = !DILocation(line: 1716, column: 17, scope: !4062)
!4078 = !DILocation(line: 1717, column: 20, scope: !4062)
!4079 = !DILocation(line: 1717, column: 34, scope: !4062)
!4080 = !DILocation(line: 1717, column: 18, scope: !4062)
!4081 = !DILocation(line: 1718, column: 18, scope: !4062)
!4082 = !DILocation(line: 1719, column: 15, scope: !4062)
!4083 = !DILocation(line: 1703, column: 59, scope: !4056)
!4084 = !DILocation(line: 1703, column: 15, scope: !4056)
!4085 = distinct !{!4085, !4060, !4086}
!4086 = !DILocation(line: 1719, column: 15, scope: !4052)
!4087 = !DILocation(line: 1720, column: 31, scope: !4053)
!4088 = !DILocation(line: 1720, column: 45, scope: !4053)
!4089 = !DILocation(line: 1720, column: 52, scope: !4053)
!4090 = !DILocation(line: 1720, column: 17, scope: !4053)
!4091 = !DILocation(line: 1720, column: 16, scope: !4053)
!4092 = !DILocation(line: 1721, column: 20, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 1721, column: 19)
!4094 = !DILocation(line: 1721, column: 36, scope: !4093)
!4095 = !DILocation(line: 1721, column: 49, scope: !4093)
!4096 = !DILocation(line: 1721, column: 23, scope: !4093)
!4097 = !DILocation(line: 1721, column: 19, scope: !4053)
!4098 = !DILocation(line: 1723, column: 19, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 1722, column: 17)
!4100 = !DILocation(line: 1724, column: 19, scope: !4099)
!4101 = !DILocation(line: 1725, column: 19, scope: !4099)
!4102 = !DILocation(line: 1726, column: 20, scope: !4099)
!4103 = !DILocation(line: 1727, column: 17, scope: !4099)
!4104 = !DILocation(line: 1728, column: 20, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 1728, column: 19)
!4106 = !DILocation(line: 1728, column: 35, scope: !4105)
!4107 = !DILocation(line: 1728, column: 23, scope: !4105)
!4108 = !DILocation(line: 1728, column: 19, scope: !4053)
!4109 = !DILocation(line: 1730, column: 19, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4105, file: !1, line: 1729, column: 17)
!4111 = !DILocation(line: 1731, column: 19, scope: !4110)
!4112 = !DILocation(line: 1732, column: 19, scope: !4110)
!4113 = !DILocation(line: 1733, column: 20, scope: !4110)
!4114 = !DILocation(line: 1734, column: 17, scope: !4110)
!4115 = !DILocation(line: 1735, column: 15, scope: !4053)
!4116 = !DILocation(line: 1737, column: 17, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4047, file: !1, line: 1737, column: 11)
!4118 = !DILocation(line: 1737, column: 16, scope: !4117)
!4119 = !DILocation(line: 1737, column: 21, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4117, file: !1, line: 1737, column: 11)
!4121 = !DILocation(line: 1737, column: 36, scope: !4120)
!4122 = !DILocation(line: 1737, column: 49, scope: !4120)
!4123 = !DILocation(line: 1737, column: 23, scope: !4120)
!4124 = !DILocation(line: 1737, column: 11, scope: !4117)
!4125 = !DILocation(line: 1739, column: 29, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4120, file: !1, line: 1738, column: 11)
!4127 = !DILocation(line: 1739, column: 43, scope: !4126)
!4128 = !DILocation(line: 1739, column: 50, scope: !4126)
!4129 = !DILocation(line: 1739, column: 15, scope: !4126)
!4130 = !DILocation(line: 1739, column: 14, scope: !4126)
!4131 = !DILocation(line: 1740, column: 13, scope: !4126)
!4132 = !DILocation(line: 1741, column: 13, scope: !4126)
!4133 = !DILocation(line: 1742, column: 13, scope: !4126)
!4134 = !DILocation(line: 1743, column: 14, scope: !4126)
!4135 = !DILocation(line: 1744, column: 13, scope: !4126)
!4136 = !DILocation(line: 1745, column: 13, scope: !4126)
!4137 = !DILocation(line: 1746, column: 13, scope: !4126)
!4138 = !DILocation(line: 1747, column: 14, scope: !4126)
!4139 = !DILocation(line: 1748, column: 13, scope: !4126)
!4140 = !DILocation(line: 1749, column: 13, scope: !4126)
!4141 = !DILocation(line: 1750, column: 13, scope: !4126)
!4142 = !DILocation(line: 1751, column: 16, scope: !4126)
!4143 = !DILocation(line: 1751, column: 30, scope: !4126)
!4144 = !DILocation(line: 1751, column: 14, scope: !4126)
!4145 = !DILocation(line: 1752, column: 14, scope: !4126)
!4146 = !DILocation(line: 1753, column: 11, scope: !4126)
!4147 = !DILocation(line: 1737, column: 55, scope: !4120)
!4148 = !DILocation(line: 1737, column: 11, scope: !4120)
!4149 = distinct !{!4149, !4124, !4150}
!4150 = !DILocation(line: 1753, column: 11, scope: !4117)
!4151 = !DILocation(line: 1754, column: 27, scope: !4047)
!4152 = !DILocation(line: 1754, column: 41, scope: !4047)
!4153 = !DILocation(line: 1754, column: 48, scope: !4047)
!4154 = !DILocation(line: 1754, column: 13, scope: !4047)
!4155 = !DILocation(line: 1754, column: 12, scope: !4047)
!4156 = !DILocation(line: 1755, column: 16, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4047, file: !1, line: 1755, column: 15)
!4158 = !DILocation(line: 1755, column: 32, scope: !4157)
!4159 = !DILocation(line: 1755, column: 45, scope: !4157)
!4160 = !DILocation(line: 1755, column: 19, scope: !4157)
!4161 = !DILocation(line: 1755, column: 15, scope: !4047)
!4162 = !DILocation(line: 1757, column: 15, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4157, file: !1, line: 1756, column: 13)
!4164 = !DILocation(line: 1758, column: 15, scope: !4163)
!4165 = !DILocation(line: 1759, column: 15, scope: !4163)
!4166 = !DILocation(line: 1760, column: 16, scope: !4163)
!4167 = !DILocation(line: 1761, column: 13, scope: !4163)
!4168 = !DILocation(line: 1762, column: 16, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4047, file: !1, line: 1762, column: 15)
!4170 = !DILocation(line: 1762, column: 31, scope: !4169)
!4171 = !DILocation(line: 1762, column: 19, scope: !4169)
!4172 = !DILocation(line: 1762, column: 15, scope: !4047)
!4173 = !DILocation(line: 1764, column: 15, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4169, file: !1, line: 1763, column: 13)
!4175 = !DILocation(line: 1765, column: 15, scope: !4174)
!4176 = !DILocation(line: 1766, column: 15, scope: !4174)
!4177 = !DILocation(line: 1767, column: 16, scope: !4174)
!4178 = !DILocation(line: 1768, column: 13, scope: !4174)
!4179 = !DILocation(line: 1769, column: 11, scope: !4047)
!4180 = !DILocation(line: 1771, column: 13, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4036, file: !1, line: 1771, column: 7)
!4182 = !DILocation(line: 1771, column: 12, scope: !4181)
!4183 = !DILocation(line: 1771, column: 17, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4181, file: !1, line: 1771, column: 7)
!4185 = !DILocation(line: 1771, column: 31, scope: !4184)
!4186 = !DILocation(line: 1771, column: 19, scope: !4184)
!4187 = !DILocation(line: 1771, column: 7, scope: !4181)
!4188 = !DILocation(line: 1773, column: 28, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 1772, column: 7)
!4190 = !DILocation(line: 1773, column: 41, scope: !4189)
!4191 = !DILocation(line: 1773, column: 11, scope: !4189)
!4192 = !DILocation(line: 1773, column: 10, scope: !4189)
!4193 = !DILocation(line: 1774, column: 9, scope: !4189)
!4194 = !DILocation(line: 1775, column: 9, scope: !4189)
!4195 = !DILocation(line: 1776, column: 9, scope: !4189)
!4196 = !DILocation(line: 1777, column: 12, scope: !4189)
!4197 = !DILocation(line: 1777, column: 26, scope: !4189)
!4198 = !DILocation(line: 1777, column: 10, scope: !4189)
!4199 = !DILocation(line: 1778, column: 10, scope: !4189)
!4200 = !DILocation(line: 1779, column: 7, scope: !4189)
!4201 = !DILocation(line: 1771, column: 47, scope: !4184)
!4202 = !DILocation(line: 1771, column: 7, scope: !4184)
!4203 = distinct !{!4203, !4187, !4204}
!4204 = !DILocation(line: 1779, column: 7, scope: !4181)
!4205 = !DILocation(line: 1780, column: 7, scope: !4036)
!4206 = !DILocation(line: 1784, column: 29, scope: !4207)
!4207 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1783, column: 5)
!4208 = !DILocation(line: 1784, column: 43, scope: !4207)
!4209 = !DILocation(line: 1784, column: 13, scope: !4207)
!4210 = !DILocation(line: 1784, column: 12, scope: !4207)
!4211 = !DILocation(line: 1785, column: 11, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4207, file: !1, line: 1785, column: 11)
!4213 = !DILocation(line: 1785, column: 25, scope: !4212)
!4214 = !DILocation(line: 1785, column: 30, scope: !4212)
!4215 = !DILocation(line: 1785, column: 11, scope: !4207)
!4216 = !DILocalVariable(name: "pixel", scope: !4217, file: !1, line: 1788, type: !494)
!4217 = distinct !DILexicalBlock(scope: !4212, file: !1, line: 1786, column: 9)
!4218 = !DILocation(line: 1788, column: 13, scope: !4217)
!4219 = !DILocation(line: 1790, column: 17, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1790, column: 11)
!4221 = !DILocation(line: 1790, column: 16, scope: !4220)
!4222 = !DILocation(line: 1790, column: 21, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4220, file: !1, line: 1790, column: 11)
!4224 = !DILocation(line: 1790, column: 36, scope: !4223)
!4225 = !DILocation(line: 1790, column: 49, scope: !4223)
!4226 = !DILocation(line: 1790, column: 23, scope: !4223)
!4227 = !DILocation(line: 1790, column: 11, scope: !4220)
!4228 = !DILocation(line: 1792, column: 30, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4223, file: !1, line: 1791, column: 11)
!4230 = !DILocation(line: 1792, column: 44, scope: !4229)
!4231 = !DILocation(line: 1792, column: 51, scope: !4229)
!4232 = !DILocation(line: 1792, column: 15, scope: !4229)
!4233 = !DILocation(line: 1792, column: 14, scope: !4229)
!4234 = !DILocation(line: 1793, column: 13, scope: !4229)
!4235 = !DILocation(line: 1794, column: 13, scope: !4229)
!4236 = !DILocation(line: 1795, column: 13, scope: !4229)
!4237 = !DILocation(line: 1796, column: 14, scope: !4229)
!4238 = !DILocation(line: 1797, column: 30, scope: !4229)
!4239 = !DILocation(line: 1797, column: 44, scope: !4229)
!4240 = !DILocation(line: 1797, column: 51, scope: !4229)
!4241 = !DILocation(line: 1797, column: 15, scope: !4229)
!4242 = !DILocation(line: 1797, column: 14, scope: !4229)
!4243 = !DILocation(line: 1798, column: 13, scope: !4229)
!4244 = !DILocation(line: 1799, column: 13, scope: !4229)
!4245 = !DILocation(line: 1800, column: 13, scope: !4229)
!4246 = !DILocation(line: 1801, column: 16, scope: !4229)
!4247 = !DILocation(line: 1801, column: 30, scope: !4229)
!4248 = !DILocation(line: 1801, column: 14, scope: !4229)
!4249 = !DILocation(line: 1802, column: 14, scope: !4229)
!4250 = !DILocation(line: 1803, column: 11, scope: !4229)
!4251 = !DILocation(line: 1790, column: 55, scope: !4223)
!4252 = !DILocation(line: 1790, column: 11, scope: !4223)
!4253 = distinct !{!4253, !4227, !4254}
!4254 = !DILocation(line: 1803, column: 11, scope: !4220)
!4255 = !DILocation(line: 1804, column: 19, scope: !4256)
!4256 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1804, column: 11)
!4257 = !DILocation(line: 1804, column: 16, scope: !4256)
!4258 = !DILocation(line: 1804, column: 23, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4256, file: !1, line: 1804, column: 11)
!4260 = !DILocation(line: 1804, column: 40, scope: !4259)
!4261 = !DILocation(line: 1804, column: 54, scope: !4259)
!4262 = !DILocation(line: 1804, column: 27, scope: !4259)
!4263 = !DILocation(line: 1804, column: 11, scope: !4256)
!4264 = !DILocation(line: 1806, column: 30, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 1805, column: 11)
!4266 = !DILocation(line: 1806, column: 44, scope: !4265)
!4267 = !DILocation(line: 1806, column: 51, scope: !4265)
!4268 = !DILocation(line: 1806, column: 15, scope: !4265)
!4269 = !DILocation(line: 1806, column: 14, scope: !4265)
!4270 = !DILocation(line: 1807, column: 13, scope: !4265)
!4271 = !DILocation(line: 1809, column: 13, scope: !4265)
!4272 = !DILocation(line: 1810, column: 13, scope: !4265)
!4273 = !DILocation(line: 1811, column: 16, scope: !4265)
!4274 = !DILocation(line: 1811, column: 30, scope: !4265)
!4275 = !DILocation(line: 1811, column: 14, scope: !4265)
!4276 = !DILocation(line: 1812, column: 14, scope: !4265)
!4277 = !DILocation(line: 1813, column: 11, scope: !4265)
!4278 = !DILocation(line: 1804, column: 63, scope: !4259)
!4279 = !DILocation(line: 1804, column: 11, scope: !4259)
!4280 = distinct !{!4280, !4263, !4281}
!4281 = !DILocation(line: 1813, column: 11, scope: !4256)
!4282 = !DILocation(line: 1814, column: 15, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 1814, column: 15)
!4284 = !DILocation(line: 1814, column: 19, scope: !4283)
!4285 = !DILocation(line: 1814, column: 15, scope: !4217)
!4286 = !DILocation(line: 1815, column: 14, scope: !4283)
!4287 = !DILocation(line: 1815, column: 13, scope: !4283)
!4288 = !DILocation(line: 1816, column: 11, scope: !4217)
!4289 = !DILocation(line: 1818, column: 13, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4207, file: !1, line: 1818, column: 7)
!4291 = !DILocation(line: 1818, column: 12, scope: !4290)
!4292 = !DILocation(line: 1818, column: 17, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4290, file: !1, line: 1818, column: 7)
!4294 = !DILocation(line: 1818, column: 31, scope: !4293)
!4295 = !DILocation(line: 1818, column: 19, scope: !4293)
!4296 = !DILocation(line: 1818, column: 7, scope: !4290)
!4297 = !DILocation(line: 1820, column: 28, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4293, file: !1, line: 1819, column: 7)
!4299 = !DILocation(line: 1820, column: 41, scope: !4298)
!4300 = !DILocation(line: 1820, column: 11, scope: !4298)
!4301 = !DILocation(line: 1820, column: 10, scope: !4298)
!4302 = !DILocation(line: 1821, column: 9, scope: !4298)
!4303 = !DILocation(line: 1822, column: 9, scope: !4298)
!4304 = !DILocation(line: 1823, column: 9, scope: !4298)
!4305 = !DILocation(line: 1824, column: 12, scope: !4298)
!4306 = !DILocation(line: 1824, column: 26, scope: !4298)
!4307 = !DILocation(line: 1824, column: 10, scope: !4298)
!4308 = !DILocation(line: 1825, column: 10, scope: !4298)
!4309 = !DILocation(line: 1826, column: 7, scope: !4298)
!4310 = !DILocation(line: 1818, column: 47, scope: !4293)
!4311 = !DILocation(line: 1818, column: 7, scope: !4293)
!4312 = distinct !{!4312, !4296, !4313}
!4313 = !DILocation(line: 1826, column: 7, scope: !4290)
!4314 = !DILocation(line: 1827, column: 7, scope: !4207)
!4315 = !DILocalVariable(name: "pixel", scope: !4316, file: !1, line: 1832, type: !494)
!4316 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1830, column: 5)
!4317 = !DILocation(line: 1832, column: 9, scope: !4316)
!4318 = !DILocation(line: 1834, column: 11, scope: !4319)
!4319 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 1834, column: 11)
!4320 = !DILocation(line: 1834, column: 25, scope: !4319)
!4321 = !DILocation(line: 1834, column: 38, scope: !4319)
!4322 = !DILocation(line: 1834, column: 11, scope: !4316)
!4323 = !DILocation(line: 1836, column: 17, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4325, file: !1, line: 1836, column: 11)
!4325 = distinct !DILexicalBlock(scope: !4319, file: !1, line: 1835, column: 9)
!4326 = !DILocation(line: 1836, column: 16, scope: !4324)
!4327 = !DILocation(line: 1836, column: 21, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4324, file: !1, line: 1836, column: 11)
!4329 = !DILocation(line: 1836, column: 35, scope: !4328)
!4330 = !DILocation(line: 1836, column: 23, scope: !4328)
!4331 = !DILocation(line: 1836, column: 11, scope: !4324)
!4332 = !DILocation(line: 1838, column: 30, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !1, line: 1837, column: 11)
!4334 = !DILocation(line: 1838, column: 44, scope: !4333)
!4335 = !DILocation(line: 1838, column: 51, scope: !4333)
!4336 = !DILocation(line: 1838, column: 15, scope: !4333)
!4337 = !DILocation(line: 1838, column: 14, scope: !4333)
!4338 = !DILocation(line: 1839, column: 13, scope: !4333)
!4339 = !DILocation(line: 1840, column: 13, scope: !4333)
!4340 = !DILocation(line: 1841, column: 13, scope: !4333)
!4341 = !DILocation(line: 1842, column: 16, scope: !4333)
!4342 = !DILocation(line: 1842, column: 30, scope: !4333)
!4343 = !DILocation(line: 1842, column: 14, scope: !4333)
!4344 = !DILocation(line: 1843, column: 14, scope: !4333)
!4345 = !DILocation(line: 1844, column: 11, scope: !4333)
!4346 = !DILocation(line: 1836, column: 51, scope: !4328)
!4347 = !DILocation(line: 1836, column: 11, scope: !4328)
!4348 = distinct !{!4348, !4331, !4349}
!4349 = !DILocation(line: 1844, column: 11, scope: !4324)
!4350 = !DILocation(line: 1845, column: 11, scope: !4325)
!4351 = !DILocation(line: 1847, column: 11, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 1847, column: 11)
!4353 = !DILocation(line: 1847, column: 25, scope: !4352)
!4354 = !DILocation(line: 1847, column: 32, scope: !4352)
!4355 = !DILocation(line: 1847, column: 11, scope: !4316)
!4356 = !DILocation(line: 1849, column: 17, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 1849, column: 11)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !1, line: 1848, column: 9)
!4359 = !DILocation(line: 1849, column: 16, scope: !4357)
!4360 = !DILocation(line: 1849, column: 21, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4357, file: !1, line: 1849, column: 11)
!4362 = !DILocation(line: 1849, column: 35, scope: !4361)
!4363 = !DILocation(line: 1849, column: 23, scope: !4361)
!4364 = !DILocation(line: 1849, column: 11, scope: !4357)
!4365 = !DILocation(line: 1851, column: 30, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4361, file: !1, line: 1850, column: 11)
!4367 = !DILocation(line: 1851, column: 44, scope: !4366)
!4368 = !DILocation(line: 1851, column: 51, scope: !4366)
!4369 = !DILocation(line: 1851, column: 15, scope: !4366)
!4370 = !DILocation(line: 1851, column: 14, scope: !4366)
!4371 = !DILocation(line: 1852, column: 13, scope: !4366)
!4372 = !DILocation(line: 1854, column: 13, scope: !4366)
!4373 = !DILocation(line: 1855, column: 13, scope: !4366)
!4374 = !DILocation(line: 1856, column: 16, scope: !4366)
!4375 = !DILocation(line: 1856, column: 30, scope: !4366)
!4376 = !DILocation(line: 1856, column: 14, scope: !4366)
!4377 = !DILocation(line: 1857, column: 14, scope: !4366)
!4378 = !DILocation(line: 1858, column: 11, scope: !4366)
!4379 = !DILocation(line: 1849, column: 51, scope: !4361)
!4380 = !DILocation(line: 1849, column: 11, scope: !4361)
!4381 = distinct !{!4381, !4364, !4382}
!4382 = !DILocation(line: 1858, column: 11, scope: !4357)
!4383 = !DILocation(line: 1859, column: 11, scope: !4358)
!4384 = !DILocation(line: 1861, column: 13, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 1861, column: 7)
!4386 = !DILocation(line: 1861, column: 12, scope: !4385)
!4387 = !DILocation(line: 1861, column: 17, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4385, file: !1, line: 1861, column: 7)
!4389 = !DILocation(line: 1861, column: 31, scope: !4388)
!4390 = !DILocation(line: 1861, column: 19, scope: !4388)
!4391 = !DILocation(line: 1861, column: 7, scope: !4385)
!4392 = !DILocation(line: 1863, column: 26, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4388, file: !1, line: 1862, column: 7)
!4394 = !DILocation(line: 1863, column: 40, scope: !4393)
!4395 = !DILocation(line: 1863, column: 47, scope: !4393)
!4396 = !DILocation(line: 1863, column: 11, scope: !4393)
!4397 = !DILocation(line: 1863, column: 10, scope: !4393)
!4398 = !DILocation(line: 1864, column: 9, scope: !4393)
!4399 = !DILocation(line: 1865, column: 9, scope: !4393)
!4400 = !DILocation(line: 1866, column: 9, scope: !4393)
!4401 = !DILocation(line: 1867, column: 12, scope: !4393)
!4402 = !DILocation(line: 1867, column: 26, scope: !4393)
!4403 = !DILocation(line: 1867, column: 10, scope: !4393)
!4404 = !DILocation(line: 1868, column: 10, scope: !4393)
!4405 = !DILocation(line: 1869, column: 7, scope: !4393)
!4406 = !DILocation(line: 1861, column: 47, scope: !4388)
!4407 = !DILocation(line: 1861, column: 7, scope: !4388)
!4408 = distinct !{!4408, !4391, !4409}
!4409 = !DILocation(line: 1869, column: 7, scope: !4385)
!4410 = !DILocation(line: 1870, column: 7, scope: !4316)
!4411 = !DILocalVariable(name: "pixel", scope: !4412, file: !1, line: 1875, type: !5)
!4412 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1873, column: 5)
!4413 = !DILocation(line: 1875, column: 9, scope: !4412)
!4414 = !DILocation(line: 1877, column: 11, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !1, line: 1877, column: 11)
!4416 = !DILocation(line: 1877, column: 25, scope: !4415)
!4417 = !DILocation(line: 1877, column: 32, scope: !4415)
!4418 = !DILocation(line: 1877, column: 11, scope: !4412)
!4419 = !DILocalVariable(name: "pixel", scope: !4420, file: !1, line: 1880, type: !496)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 1878, column: 9)
!4421 = !DILocation(line: 1880, column: 13, scope: !4420)
!4422 = !DILocation(line: 1882, column: 17, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !1, line: 1882, column: 11)
!4424 = !DILocation(line: 1882, column: 16, scope: !4423)
!4425 = !DILocation(line: 1882, column: 21, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4423, file: !1, line: 1882, column: 11)
!4427 = !DILocation(line: 1882, column: 35, scope: !4426)
!4428 = !DILocation(line: 1882, column: 23, scope: !4426)
!4429 = !DILocation(line: 1882, column: 11, scope: !4423)
!4430 = !DILocation(line: 1884, column: 30, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4426, file: !1, line: 1883, column: 11)
!4432 = !DILocation(line: 1884, column: 43, scope: !4431)
!4433 = !DILocation(line: 1884, column: 15, scope: !4431)
!4434 = !DILocation(line: 1884, column: 14, scope: !4431)
!4435 = !DILocation(line: 1885, column: 13, scope: !4431)
!4436 = !DILocation(line: 1886, column: 13, scope: !4431)
!4437 = !DILocation(line: 1887, column: 13, scope: !4431)
!4438 = !DILocation(line: 1888, column: 16, scope: !4431)
!4439 = !DILocation(line: 1888, column: 30, scope: !4431)
!4440 = !DILocation(line: 1888, column: 14, scope: !4431)
!4441 = !DILocation(line: 1889, column: 14, scope: !4431)
!4442 = !DILocation(line: 1890, column: 11, scope: !4431)
!4443 = !DILocation(line: 1882, column: 51, scope: !4426)
!4444 = !DILocation(line: 1882, column: 11, scope: !4426)
!4445 = distinct !{!4445, !4429, !4446}
!4446 = !DILocation(line: 1890, column: 11, scope: !4423)
!4447 = !DILocation(line: 1891, column: 11, scope: !4420)
!4448 = !DILocation(line: 1893, column: 13, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4412, file: !1, line: 1893, column: 7)
!4450 = !DILocation(line: 1893, column: 12, scope: !4449)
!4451 = !DILocation(line: 1893, column: 17, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4449, file: !1, line: 1893, column: 7)
!4453 = !DILocation(line: 1893, column: 31, scope: !4452)
!4454 = !DILocation(line: 1893, column: 19, scope: !4452)
!4455 = !DILocation(line: 1893, column: 7, scope: !4449)
!4456 = !DILocation(line: 1895, column: 25, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4452, file: !1, line: 1894, column: 7)
!4458 = !DILocation(line: 1895, column: 39, scope: !4457)
!4459 = !DILocation(line: 1895, column: 46, scope: !4457)
!4460 = !DILocation(line: 1895, column: 11, scope: !4457)
!4461 = !DILocation(line: 1895, column: 10, scope: !4457)
!4462 = !DILocation(line: 1896, column: 9, scope: !4457)
!4463 = !DILocation(line: 1897, column: 9, scope: !4457)
!4464 = !DILocation(line: 1898, column: 9, scope: !4457)
!4465 = !DILocation(line: 1899, column: 12, scope: !4457)
!4466 = !DILocation(line: 1899, column: 26, scope: !4457)
!4467 = !DILocation(line: 1899, column: 10, scope: !4457)
!4468 = !DILocation(line: 1900, column: 10, scope: !4457)
!4469 = !DILocation(line: 1901, column: 7, scope: !4457)
!4470 = !DILocation(line: 1893, column: 47, scope: !4452)
!4471 = !DILocation(line: 1893, column: 7, scope: !4452)
!4472 = distinct !{!4472, !4455, !4473}
!4473 = !DILocation(line: 1901, column: 7, scope: !4449)
!4474 = !DILocation(line: 1902, column: 7, scope: !4412)
!4475 = !DILocation(line: 1906, column: 11, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4477, file: !1, line: 1906, column: 11)
!4477 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1905, column: 5)
!4478 = !DILocation(line: 1906, column: 25, scope: !4476)
!4479 = !DILocation(line: 1906, column: 32, scope: !4476)
!4480 = !DILocation(line: 1906, column: 11, scope: !4477)
!4481 = !DILocalVariable(name: "pixel", scope: !4482, file: !1, line: 1909, type: !456)
!4482 = distinct !DILexicalBlock(scope: !4476, file: !1, line: 1907, column: 9)
!4483 = !DILocation(line: 1909, column: 13, scope: !4482)
!4484 = !DILocation(line: 1911, column: 17, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4482, file: !1, line: 1911, column: 11)
!4486 = !DILocation(line: 1911, column: 16, scope: !4485)
!4487 = !DILocation(line: 1911, column: 21, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4485, file: !1, line: 1911, column: 11)
!4489 = !DILocation(line: 1911, column: 35, scope: !4488)
!4490 = !DILocation(line: 1911, column: 23, scope: !4488)
!4491 = !DILocation(line: 1911, column: 11, scope: !4485)
!4492 = !DILocation(line: 1913, column: 31, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4488, file: !1, line: 1912, column: 11)
!4494 = !DILocation(line: 1913, column: 44, scope: !4493)
!4495 = !DILocation(line: 1913, column: 15, scope: !4493)
!4496 = !DILocation(line: 1913, column: 14, scope: !4493)
!4497 = !DILocation(line: 1914, column: 13, scope: !4493)
!4498 = !DILocation(line: 1915, column: 13, scope: !4493)
!4499 = !DILocation(line: 1916, column: 13, scope: !4493)
!4500 = !DILocation(line: 1917, column: 16, scope: !4493)
!4501 = !DILocation(line: 1917, column: 30, scope: !4493)
!4502 = !DILocation(line: 1917, column: 14, scope: !4493)
!4503 = !DILocation(line: 1918, column: 14, scope: !4493)
!4504 = !DILocation(line: 1919, column: 11, scope: !4493)
!4505 = !DILocation(line: 1911, column: 51, scope: !4488)
!4506 = !DILocation(line: 1911, column: 11, scope: !4488)
!4507 = distinct !{!4507, !4491, !4508}
!4508 = !DILocation(line: 1919, column: 11, scope: !4485)
!4509 = !DILocation(line: 1920, column: 11, scope: !4482)
!4510 = !DILocation(line: 1922, column: 5, scope: !4477)
!4511 = !DILocation(line: 1925, column: 29, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 1924, column: 5)
!4513 = !DILocation(line: 1925, column: 43, scope: !4512)
!4514 = !DILocation(line: 1925, column: 13, scope: !4512)
!4515 = !DILocation(line: 1925, column: 12, scope: !4512)
!4516 = !DILocation(line: 1926, column: 13, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 1926, column: 7)
!4518 = !DILocation(line: 1926, column: 12, scope: !4517)
!4519 = !DILocation(line: 1926, column: 17, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 1926, column: 7)
!4521 = !DILocation(line: 1926, column: 31, scope: !4520)
!4522 = !DILocation(line: 1926, column: 19, scope: !4520)
!4523 = !DILocation(line: 1926, column: 7, scope: !4517)
!4524 = !DILocation(line: 1928, column: 28, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4520, file: !1, line: 1927, column: 7)
!4526 = !DILocation(line: 1928, column: 41, scope: !4525)
!4527 = !DILocation(line: 1928, column: 11, scope: !4525)
!4528 = !DILocation(line: 1928, column: 10, scope: !4525)
!4529 = !DILocation(line: 1929, column: 9, scope: !4525)
!4530 = !DILocation(line: 1930, column: 9, scope: !4525)
!4531 = !DILocation(line: 1931, column: 9, scope: !4525)
!4532 = !DILocation(line: 1932, column: 12, scope: !4525)
!4533 = !DILocation(line: 1932, column: 26, scope: !4525)
!4534 = !DILocation(line: 1932, column: 10, scope: !4525)
!4535 = !DILocation(line: 1933, column: 10, scope: !4525)
!4536 = !DILocation(line: 1934, column: 7, scope: !4525)
!4537 = !DILocation(line: 1926, column: 47, scope: !4520)
!4538 = !DILocation(line: 1926, column: 7, scope: !4520)
!4539 = distinct !{!4539, !4523, !4540}
!4540 = !DILocation(line: 1934, column: 7, scope: !4517)
!4541 = !DILocation(line: 1935, column: 7, scope: !4512)
!4542 = !DILocation(line: 1938, column: 1, scope: !3808)
!4543 = distinct !DISubprogram(name: "ImportGrayAlphaQuantum", scope: !1, file: !1, line: 1940, type: !1062, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!4544 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !4543, file: !1, line: 1940, type: !444)
!4545 = !DILocation(line: 1940, column: 49, scope: !4543)
!4546 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !4543, file: !1, line: 1941, type: !638)
!4547 = !DILocation(line: 1941, column: 24, scope: !4543)
!4548 = !DILocalVariable(name: "p", arg: 3, scope: !4543, file: !1, line: 1941, type: !717)
!4549 = !DILocation(line: 1941, column: 68, scope: !4543)
!4550 = !DILocalVariable(name: "q", arg: 4, scope: !4543, file: !1, line: 1942, type: !742)
!4551 = !DILocation(line: 1942, column: 25, scope: !4543)
!4552 = !DILocalVariable(name: "range", scope: !4543, file: !1, line: 1945, type: !501)
!4553 = !DILocation(line: 1945, column: 5, scope: !4543)
!4554 = !DILocalVariable(name: "x", scope: !4543, file: !1, line: 1948, type: !488)
!4555 = !DILocation(line: 1948, column: 5, scope: !4543)
!4556 = !DILocalVariable(name: "bit", scope: !4543, file: !1, line: 1951, type: !488)
!4557 = !DILocation(line: 1951, column: 5, scope: !4543)
!4558 = !DILocalVariable(name: "pixel", scope: !4543, file: !1, line: 1954, type: !5)
!4559 = !DILocation(line: 1954, column: 5, scope: !4543)
!4560 = !DILocation(line: 1956, column: 11, scope: !4543)
!4561 = !DILocation(line: 1956, column: 25, scope: !4543)
!4562 = !DILocation(line: 1956, column: 3, scope: !4543)
!4563 = !DILocalVariable(name: "pixel", scope: !4564, file: !1, line: 1961, type: !438)
!4564 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 1959, column: 5)
!4565 = distinct !DILexicalBlock(scope: !4543, file: !1, line: 1957, column: 3)
!4566 = !DILocation(line: 1961, column: 9, scope: !4564)
!4567 = !DILocation(line: 1963, column: 10, scope: !4564)
!4568 = !DILocation(line: 1964, column: 25, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 1964, column: 7)
!4570 = !DILocation(line: 1964, column: 38, scope: !4569)
!4571 = !DILocation(line: 1964, column: 13, scope: !4569)
!4572 = !DILocation(line: 1964, column: 12, scope: !4569)
!4573 = !DILocation(line: 1964, column: 43, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4569, file: !1, line: 1964, column: 7)
!4575 = !DILocation(line: 1964, column: 45, scope: !4574)
!4576 = !DILocation(line: 1964, column: 7, scope: !4569)
!4577 = !DILocation(line: 1966, column: 17, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4579, file: !1, line: 1966, column: 9)
!4579 = distinct !DILexicalBlock(scope: !4574, file: !1, line: 1965, column: 7)
!4580 = !DILocation(line: 1966, column: 14, scope: !4578)
!4581 = !DILocation(line: 1966, column: 21, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 1966, column: 9)
!4583 = !DILocation(line: 1966, column: 25, scope: !4582)
!4584 = !DILocation(line: 1966, column: 9, scope: !4578)
!4585 = !DILocation(line: 1968, column: 37, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4582, file: !1, line: 1967, column: 9)
!4587 = !DILocation(line: 1968, column: 36, scope: !4586)
!4588 = !DILocation(line: 1968, column: 35, scope: !4586)
!4589 = !DILocation(line: 1968, column: 51, scope: !4586)
!4590 = !DILocation(line: 1968, column: 50, scope: !4586)
!4591 = !DILocation(line: 1968, column: 45, scope: !4586)
!4592 = !DILocation(line: 1968, column: 40, scope: !4586)
!4593 = !DILocation(line: 1968, column: 58, scope: !4586)
!4594 = !DILocation(line: 1968, column: 34, scope: !4586)
!4595 = !DILocation(line: 1968, column: 17, scope: !4586)
!4596 = !DILocation(line: 1968, column: 16, scope: !4586)
!4597 = !DILocation(line: 1969, column: 11, scope: !4586)
!4598 = !DILocation(line: 1970, column: 11, scope: !4586)
!4599 = !DILocation(line: 1971, column: 11, scope: !4586)
!4600 = !DILocation(line: 1972, column: 11, scope: !4586)
!4601 = !DILocation(line: 1974, column: 12, scope: !4586)
!4602 = !DILocation(line: 1975, column: 9, scope: !4586)
!4603 = !DILocation(line: 1966, column: 33, scope: !4582)
!4604 = !DILocation(line: 1966, column: 9, scope: !4582)
!4605 = distinct !{!4605, !4584, !4606}
!4606 = !DILocation(line: 1975, column: 9, scope: !4578)
!4607 = !DILocation(line: 1976, column: 10, scope: !4579)
!4608 = !DILocation(line: 1977, column: 7, scope: !4579)
!4609 = !DILocation(line: 1964, column: 51, scope: !4574)
!4610 = !DILocation(line: 1964, column: 7, scope: !4574)
!4611 = distinct !{!4611, !4576, !4612}
!4612 = !DILocation(line: 1977, column: 7, scope: !4569)
!4613 = !DILocation(line: 1978, column: 12, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 1978, column: 11)
!4615 = !DILocation(line: 1978, column: 26, scope: !4614)
!4616 = !DILocation(line: 1978, column: 31, scope: !4614)
!4617 = !DILocation(line: 1978, column: 11, scope: !4564)
!4618 = !DILocation(line: 1979, column: 17, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4614, file: !1, line: 1979, column: 9)
!4620 = !DILocation(line: 1979, column: 14, scope: !4619)
!4621 = !DILocation(line: 1979, column: 21, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4619, file: !1, line: 1979, column: 9)
!4623 = !DILocation(line: 1979, column: 42, scope: !4622)
!4624 = !DILocation(line: 1979, column: 56, scope: !4622)
!4625 = !DILocation(line: 1979, column: 40, scope: !4622)
!4626 = !DILocation(line: 1979, column: 25, scope: !4622)
!4627 = !DILocation(line: 1979, column: 9, scope: !4619)
!4628 = !DILocation(line: 1981, column: 37, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4622, file: !1, line: 1980, column: 9)
!4630 = !DILocation(line: 1981, column: 36, scope: !4629)
!4631 = !DILocation(line: 1981, column: 35, scope: !4629)
!4632 = !DILocation(line: 1981, column: 51, scope: !4629)
!4633 = !DILocation(line: 1981, column: 50, scope: !4629)
!4634 = !DILocation(line: 1981, column: 45, scope: !4629)
!4635 = !DILocation(line: 1981, column: 40, scope: !4629)
!4636 = !DILocation(line: 1981, column: 58, scope: !4629)
!4637 = !DILocation(line: 1981, column: 34, scope: !4629)
!4638 = !DILocation(line: 1981, column: 17, scope: !4629)
!4639 = !DILocation(line: 1981, column: 16, scope: !4629)
!4640 = !DILocation(line: 1982, column: 11, scope: !4629)
!4641 = !DILocation(line: 1983, column: 11, scope: !4629)
!4642 = !DILocation(line: 1984, column: 11, scope: !4629)
!4643 = !DILocation(line: 1985, column: 11, scope: !4629)
!4644 = !DILocation(line: 1987, column: 12, scope: !4629)
!4645 = !DILocation(line: 1988, column: 9, scope: !4629)
!4646 = !DILocation(line: 1979, column: 66, scope: !4622)
!4647 = !DILocation(line: 1979, column: 9, scope: !4622)
!4648 = distinct !{!4648, !4627, !4649}
!4649 = !DILocation(line: 1988, column: 9, scope: !4619)
!4650 = !DILocation(line: 1989, column: 11, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4564, file: !1, line: 1989, column: 11)
!4652 = !DILocation(line: 1989, column: 15, scope: !4651)
!4653 = !DILocation(line: 1989, column: 11, scope: !4564)
!4654 = !DILocation(line: 1990, column: 10, scope: !4651)
!4655 = !DILocation(line: 1990, column: 9, scope: !4651)
!4656 = !DILocation(line: 1991, column: 7, scope: !4564)
!4657 = !DILocalVariable(name: "pixel", scope: !4658, file: !1, line: 1996, type: !438)
!4658 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 1994, column: 5)
!4659 = !DILocation(line: 1996, column: 9, scope: !4658)
!4660 = !DILocation(line: 1998, column: 29, scope: !4658)
!4661 = !DILocation(line: 1998, column: 43, scope: !4658)
!4662 = !DILocation(line: 1998, column: 13, scope: !4658)
!4663 = !DILocation(line: 1998, column: 12, scope: !4658)
!4664 = !DILocation(line: 1999, column: 13, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 1999, column: 7)
!4666 = !DILocation(line: 1999, column: 12, scope: !4665)
!4667 = !DILocation(line: 1999, column: 17, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 1999, column: 7)
!4669 = !DILocation(line: 1999, column: 31, scope: !4668)
!4670 = !DILocation(line: 1999, column: 19, scope: !4668)
!4671 = !DILocation(line: 1999, column: 7, scope: !4665)
!4672 = !DILocation(line: 2001, column: 34, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 2000, column: 7)
!4674 = !DILocation(line: 2001, column: 33, scope: !4673)
!4675 = !DILocation(line: 2001, column: 36, scope: !4673)
!4676 = !DILocation(line: 2001, column: 42, scope: !4673)
!4677 = !DILocation(line: 2001, column: 15, scope: !4673)
!4678 = !DILocation(line: 2001, column: 14, scope: !4673)
!4679 = !DILocation(line: 2002, column: 9, scope: !4673)
!4680 = !DILocation(line: 2003, column: 9, scope: !4673)
!4681 = !DILocation(line: 2004, column: 9, scope: !4673)
!4682 = !DILocation(line: 2005, column: 34, scope: !4673)
!4683 = !DILocation(line: 2005, column: 33, scope: !4673)
!4684 = !DILocation(line: 2005, column: 32, scope: !4673)
!4685 = !DILocation(line: 2005, column: 37, scope: !4673)
!4686 = !DILocation(line: 2005, column: 15, scope: !4673)
!4687 = !DILocation(line: 2005, column: 14, scope: !4673)
!4688 = !DILocation(line: 2006, column: 9, scope: !4673)
!4689 = !DILocation(line: 2007, column: 10, scope: !4673)
!4690 = !DILocation(line: 2008, column: 10, scope: !4673)
!4691 = !DILocation(line: 2009, column: 7, scope: !4673)
!4692 = !DILocation(line: 1999, column: 47, scope: !4668)
!4693 = !DILocation(line: 1999, column: 7, scope: !4668)
!4694 = distinct !{!4694, !4671, !4695}
!4695 = !DILocation(line: 2009, column: 7, scope: !4665)
!4696 = !DILocation(line: 2010, column: 7, scope: !4658)
!4697 = !DILocalVariable(name: "pixel", scope: !4698, file: !1, line: 2015, type: !438)
!4698 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2013, column: 5)
!4699 = !DILocation(line: 2015, column: 9, scope: !4698)
!4700 = !DILocation(line: 2017, column: 13, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4698, file: !1, line: 2017, column: 7)
!4702 = !DILocation(line: 2017, column: 12, scope: !4701)
!4703 = !DILocation(line: 2017, column: 17, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4701, file: !1, line: 2017, column: 7)
!4705 = !DILocation(line: 2017, column: 31, scope: !4704)
!4706 = !DILocation(line: 2017, column: 19, scope: !4704)
!4707 = !DILocation(line: 2017, column: 7, scope: !4701)
!4708 = !DILocation(line: 2019, column: 25, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !1, line: 2018, column: 7)
!4710 = !DILocation(line: 2019, column: 11, scope: !4709)
!4711 = !DILocation(line: 2019, column: 10, scope: !4709)
!4712 = !DILocation(line: 2020, column: 9, scope: !4709)
!4713 = !DILocation(line: 2021, column: 9, scope: !4709)
!4714 = !DILocation(line: 2022, column: 9, scope: !4709)
!4715 = !DILocation(line: 2023, column: 25, scope: !4709)
!4716 = !DILocation(line: 2023, column: 11, scope: !4709)
!4717 = !DILocation(line: 2023, column: 10, scope: !4709)
!4718 = !DILocation(line: 2024, column: 9, scope: !4709)
!4719 = !DILocation(line: 2025, column: 12, scope: !4709)
!4720 = !DILocation(line: 2025, column: 26, scope: !4709)
!4721 = !DILocation(line: 2025, column: 10, scope: !4709)
!4722 = !DILocation(line: 2026, column: 10, scope: !4709)
!4723 = !DILocation(line: 2027, column: 7, scope: !4709)
!4724 = !DILocation(line: 2017, column: 47, scope: !4704)
!4725 = !DILocation(line: 2017, column: 7, scope: !4704)
!4726 = distinct !{!4726, !4707, !4727}
!4727 = !DILocation(line: 2027, column: 7, scope: !4701)
!4728 = !DILocation(line: 2028, column: 7, scope: !4698)
!4729 = !DILocation(line: 2032, column: 29, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2031, column: 5)
!4731 = !DILocation(line: 2032, column: 43, scope: !4730)
!4732 = !DILocation(line: 2032, column: 13, scope: !4730)
!4733 = !DILocation(line: 2032, column: 12, scope: !4730)
!4734 = !DILocation(line: 2033, column: 13, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 2033, column: 7)
!4736 = !DILocation(line: 2033, column: 12, scope: !4735)
!4737 = !DILocation(line: 2033, column: 17, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4735, file: !1, line: 2033, column: 7)
!4739 = !DILocation(line: 2033, column: 31, scope: !4738)
!4740 = !DILocation(line: 2033, column: 19, scope: !4738)
!4741 = !DILocation(line: 2033, column: 7, scope: !4735)
!4742 = !DILocation(line: 2035, column: 28, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4738, file: !1, line: 2034, column: 7)
!4744 = !DILocation(line: 2035, column: 41, scope: !4743)
!4745 = !DILocation(line: 2035, column: 11, scope: !4743)
!4746 = !DILocation(line: 2035, column: 10, scope: !4743)
!4747 = !DILocation(line: 2036, column: 9, scope: !4743)
!4748 = !DILocation(line: 2037, column: 9, scope: !4743)
!4749 = !DILocation(line: 2038, column: 9, scope: !4743)
!4750 = !DILocation(line: 2039, column: 28, scope: !4743)
!4751 = !DILocation(line: 2039, column: 41, scope: !4743)
!4752 = !DILocation(line: 2039, column: 11, scope: !4743)
!4753 = !DILocation(line: 2039, column: 10, scope: !4743)
!4754 = !DILocation(line: 2040, column: 9, scope: !4743)
!4755 = !DILocation(line: 2041, column: 12, scope: !4743)
!4756 = !DILocation(line: 2041, column: 26, scope: !4743)
!4757 = !DILocation(line: 2041, column: 10, scope: !4743)
!4758 = !DILocation(line: 2042, column: 10, scope: !4743)
!4759 = !DILocation(line: 2043, column: 7, scope: !4743)
!4760 = !DILocation(line: 2033, column: 47, scope: !4738)
!4761 = !DILocation(line: 2033, column: 7, scope: !4738)
!4762 = distinct !{!4762, !4741, !4763}
!4763 = !DILocation(line: 2043, column: 7, scope: !4735)
!4764 = !DILocation(line: 2044, column: 7, scope: !4730)
!4765 = !DILocation(line: 2048, column: 29, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2047, column: 5)
!4767 = !DILocation(line: 2048, column: 43, scope: !4766)
!4768 = !DILocation(line: 2048, column: 13, scope: !4766)
!4769 = !DILocation(line: 2048, column: 12, scope: !4766)
!4770 = !DILocation(line: 2049, column: 13, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 2049, column: 7)
!4772 = !DILocation(line: 2049, column: 12, scope: !4771)
!4773 = !DILocation(line: 2049, column: 17, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 2049, column: 7)
!4775 = !DILocation(line: 2049, column: 31, scope: !4774)
!4776 = !DILocation(line: 2049, column: 19, scope: !4774)
!4777 = !DILocation(line: 2049, column: 7, scope: !4771)
!4778 = !DILocation(line: 2051, column: 28, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4774, file: !1, line: 2050, column: 7)
!4780 = !DILocation(line: 2051, column: 41, scope: !4779)
!4781 = !DILocation(line: 2051, column: 11, scope: !4779)
!4782 = !DILocation(line: 2051, column: 10, scope: !4779)
!4783 = !DILocation(line: 2052, column: 9, scope: !4779)
!4784 = !DILocation(line: 2053, column: 9, scope: !4779)
!4785 = !DILocation(line: 2054, column: 9, scope: !4779)
!4786 = !DILocation(line: 2055, column: 28, scope: !4779)
!4787 = !DILocation(line: 2055, column: 41, scope: !4779)
!4788 = !DILocation(line: 2055, column: 11, scope: !4779)
!4789 = !DILocation(line: 2055, column: 10, scope: !4779)
!4790 = !DILocation(line: 2056, column: 9, scope: !4779)
!4791 = !DILocation(line: 2057, column: 12, scope: !4779)
!4792 = !DILocation(line: 2057, column: 26, scope: !4779)
!4793 = !DILocation(line: 2057, column: 10, scope: !4779)
!4794 = !DILocation(line: 2058, column: 10, scope: !4779)
!4795 = !DILocation(line: 2059, column: 7, scope: !4779)
!4796 = !DILocation(line: 2049, column: 47, scope: !4774)
!4797 = !DILocation(line: 2049, column: 7, scope: !4774)
!4798 = distinct !{!4798, !4777, !4799}
!4799 = !DILocation(line: 2059, column: 7, scope: !4771)
!4800 = !DILocation(line: 2060, column: 7, scope: !4766)
!4801 = !DILocalVariable(name: "pixel", scope: !4802, file: !1, line: 2065, type: !494)
!4802 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2063, column: 5)
!4803 = !DILocation(line: 2065, column: 9, scope: !4802)
!4804 = !DILocation(line: 2067, column: 11, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4802, file: !1, line: 2067, column: 11)
!4806 = !DILocation(line: 2067, column: 25, scope: !4805)
!4807 = !DILocation(line: 2067, column: 32, scope: !4805)
!4808 = !DILocation(line: 2067, column: 11, scope: !4802)
!4809 = !DILocation(line: 2069, column: 17, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !1, line: 2069, column: 11)
!4811 = distinct !DILexicalBlock(scope: !4805, file: !1, line: 2068, column: 9)
!4812 = !DILocation(line: 2069, column: 16, scope: !4810)
!4813 = !DILocation(line: 2069, column: 21, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4810, file: !1, line: 2069, column: 11)
!4815 = !DILocation(line: 2069, column: 35, scope: !4814)
!4816 = !DILocation(line: 2069, column: 23, scope: !4814)
!4817 = !DILocation(line: 2069, column: 11, scope: !4810)
!4818 = !DILocation(line: 2071, column: 30, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4814, file: !1, line: 2070, column: 11)
!4820 = !DILocation(line: 2071, column: 44, scope: !4819)
!4821 = !DILocation(line: 2071, column: 51, scope: !4819)
!4822 = !DILocation(line: 2071, column: 15, scope: !4819)
!4823 = !DILocation(line: 2071, column: 14, scope: !4819)
!4824 = !DILocation(line: 2072, column: 13, scope: !4819)
!4825 = !DILocation(line: 2074, column: 13, scope: !4819)
!4826 = !DILocation(line: 2075, column: 13, scope: !4819)
!4827 = !DILocation(line: 2076, column: 30, scope: !4819)
!4828 = !DILocation(line: 2076, column: 44, scope: !4819)
!4829 = !DILocation(line: 2076, column: 51, scope: !4819)
!4830 = !DILocation(line: 2076, column: 15, scope: !4819)
!4831 = !DILocation(line: 2076, column: 14, scope: !4819)
!4832 = !DILocation(line: 2077, column: 13, scope: !4819)
!4833 = !DILocation(line: 2079, column: 16, scope: !4819)
!4834 = !DILocation(line: 2079, column: 30, scope: !4819)
!4835 = !DILocation(line: 2079, column: 14, scope: !4819)
!4836 = !DILocation(line: 2080, column: 14, scope: !4819)
!4837 = !DILocation(line: 2081, column: 11, scope: !4819)
!4838 = !DILocation(line: 2069, column: 51, scope: !4814)
!4839 = !DILocation(line: 2069, column: 11, scope: !4814)
!4840 = distinct !{!4840, !4817, !4841}
!4841 = !DILocation(line: 2081, column: 11, scope: !4810)
!4842 = !DILocation(line: 2082, column: 11, scope: !4811)
!4843 = !DILocation(line: 2084, column: 13, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4802, file: !1, line: 2084, column: 7)
!4845 = !DILocation(line: 2084, column: 12, scope: !4844)
!4846 = !DILocation(line: 2084, column: 17, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !1, line: 2084, column: 7)
!4848 = !DILocation(line: 2084, column: 31, scope: !4847)
!4849 = !DILocation(line: 2084, column: 19, scope: !4847)
!4850 = !DILocation(line: 2084, column: 7, scope: !4844)
!4851 = !DILocation(line: 2086, column: 26, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4847, file: !1, line: 2085, column: 7)
!4853 = !DILocation(line: 2086, column: 40, scope: !4852)
!4854 = !DILocation(line: 2086, column: 47, scope: !4852)
!4855 = !DILocation(line: 2086, column: 11, scope: !4852)
!4856 = !DILocation(line: 2086, column: 10, scope: !4852)
!4857 = !DILocation(line: 2087, column: 9, scope: !4852)
!4858 = !DILocation(line: 2088, column: 9, scope: !4852)
!4859 = !DILocation(line: 2089, column: 9, scope: !4852)
!4860 = !DILocation(line: 2090, column: 26, scope: !4852)
!4861 = !DILocation(line: 2090, column: 40, scope: !4852)
!4862 = !DILocation(line: 2090, column: 47, scope: !4852)
!4863 = !DILocation(line: 2090, column: 11, scope: !4852)
!4864 = !DILocation(line: 2090, column: 10, scope: !4852)
!4865 = !DILocation(line: 2091, column: 9, scope: !4852)
!4866 = !DILocation(line: 2092, column: 12, scope: !4852)
!4867 = !DILocation(line: 2092, column: 26, scope: !4852)
!4868 = !DILocation(line: 2092, column: 10, scope: !4852)
!4869 = !DILocation(line: 2093, column: 10, scope: !4852)
!4870 = !DILocation(line: 2094, column: 7, scope: !4852)
!4871 = !DILocation(line: 2084, column: 47, scope: !4847)
!4872 = !DILocation(line: 2084, column: 7, scope: !4847)
!4873 = distinct !{!4873, !4850, !4874}
!4874 = !DILocation(line: 2094, column: 7, scope: !4844)
!4875 = !DILocation(line: 2095, column: 7, scope: !4802)
!4876 = !DILocalVariable(name: "pixel", scope: !4877, file: !1, line: 2100, type: !5)
!4877 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2098, column: 5)
!4878 = !DILocation(line: 2100, column: 9, scope: !4877)
!4879 = !DILocation(line: 2102, column: 11, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4877, file: !1, line: 2102, column: 11)
!4881 = !DILocation(line: 2102, column: 25, scope: !4880)
!4882 = !DILocation(line: 2102, column: 32, scope: !4880)
!4883 = !DILocation(line: 2102, column: 11, scope: !4877)
!4884 = !DILocalVariable(name: "pixel", scope: !4885, file: !1, line: 2105, type: !496)
!4885 = distinct !DILexicalBlock(scope: !4880, file: !1, line: 2103, column: 9)
!4886 = !DILocation(line: 2105, column: 13, scope: !4885)
!4887 = !DILocation(line: 2107, column: 17, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 2107, column: 11)
!4889 = !DILocation(line: 2107, column: 16, scope: !4888)
!4890 = !DILocation(line: 2107, column: 21, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4888, file: !1, line: 2107, column: 11)
!4892 = !DILocation(line: 2107, column: 35, scope: !4891)
!4893 = !DILocation(line: 2107, column: 23, scope: !4891)
!4894 = !DILocation(line: 2107, column: 11, scope: !4888)
!4895 = !DILocation(line: 2109, column: 30, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4891, file: !1, line: 2108, column: 11)
!4897 = !DILocation(line: 2109, column: 43, scope: !4896)
!4898 = !DILocation(line: 2109, column: 15, scope: !4896)
!4899 = !DILocation(line: 2109, column: 14, scope: !4896)
!4900 = !DILocation(line: 2110, column: 13, scope: !4896)
!4901 = !DILocation(line: 2111, column: 13, scope: !4896)
!4902 = !DILocation(line: 2112, column: 13, scope: !4896)
!4903 = !DILocation(line: 2113, column: 30, scope: !4896)
!4904 = !DILocation(line: 2113, column: 43, scope: !4896)
!4905 = !DILocation(line: 2113, column: 15, scope: !4896)
!4906 = !DILocation(line: 2113, column: 14, scope: !4896)
!4907 = !DILocation(line: 2114, column: 13, scope: !4896)
!4908 = !DILocation(line: 2115, column: 16, scope: !4896)
!4909 = !DILocation(line: 2115, column: 30, scope: !4896)
!4910 = !DILocation(line: 2115, column: 14, scope: !4896)
!4911 = !DILocation(line: 2116, column: 14, scope: !4896)
!4912 = !DILocation(line: 2117, column: 11, scope: !4896)
!4913 = !DILocation(line: 2107, column: 51, scope: !4891)
!4914 = !DILocation(line: 2107, column: 11, scope: !4891)
!4915 = distinct !{!4915, !4894, !4916}
!4916 = !DILocation(line: 2117, column: 11, scope: !4888)
!4917 = !DILocation(line: 2118, column: 11, scope: !4885)
!4918 = !DILocation(line: 2120, column: 13, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4877, file: !1, line: 2120, column: 7)
!4920 = !DILocation(line: 2120, column: 12, scope: !4919)
!4921 = !DILocation(line: 2120, column: 17, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4919, file: !1, line: 2120, column: 7)
!4923 = !DILocation(line: 2120, column: 31, scope: !4922)
!4924 = !DILocation(line: 2120, column: 19, scope: !4922)
!4925 = !DILocation(line: 2120, column: 7, scope: !4919)
!4926 = !DILocation(line: 2122, column: 25, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !1, line: 2121, column: 7)
!4928 = !DILocation(line: 2122, column: 39, scope: !4927)
!4929 = !DILocation(line: 2122, column: 46, scope: !4927)
!4930 = !DILocation(line: 2122, column: 11, scope: !4927)
!4931 = !DILocation(line: 2122, column: 10, scope: !4927)
!4932 = !DILocation(line: 2123, column: 9, scope: !4927)
!4933 = !DILocation(line: 2124, column: 9, scope: !4927)
!4934 = !DILocation(line: 2125, column: 9, scope: !4927)
!4935 = !DILocation(line: 2126, column: 25, scope: !4927)
!4936 = !DILocation(line: 2126, column: 39, scope: !4927)
!4937 = !DILocation(line: 2126, column: 46, scope: !4927)
!4938 = !DILocation(line: 2126, column: 11, scope: !4927)
!4939 = !DILocation(line: 2126, column: 10, scope: !4927)
!4940 = !DILocation(line: 2127, column: 9, scope: !4927)
!4941 = !DILocation(line: 2128, column: 12, scope: !4927)
!4942 = !DILocation(line: 2128, column: 26, scope: !4927)
!4943 = !DILocation(line: 2128, column: 10, scope: !4927)
!4944 = !DILocation(line: 2129, column: 10, scope: !4927)
!4945 = !DILocation(line: 2130, column: 7, scope: !4927)
!4946 = !DILocation(line: 2120, column: 47, scope: !4922)
!4947 = !DILocation(line: 2120, column: 7, scope: !4922)
!4948 = distinct !{!4948, !4925, !4949}
!4949 = !DILocation(line: 2130, column: 7, scope: !4919)
!4950 = !DILocation(line: 2131, column: 7, scope: !4877)
!4951 = !DILocation(line: 2135, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !1, line: 2135, column: 11)
!4953 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2134, column: 5)
!4954 = !DILocation(line: 2135, column: 25, scope: !4952)
!4955 = !DILocation(line: 2135, column: 32, scope: !4952)
!4956 = !DILocation(line: 2135, column: 11, scope: !4953)
!4957 = !DILocalVariable(name: "pixel", scope: !4958, file: !1, line: 2138, type: !456)
!4958 = distinct !DILexicalBlock(scope: !4952, file: !1, line: 2136, column: 9)
!4959 = !DILocation(line: 2138, column: 13, scope: !4958)
!4960 = !DILocation(line: 2140, column: 17, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !1, line: 2140, column: 11)
!4962 = !DILocation(line: 2140, column: 16, scope: !4961)
!4963 = !DILocation(line: 2140, column: 21, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4961, file: !1, line: 2140, column: 11)
!4965 = !DILocation(line: 2140, column: 35, scope: !4964)
!4966 = !DILocation(line: 2140, column: 23, scope: !4964)
!4967 = !DILocation(line: 2140, column: 11, scope: !4961)
!4968 = !DILocation(line: 2142, column: 31, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4964, file: !1, line: 2141, column: 11)
!4970 = !DILocation(line: 2142, column: 44, scope: !4969)
!4971 = !DILocation(line: 2142, column: 15, scope: !4969)
!4972 = !DILocation(line: 2142, column: 14, scope: !4969)
!4973 = !DILocation(line: 2143, column: 13, scope: !4969)
!4974 = !DILocation(line: 2144, column: 13, scope: !4969)
!4975 = !DILocation(line: 2145, column: 13, scope: !4969)
!4976 = !DILocation(line: 2146, column: 31, scope: !4969)
!4977 = !DILocation(line: 2146, column: 44, scope: !4969)
!4978 = !DILocation(line: 2146, column: 15, scope: !4969)
!4979 = !DILocation(line: 2146, column: 14, scope: !4969)
!4980 = !DILocation(line: 2147, column: 13, scope: !4969)
!4981 = !DILocation(line: 2148, column: 16, scope: !4969)
!4982 = !DILocation(line: 2148, column: 30, scope: !4969)
!4983 = !DILocation(line: 2148, column: 14, scope: !4969)
!4984 = !DILocation(line: 2149, column: 14, scope: !4969)
!4985 = !DILocation(line: 2150, column: 11, scope: !4969)
!4986 = !DILocation(line: 2140, column: 51, scope: !4964)
!4987 = !DILocation(line: 2140, column: 11, scope: !4964)
!4988 = distinct !{!4988, !4967, !4989}
!4989 = !DILocation(line: 2150, column: 11, scope: !4961)
!4990 = !DILocation(line: 2151, column: 11, scope: !4958)
!4991 = !DILocation(line: 2153, column: 5, scope: !4953)
!4992 = !DILocalVariable(name: "range", scope: !4993, file: !1, line: 2157, type: !501)
!4993 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 2155, column: 5)
!4994 = !DILocation(line: 2157, column: 9, scope: !4993)
!4995 = !DILocation(line: 2159, column: 29, scope: !4993)
!4996 = !DILocation(line: 2159, column: 43, scope: !4993)
!4997 = !DILocation(line: 2159, column: 13, scope: !4993)
!4998 = !DILocation(line: 2159, column: 12, scope: !4993)
!4999 = !DILocation(line: 2160, column: 13, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4993, file: !1, line: 2160, column: 7)
!5001 = !DILocation(line: 2160, column: 12, scope: !5000)
!5002 = !DILocation(line: 2160, column: 17, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !1, line: 2160, column: 7)
!5004 = !DILocation(line: 2160, column: 31, scope: !5003)
!5005 = !DILocation(line: 2160, column: 19, scope: !5003)
!5006 = !DILocation(line: 2160, column: 7, scope: !5000)
!5007 = !DILocation(line: 2162, column: 28, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5003, file: !1, line: 2161, column: 7)
!5009 = !DILocation(line: 2162, column: 41, scope: !5008)
!5010 = !DILocation(line: 2162, column: 11, scope: !5008)
!5011 = !DILocation(line: 2162, column: 10, scope: !5008)
!5012 = !DILocation(line: 2163, column: 9, scope: !5008)
!5013 = !DILocation(line: 2164, column: 9, scope: !5008)
!5014 = !DILocation(line: 2165, column: 9, scope: !5008)
!5015 = !DILocation(line: 2166, column: 28, scope: !5008)
!5016 = !DILocation(line: 2166, column: 41, scope: !5008)
!5017 = !DILocation(line: 2166, column: 11, scope: !5008)
!5018 = !DILocation(line: 2166, column: 10, scope: !5008)
!5019 = !DILocation(line: 2167, column: 9, scope: !5008)
!5020 = !DILocation(line: 2168, column: 12, scope: !5008)
!5021 = !DILocation(line: 2168, column: 26, scope: !5008)
!5022 = !DILocation(line: 2168, column: 10, scope: !5008)
!5023 = !DILocation(line: 2169, column: 10, scope: !5008)
!5024 = !DILocation(line: 2170, column: 7, scope: !5008)
!5025 = !DILocation(line: 2160, column: 47, scope: !5003)
!5026 = !DILocation(line: 2160, column: 7, scope: !5003)
!5027 = distinct !{!5027, !5006, !5028}
!5028 = !DILocation(line: 2170, column: 7, scope: !5000)
!5029 = !DILocation(line: 2171, column: 7, scope: !4993)
!5030 = !DILocation(line: 2174, column: 1, scope: !4543)
!5031 = distinct !DISubprogram(name: "ImportGreenQuantum", scope: !1, file: !1, line: 2176, type: !1062, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5032 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !5031, file: !1, line: 2176, type: !444)
!5033 = !DILocation(line: 2176, column: 45, scope: !5031)
!5034 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !5031, file: !1, line: 2177, type: !638)
!5035 = !DILocation(line: 2177, column: 24, scope: !5031)
!5036 = !DILocalVariable(name: "p", arg: 3, scope: !5031, file: !1, line: 2177, type: !717)
!5037 = !DILocation(line: 2177, column: 68, scope: !5031)
!5038 = !DILocalVariable(name: "q", arg: 4, scope: !5031, file: !1, line: 2178, type: !742)
!5039 = !DILocation(line: 2178, column: 25, scope: !5031)
!5040 = !DILocalVariable(name: "x", scope: !5031, file: !1, line: 2181, type: !488)
!5041 = !DILocation(line: 2181, column: 5, scope: !5031)
!5042 = !DILocalVariable(name: "pixel", scope: !5031, file: !1, line: 2184, type: !5)
!5043 = !DILocation(line: 2184, column: 5, scope: !5031)
!5044 = !DILocation(line: 2186, column: 11, scope: !5031)
!5045 = !DILocation(line: 2186, column: 25, scope: !5031)
!5046 = !DILocation(line: 2186, column: 3, scope: !5031)
!5047 = !DILocalVariable(name: "pixel", scope: !5048, file: !1, line: 2191, type: !438)
!5048 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 2189, column: 5)
!5049 = distinct !DILexicalBlock(scope: !5031, file: !1, line: 2187, column: 3)
!5050 = !DILocation(line: 2191, column: 9, scope: !5048)
!5051 = !DILocation(line: 2193, column: 13, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5048, file: !1, line: 2193, column: 7)
!5053 = !DILocation(line: 2193, column: 12, scope: !5052)
!5054 = !DILocation(line: 2193, column: 17, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5052, file: !1, line: 2193, column: 7)
!5056 = !DILocation(line: 2193, column: 31, scope: !5055)
!5057 = !DILocation(line: 2193, column: 19, scope: !5055)
!5058 = !DILocation(line: 2193, column: 7, scope: !5052)
!5059 = !DILocation(line: 2195, column: 25, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 2194, column: 7)
!5061 = !DILocation(line: 2195, column: 11, scope: !5060)
!5062 = !DILocation(line: 2195, column: 10, scope: !5060)
!5063 = !DILocation(line: 2196, column: 9, scope: !5060)
!5064 = !DILocation(line: 2197, column: 12, scope: !5060)
!5065 = !DILocation(line: 2197, column: 26, scope: !5060)
!5066 = !DILocation(line: 2197, column: 10, scope: !5060)
!5067 = !DILocation(line: 2198, column: 10, scope: !5060)
!5068 = !DILocation(line: 2199, column: 7, scope: !5060)
!5069 = !DILocation(line: 2193, column: 47, scope: !5055)
!5070 = !DILocation(line: 2193, column: 7, scope: !5055)
!5071 = distinct !{!5071, !5058, !5072}
!5072 = !DILocation(line: 2199, column: 7, scope: !5052)
!5073 = !DILocation(line: 2200, column: 7, scope: !5048)
!5074 = !DILocalVariable(name: "pixel", scope: !5075, file: !1, line: 2205, type: !494)
!5075 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 2203, column: 5)
!5076 = !DILocation(line: 2205, column: 9, scope: !5075)
!5077 = !DILocation(line: 2207, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 2207, column: 11)
!5079 = !DILocation(line: 2207, column: 25, scope: !5078)
!5080 = !DILocation(line: 2207, column: 32, scope: !5078)
!5081 = !DILocation(line: 2207, column: 11, scope: !5075)
!5082 = !DILocation(line: 2209, column: 17, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 2209, column: 11)
!5084 = distinct !DILexicalBlock(scope: !5078, file: !1, line: 2208, column: 9)
!5085 = !DILocation(line: 2209, column: 16, scope: !5083)
!5086 = !DILocation(line: 2209, column: 21, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 2209, column: 11)
!5088 = !DILocation(line: 2209, column: 35, scope: !5087)
!5089 = !DILocation(line: 2209, column: 23, scope: !5087)
!5090 = !DILocation(line: 2209, column: 11, scope: !5083)
!5091 = !DILocation(line: 2211, column: 30, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 2210, column: 11)
!5093 = !DILocation(line: 2211, column: 44, scope: !5092)
!5094 = !DILocation(line: 2211, column: 51, scope: !5092)
!5095 = !DILocation(line: 2211, column: 15, scope: !5092)
!5096 = !DILocation(line: 2211, column: 14, scope: !5092)
!5097 = !DILocation(line: 2212, column: 13, scope: !5092)
!5098 = !DILocation(line: 2214, column: 16, scope: !5092)
!5099 = !DILocation(line: 2214, column: 30, scope: !5092)
!5100 = !DILocation(line: 2214, column: 14, scope: !5092)
!5101 = !DILocation(line: 2215, column: 14, scope: !5092)
!5102 = !DILocation(line: 2216, column: 11, scope: !5092)
!5103 = !DILocation(line: 2209, column: 51, scope: !5087)
!5104 = !DILocation(line: 2209, column: 11, scope: !5087)
!5105 = distinct !{!5105, !5090, !5106}
!5106 = !DILocation(line: 2216, column: 11, scope: !5083)
!5107 = !DILocation(line: 2217, column: 11, scope: !5084)
!5108 = !DILocation(line: 2219, column: 13, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 2219, column: 7)
!5110 = !DILocation(line: 2219, column: 12, scope: !5109)
!5111 = !DILocation(line: 2219, column: 17, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5109, file: !1, line: 2219, column: 7)
!5113 = !DILocation(line: 2219, column: 31, scope: !5112)
!5114 = !DILocation(line: 2219, column: 19, scope: !5112)
!5115 = !DILocation(line: 2219, column: 7, scope: !5109)
!5116 = !DILocation(line: 2221, column: 26, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5112, file: !1, line: 2220, column: 7)
!5118 = !DILocation(line: 2221, column: 40, scope: !5117)
!5119 = !DILocation(line: 2221, column: 47, scope: !5117)
!5120 = !DILocation(line: 2221, column: 11, scope: !5117)
!5121 = !DILocation(line: 2221, column: 10, scope: !5117)
!5122 = !DILocation(line: 2222, column: 9, scope: !5117)
!5123 = !DILocation(line: 2223, column: 12, scope: !5117)
!5124 = !DILocation(line: 2223, column: 26, scope: !5117)
!5125 = !DILocation(line: 2223, column: 10, scope: !5117)
!5126 = !DILocation(line: 2224, column: 10, scope: !5117)
!5127 = !DILocation(line: 2225, column: 7, scope: !5117)
!5128 = !DILocation(line: 2219, column: 47, scope: !5112)
!5129 = !DILocation(line: 2219, column: 7, scope: !5112)
!5130 = distinct !{!5130, !5115, !5131}
!5131 = !DILocation(line: 2225, column: 7, scope: !5109)
!5132 = !DILocation(line: 2226, column: 7, scope: !5075)
!5133 = !DILocalVariable(name: "pixel", scope: !5134, file: !1, line: 2231, type: !5)
!5134 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 2229, column: 5)
!5135 = !DILocation(line: 2231, column: 9, scope: !5134)
!5136 = !DILocation(line: 2233, column: 11, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5134, file: !1, line: 2233, column: 11)
!5138 = !DILocation(line: 2233, column: 25, scope: !5137)
!5139 = !DILocation(line: 2233, column: 32, scope: !5137)
!5140 = !DILocation(line: 2233, column: 11, scope: !5134)
!5141 = !DILocalVariable(name: "pixel", scope: !5142, file: !1, line: 2236, type: !496)
!5142 = distinct !DILexicalBlock(scope: !5137, file: !1, line: 2234, column: 9)
!5143 = !DILocation(line: 2236, column: 13, scope: !5142)
!5144 = !DILocation(line: 2238, column: 17, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5142, file: !1, line: 2238, column: 11)
!5146 = !DILocation(line: 2238, column: 16, scope: !5145)
!5147 = !DILocation(line: 2238, column: 21, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !1, line: 2238, column: 11)
!5149 = !DILocation(line: 2238, column: 35, scope: !5148)
!5150 = !DILocation(line: 2238, column: 23, scope: !5148)
!5151 = !DILocation(line: 2238, column: 11, scope: !5145)
!5152 = !DILocation(line: 2240, column: 30, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5148, file: !1, line: 2239, column: 11)
!5154 = !DILocation(line: 2240, column: 43, scope: !5153)
!5155 = !DILocation(line: 2240, column: 15, scope: !5153)
!5156 = !DILocation(line: 2240, column: 14, scope: !5153)
!5157 = !DILocation(line: 2241, column: 13, scope: !5153)
!5158 = !DILocation(line: 2242, column: 16, scope: !5153)
!5159 = !DILocation(line: 2242, column: 30, scope: !5153)
!5160 = !DILocation(line: 2242, column: 14, scope: !5153)
!5161 = !DILocation(line: 2243, column: 14, scope: !5153)
!5162 = !DILocation(line: 2244, column: 11, scope: !5153)
!5163 = !DILocation(line: 2238, column: 51, scope: !5148)
!5164 = !DILocation(line: 2238, column: 11, scope: !5148)
!5165 = distinct !{!5165, !5151, !5166}
!5166 = !DILocation(line: 2244, column: 11, scope: !5145)
!5167 = !DILocation(line: 2245, column: 11, scope: !5142)
!5168 = !DILocation(line: 2247, column: 13, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5134, file: !1, line: 2247, column: 7)
!5170 = !DILocation(line: 2247, column: 12, scope: !5169)
!5171 = !DILocation(line: 2247, column: 17, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !1, line: 2247, column: 7)
!5173 = !DILocation(line: 2247, column: 31, scope: !5172)
!5174 = !DILocation(line: 2247, column: 19, scope: !5172)
!5175 = !DILocation(line: 2247, column: 7, scope: !5169)
!5176 = !DILocation(line: 2249, column: 25, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5172, file: !1, line: 2248, column: 7)
!5178 = !DILocation(line: 2249, column: 39, scope: !5177)
!5179 = !DILocation(line: 2249, column: 46, scope: !5177)
!5180 = !DILocation(line: 2249, column: 11, scope: !5177)
!5181 = !DILocation(line: 2249, column: 10, scope: !5177)
!5182 = !DILocation(line: 2250, column: 9, scope: !5177)
!5183 = !DILocation(line: 2251, column: 12, scope: !5177)
!5184 = !DILocation(line: 2251, column: 26, scope: !5177)
!5185 = !DILocation(line: 2251, column: 10, scope: !5177)
!5186 = !DILocation(line: 2252, column: 10, scope: !5177)
!5187 = !DILocation(line: 2253, column: 7, scope: !5177)
!5188 = !DILocation(line: 2247, column: 47, scope: !5172)
!5189 = !DILocation(line: 2247, column: 7, scope: !5172)
!5190 = distinct !{!5190, !5175, !5191}
!5191 = !DILocation(line: 2253, column: 7, scope: !5169)
!5192 = !DILocation(line: 2254, column: 7, scope: !5134)
!5193 = !DILocation(line: 2258, column: 11, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !1, line: 2258, column: 11)
!5195 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 2257, column: 5)
!5196 = !DILocation(line: 2258, column: 25, scope: !5194)
!5197 = !DILocation(line: 2258, column: 32, scope: !5194)
!5198 = !DILocation(line: 2258, column: 11, scope: !5195)
!5199 = !DILocalVariable(name: "pixel", scope: !5200, file: !1, line: 2261, type: !456)
!5200 = distinct !DILexicalBlock(scope: !5194, file: !1, line: 2259, column: 9)
!5201 = !DILocation(line: 2261, column: 13, scope: !5200)
!5202 = !DILocation(line: 2263, column: 17, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !1, line: 2263, column: 11)
!5204 = !DILocation(line: 2263, column: 16, scope: !5203)
!5205 = !DILocation(line: 2263, column: 21, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5203, file: !1, line: 2263, column: 11)
!5207 = !DILocation(line: 2263, column: 35, scope: !5206)
!5208 = !DILocation(line: 2263, column: 23, scope: !5206)
!5209 = !DILocation(line: 2263, column: 11, scope: !5203)
!5210 = !DILocation(line: 2265, column: 31, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 2264, column: 11)
!5212 = !DILocation(line: 2265, column: 44, scope: !5211)
!5213 = !DILocation(line: 2265, column: 15, scope: !5211)
!5214 = !DILocation(line: 2265, column: 14, scope: !5211)
!5215 = !DILocation(line: 2266, column: 13, scope: !5211)
!5216 = !DILocation(line: 2267, column: 16, scope: !5211)
!5217 = !DILocation(line: 2267, column: 30, scope: !5211)
!5218 = !DILocation(line: 2267, column: 14, scope: !5211)
!5219 = !DILocation(line: 2268, column: 14, scope: !5211)
!5220 = !DILocation(line: 2269, column: 11, scope: !5211)
!5221 = !DILocation(line: 2263, column: 51, scope: !5206)
!5222 = !DILocation(line: 2263, column: 11, scope: !5206)
!5223 = distinct !{!5223, !5209, !5224}
!5224 = !DILocation(line: 2269, column: 11, scope: !5203)
!5225 = !DILocation(line: 2270, column: 11, scope: !5200)
!5226 = !DILocation(line: 2272, column: 5, scope: !5195)
!5227 = !DILocalVariable(name: "range", scope: !5228, file: !1, line: 2276, type: !501)
!5228 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 2274, column: 5)
!5229 = !DILocation(line: 2276, column: 9, scope: !5228)
!5230 = !DILocation(line: 2278, column: 29, scope: !5228)
!5231 = !DILocation(line: 2278, column: 43, scope: !5228)
!5232 = !DILocation(line: 2278, column: 13, scope: !5228)
!5233 = !DILocation(line: 2278, column: 12, scope: !5228)
!5234 = !DILocation(line: 2279, column: 13, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5228, file: !1, line: 2279, column: 7)
!5236 = !DILocation(line: 2279, column: 12, scope: !5235)
!5237 = !DILocation(line: 2279, column: 17, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5235, file: !1, line: 2279, column: 7)
!5239 = !DILocation(line: 2279, column: 31, scope: !5238)
!5240 = !DILocation(line: 2279, column: 19, scope: !5238)
!5241 = !DILocation(line: 2279, column: 7, scope: !5235)
!5242 = !DILocation(line: 2281, column: 28, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5238, file: !1, line: 2280, column: 7)
!5244 = !DILocation(line: 2281, column: 41, scope: !5243)
!5245 = !DILocation(line: 2281, column: 11, scope: !5243)
!5246 = !DILocation(line: 2281, column: 10, scope: !5243)
!5247 = !DILocation(line: 2282, column: 9, scope: !5243)
!5248 = !DILocation(line: 2283, column: 12, scope: !5243)
!5249 = !DILocation(line: 2283, column: 26, scope: !5243)
!5250 = !DILocation(line: 2283, column: 10, scope: !5243)
!5251 = !DILocation(line: 2284, column: 10, scope: !5243)
!5252 = !DILocation(line: 2285, column: 7, scope: !5243)
!5253 = !DILocation(line: 2279, column: 47, scope: !5238)
!5254 = !DILocation(line: 2279, column: 7, scope: !5238)
!5255 = distinct !{!5255, !5241, !5256}
!5256 = !DILocation(line: 2285, column: 7, scope: !5235)
!5257 = !DILocation(line: 2286, column: 7, scope: !5228)
!5258 = !DILocation(line: 2289, column: 1, scope: !5031)
!5259 = distinct !DISubprogram(name: "ImportIndexQuantum", scope: !1, file: !1, line: 2291, type: !2360, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5260 = !DILocalVariable(name: "image", arg: 1, scope: !5259, file: !1, line: 2291, type: !2362)
!5261 = !DILocation(line: 2291, column: 45, scope: !5259)
!5262 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !5259, file: !1, line: 2291, type: !444)
!5263 = !DILocation(line: 2291, column: 64, scope: !5259)
!5264 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !5259, file: !1, line: 2292, type: !638)
!5265 = !DILocation(line: 2292, column: 24, scope: !5259)
!5266 = !DILocalVariable(name: "p", arg: 4, scope: !5259, file: !1, line: 2292, type: !717)
!5267 = !DILocation(line: 2292, column: 68, scope: !5259)
!5268 = !DILocalVariable(name: "q", arg: 5, scope: !5259, file: !1, line: 2293, type: !742)
!5269 = !DILocation(line: 2293, column: 25, scope: !5259)
!5270 = !DILocalVariable(name: "indexes", arg: 6, scope: !5259, file: !1, line: 2293, type: !737)
!5271 = !DILocation(line: 2293, column: 49, scope: !5259)
!5272 = !DILocalVariable(name: "exception", arg: 7, scope: !5259, file: !1, line: 2294, type: !718)
!5273 = !DILocation(line: 2294, column: 18, scope: !5259)
!5274 = !DILocalVariable(name: "range_exception", scope: !5259, file: !1, line: 2297, type: !461)
!5275 = !DILocation(line: 2297, column: 5, scope: !5259)
!5276 = !DILocalVariable(name: "x", scope: !5259, file: !1, line: 2300, type: !488)
!5277 = !DILocation(line: 2300, column: 5, scope: !5259)
!5278 = !DILocalVariable(name: "bit", scope: !5259, file: !1, line: 2303, type: !488)
!5279 = !DILocation(line: 2303, column: 5, scope: !5259)
!5280 = !DILocalVariable(name: "pixel", scope: !5259, file: !1, line: 2306, type: !5)
!5281 = !DILocation(line: 2306, column: 5, scope: !5259)
!5282 = !DILocation(line: 2308, column: 7, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 2308, column: 7)
!5284 = !DILocation(line: 2308, column: 14, scope: !5283)
!5285 = !DILocation(line: 2308, column: 28, scope: !5283)
!5286 = !DILocation(line: 2308, column: 7, scope: !5259)
!5287 = !DILocation(line: 2310, column: 35, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5283, file: !1, line: 2309, column: 5)
!5289 = !DILocation(line: 2311, column: 43, scope: !5288)
!5290 = !DILocation(line: 2311, column: 50, scope: !5288)
!5291 = !DILocation(line: 2310, column: 14, scope: !5288)
!5292 = !DILocation(line: 2312, column: 7, scope: !5288)
!5293 = !DILocation(line: 2314, column: 18, scope: !5259)
!5294 = !DILocation(line: 2315, column: 11, scope: !5259)
!5295 = !DILocation(line: 2315, column: 25, scope: !5259)
!5296 = !DILocation(line: 2315, column: 3, scope: !5259)
!5297 = !DILocalVariable(name: "pixel", scope: !5298, file: !1, line: 2320, type: !438)
!5298 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2318, column: 5)
!5299 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 2316, column: 3)
!5300 = !DILocation(line: 2320, column: 9, scope: !5298)
!5301 = !DILocation(line: 2322, column: 13, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5298, file: !1, line: 2322, column: 7)
!5303 = !DILocation(line: 2322, column: 12, scope: !5302)
!5304 = !DILocation(line: 2322, column: 17, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5302, file: !1, line: 2322, column: 7)
!5306 = !DILocation(line: 2322, column: 32, scope: !5305)
!5307 = !DILocation(line: 2322, column: 45, scope: !5305)
!5308 = !DILocation(line: 2322, column: 19, scope: !5305)
!5309 = !DILocation(line: 2322, column: 7, scope: !5302)
!5310 = !DILocation(line: 2324, column: 17, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5312, file: !1, line: 2324, column: 9)
!5312 = distinct !DILexicalBlock(scope: !5305, file: !1, line: 2323, column: 7)
!5313 = !DILocation(line: 2324, column: 14, scope: !5311)
!5314 = !DILocation(line: 2324, column: 21, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5311, file: !1, line: 2324, column: 9)
!5316 = !DILocation(line: 2324, column: 25, scope: !5315)
!5317 = !DILocation(line: 2324, column: 9, scope: !5311)
!5318 = !DILocation(line: 2326, column: 15, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5320, file: !1, line: 2326, column: 15)
!5320 = distinct !DILexicalBlock(scope: !5315, file: !1, line: 2325, column: 9)
!5321 = !DILocation(line: 2326, column: 29, scope: !5319)
!5322 = !DILocation(line: 2326, column: 42, scope: !5319)
!5323 = !DILocation(line: 2326, column: 15, scope: !5320)
!5324 = !DILocation(line: 2327, column: 39, scope: !5319)
!5325 = !DILocation(line: 2327, column: 38, scope: !5319)
!5326 = !DILocation(line: 2327, column: 37, scope: !5319)
!5327 = !DILocation(line: 2327, column: 53, scope: !5319)
!5328 = !DILocation(line: 2327, column: 52, scope: !5319)
!5329 = !DILocation(line: 2327, column: 47, scope: !5319)
!5330 = !DILocation(line: 2327, column: 42, scope: !5319)
!5331 = !DILocation(line: 2327, column: 60, scope: !5319)
!5332 = !DILocation(line: 2327, column: 36, scope: !5319)
!5333 = !DILocation(line: 2327, column: 19, scope: !5319)
!5334 = !DILocation(line: 2327, column: 18, scope: !5319)
!5335 = !DILocation(line: 2327, column: 13, scope: !5319)
!5336 = !DILocation(line: 2329, column: 39, scope: !5319)
!5337 = !DILocation(line: 2329, column: 38, scope: !5319)
!5338 = !DILocation(line: 2329, column: 37, scope: !5319)
!5339 = !DILocation(line: 2329, column: 53, scope: !5319)
!5340 = !DILocation(line: 2329, column: 52, scope: !5319)
!5341 = !DILocation(line: 2329, column: 47, scope: !5319)
!5342 = !DILocation(line: 2329, column: 42, scope: !5319)
!5343 = !DILocation(line: 2329, column: 60, scope: !5319)
!5344 = !DILocation(line: 2329, column: 36, scope: !5319)
!5345 = !DILocation(line: 2329, column: 19, scope: !5319)
!5346 = !DILocation(line: 2329, column: 18, scope: !5319)
!5347 = !DILocation(line: 2330, column: 11, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5349, file: !1, line: 2330, column: 11)
!5349 = distinct !DILexicalBlock(scope: !5320, file: !1, line: 2330, column: 11)
!5350 = !DILocation(line: 2330, column: 11, scope: !5349)
!5351 = !DILocation(line: 2332, column: 11, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5320, file: !1, line: 2332, column: 11)
!5353 = !DILocation(line: 2334, column: 12, scope: !5320)
!5354 = !DILocation(line: 2335, column: 9, scope: !5320)
!5355 = !DILocation(line: 2324, column: 33, scope: !5315)
!5356 = !DILocation(line: 2324, column: 9, scope: !5315)
!5357 = distinct !{!5357, !5317, !5358}
!5358 = !DILocation(line: 2335, column: 9, scope: !5311)
!5359 = !DILocation(line: 2336, column: 10, scope: !5312)
!5360 = !DILocation(line: 2337, column: 7, scope: !5312)
!5361 = !DILocation(line: 2322, column: 51, scope: !5305)
!5362 = !DILocation(line: 2322, column: 7, scope: !5305)
!5363 = distinct !{!5363, !5309, !5364}
!5364 = !DILocation(line: 2337, column: 7, scope: !5302)
!5365 = !DILocation(line: 2338, column: 15, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5298, file: !1, line: 2338, column: 7)
!5367 = !DILocation(line: 2338, column: 12, scope: !5366)
!5368 = !DILocation(line: 2338, column: 19, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5366, file: !1, line: 2338, column: 7)
!5370 = !DILocation(line: 2338, column: 36, scope: !5369)
!5371 = !DILocation(line: 2338, column: 50, scope: !5369)
!5372 = !DILocation(line: 2338, column: 23, scope: !5369)
!5373 = !DILocation(line: 2338, column: 7, scope: !5366)
!5374 = !DILocation(line: 2340, column: 13, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5376, file: !1, line: 2340, column: 13)
!5376 = distinct !DILexicalBlock(scope: !5369, file: !1, line: 2339, column: 7)
!5377 = !DILocation(line: 2340, column: 27, scope: !5375)
!5378 = !DILocation(line: 2340, column: 40, scope: !5375)
!5379 = !DILocation(line: 2340, column: 13, scope: !5376)
!5380 = !DILocation(line: 2341, column: 37, scope: !5375)
!5381 = !DILocation(line: 2341, column: 36, scope: !5375)
!5382 = !DILocation(line: 2341, column: 35, scope: !5375)
!5383 = !DILocation(line: 2341, column: 51, scope: !5375)
!5384 = !DILocation(line: 2341, column: 50, scope: !5375)
!5385 = !DILocation(line: 2341, column: 45, scope: !5375)
!5386 = !DILocation(line: 2341, column: 40, scope: !5375)
!5387 = !DILocation(line: 2341, column: 58, scope: !5375)
!5388 = !DILocation(line: 2341, column: 34, scope: !5375)
!5389 = !DILocation(line: 2341, column: 17, scope: !5375)
!5390 = !DILocation(line: 2341, column: 16, scope: !5375)
!5391 = !DILocation(line: 2341, column: 11, scope: !5375)
!5392 = !DILocation(line: 2343, column: 37, scope: !5375)
!5393 = !DILocation(line: 2343, column: 36, scope: !5375)
!5394 = !DILocation(line: 2343, column: 35, scope: !5375)
!5395 = !DILocation(line: 2343, column: 51, scope: !5375)
!5396 = !DILocation(line: 2343, column: 50, scope: !5375)
!5397 = !DILocation(line: 2343, column: 45, scope: !5375)
!5398 = !DILocation(line: 2343, column: 40, scope: !5375)
!5399 = !DILocation(line: 2343, column: 58, scope: !5375)
!5400 = !DILocation(line: 2343, column: 34, scope: !5375)
!5401 = !DILocation(line: 2343, column: 17, scope: !5375)
!5402 = !DILocation(line: 2343, column: 16, scope: !5375)
!5403 = !DILocation(line: 2344, column: 9, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 2344, column: 9)
!5405 = distinct !DILexicalBlock(scope: !5376, file: !1, line: 2344, column: 9)
!5406 = !DILocation(line: 2344, column: 9, scope: !5405)
!5407 = !DILocation(line: 2346, column: 9, scope: !5408)
!5408 = distinct !DILexicalBlock(scope: !5376, file: !1, line: 2346, column: 9)
!5409 = !DILocation(line: 2347, column: 10, scope: !5376)
!5410 = !DILocation(line: 2348, column: 7, scope: !5376)
!5411 = !DILocation(line: 2338, column: 59, scope: !5369)
!5412 = !DILocation(line: 2338, column: 7, scope: !5369)
!5413 = distinct !{!5413, !5373, !5414}
!5414 = !DILocation(line: 2348, column: 7, scope: !5366)
!5415 = !DILocation(line: 2349, column: 7, scope: !5298)
!5416 = !DILocalVariable(name: "pixel", scope: !5417, file: !1, line: 2354, type: !438)
!5417 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2352, column: 5)
!5418 = !DILocation(line: 2354, column: 9, scope: !5417)
!5419 = !DILocation(line: 2356, column: 13, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 2356, column: 7)
!5421 = !DILocation(line: 2356, column: 12, scope: !5420)
!5422 = !DILocation(line: 2356, column: 17, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5420, file: !1, line: 2356, column: 7)
!5424 = !DILocation(line: 2356, column: 32, scope: !5423)
!5425 = !DILocation(line: 2356, column: 45, scope: !5423)
!5426 = !DILocation(line: 2356, column: 19, scope: !5423)
!5427 = !DILocation(line: 2356, column: 7, scope: !5420)
!5428 = !DILocation(line: 2358, column: 34, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5423, file: !1, line: 2357, column: 7)
!5430 = !DILocation(line: 2358, column: 33, scope: !5429)
!5431 = !DILocation(line: 2358, column: 36, scope: !5429)
!5432 = !DILocation(line: 2358, column: 42, scope: !5429)
!5433 = !DILocation(line: 2358, column: 15, scope: !5429)
!5434 = !DILocation(line: 2358, column: 14, scope: !5429)
!5435 = !DILocation(line: 2359, column: 9, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !1, line: 2359, column: 9)
!5437 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 2359, column: 9)
!5438 = !DILocation(line: 2359, column: 9, scope: !5437)
!5439 = !DILocation(line: 2361, column: 9, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 2361, column: 9)
!5441 = !DILocation(line: 2362, column: 10, scope: !5429)
!5442 = !DILocation(line: 2363, column: 34, scope: !5429)
!5443 = !DILocation(line: 2363, column: 33, scope: !5429)
!5444 = !DILocation(line: 2363, column: 32, scope: !5429)
!5445 = !DILocation(line: 2363, column: 37, scope: !5429)
!5446 = !DILocation(line: 2363, column: 15, scope: !5429)
!5447 = !DILocation(line: 2363, column: 14, scope: !5429)
!5448 = !DILocation(line: 2364, column: 9, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5450, file: !1, line: 2364, column: 9)
!5450 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 2364, column: 9)
!5451 = !DILocation(line: 2364, column: 9, scope: !5450)
!5452 = !DILocation(line: 2366, column: 9, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5429, file: !1, line: 2366, column: 9)
!5454 = !DILocation(line: 2367, column: 10, scope: !5429)
!5455 = !DILocation(line: 2368, column: 10, scope: !5429)
!5456 = !DILocation(line: 2369, column: 7, scope: !5429)
!5457 = !DILocation(line: 2356, column: 51, scope: !5423)
!5458 = !DILocation(line: 2356, column: 7, scope: !5423)
!5459 = distinct !{!5459, !5427, !5460}
!5460 = !DILocation(line: 2369, column: 7, scope: !5420)
!5461 = !DILocation(line: 2370, column: 15, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5417, file: !1, line: 2370, column: 7)
!5463 = !DILocation(line: 2370, column: 12, scope: !5462)
!5464 = !DILocation(line: 2370, column: 19, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5462, file: !1, line: 2370, column: 7)
!5466 = !DILocation(line: 2370, column: 36, scope: !5465)
!5467 = !DILocation(line: 2370, column: 50, scope: !5465)
!5468 = !DILocation(line: 2370, column: 23, scope: !5465)
!5469 = !DILocation(line: 2370, column: 7, scope: !5462)
!5470 = !DILocation(line: 2372, column: 35, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5465, file: !1, line: 2371, column: 7)
!5472 = !DILocation(line: 2372, column: 33, scope: !5471)
!5473 = !DILocation(line: 2372, column: 38, scope: !5471)
!5474 = !DILocation(line: 2372, column: 44, scope: !5471)
!5475 = !DILocation(line: 2372, column: 15, scope: !5471)
!5476 = !DILocation(line: 2372, column: 14, scope: !5471)
!5477 = !DILocation(line: 2373, column: 9, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !1, line: 2373, column: 9)
!5479 = distinct !DILexicalBlock(scope: !5471, file: !1, line: 2373, column: 9)
!5480 = !DILocation(line: 2373, column: 9, scope: !5479)
!5481 = !DILocation(line: 2375, column: 9, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5471, file: !1, line: 2375, column: 9)
!5483 = !DILocation(line: 2376, column: 10, scope: !5471)
!5484 = !DILocation(line: 2377, column: 7, scope: !5471)
!5485 = !DILocation(line: 2370, column: 59, scope: !5465)
!5486 = !DILocation(line: 2370, column: 7, scope: !5465)
!5487 = distinct !{!5487, !5469, !5488}
!5488 = !DILocation(line: 2377, column: 7, scope: !5462)
!5489 = !DILocation(line: 2378, column: 7, scope: !5417)
!5490 = !DILocalVariable(name: "pixel", scope: !5491, file: !1, line: 2383, type: !438)
!5491 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2381, column: 5)
!5492 = !DILocation(line: 2383, column: 9, scope: !5491)
!5493 = !DILocation(line: 2385, column: 13, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5491, file: !1, line: 2385, column: 7)
!5495 = !DILocation(line: 2385, column: 12, scope: !5494)
!5496 = !DILocation(line: 2385, column: 17, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5494, file: !1, line: 2385, column: 7)
!5498 = !DILocation(line: 2385, column: 31, scope: !5497)
!5499 = !DILocation(line: 2385, column: 19, scope: !5497)
!5500 = !DILocation(line: 2385, column: 7, scope: !5494)
!5501 = !DILocation(line: 2387, column: 25, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5497, file: !1, line: 2386, column: 7)
!5503 = !DILocation(line: 2387, column: 11, scope: !5502)
!5504 = !DILocation(line: 2387, column: 10, scope: !5502)
!5505 = !DILocation(line: 2388, column: 9, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5507, file: !1, line: 2388, column: 9)
!5507 = distinct !DILexicalBlock(scope: !5502, file: !1, line: 2388, column: 9)
!5508 = !DILocation(line: 2388, column: 9, scope: !5507)
!5509 = !DILocation(line: 2390, column: 9, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5502, file: !1, line: 2390, column: 9)
!5511 = !DILocation(line: 2391, column: 12, scope: !5502)
!5512 = !DILocation(line: 2391, column: 26, scope: !5502)
!5513 = !DILocation(line: 2391, column: 10, scope: !5502)
!5514 = !DILocation(line: 2392, column: 10, scope: !5502)
!5515 = !DILocation(line: 2393, column: 7, scope: !5502)
!5516 = !DILocation(line: 2385, column: 47, scope: !5497)
!5517 = !DILocation(line: 2385, column: 7, scope: !5497)
!5518 = distinct !{!5518, !5500, !5519}
!5519 = !DILocation(line: 2393, column: 7, scope: !5494)
!5520 = !DILocation(line: 2394, column: 7, scope: !5491)
!5521 = !DILocalVariable(name: "pixel", scope: !5522, file: !1, line: 2399, type: !494)
!5522 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2397, column: 5)
!5523 = !DILocation(line: 2399, column: 9, scope: !5522)
!5524 = !DILocation(line: 2401, column: 11, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 2401, column: 11)
!5526 = !DILocation(line: 2401, column: 25, scope: !5525)
!5527 = !DILocation(line: 2401, column: 32, scope: !5525)
!5528 = !DILocation(line: 2401, column: 11, scope: !5522)
!5529 = !DILocation(line: 2403, column: 17, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5531, file: !1, line: 2403, column: 11)
!5531 = distinct !DILexicalBlock(scope: !5525, file: !1, line: 2402, column: 9)
!5532 = !DILocation(line: 2403, column: 16, scope: !5530)
!5533 = !DILocation(line: 2403, column: 21, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5530, file: !1, line: 2403, column: 11)
!5535 = !DILocation(line: 2403, column: 35, scope: !5534)
!5536 = !DILocation(line: 2403, column: 23, scope: !5534)
!5537 = !DILocation(line: 2403, column: 11, scope: !5530)
!5538 = !DILocation(line: 2405, column: 30, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5534, file: !1, line: 2404, column: 11)
!5540 = !DILocation(line: 2405, column: 44, scope: !5539)
!5541 = !DILocation(line: 2405, column: 51, scope: !5539)
!5542 = !DILocation(line: 2405, column: 15, scope: !5539)
!5543 = !DILocation(line: 2405, column: 14, scope: !5539)
!5544 = !DILocation(line: 2406, column: 13, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !1, line: 2406, column: 13)
!5546 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2406, column: 13)
!5547 = !DILocation(line: 2406, column: 13, scope: !5546)
!5548 = !DILocation(line: 2409, column: 13, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2409, column: 13)
!5550 = !DILocation(line: 2410, column: 16, scope: !5539)
!5551 = !DILocation(line: 2410, column: 30, scope: !5539)
!5552 = !DILocation(line: 2410, column: 14, scope: !5539)
!5553 = !DILocation(line: 2411, column: 14, scope: !5539)
!5554 = !DILocation(line: 2412, column: 11, scope: !5539)
!5555 = !DILocation(line: 2403, column: 51, scope: !5534)
!5556 = !DILocation(line: 2403, column: 11, scope: !5534)
!5557 = distinct !{!5557, !5537, !5558}
!5558 = !DILocation(line: 2412, column: 11, scope: !5530)
!5559 = !DILocation(line: 2413, column: 11, scope: !5531)
!5560 = !DILocation(line: 2415, column: 13, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5522, file: !1, line: 2415, column: 7)
!5562 = !DILocation(line: 2415, column: 12, scope: !5561)
!5563 = !DILocation(line: 2415, column: 17, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !1, line: 2415, column: 7)
!5565 = !DILocation(line: 2415, column: 31, scope: !5564)
!5566 = !DILocation(line: 2415, column: 19, scope: !5564)
!5567 = !DILocation(line: 2415, column: 7, scope: !5561)
!5568 = !DILocation(line: 2417, column: 26, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 2416, column: 7)
!5570 = !DILocation(line: 2417, column: 40, scope: !5569)
!5571 = !DILocation(line: 2417, column: 47, scope: !5569)
!5572 = !DILocation(line: 2417, column: 11, scope: !5569)
!5573 = !DILocation(line: 2417, column: 10, scope: !5569)
!5574 = !DILocation(line: 2418, column: 9, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !1, line: 2418, column: 9)
!5576 = distinct !DILexicalBlock(scope: !5569, file: !1, line: 2418, column: 9)
!5577 = !DILocation(line: 2418, column: 9, scope: !5576)
!5578 = !DILocation(line: 2420, column: 9, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5569, file: !1, line: 2420, column: 9)
!5580 = !DILocation(line: 2421, column: 12, scope: !5569)
!5581 = !DILocation(line: 2421, column: 26, scope: !5569)
!5582 = !DILocation(line: 2421, column: 10, scope: !5569)
!5583 = !DILocation(line: 2422, column: 10, scope: !5569)
!5584 = !DILocation(line: 2423, column: 7, scope: !5569)
!5585 = !DILocation(line: 2415, column: 47, scope: !5564)
!5586 = !DILocation(line: 2415, column: 7, scope: !5564)
!5587 = distinct !{!5587, !5567, !5588}
!5588 = !DILocation(line: 2423, column: 7, scope: !5561)
!5589 = !DILocation(line: 2424, column: 7, scope: !5522)
!5590 = !DILocalVariable(name: "pixel", scope: !5591, file: !1, line: 2429, type: !5)
!5591 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2427, column: 5)
!5592 = !DILocation(line: 2429, column: 9, scope: !5591)
!5593 = !DILocation(line: 2431, column: 11, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5591, file: !1, line: 2431, column: 11)
!5595 = !DILocation(line: 2431, column: 25, scope: !5594)
!5596 = !DILocation(line: 2431, column: 32, scope: !5594)
!5597 = !DILocation(line: 2431, column: 11, scope: !5591)
!5598 = !DILocalVariable(name: "pixel", scope: !5599, file: !1, line: 2434, type: !496)
!5599 = distinct !DILexicalBlock(scope: !5594, file: !1, line: 2432, column: 9)
!5600 = !DILocation(line: 2434, column: 13, scope: !5599)
!5601 = !DILocation(line: 2436, column: 17, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5599, file: !1, line: 2436, column: 11)
!5603 = !DILocation(line: 2436, column: 16, scope: !5602)
!5604 = !DILocation(line: 2436, column: 21, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5602, file: !1, line: 2436, column: 11)
!5606 = !DILocation(line: 2436, column: 35, scope: !5605)
!5607 = !DILocation(line: 2436, column: 23, scope: !5605)
!5608 = !DILocation(line: 2436, column: 11, scope: !5602)
!5609 = !DILocation(line: 2438, column: 30, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5605, file: !1, line: 2437, column: 11)
!5611 = !DILocation(line: 2438, column: 43, scope: !5610)
!5612 = !DILocation(line: 2438, column: 15, scope: !5610)
!5613 = !DILocation(line: 2438, column: 14, scope: !5610)
!5614 = !DILocation(line: 2439, column: 13, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5616, file: !1, line: 2439, column: 13)
!5616 = distinct !DILexicalBlock(scope: !5610, file: !1, line: 2439, column: 13)
!5617 = !DILocation(line: 2439, column: 13, scope: !5616)
!5618 = !DILocation(line: 2441, column: 13, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5610, file: !1, line: 2441, column: 13)
!5620 = !DILocation(line: 2442, column: 16, scope: !5610)
!5621 = !DILocation(line: 2442, column: 30, scope: !5610)
!5622 = !DILocation(line: 2442, column: 14, scope: !5610)
!5623 = !DILocation(line: 2443, column: 14, scope: !5610)
!5624 = !DILocation(line: 2444, column: 11, scope: !5610)
!5625 = !DILocation(line: 2436, column: 51, scope: !5605)
!5626 = !DILocation(line: 2436, column: 11, scope: !5605)
!5627 = distinct !{!5627, !5608, !5628}
!5628 = !DILocation(line: 2444, column: 11, scope: !5602)
!5629 = !DILocation(line: 2445, column: 11, scope: !5599)
!5630 = !DILocation(line: 2447, column: 13, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5591, file: !1, line: 2447, column: 7)
!5632 = !DILocation(line: 2447, column: 12, scope: !5631)
!5633 = !DILocation(line: 2447, column: 17, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5631, file: !1, line: 2447, column: 7)
!5635 = !DILocation(line: 2447, column: 31, scope: !5634)
!5636 = !DILocation(line: 2447, column: 19, scope: !5634)
!5637 = !DILocation(line: 2447, column: 7, scope: !5631)
!5638 = !DILocation(line: 2449, column: 25, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !1, line: 2448, column: 7)
!5640 = !DILocation(line: 2449, column: 39, scope: !5639)
!5641 = !DILocation(line: 2449, column: 46, scope: !5639)
!5642 = !DILocation(line: 2449, column: 11, scope: !5639)
!5643 = !DILocation(line: 2449, column: 10, scope: !5639)
!5644 = !DILocation(line: 2450, column: 9, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !1, line: 2450, column: 9)
!5646 = distinct !DILexicalBlock(scope: !5639, file: !1, line: 2450, column: 9)
!5647 = !DILocation(line: 2450, column: 9, scope: !5646)
!5648 = !DILocation(line: 2452, column: 9, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5639, file: !1, line: 2452, column: 9)
!5650 = !DILocation(line: 2453, column: 12, scope: !5639)
!5651 = !DILocation(line: 2453, column: 26, scope: !5639)
!5652 = !DILocation(line: 2453, column: 10, scope: !5639)
!5653 = !DILocation(line: 2454, column: 10, scope: !5639)
!5654 = !DILocation(line: 2455, column: 7, scope: !5639)
!5655 = !DILocation(line: 2447, column: 47, scope: !5634)
!5656 = !DILocation(line: 2447, column: 7, scope: !5634)
!5657 = distinct !{!5657, !5637, !5658}
!5658 = !DILocation(line: 2455, column: 7, scope: !5631)
!5659 = !DILocation(line: 2456, column: 7, scope: !5591)
!5660 = !DILocation(line: 2460, column: 11, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5662, file: !1, line: 2460, column: 11)
!5662 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2459, column: 5)
!5663 = !DILocation(line: 2460, column: 25, scope: !5661)
!5664 = !DILocation(line: 2460, column: 32, scope: !5661)
!5665 = !DILocation(line: 2460, column: 11, scope: !5662)
!5666 = !DILocalVariable(name: "pixel", scope: !5667, file: !1, line: 2463, type: !456)
!5667 = distinct !DILexicalBlock(scope: !5661, file: !1, line: 2461, column: 9)
!5668 = !DILocation(line: 2463, column: 13, scope: !5667)
!5669 = !DILocation(line: 2465, column: 17, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5667, file: !1, line: 2465, column: 11)
!5671 = !DILocation(line: 2465, column: 16, scope: !5670)
!5672 = !DILocation(line: 2465, column: 21, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5670, file: !1, line: 2465, column: 11)
!5674 = !DILocation(line: 2465, column: 35, scope: !5673)
!5675 = !DILocation(line: 2465, column: 23, scope: !5673)
!5676 = !DILocation(line: 2465, column: 11, scope: !5670)
!5677 = !DILocation(line: 2467, column: 31, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5673, file: !1, line: 2466, column: 11)
!5679 = !DILocation(line: 2467, column: 44, scope: !5678)
!5680 = !DILocation(line: 2467, column: 15, scope: !5678)
!5681 = !DILocation(line: 2467, column: 14, scope: !5678)
!5682 = !DILocation(line: 2468, column: 13, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5684, file: !1, line: 2468, column: 13)
!5684 = distinct !DILexicalBlock(scope: !5678, file: !1, line: 2468, column: 13)
!5685 = !DILocation(line: 2468, column: 13, scope: !5684)
!5686 = !DILocation(line: 2470, column: 13, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5678, file: !1, line: 2470, column: 13)
!5688 = !DILocation(line: 2471, column: 16, scope: !5678)
!5689 = !DILocation(line: 2471, column: 30, scope: !5678)
!5690 = !DILocation(line: 2471, column: 14, scope: !5678)
!5691 = !DILocation(line: 2472, column: 14, scope: !5678)
!5692 = !DILocation(line: 2473, column: 11, scope: !5678)
!5693 = !DILocation(line: 2465, column: 51, scope: !5673)
!5694 = !DILocation(line: 2465, column: 11, scope: !5673)
!5695 = distinct !{!5695, !5676, !5696}
!5696 = !DILocation(line: 2473, column: 11, scope: !5670)
!5697 = !DILocation(line: 2474, column: 11, scope: !5667)
!5698 = !DILocation(line: 2476, column: 5, scope: !5662)
!5699 = !DILocation(line: 2479, column: 13, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5701, file: !1, line: 2479, column: 7)
!5701 = distinct !DILexicalBlock(scope: !5299, file: !1, line: 2478, column: 5)
!5702 = !DILocation(line: 2479, column: 12, scope: !5700)
!5703 = !DILocation(line: 2479, column: 17, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5700, file: !1, line: 2479, column: 7)
!5705 = !DILocation(line: 2479, column: 31, scope: !5704)
!5706 = !DILocation(line: 2479, column: 19, scope: !5704)
!5707 = !DILocation(line: 2479, column: 7, scope: !5700)
!5708 = !DILocation(line: 2481, column: 28, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !1, line: 2480, column: 7)
!5710 = !DILocation(line: 2481, column: 41, scope: !5709)
!5711 = !DILocation(line: 2481, column: 11, scope: !5709)
!5712 = !DILocation(line: 2481, column: 10, scope: !5709)
!5713 = !DILocation(line: 2482, column: 9, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5715, file: !1, line: 2482, column: 9)
!5715 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 2482, column: 9)
!5716 = !DILocation(line: 2482, column: 9, scope: !5715)
!5717 = !DILocation(line: 2484, column: 9, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 2484, column: 9)
!5719 = !DILocation(line: 2485, column: 12, scope: !5709)
!5720 = !DILocation(line: 2485, column: 26, scope: !5709)
!5721 = !DILocation(line: 2485, column: 10, scope: !5709)
!5722 = !DILocation(line: 2486, column: 10, scope: !5709)
!5723 = !DILocation(line: 2487, column: 7, scope: !5709)
!5724 = !DILocation(line: 2479, column: 47, scope: !5704)
!5725 = !DILocation(line: 2479, column: 7, scope: !5704)
!5726 = distinct !{!5726, !5707, !5727}
!5727 = !DILocation(line: 2487, column: 7, scope: !5700)
!5728 = !DILocation(line: 2488, column: 7, scope: !5701)
!5729 = !DILocation(line: 2491, column: 7, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5259, file: !1, line: 2491, column: 7)
!5731 = !DILocation(line: 2491, column: 23, scope: !5730)
!5732 = !DILocation(line: 2491, column: 7, scope: !5259)
!5733 = !DILocation(line: 2492, column: 33, scope: !5730)
!5734 = !DILocation(line: 2493, column: 37, scope: !5730)
!5735 = !DILocation(line: 2493, column: 44, scope: !5730)
!5736 = !DILocation(line: 2492, column: 12, scope: !5730)
!5737 = !DILocation(line: 2492, column: 5, scope: !5730)
!5738 = !DILocation(line: 2494, column: 1, scope: !5259)
!5739 = distinct !DISubprogram(name: "ImportIndexAlphaQuantum", scope: !1, file: !1, line: 2496, type: !2360, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!5740 = !DILocalVariable(name: "image", arg: 1, scope: !5739, file: !1, line: 2496, type: !2362)
!5741 = !DILocation(line: 2496, column: 50, scope: !5739)
!5742 = !DILocalVariable(name: "quantum_info", arg: 2, scope: !5739, file: !1, line: 2497, type: !444)
!5743 = !DILocation(line: 2497, column: 16, scope: !5739)
!5744 = !DILocalVariable(name: "number_pixels", arg: 3, scope: !5739, file: !1, line: 2497, type: !638)
!5745 = !DILocation(line: 2497, column: 50, scope: !5739)
!5746 = !DILocalVariable(name: "p", arg: 4, scope: !5739, file: !1, line: 2498, type: !717)
!5747 = !DILocation(line: 2498, column: 33, scope: !5739)
!5748 = !DILocalVariable(name: "q", arg: 5, scope: !5739, file: !1, line: 2498, type: !742)
!5749 = !DILocation(line: 2498, column: 57, scope: !5739)
!5750 = !DILocalVariable(name: "indexes", arg: 6, scope: !5739, file: !1, line: 2499, type: !737)
!5751 = !DILocation(line: 2499, column: 25, scope: !5739)
!5752 = !DILocalVariable(name: "exception", arg: 7, scope: !5739, file: !1, line: 2499, type: !718)
!5753 = !DILocation(line: 2499, column: 48, scope: !5739)
!5754 = !DILocalVariable(name: "range_exception", scope: !5739, file: !1, line: 2502, type: !461)
!5755 = !DILocation(line: 2502, column: 5, scope: !5739)
!5756 = !DILocalVariable(name: "range", scope: !5739, file: !1, line: 2505, type: !501)
!5757 = !DILocation(line: 2505, column: 5, scope: !5739)
!5758 = !DILocalVariable(name: "x", scope: !5739, file: !1, line: 2508, type: !488)
!5759 = !DILocation(line: 2508, column: 5, scope: !5739)
!5760 = !DILocalVariable(name: "bit", scope: !5739, file: !1, line: 2511, type: !488)
!5761 = !DILocation(line: 2511, column: 5, scope: !5739)
!5762 = !DILocalVariable(name: "pixel", scope: !5739, file: !1, line: 2514, type: !5)
!5763 = !DILocation(line: 2514, column: 5, scope: !5739)
!5764 = !DILocation(line: 2516, column: 7, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5739, file: !1, line: 2516, column: 7)
!5766 = !DILocation(line: 2516, column: 14, scope: !5765)
!5767 = !DILocation(line: 2516, column: 28, scope: !5765)
!5768 = !DILocation(line: 2516, column: 7, scope: !5739)
!5769 = !DILocation(line: 2518, column: 35, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !1, line: 2517, column: 5)
!5771 = !DILocation(line: 2519, column: 43, scope: !5770)
!5772 = !DILocation(line: 2519, column: 50, scope: !5770)
!5773 = !DILocation(line: 2518, column: 14, scope: !5770)
!5774 = !DILocation(line: 2520, column: 7, scope: !5770)
!5775 = !DILocation(line: 2522, column: 18, scope: !5739)
!5776 = !DILocation(line: 2523, column: 11, scope: !5739)
!5777 = !DILocation(line: 2523, column: 25, scope: !5739)
!5778 = !DILocation(line: 2523, column: 3, scope: !5739)
!5779 = !DILocalVariable(name: "pixel", scope: !5780, file: !1, line: 2528, type: !438)
!5780 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2526, column: 5)
!5781 = distinct !DILexicalBlock(scope: !5739, file: !1, line: 2524, column: 3)
!5782 = !DILocation(line: 2528, column: 9, scope: !5780)
!5783 = !DILocation(line: 2530, column: 25, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5780, file: !1, line: 2530, column: 7)
!5785 = !DILocation(line: 2530, column: 38, scope: !5784)
!5786 = !DILocation(line: 2530, column: 13, scope: !5784)
!5787 = !DILocation(line: 2530, column: 12, scope: !5784)
!5788 = !DILocation(line: 2530, column: 43, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5784, file: !1, line: 2530, column: 7)
!5790 = !DILocation(line: 2530, column: 45, scope: !5789)
!5791 = !DILocation(line: 2530, column: 7, scope: !5784)
!5792 = !DILocation(line: 2532, column: 17, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5794, file: !1, line: 2532, column: 9)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !1, line: 2531, column: 7)
!5795 = !DILocation(line: 2532, column: 14, scope: !5793)
!5796 = !DILocation(line: 2532, column: 21, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !1, line: 2532, column: 9)
!5798 = !DILocation(line: 2532, column: 25, scope: !5797)
!5799 = !DILocation(line: 2532, column: 9, scope: !5793)
!5800 = !DILocation(line: 2534, column: 15, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !1, line: 2534, column: 15)
!5802 = distinct !DILexicalBlock(scope: !5797, file: !1, line: 2533, column: 9)
!5803 = !DILocation(line: 2534, column: 29, scope: !5801)
!5804 = !DILocation(line: 2534, column: 42, scope: !5801)
!5805 = !DILocation(line: 2534, column: 15, scope: !5802)
!5806 = !DILocation(line: 2535, column: 39, scope: !5801)
!5807 = !DILocation(line: 2535, column: 38, scope: !5801)
!5808 = !DILocation(line: 2535, column: 37, scope: !5801)
!5809 = !DILocation(line: 2535, column: 53, scope: !5801)
!5810 = !DILocation(line: 2535, column: 52, scope: !5801)
!5811 = !DILocation(line: 2535, column: 47, scope: !5801)
!5812 = !DILocation(line: 2535, column: 42, scope: !5801)
!5813 = !DILocation(line: 2535, column: 60, scope: !5801)
!5814 = !DILocation(line: 2535, column: 36, scope: !5801)
!5815 = !DILocation(line: 2535, column: 19, scope: !5801)
!5816 = !DILocation(line: 2535, column: 18, scope: !5801)
!5817 = !DILocation(line: 2535, column: 13, scope: !5801)
!5818 = !DILocation(line: 2537, column: 39, scope: !5801)
!5819 = !DILocation(line: 2537, column: 38, scope: !5801)
!5820 = !DILocation(line: 2537, column: 37, scope: !5801)
!5821 = !DILocation(line: 2537, column: 53, scope: !5801)
!5822 = !DILocation(line: 2537, column: 52, scope: !5801)
!5823 = !DILocation(line: 2537, column: 47, scope: !5801)
!5824 = !DILocation(line: 2537, column: 42, scope: !5801)
!5825 = !DILocation(line: 2537, column: 60, scope: !5801)
!5826 = !DILocation(line: 2537, column: 36, scope: !5801)
!5827 = !DILocation(line: 2537, column: 19, scope: !5801)
!5828 = !DILocation(line: 2537, column: 18, scope: !5801)
!5829 = !DILocation(line: 2538, column: 11, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !1, line: 2538, column: 11)
!5831 = distinct !DILexicalBlock(scope: !5802, file: !1, line: 2538, column: 11)
!5832 = !DILocation(line: 2538, column: 11, scope: !5831)
!5833 = !DILocation(line: 2539, column: 11, scope: !5802)
!5834 = !DILocation(line: 2540, column: 11, scope: !5802)
!5835 = !DILocation(line: 2541, column: 11, scope: !5802)
!5836 = !DILocation(line: 2542, column: 11, scope: !5802)
!5837 = !DILocation(line: 2544, column: 12, scope: !5802)
!5838 = !DILocation(line: 2545, column: 9, scope: !5802)
!5839 = !DILocation(line: 2532, column: 33, scope: !5797)
!5840 = !DILocation(line: 2532, column: 9, scope: !5797)
!5841 = distinct !{!5841, !5799, !5842}
!5842 = !DILocation(line: 2545, column: 9, scope: !5793)
!5843 = !DILocation(line: 2546, column: 7, scope: !5794)
!5844 = !DILocation(line: 2530, column: 51, scope: !5789)
!5845 = !DILocation(line: 2530, column: 7, scope: !5789)
!5846 = distinct !{!5846, !5791, !5847}
!5847 = !DILocation(line: 2546, column: 7, scope: !5784)
!5848 = !DILocation(line: 2547, column: 12, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5780, file: !1, line: 2547, column: 11)
!5850 = !DILocation(line: 2547, column: 26, scope: !5849)
!5851 = !DILocation(line: 2547, column: 31, scope: !5849)
!5852 = !DILocation(line: 2547, column: 11, scope: !5780)
!5853 = !DILocation(line: 2548, column: 17, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5849, file: !1, line: 2548, column: 9)
!5855 = !DILocation(line: 2548, column: 14, scope: !5854)
!5856 = !DILocation(line: 2548, column: 21, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5854, file: !1, line: 2548, column: 9)
!5858 = !DILocation(line: 2548, column: 38, scope: !5857)
!5859 = !DILocation(line: 2548, column: 52, scope: !5857)
!5860 = !DILocation(line: 2548, column: 25, scope: !5857)
!5861 = !DILocation(line: 2548, column: 9, scope: !5854)
!5862 = !DILocation(line: 2550, column: 15, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !1, line: 2550, column: 15)
!5864 = distinct !DILexicalBlock(scope: !5857, file: !1, line: 2549, column: 9)
!5865 = !DILocation(line: 2550, column: 29, scope: !5863)
!5866 = !DILocation(line: 2550, column: 42, scope: !5863)
!5867 = !DILocation(line: 2550, column: 15, scope: !5864)
!5868 = !DILocation(line: 2551, column: 39, scope: !5863)
!5869 = !DILocation(line: 2551, column: 38, scope: !5863)
!5870 = !DILocation(line: 2551, column: 37, scope: !5863)
!5871 = !DILocation(line: 2551, column: 53, scope: !5863)
!5872 = !DILocation(line: 2551, column: 52, scope: !5863)
!5873 = !DILocation(line: 2551, column: 47, scope: !5863)
!5874 = !DILocation(line: 2551, column: 42, scope: !5863)
!5875 = !DILocation(line: 2551, column: 60, scope: !5863)
!5876 = !DILocation(line: 2551, column: 36, scope: !5863)
!5877 = !DILocation(line: 2551, column: 19, scope: !5863)
!5878 = !DILocation(line: 2551, column: 18, scope: !5863)
!5879 = !DILocation(line: 2551, column: 13, scope: !5863)
!5880 = !DILocation(line: 2553, column: 39, scope: !5863)
!5881 = !DILocation(line: 2553, column: 38, scope: !5863)
!5882 = !DILocation(line: 2553, column: 37, scope: !5863)
!5883 = !DILocation(line: 2553, column: 53, scope: !5863)
!5884 = !DILocation(line: 2553, column: 52, scope: !5863)
!5885 = !DILocation(line: 2553, column: 47, scope: !5863)
!5886 = !DILocation(line: 2553, column: 42, scope: !5863)
!5887 = !DILocation(line: 2553, column: 60, scope: !5863)
!5888 = !DILocation(line: 2553, column: 36, scope: !5863)
!5889 = !DILocation(line: 2553, column: 19, scope: !5863)
!5890 = !DILocation(line: 2553, column: 18, scope: !5863)
!5891 = !DILocation(line: 2554, column: 11, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !1, line: 2554, column: 11)
!5893 = distinct !DILexicalBlock(scope: !5864, file: !1, line: 2554, column: 11)
!5894 = !DILocation(line: 2554, column: 11, scope: !5893)
!5895 = !DILocation(line: 2555, column: 11, scope: !5864)
!5896 = !DILocation(line: 2556, column: 11, scope: !5864)
!5897 = !DILocation(line: 2557, column: 11, scope: !5864)
!5898 = !DILocation(line: 2558, column: 11, scope: !5864)
!5899 = !DILocation(line: 2560, column: 12, scope: !5864)
!5900 = !DILocation(line: 2561, column: 9, scope: !5864)
!5901 = !DILocation(line: 2548, column: 61, scope: !5857)
!5902 = !DILocation(line: 2548, column: 9, scope: !5857)
!5903 = distinct !{!5903, !5861, !5904}
!5904 = !DILocation(line: 2561, column: 9, scope: !5854)
!5905 = !DILocation(line: 2562, column: 7, scope: !5780)
!5906 = !DILocalVariable(name: "pixel", scope: !5907, file: !1, line: 2567, type: !438)
!5907 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2565, column: 5)
!5908 = !DILocation(line: 2567, column: 9, scope: !5907)
!5909 = !DILocation(line: 2569, column: 29, scope: !5907)
!5910 = !DILocation(line: 2569, column: 43, scope: !5907)
!5911 = !DILocation(line: 2569, column: 13, scope: !5907)
!5912 = !DILocation(line: 2569, column: 12, scope: !5907)
!5913 = !DILocation(line: 2570, column: 13, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5907, file: !1, line: 2570, column: 7)
!5915 = !DILocation(line: 2570, column: 12, scope: !5914)
!5916 = !DILocation(line: 2570, column: 17, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5914, file: !1, line: 2570, column: 7)
!5918 = !DILocation(line: 2570, column: 31, scope: !5917)
!5919 = !DILocation(line: 2570, column: 19, scope: !5917)
!5920 = !DILocation(line: 2570, column: 7, scope: !5914)
!5921 = !DILocation(line: 2572, column: 34, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5917, file: !1, line: 2571, column: 7)
!5923 = !DILocation(line: 2572, column: 33, scope: !5922)
!5924 = !DILocation(line: 2572, column: 36, scope: !5922)
!5925 = !DILocation(line: 2572, column: 42, scope: !5922)
!5926 = !DILocation(line: 2572, column: 15, scope: !5922)
!5927 = !DILocation(line: 2572, column: 14, scope: !5922)
!5928 = !DILocation(line: 2573, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !1, line: 2573, column: 9)
!5930 = distinct !DILexicalBlock(scope: !5922, file: !1, line: 2573, column: 9)
!5931 = !DILocation(line: 2573, column: 9, scope: !5930)
!5932 = !DILocation(line: 2575, column: 9, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5922, file: !1, line: 2575, column: 9)
!5934 = !DILocation(line: 2576, column: 34, scope: !5922)
!5935 = !DILocation(line: 2576, column: 33, scope: !5922)
!5936 = !DILocation(line: 2576, column: 32, scope: !5922)
!5937 = !DILocation(line: 2576, column: 37, scope: !5922)
!5938 = !DILocation(line: 2576, column: 15, scope: !5922)
!5939 = !DILocation(line: 2576, column: 14, scope: !5922)
!5940 = !DILocation(line: 2577, column: 9, scope: !5922)
!5941 = !DILocation(line: 2578, column: 10, scope: !5922)
!5942 = !DILocation(line: 2579, column: 10, scope: !5922)
!5943 = !DILocation(line: 2580, column: 7, scope: !5922)
!5944 = !DILocation(line: 2570, column: 47, scope: !5917)
!5945 = !DILocation(line: 2570, column: 7, scope: !5917)
!5946 = distinct !{!5946, !5920, !5947}
!5947 = !DILocation(line: 2580, column: 7, scope: !5914)
!5948 = !DILocation(line: 2581, column: 7, scope: !5907)
!5949 = !DILocalVariable(name: "pixel", scope: !5950, file: !1, line: 2586, type: !438)
!5950 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2584, column: 5)
!5951 = !DILocation(line: 2586, column: 9, scope: !5950)
!5952 = !DILocation(line: 2588, column: 13, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5950, file: !1, line: 2588, column: 7)
!5954 = !DILocation(line: 2588, column: 12, scope: !5953)
!5955 = !DILocation(line: 2588, column: 17, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5953, file: !1, line: 2588, column: 7)
!5957 = !DILocation(line: 2588, column: 31, scope: !5956)
!5958 = !DILocation(line: 2588, column: 19, scope: !5956)
!5959 = !DILocation(line: 2588, column: 7, scope: !5953)
!5960 = !DILocation(line: 2590, column: 25, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5956, file: !1, line: 2589, column: 7)
!5962 = !DILocation(line: 2590, column: 11, scope: !5961)
!5963 = !DILocation(line: 2590, column: 10, scope: !5961)
!5964 = !DILocation(line: 2591, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !1, line: 2591, column: 9)
!5966 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 2591, column: 9)
!5967 = !DILocation(line: 2591, column: 9, scope: !5966)
!5968 = !DILocation(line: 2593, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5961, file: !1, line: 2593, column: 9)
!5970 = !DILocation(line: 2594, column: 25, scope: !5961)
!5971 = !DILocation(line: 2594, column: 11, scope: !5961)
!5972 = !DILocation(line: 2594, column: 10, scope: !5961)
!5973 = !DILocation(line: 2595, column: 9, scope: !5961)
!5974 = !DILocation(line: 2596, column: 12, scope: !5961)
!5975 = !DILocation(line: 2596, column: 26, scope: !5961)
!5976 = !DILocation(line: 2596, column: 10, scope: !5961)
!5977 = !DILocation(line: 2597, column: 10, scope: !5961)
!5978 = !DILocation(line: 2598, column: 7, scope: !5961)
!5979 = !DILocation(line: 2588, column: 47, scope: !5956)
!5980 = !DILocation(line: 2588, column: 7, scope: !5956)
!5981 = distinct !{!5981, !5959, !5982}
!5982 = !DILocation(line: 2598, column: 7, scope: !5953)
!5983 = !DILocation(line: 2599, column: 7, scope: !5950)
!5984 = !DILocalVariable(name: "pixel", scope: !5985, file: !1, line: 2604, type: !494)
!5985 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2602, column: 5)
!5986 = !DILocation(line: 2604, column: 9, scope: !5985)
!5987 = !DILocation(line: 2606, column: 11, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2606, column: 11)
!5989 = !DILocation(line: 2606, column: 25, scope: !5988)
!5990 = !DILocation(line: 2606, column: 32, scope: !5988)
!5991 = !DILocation(line: 2606, column: 11, scope: !5985)
!5992 = !DILocation(line: 2608, column: 17, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5994, file: !1, line: 2608, column: 11)
!5994 = distinct !DILexicalBlock(scope: !5988, file: !1, line: 2607, column: 9)
!5995 = !DILocation(line: 2608, column: 16, scope: !5993)
!5996 = !DILocation(line: 2608, column: 21, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5993, file: !1, line: 2608, column: 11)
!5998 = !DILocation(line: 2608, column: 35, scope: !5997)
!5999 = !DILocation(line: 2608, column: 23, scope: !5997)
!6000 = !DILocation(line: 2608, column: 11, scope: !5993)
!6001 = !DILocation(line: 2610, column: 30, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5997, file: !1, line: 2609, column: 11)
!6003 = !DILocation(line: 2610, column: 44, scope: !6002)
!6004 = !DILocation(line: 2610, column: 51, scope: !6002)
!6005 = !DILocation(line: 2610, column: 15, scope: !6002)
!6006 = !DILocation(line: 2610, column: 14, scope: !6002)
!6007 = !DILocation(line: 2611, column: 13, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6009, file: !1, line: 2611, column: 13)
!6009 = distinct !DILexicalBlock(scope: !6002, file: !1, line: 2611, column: 13)
!6010 = !DILocation(line: 2611, column: 13, scope: !6009)
!6011 = !DILocation(line: 2614, column: 13, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6002, file: !1, line: 2614, column: 13)
!6013 = !DILocation(line: 2615, column: 30, scope: !6002)
!6014 = !DILocation(line: 2615, column: 44, scope: !6002)
!6015 = !DILocation(line: 2615, column: 51, scope: !6002)
!6016 = !DILocation(line: 2615, column: 15, scope: !6002)
!6017 = !DILocation(line: 2615, column: 14, scope: !6002)
!6018 = !DILocation(line: 2616, column: 13, scope: !6002)
!6019 = !DILocation(line: 2618, column: 16, scope: !6002)
!6020 = !DILocation(line: 2618, column: 30, scope: !6002)
!6021 = !DILocation(line: 2618, column: 14, scope: !6002)
!6022 = !DILocation(line: 2619, column: 14, scope: !6002)
!6023 = !DILocation(line: 2620, column: 11, scope: !6002)
!6024 = !DILocation(line: 2608, column: 51, scope: !5997)
!6025 = !DILocation(line: 2608, column: 11, scope: !5997)
!6026 = distinct !{!6026, !6000, !6027}
!6027 = !DILocation(line: 2620, column: 11, scope: !5993)
!6028 = !DILocation(line: 2621, column: 11, scope: !5994)
!6029 = !DILocation(line: 2623, column: 13, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5985, file: !1, line: 2623, column: 7)
!6031 = !DILocation(line: 2623, column: 12, scope: !6030)
!6032 = !DILocation(line: 2623, column: 17, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6030, file: !1, line: 2623, column: 7)
!6034 = !DILocation(line: 2623, column: 31, scope: !6033)
!6035 = !DILocation(line: 2623, column: 19, scope: !6033)
!6036 = !DILocation(line: 2623, column: 7, scope: !6030)
!6037 = !DILocation(line: 2625, column: 26, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 2624, column: 7)
!6039 = !DILocation(line: 2625, column: 40, scope: !6038)
!6040 = !DILocation(line: 2625, column: 47, scope: !6038)
!6041 = !DILocation(line: 2625, column: 11, scope: !6038)
!6042 = !DILocation(line: 2625, column: 10, scope: !6038)
!6043 = !DILocation(line: 2626, column: 9, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !1, line: 2626, column: 9)
!6045 = distinct !DILexicalBlock(scope: !6038, file: !1, line: 2626, column: 9)
!6046 = !DILocation(line: 2626, column: 9, scope: !6045)
!6047 = !DILocation(line: 2628, column: 9, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6038, file: !1, line: 2628, column: 9)
!6049 = !DILocation(line: 2629, column: 26, scope: !6038)
!6050 = !DILocation(line: 2629, column: 40, scope: !6038)
!6051 = !DILocation(line: 2629, column: 47, scope: !6038)
!6052 = !DILocation(line: 2629, column: 11, scope: !6038)
!6053 = !DILocation(line: 2629, column: 10, scope: !6038)
!6054 = !DILocation(line: 2630, column: 9, scope: !6038)
!6055 = !DILocation(line: 2631, column: 12, scope: !6038)
!6056 = !DILocation(line: 2631, column: 26, scope: !6038)
!6057 = !DILocation(line: 2631, column: 10, scope: !6038)
!6058 = !DILocation(line: 2632, column: 10, scope: !6038)
!6059 = !DILocation(line: 2633, column: 7, scope: !6038)
!6060 = !DILocation(line: 2623, column: 47, scope: !6033)
!6061 = !DILocation(line: 2623, column: 7, scope: !6033)
!6062 = distinct !{!6062, !6036, !6063}
!6063 = !DILocation(line: 2633, column: 7, scope: !6030)
!6064 = !DILocation(line: 2634, column: 7, scope: !5985)
!6065 = !DILocalVariable(name: "pixel", scope: !6066, file: !1, line: 2639, type: !5)
!6066 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2637, column: 5)
!6067 = !DILocation(line: 2639, column: 9, scope: !6066)
!6068 = !DILocation(line: 2641, column: 11, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !1, line: 2641, column: 11)
!6070 = !DILocation(line: 2641, column: 25, scope: !6069)
!6071 = !DILocation(line: 2641, column: 32, scope: !6069)
!6072 = !DILocation(line: 2641, column: 11, scope: !6066)
!6073 = !DILocalVariable(name: "pixel", scope: !6074, file: !1, line: 2644, type: !496)
!6074 = distinct !DILexicalBlock(scope: !6069, file: !1, line: 2642, column: 9)
!6075 = !DILocation(line: 2644, column: 13, scope: !6074)
!6076 = !DILocation(line: 2646, column: 17, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6074, file: !1, line: 2646, column: 11)
!6078 = !DILocation(line: 2646, column: 16, scope: !6077)
!6079 = !DILocation(line: 2646, column: 21, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !1, line: 2646, column: 11)
!6081 = !DILocation(line: 2646, column: 35, scope: !6080)
!6082 = !DILocation(line: 2646, column: 23, scope: !6080)
!6083 = !DILocation(line: 2646, column: 11, scope: !6077)
!6084 = !DILocation(line: 2648, column: 30, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !1, line: 2647, column: 11)
!6086 = !DILocation(line: 2648, column: 43, scope: !6085)
!6087 = !DILocation(line: 2648, column: 15, scope: !6085)
!6088 = !DILocation(line: 2648, column: 14, scope: !6085)
!6089 = !DILocation(line: 2649, column: 13, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !1, line: 2649, column: 13)
!6091 = distinct !DILexicalBlock(scope: !6085, file: !1, line: 2649, column: 13)
!6092 = !DILocation(line: 2649, column: 13, scope: !6091)
!6093 = !DILocation(line: 2651, column: 13, scope: !6094)
!6094 = distinct !DILexicalBlock(scope: !6085, file: !1, line: 2651, column: 13)
!6095 = !DILocation(line: 2652, column: 30, scope: !6085)
!6096 = !DILocation(line: 2652, column: 43, scope: !6085)
!6097 = !DILocation(line: 2652, column: 15, scope: !6085)
!6098 = !DILocation(line: 2652, column: 14, scope: !6085)
!6099 = !DILocation(line: 2653, column: 13, scope: !6085)
!6100 = !DILocation(line: 2654, column: 16, scope: !6085)
!6101 = !DILocation(line: 2654, column: 30, scope: !6085)
!6102 = !DILocation(line: 2654, column: 14, scope: !6085)
!6103 = !DILocation(line: 2655, column: 14, scope: !6085)
!6104 = !DILocation(line: 2656, column: 11, scope: !6085)
!6105 = !DILocation(line: 2646, column: 51, scope: !6080)
!6106 = !DILocation(line: 2646, column: 11, scope: !6080)
!6107 = distinct !{!6107, !6083, !6108}
!6108 = !DILocation(line: 2656, column: 11, scope: !6077)
!6109 = !DILocation(line: 2657, column: 11, scope: !6074)
!6110 = !DILocation(line: 2659, column: 13, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6066, file: !1, line: 2659, column: 7)
!6112 = !DILocation(line: 2659, column: 12, scope: !6111)
!6113 = !DILocation(line: 2659, column: 17, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6111, file: !1, line: 2659, column: 7)
!6115 = !DILocation(line: 2659, column: 31, scope: !6114)
!6116 = !DILocation(line: 2659, column: 19, scope: !6114)
!6117 = !DILocation(line: 2659, column: 7, scope: !6111)
!6118 = !DILocation(line: 2661, column: 25, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6114, file: !1, line: 2660, column: 7)
!6120 = !DILocation(line: 2661, column: 39, scope: !6119)
!6121 = !DILocation(line: 2661, column: 46, scope: !6119)
!6122 = !DILocation(line: 2661, column: 11, scope: !6119)
!6123 = !DILocation(line: 2661, column: 10, scope: !6119)
!6124 = !DILocation(line: 2662, column: 9, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !1, line: 2662, column: 9)
!6126 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 2662, column: 9)
!6127 = !DILocation(line: 2662, column: 9, scope: !6126)
!6128 = !DILocation(line: 2664, column: 9, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6119, file: !1, line: 2664, column: 9)
!6130 = !DILocation(line: 2665, column: 25, scope: !6119)
!6131 = !DILocation(line: 2665, column: 39, scope: !6119)
!6132 = !DILocation(line: 2665, column: 46, scope: !6119)
!6133 = !DILocation(line: 2665, column: 11, scope: !6119)
!6134 = !DILocation(line: 2665, column: 10, scope: !6119)
!6135 = !DILocation(line: 2666, column: 9, scope: !6119)
!6136 = !DILocation(line: 2667, column: 12, scope: !6119)
!6137 = !DILocation(line: 2667, column: 26, scope: !6119)
!6138 = !DILocation(line: 2667, column: 10, scope: !6119)
!6139 = !DILocation(line: 2668, column: 10, scope: !6119)
!6140 = !DILocation(line: 2669, column: 7, scope: !6119)
!6141 = !DILocation(line: 2659, column: 47, scope: !6114)
!6142 = !DILocation(line: 2659, column: 7, scope: !6114)
!6143 = distinct !{!6143, !6117, !6144}
!6144 = !DILocation(line: 2669, column: 7, scope: !6111)
!6145 = !DILocation(line: 2670, column: 7, scope: !6066)
!6146 = !DILocation(line: 2674, column: 11, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !1, line: 2674, column: 11)
!6148 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2673, column: 5)
!6149 = !DILocation(line: 2674, column: 25, scope: !6147)
!6150 = !DILocation(line: 2674, column: 32, scope: !6147)
!6151 = !DILocation(line: 2674, column: 11, scope: !6148)
!6152 = !DILocalVariable(name: "pixel", scope: !6153, file: !1, line: 2677, type: !456)
!6153 = distinct !DILexicalBlock(scope: !6147, file: !1, line: 2675, column: 9)
!6154 = !DILocation(line: 2677, column: 13, scope: !6153)
!6155 = !DILocation(line: 2679, column: 17, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6153, file: !1, line: 2679, column: 11)
!6157 = !DILocation(line: 2679, column: 16, scope: !6156)
!6158 = !DILocation(line: 2679, column: 21, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !6156, file: !1, line: 2679, column: 11)
!6160 = !DILocation(line: 2679, column: 35, scope: !6159)
!6161 = !DILocation(line: 2679, column: 23, scope: !6159)
!6162 = !DILocation(line: 2679, column: 11, scope: !6156)
!6163 = !DILocation(line: 2681, column: 31, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6159, file: !1, line: 2680, column: 11)
!6165 = !DILocation(line: 2681, column: 44, scope: !6164)
!6166 = !DILocation(line: 2681, column: 15, scope: !6164)
!6167 = !DILocation(line: 2681, column: 14, scope: !6164)
!6168 = !DILocation(line: 2682, column: 13, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !1, line: 2682, column: 13)
!6170 = distinct !DILexicalBlock(scope: !6164, file: !1, line: 2682, column: 13)
!6171 = !DILocation(line: 2682, column: 13, scope: !6170)
!6172 = !DILocation(line: 2684, column: 13, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6164, file: !1, line: 2684, column: 13)
!6174 = !DILocation(line: 2685, column: 31, scope: !6164)
!6175 = !DILocation(line: 2685, column: 44, scope: !6164)
!6176 = !DILocation(line: 2685, column: 15, scope: !6164)
!6177 = !DILocation(line: 2685, column: 14, scope: !6164)
!6178 = !DILocation(line: 2686, column: 13, scope: !6164)
!6179 = !DILocation(line: 2687, column: 16, scope: !6164)
!6180 = !DILocation(line: 2687, column: 30, scope: !6164)
!6181 = !DILocation(line: 2687, column: 14, scope: !6164)
!6182 = !DILocation(line: 2688, column: 14, scope: !6164)
!6183 = !DILocation(line: 2689, column: 11, scope: !6164)
!6184 = !DILocation(line: 2679, column: 51, scope: !6159)
!6185 = !DILocation(line: 2679, column: 11, scope: !6159)
!6186 = distinct !{!6186, !6162, !6187}
!6187 = !DILocation(line: 2689, column: 11, scope: !6156)
!6188 = !DILocation(line: 2690, column: 11, scope: !6153)
!6189 = !DILocation(line: 2692, column: 5, scope: !6148)
!6190 = !DILocation(line: 2695, column: 29, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !5781, file: !1, line: 2694, column: 5)
!6192 = !DILocation(line: 2695, column: 43, scope: !6191)
!6193 = !DILocation(line: 2695, column: 13, scope: !6191)
!6194 = !DILocation(line: 2695, column: 12, scope: !6191)
!6195 = !DILocation(line: 2696, column: 13, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !1, line: 2696, column: 7)
!6197 = !DILocation(line: 2696, column: 12, scope: !6196)
!6198 = !DILocation(line: 2696, column: 17, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !1, line: 2696, column: 7)
!6200 = !DILocation(line: 2696, column: 31, scope: !6199)
!6201 = !DILocation(line: 2696, column: 19, scope: !6199)
!6202 = !DILocation(line: 2696, column: 7, scope: !6196)
!6203 = !DILocation(line: 2698, column: 28, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !1, line: 2697, column: 7)
!6205 = !DILocation(line: 2698, column: 41, scope: !6204)
!6206 = !DILocation(line: 2698, column: 11, scope: !6204)
!6207 = !DILocation(line: 2698, column: 10, scope: !6204)
!6208 = !DILocation(line: 2699, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !1, line: 2699, column: 9)
!6210 = distinct !DILexicalBlock(scope: !6204, file: !1, line: 2699, column: 9)
!6211 = !DILocation(line: 2699, column: 9, scope: !6210)
!6212 = !DILocation(line: 2701, column: 9, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6204, file: !1, line: 2701, column: 9)
!6214 = !DILocation(line: 2702, column: 28, scope: !6204)
!6215 = !DILocation(line: 2702, column: 41, scope: !6204)
!6216 = !DILocation(line: 2702, column: 11, scope: !6204)
!6217 = !DILocation(line: 2702, column: 10, scope: !6204)
!6218 = !DILocation(line: 2703, column: 9, scope: !6204)
!6219 = !DILocation(line: 2704, column: 12, scope: !6204)
!6220 = !DILocation(line: 2704, column: 26, scope: !6204)
!6221 = !DILocation(line: 2704, column: 10, scope: !6204)
!6222 = !DILocation(line: 2705, column: 10, scope: !6204)
!6223 = !DILocation(line: 2706, column: 7, scope: !6204)
!6224 = !DILocation(line: 2696, column: 47, scope: !6199)
!6225 = !DILocation(line: 2696, column: 7, scope: !6199)
!6226 = distinct !{!6226, !6202, !6227}
!6227 = !DILocation(line: 2706, column: 7, scope: !6196)
!6228 = !DILocation(line: 2707, column: 7, scope: !6191)
!6229 = !DILocation(line: 2710, column: 7, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !5739, file: !1, line: 2710, column: 7)
!6231 = !DILocation(line: 2710, column: 23, scope: !6230)
!6232 = !DILocation(line: 2710, column: 7, scope: !5739)
!6233 = !DILocation(line: 2711, column: 33, scope: !6230)
!6234 = !DILocation(line: 2712, column: 37, scope: !6230)
!6235 = !DILocation(line: 2712, column: 44, scope: !6230)
!6236 = !DILocation(line: 2711, column: 12, scope: !6230)
!6237 = !DILocation(line: 2711, column: 5, scope: !6230)
!6238 = !DILocation(line: 2713, column: 1, scope: !5739)
!6239 = distinct !DISubprogram(name: "ImportRedQuantum", scope: !1, file: !1, line: 2715, type: !1062, scopeLine: 2718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6240 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !6239, file: !1, line: 2715, type: !444)
!6241 = !DILocation(line: 2715, column: 43, scope: !6239)
!6242 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !6239, file: !1, line: 2716, type: !638)
!6243 = !DILocation(line: 2716, column: 24, scope: !6239)
!6244 = !DILocalVariable(name: "p", arg: 3, scope: !6239, file: !1, line: 2716, type: !717)
!6245 = !DILocation(line: 2716, column: 68, scope: !6239)
!6246 = !DILocalVariable(name: "q", arg: 4, scope: !6239, file: !1, line: 2717, type: !742)
!6247 = !DILocation(line: 2717, column: 25, scope: !6239)
!6248 = !DILocalVariable(name: "x", scope: !6239, file: !1, line: 2720, type: !488)
!6249 = !DILocation(line: 2720, column: 5, scope: !6239)
!6250 = !DILocalVariable(name: "pixel", scope: !6239, file: !1, line: 2723, type: !5)
!6251 = !DILocation(line: 2723, column: 5, scope: !6239)
!6252 = !DILocation(line: 2725, column: 11, scope: !6239)
!6253 = !DILocation(line: 2725, column: 25, scope: !6239)
!6254 = !DILocation(line: 2725, column: 3, scope: !6239)
!6255 = !DILocalVariable(name: "pixel", scope: !6256, file: !1, line: 2730, type: !438)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2728, column: 5)
!6257 = distinct !DILexicalBlock(scope: !6239, file: !1, line: 2726, column: 3)
!6258 = !DILocation(line: 2730, column: 9, scope: !6256)
!6259 = !DILocation(line: 2732, column: 13, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !1, line: 2732, column: 7)
!6261 = !DILocation(line: 2732, column: 12, scope: !6260)
!6262 = !DILocation(line: 2732, column: 17, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6260, file: !1, line: 2732, column: 7)
!6264 = !DILocation(line: 2732, column: 31, scope: !6263)
!6265 = !DILocation(line: 2732, column: 19, scope: !6263)
!6266 = !DILocation(line: 2732, column: 7, scope: !6260)
!6267 = !DILocation(line: 2734, column: 25, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6263, file: !1, line: 2733, column: 7)
!6269 = !DILocation(line: 2734, column: 11, scope: !6268)
!6270 = !DILocation(line: 2734, column: 10, scope: !6268)
!6271 = !DILocation(line: 2735, column: 9, scope: !6268)
!6272 = !DILocation(line: 2736, column: 12, scope: !6268)
!6273 = !DILocation(line: 2736, column: 26, scope: !6268)
!6274 = !DILocation(line: 2736, column: 10, scope: !6268)
!6275 = !DILocation(line: 2737, column: 10, scope: !6268)
!6276 = !DILocation(line: 2738, column: 7, scope: !6268)
!6277 = !DILocation(line: 2732, column: 47, scope: !6263)
!6278 = !DILocation(line: 2732, column: 7, scope: !6263)
!6279 = distinct !{!6279, !6266, !6280}
!6280 = !DILocation(line: 2738, column: 7, scope: !6260)
!6281 = !DILocation(line: 2739, column: 7, scope: !6256)
!6282 = !DILocalVariable(name: "pixel", scope: !6283, file: !1, line: 2744, type: !494)
!6283 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2742, column: 5)
!6284 = !DILocation(line: 2744, column: 9, scope: !6283)
!6285 = !DILocation(line: 2746, column: 11, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6283, file: !1, line: 2746, column: 11)
!6287 = !DILocation(line: 2746, column: 25, scope: !6286)
!6288 = !DILocation(line: 2746, column: 32, scope: !6286)
!6289 = !DILocation(line: 2746, column: 11, scope: !6283)
!6290 = !DILocation(line: 2748, column: 17, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !1, line: 2748, column: 11)
!6292 = distinct !DILexicalBlock(scope: !6286, file: !1, line: 2747, column: 9)
!6293 = !DILocation(line: 2748, column: 16, scope: !6291)
!6294 = !DILocation(line: 2748, column: 21, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6291, file: !1, line: 2748, column: 11)
!6296 = !DILocation(line: 2748, column: 35, scope: !6295)
!6297 = !DILocation(line: 2748, column: 23, scope: !6295)
!6298 = !DILocation(line: 2748, column: 11, scope: !6291)
!6299 = !DILocation(line: 2750, column: 30, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6295, file: !1, line: 2749, column: 11)
!6301 = !DILocation(line: 2750, column: 44, scope: !6300)
!6302 = !DILocation(line: 2750, column: 51, scope: !6300)
!6303 = !DILocation(line: 2750, column: 15, scope: !6300)
!6304 = !DILocation(line: 2750, column: 14, scope: !6300)
!6305 = !DILocation(line: 2751, column: 13, scope: !6300)
!6306 = !DILocation(line: 2753, column: 16, scope: !6300)
!6307 = !DILocation(line: 2753, column: 30, scope: !6300)
!6308 = !DILocation(line: 2753, column: 14, scope: !6300)
!6309 = !DILocation(line: 2754, column: 14, scope: !6300)
!6310 = !DILocation(line: 2755, column: 11, scope: !6300)
!6311 = !DILocation(line: 2748, column: 51, scope: !6295)
!6312 = !DILocation(line: 2748, column: 11, scope: !6295)
!6313 = distinct !{!6313, !6298, !6314}
!6314 = !DILocation(line: 2755, column: 11, scope: !6291)
!6315 = !DILocation(line: 2756, column: 11, scope: !6292)
!6316 = !DILocation(line: 2758, column: 13, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6283, file: !1, line: 2758, column: 7)
!6318 = !DILocation(line: 2758, column: 12, scope: !6317)
!6319 = !DILocation(line: 2758, column: 17, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6317, file: !1, line: 2758, column: 7)
!6321 = !DILocation(line: 2758, column: 31, scope: !6320)
!6322 = !DILocation(line: 2758, column: 19, scope: !6320)
!6323 = !DILocation(line: 2758, column: 7, scope: !6317)
!6324 = !DILocation(line: 2760, column: 26, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6320, file: !1, line: 2759, column: 7)
!6326 = !DILocation(line: 2760, column: 40, scope: !6325)
!6327 = !DILocation(line: 2760, column: 47, scope: !6325)
!6328 = !DILocation(line: 2760, column: 11, scope: !6325)
!6329 = !DILocation(line: 2760, column: 10, scope: !6325)
!6330 = !DILocation(line: 2761, column: 9, scope: !6325)
!6331 = !DILocation(line: 2762, column: 12, scope: !6325)
!6332 = !DILocation(line: 2762, column: 26, scope: !6325)
!6333 = !DILocation(line: 2762, column: 10, scope: !6325)
!6334 = !DILocation(line: 2763, column: 10, scope: !6325)
!6335 = !DILocation(line: 2764, column: 7, scope: !6325)
!6336 = !DILocation(line: 2758, column: 47, scope: !6320)
!6337 = !DILocation(line: 2758, column: 7, scope: !6320)
!6338 = distinct !{!6338, !6323, !6339}
!6339 = !DILocation(line: 2764, column: 7, scope: !6317)
!6340 = !DILocation(line: 2765, column: 7, scope: !6283)
!6341 = !DILocalVariable(name: "pixel", scope: !6342, file: !1, line: 2770, type: !5)
!6342 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2768, column: 5)
!6343 = !DILocation(line: 2770, column: 9, scope: !6342)
!6344 = !DILocation(line: 2772, column: 11, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 2772, column: 11)
!6346 = !DILocation(line: 2772, column: 25, scope: !6345)
!6347 = !DILocation(line: 2772, column: 32, scope: !6345)
!6348 = !DILocation(line: 2772, column: 11, scope: !6342)
!6349 = !DILocalVariable(name: "pixel", scope: !6350, file: !1, line: 2775, type: !496)
!6350 = distinct !DILexicalBlock(scope: !6345, file: !1, line: 2773, column: 9)
!6351 = !DILocation(line: 2775, column: 13, scope: !6350)
!6352 = !DILocation(line: 2777, column: 17, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6350, file: !1, line: 2777, column: 11)
!6354 = !DILocation(line: 2777, column: 16, scope: !6353)
!6355 = !DILocation(line: 2777, column: 21, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6353, file: !1, line: 2777, column: 11)
!6357 = !DILocation(line: 2777, column: 35, scope: !6356)
!6358 = !DILocation(line: 2777, column: 23, scope: !6356)
!6359 = !DILocation(line: 2777, column: 11, scope: !6353)
!6360 = !DILocation(line: 2779, column: 30, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6356, file: !1, line: 2778, column: 11)
!6362 = !DILocation(line: 2779, column: 43, scope: !6361)
!6363 = !DILocation(line: 2779, column: 15, scope: !6361)
!6364 = !DILocation(line: 2779, column: 14, scope: !6361)
!6365 = !DILocation(line: 2780, column: 13, scope: !6361)
!6366 = !DILocation(line: 2781, column: 16, scope: !6361)
!6367 = !DILocation(line: 2781, column: 30, scope: !6361)
!6368 = !DILocation(line: 2781, column: 14, scope: !6361)
!6369 = !DILocation(line: 2782, column: 14, scope: !6361)
!6370 = !DILocation(line: 2783, column: 11, scope: !6361)
!6371 = !DILocation(line: 2777, column: 51, scope: !6356)
!6372 = !DILocation(line: 2777, column: 11, scope: !6356)
!6373 = distinct !{!6373, !6359, !6374}
!6374 = !DILocation(line: 2783, column: 11, scope: !6353)
!6375 = !DILocation(line: 2784, column: 11, scope: !6350)
!6376 = !DILocation(line: 2786, column: 13, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6342, file: !1, line: 2786, column: 7)
!6378 = !DILocation(line: 2786, column: 12, scope: !6377)
!6379 = !DILocation(line: 2786, column: 17, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !1, line: 2786, column: 7)
!6381 = !DILocation(line: 2786, column: 31, scope: !6380)
!6382 = !DILocation(line: 2786, column: 19, scope: !6380)
!6383 = !DILocation(line: 2786, column: 7, scope: !6377)
!6384 = !DILocation(line: 2788, column: 25, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6380, file: !1, line: 2787, column: 7)
!6386 = !DILocation(line: 2788, column: 39, scope: !6385)
!6387 = !DILocation(line: 2788, column: 46, scope: !6385)
!6388 = !DILocation(line: 2788, column: 11, scope: !6385)
!6389 = !DILocation(line: 2788, column: 10, scope: !6385)
!6390 = !DILocation(line: 2789, column: 9, scope: !6385)
!6391 = !DILocation(line: 2790, column: 12, scope: !6385)
!6392 = !DILocation(line: 2790, column: 26, scope: !6385)
!6393 = !DILocation(line: 2790, column: 10, scope: !6385)
!6394 = !DILocation(line: 2791, column: 10, scope: !6385)
!6395 = !DILocation(line: 2792, column: 7, scope: !6385)
!6396 = !DILocation(line: 2786, column: 47, scope: !6380)
!6397 = !DILocation(line: 2786, column: 7, scope: !6380)
!6398 = distinct !{!6398, !6383, !6399}
!6399 = !DILocation(line: 2792, column: 7, scope: !6377)
!6400 = !DILocation(line: 2793, column: 7, scope: !6342)
!6401 = !DILocation(line: 2797, column: 11, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6403, file: !1, line: 2797, column: 11)
!6403 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2796, column: 5)
!6404 = !DILocation(line: 2797, column: 25, scope: !6402)
!6405 = !DILocation(line: 2797, column: 32, scope: !6402)
!6406 = !DILocation(line: 2797, column: 11, scope: !6403)
!6407 = !DILocalVariable(name: "pixel", scope: !6408, file: !1, line: 2800, type: !456)
!6408 = distinct !DILexicalBlock(scope: !6402, file: !1, line: 2798, column: 9)
!6409 = !DILocation(line: 2800, column: 13, scope: !6408)
!6410 = !DILocation(line: 2802, column: 17, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !1, line: 2802, column: 11)
!6412 = !DILocation(line: 2802, column: 16, scope: !6411)
!6413 = !DILocation(line: 2802, column: 21, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !1, line: 2802, column: 11)
!6415 = !DILocation(line: 2802, column: 35, scope: !6414)
!6416 = !DILocation(line: 2802, column: 23, scope: !6414)
!6417 = !DILocation(line: 2802, column: 11, scope: !6411)
!6418 = !DILocation(line: 2804, column: 31, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6414, file: !1, line: 2803, column: 11)
!6420 = !DILocation(line: 2804, column: 44, scope: !6419)
!6421 = !DILocation(line: 2804, column: 15, scope: !6419)
!6422 = !DILocation(line: 2804, column: 14, scope: !6419)
!6423 = !DILocation(line: 2805, column: 13, scope: !6419)
!6424 = !DILocation(line: 2806, column: 16, scope: !6419)
!6425 = !DILocation(line: 2806, column: 30, scope: !6419)
!6426 = !DILocation(line: 2806, column: 14, scope: !6419)
!6427 = !DILocation(line: 2807, column: 14, scope: !6419)
!6428 = !DILocation(line: 2808, column: 11, scope: !6419)
!6429 = !DILocation(line: 2802, column: 51, scope: !6414)
!6430 = !DILocation(line: 2802, column: 11, scope: !6414)
!6431 = distinct !{!6431, !6417, !6432}
!6432 = !DILocation(line: 2808, column: 11, scope: !6411)
!6433 = !DILocation(line: 2809, column: 11, scope: !6408)
!6434 = !DILocation(line: 2811, column: 5, scope: !6403)
!6435 = !DILocalVariable(name: "range", scope: !6436, file: !1, line: 2815, type: !501)
!6436 = distinct !DILexicalBlock(scope: !6257, file: !1, line: 2813, column: 5)
!6437 = !DILocation(line: 2815, column: 9, scope: !6436)
!6438 = !DILocation(line: 2817, column: 29, scope: !6436)
!6439 = !DILocation(line: 2817, column: 43, scope: !6436)
!6440 = !DILocation(line: 2817, column: 13, scope: !6436)
!6441 = !DILocation(line: 2817, column: 12, scope: !6436)
!6442 = !DILocation(line: 2818, column: 13, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6436, file: !1, line: 2818, column: 7)
!6444 = !DILocation(line: 2818, column: 12, scope: !6443)
!6445 = !DILocation(line: 2818, column: 17, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6443, file: !1, line: 2818, column: 7)
!6447 = !DILocation(line: 2818, column: 31, scope: !6446)
!6448 = !DILocation(line: 2818, column: 19, scope: !6446)
!6449 = !DILocation(line: 2818, column: 7, scope: !6443)
!6450 = !DILocation(line: 2820, column: 28, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6446, file: !1, line: 2819, column: 7)
!6452 = !DILocation(line: 2820, column: 41, scope: !6451)
!6453 = !DILocation(line: 2820, column: 11, scope: !6451)
!6454 = !DILocation(line: 2820, column: 10, scope: !6451)
!6455 = !DILocation(line: 2821, column: 9, scope: !6451)
!6456 = !DILocation(line: 2822, column: 12, scope: !6451)
!6457 = !DILocation(line: 2822, column: 26, scope: !6451)
!6458 = !DILocation(line: 2822, column: 10, scope: !6451)
!6459 = !DILocation(line: 2823, column: 10, scope: !6451)
!6460 = !DILocation(line: 2824, column: 7, scope: !6451)
!6461 = !DILocation(line: 2818, column: 47, scope: !6446)
!6462 = !DILocation(line: 2818, column: 7, scope: !6446)
!6463 = distinct !{!6463, !6449, !6464}
!6464 = !DILocation(line: 2824, column: 7, scope: !6443)
!6465 = !DILocation(line: 2825, column: 7, scope: !6436)
!6466 = !DILocation(line: 2828, column: 1, scope: !6239)
!6467 = distinct !DISubprogram(name: "ImportRGBQuantum", scope: !1, file: !1, line: 2830, type: !1062, scopeLine: 2833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!6468 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !6467, file: !1, line: 2830, type: !444)
!6469 = !DILocation(line: 2830, column: 43, scope: !6467)
!6470 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !6467, file: !1, line: 2831, type: !638)
!6471 = !DILocation(line: 2831, column: 24, scope: !6467)
!6472 = !DILocalVariable(name: "p", arg: 3, scope: !6467, file: !1, line: 2831, type: !717)
!6473 = !DILocation(line: 2831, column: 68, scope: !6467)
!6474 = !DILocalVariable(name: "q", arg: 4, scope: !6467, file: !1, line: 2832, type: !742)
!6475 = !DILocation(line: 2832, column: 25, scope: !6467)
!6476 = !DILocalVariable(name: "range", scope: !6467, file: !1, line: 2835, type: !501)
!6477 = !DILocation(line: 2835, column: 5, scope: !6467)
!6478 = !DILocalVariable(name: "x", scope: !6467, file: !1, line: 2838, type: !488)
!6479 = !DILocation(line: 2838, column: 5, scope: !6467)
!6480 = !DILocalVariable(name: "bit", scope: !6467, file: !1, line: 2841, type: !488)
!6481 = !DILocation(line: 2841, column: 5, scope: !6467)
!6482 = !DILocalVariable(name: "pixel", scope: !6467, file: !1, line: 2844, type: !5)
!6483 = !DILocation(line: 2844, column: 5, scope: !6467)
!6484 = !DILocation(line: 2846, column: 11, scope: !6467)
!6485 = !DILocation(line: 2846, column: 25, scope: !6467)
!6486 = !DILocation(line: 2846, column: 3, scope: !6467)
!6487 = !DILocalVariable(name: "pixel", scope: !6488, file: !1, line: 2851, type: !438)
!6488 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 2849, column: 5)
!6489 = distinct !DILexicalBlock(scope: !6467, file: !1, line: 2847, column: 3)
!6490 = !DILocation(line: 2851, column: 9, scope: !6488)
!6491 = !DILocation(line: 2853, column: 13, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !1, line: 2853, column: 7)
!6493 = !DILocation(line: 2853, column: 12, scope: !6492)
!6494 = !DILocation(line: 2853, column: 17, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 2853, column: 7)
!6496 = !DILocation(line: 2853, column: 31, scope: !6495)
!6497 = !DILocation(line: 2853, column: 19, scope: !6495)
!6498 = !DILocation(line: 2853, column: 7, scope: !6492)
!6499 = !DILocation(line: 2855, column: 25, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6495, file: !1, line: 2854, column: 7)
!6501 = !DILocation(line: 2855, column: 11, scope: !6500)
!6502 = !DILocation(line: 2855, column: 10, scope: !6500)
!6503 = !DILocation(line: 2856, column: 9, scope: !6500)
!6504 = !DILocation(line: 2857, column: 25, scope: !6500)
!6505 = !DILocation(line: 2857, column: 11, scope: !6500)
!6506 = !DILocation(line: 2857, column: 10, scope: !6500)
!6507 = !DILocation(line: 2858, column: 9, scope: !6500)
!6508 = !DILocation(line: 2859, column: 25, scope: !6500)
!6509 = !DILocation(line: 2859, column: 11, scope: !6500)
!6510 = !DILocation(line: 2859, column: 10, scope: !6500)
!6511 = !DILocation(line: 2860, column: 9, scope: !6500)
!6512 = !DILocation(line: 2861, column: 9, scope: !6500)
!6513 = !DILocation(line: 2862, column: 12, scope: !6500)
!6514 = !DILocation(line: 2862, column: 26, scope: !6500)
!6515 = !DILocation(line: 2862, column: 10, scope: !6500)
!6516 = !DILocation(line: 2863, column: 10, scope: !6500)
!6517 = !DILocation(line: 2864, column: 7, scope: !6500)
!6518 = !DILocation(line: 2853, column: 47, scope: !6495)
!6519 = !DILocation(line: 2853, column: 7, scope: !6495)
!6520 = distinct !{!6520, !6498, !6521}
!6521 = !DILocation(line: 2864, column: 7, scope: !6492)
!6522 = !DILocation(line: 2865, column: 7, scope: !6488)
!6523 = !DILocation(line: 2869, column: 29, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 2868, column: 5)
!6525 = !DILocation(line: 2869, column: 43, scope: !6524)
!6526 = !DILocation(line: 2869, column: 13, scope: !6524)
!6527 = !DILocation(line: 2869, column: 12, scope: !6524)
!6528 = !DILocation(line: 2870, column: 11, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 2870, column: 11)
!6530 = !DILocation(line: 2870, column: 25, scope: !6529)
!6531 = !DILocation(line: 2870, column: 30, scope: !6529)
!6532 = !DILocation(line: 2870, column: 11, scope: !6524)
!6533 = !DILocation(line: 2872, column: 17, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6535, file: !1, line: 2872, column: 11)
!6535 = distinct !DILexicalBlock(scope: !6529, file: !1, line: 2871, column: 9)
!6536 = !DILocation(line: 2872, column: 16, scope: !6534)
!6537 = !DILocation(line: 2872, column: 21, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !1, line: 2872, column: 11)
!6539 = !DILocation(line: 2872, column: 35, scope: !6538)
!6540 = !DILocation(line: 2872, column: 23, scope: !6538)
!6541 = !DILocation(line: 2872, column: 11, scope: !6534)
!6542 = !DILocation(line: 2874, column: 29, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6538, file: !1, line: 2873, column: 11)
!6544 = !DILocation(line: 2874, column: 43, scope: !6543)
!6545 = !DILocation(line: 2874, column: 50, scope: !6543)
!6546 = !DILocation(line: 2874, column: 15, scope: !6543)
!6547 = !DILocation(line: 2874, column: 14, scope: !6543)
!6548 = !DILocation(line: 2875, column: 13, scope: !6543)
!6549 = !DILocation(line: 2876, column: 13, scope: !6543)
!6550 = !DILocation(line: 2877, column: 13, scope: !6543)
!6551 = !DILocation(line: 2878, column: 16, scope: !6543)
!6552 = !DILocation(line: 2878, column: 30, scope: !6543)
!6553 = !DILocation(line: 2878, column: 14, scope: !6543)
!6554 = !DILocation(line: 2879, column: 14, scope: !6543)
!6555 = !DILocation(line: 2880, column: 11, scope: !6543)
!6556 = !DILocation(line: 2872, column: 51, scope: !6538)
!6557 = !DILocation(line: 2872, column: 11, scope: !6538)
!6558 = distinct !{!6558, !6541, !6559}
!6559 = !DILocation(line: 2880, column: 11, scope: !6534)
!6560 = !DILocation(line: 2881, column: 11, scope: !6535)
!6561 = !DILocation(line: 2883, column: 11, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 2883, column: 11)
!6563 = !DILocation(line: 2883, column: 25, scope: !6562)
!6564 = !DILocation(line: 2883, column: 33, scope: !6562)
!6565 = !DILocation(line: 2883, column: 11, scope: !6524)
!6566 = !DILocation(line: 2885, column: 17, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !1, line: 2885, column: 11)
!6568 = distinct !DILexicalBlock(scope: !6562, file: !1, line: 2884, column: 9)
!6569 = !DILocation(line: 2885, column: 16, scope: !6567)
!6570 = !DILocation(line: 2885, column: 21, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6567, file: !1, line: 2885, column: 11)
!6572 = !DILocation(line: 2885, column: 35, scope: !6571)
!6573 = !DILocation(line: 2885, column: 23, scope: !6571)
!6574 = !DILocation(line: 2885, column: 11, scope: !6567)
!6575 = !DILocation(line: 2887, column: 36, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6571, file: !1, line: 2886, column: 11)
!6577 = !DILocation(line: 2887, column: 49, scope: !6576)
!6578 = !DILocation(line: 2887, column: 15, scope: !6576)
!6579 = !DILocation(line: 2887, column: 14, scope: !6576)
!6580 = !DILocation(line: 2888, column: 13, scope: !6576)
!6581 = !DILocation(line: 2889, column: 36, scope: !6576)
!6582 = !DILocation(line: 2889, column: 49, scope: !6576)
!6583 = !DILocation(line: 2889, column: 15, scope: !6576)
!6584 = !DILocation(line: 2889, column: 14, scope: !6576)
!6585 = !DILocation(line: 2890, column: 13, scope: !6576)
!6586 = !DILocation(line: 2891, column: 36, scope: !6576)
!6587 = !DILocation(line: 2891, column: 49, scope: !6576)
!6588 = !DILocation(line: 2891, column: 15, scope: !6576)
!6589 = !DILocation(line: 2891, column: 14, scope: !6576)
!6590 = !DILocation(line: 2892, column: 13, scope: !6576)
!6591 = !DILocation(line: 2893, column: 14, scope: !6576)
!6592 = !DILocation(line: 2894, column: 11, scope: !6576)
!6593 = !DILocation(line: 2885, column: 51, scope: !6571)
!6594 = !DILocation(line: 2885, column: 11, scope: !6571)
!6595 = distinct !{!6595, !6574, !6596}
!6596 = !DILocation(line: 2894, column: 11, scope: !6567)
!6597 = !DILocation(line: 2895, column: 11, scope: !6568)
!6598 = !DILocation(line: 2897, column: 13, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 2897, column: 7)
!6600 = !DILocation(line: 2897, column: 12, scope: !6599)
!6601 = !DILocation(line: 2897, column: 17, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !1, line: 2897, column: 7)
!6603 = !DILocation(line: 2897, column: 31, scope: !6602)
!6604 = !DILocation(line: 2897, column: 19, scope: !6602)
!6605 = !DILocation(line: 2897, column: 7, scope: !6599)
!6606 = !DILocation(line: 2899, column: 28, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6602, file: !1, line: 2898, column: 7)
!6608 = !DILocation(line: 2899, column: 41, scope: !6607)
!6609 = !DILocation(line: 2899, column: 11, scope: !6607)
!6610 = !DILocation(line: 2899, column: 10, scope: !6607)
!6611 = !DILocation(line: 2900, column: 9, scope: !6607)
!6612 = !DILocation(line: 2901, column: 28, scope: !6607)
!6613 = !DILocation(line: 2901, column: 41, scope: !6607)
!6614 = !DILocation(line: 2901, column: 11, scope: !6607)
!6615 = !DILocation(line: 2901, column: 10, scope: !6607)
!6616 = !DILocation(line: 2902, column: 9, scope: !6607)
!6617 = !DILocation(line: 2903, column: 28, scope: !6607)
!6618 = !DILocation(line: 2903, column: 41, scope: !6607)
!6619 = !DILocation(line: 2903, column: 11, scope: !6607)
!6620 = !DILocation(line: 2903, column: 10, scope: !6607)
!6621 = !DILocation(line: 2904, column: 9, scope: !6607)
!6622 = !DILocation(line: 2905, column: 10, scope: !6607)
!6623 = !DILocation(line: 2906, column: 7, scope: !6607)
!6624 = !DILocation(line: 2897, column: 47, scope: !6602)
!6625 = !DILocation(line: 2897, column: 7, scope: !6602)
!6626 = distinct !{!6626, !6605, !6627}
!6627 = !DILocation(line: 2906, column: 7, scope: !6599)
!6628 = !DILocation(line: 2907, column: 7, scope: !6524)
!6629 = !DILocation(line: 2911, column: 29, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 2910, column: 5)
!6631 = !DILocation(line: 2911, column: 43, scope: !6630)
!6632 = !DILocation(line: 2911, column: 13, scope: !6630)
!6633 = !DILocation(line: 2911, column: 12, scope: !6630)
!6634 = !DILocation(line: 2912, column: 11, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6630, file: !1, line: 2912, column: 11)
!6636 = !DILocation(line: 2912, column: 25, scope: !6635)
!6637 = !DILocation(line: 2912, column: 30, scope: !6635)
!6638 = !DILocation(line: 2912, column: 11, scope: !6630)
!6639 = !DILocalVariable(name: "pixel", scope: !6640, file: !1, line: 2915, type: !494)
!6640 = distinct !DILexicalBlock(scope: !6635, file: !1, line: 2913, column: 9)
!6641 = !DILocation(line: 2915, column: 13, scope: !6640)
!6642 = !DILocation(line: 2917, column: 17, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6640, file: !1, line: 2917, column: 11)
!6644 = !DILocation(line: 2917, column: 16, scope: !6643)
!6645 = !DILocation(line: 2917, column: 21, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6643, file: !1, line: 2917, column: 11)
!6647 = !DILocation(line: 2917, column: 38, scope: !6646)
!6648 = !DILocation(line: 2917, column: 37, scope: !6646)
!6649 = !DILocation(line: 2917, column: 51, scope: !6646)
!6650 = !DILocation(line: 2917, column: 23, scope: !6646)
!6651 = !DILocation(line: 2917, column: 11, scope: !6643)
!6652 = !DILocation(line: 2919, column: 30, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 2918, column: 11)
!6654 = !DILocation(line: 2919, column: 44, scope: !6653)
!6655 = !DILocation(line: 2919, column: 51, scope: !6653)
!6656 = !DILocation(line: 2919, column: 15, scope: !6653)
!6657 = !DILocation(line: 2919, column: 14, scope: !6653)
!6658 = !DILocation(line: 2920, column: 21, scope: !6653)
!6659 = !DILocation(line: 2920, column: 23, scope: !6653)
!6660 = !DILocation(line: 2920, column: 13, scope: !6653)
!6661 = !DILocation(line: 2921, column: 13, scope: !6653)
!6662 = !DILocation(line: 2925, column: 17, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 2924, column: 15)
!6664 = distinct !DILexicalBlock(scope: !6653, file: !1, line: 2921, column: 13)
!6665 = !DILocation(line: 2927, column: 17, scope: !6663)
!6666 = !DILocation(line: 2931, column: 17, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 2930, column: 15)
!6668 = !DILocation(line: 2933, column: 17, scope: !6667)
!6669 = !DILocation(line: 2937, column: 17, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 2936, column: 15)
!6671 = !DILocation(line: 2939, column: 18, scope: !6670)
!6672 = !DILocation(line: 2940, column: 17, scope: !6670)
!6673 = !DILocation(line: 2943, column: 30, scope: !6653)
!6674 = !DILocation(line: 2943, column: 44, scope: !6653)
!6675 = !DILocation(line: 2943, column: 51, scope: !6653)
!6676 = !DILocation(line: 2943, column: 15, scope: !6653)
!6677 = !DILocation(line: 2943, column: 14, scope: !6653)
!6678 = !DILocation(line: 2944, column: 22, scope: !6653)
!6679 = !DILocation(line: 2944, column: 23, scope: !6653)
!6680 = !DILocation(line: 2944, column: 27, scope: !6653)
!6681 = !DILocation(line: 2944, column: 13, scope: !6653)
!6682 = !DILocation(line: 2945, column: 13, scope: !6653)
!6683 = !DILocation(line: 2949, column: 17, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 2948, column: 15)
!6685 = distinct !DILexicalBlock(scope: !6653, file: !1, line: 2945, column: 13)
!6686 = !DILocation(line: 2951, column: 17, scope: !6684)
!6687 = !DILocation(line: 2955, column: 17, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 2954, column: 15)
!6689 = !DILocation(line: 2957, column: 17, scope: !6688)
!6690 = !DILocation(line: 2961, column: 17, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6685, file: !1, line: 2960, column: 15)
!6692 = !DILocation(line: 2963, column: 18, scope: !6691)
!6693 = !DILocation(line: 2964, column: 17, scope: !6691)
!6694 = !DILocation(line: 2967, column: 16, scope: !6653)
!6695 = !DILocation(line: 2967, column: 30, scope: !6653)
!6696 = !DILocation(line: 2967, column: 14, scope: !6653)
!6697 = !DILocation(line: 2968, column: 11, scope: !6653)
!6698 = !DILocation(line: 2917, column: 57, scope: !6646)
!6699 = !DILocation(line: 2917, column: 11, scope: !6646)
!6700 = distinct !{!6700, !6651, !6701}
!6701 = !DILocation(line: 2968, column: 11, scope: !6643)
!6702 = !DILocation(line: 2969, column: 19, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6640, file: !1, line: 2969, column: 11)
!6704 = !DILocation(line: 2969, column: 16, scope: !6703)
!6705 = !DILocation(line: 2969, column: 23, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6703, file: !1, line: 2969, column: 11)
!6707 = !DILocation(line: 2969, column: 42, scope: !6706)
!6708 = !DILocation(line: 2969, column: 41, scope: !6706)
!6709 = !DILocation(line: 2969, column: 56, scope: !6706)
!6710 = !DILocation(line: 2969, column: 27, scope: !6706)
!6711 = !DILocation(line: 2969, column: 11, scope: !6703)
!6712 = !DILocation(line: 2971, column: 30, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 2970, column: 11)
!6714 = !DILocation(line: 2971, column: 44, scope: !6713)
!6715 = !DILocation(line: 2971, column: 51, scope: !6713)
!6716 = !DILocation(line: 2971, column: 15, scope: !6713)
!6717 = !DILocation(line: 2971, column: 14, scope: !6713)
!6718 = !DILocation(line: 2972, column: 22, scope: !6713)
!6719 = !DILocation(line: 2972, column: 24, scope: !6713)
!6720 = !DILocation(line: 2972, column: 23, scope: !6713)
!6721 = !DILocation(line: 2972, column: 29, scope: !6713)
!6722 = !DILocation(line: 2972, column: 13, scope: !6713)
!6723 = !DILocation(line: 2973, column: 13, scope: !6713)
!6724 = !DILocation(line: 2977, column: 17, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !1, line: 2976, column: 15)
!6726 = distinct !DILexicalBlock(scope: !6713, file: !1, line: 2973, column: 13)
!6727 = !DILocation(line: 2979, column: 17, scope: !6725)
!6728 = !DILocation(line: 2983, column: 17, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6726, file: !1, line: 2982, column: 15)
!6730 = !DILocation(line: 2985, column: 17, scope: !6729)
!6731 = !DILocation(line: 2989, column: 17, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6726, file: !1, line: 2988, column: 15)
!6733 = !DILocation(line: 2991, column: 18, scope: !6732)
!6734 = !DILocation(line: 2992, column: 17, scope: !6732)
!6735 = !DILocation(line: 2995, column: 16, scope: !6713)
!6736 = !DILocation(line: 2995, column: 30, scope: !6713)
!6737 = !DILocation(line: 2995, column: 14, scope: !6713)
!6738 = !DILocation(line: 2996, column: 11, scope: !6713)
!6739 = !DILocation(line: 2969, column: 65, scope: !6706)
!6740 = !DILocation(line: 2969, column: 11, scope: !6706)
!6741 = distinct !{!6741, !6711, !6742}
!6742 = !DILocation(line: 2996, column: 11, scope: !6703)
!6743 = !DILocation(line: 2997, column: 15, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6640, file: !1, line: 2997, column: 15)
!6745 = !DILocation(line: 2997, column: 19, scope: !6744)
!6746 = !DILocation(line: 2997, column: 15, scope: !6640)
!6747 = !DILocation(line: 2998, column: 14, scope: !6744)
!6748 = !DILocation(line: 2998, column: 13, scope: !6744)
!6749 = !DILocation(line: 2999, column: 11, scope: !6640)
!6750 = !DILocation(line: 3001, column: 11, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6630, file: !1, line: 3001, column: 11)
!6752 = !DILocation(line: 3001, column: 25, scope: !6751)
!6753 = !DILocation(line: 3001, column: 33, scope: !6751)
!6754 = !DILocation(line: 3001, column: 11, scope: !6630)
!6755 = !DILocation(line: 3003, column: 17, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 3003, column: 11)
!6757 = distinct !DILexicalBlock(scope: !6751, file: !1, line: 3002, column: 9)
!6758 = !DILocation(line: 3003, column: 16, scope: !6756)
!6759 = !DILocation(line: 3003, column: 21, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6756, file: !1, line: 3003, column: 11)
!6761 = !DILocation(line: 3003, column: 35, scope: !6760)
!6762 = !DILocation(line: 3003, column: 23, scope: !6760)
!6763 = !DILocation(line: 3003, column: 11, scope: !6756)
!6764 = !DILocation(line: 3005, column: 36, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6760, file: !1, line: 3004, column: 11)
!6766 = !DILocation(line: 3005, column: 49, scope: !6765)
!6767 = !DILocation(line: 3005, column: 15, scope: !6765)
!6768 = !DILocation(line: 3005, column: 14, scope: !6765)
!6769 = !DILocation(line: 3006, column: 13, scope: !6765)
!6770 = !DILocation(line: 3007, column: 36, scope: !6765)
!6771 = !DILocation(line: 3007, column: 49, scope: !6765)
!6772 = !DILocation(line: 3007, column: 15, scope: !6765)
!6773 = !DILocation(line: 3007, column: 14, scope: !6765)
!6774 = !DILocation(line: 3008, column: 13, scope: !6765)
!6775 = !DILocation(line: 3009, column: 36, scope: !6765)
!6776 = !DILocation(line: 3009, column: 49, scope: !6765)
!6777 = !DILocation(line: 3009, column: 15, scope: !6765)
!6778 = !DILocation(line: 3009, column: 14, scope: !6765)
!6779 = !DILocation(line: 3010, column: 13, scope: !6765)
!6780 = !DILocation(line: 3011, column: 14, scope: !6765)
!6781 = !DILocation(line: 3012, column: 11, scope: !6765)
!6782 = !DILocation(line: 3003, column: 51, scope: !6760)
!6783 = !DILocation(line: 3003, column: 11, scope: !6760)
!6784 = distinct !{!6784, !6763, !6785}
!6785 = !DILocation(line: 3012, column: 11, scope: !6756)
!6786 = !DILocation(line: 3013, column: 11, scope: !6757)
!6787 = !DILocation(line: 3015, column: 13, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6630, file: !1, line: 3015, column: 7)
!6789 = !DILocation(line: 3015, column: 12, scope: !6788)
!6790 = !DILocation(line: 3015, column: 17, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6788, file: !1, line: 3015, column: 7)
!6792 = !DILocation(line: 3015, column: 31, scope: !6791)
!6793 = !DILocation(line: 3015, column: 19, scope: !6791)
!6794 = !DILocation(line: 3015, column: 7, scope: !6788)
!6795 = !DILocation(line: 3017, column: 28, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6791, file: !1, line: 3016, column: 7)
!6797 = !DILocation(line: 3017, column: 41, scope: !6796)
!6798 = !DILocation(line: 3017, column: 11, scope: !6796)
!6799 = !DILocation(line: 3017, column: 10, scope: !6796)
!6800 = !DILocation(line: 3018, column: 9, scope: !6796)
!6801 = !DILocation(line: 3019, column: 28, scope: !6796)
!6802 = !DILocation(line: 3019, column: 41, scope: !6796)
!6803 = !DILocation(line: 3019, column: 11, scope: !6796)
!6804 = !DILocation(line: 3019, column: 10, scope: !6796)
!6805 = !DILocation(line: 3020, column: 9, scope: !6796)
!6806 = !DILocation(line: 3021, column: 28, scope: !6796)
!6807 = !DILocation(line: 3021, column: 41, scope: !6796)
!6808 = !DILocation(line: 3021, column: 11, scope: !6796)
!6809 = !DILocation(line: 3021, column: 10, scope: !6796)
!6810 = !DILocation(line: 3022, column: 9, scope: !6796)
!6811 = !DILocation(line: 3023, column: 10, scope: !6796)
!6812 = !DILocation(line: 3024, column: 7, scope: !6796)
!6813 = !DILocation(line: 3015, column: 47, scope: !6791)
!6814 = !DILocation(line: 3015, column: 7, scope: !6791)
!6815 = distinct !{!6815, !6794, !6816}
!6816 = !DILocation(line: 3024, column: 7, scope: !6788)
!6817 = !DILocation(line: 3025, column: 7, scope: !6630)
!6818 = !DILocalVariable(name: "pixel", scope: !6819, file: !1, line: 3030, type: !494)
!6819 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 3028, column: 5)
!6820 = !DILocation(line: 3030, column: 9, scope: !6819)
!6821 = !DILocation(line: 3032, column: 11, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6819, file: !1, line: 3032, column: 11)
!6823 = !DILocation(line: 3032, column: 25, scope: !6822)
!6824 = !DILocation(line: 3032, column: 32, scope: !6822)
!6825 = !DILocation(line: 3032, column: 11, scope: !6819)
!6826 = !DILocation(line: 3034, column: 17, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !1, line: 3034, column: 11)
!6828 = distinct !DILexicalBlock(scope: !6822, file: !1, line: 3033, column: 9)
!6829 = !DILocation(line: 3034, column: 16, scope: !6827)
!6830 = !DILocation(line: 3034, column: 21, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 3034, column: 11)
!6832 = !DILocation(line: 3034, column: 35, scope: !6831)
!6833 = !DILocation(line: 3034, column: 23, scope: !6831)
!6834 = !DILocation(line: 3034, column: 11, scope: !6827)
!6835 = !DILocation(line: 3036, column: 30, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6831, file: !1, line: 3035, column: 11)
!6837 = !DILocation(line: 3036, column: 44, scope: !6836)
!6838 = !DILocation(line: 3036, column: 51, scope: !6836)
!6839 = !DILocation(line: 3036, column: 15, scope: !6836)
!6840 = !DILocation(line: 3036, column: 14, scope: !6836)
!6841 = !DILocation(line: 3037, column: 13, scope: !6836)
!6842 = !DILocation(line: 3039, column: 30, scope: !6836)
!6843 = !DILocation(line: 3039, column: 44, scope: !6836)
!6844 = !DILocation(line: 3039, column: 51, scope: !6836)
!6845 = !DILocation(line: 3039, column: 15, scope: !6836)
!6846 = !DILocation(line: 3039, column: 14, scope: !6836)
!6847 = !DILocation(line: 3040, column: 13, scope: !6836)
!6848 = !DILocation(line: 3042, column: 30, scope: !6836)
!6849 = !DILocation(line: 3042, column: 44, scope: !6836)
!6850 = !DILocation(line: 3042, column: 51, scope: !6836)
!6851 = !DILocation(line: 3042, column: 15, scope: !6836)
!6852 = !DILocation(line: 3042, column: 14, scope: !6836)
!6853 = !DILocation(line: 3043, column: 13, scope: !6836)
!6854 = !DILocation(line: 3045, column: 16, scope: !6836)
!6855 = !DILocation(line: 3045, column: 30, scope: !6836)
!6856 = !DILocation(line: 3045, column: 14, scope: !6836)
!6857 = !DILocation(line: 3046, column: 14, scope: !6836)
!6858 = !DILocation(line: 3047, column: 11, scope: !6836)
!6859 = !DILocation(line: 3034, column: 51, scope: !6831)
!6860 = !DILocation(line: 3034, column: 11, scope: !6831)
!6861 = distinct !{!6861, !6834, !6862}
!6862 = !DILocation(line: 3047, column: 11, scope: !6827)
!6863 = !DILocation(line: 3048, column: 11, scope: !6828)
!6864 = !DILocation(line: 3050, column: 13, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6819, file: !1, line: 3050, column: 7)
!6866 = !DILocation(line: 3050, column: 12, scope: !6865)
!6867 = !DILocation(line: 3050, column: 17, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6865, file: !1, line: 3050, column: 7)
!6869 = !DILocation(line: 3050, column: 31, scope: !6868)
!6870 = !DILocation(line: 3050, column: 19, scope: !6868)
!6871 = !DILocation(line: 3050, column: 7, scope: !6865)
!6872 = !DILocation(line: 3052, column: 26, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6868, file: !1, line: 3051, column: 7)
!6874 = !DILocation(line: 3052, column: 40, scope: !6873)
!6875 = !DILocation(line: 3052, column: 47, scope: !6873)
!6876 = !DILocation(line: 3052, column: 11, scope: !6873)
!6877 = !DILocation(line: 3052, column: 10, scope: !6873)
!6878 = !DILocation(line: 3053, column: 9, scope: !6873)
!6879 = !DILocation(line: 3054, column: 26, scope: !6873)
!6880 = !DILocation(line: 3054, column: 40, scope: !6873)
!6881 = !DILocation(line: 3054, column: 47, scope: !6873)
!6882 = !DILocation(line: 3054, column: 11, scope: !6873)
!6883 = !DILocation(line: 3054, column: 10, scope: !6873)
!6884 = !DILocation(line: 3055, column: 9, scope: !6873)
!6885 = !DILocation(line: 3056, column: 26, scope: !6873)
!6886 = !DILocation(line: 3056, column: 40, scope: !6873)
!6887 = !DILocation(line: 3056, column: 47, scope: !6873)
!6888 = !DILocation(line: 3056, column: 11, scope: !6873)
!6889 = !DILocation(line: 3056, column: 10, scope: !6873)
!6890 = !DILocation(line: 3057, column: 9, scope: !6873)
!6891 = !DILocation(line: 3058, column: 12, scope: !6873)
!6892 = !DILocation(line: 3058, column: 26, scope: !6873)
!6893 = !DILocation(line: 3058, column: 10, scope: !6873)
!6894 = !DILocation(line: 3059, column: 10, scope: !6873)
!6895 = !DILocation(line: 3060, column: 7, scope: !6873)
!6896 = !DILocation(line: 3050, column: 47, scope: !6868)
!6897 = !DILocation(line: 3050, column: 7, scope: !6868)
!6898 = distinct !{!6898, !6871, !6899}
!6899 = !DILocation(line: 3060, column: 7, scope: !6865)
!6900 = !DILocation(line: 3061, column: 7, scope: !6819)
!6901 = !DILocalVariable(name: "pixel", scope: !6902, file: !1, line: 3066, type: !5)
!6902 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 3064, column: 5)
!6903 = !DILocation(line: 3066, column: 9, scope: !6902)
!6904 = !DILocation(line: 3068, column: 11, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6902, file: !1, line: 3068, column: 11)
!6906 = !DILocation(line: 3068, column: 25, scope: !6905)
!6907 = !DILocation(line: 3068, column: 32, scope: !6905)
!6908 = !DILocation(line: 3068, column: 11, scope: !6902)
!6909 = !DILocalVariable(name: "pixel", scope: !6910, file: !1, line: 3071, type: !496)
!6910 = distinct !DILexicalBlock(scope: !6905, file: !1, line: 3069, column: 9)
!6911 = !DILocation(line: 3071, column: 13, scope: !6910)
!6912 = !DILocation(line: 3073, column: 17, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6910, file: !1, line: 3073, column: 11)
!6914 = !DILocation(line: 3073, column: 16, scope: !6913)
!6915 = !DILocation(line: 3073, column: 21, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !1, line: 3073, column: 11)
!6917 = !DILocation(line: 3073, column: 35, scope: !6916)
!6918 = !DILocation(line: 3073, column: 23, scope: !6916)
!6919 = !DILocation(line: 3073, column: 11, scope: !6913)
!6920 = !DILocation(line: 3075, column: 30, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6916, file: !1, line: 3074, column: 11)
!6922 = !DILocation(line: 3075, column: 43, scope: !6921)
!6923 = !DILocation(line: 3075, column: 15, scope: !6921)
!6924 = !DILocation(line: 3075, column: 14, scope: !6921)
!6925 = !DILocation(line: 3076, column: 13, scope: !6921)
!6926 = !DILocation(line: 3077, column: 30, scope: !6921)
!6927 = !DILocation(line: 3077, column: 43, scope: !6921)
!6928 = !DILocation(line: 3077, column: 15, scope: !6921)
!6929 = !DILocation(line: 3077, column: 14, scope: !6921)
!6930 = !DILocation(line: 3078, column: 13, scope: !6921)
!6931 = !DILocation(line: 3079, column: 30, scope: !6921)
!6932 = !DILocation(line: 3079, column: 43, scope: !6921)
!6933 = !DILocation(line: 3079, column: 15, scope: !6921)
!6934 = !DILocation(line: 3079, column: 14, scope: !6921)
!6935 = !DILocation(line: 3080, column: 13, scope: !6921)
!6936 = !DILocation(line: 3081, column: 16, scope: !6921)
!6937 = !DILocation(line: 3081, column: 30, scope: !6921)
!6938 = !DILocation(line: 3081, column: 14, scope: !6921)
!6939 = !DILocation(line: 3082, column: 14, scope: !6921)
!6940 = !DILocation(line: 3083, column: 11, scope: !6921)
!6941 = !DILocation(line: 3073, column: 51, scope: !6916)
!6942 = !DILocation(line: 3073, column: 11, scope: !6916)
!6943 = distinct !{!6943, !6919, !6944}
!6944 = !DILocation(line: 3083, column: 11, scope: !6913)
!6945 = !DILocation(line: 3084, column: 11, scope: !6910)
!6946 = !DILocation(line: 3086, column: 13, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6902, file: !1, line: 3086, column: 7)
!6948 = !DILocation(line: 3086, column: 12, scope: !6947)
!6949 = !DILocation(line: 3086, column: 17, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6947, file: !1, line: 3086, column: 7)
!6951 = !DILocation(line: 3086, column: 31, scope: !6950)
!6952 = !DILocation(line: 3086, column: 19, scope: !6950)
!6953 = !DILocation(line: 3086, column: 7, scope: !6947)
!6954 = !DILocation(line: 3088, column: 25, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6950, file: !1, line: 3087, column: 7)
!6956 = !DILocation(line: 3088, column: 39, scope: !6955)
!6957 = !DILocation(line: 3088, column: 46, scope: !6955)
!6958 = !DILocation(line: 3088, column: 11, scope: !6955)
!6959 = !DILocation(line: 3088, column: 10, scope: !6955)
!6960 = !DILocation(line: 3089, column: 9, scope: !6955)
!6961 = !DILocation(line: 3090, column: 25, scope: !6955)
!6962 = !DILocation(line: 3090, column: 39, scope: !6955)
!6963 = !DILocation(line: 3090, column: 46, scope: !6955)
!6964 = !DILocation(line: 3090, column: 11, scope: !6955)
!6965 = !DILocation(line: 3090, column: 10, scope: !6955)
!6966 = !DILocation(line: 3091, column: 9, scope: !6955)
!6967 = !DILocation(line: 3092, column: 25, scope: !6955)
!6968 = !DILocation(line: 3092, column: 39, scope: !6955)
!6969 = !DILocation(line: 3092, column: 46, scope: !6955)
!6970 = !DILocation(line: 3092, column: 11, scope: !6955)
!6971 = !DILocation(line: 3092, column: 10, scope: !6955)
!6972 = !DILocation(line: 3093, column: 9, scope: !6955)
!6973 = !DILocation(line: 3094, column: 12, scope: !6955)
!6974 = !DILocation(line: 3094, column: 26, scope: !6955)
!6975 = !DILocation(line: 3094, column: 10, scope: !6955)
!6976 = !DILocation(line: 3095, column: 10, scope: !6955)
!6977 = !DILocation(line: 3096, column: 7, scope: !6955)
!6978 = !DILocation(line: 3086, column: 47, scope: !6950)
!6979 = !DILocation(line: 3086, column: 7, scope: !6950)
!6980 = distinct !{!6980, !6953, !6981}
!6981 = !DILocation(line: 3096, column: 7, scope: !6947)
!6982 = !DILocation(line: 3097, column: 7, scope: !6902)
!6983 = !DILocation(line: 3101, column: 11, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !1, line: 3101, column: 11)
!6985 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 3100, column: 5)
!6986 = !DILocation(line: 3101, column: 25, scope: !6984)
!6987 = !DILocation(line: 3101, column: 32, scope: !6984)
!6988 = !DILocation(line: 3101, column: 11, scope: !6985)
!6989 = !DILocalVariable(name: "pixel", scope: !6990, file: !1, line: 3104, type: !456)
!6990 = distinct !DILexicalBlock(scope: !6984, file: !1, line: 3102, column: 9)
!6991 = !DILocation(line: 3104, column: 13, scope: !6990)
!6992 = !DILocation(line: 3106, column: 17, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6990, file: !1, line: 3106, column: 11)
!6994 = !DILocation(line: 3106, column: 16, scope: !6993)
!6995 = !DILocation(line: 3106, column: 21, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !1, line: 3106, column: 11)
!6997 = !DILocation(line: 3106, column: 35, scope: !6996)
!6998 = !DILocation(line: 3106, column: 23, scope: !6996)
!6999 = !DILocation(line: 3106, column: 11, scope: !6993)
!7000 = !DILocation(line: 3108, column: 31, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !1, line: 3107, column: 11)
!7002 = !DILocation(line: 3108, column: 44, scope: !7001)
!7003 = !DILocation(line: 3108, column: 15, scope: !7001)
!7004 = !DILocation(line: 3108, column: 14, scope: !7001)
!7005 = !DILocation(line: 3109, column: 13, scope: !7001)
!7006 = !DILocation(line: 3110, column: 31, scope: !7001)
!7007 = !DILocation(line: 3110, column: 44, scope: !7001)
!7008 = !DILocation(line: 3110, column: 15, scope: !7001)
!7009 = !DILocation(line: 3110, column: 14, scope: !7001)
!7010 = !DILocation(line: 3111, column: 13, scope: !7001)
!7011 = !DILocation(line: 3112, column: 31, scope: !7001)
!7012 = !DILocation(line: 3112, column: 44, scope: !7001)
!7013 = !DILocation(line: 3112, column: 15, scope: !7001)
!7014 = !DILocation(line: 3112, column: 14, scope: !7001)
!7015 = !DILocation(line: 3113, column: 13, scope: !7001)
!7016 = !DILocation(line: 3114, column: 16, scope: !7001)
!7017 = !DILocation(line: 3114, column: 30, scope: !7001)
!7018 = !DILocation(line: 3114, column: 14, scope: !7001)
!7019 = !DILocation(line: 3115, column: 14, scope: !7001)
!7020 = !DILocation(line: 3116, column: 11, scope: !7001)
!7021 = !DILocation(line: 3106, column: 51, scope: !6996)
!7022 = !DILocation(line: 3106, column: 11, scope: !6996)
!7023 = distinct !{!7023, !6999, !7024}
!7024 = !DILocation(line: 3116, column: 11, scope: !6993)
!7025 = !DILocation(line: 3117, column: 11, scope: !6990)
!7026 = !DILocation(line: 3119, column: 5, scope: !6985)
!7027 = !DILocation(line: 3122, column: 29, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !6489, file: !1, line: 3121, column: 5)
!7029 = !DILocation(line: 3122, column: 43, scope: !7028)
!7030 = !DILocation(line: 3122, column: 13, scope: !7028)
!7031 = !DILocation(line: 3122, column: 12, scope: !7028)
!7032 = !DILocation(line: 3123, column: 13, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7028, file: !1, line: 3123, column: 7)
!7034 = !DILocation(line: 3123, column: 12, scope: !7033)
!7035 = !DILocation(line: 3123, column: 17, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !1, line: 3123, column: 7)
!7037 = !DILocation(line: 3123, column: 31, scope: !7036)
!7038 = !DILocation(line: 3123, column: 19, scope: !7036)
!7039 = !DILocation(line: 3123, column: 7, scope: !7033)
!7040 = !DILocation(line: 3125, column: 28, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !1, line: 3124, column: 7)
!7042 = !DILocation(line: 3125, column: 41, scope: !7041)
!7043 = !DILocation(line: 3125, column: 11, scope: !7041)
!7044 = !DILocation(line: 3125, column: 10, scope: !7041)
!7045 = !DILocation(line: 3126, column: 9, scope: !7041)
!7046 = !DILocation(line: 3127, column: 28, scope: !7041)
!7047 = !DILocation(line: 3127, column: 41, scope: !7041)
!7048 = !DILocation(line: 3127, column: 11, scope: !7041)
!7049 = !DILocation(line: 3127, column: 10, scope: !7041)
!7050 = !DILocation(line: 3128, column: 9, scope: !7041)
!7051 = !DILocation(line: 3129, column: 28, scope: !7041)
!7052 = !DILocation(line: 3129, column: 41, scope: !7041)
!7053 = !DILocation(line: 3129, column: 11, scope: !7041)
!7054 = !DILocation(line: 3129, column: 10, scope: !7041)
!7055 = !DILocation(line: 3130, column: 9, scope: !7041)
!7056 = !DILocation(line: 3131, column: 10, scope: !7041)
!7057 = !DILocation(line: 3132, column: 7, scope: !7041)
!7058 = !DILocation(line: 3123, column: 47, scope: !7036)
!7059 = !DILocation(line: 3123, column: 7, scope: !7036)
!7060 = distinct !{!7060, !7039, !7061}
!7061 = !DILocation(line: 3132, column: 7, scope: !7033)
!7062 = !DILocation(line: 3133, column: 7, scope: !7028)
!7063 = !DILocation(line: 3136, column: 1, scope: !6467)
!7064 = distinct !DISubprogram(name: "ImportRGBAQuantum", scope: !1, file: !1, line: 3138, type: !1062, scopeLine: 3141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7065 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !7064, file: !1, line: 3138, type: !444)
!7066 = !DILocation(line: 3138, column: 44, scope: !7064)
!7067 = !DILocalVariable(name: "number_pixels", arg: 2, scope: !7064, file: !1, line: 3139, type: !638)
!7068 = !DILocation(line: 3139, column: 24, scope: !7064)
!7069 = !DILocalVariable(name: "p", arg: 3, scope: !7064, file: !1, line: 3139, type: !717)
!7070 = !DILocation(line: 3139, column: 68, scope: !7064)
!7071 = !DILocalVariable(name: "q", arg: 4, scope: !7064, file: !1, line: 3140, type: !742)
!7072 = !DILocation(line: 3140, column: 25, scope: !7064)
!7073 = !DILocalVariable(name: "range", scope: !7064, file: !1, line: 3143, type: !501)
!7074 = !DILocation(line: 3143, column: 5, scope: !7064)
!7075 = !DILocalVariable(name: "x", scope: !7064, file: !1, line: 3146, type: !488)
!7076 = !DILocation(line: 3146, column: 5, scope: !7064)
!7077 = !DILocalVariable(name: "pixel", scope: !7064, file: !1, line: 3149, type: !5)
!7078 = !DILocation(line: 3149, column: 5, scope: !7064)
!7079 = !DILocation(line: 3151, column: 11, scope: !7064)
!7080 = !DILocation(line: 3151, column: 25, scope: !7064)
!7081 = !DILocation(line: 3151, column: 3, scope: !7064)
!7082 = !DILocalVariable(name: "pixel", scope: !7083, file: !1, line: 3156, type: !438)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3154, column: 5)
!7084 = distinct !DILexicalBlock(scope: !7064, file: !1, line: 3152, column: 3)
!7085 = !DILocation(line: 3156, column: 9, scope: !7083)
!7086 = !DILocation(line: 3158, column: 13, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7083, file: !1, line: 3158, column: 7)
!7088 = !DILocation(line: 3158, column: 12, scope: !7087)
!7089 = !DILocation(line: 3158, column: 17, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7087, file: !1, line: 3158, column: 7)
!7091 = !DILocation(line: 3158, column: 31, scope: !7090)
!7092 = !DILocation(line: 3158, column: 19, scope: !7090)
!7093 = !DILocation(line: 3158, column: 7, scope: !7087)
!7094 = !DILocation(line: 3160, column: 25, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7090, file: !1, line: 3159, column: 7)
!7096 = !DILocation(line: 3160, column: 11, scope: !7095)
!7097 = !DILocation(line: 3160, column: 10, scope: !7095)
!7098 = !DILocation(line: 3161, column: 9, scope: !7095)
!7099 = !DILocation(line: 3162, column: 25, scope: !7095)
!7100 = !DILocation(line: 3162, column: 11, scope: !7095)
!7101 = !DILocation(line: 3162, column: 10, scope: !7095)
!7102 = !DILocation(line: 3163, column: 9, scope: !7095)
!7103 = !DILocation(line: 3164, column: 25, scope: !7095)
!7104 = !DILocation(line: 3164, column: 11, scope: !7095)
!7105 = !DILocation(line: 3164, column: 10, scope: !7095)
!7106 = !DILocation(line: 3165, column: 9, scope: !7095)
!7107 = !DILocation(line: 3166, column: 25, scope: !7095)
!7108 = !DILocation(line: 3166, column: 11, scope: !7095)
!7109 = !DILocation(line: 3166, column: 10, scope: !7095)
!7110 = !DILocation(line: 3167, column: 9, scope: !7095)
!7111 = !DILocation(line: 3168, column: 12, scope: !7095)
!7112 = !DILocation(line: 3168, column: 26, scope: !7095)
!7113 = !DILocation(line: 3168, column: 10, scope: !7095)
!7114 = !DILocation(line: 3169, column: 10, scope: !7095)
!7115 = !DILocation(line: 3170, column: 7, scope: !7095)
!7116 = !DILocation(line: 3158, column: 47, scope: !7090)
!7117 = !DILocation(line: 3158, column: 7, scope: !7090)
!7118 = distinct !{!7118, !7093, !7119}
!7119 = !DILocation(line: 3170, column: 7, scope: !7087)
!7120 = !DILocation(line: 3171, column: 7, scope: !7083)
!7121 = !DILocation(line: 3175, column: 12, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3174, column: 5)
!7123 = !DILocation(line: 3176, column: 11, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3176, column: 11)
!7125 = !DILocation(line: 3176, column: 25, scope: !7124)
!7126 = !DILocation(line: 3176, column: 30, scope: !7124)
!7127 = !DILocation(line: 3176, column: 11, scope: !7122)
!7128 = !DILocalVariable(name: "i", scope: !7129, file: !1, line: 3179, type: !488)
!7129 = distinct !DILexicalBlock(scope: !7124, file: !1, line: 3177, column: 9)
!7130 = !DILocation(line: 3179, column: 13, scope: !7129)
!7131 = !DILocalVariable(name: "quantum", scope: !7129, file: !1, line: 3182, type: !450)
!7132 = !DILocation(line: 3182, column: 13, scope: !7129)
!7133 = !DILocalVariable(name: "n", scope: !7129, file: !1, line: 3185, type: !488)
!7134 = !DILocation(line: 3185, column: 13, scope: !7129)
!7135 = !DILocation(line: 3187, column: 12, scope: !7129)
!7136 = !DILocation(line: 3188, column: 18, scope: !7129)
!7137 = !DILocation(line: 3189, column: 17, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7129, file: !1, line: 3189, column: 11)
!7139 = !DILocation(line: 3189, column: 16, scope: !7138)
!7140 = !DILocation(line: 3189, column: 21, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !1, line: 3189, column: 11)
!7142 = !DILocation(line: 3189, column: 35, scope: !7141)
!7143 = !DILocation(line: 3189, column: 23, scope: !7141)
!7144 = !DILocation(line: 3189, column: 11, scope: !7138)
!7145 = !DILocation(line: 3191, column: 19, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !1, line: 3191, column: 13)
!7147 = distinct !DILexicalBlock(scope: !7141, file: !1, line: 3190, column: 11)
!7148 = !DILocation(line: 3191, column: 18, scope: !7146)
!7149 = !DILocation(line: 3191, column: 23, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7146, file: !1, line: 3191, column: 13)
!7151 = !DILocation(line: 3191, column: 25, scope: !7150)
!7152 = !DILocation(line: 3191, column: 13, scope: !7146)
!7153 = !DILocation(line: 3193, column: 23, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7150, file: !1, line: 3192, column: 13)
!7155 = !DILocation(line: 3193, column: 25, scope: !7154)
!7156 = !DILocation(line: 3193, column: 15, scope: !7154)
!7157 = !DILocation(line: 3197, column: 35, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !1, line: 3196, column: 17)
!7159 = distinct !DILexicalBlock(scope: !7154, file: !1, line: 3194, column: 15)
!7160 = !DILocation(line: 3197, column: 49, scope: !7158)
!7161 = !DILocation(line: 3197, column: 56, scope: !7158)
!7162 = !DILocation(line: 3197, column: 21, scope: !7158)
!7163 = !DILocation(line: 3197, column: 20, scope: !7158)
!7164 = !DILocation(line: 3199, column: 24, scope: !7158)
!7165 = !DILocation(line: 3199, column: 30, scope: !7158)
!7166 = !DILocation(line: 3199, column: 37, scope: !7158)
!7167 = !DILocation(line: 3199, column: 46, scope: !7158)
!7168 = !DILocation(line: 3198, column: 57, scope: !7158)
!7169 = !DILocation(line: 3198, column: 37, scope: !7158)
!7170 = !DILocation(line: 3198, column: 27, scope: !7158)
!7171 = !DILocation(line: 3198, column: 26, scope: !7158)
!7172 = !DILocation(line: 3200, column: 19, scope: !7158)
!7173 = !DILocation(line: 3205, column: 24, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7159, file: !1, line: 3203, column: 17)
!7175 = !DILocation(line: 3205, column: 30, scope: !7174)
!7176 = !DILocation(line: 3205, column: 37, scope: !7174)
!7177 = !DILocation(line: 3205, column: 46, scope: !7174)
!7178 = !DILocation(line: 3204, column: 57, scope: !7174)
!7179 = !DILocation(line: 3204, column: 37, scope: !7174)
!7180 = !DILocation(line: 3204, column: 27, scope: !7174)
!7181 = !DILocation(line: 3204, column: 26, scope: !7174)
!7182 = !DILocation(line: 3206, column: 19, scope: !7174)
!7183 = !DILocation(line: 3211, column: 24, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7159, file: !1, line: 3209, column: 17)
!7185 = !DILocation(line: 3211, column: 30, scope: !7184)
!7186 = !DILocation(line: 3211, column: 36, scope: !7184)
!7187 = !DILocation(line: 3211, column: 45, scope: !7184)
!7188 = !DILocation(line: 3210, column: 57, scope: !7184)
!7189 = !DILocation(line: 3210, column: 37, scope: !7184)
!7190 = !DILocation(line: 3210, column: 27, scope: !7184)
!7191 = !DILocation(line: 3210, column: 26, scope: !7184)
!7192 = !DILocation(line: 3212, column: 19, scope: !7184)
!7193 = !DILocation(line: 3215, column: 23, scope: !7154)
!7194 = !DILocation(line: 3215, column: 15, scope: !7154)
!7195 = !DILocation(line: 3217, column: 25, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7154, file: !1, line: 3216, column: 15)
!7197 = !DILocation(line: 3217, column: 49, scope: !7196)
!7198 = !DILocation(line: 3218, column: 25, scope: !7196)
!7199 = !DILocation(line: 3218, column: 51, scope: !7196)
!7200 = !DILocation(line: 3219, column: 25, scope: !7196)
!7201 = !DILocation(line: 3219, column: 50, scope: !7196)
!7202 = !DILocation(line: 3220, column: 25, scope: !7196)
!7203 = !DILocation(line: 3220, column: 51, scope: !7196)
!7204 = !DILocation(line: 3222, column: 16, scope: !7154)
!7205 = !DILocation(line: 3223, column: 13, scope: !7154)
!7206 = !DILocation(line: 3191, column: 31, scope: !7150)
!7207 = !DILocation(line: 3191, column: 13, scope: !7150)
!7208 = distinct !{!7208, !7152, !7209}
!7209 = !DILocation(line: 3223, column: 13, scope: !7146)
!7210 = !DILocation(line: 3224, column: 16, scope: !7147)
!7211 = !DILocation(line: 3224, column: 30, scope: !7147)
!7212 = !DILocation(line: 3224, column: 14, scope: !7147)
!7213 = !DILocation(line: 3225, column: 14, scope: !7147)
!7214 = !DILocation(line: 3226, column: 11, scope: !7147)
!7215 = !DILocation(line: 3189, column: 51, scope: !7141)
!7216 = !DILocation(line: 3189, column: 11, scope: !7141)
!7217 = distinct !{!7217, !7144, !7218}
!7218 = !DILocation(line: 3226, column: 11, scope: !7138)
!7219 = !DILocation(line: 3227, column: 11, scope: !7129)
!7220 = !DILocation(line: 3229, column: 13, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7122, file: !1, line: 3229, column: 7)
!7222 = !DILocation(line: 3229, column: 12, scope: !7221)
!7223 = !DILocation(line: 3229, column: 17, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7221, file: !1, line: 3229, column: 7)
!7225 = !DILocation(line: 3229, column: 31, scope: !7224)
!7226 = !DILocation(line: 3229, column: 19, scope: !7224)
!7227 = !DILocation(line: 3229, column: 7, scope: !7221)
!7228 = !DILocation(line: 3231, column: 28, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7224, file: !1, line: 3230, column: 7)
!7230 = !DILocation(line: 3231, column: 41, scope: !7229)
!7231 = !DILocation(line: 3231, column: 11, scope: !7229)
!7232 = !DILocation(line: 3231, column: 10, scope: !7229)
!7233 = !DILocation(line: 3232, column: 9, scope: !7229)
!7234 = !DILocation(line: 3233, column: 28, scope: !7229)
!7235 = !DILocation(line: 3233, column: 41, scope: !7229)
!7236 = !DILocation(line: 3233, column: 11, scope: !7229)
!7237 = !DILocation(line: 3233, column: 10, scope: !7229)
!7238 = !DILocation(line: 3234, column: 9, scope: !7229)
!7239 = !DILocation(line: 3235, column: 28, scope: !7229)
!7240 = !DILocation(line: 3235, column: 41, scope: !7229)
!7241 = !DILocation(line: 3235, column: 11, scope: !7229)
!7242 = !DILocation(line: 3235, column: 10, scope: !7229)
!7243 = !DILocation(line: 3236, column: 9, scope: !7229)
!7244 = !DILocation(line: 3237, column: 28, scope: !7229)
!7245 = !DILocation(line: 3237, column: 41, scope: !7229)
!7246 = !DILocation(line: 3237, column: 11, scope: !7229)
!7247 = !DILocation(line: 3237, column: 10, scope: !7229)
!7248 = !DILocation(line: 3238, column: 9, scope: !7229)
!7249 = !DILocation(line: 3239, column: 10, scope: !7229)
!7250 = !DILocation(line: 3240, column: 7, scope: !7229)
!7251 = !DILocation(line: 3229, column: 47, scope: !7224)
!7252 = !DILocation(line: 3229, column: 7, scope: !7224)
!7253 = distinct !{!7253, !7227, !7254}
!7254 = !DILocation(line: 3240, column: 7, scope: !7221)
!7255 = !DILocation(line: 3241, column: 7, scope: !7122)
!7256 = !DILocalVariable(name: "pixel", scope: !7257, file: !1, line: 3246, type: !494)
!7257 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3244, column: 5)
!7258 = !DILocation(line: 3246, column: 9, scope: !7257)
!7259 = !DILocation(line: 3248, column: 11, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7257, file: !1, line: 3248, column: 11)
!7261 = !DILocation(line: 3248, column: 25, scope: !7260)
!7262 = !DILocation(line: 3248, column: 32, scope: !7260)
!7263 = !DILocation(line: 3248, column: 11, scope: !7257)
!7264 = !DILocation(line: 3250, column: 17, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !1, line: 3250, column: 11)
!7266 = distinct !DILexicalBlock(scope: !7260, file: !1, line: 3249, column: 9)
!7267 = !DILocation(line: 3250, column: 16, scope: !7265)
!7268 = !DILocation(line: 3250, column: 21, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7265, file: !1, line: 3250, column: 11)
!7270 = !DILocation(line: 3250, column: 35, scope: !7269)
!7271 = !DILocation(line: 3250, column: 23, scope: !7269)
!7272 = !DILocation(line: 3250, column: 11, scope: !7265)
!7273 = !DILocation(line: 3252, column: 30, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7269, file: !1, line: 3251, column: 11)
!7275 = !DILocation(line: 3252, column: 44, scope: !7274)
!7276 = !DILocation(line: 3252, column: 51, scope: !7274)
!7277 = !DILocation(line: 3252, column: 15, scope: !7274)
!7278 = !DILocation(line: 3252, column: 14, scope: !7274)
!7279 = !DILocation(line: 3253, column: 13, scope: !7274)
!7280 = !DILocation(line: 3255, column: 30, scope: !7274)
!7281 = !DILocation(line: 3255, column: 44, scope: !7274)
!7282 = !DILocation(line: 3255, column: 51, scope: !7274)
!7283 = !DILocation(line: 3255, column: 15, scope: !7274)
!7284 = !DILocation(line: 3255, column: 14, scope: !7274)
!7285 = !DILocation(line: 3256, column: 13, scope: !7274)
!7286 = !DILocation(line: 3258, column: 30, scope: !7274)
!7287 = !DILocation(line: 3258, column: 44, scope: !7274)
!7288 = !DILocation(line: 3258, column: 51, scope: !7274)
!7289 = !DILocation(line: 3258, column: 15, scope: !7274)
!7290 = !DILocation(line: 3258, column: 14, scope: !7274)
!7291 = !DILocation(line: 3259, column: 13, scope: !7274)
!7292 = !DILocation(line: 3261, column: 30, scope: !7274)
!7293 = !DILocation(line: 3261, column: 44, scope: !7274)
!7294 = !DILocation(line: 3261, column: 51, scope: !7274)
!7295 = !DILocation(line: 3261, column: 15, scope: !7274)
!7296 = !DILocation(line: 3261, column: 14, scope: !7274)
!7297 = !DILocation(line: 3262, column: 13, scope: !7274)
!7298 = !DILocation(line: 3264, column: 16, scope: !7274)
!7299 = !DILocation(line: 3264, column: 30, scope: !7274)
!7300 = !DILocation(line: 3264, column: 14, scope: !7274)
!7301 = !DILocation(line: 3265, column: 14, scope: !7274)
!7302 = !DILocation(line: 3266, column: 11, scope: !7274)
!7303 = !DILocation(line: 3250, column: 51, scope: !7269)
!7304 = !DILocation(line: 3250, column: 11, scope: !7269)
!7305 = distinct !{!7305, !7272, !7306}
!7306 = !DILocation(line: 3266, column: 11, scope: !7265)
!7307 = !DILocation(line: 3267, column: 11, scope: !7266)
!7308 = !DILocation(line: 3269, column: 13, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7257, file: !1, line: 3269, column: 7)
!7310 = !DILocation(line: 3269, column: 12, scope: !7309)
!7311 = !DILocation(line: 3269, column: 17, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7309, file: !1, line: 3269, column: 7)
!7313 = !DILocation(line: 3269, column: 31, scope: !7312)
!7314 = !DILocation(line: 3269, column: 19, scope: !7312)
!7315 = !DILocation(line: 3269, column: 7, scope: !7309)
!7316 = !DILocation(line: 3271, column: 26, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7312, file: !1, line: 3270, column: 7)
!7318 = !DILocation(line: 3271, column: 40, scope: !7317)
!7319 = !DILocation(line: 3271, column: 47, scope: !7317)
!7320 = !DILocation(line: 3271, column: 11, scope: !7317)
!7321 = !DILocation(line: 3271, column: 10, scope: !7317)
!7322 = !DILocation(line: 3272, column: 9, scope: !7317)
!7323 = !DILocation(line: 3273, column: 26, scope: !7317)
!7324 = !DILocation(line: 3273, column: 40, scope: !7317)
!7325 = !DILocation(line: 3273, column: 47, scope: !7317)
!7326 = !DILocation(line: 3273, column: 11, scope: !7317)
!7327 = !DILocation(line: 3273, column: 10, scope: !7317)
!7328 = !DILocation(line: 3274, column: 9, scope: !7317)
!7329 = !DILocation(line: 3275, column: 26, scope: !7317)
!7330 = !DILocation(line: 3275, column: 40, scope: !7317)
!7331 = !DILocation(line: 3275, column: 47, scope: !7317)
!7332 = !DILocation(line: 3275, column: 11, scope: !7317)
!7333 = !DILocation(line: 3275, column: 10, scope: !7317)
!7334 = !DILocation(line: 3276, column: 9, scope: !7317)
!7335 = !DILocation(line: 3277, column: 26, scope: !7317)
!7336 = !DILocation(line: 3277, column: 40, scope: !7317)
!7337 = !DILocation(line: 3277, column: 47, scope: !7317)
!7338 = !DILocation(line: 3277, column: 11, scope: !7317)
!7339 = !DILocation(line: 3277, column: 10, scope: !7317)
!7340 = !DILocation(line: 3278, column: 9, scope: !7317)
!7341 = !DILocation(line: 3279, column: 12, scope: !7317)
!7342 = !DILocation(line: 3279, column: 26, scope: !7317)
!7343 = !DILocation(line: 3279, column: 10, scope: !7317)
!7344 = !DILocation(line: 3280, column: 10, scope: !7317)
!7345 = !DILocation(line: 3281, column: 7, scope: !7317)
!7346 = !DILocation(line: 3269, column: 47, scope: !7312)
!7347 = !DILocation(line: 3269, column: 7, scope: !7312)
!7348 = distinct !{!7348, !7315, !7349}
!7349 = !DILocation(line: 3281, column: 7, scope: !7309)
!7350 = !DILocation(line: 3282, column: 7, scope: !7257)
!7351 = !DILocalVariable(name: "pixel", scope: !7352, file: !1, line: 3287, type: !5)
!7352 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3285, column: 5)
!7353 = !DILocation(line: 3287, column: 9, scope: !7352)
!7354 = !DILocation(line: 3289, column: 11, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7352, file: !1, line: 3289, column: 11)
!7356 = !DILocation(line: 3289, column: 25, scope: !7355)
!7357 = !DILocation(line: 3289, column: 32, scope: !7355)
!7358 = !DILocation(line: 3289, column: 11, scope: !7352)
!7359 = !DILocalVariable(name: "pixel", scope: !7360, file: !1, line: 3292, type: !496)
!7360 = distinct !DILexicalBlock(scope: !7355, file: !1, line: 3290, column: 9)
!7361 = !DILocation(line: 3292, column: 13, scope: !7360)
!7362 = !DILocation(line: 3294, column: 17, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7360, file: !1, line: 3294, column: 11)
!7364 = !DILocation(line: 3294, column: 16, scope: !7363)
!7365 = !DILocation(line: 3294, column: 21, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 3294, column: 11)
!7367 = !DILocation(line: 3294, column: 35, scope: !7366)
!7368 = !DILocation(line: 3294, column: 23, scope: !7366)
!7369 = !DILocation(line: 3294, column: 11, scope: !7363)
!7370 = !DILocation(line: 3296, column: 30, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7366, file: !1, line: 3295, column: 11)
!7372 = !DILocation(line: 3296, column: 43, scope: !7371)
!7373 = !DILocation(line: 3296, column: 15, scope: !7371)
!7374 = !DILocation(line: 3296, column: 14, scope: !7371)
!7375 = !DILocation(line: 3297, column: 13, scope: !7371)
!7376 = !DILocation(line: 3298, column: 30, scope: !7371)
!7377 = !DILocation(line: 3298, column: 43, scope: !7371)
!7378 = !DILocation(line: 3298, column: 15, scope: !7371)
!7379 = !DILocation(line: 3298, column: 14, scope: !7371)
!7380 = !DILocation(line: 3299, column: 13, scope: !7371)
!7381 = !DILocation(line: 3300, column: 30, scope: !7371)
!7382 = !DILocation(line: 3300, column: 43, scope: !7371)
!7383 = !DILocation(line: 3300, column: 15, scope: !7371)
!7384 = !DILocation(line: 3300, column: 14, scope: !7371)
!7385 = !DILocation(line: 3301, column: 13, scope: !7371)
!7386 = !DILocation(line: 3302, column: 30, scope: !7371)
!7387 = !DILocation(line: 3302, column: 43, scope: !7371)
!7388 = !DILocation(line: 3302, column: 15, scope: !7371)
!7389 = !DILocation(line: 3302, column: 14, scope: !7371)
!7390 = !DILocation(line: 3303, column: 13, scope: !7371)
!7391 = !DILocation(line: 3304, column: 16, scope: !7371)
!7392 = !DILocation(line: 3304, column: 30, scope: !7371)
!7393 = !DILocation(line: 3304, column: 14, scope: !7371)
!7394 = !DILocation(line: 3305, column: 14, scope: !7371)
!7395 = !DILocation(line: 3306, column: 11, scope: !7371)
!7396 = !DILocation(line: 3294, column: 51, scope: !7366)
!7397 = !DILocation(line: 3294, column: 11, scope: !7366)
!7398 = distinct !{!7398, !7369, !7399}
!7399 = !DILocation(line: 3306, column: 11, scope: !7363)
!7400 = !DILocation(line: 3307, column: 11, scope: !7360)
!7401 = !DILocation(line: 3309, column: 13, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7352, file: !1, line: 3309, column: 7)
!7403 = !DILocation(line: 3309, column: 12, scope: !7402)
!7404 = !DILocation(line: 3309, column: 17, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7402, file: !1, line: 3309, column: 7)
!7406 = !DILocation(line: 3309, column: 31, scope: !7405)
!7407 = !DILocation(line: 3309, column: 19, scope: !7405)
!7408 = !DILocation(line: 3309, column: 7, scope: !7402)
!7409 = !DILocation(line: 3311, column: 25, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7405, file: !1, line: 3310, column: 7)
!7411 = !DILocation(line: 3311, column: 39, scope: !7410)
!7412 = !DILocation(line: 3311, column: 46, scope: !7410)
!7413 = !DILocation(line: 3311, column: 11, scope: !7410)
!7414 = !DILocation(line: 3311, column: 10, scope: !7410)
!7415 = !DILocation(line: 3312, column: 9, scope: !7410)
!7416 = !DILocation(line: 3313, column: 25, scope: !7410)
!7417 = !DILocation(line: 3313, column: 39, scope: !7410)
!7418 = !DILocation(line: 3313, column: 46, scope: !7410)
!7419 = !DILocation(line: 3313, column: 11, scope: !7410)
!7420 = !DILocation(line: 3313, column: 10, scope: !7410)
!7421 = !DILocation(line: 3314, column: 9, scope: !7410)
!7422 = !DILocation(line: 3315, column: 25, scope: !7410)
!7423 = !DILocation(line: 3315, column: 39, scope: !7410)
!7424 = !DILocation(line: 3315, column: 46, scope: !7410)
!7425 = !DILocation(line: 3315, column: 11, scope: !7410)
!7426 = !DILocation(line: 3315, column: 10, scope: !7410)
!7427 = !DILocation(line: 3316, column: 9, scope: !7410)
!7428 = !DILocation(line: 3317, column: 25, scope: !7410)
!7429 = !DILocation(line: 3317, column: 39, scope: !7410)
!7430 = !DILocation(line: 3317, column: 46, scope: !7410)
!7431 = !DILocation(line: 3317, column: 11, scope: !7410)
!7432 = !DILocation(line: 3317, column: 10, scope: !7410)
!7433 = !DILocation(line: 3318, column: 9, scope: !7410)
!7434 = !DILocation(line: 3319, column: 12, scope: !7410)
!7435 = !DILocation(line: 3319, column: 26, scope: !7410)
!7436 = !DILocation(line: 3319, column: 10, scope: !7410)
!7437 = !DILocation(line: 3320, column: 10, scope: !7410)
!7438 = !DILocation(line: 3321, column: 7, scope: !7410)
!7439 = !DILocation(line: 3309, column: 47, scope: !7405)
!7440 = !DILocation(line: 3309, column: 7, scope: !7405)
!7441 = distinct !{!7441, !7408, !7442}
!7442 = !DILocation(line: 3321, column: 7, scope: !7402)
!7443 = !DILocation(line: 3322, column: 7, scope: !7352)
!7444 = !DILocation(line: 3326, column: 11, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !1, line: 3326, column: 11)
!7446 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3325, column: 5)
!7447 = !DILocation(line: 3326, column: 25, scope: !7445)
!7448 = !DILocation(line: 3326, column: 32, scope: !7445)
!7449 = !DILocation(line: 3326, column: 11, scope: !7446)
!7450 = !DILocalVariable(name: "pixel", scope: !7451, file: !1, line: 3329, type: !456)
!7451 = distinct !DILexicalBlock(scope: !7445, file: !1, line: 3327, column: 9)
!7452 = !DILocation(line: 3329, column: 13, scope: !7451)
!7453 = !DILocation(line: 3331, column: 17, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7451, file: !1, line: 3331, column: 11)
!7455 = !DILocation(line: 3331, column: 16, scope: !7454)
!7456 = !DILocation(line: 3331, column: 21, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7454, file: !1, line: 3331, column: 11)
!7458 = !DILocation(line: 3331, column: 35, scope: !7457)
!7459 = !DILocation(line: 3331, column: 23, scope: !7457)
!7460 = !DILocation(line: 3331, column: 11, scope: !7454)
!7461 = !DILocation(line: 3333, column: 31, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7457, file: !1, line: 3332, column: 11)
!7463 = !DILocation(line: 3333, column: 44, scope: !7462)
!7464 = !DILocation(line: 3333, column: 15, scope: !7462)
!7465 = !DILocation(line: 3333, column: 14, scope: !7462)
!7466 = !DILocation(line: 3334, column: 13, scope: !7462)
!7467 = !DILocation(line: 3335, column: 31, scope: !7462)
!7468 = !DILocation(line: 3335, column: 44, scope: !7462)
!7469 = !DILocation(line: 3335, column: 15, scope: !7462)
!7470 = !DILocation(line: 3335, column: 14, scope: !7462)
!7471 = !DILocation(line: 3336, column: 13, scope: !7462)
!7472 = !DILocation(line: 3337, column: 31, scope: !7462)
!7473 = !DILocation(line: 3337, column: 44, scope: !7462)
!7474 = !DILocation(line: 3337, column: 15, scope: !7462)
!7475 = !DILocation(line: 3337, column: 14, scope: !7462)
!7476 = !DILocation(line: 3338, column: 13, scope: !7462)
!7477 = !DILocation(line: 3339, column: 31, scope: !7462)
!7478 = !DILocation(line: 3339, column: 44, scope: !7462)
!7479 = !DILocation(line: 3339, column: 15, scope: !7462)
!7480 = !DILocation(line: 3339, column: 14, scope: !7462)
!7481 = !DILocation(line: 3340, column: 13, scope: !7462)
!7482 = !DILocation(line: 3341, column: 16, scope: !7462)
!7483 = !DILocation(line: 3341, column: 30, scope: !7462)
!7484 = !DILocation(line: 3341, column: 14, scope: !7462)
!7485 = !DILocation(line: 3342, column: 14, scope: !7462)
!7486 = !DILocation(line: 3343, column: 11, scope: !7462)
!7487 = !DILocation(line: 3331, column: 51, scope: !7457)
!7488 = !DILocation(line: 3331, column: 11, scope: !7457)
!7489 = distinct !{!7489, !7460, !7490}
!7490 = !DILocation(line: 3343, column: 11, scope: !7454)
!7491 = !DILocation(line: 3344, column: 11, scope: !7451)
!7492 = !DILocation(line: 3346, column: 5, scope: !7446)
!7493 = !DILocation(line: 3349, column: 29, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7084, file: !1, line: 3348, column: 5)
!7495 = !DILocation(line: 3349, column: 43, scope: !7494)
!7496 = !DILocation(line: 3349, column: 13, scope: !7494)
!7497 = !DILocation(line: 3349, column: 12, scope: !7494)
!7498 = !DILocation(line: 3350, column: 13, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7494, file: !1, line: 3350, column: 7)
!7500 = !DILocation(line: 3350, column: 12, scope: !7499)
!7501 = !DILocation(line: 3350, column: 17, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7499, file: !1, line: 3350, column: 7)
!7503 = !DILocation(line: 3350, column: 31, scope: !7502)
!7504 = !DILocation(line: 3350, column: 19, scope: !7502)
!7505 = !DILocation(line: 3350, column: 7, scope: !7499)
!7506 = !DILocation(line: 3352, column: 28, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7502, file: !1, line: 3351, column: 7)
!7508 = !DILocation(line: 3352, column: 41, scope: !7507)
!7509 = !DILocation(line: 3352, column: 11, scope: !7507)
!7510 = !DILocation(line: 3352, column: 10, scope: !7507)
!7511 = !DILocation(line: 3353, column: 9, scope: !7507)
!7512 = !DILocation(line: 3354, column: 28, scope: !7507)
!7513 = !DILocation(line: 3354, column: 41, scope: !7507)
!7514 = !DILocation(line: 3354, column: 11, scope: !7507)
!7515 = !DILocation(line: 3354, column: 10, scope: !7507)
!7516 = !DILocation(line: 3355, column: 9, scope: !7507)
!7517 = !DILocation(line: 3356, column: 28, scope: !7507)
!7518 = !DILocation(line: 3356, column: 41, scope: !7507)
!7519 = !DILocation(line: 3356, column: 11, scope: !7507)
!7520 = !DILocation(line: 3356, column: 10, scope: !7507)
!7521 = !DILocation(line: 3357, column: 9, scope: !7507)
!7522 = !DILocation(line: 3358, column: 28, scope: !7507)
!7523 = !DILocation(line: 3358, column: 41, scope: !7507)
!7524 = !DILocation(line: 3358, column: 11, scope: !7507)
!7525 = !DILocation(line: 3358, column: 10, scope: !7507)
!7526 = !DILocation(line: 3359, column: 9, scope: !7507)
!7527 = !DILocation(line: 3360, column: 10, scope: !7507)
!7528 = !DILocation(line: 3361, column: 7, scope: !7507)
!7529 = !DILocation(line: 3350, column: 47, scope: !7502)
!7530 = !DILocation(line: 3350, column: 7, scope: !7502)
!7531 = distinct !{!7531, !7505, !7532}
!7532 = !DILocation(line: 3361, column: 7, scope: !7499)
!7533 = !DILocation(line: 3362, column: 7, scope: !7494)
!7534 = !DILocation(line: 3365, column: 1, scope: !7064)
!7535 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !7536, file: !7536, line: 78, type: !7537, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7536 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7537 = !DISubroutineType(types: !7538)
!7538 = !{!456, !7539}
!7539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !456)
!7540 = !DILocalVariable(name: "x", arg: 1, scope: !7535, file: !7536, line: 78, type: !7539)
!7541 = !DILocation(line: 78, column: 57, scope: !7535)
!7542 = !DILocalVariable(name: "sign", scope: !7535, file: !7536, line: 81, type: !456)
!7543 = !DILocation(line: 81, column: 5, scope: !7535)
!7544 = !DILocation(line: 86, column: 8, scope: !7535)
!7545 = !DILocation(line: 86, column: 10, scope: !7535)
!7546 = !DILocation(line: 86, column: 7, scope: !7535)
!7547 = !DILocation(line: 87, column: 8, scope: !7548)
!7548 = distinct !DILexicalBlock(scope: !7535, file: !7536, line: 87, column: 7)
!7549 = !DILocation(line: 87, column: 13, scope: !7548)
!7550 = !DILocation(line: 87, column: 12, scope: !7548)
!7551 = !DILocation(line: 87, column: 16, scope: !7548)
!7552 = !DILocation(line: 87, column: 7, scope: !7535)
!7553 = !DILocation(line: 88, column: 16, scope: !7548)
!7554 = !DILocation(line: 88, column: 15, scope: !7548)
!7555 = !DILocation(line: 88, column: 5, scope: !7548)
!7556 = !DILocation(line: 89, column: 10, scope: !7535)
!7557 = !DILocation(line: 89, column: 14, scope: !7535)
!7558 = !DILocation(line: 89, column: 3, scope: !7535)
!7559 = !DILocation(line: 90, column: 1, scope: !7535)
!7560 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !7561, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7561 = !DISubroutineType(types: !7562)
!7562 = !{!493, !7563}
!7563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !495)
!7564 = !DILocalVariable(name: "value", arg: 1, scope: !7560, file: !147, line: 87, type: !7563)
!7565 = !DILocation(line: 87, column: 59, scope: !7560)
!7566 = !DILocation(line: 92, column: 7, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7560, file: !147, line: 92, column: 7)
!7568 = !DILocation(line: 92, column: 13, scope: !7567)
!7569 = !DILocation(line: 92, column: 7, scope: !7560)
!7570 = !DILocation(line: 93, column: 5, scope: !7567)
!7571 = !DILocation(line: 94, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7560, file: !147, line: 94, column: 7)
!7573 = !DILocation(line: 94, column: 13, scope: !7572)
!7574 = !DILocation(line: 94, column: 7, scope: !7560)
!7575 = !DILocation(line: 95, column: 5, scope: !7572)
!7576 = !DILocation(line: 96, column: 21, scope: !7560)
!7577 = !DILocation(line: 96, column: 26, scope: !7560)
!7578 = !DILocation(line: 96, column: 10, scope: !7560)
!7579 = !DILocation(line: 96, column: 3, scope: !7560)
!7580 = !DILocation(line: 98, column: 1, scope: !7560)
!7581 = distinct !DISubprogram(name: "PushCharPixel", scope: !447, file: !447, line: 222, type: !7582, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{!436, !436, !468}
!7584 = !DILocalVariable(name: "pixels", arg: 1, scope: !7581, file: !447, line: 222, type: !436)
!7585 = !DILocation(line: 222, column: 71, scope: !7581)
!7586 = !DILocalVariable(name: "pixel", arg: 2, scope: !7581, file: !447, line: 223, type: !468)
!7587 = !DILocation(line: 223, column: 18, scope: !7581)
!7588 = !DILocation(line: 225, column: 18, scope: !7581)
!7589 = !DILocation(line: 225, column: 11, scope: !7581)
!7590 = !DILocation(line: 225, column: 4, scope: !7581)
!7591 = !DILocation(line: 225, column: 9, scope: !7581)
!7592 = !DILocation(line: 226, column: 10, scope: !7581)
!7593 = !DILocation(line: 226, column: 3, scope: !7581)
!7594 = distinct !DISubprogram(name: "ScaleCharToQuantum", scope: !447, file: !447, line: 363, type: !7595, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{!493, !437}
!7597 = !DILocalVariable(name: "value", arg: 1, scope: !7594, file: !447, line: 363, type: !437)
!7598 = !DILocation(line: 363, column: 62, scope: !7594)
!7599 = !DILocation(line: 366, column: 26, scope: !7594)
!7600 = !DILocation(line: 366, column: 25, scope: !7594)
!7601 = !DILocation(line: 366, column: 10, scope: !7594)
!7602 = !DILocation(line: 366, column: 3, scope: !7594)
!7603 = distinct !DISubprogram(name: "PushShortPixel", scope: !447, file: !447, line: 252, type: !7604, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!436, !7606, !436, !7607}
!7606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!7607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!7608 = !DILocalVariable(name: "endian", arg: 1, scope: !7603, file: !447, line: 252, type: !7606)
!7609 = !DILocation(line: 252, column: 68, scope: !7603)
!7610 = !DILocalVariable(name: "pixels", arg: 2, scope: !7603, file: !447, line: 253, type: !436)
!7611 = !DILocation(line: 253, column: 24, scope: !7603)
!7612 = !DILocalVariable(name: "pixel", arg: 3, scope: !7603, file: !447, line: 253, type: !7607)
!7613 = !DILocation(line: 253, column: 47, scope: !7603)
!7614 = !DILocalVariable(name: "quantum", scope: !7603, file: !447, line: 256, type: !5)
!7615 = !DILocation(line: 256, column: 5, scope: !7603)
!7616 = !DILocation(line: 258, column: 7, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7603, file: !447, line: 258, column: 7)
!7618 = !DILocation(line: 258, column: 14, scope: !7617)
!7619 = !DILocation(line: 258, column: 7, scope: !7603)
!7620 = !DILocation(line: 260, column: 37, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !447, line: 259, column: 5)
!7622 = !DILocation(line: 260, column: 30, scope: !7621)
!7623 = !DILocation(line: 260, column: 15, scope: !7621)
!7624 = !DILocation(line: 260, column: 14, scope: !7621)
!7625 = !DILocation(line: 261, column: 39, scope: !7621)
!7626 = !DILocation(line: 261, column: 32, scope: !7621)
!7627 = !DILocation(line: 261, column: 42, scope: !7621)
!7628 = !DILocation(line: 261, column: 14, scope: !7621)
!7629 = !DILocation(line: 262, column: 32, scope: !7621)
!7630 = !DILocation(line: 262, column: 40, scope: !7621)
!7631 = !DILocation(line: 262, column: 14, scope: !7621)
!7632 = !DILocation(line: 262, column: 8, scope: !7621)
!7633 = !DILocation(line: 262, column: 13, scope: !7621)
!7634 = !DILocation(line: 263, column: 14, scope: !7621)
!7635 = !DILocation(line: 263, column: 7, scope: !7621)
!7636 = !DILocation(line: 265, column: 34, scope: !7603)
!7637 = !DILocation(line: 265, column: 27, scope: !7603)
!7638 = !DILocation(line: 265, column: 37, scope: !7603)
!7639 = !DILocation(line: 265, column: 10, scope: !7603)
!7640 = !DILocation(line: 266, column: 34, scope: !7603)
!7641 = !DILocation(line: 266, column: 27, scope: !7603)
!7642 = !DILocation(line: 266, column: 12, scope: !7603)
!7643 = !DILocation(line: 266, column: 10, scope: !7603)
!7644 = !DILocation(line: 267, column: 28, scope: !7603)
!7645 = !DILocation(line: 267, column: 36, scope: !7603)
!7646 = !DILocation(line: 267, column: 10, scope: !7603)
!7647 = !DILocation(line: 267, column: 4, scope: !7603)
!7648 = !DILocation(line: 267, column: 9, scope: !7603)
!7649 = !DILocation(line: 268, column: 10, scope: !7603)
!7650 = !DILocation(line: 268, column: 3, scope: !7603)
!7651 = !DILocation(line: 269, column: 1, scope: !7603)
!7652 = distinct !DISubprogram(name: "HalfToSinglePrecision", scope: !447, file: !447, line: 100, type: !7653, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7653 = !DISubroutineType(types: !7654)
!7654 = !{!496, !7655}
!7655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!7656 = !DILocalVariable(name: "half", arg: 1, scope: !7652, file: !447, line: 100, type: !7655)
!7657 = !DILocation(line: 100, column: 64, scope: !7652)
!7658 = !DILocalVariable(name: "exponent", scope: !7652, file: !447, line: 119, type: !5)
!7659 = !DILocation(line: 119, column: 5, scope: !7652)
!7660 = !DILocalVariable(name: "significand", scope: !7652, file: !447, line: 120, type: !5)
!7661 = !DILocation(line: 120, column: 5, scope: !7652)
!7662 = !DILocalVariable(name: "sign_bit", scope: !7652, file: !447, line: 121, type: !5)
!7663 = !DILocation(line: 121, column: 5, scope: !7652)
!7664 = !DILocalVariable(name: "map", scope: !7652, file: !447, line: 124, type: !7665)
!7665 = !DIDerivedType(tag: DW_TAG_typedef, name: "SinglePrecision", scope: !7652, file: !447, line: 116, baseType: !7666)
!7666 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_SinglePrecision", scope: !7652, file: !447, line: 109, size: 32, elements: !7667)
!7667 = !{!7668, !7669}
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_point", scope: !7666, file: !447, line: 112, baseType: !5, size: 32)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "single_precision", scope: !7666, file: !447, line: 115, baseType: !496, size: 32)
!7670 = !DILocation(line: 124, column: 5, scope: !7652)
!7671 = !DILocalVariable(name: "value", scope: !7652, file: !447, line: 127, type: !5)
!7672 = !DILocation(line: 127, column: 5, scope: !7652)
!7673 = !DILocation(line: 136, column: 29, scope: !7652)
!7674 = !DILocation(line: 136, column: 34, scope: !7652)
!7675 = !DILocation(line: 136, column: 41, scope: !7652)
!7676 = !DILocation(line: 136, column: 11, scope: !7652)
!7677 = !DILocation(line: 137, column: 29, scope: !7652)
!7678 = !DILocation(line: 137, column: 34, scope: !7652)
!7679 = !DILocation(line: 137, column: 41, scope: !7652)
!7680 = !DILocation(line: 137, column: 11, scope: !7652)
!7681 = !DILocation(line: 138, column: 31, scope: !7652)
!7682 = !DILocation(line: 138, column: 36, scope: !7652)
!7683 = !DILocation(line: 138, column: 14, scope: !7652)
!7684 = !DILocation(line: 139, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7652, file: !447, line: 139, column: 7)
!7686 = !DILocation(line: 139, column: 16, scope: !7685)
!7687 = !DILocation(line: 139, column: 7, scope: !7652)
!7688 = !DILocation(line: 141, column: 11, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !447, line: 141, column: 11)
!7690 = distinct !DILexicalBlock(scope: !7685, file: !447, line: 140, column: 5)
!7691 = !DILocation(line: 141, column: 23, scope: !7689)
!7692 = !DILocation(line: 141, column: 11, scope: !7690)
!7693 = !DILocation(line: 142, column: 15, scope: !7689)
!7694 = !DILocation(line: 142, column: 24, scope: !7689)
!7695 = !DILocation(line: 142, column: 14, scope: !7689)
!7696 = !DILocation(line: 142, column: 9, scope: !7689)
!7697 = !DILocation(line: 145, column: 11, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7689, file: !447, line: 144, column: 9)
!7699 = !DILocation(line: 145, column: 19, scope: !7698)
!7700 = !DILocation(line: 145, column: 31, scope: !7698)
!7701 = !DILocation(line: 145, column: 50, scope: !7698)
!7702 = !DILocation(line: 147, column: 24, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7698, file: !447, line: 146, column: 11)
!7704 = !DILocation(line: 148, column: 21, scope: !7703)
!7705 = distinct !{!7705, !7697, !7706}
!7706 = !DILocation(line: 149, column: 11, scope: !7698)
!7707 = !DILocation(line: 150, column: 19, scope: !7698)
!7708 = !DILocation(line: 151, column: 22, scope: !7698)
!7709 = !DILocation(line: 152, column: 19, scope: !7698)
!7710 = !DILocation(line: 153, column: 18, scope: !7698)
!7711 = !DILocation(line: 153, column: 27, scope: !7698)
!7712 = !DILocation(line: 153, column: 47, scope: !7698)
!7713 = !DILocation(line: 153, column: 56, scope: !7698)
!7714 = !DILocation(line: 153, column: 44, scope: !7698)
!7715 = !DILocation(line: 154, column: 14, scope: !7698)
!7716 = !DILocation(line: 154, column: 26, scope: !7698)
!7717 = !DILocation(line: 153, column: 74, scope: !7698)
!7718 = !DILocation(line: 153, column: 16, scope: !7698)
!7719 = !DILocation(line: 156, column: 5, scope: !7690)
!7720 = !DILocation(line: 158, column: 9, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7685, file: !447, line: 158, column: 9)
!7722 = !DILocation(line: 158, column: 18, scope: !7721)
!7723 = !DILocation(line: 158, column: 9, scope: !7685)
!7724 = !DILocation(line: 160, column: 16, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7721, file: !447, line: 159, column: 7)
!7726 = !DILocation(line: 160, column: 25, scope: !7725)
!7727 = !DILocation(line: 160, column: 42, scope: !7725)
!7728 = !DILocation(line: 160, column: 14, scope: !7725)
!7729 = !DILocation(line: 161, column: 13, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7725, file: !447, line: 161, column: 13)
!7731 = !DILocation(line: 161, column: 25, scope: !7730)
!7732 = !DILocation(line: 161, column: 13, scope: !7725)
!7733 = !DILocation(line: 162, column: 19, scope: !7730)
!7734 = !DILocation(line: 162, column: 31, scope: !7730)
!7735 = !DILocation(line: 162, column: 16, scope: !7730)
!7736 = !DILocation(line: 162, column: 11, scope: !7730)
!7737 = !DILocation(line: 163, column: 7, scope: !7725)
!7738 = !DILocation(line: 166, column: 17, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7721, file: !447, line: 165, column: 7)
!7740 = !DILocation(line: 167, column: 20, scope: !7739)
!7741 = !DILocation(line: 168, column: 16, scope: !7739)
!7742 = !DILocation(line: 168, column: 25, scope: !7739)
!7743 = !DILocation(line: 168, column: 45, scope: !7739)
!7744 = !DILocation(line: 168, column: 54, scope: !7739)
!7745 = !DILocation(line: 168, column: 42, scope: !7739)
!7746 = !DILocation(line: 169, column: 11, scope: !7739)
!7747 = !DILocation(line: 168, column: 72, scope: !7739)
!7748 = !DILocation(line: 168, column: 14, scope: !7739)
!7749 = !DILocation(line: 171, column: 19, scope: !7652)
!7750 = !DILocation(line: 171, column: 7, scope: !7652)
!7751 = !DILocation(line: 171, column: 18, scope: !7652)
!7752 = !DILocation(line: 172, column: 14, scope: !7652)
!7753 = !DILocation(line: 172, column: 3, scope: !7652)
!7754 = distinct !DISubprogram(name: "ScaleShortToQuantum", scope: !447, file: !447, line: 434, type: !7755, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!493, !7655}
!7757 = !DILocalVariable(name: "value", arg: 1, scope: !7754, file: !447, line: 434, type: !7655)
!7758 = !DILocation(line: 434, column: 64, scope: !7754)
!7759 = !DILocation(line: 436, column: 20, scope: !7754)
!7760 = !DILocation(line: 436, column: 3, scope: !7754)
!7761 = distinct !DISubprogram(name: "PushFloatPixel", scope: !1, file: !1, line: 163, type: !7762, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7762 = !DISubroutineType(types: !7763)
!7763 = !{!436, !713, !717, !497}
!7764 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !7761, file: !1, line: 164, type: !713)
!7765 = !DILocation(line: 164, column: 22, scope: !7761)
!7766 = !DILocalVariable(name: "pixels", arg: 2, scope: !7761, file: !1, line: 164, type: !717)
!7767 = !DILocation(line: 164, column: 65, scope: !7761)
!7768 = !DILocalVariable(name: "pixel", arg: 3, scope: !7761, file: !1, line: 165, type: !497)
!7769 = !DILocation(line: 165, column: 10, scope: !7761)
!7770 = !DILocalVariable(name: "p", scope: !7761, file: !1, line: 168, type: !497)
!7771 = !DILocation(line: 168, column: 6, scope: !7761)
!7772 = !DILocalVariable(name: "quantum", scope: !7761, file: !1, line: 171, type: !7773)
!7773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 32, elements: !2878)
!7774 = !DILocation(line: 171, column: 5, scope: !7761)
!7775 = !DILocation(line: 173, column: 7, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7761, file: !1, line: 173, column: 7)
!7777 = !DILocation(line: 173, column: 21, scope: !7776)
!7778 = !DILocation(line: 173, column: 28, scope: !7776)
!7779 = !DILocation(line: 173, column: 7, scope: !7761)
!7780 = !DILocation(line: 175, column: 26, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7776, file: !1, line: 174, column: 5)
!7782 = !DILocation(line: 175, column: 19, scope: !7781)
!7783 = !DILocation(line: 175, column: 7, scope: !7781)
!7784 = !DILocation(line: 175, column: 17, scope: !7781)
!7785 = !DILocation(line: 176, column: 26, scope: !7781)
!7786 = !DILocation(line: 176, column: 19, scope: !7781)
!7787 = !DILocation(line: 176, column: 7, scope: !7781)
!7788 = !DILocation(line: 176, column: 17, scope: !7781)
!7789 = !DILocation(line: 177, column: 26, scope: !7781)
!7790 = !DILocation(line: 177, column: 19, scope: !7781)
!7791 = !DILocation(line: 177, column: 7, scope: !7781)
!7792 = !DILocation(line: 177, column: 17, scope: !7781)
!7793 = !DILocation(line: 178, column: 26, scope: !7781)
!7794 = !DILocation(line: 178, column: 19, scope: !7781)
!7795 = !DILocation(line: 178, column: 7, scope: !7781)
!7796 = !DILocation(line: 178, column: 17, scope: !7781)
!7797 = !DILocation(line: 179, column: 19, scope: !7781)
!7798 = !DILocation(line: 179, column: 9, scope: !7781)
!7799 = !DILocation(line: 179, column: 8, scope: !7781)
!7800 = !DILocation(line: 180, column: 16, scope: !7781)
!7801 = !DILocation(line: 180, column: 15, scope: !7781)
!7802 = !DILocation(line: 180, column: 8, scope: !7781)
!7803 = !DILocation(line: 180, column: 13, scope: !7781)
!7804 = !DILocation(line: 181, column: 15, scope: !7781)
!7805 = !DILocation(line: 181, column: 29, scope: !7781)
!7806 = !DILocation(line: 181, column: 8, scope: !7781)
!7807 = !DILocation(line: 181, column: 13, scope: !7781)
!7808 = !DILocation(line: 182, column: 15, scope: !7781)
!7809 = !DILocation(line: 182, column: 29, scope: !7781)
!7810 = !DILocation(line: 182, column: 8, scope: !7781)
!7811 = !DILocation(line: 182, column: 13, scope: !7781)
!7812 = !DILocation(line: 183, column: 14, scope: !7781)
!7813 = !DILocation(line: 183, column: 7, scope: !7781)
!7814 = !DILocation(line: 185, column: 22, scope: !7761)
!7815 = !DILocation(line: 185, column: 15, scope: !7761)
!7816 = !DILocation(line: 185, column: 3, scope: !7761)
!7817 = !DILocation(line: 185, column: 13, scope: !7761)
!7818 = !DILocation(line: 186, column: 22, scope: !7761)
!7819 = !DILocation(line: 186, column: 15, scope: !7761)
!7820 = !DILocation(line: 186, column: 3, scope: !7761)
!7821 = !DILocation(line: 186, column: 13, scope: !7761)
!7822 = !DILocation(line: 187, column: 22, scope: !7761)
!7823 = !DILocation(line: 187, column: 15, scope: !7761)
!7824 = !DILocation(line: 187, column: 3, scope: !7761)
!7825 = !DILocation(line: 187, column: 13, scope: !7761)
!7826 = !DILocation(line: 188, column: 22, scope: !7761)
!7827 = !DILocation(line: 188, column: 15, scope: !7761)
!7828 = !DILocation(line: 188, column: 3, scope: !7761)
!7829 = !DILocation(line: 188, column: 13, scope: !7761)
!7830 = !DILocation(line: 189, column: 15, scope: !7761)
!7831 = !DILocation(line: 189, column: 5, scope: !7761)
!7832 = !DILocation(line: 189, column: 4, scope: !7761)
!7833 = !DILocation(line: 190, column: 12, scope: !7761)
!7834 = !DILocation(line: 190, column: 11, scope: !7761)
!7835 = !DILocation(line: 190, column: 4, scope: !7761)
!7836 = !DILocation(line: 190, column: 9, scope: !7761)
!7837 = !DILocation(line: 191, column: 11, scope: !7761)
!7838 = !DILocation(line: 191, column: 25, scope: !7761)
!7839 = !DILocation(line: 191, column: 4, scope: !7761)
!7840 = !DILocation(line: 191, column: 9, scope: !7761)
!7841 = !DILocation(line: 192, column: 11, scope: !7761)
!7842 = !DILocation(line: 192, column: 25, scope: !7761)
!7843 = !DILocation(line: 192, column: 4, scope: !7761)
!7844 = !DILocation(line: 192, column: 9, scope: !7761)
!7845 = !DILocation(line: 193, column: 10, scope: !7761)
!7846 = !DILocation(line: 193, column: 3, scope: !7761)
!7847 = !DILocation(line: 194, column: 1, scope: !7761)
!7848 = distinct !DISubprogram(name: "PushLongPixel", scope: !447, file: !447, line: 229, type: !7849, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7849 = !DISubroutineType(types: !7850)
!7850 = !{!436, !7606, !436, !7851}
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!7852 = !DILocalVariable(name: "endian", arg: 1, scope: !7848, file: !447, line: 229, type: !7606)
!7853 = !DILocation(line: 229, column: 67, scope: !7848)
!7854 = !DILocalVariable(name: "pixels", arg: 2, scope: !7848, file: !447, line: 230, type: !436)
!7855 = !DILocation(line: 230, column: 24, scope: !7848)
!7856 = !DILocalVariable(name: "pixel", arg: 3, scope: !7848, file: !447, line: 230, type: !7851)
!7857 = !DILocation(line: 230, column: 45, scope: !7848)
!7858 = !DILocalVariable(name: "quantum", scope: !7848, file: !447, line: 233, type: !5)
!7859 = !DILocation(line: 233, column: 5, scope: !7848)
!7860 = !DILocation(line: 235, column: 7, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7848, file: !447, line: 235, column: 7)
!7862 = !DILocation(line: 235, column: 14, scope: !7861)
!7863 = !DILocation(line: 235, column: 7, scope: !7848)
!7864 = !DILocation(line: 237, column: 38, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7861, file: !447, line: 236, column: 5)
!7866 = !DILocation(line: 237, column: 31, scope: !7865)
!7867 = !DILocation(line: 237, column: 15, scope: !7865)
!7868 = !DILocation(line: 237, column: 14, scope: !7865)
!7869 = !DILocation(line: 238, column: 39, scope: !7865)
!7870 = !DILocation(line: 238, column: 32, scope: !7865)
!7871 = !DILocation(line: 238, column: 42, scope: !7865)
!7872 = !DILocation(line: 238, column: 14, scope: !7865)
!7873 = !DILocation(line: 239, column: 39, scope: !7865)
!7874 = !DILocation(line: 239, column: 32, scope: !7865)
!7875 = !DILocation(line: 239, column: 42, scope: !7865)
!7876 = !DILocation(line: 239, column: 14, scope: !7865)
!7877 = !DILocation(line: 240, column: 39, scope: !7865)
!7878 = !DILocation(line: 240, column: 32, scope: !7865)
!7879 = !DILocation(line: 240, column: 42, scope: !7865)
!7880 = !DILocation(line: 240, column: 14, scope: !7865)
!7881 = !DILocation(line: 241, column: 30, scope: !7865)
!7882 = !DILocation(line: 241, column: 8, scope: !7865)
!7883 = !DILocation(line: 241, column: 13, scope: !7865)
!7884 = !DILocation(line: 242, column: 14, scope: !7865)
!7885 = !DILocation(line: 242, column: 7, scope: !7865)
!7886 = !DILocation(line: 244, column: 34, scope: !7848)
!7887 = !DILocation(line: 244, column: 27, scope: !7848)
!7888 = !DILocation(line: 244, column: 37, scope: !7848)
!7889 = !DILocation(line: 244, column: 10, scope: !7848)
!7890 = !DILocation(line: 245, column: 35, scope: !7848)
!7891 = !DILocation(line: 245, column: 28, scope: !7848)
!7892 = !DILocation(line: 245, column: 38, scope: !7848)
!7893 = !DILocation(line: 245, column: 10, scope: !7848)
!7894 = !DILocation(line: 246, column: 35, scope: !7848)
!7895 = !DILocation(line: 246, column: 28, scope: !7848)
!7896 = !DILocation(line: 246, column: 38, scope: !7848)
!7897 = !DILocation(line: 246, column: 10, scope: !7848)
!7898 = !DILocation(line: 247, column: 35, scope: !7848)
!7899 = !DILocation(line: 247, column: 28, scope: !7848)
!7900 = !DILocation(line: 247, column: 12, scope: !7848)
!7901 = !DILocation(line: 247, column: 10, scope: !7848)
!7902 = !DILocation(line: 248, column: 26, scope: !7848)
!7903 = !DILocation(line: 248, column: 4, scope: !7848)
!7904 = !DILocation(line: 248, column: 9, scope: !7848)
!7905 = !DILocation(line: 249, column: 10, scope: !7848)
!7906 = !DILocation(line: 249, column: 3, scope: !7848)
!7907 = !DILocation(line: 250, column: 1, scope: !7848)
!7908 = distinct !DISubprogram(name: "ScaleLongToQuantum", scope: !447, file: !447, line: 372, type: !7909, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!493, !481}
!7911 = !DILocalVariable(name: "value", arg: 1, scope: !7908, file: !447, line: 372, type: !481)
!7912 = !DILocation(line: 372, column: 61, scope: !7908)
!7913 = !DILocation(line: 375, column: 22, scope: !7908)
!7914 = !DILocation(line: 375, column: 27, scope: !7908)
!7915 = !DILocation(line: 375, column: 53, scope: !7908)
!7916 = !DILocation(line: 375, column: 10, scope: !7908)
!7917 = !DILocation(line: 375, column: 3, scope: !7908)
!7918 = distinct !DISubprogram(name: "PushDoublePixel", scope: !1, file: !1, line: 122, type: !7919, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{!436, !713, !717, !500}
!7921 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !7918, file: !1, line: 123, type: !713)
!7922 = !DILocation(line: 123, column: 22, scope: !7918)
!7923 = !DILocalVariable(name: "pixels", arg: 2, scope: !7918, file: !1, line: 123, type: !717)
!7924 = !DILocation(line: 123, column: 65, scope: !7918)
!7925 = !DILocalVariable(name: "pixel", arg: 3, scope: !7918, file: !1, line: 124, type: !500)
!7926 = !DILocation(line: 124, column: 11, scope: !7918)
!7927 = !DILocalVariable(name: "p", scope: !7918, file: !1, line: 127, type: !500)
!7928 = !DILocation(line: 127, column: 6, scope: !7918)
!7929 = !DILocalVariable(name: "quantum", scope: !7918, file: !1, line: 130, type: !7930)
!7930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 64, elements: !7931)
!7931 = !{!7932}
!7932 = !DISubrange(count: 8)
!7933 = !DILocation(line: 130, column: 5, scope: !7918)
!7934 = !DILocation(line: 132, column: 7, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 132, column: 7)
!7936 = !DILocation(line: 132, column: 21, scope: !7935)
!7937 = !DILocation(line: 132, column: 28, scope: !7935)
!7938 = !DILocation(line: 132, column: 7, scope: !7918)
!7939 = !DILocation(line: 134, column: 26, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7935, file: !1, line: 133, column: 5)
!7941 = !DILocation(line: 134, column: 19, scope: !7940)
!7942 = !DILocation(line: 134, column: 7, scope: !7940)
!7943 = !DILocation(line: 134, column: 17, scope: !7940)
!7944 = !DILocation(line: 135, column: 26, scope: !7940)
!7945 = !DILocation(line: 135, column: 19, scope: !7940)
!7946 = !DILocation(line: 135, column: 7, scope: !7940)
!7947 = !DILocation(line: 135, column: 17, scope: !7940)
!7948 = !DILocation(line: 136, column: 26, scope: !7940)
!7949 = !DILocation(line: 136, column: 19, scope: !7940)
!7950 = !DILocation(line: 136, column: 7, scope: !7940)
!7951 = !DILocation(line: 136, column: 17, scope: !7940)
!7952 = !DILocation(line: 137, column: 26, scope: !7940)
!7953 = !DILocation(line: 137, column: 19, scope: !7940)
!7954 = !DILocation(line: 137, column: 7, scope: !7940)
!7955 = !DILocation(line: 137, column: 17, scope: !7940)
!7956 = !DILocation(line: 138, column: 26, scope: !7940)
!7957 = !DILocation(line: 138, column: 19, scope: !7940)
!7958 = !DILocation(line: 138, column: 7, scope: !7940)
!7959 = !DILocation(line: 138, column: 17, scope: !7940)
!7960 = !DILocation(line: 139, column: 26, scope: !7940)
!7961 = !DILocation(line: 139, column: 19, scope: !7940)
!7962 = !DILocation(line: 139, column: 7, scope: !7940)
!7963 = !DILocation(line: 139, column: 17, scope: !7940)
!7964 = !DILocation(line: 140, column: 26, scope: !7940)
!7965 = !DILocation(line: 140, column: 19, scope: !7940)
!7966 = !DILocation(line: 140, column: 7, scope: !7940)
!7967 = !DILocation(line: 140, column: 17, scope: !7940)
!7968 = !DILocation(line: 141, column: 26, scope: !7940)
!7969 = !DILocation(line: 141, column: 19, scope: !7940)
!7970 = !DILocation(line: 141, column: 7, scope: !7940)
!7971 = !DILocation(line: 141, column: 17, scope: !7940)
!7972 = !DILocation(line: 142, column: 20, scope: !7940)
!7973 = !DILocation(line: 142, column: 9, scope: !7940)
!7974 = !DILocation(line: 142, column: 8, scope: !7940)
!7975 = !DILocation(line: 143, column: 16, scope: !7940)
!7976 = !DILocation(line: 143, column: 15, scope: !7940)
!7977 = !DILocation(line: 143, column: 8, scope: !7940)
!7978 = !DILocation(line: 143, column: 13, scope: !7940)
!7979 = !DILocation(line: 144, column: 15, scope: !7940)
!7980 = !DILocation(line: 144, column: 29, scope: !7940)
!7981 = !DILocation(line: 144, column: 8, scope: !7940)
!7982 = !DILocation(line: 144, column: 13, scope: !7940)
!7983 = !DILocation(line: 145, column: 15, scope: !7940)
!7984 = !DILocation(line: 145, column: 29, scope: !7940)
!7985 = !DILocation(line: 145, column: 8, scope: !7940)
!7986 = !DILocation(line: 145, column: 13, scope: !7940)
!7987 = !DILocation(line: 146, column: 14, scope: !7940)
!7988 = !DILocation(line: 146, column: 7, scope: !7940)
!7989 = !DILocation(line: 148, column: 22, scope: !7918)
!7990 = !DILocation(line: 148, column: 15, scope: !7918)
!7991 = !DILocation(line: 148, column: 3, scope: !7918)
!7992 = !DILocation(line: 148, column: 13, scope: !7918)
!7993 = !DILocation(line: 149, column: 22, scope: !7918)
!7994 = !DILocation(line: 149, column: 15, scope: !7918)
!7995 = !DILocation(line: 149, column: 3, scope: !7918)
!7996 = !DILocation(line: 149, column: 13, scope: !7918)
!7997 = !DILocation(line: 150, column: 22, scope: !7918)
!7998 = !DILocation(line: 150, column: 15, scope: !7918)
!7999 = !DILocation(line: 150, column: 3, scope: !7918)
!8000 = !DILocation(line: 150, column: 13, scope: !7918)
!8001 = !DILocation(line: 151, column: 22, scope: !7918)
!8002 = !DILocation(line: 151, column: 15, scope: !7918)
!8003 = !DILocation(line: 151, column: 3, scope: !7918)
!8004 = !DILocation(line: 151, column: 13, scope: !7918)
!8005 = !DILocation(line: 152, column: 22, scope: !7918)
!8006 = !DILocation(line: 152, column: 15, scope: !7918)
!8007 = !DILocation(line: 152, column: 3, scope: !7918)
!8008 = !DILocation(line: 152, column: 13, scope: !7918)
!8009 = !DILocation(line: 153, column: 22, scope: !7918)
!8010 = !DILocation(line: 153, column: 15, scope: !7918)
!8011 = !DILocation(line: 153, column: 3, scope: !7918)
!8012 = !DILocation(line: 153, column: 13, scope: !7918)
!8013 = !DILocation(line: 154, column: 22, scope: !7918)
!8014 = !DILocation(line: 154, column: 15, scope: !7918)
!8015 = !DILocation(line: 154, column: 3, scope: !7918)
!8016 = !DILocation(line: 154, column: 13, scope: !7918)
!8017 = !DILocation(line: 155, column: 22, scope: !7918)
!8018 = !DILocation(line: 155, column: 15, scope: !7918)
!8019 = !DILocation(line: 155, column: 3, scope: !7918)
!8020 = !DILocation(line: 155, column: 13, scope: !7918)
!8021 = !DILocation(line: 156, column: 16, scope: !7918)
!8022 = !DILocation(line: 156, column: 5, scope: !7918)
!8023 = !DILocation(line: 156, column: 4, scope: !7918)
!8024 = !DILocation(line: 157, column: 12, scope: !7918)
!8025 = !DILocation(line: 157, column: 11, scope: !7918)
!8026 = !DILocation(line: 157, column: 4, scope: !7918)
!8027 = !DILocation(line: 157, column: 9, scope: !7918)
!8028 = !DILocation(line: 158, column: 11, scope: !7918)
!8029 = !DILocation(line: 158, column: 25, scope: !7918)
!8030 = !DILocation(line: 158, column: 4, scope: !7918)
!8031 = !DILocation(line: 158, column: 9, scope: !7918)
!8032 = !DILocation(line: 159, column: 11, scope: !7918)
!8033 = !DILocation(line: 159, column: 25, scope: !7918)
!8034 = !DILocation(line: 159, column: 4, scope: !7918)
!8035 = !DILocation(line: 159, column: 9, scope: !7918)
!8036 = !DILocation(line: 160, column: 10, scope: !7918)
!8037 = !DILocation(line: 160, column: 3, scope: !7918)
!8038 = !DILocation(line: 161, column: 1, scope: !7918)
!8039 = distinct !DISubprogram(name: "GetQuantumRange", scope: !447, file: !447, line: 91, type: !8040, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!498, !8042}
!8042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !450)
!8043 = !DILocalVariable(name: "depth", arg: 1, scope: !8039, file: !447, line: 91, type: !8042)
!8044 = !DILocation(line: 91, column: 59, scope: !8039)
!8045 = !DILocalVariable(name: "one", scope: !8039, file: !447, line: 94, type: !498)
!8046 = !DILocation(line: 94, column: 5, scope: !8039)
!8047 = !DILocation(line: 96, column: 6, scope: !8039)
!8048 = !DILocation(line: 97, column: 29, scope: !8039)
!8049 = !DILocation(line: 97, column: 37, scope: !8039)
!8050 = !DILocation(line: 97, column: 42, scope: !8039)
!8051 = !DILocation(line: 97, column: 33, scope: !8039)
!8052 = !DILocation(line: 97, column: 49, scope: !8039)
!8053 = !DILocation(line: 97, column: 57, scope: !8039)
!8054 = !DILocation(line: 97, column: 62, scope: !8039)
!8055 = !DILocation(line: 97, column: 53, scope: !8039)
!8056 = !DILocation(line: 97, column: 66, scope: !8039)
!8057 = !DILocation(line: 97, column: 46, scope: !8039)
!8058 = !DILocation(line: 97, column: 3, scope: !8039)
!8059 = distinct !DISubprogram(name: "PushQuantumPixel", scope: !1, file: !1, line: 196, type: !8060, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!436, !444, !717, !7851}
!8062 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !8059, file: !1, line: 196, type: !444)
!8063 = !DILocation(line: 196, column: 66, scope: !8059)
!8064 = !DILocalVariable(name: "pixels", arg: 2, scope: !8059, file: !1, line: 197, type: !717)
!8065 = !DILocation(line: 197, column: 33, scope: !8059)
!8066 = !DILocalVariable(name: "quantum", arg: 3, scope: !8059, file: !1, line: 197, type: !7851)
!8067 = !DILocation(line: 197, column: 54, scope: !8059)
!8068 = !DILocalVariable(name: "i", scope: !8059, file: !1, line: 200, type: !488)
!8069 = !DILocation(line: 200, column: 5, scope: !8059)
!8070 = !DILocalVariable(name: "quantum_bits", scope: !8059, file: !1, line: 203, type: !450)
!8071 = !DILocation(line: 203, column: 5, scope: !8059)
!8072 = !DILocation(line: 205, column: 4, scope: !8059)
!8073 = !DILocation(line: 205, column: 11, scope: !8059)
!8074 = !DILocation(line: 206, column: 20, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8059, file: !1, line: 206, column: 3)
!8076 = !DILocation(line: 206, column: 34, scope: !8075)
!8077 = !DILocation(line: 206, column: 9, scope: !8075)
!8078 = !DILocation(line: 206, column: 8, scope: !8075)
!8079 = !DILocation(line: 206, column: 41, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8075, file: !1, line: 206, column: 3)
!8081 = !DILocation(line: 206, column: 43, scope: !8080)
!8082 = !DILocation(line: 206, column: 3, scope: !8075)
!8083 = !DILocation(line: 208, column: 9, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 208, column: 9)
!8085 = distinct !DILexicalBlock(scope: !8080, file: !1, line: 207, column: 3)
!8086 = !DILocation(line: 208, column: 23, scope: !8084)
!8087 = !DILocation(line: 208, column: 29, scope: !8084)
!8088 = !DILocation(line: 208, column: 34, scope: !8084)
!8089 = !DILocation(line: 208, column: 9, scope: !8085)
!8090 = !DILocation(line: 210, column: 43, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8084, file: !1, line: 209, column: 7)
!8092 = !DILocation(line: 210, column: 36, scope: !8091)
!8093 = !DILocation(line: 210, column: 35, scope: !8091)
!8094 = !DILocation(line: 210, column: 9, scope: !8091)
!8095 = !DILocation(line: 210, column: 23, scope: !8091)
!8096 = !DILocation(line: 210, column: 29, scope: !8091)
!8097 = !DILocation(line: 210, column: 34, scope: !8091)
!8098 = !DILocation(line: 211, column: 9, scope: !8091)
!8099 = !DILocation(line: 211, column: 23, scope: !8091)
!8100 = !DILocation(line: 211, column: 29, scope: !8091)
!8101 = !DILocation(line: 211, column: 33, scope: !8091)
!8102 = !DILocation(line: 212, column: 7, scope: !8091)
!8103 = !DILocation(line: 213, column: 27, scope: !8085)
!8104 = !DILocation(line: 213, column: 17, scope: !8085)
!8105 = !DILocation(line: 214, column: 9, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8085, file: !1, line: 214, column: 9)
!8107 = !DILocation(line: 214, column: 24, scope: !8106)
!8108 = !DILocation(line: 214, column: 38, scope: !8106)
!8109 = !DILocation(line: 214, column: 44, scope: !8106)
!8110 = !DILocation(line: 214, column: 22, scope: !8106)
!8111 = !DILocation(line: 214, column: 9, scope: !8085)
!8112 = !DILocation(line: 215, column: 20, scope: !8106)
!8113 = !DILocation(line: 215, column: 34, scope: !8106)
!8114 = !DILocation(line: 215, column: 40, scope: !8106)
!8115 = !DILocation(line: 215, column: 19, scope: !8106)
!8116 = !DILocation(line: 215, column: 7, scope: !8106)
!8117 = !DILocation(line: 216, column: 18, scope: !8085)
!8118 = !DILocation(line: 216, column: 6, scope: !8085)
!8119 = !DILocation(line: 217, column: 31, scope: !8085)
!8120 = !DILocation(line: 217, column: 5, scope: !8085)
!8121 = !DILocation(line: 217, column: 19, scope: !8085)
!8122 = !DILocation(line: 217, column: 25, scope: !8085)
!8123 = !DILocation(line: 217, column: 29, scope: !8085)
!8124 = !DILocation(line: 218, column: 32, scope: !8085)
!8125 = !DILocation(line: 218, column: 31, scope: !8085)
!8126 = !DILocation(line: 218, column: 43, scope: !8085)
!8127 = !DILocation(line: 218, column: 40, scope: !8085)
!8128 = !DILocation(line: 218, column: 30, scope: !8085)
!8129 = !DILocation(line: 219, column: 9, scope: !8085)
!8130 = !DILocation(line: 219, column: 23, scope: !8085)
!8131 = !DILocation(line: 219, column: 29, scope: !8085)
!8132 = !DILocation(line: 219, column: 38, scope: !8085)
!8133 = !DILocation(line: 219, column: 52, scope: !8085)
!8134 = !DILocation(line: 219, column: 58, scope: !8085)
!8135 = !DILocation(line: 219, column: 35, scope: !8085)
!8136 = !DILocation(line: 219, column: 8, scope: !8085)
!8137 = !DILocation(line: 220, column: 7, scope: !8085)
!8138 = !DILocation(line: 219, column: 75, scope: !8085)
!8139 = !DILocation(line: 219, column: 65, scope: !8085)
!8140 = !DILocation(line: 219, column: 64, scope: !8085)
!8141 = !DILocation(line: 218, column: 57, scope: !8085)
!8142 = !DILocation(line: 218, column: 14, scope: !8085)
!8143 = !DILocation(line: 218, column: 6, scope: !8085)
!8144 = !DILocation(line: 218, column: 13, scope: !8085)
!8145 = !DILocation(line: 206, column: 3, scope: !8080)
!8146 = distinct !{!8146, !8082, !8147}
!8147 = !DILocation(line: 221, column: 3, scope: !8075)
!8148 = !DILocation(line: 222, column: 10, scope: !8059)
!8149 = !DILocation(line: 222, column: 3, scope: !8059)
!8150 = distinct !DISubprogram(name: "ScaleAnyToQuantum", scope: !447, file: !447, line: 271, type: !8151, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8151 = !DISubroutineType(types: !8152)
!8152 = !{!493, !8153, !8153}
!8153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!8154 = !DILocalVariable(name: "quantum", arg: 1, scope: !8150, file: !447, line: 271, type: !8153)
!8155 = !DILocation(line: 271, column: 58, scope: !8150)
!8156 = !DILocalVariable(name: "range", arg: 2, scope: !8150, file: !447, line: 272, type: !8153)
!8157 = !DILocation(line: 272, column: 20, scope: !8150)
!8158 = !DILocation(line: 275, column: 52, scope: !8150)
!8159 = !DILocation(line: 275, column: 51, scope: !8150)
!8160 = !DILocation(line: 275, column: 61, scope: !8150)
!8161 = !DILocation(line: 275, column: 60, scope: !8150)
!8162 = !DILocation(line: 275, column: 21, scope: !8150)
!8163 = !DILocation(line: 275, column: 66, scope: !8150)
!8164 = !DILocation(line: 275, column: 10, scope: !8150)
!8165 = !DILocation(line: 275, column: 3, scope: !8150)
!8166 = distinct !DISubprogram(name: "PushQuantumLongPixel", scope: !1, file: !1, line: 225, type: !8060, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8167 = !DILocalVariable(name: "quantum_info", arg: 1, scope: !8166, file: !1, line: 226, type: !444)
!8168 = !DILocation(line: 226, column: 16, scope: !8166)
!8169 = !DILocalVariable(name: "pixels", arg: 2, scope: !8166, file: !1, line: 226, type: !717)
!8170 = !DILocation(line: 226, column: 59, scope: !8166)
!8171 = !DILocalVariable(name: "quantum", arg: 3, scope: !8166, file: !1, line: 227, type: !7851)
!8172 = !DILocation(line: 227, column: 17, scope: !8166)
!8173 = !DILocalVariable(name: "i", scope: !8166, file: !1, line: 230, type: !488)
!8174 = !DILocation(line: 230, column: 5, scope: !8166)
!8175 = !DILocalVariable(name: "quantum_bits", scope: !8166, file: !1, line: 233, type: !450)
!8176 = !DILocation(line: 233, column: 5, scope: !8166)
!8177 = !DILocation(line: 235, column: 4, scope: !8166)
!8178 = !DILocation(line: 235, column: 11, scope: !8166)
!8179 = !DILocation(line: 236, column: 20, scope: !8180)
!8180 = distinct !DILexicalBlock(scope: !8166, file: !1, line: 236, column: 3)
!8181 = !DILocation(line: 236, column: 34, scope: !8180)
!8182 = !DILocation(line: 236, column: 9, scope: !8180)
!8183 = !DILocation(line: 236, column: 8, scope: !8180)
!8184 = !DILocation(line: 236, column: 41, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8180, file: !1, line: 236, column: 3)
!8186 = !DILocation(line: 236, column: 43, scope: !8185)
!8187 = !DILocation(line: 236, column: 3, scope: !8180)
!8188 = !DILocation(line: 238, column: 9, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8190, file: !1, line: 238, column: 9)
!8190 = distinct !DILexicalBlock(scope: !8185, file: !1, line: 237, column: 3)
!8191 = !DILocation(line: 238, column: 23, scope: !8189)
!8192 = !DILocation(line: 238, column: 29, scope: !8189)
!8193 = !DILocation(line: 238, column: 34, scope: !8189)
!8194 = !DILocation(line: 238, column: 9, scope: !8190)
!8195 = !DILocation(line: 240, column: 30, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8189, file: !1, line: 239, column: 7)
!8197 = !DILocation(line: 240, column: 44, scope: !8196)
!8198 = !DILocation(line: 240, column: 51, scope: !8196)
!8199 = !DILocation(line: 241, column: 12, scope: !8196)
!8200 = !DILocation(line: 241, column: 26, scope: !8196)
!8201 = !DILocation(line: 241, column: 32, scope: !8196)
!8202 = !DILocation(line: 240, column: 16, scope: !8196)
!8203 = !DILocation(line: 240, column: 15, scope: !8196)
!8204 = !DILocation(line: 242, column: 9, scope: !8196)
!8205 = !DILocation(line: 242, column: 23, scope: !8196)
!8206 = !DILocation(line: 242, column: 29, scope: !8196)
!8207 = !DILocation(line: 242, column: 33, scope: !8196)
!8208 = !DILocation(line: 243, column: 7, scope: !8196)
!8209 = !DILocation(line: 244, column: 27, scope: !8190)
!8210 = !DILocation(line: 244, column: 17, scope: !8190)
!8211 = !DILocation(line: 245, column: 9, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8190, file: !1, line: 245, column: 9)
!8213 = !DILocation(line: 245, column: 24, scope: !8212)
!8214 = !DILocation(line: 245, column: 38, scope: !8212)
!8215 = !DILocation(line: 245, column: 44, scope: !8212)
!8216 = !DILocation(line: 245, column: 22, scope: !8212)
!8217 = !DILocation(line: 245, column: 9, scope: !8190)
!8218 = !DILocation(line: 246, column: 20, scope: !8212)
!8219 = !DILocation(line: 246, column: 34, scope: !8212)
!8220 = !DILocation(line: 246, column: 40, scope: !8212)
!8221 = !DILocation(line: 246, column: 19, scope: !8212)
!8222 = !DILocation(line: 246, column: 7, scope: !8212)
!8223 = !DILocation(line: 247, column: 18, scope: !8190)
!8224 = !DILocation(line: 247, column: 32, scope: !8190)
!8225 = !DILocation(line: 247, column: 38, scope: !8190)
!8226 = !DILocation(line: 247, column: 52, scope: !8190)
!8227 = !DILocation(line: 247, column: 66, scope: !8190)
!8228 = !DILocation(line: 247, column: 72, scope: !8190)
!8229 = !DILocation(line: 247, column: 51, scope: !8190)
!8230 = !DILocation(line: 247, column: 44, scope: !8190)
!8231 = !DILocation(line: 248, column: 7, scope: !8190)
!8232 = !DILocation(line: 248, column: 21, scope: !8190)
!8233 = !DILocation(line: 248, column: 27, scope: !8190)
!8234 = !DILocation(line: 248, column: 32, scope: !8190)
!8235 = !DILocation(line: 247, column: 79, scope: !8190)
!8236 = !DILocation(line: 248, column: 51, scope: !8190)
!8237 = !DILocation(line: 248, column: 65, scope: !8190)
!8238 = !DILocation(line: 248, column: 71, scope: !8190)
!8239 = !DILocation(line: 248, column: 70, scope: !8190)
!8240 = !DILocation(line: 248, column: 47, scope: !8190)
!8241 = !DILocation(line: 247, column: 6, scope: !8190)
!8242 = !DILocation(line: 247, column: 13, scope: !8190)
!8243 = !DILocation(line: 249, column: 18, scope: !8190)
!8244 = !DILocation(line: 249, column: 6, scope: !8190)
!8245 = !DILocation(line: 250, column: 31, scope: !8190)
!8246 = !DILocation(line: 250, column: 5, scope: !8190)
!8247 = !DILocation(line: 250, column: 19, scope: !8190)
!8248 = !DILocation(line: 250, column: 25, scope: !8190)
!8249 = !DILocation(line: 250, column: 29, scope: !8190)
!8250 = !DILocation(line: 236, column: 3, scope: !8185)
!8251 = distinct !{!8251, !8187, !8252}
!8252 = !DILocation(line: 251, column: 3, scope: !8180)
!8253 = !DILocation(line: 252, column: 10, scope: !8166)
!8254 = !DILocation(line: 252, column: 3, scope: !8166)
!8255 = distinct !DISubprogram(name: "PushColormapIndex", scope: !1, file: !1, line: 113, type: !8256, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !719)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!503, !2362, !8042, !8258}
!8258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!8259 = !DILocalVariable(name: "image", arg: 1, scope: !8255, file: !1, line: 113, type: !2362)
!8260 = !DILocation(line: 113, column: 58, scope: !8255)
!8261 = !DILocalVariable(name: "index", arg: 2, scope: !8255, file: !1, line: 114, type: !8042)
!8262 = !DILocation(line: 114, column: 16, scope: !8255)
!8263 = !DILocalVariable(name: "range_exception", arg: 3, scope: !8255, file: !1, line: 114, type: !8258)
!8264 = !DILocation(line: 114, column: 41, scope: !8255)
!8265 = !DILocation(line: 116, column: 7, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8255, file: !1, line: 116, column: 7)
!8267 = !DILocation(line: 116, column: 15, scope: !8266)
!8268 = !DILocation(line: 116, column: 22, scope: !8266)
!8269 = !DILocation(line: 116, column: 13, scope: !8266)
!8270 = !DILocation(line: 116, column: 7, scope: !8255)
!8271 = !DILocation(line: 117, column: 26, scope: !8266)
!8272 = !DILocation(line: 117, column: 12, scope: !8266)
!8273 = !DILocation(line: 117, column: 5, scope: !8266)
!8274 = !DILocation(line: 118, column: 4, scope: !8255)
!8275 = !DILocation(line: 118, column: 19, scope: !8255)
!8276 = !DILocation(line: 119, column: 3, scope: !8255)
!8277 = !DILocation(line: 120, column: 1, scope: !8255)
