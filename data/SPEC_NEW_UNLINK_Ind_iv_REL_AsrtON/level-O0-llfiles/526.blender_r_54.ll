; ModuleID = 'blender_bin/source/blender/makesrna/intern/rna_mask_gen.c'
source_filename = "blender_bin/source/blender/makesrna/intern/rna_mask_gen.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.CollectionPropertyRNA = type { %struct.PropertyRNA, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)*, void (%struct.CollectionPropertyIterator*)*, void (%struct.CollectionPropertyIterator*)*, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)*, i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)*, %struct.StructRNA* }
%struct.PropertyRNA = type { %struct.PropertyRNA*, %struct.PropertyRNA*, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i32 (%struct.PointerRNA*, i32*)*, i32, [3 x i32], i32, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)*, i32, i32 (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, i32)*, i32, i32, %struct.StructRNA*, i8* }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon, i32, i32, %struct.PointerRNA, i32 }
%union.anon = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.StructRNA = type { %struct.ContainerRNA, i8*, i8*, i8*, i32, i8*, i8*, i8*, i32, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.StructRNA*, %struct.StructRNA*, %struct.StructRNA* (%struct.PointerRNA*)*, i8* (%struct.PointerRNA*)*, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)*, void (%struct.Main*, %struct.StructRNA*)*, i8** (%struct.PointerRNA*)*, %struct.IDProperty* (%struct.PointerRNA*, i8)*, %struct.ListBase }
%struct.ContainerRNA = type { i8*, i8*, %struct.GHash*, %struct.ListBase }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.bContext = type opaque
%struct.FunctionRNA = type { %struct.ContainerRNA, i8*, i32, i8*, void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)*, %struct.PropertyRNA* }
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.PointerPropertyRNA = type { %struct.PropertyRNA, void (%struct.PointerRNA*, %struct.PointerRNA*)*, void (%struct.PointerRNA*, %struct.PointerRNA*)*, %struct.StructRNA* (%struct.PointerRNA*)*, i32 (%struct.PointerRNA*, %struct.PointerRNA*)*, %struct.StructRNA* }
%struct.EnumPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, i8*, %struct.EnumPropertyItem*, i32, i32 }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.StringPropertyRNA = type { %struct.PropertyRNA, void (%struct.PointerRNA*, i8*)*, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i8*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)*, i32, i8* }
%struct.FloatPropertyRNA = type { %struct.PropertyRNA, float (%struct.PointerRNA*)*, void (%struct.PointerRNA*, float)*, void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*)*, void (%struct.PointerRNA*, float*, float*, float*, float*)*, float (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)*, float, float, float, float, float, i32, float, float* }
%struct.BoolPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, i32, i32* }
%struct.IntPropertyRNA = type { %struct.PropertyRNA, i32 (%struct.PointerRNA*)*, void (%struct.PointerRNA*, i32)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*)*, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)*, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)*, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)*, i32, i32, i32, i32, i32, i32, i32* }
%struct.MaskParent = type { i32, i32, %struct.ID*, [64 x i8], [64 x i8], [2 x float], [4 x [2 x float]] }
%struct.MaskSplinePointUW = type { float, float, i32 }
%struct.MaskSplinePoint = type { %struct.BezTriple, i32, i32, %struct.MaskSplinePointUW*, %struct.MaskParent }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.MaskSpline = type { %struct.MaskSpline*, %struct.MaskSpline*, i16, i8, i8, i32, %struct.MaskSplinePoint*, %struct.MaskParent, %struct.MaskSplinePoint* }
%struct.Mask = type { %struct.ID, %struct.AnimData*, %struct.ListBase, i32, i32, i32, i32, i32, i32 }
%struct.MaskLayer = type { %struct.MaskLayer*, %struct.MaskLayer*, [64 x i8], %struct.ListBase, %struct.ListBase, %struct.MaskSpline*, %struct.MaskSplinePoint*, float, i8, i8, i8, [7 x i8], i8, i8 }
%struct.ListBaseIterator = type { %struct.Link*, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.Link = type { %struct.Link*, %struct.Link* }
%struct.MovieTrackingObject = type { %struct.MovieTrackingObject*, %struct.MovieTrackingObject*, [64 x i8], i32, float, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, i32, i32 }
%struct.MovieClipUser = type { i32, i16, i16 }

@rna_MaskParent_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskParent_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskParent_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskParent_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskParent_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskParent_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskParent_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !0
@RNA_ID = external dso_local global %struct.StructRNA, align 8
@rna_MaskSplinePointUW_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePointUW_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSplinePointUW_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskSplinePointUW_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskSplinePointUW_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSplinePointUW_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskSplinePointUW_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !1978
@rna_MaskSplinePoint_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePoint_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSplinePoint_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoint_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoint_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSplinePoint_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskSplinePoint_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2171
@RNA_MaskParent = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePointUW to i8*), i8* bitcast (%struct.StructRNA* @RNA_MovieTrackingObjects to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskParent_rna_properties to i8*), i8* bitcast (%struct.StringPropertyRNA* @rna_MaskParent_sub_parent to i8*) } }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskParent_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase zeroinitializer }, align 8, !dbg !1976
@rna_MaskSplinePoint_feather_points = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePoint_parent, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i32 16384, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSplinePoint_feather_points_begin, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoint_feather_points_next, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoint_feather_points_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSplinePoint_feather_points_get, i32 (%struct.PointerRNA*)* @MaskSplinePoint_feather_points_length, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* @MaskSplinePoint_feather_points_lookup_int, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSplinePointUW }, align 8, !dbg !2193
@.str = private unnamed_addr constant [44 x i8] c"Array iterator out of range: %s (index %d)\0A\00", align 1
@__func__.MaskSplinePoint_feather_points_lookup_int = private unnamed_addr constant [42 x i8] c"MaskSplinePoint_feather_points_lookup_int\00", align 1
@rna_MaskSpline_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSpline_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSpline_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskSpline_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskSpline_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSpline_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskSpline_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2197
@rna_MaskSpline_points = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_self_intersection_check, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i32 16384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* @RNA_MaskSplinePoints, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSpline_points_begin, void (%struct.CollectionPropertyIterator*)* @MaskSpline_points_next, void (%struct.CollectionPropertyIterator*)* @MaskSpline_points_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSpline_points_get, i32 (%struct.PointerRNA*)* @MaskSpline_points_length, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* @MaskSpline_points_lookup_int, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSplinePoint }, align 8, !dbg !2211
@__func__.MaskSpline_points_lookup_int = private unnamed_addr constant [29 x i8] c"MaskSpline_points_lookup_int\00", align 1
@rna_MaskSplines_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSplines_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskSplines_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskSplines_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSplines_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskSplines_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2215
@rna_MaskSplinePoints_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePoints_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskSplinePoints_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoints_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskSplinePoints_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskSplinePoints_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskSplinePoints_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2234
@rna_MaskLayer_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayer_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskLayer_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskLayer_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskLayer_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskLayer_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskLayer_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2285
@rna_MaskLayer_splines = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskLayer_name, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.112, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* @RNA_MaskSplines, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskLayer_splines_begin, void (%struct.CollectionPropertyIterator*)* @MaskLayer_splines_next, void (%struct.CollectionPropertyIterator*)* @MaskLayer_splines_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskLayer_splines_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* @MaskLayer_splines_lookup_int, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSpline }, align 8, !dbg !2291
@rna_Mask_layers = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_active_layer_index, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.146, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* @RNA_MaskLayers, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @Mask_layers_begin, void (%struct.CollectionPropertyIterator*)* @Mask_layers_next, void (%struct.CollectionPropertyIterator*)* @Mask_layers_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @Mask_layers_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskLayer }, align 8, !dbg !2315
@RNA_AnimData = external dso_local global %struct.StructRNA, align 8
@rna_MaskLayers_rna_properties = dso_local global %struct.CollectionPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayers_rna_type, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i32 128, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 6, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.CollectionPropertyIterator*, %struct.PointerRNA*)* @MaskLayers_rna_properties_begin, void (%struct.CollectionPropertyIterator*)* @MaskLayers_rna_properties_next, void (%struct.CollectionPropertyIterator*)* @MaskLayers_rna_properties_end, void (%struct.PointerRNA*, %struct.CollectionPropertyIterator*)* @MaskLayers_rna_properties_get, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i8*, %struct.PointerRNA*)* @MaskLayers_rna_properties_lookup_string, i32 (%struct.PointerRNA*, i32, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Property }, align 8, !dbg !2327
@rna_MaskParent_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskParent_id, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskParent_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskParent_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !1866
@.str.1 = private unnamed_addr constant [15 x i8] c"rna_properties\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"Properties\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"RNA property collection\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@RNA_Property = external dso_local global %struct.StructRNA, align 8
@rna_MaskParent_id = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskParent_id_type, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskParent_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i32 8388673, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.10, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_parent, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskParent_id_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskParent_id_set, %struct.StructRNA* (%struct.PointerRNA*)* @rna_MaskParent_id_typef, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_ID }, align 8, !dbg !1896
@.str.5 = private unnamed_addr constant [9 x i8] c"rna_type\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"RNA\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"RNA type definition\00", align 1
@RNA_Struct = external dso_local global %struct.StructRNA, align 8
@rna_MaskParent_id_type = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskParent_type, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskParent_id, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_parent, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskParent_id_type_get, void (%struct.PointerRNA*, i32)* @MaskParent_id_type_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([2 x %struct.EnumPropertyItem], [2 x %struct.EnumPropertyItem]* @rna_MaskParent_id_type_items, i32 0, i32 0), i32 1, i32 17229 }, align 8, !dbg !1898
@.str.8 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"ID\00", align 1
@.str.10 = private unnamed_addr constant [75 x i8] c"ID-block to which masking element would be parented to or to it's property\00", align 1
@rna_MaskParent_type = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskParent_parent, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskParent_id_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_parent, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskParent_type_get, void (%struct.PointerRNA*, i32)* @MaskParent_type_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @rna_MaskParent_type_items, i32 0, i32 0), i32 2, i32 0 }, align 8, !dbg !1940
@.str.11 = private unnamed_addr constant [8 x i8] c"id_type\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"ID Type\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"Type of ID-block that can be used\00", align 1
@rna_MaskParent_id_type_items = internal global [2 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 17229, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.179, i32 0, i32 0), i32 111, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2347
@rna_MaskParent_parent = dso_local global %struct.StringPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskParent_sub_parent, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskParent_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 262145, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.18, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 3, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] [i32 64, i32 0, i32 0], i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_parent, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, i8*)* @MaskParent_parent_get, i32 (%struct.PointerRNA*)* @MaskParent_parent_length, void (%struct.PointerRNA*, i8*)* @MaskParent_parent_set, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, align 8, !dbg !1942
@.str.14 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"Parent Type\00", align 1
@rna_MaskParent_type_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.181, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.183, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2350
@rna_MaskParent_sub_parent = dso_local global %struct.StringPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskParent_parent, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i32 262145, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 3, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] [i32 64, i32 0, i32 0], i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_parent, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, i8*)* @MaskParent_sub_parent_get, i32 (%struct.PointerRNA*)* @MaskParent_sub_parent_length, void (%struct.PointerRNA*, i8*)* @MaskParent_sub_parent_set, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, align 8, !dbg !1974
@.str.16 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Parent\00", align 1
@.str.18 = private unnamed_addr constant [73 x i8] c"Name of parent object in specified data block to which parenting happens\00", align 1
@.str.19 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"sub_parent\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"Sub Parent\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"Name of parent sub-object in specified data block to which parenting happens\00", align 1
@RNA_MaskSplinePointUW = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePoint to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskParent to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSplinePointUW_rna_properties to i8*), i8* bitcast (%struct.BoolPropertyRNA* @rna_MaskSplinePointUW_select to i8*) } }, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePointUW_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase zeroinitializer }, align 8, !dbg !2169
@RNA_MovieTrackingObjects = external dso_local global %struct.StructRNA, align 8
@.str.23 = private unnamed_addr constant [11 x i8] c"MaskParent\00", align 1
@.str.24 = private unnamed_addr constant [12 x i8] c"Mask Parent\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"Parenting settings for masking element\00", align 1
@rna_MaskSplinePointUW_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePointUW_u, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePointUW_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplinePointUW_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2060
@rna_MaskSplinePointUW_u = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePointUW_weight, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePointUW_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i32 0, i32 0), i32 8195, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 4, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* @MaskSplinePointUW_u_get, void (%struct.PointerRNA*, float)* @MaskSplinePointUW_u_set, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+01, i32 3, float 0.000000e+00, float* null }, align 8, !dbg !2062
@rna_MaskSplinePointUW_weight = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSplinePointUW_select, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePointUW_u, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i32 8195, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 4, i32 4, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* @MaskSplinePointUW_weight_get, void (%struct.PointerRNA*, float)* @MaskSplinePointUW_weight_set, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+01, i32 3, float 0.000000e+00, float* null }, align 8, !dbg !2129
@.str.26 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"U coordinate of point along spline segment\00", align 1
@rna_MaskSplinePointUW_select = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePointUW_weight, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSplinePointUW_select_get, void (%struct.PointerRNA*, i32)* @MaskSplinePointUW_select_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2131
@.str.29 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"Weight\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"Weight of feather point\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"Select\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Selection status\00", align 1
@RNA_MaskSplinePoint = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskSpline to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePointUW to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSplinePoint_rna_properties to i8*), i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSplinePoint_feather_points to i8*) } }, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoint_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase zeroinitializer }, align 8, !dbg !2195
@.str.35 = private unnamed_addr constant [18 x i8] c"MaskSplinePointUW\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Mask Spline UW Point\00", align 1
@.str.37 = private unnamed_addr constant [48 x i8] c"Single point in spline segment defining feather\00", align 1
@rna_MaskSplinePoint_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_handle_left, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoint_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplinePoint_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2173
@rna_MaskSplinePoint_handle_left = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_co, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePoint_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.40, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 65557, i32 (%struct.PointerRNA*, i32*)* null, i32 1, [3 x i32] [i32 2, i32 0, i32 0], i32 2, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* null, void (%struct.PointerRNA*, float)* null, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_handle_left_get, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_handle_left_set, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float -1.000000e+04, float 1.000000e+04, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, float 1.000000e+01, i32 3, float 0.000000e+00, float* getelementptr inbounds ([2 x float], [2 x float]* @rna_MaskSplinePoint_handle_left_default, i32 0, i32 0) }, align 8, !dbg !2175
@rna_MaskSplinePoint_co = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_handle_right, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_handle_left, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 65557, i32 (%struct.PointerRNA*, i32*)* null, i32 1, [3 x i32] [i32 2, i32 0, i32 0], i32 2, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* null, void (%struct.PointerRNA*, float)* null, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_co_get, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_co_set, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float -1.000000e+04, float 1.000000e+04, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, float 1.000000e+01, i32 3, float 0.000000e+00, float* getelementptr inbounds ([2 x float], [2 x float]* @rna_MaskSplinePoint_co_default, i32 0, i32 0) }, align 8, !dbg !2177
@.str.38 = private unnamed_addr constant [12 x i8] c"handle_left\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"Handle 1\00", align 1
@.str.40 = private unnamed_addr constant [32 x i8] c"Coordinates of the first handle\00", align 1
@rna_MaskSplinePoint_handle_left_default = internal global [2 x float] zeroinitializer, align 4, !dbg !2353
@rna_MaskSplinePoint_handle_right = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_type, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_co, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 65557, i32 (%struct.PointerRNA*, i32*)* null, i32 1, [3 x i32] [i32 2, i32 0, i32 0], i32 2, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* null, void (%struct.PointerRNA*, float)* null, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_handle_right_get, void (%struct.PointerRNA*, float*)* @MaskSplinePoint_handle_right_set, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float -1.000000e+04, float 1.000000e+04, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, float 1.000000e+01, i32 3, float 0.000000e+00, float* getelementptr inbounds ([2 x float], [2 x float]* @rna_MaskSplinePoint_handle_right_default, i32 0, i32 0) }, align 8, !dbg !2179
@.str.41 = private unnamed_addr constant [3 x i8] c"co\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"Control Point\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"Coordinates of the control point\00", align 1
@rna_MaskSplinePoint_co_default = internal global [2 x float] zeroinitializer, align 4, !dbg !2355
@rna_MaskSplinePoint_handle_type = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_left_type, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_handle_right, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSplinePoint_handle_type_get, void (%struct.PointerRNA*, i32)* @MaskSplinePoint_handle_type_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @rna_MaskSplinePoint_handle_type_items, i32 0, i32 0), i32 5, i32 0 }, align 8, !dbg !2181
@.str.44 = private unnamed_addr constant [13 x i8] c"handle_right\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"Handle 2\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"Coordinates of the second handle\00", align 1
@rna_MaskSplinePoint_handle_right_default = internal global [2 x float] zeroinitializer, align 4, !dbg !2357
@rna_MaskSplinePoint_handle_left_type = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_right_type, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSplinePoint_handle_left_type_get, void (%struct.PointerRNA*, i32)* @MaskSplinePoint_handle_left_type_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @rna_MaskSplinePoint_handle_left_type_items, i32 0, i32 0), i32 5, i32 0 }, align 8, !dbg !2183
@.str.47 = private unnamed_addr constant [12 x i8] c"handle_type\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"Handle Type\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"Handle type\00", align 1
@rna_MaskSplinePoint_handle_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2359
@rna_MaskSplinePoint_handle_right_type = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_weight, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_left_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSplinePoint_handle_right_type_get, void (%struct.PointerRNA*, i32)* @MaskSplinePoint_handle_right_type_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @rna_MaskSplinePoint_handle_right_type_items, i32 0, i32 0), i32 5, i32 0 }, align 8, !dbg !2185
@.str.50 = private unnamed_addr constant [17 x i8] c"handle_left_type\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"Handle 1 Type\00", align 1
@rna_MaskSplinePoint_handle_left_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2362
@rna_MaskSplinePoint_weight = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSplinePoint_select, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSplinePoint_handle_right_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i32 8195, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 40, i32 4, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* @MaskSplinePoint_weight_get, void (%struct.PointerRNA*, float)* @MaskSplinePoint_weight_set, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+01, i32 3, float 0.000000e+00, float* null }, align 8, !dbg !2187
@.str.52 = private unnamed_addr constant [18 x i8] c"handle_right_type\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"Handle 2 Type\00", align 1
@rna_MaskSplinePoint_handle_right_type_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.185, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.187, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.189, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.191, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.193, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2364
@rna_MaskSplinePoint_select = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplinePoint_parent, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskSplinePoint_weight, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSplinePoint_select_get, void (%struct.PointerRNA*, i32)* @MaskSplinePoint_select_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2189
@.str.54 = private unnamed_addr constant [20 x i8] c"Weight of the point\00", align 1
@rna_MaskSplinePoint_parent = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoint_feather_points, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSplinePoint_select, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 8388608, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplinePoint_parent_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskParent }, align 8, !dbg !2191
@.str.55 = private unnamed_addr constant [15 x i8] c"feather_points\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"Feather Points\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"Points defining feather\00", align 1
@RNA_MaskSpline = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskSplines to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePoint to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSpline_rna_properties to i8*), i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSpline_points to i8*) } }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSpline_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase zeroinitializer }, align 8, !dbg !2213
@.str.58 = private unnamed_addr constant [16 x i8] c"MaskSplinePoint\00", align 1
@.str.59 = private unnamed_addr constant [18 x i8] c"Mask Spline Point\00", align 1
@.str.60 = private unnamed_addr constant [46 x i8] c"Single point in spline used for defining mask\00", align 1
@rna_MaskSpline_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSpline_offset_mode, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSpline_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSpline_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2199
@rna_MaskSpline_offset_mode = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSpline_weight_interpolation, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSpline_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.63, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSpline_offset_mode_get, void (%struct.PointerRNA*, i32)* @MaskSpline_offset_mode_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @rna_MaskSpline_offset_mode_items, i32 0, i32 0), i32 2, i32 0 }, align 8, !dbg !2201
@rna_MaskSpline_weight_interpolation = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_cyclic, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSpline_offset_mode, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.66, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSpline_weight_interpolation_get, void (%struct.PointerRNA*, i32)* @MaskSpline_weight_interpolation_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @rna_MaskSpline_weight_interpolation_items, i32 0, i32 0), i32 2, i32 1 }, align 8, !dbg !2203
@.str.61 = private unnamed_addr constant [12 x i8] c"offset_mode\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"Feather Offset\00", align 1
@.str.63 = private unnamed_addr constant [51 x i8] c"The method used for calculating the feather offset\00", align 1
@rna_MaskSpline_offset_mode_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.195, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.197, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.200, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2366
@rna_MaskSpline_use_cyclic = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_fill, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskSpline_weight_interpolation, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.67, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSpline_use_cyclic_get, void (%struct.PointerRNA*, i32)* @MaskSpline_use_cyclic_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2205
@.str.64 = private unnamed_addr constant [21 x i8] c"weight_interpolation\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"Weight Interpolation\00", align 1
@.str.66 = private unnamed_addr constant [44 x i8] c"The type of weight interpolation for spline\00", align 1
@rna_MaskSpline_weight_interpolation_items = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.203, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2368
@rna_MaskSpline_use_fill = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_self_intersection_check, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_cyclic, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.72, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSpline_use_fill_get, void (%struct.PointerRNA*, i32)* @MaskSpline_use_fill_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2207
@.str.67 = private unnamed_addr constant [11 x i8] c"use_cyclic\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"Cyclic\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"Make this spline a closed loop\00", align 1
@rna_MaskSpline_use_self_intersection_check = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSpline_points, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskSpline_use_fill, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.73, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskSpline_use_self_intersection_check_get, void (%struct.PointerRNA*, i32)* @MaskSpline_use_self_intersection_check_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2209
@.str.70 = private unnamed_addr constant [9 x i8] c"use_fill\00", align 1
@.str.71 = private unnamed_addr constant [5 x i8] c"Fill\00", align 1
@.str.72 = private unnamed_addr constant [24 x i8] c"Make this spline filled\00", align 1
@.str.73 = private unnamed_addr constant [28 x i8] c"use_self_intersection_check\00", align 1
@.str.74 = private unnamed_addr constant [24 x i8] c"Self Intersection Check\00", align 1
@.str.75 = private unnamed_addr constant [40 x i8] c"Prevent feather from self-intersections\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"points\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"Points\00", align 1
@.str.78 = private unnamed_addr constant [21 x i8] c"Collection of points\00", align 1
@RNA_MaskSplinePoints = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskLayer to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskSplines to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSplinePoints_rna_properties to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplinePoints_rna_type to i8*) } }, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.104, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoints_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase { i8* bitcast (%struct.FunctionRNA* @rna_MaskSplinePoints_add_func to i8*), i8* bitcast (%struct.FunctionRNA* @rna_MaskSplinePoints_remove_func to i8*) } }, align 8, !dbg !2283
@RNA_MaskSplines = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePoints to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskSpline to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskSplines_rna_properties to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplines_active_point to i8*) } }, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.93, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplines_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase { i8* bitcast (%struct.FunctionRNA* @rna_MaskSplines_new_func to i8*), i8* bitcast (%struct.FunctionRNA* @rna_MaskSplines_remove_func to i8*) } }, align 8, !dbg !2232
@.str.79 = private unnamed_addr constant [11 x i8] c"MaskSpline\00", align 1
@.str.80 = private unnamed_addr constant [12 x i8] c"Mask spline\00", align 1
@.str.81 = private unnamed_addr constant [43 x i8] c"Single spline used for defining mask shape\00", align 1
@rna_MaskSplines_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_active, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplines_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplines_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2217
@rna_MaskSplines_active = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_active_point, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i32 41943041, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplines_active_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplines_active_set, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSpline }, align 8, !dbg !2219
@rna_MaskSplines_active_point = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_active, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i32 0, i32 0), i32 41943041, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.84, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplines_active_point_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplines_active_point_set, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSplinePoint }, align 8, !dbg !2221
@.str.82 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.83 = private unnamed_addr constant [14 x i8] c"Active Spline\00", align 1
@.str.84 = private unnamed_addr constant [31 x i8] c"Active spline of masking layer\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"active_point\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"spline\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"The newly created spline\00", align 1
@rna_MaskSplines_new_spline = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 8388616, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSpline }, align 8, !dbg !2223
@rna_MaskSplines_remove_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* null, i8* bitcast (%struct.FunctionRNA* @rna_MaskSplines_new_func to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplines_remove_spline to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplines_remove_spline to i8*) } }, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i32 2064, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.92, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskSplines_remove_call, %struct.PropertyRNA* null }, align 8, !dbg !2230
@.str.88 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str.89 = private unnamed_addr constant [30 x i8] c"Add a new spline to the layer\00", align 1
@rna_MaskSplines_new_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* bitcast (%struct.FunctionRNA* @rna_MaskSplines_remove_func to i8*), i8* null, %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplines_new_spline to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplines_new_spline to i8*) } }, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 2048, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.89, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskSplines_new_call, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskSplines_new_spline, i32 0, i32 0) }, align 8, !dbg !2225
@.str.90 = private unnamed_addr constant [21 x i8] c"The spline to remove\00", align 1
@rna_MaskSplines_remove_spline = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 264196, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSpline }, align 8, !dbg !2228
@.str.91 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.92 = private unnamed_addr constant [29 x i8] c"Remove a spline from a layer\00", align 1
@.str.93 = private unnamed_addr constant [12 x i8] c"MaskSplines\00", align 1
@.str.94 = private unnamed_addr constant [13 x i8] c"Mask Splines\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"Collection of masking splines\00", align 1
@rna_MaskSplinePoints_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoints_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskSplinePoints_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2236
@.str.96 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c"Number\00", align 1
@.str.98 = private unnamed_addr constant [38 x i8] c"Number of points to add to the spline\00", align 1
@rna_MaskSplinePoints_add_count = dso_local global %struct.IntPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.96, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.98, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* null, void (%struct.PointerRNA*, i32)* null, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* null, i32 0, i32 2147483647, i32 0, i32 2147483647, i32 1, i32 1, i32* null }, align 8, !dbg !2238
@rna_MaskSplinePoints_remove_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* null, i8* bitcast (%struct.FunctionRNA* @rna_MaskSplinePoints_add_func to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplinePoints_remove_point to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskSplinePoints_remove_point to i8*) } }, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i32 2064, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.103, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskSplinePoints_remove_call, %struct.PropertyRNA* null }, align 8, !dbg !2281
@.str.99 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.100 = private unnamed_addr constant [37 x i8] c"Add a number of point to this spline\00", align 1
@rna_MaskSplinePoints_add_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* bitcast (%struct.FunctionRNA* @rna_MaskSplinePoints_remove_func to i8*), i8* null, %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.IntPropertyRNA* @rna_MaskSplinePoints_add_count to i8*), i8* bitcast (%struct.IntPropertyRNA* @rna_MaskSplinePoints_add_count to i8*) } }, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i32 2048, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.100, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskSplinePoints_add_call, %struct.PropertyRNA* null }, align 8, !dbg !2277
@.str.101 = private unnamed_addr constant [6 x i8] c"point\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"The point to remove\00", align 1
@rna_MaskSplinePoints_remove_point = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.101, i32 0, i32 0), i32 264196, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskSplinePoint }, align 8, !dbg !2279
@.str.103 = private unnamed_addr constant [29 x i8] c"Remove a point from a spline\00", align 1
@RNA_MaskLayer = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_Mask to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskSplinePoints to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskLayer_rna_properties to i8*), i8* bitcast (%struct.BoolPropertyRNA* @rna_MaskLayer_use_fill_overlap to i8*) } }, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskLayer_name, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* @rna_MaskLayer_path, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase zeroinitializer }, align 8, !dbg !2313
@.str.104 = private unnamed_addr constant [17 x i8] c"MaskSplinePoints\00", align 1
@.str.105 = private unnamed_addr constant [19 x i8] c"Mask Spline Points\00", align 1
@.str.106 = private unnamed_addr constant [36 x i8] c"Collection of masking spline points\00", align 1
@rna_MaskLayer_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskLayer_name, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskLayer_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2287
@rna_MaskLayer_name = dso_local global %struct.StringPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_splines, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayer_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0), i32 262145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 3, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] [i32 64, i32 0, i32 0], i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* @rna_Mask_update_data, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, i8*)* @MaskLayer_name_get, i32 (%struct.PointerRNA*)* @MaskLayer_name_length, void (%struct.PointerRNA*, i8*)* @MaskLayer_name_set, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 64, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, align 8, !dbg !2289
@.str.107 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c"Unique name of layer\00", align 1
@rna_MaskLayer_hide = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide_select, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_splines, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i32 0, i32 0), i32 4099, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.115, i32 0, i32 0), i32 253, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 353828864, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_hide_get, void (%struct.PointerRNA*, i32)* @MaskLayer_hide_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2293
@.str.110 = private unnamed_addr constant [8 x i8] c"splines\00", align 1
@.str.111 = private unnamed_addr constant [8 x i8] c"Splines\00", align 1
@.str.112 = private unnamed_addr constant [47 x i8] c"Collection of splines which defines this layer\00", align 1
@rna_MaskLayer_hide_select = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide_render, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i32 0, i32 0), i32 4099, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.118, i32 0, i32 0), i32 255, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 353828864, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_hide_select_get, void (%struct.PointerRNA*, i32)* @MaskLayer_hide_select_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2295
@.str.113 = private unnamed_addr constant [5 x i8] c"hide\00", align 1
@.str.114 = private unnamed_addr constant [14 x i8] c"Restrict View\00", align 1
@.str.115 = private unnamed_addr constant [36 x i8] c"Restrict visibility in the viewport\00", align 1
@rna_MaskLayer_hide_render = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_select, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide_select, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.119, i32 0, i32 0), i32 4099, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.121, i32 0, i32 0), i32 257, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_hide_render_get, void (%struct.PointerRNA*, i32)* @MaskLayer_hide_render_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2297
@.str.116 = private unnamed_addr constant [12 x i8] c"hide_select\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"Restrict Select\00", align 1
@.str.118 = private unnamed_addr constant [35 x i8] c"Restrict selection in the viewport\00", align 1
@rna_MaskLayer_select = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskLayer_alpha, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_hide_render, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.122, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_select_get, void (%struct.PointerRNA*, i32)* @MaskLayer_select_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2299
@.str.119 = private unnamed_addr constant [12 x i8] c"hide_render\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"Restrict Render\00", align 1
@.str.121 = private unnamed_addr constant [23 x i8] c"Restrict renderability\00", align 1
@rna_MaskLayer_alpha = dso_local global %struct.FloatPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskLayer_blend, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_select, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i32 8195, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.125, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 2, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 128, i32 4, %struct.StructRNA* null, i8* null }, float (%struct.PointerRNA*)* @MaskLayer_alpha_get, void (%struct.PointerRNA*, float)* @MaskLayer_alpha_set, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*)* null, void (%struct.PointerRNA*, float*, float*, float*, float*)* null, float (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*)* null, float 0.000000e+00, float 1.000000e+00, float 0xC7EFFFFFE0000000, float 0x47EFFFFFE0000000, float 0x3FB99999A0000000, i32 3, float 0.000000e+00, float* null }, align 8, !dbg !2301
@.str.122 = private unnamed_addr constant [48 x i8] c"Layer is selected for editing in the Dope Sheet\00", align 1
@rna_MaskLayer_blend = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_invert, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.FloatPropertyRNA, %struct.FloatPropertyRNA* @rna_MaskLayer_alpha, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.126, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.128, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_blend_get, void (%struct.PointerRNA*, i32)* @MaskLayer_blend_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([10 x %struct.EnumPropertyItem], [10 x %struct.EnumPropertyItem]* @rna_MaskLayer_blend_items, i32 0, i32 0), i32 9, i32 0 }, align 8, !dbg !2303
@.str.123 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.124 = private unnamed_addr constant [8 x i8] c"Opacity\00", align 1
@.str.125 = private unnamed_addr constant [15 x i8] c"Render Opacity\00", align 1
@rna_MaskLayer_invert = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskLayer_falloff, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskLayer_blend, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.130, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_invert_get, void (%struct.PointerRNA*, i32)* @MaskLayer_invert_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2305
@.str.126 = private unnamed_addr constant [6 x i8] c"blend\00", align 1
@.str.127 = private unnamed_addr constant [6 x i8] c"Blend\00", align 1
@.str.128 = private unnamed_addr constant [31 x i8] c"Method of blending mask layers\00", align 1
@rna_MaskLayer_blend_items = internal global [10 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.205, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.207, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.209, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.211, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.215, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.217, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.219, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.221, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2370
@rna_MaskLayer_falloff = dso_local global %struct.EnumPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_use_fill_holes, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_invert, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.131, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.133, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.134, i32 0, i32 0), i32 4, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_falloff_get, void (%struct.PointerRNA*, i32)* @MaskLayer_falloff_set, %struct.EnumPropertyItem* (%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, i8* null, %struct.EnumPropertyItem* getelementptr inbounds ([6 x %struct.EnumPropertyItem], [6 x %struct.EnumPropertyItem]* @rna_MaskLayer_falloff_items, i32 0, i32 0), i32 5, i32 0 }, align 8, !dbg !2307
@.str.129 = private unnamed_addr constant [7 x i8] c"invert\00", align 1
@.str.130 = private unnamed_addr constant [28 x i8] c"Invert the mask black/white\00", align 1
@rna_MaskLayer_use_fill_holes = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_use_fill_overlap, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.EnumPropertyRNA, %struct.EnumPropertyRNA* @rna_MaskLayer_falloff, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.135, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.137, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_use_fill_holes_get, void (%struct.PointerRNA*, i32)* @MaskLayer_use_fill_holes_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2309
@.str.131 = private unnamed_addr constant [8 x i8] c"falloff\00", align 1
@.str.132 = private unnamed_addr constant [8 x i8] c"Falloff\00", align 1
@.str.133 = private unnamed_addr constant [25 x i8] c"Falloff type the feather\00", align 1
@.str.134 = private unnamed_addr constant [6 x i8] c"Curve\00", align 1
@rna_MaskLayer_falloff_items = internal global [6 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.198, i32 0, i32 0), i32 558, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.223, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), i32 559, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.226, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.227, i32 0, i32 0), i32 560, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.229, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.230, i32 0, i32 0), i32 561, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.201, i32 0, i32 0), i32 562, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.233, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !2375
@rna_MaskLayer_use_fill_overlap = dso_local global %struct.BoolPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.BoolPropertyRNA, %struct.BoolPropertyRNA* @rna_MaskLayer_use_fill_holes, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i32 0, i32 0), i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.140, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 0, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 352321537, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @MaskLayer_use_fill_overlap_get, void (%struct.PointerRNA*, i32)* @MaskLayer_use_fill_overlap_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, i32 0, i32* null }, align 8, !dbg !2311
@.str.135 = private unnamed_addr constant [15 x i8] c"use_fill_holes\00", align 1
@.str.136 = private unnamed_addr constant [16 x i8] c"Calculate Holes\00", align 1
@.str.137 = private unnamed_addr constant [48 x i8] c"Calculate holes when filling overlapping curves\00", align 1
@.str.138 = private unnamed_addr constant [17 x i8] c"use_fill_overlap\00", align 1
@.str.139 = private unnamed_addr constant [18 x i8] c"Calculate Overlap\00", align 1
@.str.140 = private unnamed_addr constant [56 x i8] c"Calculate self intersections and overlap before filling\00", align 1
@RNA_Mask = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* bitcast (%struct.StructRNA* @RNA_MaskLayers to i8*), i8* bitcast (%struct.StructRNA* @RNA_MaskLayer to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_Mask_layers to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_Mask_animation_data to i8*) } }, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* null, i8* null, i32 7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 467, %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_ID_name, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_ID_rna_properties, i32 0, i32 0), %struct.StructRNA* @RNA_ID, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* @rna_ID_refine, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* @rna_ID_idprops, %struct.ListBase zeroinitializer }, align 8, !dbg !2325
@.str.141 = private unnamed_addr constant [10 x i8] c"MaskLayer\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"Mask Layer\00", align 1
@.str.143 = private unnamed_addr constant [37 x i8] c"Single layer used for masking pixels\00", align 1
@rna_Mask_active_layer_index = dso_local global %struct.IntPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_frame_start, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_Mask_layers, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.147, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.149, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 353828864, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @Mask_active_layer_index_get, void (%struct.PointerRNA*, i32)* @Mask_active_layer_index_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* @rna_Mask_layer_active_index_range, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* null, i32 -10000, i32 10000, i32 -2147483648, i32 2147483647, i32 1, i32 0, i32* null }, align 8, !dbg !2317
@.str.144 = private unnamed_addr constant [7 x i8] c"layers\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"Layers\00", align 1
@.str.146 = private unnamed_addr constant [45 x i8] c"Collection of layers which defines this mask\00", align 1
@RNA_MaskLayers = dso_local global %struct.StructRNA { %struct.ContainerRNA { i8* null, i8* bitcast (%struct.StructRNA* @RNA_Mask to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.CollectionPropertyRNA* @rna_MaskLayers_rna_properties to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskLayers_active to i8*) } }, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.171, i32 0, i32 0), i8* null, i8* null, i32 4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 17, %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayers_rna_properties, i32 0, i32 0), %struct.StructRNA* null, %struct.StructRNA* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i8* (%struct.PointerRNA*)* null, %struct.StructRNA* (%struct.Main*, %struct.ReportList*, i8*, i8*, i32 (%struct.PointerRNA*, i8*, i32*)*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)*)* null, void (%struct.Main*, %struct.StructRNA*)* null, i8** (%struct.PointerRNA*)* null, %struct.IDProperty* (%struct.PointerRNA*, i8)* null, %struct.ListBase { i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_new_func to i8*), i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_clear_func to i8*) } }, align 8, !dbg !2345
@rna_Mask_frame_start = dso_local global %struct.IntPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_frame_end, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_active_layer_index, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.150, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.152, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 393233, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 353828864, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @Mask_frame_start_get, void (%struct.PointerRNA*, i32)* @Mask_frame_start_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* null, i32 0, i32 300000, i32 0, i32 300000, i32 1, i32 0, i32* null }, align 8, !dbg !2319
@.str.147 = private unnamed_addr constant [19 x i8] c"active_layer_index\00", align 1
@.str.148 = private unnamed_addr constant [19 x i8] c"Active Shape Index\00", align 1
@.str.149 = private unnamed_addr constant [51 x i8] c"Index of active layer in list of all mask's layers\00", align 1
@rna_Mask_frame_end = dso_local global %struct.IntPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_Mask_animation_data, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_frame_start, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.153, i32 0, i32 0), i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.155, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 393233, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 353828864, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, i32 (%struct.PointerRNA*)* @Mask_frame_end_get, void (%struct.PointerRNA*, i32)* @Mask_frame_end_set, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*)* null, void (%struct.PointerRNA*, i32*, i32*, i32*, i32*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*, i32*)* null, i32 0, i32 300000, i32 0, i32 300000, i32 1, i32 0, i32* null }, align 8, !dbg !2321
@.str.150 = private unnamed_addr constant [12 x i8] c"frame_start\00", align 1
@.str.151 = private unnamed_addr constant [12 x i8] c"Start Frame\00", align 1
@.str.152 = private unnamed_addr constant [45 x i8] c"First frame of the mask (used for sequencer)\00", align 1
@rna_Mask_animation_data = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.IntPropertyRNA, %struct.IntPropertyRNA* @rna_Mask_frame_end, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i32 0, i32 0), i32 8388608, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.158, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @Mask_animation_data_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_AnimData }, align 8, !dbg !2323
@.str.153 = private unnamed_addr constant [10 x i8] c"frame_end\00", align 1
@.str.154 = private unnamed_addr constant [10 x i8] c"End Frame\00", align 1
@.str.155 = private unnamed_addr constant [45 x i8] c"Final frame of the mask (used for sequencer)\00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"animation_data\00", align 1
@.str.157 = private unnamed_addr constant [15 x i8] c"Animation Data\00", align 1
@.str.158 = private unnamed_addr constant [34 x i8] c"Animation data for this datablock\00", align 1
@.str.159 = private unnamed_addr constant [5 x i8] c"Mask\00", align 1
@.str.160 = private unnamed_addr constant [45 x i8] c"Mask datablock defining mask for compositing\00", align 1
@rna_ID_name = external dso_local global %struct.StringPropertyRNA, align 8
@rna_ID_rna_properties = external dso_local global %struct.CollectionPropertyRNA, align 8
@rna_MaskLayers_rna_type = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayers_active, i32 0, i32 0), %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayers_rna_properties, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 8912896, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskLayers_rna_type_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_Struct }, align 8, !dbg !2329
@rna_MaskLayers_active = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayers_rna_type, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i32 0, i32 0), i32 41943041, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.162, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskLayers_active_get, void (%struct.PointerRNA*, %struct.PointerRNA*)* @MaskLayers_active_set, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskLayer }, align 8, !dbg !2331
@.str.161 = private unnamed_addr constant [13 x i8] c"Active Shape\00", align 1
@.str.162 = private unnamed_addr constant [26 x i8] c"Active layer in this mask\00", align 1
@rna_MaskLayers_new_layer = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* getelementptr inbounds (%struct.StringPropertyRNA, %struct.StringPropertyRNA* @rna_MaskLayers_new_name, i32 0, i32 0), i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i32 0, i32 0), i32 8388616, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskLayer }, align 8, !dbg !2335
@.str.163 = private unnamed_addr constant [18 x i8] c"Name of new layer\00", align 1
@rna_MaskLayers_new_name = dso_local global %struct.StringPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayers_new_layer, i32 0, i32 0), %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0), i32 262145, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.163, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 3, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, i8*)* null, i32 (%struct.PointerRNA*)* null, void (%struct.PointerRNA*, i8*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, void (%struct.PointerRNA*, %struct.PropertyRNA*, i8*)* null, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0) }, align 8, !dbg !2333
@.str.164 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"New mask layer\00", align 1
@rna_MaskLayers_remove_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_clear_func to i8*), i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_new_func to i8*), %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskLayers_remove_layer to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskLayers_remove_layer to i8*) } }, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.168, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskLayers_remove_call, %struct.PropertyRNA* null }, align 8, !dbg !2341
@.str.166 = private unnamed_addr constant [23 x i8] c"Add layer to this mask\00", align 1
@rna_MaskLayers_new_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_remove_func to i8*), i8* null, %struct.GHash* null, %struct.ListBase { i8* bitcast (%struct.StringPropertyRNA* @rna_MaskLayers_new_name to i8*), i8* bitcast (%struct.PointerPropertyRNA* @rna_MaskLayers_new_layer to i8*) } }, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.166, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskLayers_new_call, %struct.PropertyRNA* getelementptr inbounds (%struct.PointerPropertyRNA, %struct.PointerPropertyRNA* @rna_MaskLayers_new_layer, i32 0, i32 0) }, align 8, !dbg !2337
@.str.167 = private unnamed_addr constant [20 x i8] c"Shape to be removed\00", align 1
@rna_MaskLayers_remove_layer = dso_local global %struct.PointerPropertyRNA { %struct.PropertyRNA { %struct.PropertyRNA* null, %struct.PropertyRNA* null, i32 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i32 0, i32 0), i32 264196, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.167, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i32 5, i32 0, i32 (%struct.PointerRNA*, i32*)* null, i32 0, [3 x i32] zeroinitializer, i32 0, void (%struct.Main*, %struct.Scene*, %struct.PointerRNA*)* null, i32 0, i32 (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, i32)* null, i32 0, i32 -1, %struct.StructRNA* null, i8* null }, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, void (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* (%struct.PointerRNA*)* null, i32 (%struct.PointerRNA*, %struct.PointerRNA*)* null, %struct.StructRNA* @RNA_MaskLayer }, align 8, !dbg !2339
@rna_MaskLayers_clear_func = dso_local global %struct.FunctionRNA { %struct.ContainerRNA { i8* null, i8* bitcast (%struct.FunctionRNA* @rna_MaskLayers_remove_func to i8*), %struct.GHash* null, %struct.ListBase zeroinitializer }, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.170, i32 0, i32 0), void (%struct.bContext*, %struct.ReportList*, %struct.PointerRNA*, %struct.ParameterList*)* @MaskLayers_clear_call, %struct.PropertyRNA* null }, align 8, !dbg !2343
@.str.168 = private unnamed_addr constant [28 x i8] c"Remove layer from this mask\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.170 = private unnamed_addr constant [23 x i8] c"Remove all mask layers\00", align 1
@.str.171 = private unnamed_addr constant [11 x i8] c"MaskLayers\00", align 1
@.str.172 = private unnamed_addr constant [12 x i8] c"Mask Layers\00", align 1
@.str.173 = private unnamed_addr constant [34 x i8] c"Collection of layers used by mask\00", align 1
@.str.174 = private unnamed_addr constant [46 x i8] c"Mask layer '%s' does not contain spline given\00", align 1
@MEM_recallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.rna_MaskSpline_points_add = private unnamed_addr constant [26 x i8] c"rna_MaskSpline_points_add\00", align 1
@.str.175 = private unnamed_addr constant [38 x i8] c"Mask layer not found for given spline\00", align 1
@.str.176 = private unnamed_addr constant [35 x i8] c"Point is not found in given spline\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.177 = private unnamed_addr constant [18 x i8] c"remove mask point\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.178 = private unnamed_addr constant [39 x i8] c"Mask layer '%s' not found in mask '%s'\00", align 1
@.str.179 = private unnamed_addr constant [10 x i8] c"MOVIECLIP\00", align 1
@.str.180 = private unnamed_addr constant [11 x i8] c"Movie Clip\00", align 1
@.str.181 = private unnamed_addr constant [12 x i8] c"POINT_TRACK\00", align 1
@.str.182 = private unnamed_addr constant [12 x i8] c"Point Track\00", align 1
@.str.183 = private unnamed_addr constant [12 x i8] c"PLANE_TRACK\00", align 1
@.str.184 = private unnamed_addr constant [12 x i8] c"Plane Track\00", align 1
@.str.185 = private unnamed_addr constant [5 x i8] c"AUTO\00", align 1
@.str.186 = private unnamed_addr constant [5 x i8] c"Auto\00", align 1
@.str.187 = private unnamed_addr constant [7 x i8] c"VECTOR\00", align 1
@.str.188 = private unnamed_addr constant [7 x i8] c"Vector\00", align 1
@.str.189 = private unnamed_addr constant [8 x i8] c"ALIGNED\00", align 1
@.str.190 = private unnamed_addr constant [15 x i8] c"Aligned Single\00", align 1
@.str.191 = private unnamed_addr constant [19 x i8] c"ALIGNED_DOUBLESIDE\00", align 1
@.str.192 = private unnamed_addr constant [8 x i8] c"Aligned\00", align 1
@.str.193 = private unnamed_addr constant [5 x i8] c"FREE\00", align 1
@.str.194 = private unnamed_addr constant [5 x i8] c"Free\00", align 1
@.str.195 = private unnamed_addr constant [5 x i8] c"EVEN\00", align 1
@.str.196 = private unnamed_addr constant [5 x i8] c"Even\00", align 1
@.str.197 = private unnamed_addr constant [30 x i8] c"Calculate even feather offset\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"SMOOTH\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"Smooth\00", align 1
@.str.200 = private unnamed_addr constant [43 x i8] c"Calculate feather offset as a second curve\00", align 1
@.str.201 = private unnamed_addr constant [7 x i8] c"LINEAR\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"Linear\00", align 1
@.str.203 = private unnamed_addr constant [5 x i8] c"EASE\00", align 1
@.str.204 = private unnamed_addr constant [5 x i8] c"Ease\00", align 1
@.str.205 = private unnamed_addr constant [10 x i8] c"MERGE_ADD\00", align 1
@.str.206 = private unnamed_addr constant [10 x i8] c"Merge Add\00", align 1
@.str.207 = private unnamed_addr constant [15 x i8] c"MERGE_SUBTRACT\00", align 1
@.str.208 = private unnamed_addr constant [15 x i8] c"Merge Subtract\00", align 1
@.str.209 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str.210 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.211 = private unnamed_addr constant [9 x i8] c"SUBTRACT\00", align 1
@.str.212 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.213 = private unnamed_addr constant [8 x i8] c"LIGHTEN\00", align 1
@.str.214 = private unnamed_addr constant [8 x i8] c"Lighten\00", align 1
@.str.215 = private unnamed_addr constant [7 x i8] c"DARKEN\00", align 1
@.str.216 = private unnamed_addr constant [7 x i8] c"Darken\00", align 1
@.str.217 = private unnamed_addr constant [4 x i8] c"MUL\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.219 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@.str.220 = private unnamed_addr constant [8 x i8] c"Replace\00", align 1
@.str.221 = private unnamed_addr constant [11 x i8] c"DIFFERENCE\00", align 1
@.str.222 = private unnamed_addr constant [11 x i8] c"Difference\00", align 1
@.str.223 = private unnamed_addr constant [15 x i8] c"Smooth falloff\00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c"SPHERE\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"Sphere\00", align 1
@.str.226 = private unnamed_addr constant [18 x i8] c"Spherical falloff\00", align 1
@.str.227 = private unnamed_addr constant [5 x i8] c"ROOT\00", align 1
@.str.228 = private unnamed_addr constant [5 x i8] c"Root\00", align 1
@.str.229 = private unnamed_addr constant [13 x i8] c"Root falloff\00", align 1
@.str.230 = private unnamed_addr constant [6 x i8] c"SHARP\00", align 1
@.str.231 = private unnamed_addr constant [6 x i8] c"Sharp\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"Sharp falloff\00", align 1
@.str.233 = private unnamed_addr constant [15 x i8] c"Linear falloff\00", align 1
@.str.234 = private unnamed_addr constant [13 x i8] c"layers[\22%s\22]\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !2381 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2387, metadata !DIExpression()), !dbg !2388
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2389, metadata !DIExpression()), !dbg !2390
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2391
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !2392
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !2392
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2393
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !2394
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2395
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !2396
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !2396
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !2396
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2397
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !2398
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskParent_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !2399
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2400
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2401
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !2402
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2403
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !2405
  %10 = load i32, i32* %valid, align 8, !dbg !2405
  %tobool = icmp ne i32 %10, 0, !dbg !2403
  br i1 %tobool, label %if.then, label %if.end, !dbg !2406

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2407
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !2408
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2409
  call void @MaskParent_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !2410
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !2410
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !2410
  br label %if.end, !dbg !2407

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2411
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator*, %struct.PointerRNA*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @MaskParent_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !2412 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2415, metadata !DIExpression()), !dbg !2416
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2417
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !2418
  ret void, !dbg !2419
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2420 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2423, metadata !DIExpression()), !dbg !2424
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2425
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !2426
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2427
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !2429
  %2 = load i32, i32* %valid, align 8, !dbg !2429
  %tobool = icmp ne i32 %2, 0, !dbg !2427
  br i1 %tobool, label %if.then, label %if.end, !dbg !2430

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2431
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !2432
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2433
  call void @MaskParent_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !2434
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !2434
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !2434
  br label %if.end, !dbg !2431

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2435
}

declare dso_local void @rna_builtin_properties_next(%struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2436 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2437, metadata !DIExpression()), !dbg !2438
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2439
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !2440
  ret void, !dbg !2441
}

declare dso_local void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskParent_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !2442 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2445, metadata !DIExpression()), !dbg !2446
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2447, metadata !DIExpression()), !dbg !2448
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !2449, metadata !DIExpression()), !dbg !2450
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2451
  %1 = load i8*, i8** %key.addr, align 8, !dbg !2452
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2453
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !2454
  ret i32 %call, !dbg !2455
}

declare dso_local i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA*, i8*, %struct.PointerRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !2456 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2459, metadata !DIExpression()), !dbg !2460
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2461
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !2462
  ret void, !dbg !2463
}

declare dso_local void @rna_builtin_type_get(%struct.PointerRNA* sret, %struct.PointerRNA*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_id_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !2464 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2465, metadata !DIExpression()), !dbg !2466
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2467, metadata !DIExpression()), !dbg !2468
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2469
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2470
  %1 = load i8*, i8** %data1, align 8, !dbg !2470
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2471
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2468
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2472
  %4 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2473
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %4, i32 0, i32 2, !dbg !2474
  %5 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !2474
  %6 = bitcast %struct.ID* %5 to i8*, !dbg !2473
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.StructRNA* @RNA_ID, i8* %6), !dbg !2475
  ret void, !dbg !2476
}

declare dso_local void @rna_pointer_inherit_refine(%struct.PointerRNA* sret, %struct.PointerRNA*, %struct.StructRNA*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_id_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !2477 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2480, metadata !DIExpression()), !dbg !2481
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !2482, metadata !DIExpression()), !dbg !2483
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2484
  call void @rna_MaskParent_id_set(%struct.PointerRNA* %0, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value), !dbg !2485
  ret void, !dbg !2486
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskParent_id_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !2487 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mpar = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2489, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !2491, metadata !DIExpression()), !dbg !2492
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %mpar, metadata !2493, metadata !DIExpression()), !dbg !2494
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2495
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2496
  %1 = load i8*, i8** %data, align 8, !dbg !2496
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2497
  store %struct.MaskParent* %2, %struct.MaskParent** %mpar, align 8, !dbg !2494
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %value, i32 0, i32 2, !dbg !2498
  %3 = load i8*, i8** %data1, align 8, !dbg !2498
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !2499
  %5 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2500
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %5, i32 0, i32 2, !dbg !2501
  store %struct.ID* %4, %struct.ID** %id, align 8, !dbg !2502
  ret void, !dbg !2503
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskParent_id_type_get(%struct.PointerRNA* %ptr) #0 !dbg !2504 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2507, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2509, metadata !DIExpression()), !dbg !2510
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2511
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2512
  %1 = load i8*, i8** %data1, align 8, !dbg !2512
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2513
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2510
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2514
  %id_type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 0, !dbg !2515
  %4 = load i32, i32* %id_type, align 8, !dbg !2515
  ret i32 %4, !dbg !2516
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_id_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !2517 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2520, metadata !DIExpression()), !dbg !2521
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2522, metadata !DIExpression()), !dbg !2523
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2524
  %1 = load i32, i32* %value.addr, align 4, !dbg !2525
  call void @rna_MaskParent_id_type_set(%struct.PointerRNA* %0, i32 %1), !dbg !2526
  ret void, !dbg !2527
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskParent_id_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !2528 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %mpar = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2529, metadata !DIExpression()), !dbg !2530
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2531, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %mpar, metadata !2533, metadata !DIExpression()), !dbg !2534
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2535
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2536
  %1 = load i8*, i8** %data, align 8, !dbg !2536
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2537
  store %struct.MaskParent* %2, %struct.MaskParent** %mpar, align 8, !dbg !2534
  %3 = load i32, i32* %value.addr, align 4, !dbg !2538
  %4 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2539
  %id_type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %4, i32 0, i32 0, !dbg !2540
  store i32 %3, i32* %id_type, align 8, !dbg !2541
  %5 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2542
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %5, i32 0, i32 2, !dbg !2544
  %6 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !2544
  %tobool = icmp ne %struct.ID* %6, null, !dbg !2545
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !2546

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2547
  %id1 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %7, i32 0, i32 2, !dbg !2547
  %8 = load %struct.ID*, %struct.ID** %id1, align 8, !dbg !2547
  %name = getelementptr inbounds %struct.ID, %struct.ID* %8, i32 0, i32 4, !dbg !2547
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !2547
  %9 = bitcast i8* %arraydecay to i16*, !dbg !2547
  %10 = load i16, i16* %9, align 8, !dbg !2547
  %conv = sext i16 %10 to i32, !dbg !2547
  %11 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2548
  %id_type2 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %11, i32 0, i32 0, !dbg !2549
  %12 = load i32, i32* %id_type2, align 8, !dbg !2549
  %cmp = icmp ne i32 %conv, %12, !dbg !2550
  br i1 %cmp, label %if.then, label %if.end, !dbg !2551

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !2552
  %id4 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %13, i32 0, i32 2, !dbg !2553
  store %struct.ID* null, %struct.ID** %id4, align 8, !dbg !2554
  br label %if.end, !dbg !2552

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !2555
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskParent_type_get(%struct.PointerRNA* %ptr) #0 !dbg !2556 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2557, metadata !DIExpression()), !dbg !2558
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2559, metadata !DIExpression()), !dbg !2560
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2561
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2562
  %1 = load i8*, i8** %data1, align 8, !dbg !2562
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2563
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2560
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2564
  %type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 1, !dbg !2565
  %4 = load i32, i32* %type, align 4, !dbg !2565
  ret i32 %4, !dbg !2566
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !2567 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2568, metadata !DIExpression()), !dbg !2569
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2570, metadata !DIExpression()), !dbg !2571
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2572, metadata !DIExpression()), !dbg !2573
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2574
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2575
  %1 = load i8*, i8** %data1, align 8, !dbg !2575
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2576
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2573
  %3 = load i32, i32* %value.addr, align 4, !dbg !2577
  %4 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2578
  %type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %4, i32 0, i32 1, !dbg !2579
  store i32 %3, i32* %type, align 4, !dbg !2580
  ret void, !dbg !2581
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_parent_get(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !2582 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2585, metadata !DIExpression()), !dbg !2586
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !2587, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2589, metadata !DIExpression()), !dbg !2590
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2591
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2592
  %1 = load i8*, i8** %data1, align 8, !dbg !2592
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2593
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2590
  %3 = load i8*, i8** %value.addr, align 8, !dbg !2594
  %4 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2595
  %parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %4, i32 0, i32 3, !dbg !2596
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %parent, i64 0, i64 0, !dbg !2595
  %call = call i8* @BLI_strncpy_utf8(i8* %3, i8* %arraydecay, i64 64), !dbg !2597
  ret void, !dbg !2598
}

declare dso_local i8* @BLI_strncpy_utf8(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskParent_parent_length(%struct.PointerRNA* %ptr) #0 !dbg !2599 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2600, metadata !DIExpression()), !dbg !2601
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2602, metadata !DIExpression()), !dbg !2603
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2604
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2605
  %1 = load i8*, i8** %data1, align 8, !dbg !2605
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2606
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2603
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2607
  %parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 3, !dbg !2608
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %parent, i64 0, i64 0, !dbg !2607
  %call = call i64 @strlen(i8* %arraydecay) #5, !dbg !2609
  %conv = trunc i64 %call to i32, !dbg !2609
  ret i32 %conv, !dbg !2610
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_parent_set(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !2611 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2614, metadata !DIExpression()), !dbg !2615
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !2616, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2618, metadata !DIExpression()), !dbg !2619
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2620
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2621
  %1 = load i8*, i8** %data1, align 8, !dbg !2621
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2622
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2619
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2623
  %parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 3, !dbg !2624
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %parent, i64 0, i64 0, !dbg !2623
  %4 = load i8*, i8** %value.addr, align 8, !dbg !2625
  %call = call i8* @BLI_strncpy_utf8(i8* %arraydecay, i8* %4, i64 64), !dbg !2626
  ret void, !dbg !2627
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_sub_parent_get(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !2628 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2633, metadata !DIExpression()), !dbg !2634
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2635
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2636
  %1 = load i8*, i8** %data1, align 8, !dbg !2636
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2637
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2634
  %3 = load i8*, i8** %value.addr, align 8, !dbg !2638
  %4 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2639
  %sub_parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %4, i32 0, i32 4, !dbg !2640
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent, i64 0, i64 0, !dbg !2639
  %call = call i8* @BLI_strncpy_utf8(i8* %3, i8* %arraydecay, i64 64), !dbg !2641
  ret void, !dbg !2642
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskParent_sub_parent_length(%struct.PointerRNA* %ptr) #0 !dbg !2643 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2644, metadata !DIExpression()), !dbg !2645
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2646, metadata !DIExpression()), !dbg !2647
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2648
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2649
  %1 = load i8*, i8** %data1, align 8, !dbg !2649
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2650
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2647
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2651
  %sub_parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 4, !dbg !2652
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent, i64 0, i64 0, !dbg !2651
  %call = call i64 @strlen(i8* %arraydecay) #5, !dbg !2653
  %conv = trunc i64 %call to i32, !dbg !2653
  ret i32 %conv, !dbg !2654
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskParent_sub_parent_set(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !2655 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %data = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2656, metadata !DIExpression()), !dbg !2657
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !2658, metadata !DIExpression()), !dbg !2659
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %data, metadata !2660, metadata !DIExpression()), !dbg !2661
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2662
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2663
  %1 = load i8*, i8** %data1, align 8, !dbg !2663
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !2664
  store %struct.MaskParent* %2, %struct.MaskParent** %data, align 8, !dbg !2661
  %3 = load %struct.MaskParent*, %struct.MaskParent** %data, align 8, !dbg !2665
  %sub_parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 4, !dbg !2666
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent, i64 0, i64 0, !dbg !2665
  %4 = load i8*, i8** %value.addr, align 8, !dbg !2667
  %call = call i8* @BLI_strncpy_utf8(i8* %arraydecay, i8* %4, i64 64), !dbg !2668
  ret void, !dbg !2669
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !2670 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2671, metadata !DIExpression()), !dbg !2672
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2673, metadata !DIExpression()), !dbg !2674
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2675
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !2676
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !2676
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2677
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !2678
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2679
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !2680
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !2680
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !2680
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2681
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !2682
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePointUW_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !2683
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2684
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2685
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !2686
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2687
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !2689
  %10 = load i32, i32* %valid, align 8, !dbg !2689
  %tobool = icmp ne i32 %10, 0, !dbg !2687
  br i1 %tobool, label %if.then, label %if.end, !dbg !2690

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2691
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !2692
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2693
  call void @MaskSplinePointUW_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !2694
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !2694
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !2694
  br label %if.end, !dbg !2691

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2695
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSplinePointUW_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !2696 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2697, metadata !DIExpression()), !dbg !2698
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2699
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !2700
  ret void, !dbg !2701
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2702 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2703, metadata !DIExpression()), !dbg !2704
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2705
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !2706
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2707
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !2709
  %2 = load i32, i32* %valid, align 8, !dbg !2709
  %tobool = icmp ne i32 %2, 0, !dbg !2707
  br i1 %tobool, label %if.then, label %if.end, !dbg !2710

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2711
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !2712
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2713
  call void @MaskSplinePointUW_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !2714
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !2714
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2714
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !2714
  br label %if.end, !dbg !2711

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2715
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2716 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2717, metadata !DIExpression()), !dbg !2718
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2719
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !2720
  ret void, !dbg !2721
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePointUW_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !2722 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2723, metadata !DIExpression()), !dbg !2724
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2725, metadata !DIExpression()), !dbg !2726
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !2727, metadata !DIExpression()), !dbg !2728
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2729
  %1 = load i8*, i8** %key.addr, align 8, !dbg !2730
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2731
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !2732
  ret i32 %call, !dbg !2733
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !2734 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2735, metadata !DIExpression()), !dbg !2736
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2737
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !2738
  ret void, !dbg !2739
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @MaskSplinePointUW_u_get(%struct.PointerRNA* %ptr) #0 !dbg !2740 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2743, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2745, metadata !DIExpression()), !dbg !2746
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2747
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2748
  %1 = load i8*, i8** %data1, align 8, !dbg !2748
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2749
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2746
  %3 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2750
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %3, i32 0, i32 0, !dbg !2751
  %4 = load float, float* %u, align 4, !dbg !2751
  ret float %4, !dbg !2752
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_u_set(%struct.PointerRNA* %ptr, float %value) #0 !dbg !2753 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca float, align 4
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2758, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2760, metadata !DIExpression()), !dbg !2761
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2762
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2763
  %1 = load i8*, i8** %data1, align 8, !dbg !2763
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2764
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2761
  %3 = load float, float* %value.addr, align 4, !dbg !2765
  %cmp = fcmp olt float %3, 0.000000e+00, !dbg !2765
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2765

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !2765

cond.false:                                       ; preds = %entry
  %4 = load float, float* %value.addr, align 4, !dbg !2765
  %cmp2 = fcmp ogt float %4, 1.000000e+00, !dbg !2765
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !2765

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !2765

cond.false4:                                      ; preds = %cond.false
  %5 = load float, float* %value.addr, align 4, !dbg !2765
  br label %cond.end, !dbg !2765

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 1.000000e+00, %cond.true3 ], [ %5, %cond.false4 ], !dbg !2765
  br label %cond.end5, !dbg !2765

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !2765
  %6 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2766
  %u = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %6, i32 0, i32 0, !dbg !2767
  store float %cond6, float* %u, align 4, !dbg !2768
  ret void, !dbg !2769
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @MaskSplinePointUW_weight_get(%struct.PointerRNA* %ptr) #0 !dbg !2770 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2771, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2773, metadata !DIExpression()), !dbg !2774
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2775
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2776
  %1 = load i8*, i8** %data1, align 8, !dbg !2776
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2777
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2774
  %3 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2778
  %w = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %3, i32 0, i32 1, !dbg !2779
  %4 = load float, float* %w, align 4, !dbg !2779
  ret float %4, !dbg !2780
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_weight_set(%struct.PointerRNA* %ptr, float %value) #0 !dbg !2781 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca float, align 4
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2782, metadata !DIExpression()), !dbg !2783
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2784, metadata !DIExpression()), !dbg !2785
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2786, metadata !DIExpression()), !dbg !2787
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2788
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2789
  %1 = load i8*, i8** %data1, align 8, !dbg !2789
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2790
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2787
  %3 = load float, float* %value.addr, align 4, !dbg !2791
  %cmp = fcmp olt float %3, 0.000000e+00, !dbg !2791
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2791

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !2791

cond.false:                                       ; preds = %entry
  %4 = load float, float* %value.addr, align 4, !dbg !2791
  %cmp2 = fcmp ogt float %4, 1.000000e+00, !dbg !2791
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !2791

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !2791

cond.false4:                                      ; preds = %cond.false
  %5 = load float, float* %value.addr, align 4, !dbg !2791
  br label %cond.end, !dbg !2791

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 1.000000e+00, %cond.true3 ], [ %5, %cond.false4 ], !dbg !2791
  br label %cond.end5, !dbg !2791

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !2791
  %6 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2792
  %w = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %6, i32 0, i32 1, !dbg !2793
  store float %cond6, float* %w, align 4, !dbg !2794
  ret void, !dbg !2795
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePointUW_select_get(%struct.PointerRNA* %ptr) #0 !dbg !2796 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2797, metadata !DIExpression()), !dbg !2798
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2799, metadata !DIExpression()), !dbg !2800
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2801
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2802
  %1 = load i8*, i8** %data1, align 8, !dbg !2802
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2803
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2800
  %3 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2804
  %flag = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %3, i32 0, i32 2, !dbg !2805
  %4 = load i32, i32* %flag, align 4, !dbg !2805
  %and = and i32 %4, 1, !dbg !2806
  %cmp = icmp ne i32 %and, 0, !dbg !2807
  %conv = zext i1 %cmp to i32, !dbg !2807
  ret i32 %conv, !dbg !2808
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePointUW_select_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !2809 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSplinePointUW*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2810, metadata !DIExpression()), !dbg !2811
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !2812, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePointUW** %data, metadata !2814, metadata !DIExpression()), !dbg !2815
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2816
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2817
  %1 = load i8*, i8** %data1, align 8, !dbg !2817
  %2 = bitcast i8* %1 to %struct.MaskSplinePointUW*, !dbg !2818
  store %struct.MaskSplinePointUW* %2, %struct.MaskSplinePointUW** %data, align 8, !dbg !2815
  %3 = load i32, i32* %value.addr, align 4, !dbg !2819
  %tobool = icmp ne i32 %3, 0, !dbg !2819
  br i1 %tobool, label %if.then, label %if.else, !dbg !2821

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2822
  %flag = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %4, i32 0, i32 2, !dbg !2823
  %5 = load i32, i32* %flag, align 4, !dbg !2824
  %or = or i32 %5, 1, !dbg !2824
  store i32 %or, i32* %flag, align 4, !dbg !2824
  br label %if.end, !dbg !2822

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %data, align 8, !dbg !2825
  %flag2 = getelementptr inbounds %struct.MaskSplinePointUW, %struct.MaskSplinePointUW* %6, i32 0, i32 2, !dbg !2826
  %7 = load i32, i32* %flag2, align 4, !dbg !2827
  %and = and i32 %7, -2, !dbg !2827
  store i32 %and, i32* %flag2, align 4, !dbg !2827
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2828
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !2829 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2830, metadata !DIExpression()), !dbg !2831
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2832, metadata !DIExpression()), !dbg !2833
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2834
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !2835
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !2835
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2836
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !2837
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2838
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !2839
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !2839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !2839
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2840
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !2841
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoint_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !2842
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2843
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2844
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !2845
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2846
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !2848
  %10 = load i32, i32* %valid, align 8, !dbg !2848
  %tobool = icmp ne i32 %10, 0, !dbg !2846
  br i1 %tobool, label %if.then, label %if.end, !dbg !2849

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2850
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !2851
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2852
  call void @MaskSplinePoint_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !2853
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !2853
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2853
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !2853
  br label %if.end, !dbg !2850

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2854
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSplinePoint_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !2855 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2856, metadata !DIExpression()), !dbg !2857
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2858
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !2859
  ret void, !dbg !2860
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2861 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2862, metadata !DIExpression()), !dbg !2863
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2864
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !2865
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2866
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !2868
  %2 = load i32, i32* %valid, align 8, !dbg !2868
  %tobool = icmp ne i32 %2, 0, !dbg !2866
  br i1 %tobool, label %if.then, label %if.end, !dbg !2869

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2870
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !2871
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2872
  call void @MaskSplinePoint_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !2873
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !2873
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !2873
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !2873
  br label %if.end, !dbg !2870

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2874
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !2875 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !2876, metadata !DIExpression()), !dbg !2877
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !2878
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !2879
  ret void, !dbg !2880
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !2881 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2882, metadata !DIExpression()), !dbg !2883
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2884, metadata !DIExpression()), !dbg !2885
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !2886, metadata !DIExpression()), !dbg !2887
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2888
  %1 = load i8*, i8** %key.addr, align 8, !dbg !2889
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !2890
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !2891
  ret i32 %call, !dbg !2892
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !2893 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2894, metadata !DIExpression()), !dbg !2895
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2896
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !2897
  ret void, !dbg !2898
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_left_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2899 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2902, metadata !DIExpression()), !dbg !2903
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2904, metadata !DIExpression()), !dbg !2905
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2906
  %1 = load float*, float** %values.addr, align 8, !dbg !2907
  call void @rna_MaskSplinePoint_handle1_get(%struct.PointerRNA* %0, float* %1), !dbg !2908
  ret void, !dbg !2909
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle1_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2910 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2911, metadata !DIExpression()), !dbg !2912
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2913, metadata !DIExpression()), !dbg !2914
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2915, metadata !DIExpression()), !dbg !2916
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2917
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2918
  %1 = load i8*, i8** %data, align 8, !dbg !2918
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !2919
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !2916
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !2920, metadata !DIExpression()), !dbg !2922
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2923
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !2924
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !2922
  %4 = load float*, float** %values.addr, align 8, !dbg !2925
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2926
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 0, !dbg !2927
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !2926
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2926
  call void @copy_v2_v2(float* %4, float* %arraydecay), !dbg !2928
  ret void, !dbg !2929
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_left_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2930 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2933, metadata !DIExpression()), !dbg !2934
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2935, metadata !DIExpression()), !dbg !2936
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2937
  %1 = load float*, float** %values.addr, align 8, !dbg !2938
  call void @rna_MaskSplinePoint_handle1_set(%struct.PointerRNA* %0, float* %1), !dbg !2939
  ret void, !dbg !2940
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle1_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2941 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2942, metadata !DIExpression()), !dbg !2943
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2944, metadata !DIExpression()), !dbg !2945
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2946, metadata !DIExpression()), !dbg !2947
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2948
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2949
  %1 = load i8*, i8** %data, align 8, !dbg !2949
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !2950
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !2947
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !2951, metadata !DIExpression()), !dbg !2952
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2953
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !2954
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !2952
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2955
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !2956
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 0, !dbg !2955
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2955
  %5 = load float*, float** %values.addr, align 8, !dbg !2957
  call void @copy_v2_v2(float* %arraydecay, float* %5), !dbg !2958
  ret void, !dbg !2959
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_co_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2960 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2961, metadata !DIExpression()), !dbg !2962
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2963, metadata !DIExpression()), !dbg !2964
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2965
  %1 = load float*, float** %values.addr, align 8, !dbg !2966
  call void @rna_MaskSplinePoint_ctrlpoint_get(%struct.PointerRNA* %0, float* %1), !dbg !2967
  ret void, !dbg !2968
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_ctrlpoint_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2969 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2970, metadata !DIExpression()), !dbg !2971
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2972, metadata !DIExpression()), !dbg !2973
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !2974, metadata !DIExpression()), !dbg !2975
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2976
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !2977
  %1 = load i8*, i8** %data, align 8, !dbg !2977
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !2978
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !2975
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !2979, metadata !DIExpression()), !dbg !2980
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !2981
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !2982
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !2980
  %4 = load float*, float** %values.addr, align 8, !dbg !2983
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !2984
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 0, !dbg !2985
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !2984
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2984
  call void @copy_v2_v2(float* %4, float* %arraydecay), !dbg !2986
  ret void, !dbg !2987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_co_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2988 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2989, metadata !DIExpression()), !dbg !2990
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !2991, metadata !DIExpression()), !dbg !2992
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !2993
  %1 = load float*, float** %values.addr, align 8, !dbg !2994
  call void @rna_MaskSplinePoint_ctrlpoint_set(%struct.PointerRNA* %0, float* %1), !dbg !2995
  ret void, !dbg !2996
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_ctrlpoint_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !2997 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !2998, metadata !DIExpression()), !dbg !2999
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !3000, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3002, metadata !DIExpression()), !dbg !3003
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3004
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3005
  %1 = load i8*, i8** %data, align 8, !dbg !3005
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3006
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3003
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3007, metadata !DIExpression()), !dbg !3008
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3009
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3010
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3008
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3011
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !3012
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 1, !dbg !3011
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3011
  %5 = load float*, float** %values.addr, align 8, !dbg !3013
  call void @copy_v2_v2(float* %arraydecay, float* %5), !dbg !3014
  ret void, !dbg !3015
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_right_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !3016 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3017, metadata !DIExpression()), !dbg !3018
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3021
  %1 = load float*, float** %values.addr, align 8, !dbg !3022
  call void @rna_MaskSplinePoint_handle2_get(%struct.PointerRNA* %0, float* %1), !dbg !3023
  ret void, !dbg !3024
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle2_get(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !3025 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3026, metadata !DIExpression()), !dbg !3027
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !3028, metadata !DIExpression()), !dbg !3029
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3030, metadata !DIExpression()), !dbg !3031
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3032
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3033
  %1 = load i8*, i8** %data, align 8, !dbg !3033
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3034
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3031
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3035, metadata !DIExpression()), !dbg !3036
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3037
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3038
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3036
  %4 = load float*, float** %values.addr, align 8, !dbg !3039
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3040
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 0, !dbg !3041
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 2, !dbg !3040
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3040
  call void @copy_v2_v2(float* %4, float* %arraydecay), !dbg !3042
  ret void, !dbg !3043
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_right_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !3044 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3045, metadata !DIExpression()), !dbg !3046
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !3047, metadata !DIExpression()), !dbg !3048
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3049
  %1 = load float*, float** %values.addr, align 8, !dbg !3050
  call void @rna_MaskSplinePoint_handle2_set(%struct.PointerRNA* %0, float* %1), !dbg !3051
  ret void, !dbg !3052
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle2_set(%struct.PointerRNA* %ptr, float* %values) #0 !dbg !3053 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %values.addr = alloca float*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3054, metadata !DIExpression()), !dbg !3055
  store float* %values, float** %values.addr, align 8
  call void @llvm.dbg.declare(metadata float** %values.addr, metadata !3056, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3058, metadata !DIExpression()), !dbg !3059
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3060
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3061
  %1 = load i8*, i8** %data, align 8, !dbg !3061
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3062
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3059
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3063, metadata !DIExpression()), !dbg !3064
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3065
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3066
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3064
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3067
  %vec = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 0, !dbg !3068
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec, i64 0, i64 2, !dbg !3067
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3067
  %5 = load float*, float** %values.addr, align 8, !dbg !3069
  call void @copy_v2_v2(float* %arraydecay, float* %5), !dbg !3070
  ret void, !dbg !3071
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_handle_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3072 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3073, metadata !DIExpression()), !dbg !3074
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3075
  %call = call i32 @rna_MaskSplinePoint_handle_type_get(%struct.PointerRNA* %0), !dbg !3076
  ret i32 %call, !dbg !3077
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_MaskSplinePoint_handle_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3078 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3079, metadata !DIExpression()), !dbg !3080
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3081, metadata !DIExpression()), !dbg !3082
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3083
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3084
  %1 = load i8*, i8** %data, align 8, !dbg !3084
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3085
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3082
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3086, metadata !DIExpression()), !dbg !3087
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3088
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3089
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3087
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3090
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 5, !dbg !3091
  %5 = load i8, i8* %h1, align 1, !dbg !3091
  %conv = zext i8 %5 to i32, !dbg !3090
  ret i32 %conv, !dbg !3092
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3093 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3094, metadata !DIExpression()), !dbg !3095
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3098
  %1 = load i32, i32* %value.addr, align 4, !dbg !3099
  call void @rna_MaskSplinePoint_handle_type_set(%struct.PointerRNA* %0, i32 %1), !dbg !3100
  ret void, !dbg !3101
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3102 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3103, metadata !DIExpression()), !dbg !3104
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3105, metadata !DIExpression()), !dbg !3106
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3107, metadata !DIExpression()), !dbg !3108
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3109
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3110
  %1 = load i8*, i8** %data, align 8, !dbg !3110
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3111
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3108
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3112, metadata !DIExpression()), !dbg !3113
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3114
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3115
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3113
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !3116, metadata !DIExpression()), !dbg !3117
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3118
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 0, !dbg !3119
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !3120
  %5 = load i8*, i8** %data2, align 8, !dbg !3120
  %6 = bitcast i8* %5 to %struct.Mask*, !dbg !3121
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3122
  %call = call %struct.MaskSpline* @mask_spline_from_point(%struct.Mask* %6, %struct.MaskSplinePoint* %7), !dbg !3123
  store %struct.MaskSpline* %call, %struct.MaskSpline** %spline, align 8, !dbg !3117
  %8 = load i32, i32* %value.addr, align 4, !dbg !3124
  %conv = trunc i32 %8 to i8, !dbg !3124
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3125
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 6, !dbg !3126
  store i8 %conv, i8* %h2, align 2, !dbg !3127
  %10 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3128
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %10, i32 0, i32 5, !dbg !3129
  store i8 %conv, i8* %h1, align 1, !dbg !3130
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3131
  call void @mask_point_check_stick(%struct.MaskSplinePoint* %11), !dbg !3132
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3133
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3134
  call void @BKE_mask_calc_handle_point(%struct.MaskSpline* %12, %struct.MaskSplinePoint* %13), !dbg !3135
  ret void, !dbg !3136
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_handle_left_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3137 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3138, metadata !DIExpression()), !dbg !3139
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3140
  %call = call i32 @rna_MaskSplinePoint_handle_left_type_get(%struct.PointerRNA* %0), !dbg !3141
  ret i32 %call, !dbg !3142
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_MaskSplinePoint_handle_left_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3143 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3144, metadata !DIExpression()), !dbg !3145
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3146, metadata !DIExpression()), !dbg !3147
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3148
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3149
  %1 = load i8*, i8** %data, align 8, !dbg !3149
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3150
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3147
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3151, metadata !DIExpression()), !dbg !3152
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3153
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3154
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3152
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3155
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 5, !dbg !3156
  %5 = load i8, i8* %h1, align 1, !dbg !3156
  %conv = zext i8 %5 to i32, !dbg !3155
  ret i32 %conv, !dbg !3157
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_left_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3158 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3159, metadata !DIExpression()), !dbg !3160
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3161, metadata !DIExpression()), !dbg !3162
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3163
  %1 = load i32, i32* %value.addr, align 4, !dbg !3164
  call void @rna_MaskSplinePoint_handle_left_type_set(%struct.PointerRNA* %0, i32 %1), !dbg !3165
  ret void, !dbg !3166
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle_left_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3167 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3168, metadata !DIExpression()), !dbg !3169
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3170, metadata !DIExpression()), !dbg !3171
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3172, metadata !DIExpression()), !dbg !3173
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3174
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3175
  %1 = load i8*, i8** %data, align 8, !dbg !3175
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3176
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3173
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3177, metadata !DIExpression()), !dbg !3178
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3179
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3180
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3178
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !3181, metadata !DIExpression()), !dbg !3182
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3183
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 0, !dbg !3184
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !3185
  %5 = load i8*, i8** %data2, align 8, !dbg !3185
  %6 = bitcast i8* %5 to %struct.Mask*, !dbg !3186
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3187
  %call = call %struct.MaskSpline* @mask_spline_from_point(%struct.Mask* %6, %struct.MaskSplinePoint* %7), !dbg !3188
  store %struct.MaskSpline* %call, %struct.MaskSpline** %spline, align 8, !dbg !3182
  %8 = load i32, i32* %value.addr, align 4, !dbg !3189
  %conv = trunc i32 %8 to i8, !dbg !3189
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3190
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 5, !dbg !3191
  store i8 %conv, i8* %h1, align 1, !dbg !3192
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3193
  call void @mask_point_check_stick(%struct.MaskSplinePoint* %10), !dbg !3194
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3195
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3196
  call void @BKE_mask_calc_handle_point(%struct.MaskSpline* %11, %struct.MaskSplinePoint* %12), !dbg !3197
  ret void, !dbg !3198
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_handle_right_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3199 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3200, metadata !DIExpression()), !dbg !3201
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3202
  %call = call i32 @rna_MaskSplinePoint_handle_right_type_get(%struct.PointerRNA* %0), !dbg !3203
  ret i32 %call, !dbg !3204
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_MaskSplinePoint_handle_right_type_get(%struct.PointerRNA* %ptr) #0 !dbg !3205 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3206, metadata !DIExpression()), !dbg !3207
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3208, metadata !DIExpression()), !dbg !3209
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3210
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3211
  %1 = load i8*, i8** %data, align 8, !dbg !3211
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3212
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3209
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3213, metadata !DIExpression()), !dbg !3214
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3215
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3216
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3214
  %4 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3217
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %4, i32 0, i32 6, !dbg !3218
  %5 = load i8, i8* %h2, align 2, !dbg !3218
  %conv = zext i8 %5 to i32, !dbg !3217
  ret i32 %conv, !dbg !3219
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_handle_right_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3220 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3221, metadata !DIExpression()), !dbg !3222
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3223, metadata !DIExpression()), !dbg !3224
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3225
  %1 = load i32, i32* %value.addr, align 4, !dbg !3226
  call void @rna_MaskSplinePoint_handle_right_type_set(%struct.PointerRNA* %0, i32 %1), !dbg !3227
  ret void, !dbg !3228
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSplinePoint_handle_right_type_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3229 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %point = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3230, metadata !DIExpression()), !dbg !3231
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3232, metadata !DIExpression()), !dbg !3233
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !3234, metadata !DIExpression()), !dbg !3235
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3236
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3237
  %1 = load i8*, i8** %data, align 8, !dbg !3237
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3238
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %point, align 8, !dbg !3235
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !3239, metadata !DIExpression()), !dbg !3240
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3241
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3242
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !3240
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !3243, metadata !DIExpression()), !dbg !3244
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3245
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %4, i32 0, i32 0, !dbg !3246
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !3247
  %5 = load i8*, i8** %data2, align 8, !dbg !3247
  %6 = bitcast i8* %5 to %struct.Mask*, !dbg !3248
  %7 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3249
  %call = call %struct.MaskSpline* @mask_spline_from_point(%struct.Mask* %6, %struct.MaskSplinePoint* %7), !dbg !3250
  store %struct.MaskSpline* %call, %struct.MaskSpline** %spline, align 8, !dbg !3244
  %8 = load i32, i32* %value.addr, align 4, !dbg !3251
  %conv = trunc i32 %8 to i8, !dbg !3251
  %9 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !3252
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %9, i32 0, i32 6, !dbg !3253
  store i8 %conv, i8* %h2, align 2, !dbg !3254
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3255
  call void @mask_point_check_stick(%struct.MaskSplinePoint* %10), !dbg !3256
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3257
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !3258
  call void @BKE_mask_calc_handle_point(%struct.MaskSpline* %11, %struct.MaskSplinePoint* %12), !dbg !3259
  ret void, !dbg !3260
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @MaskSplinePoint_weight_get(%struct.PointerRNA* %ptr) #0 !dbg !3261 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3264, metadata !DIExpression()), !dbg !3265
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3266
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3267
  %1 = load i8*, i8** %data1, align 8, !dbg !3267
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3268
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3265
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3269
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3270
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 2, !dbg !3271
  %4 = load float, float* %weight, align 8, !dbg !3271
  ret float %4, !dbg !3272
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_weight_set(%struct.PointerRNA* %ptr, float %value) #0 !dbg !3273 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca float, align 4
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3274, metadata !DIExpression()), !dbg !3275
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3278, metadata !DIExpression()), !dbg !3279
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3280
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3281
  %1 = load i8*, i8** %data1, align 8, !dbg !3281
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3282
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3279
  %3 = load float, float* %value.addr, align 4, !dbg !3283
  %cmp = fcmp olt float %3, 0.000000e+00, !dbg !3283
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3283

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !3283

cond.false:                                       ; preds = %entry
  %4 = load float, float* %value.addr, align 4, !dbg !3283
  %cmp2 = fcmp ogt float %4, 1.000000e+00, !dbg !3283
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !3283

cond.true3:                                       ; preds = %cond.false
  br label %cond.end, !dbg !3283

cond.false4:                                      ; preds = %cond.false
  %5 = load float, float* %value.addr, align 4, !dbg !3283
  br label %cond.end, !dbg !3283

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi float [ 1.000000e+00, %cond.true3 ], [ %5, %cond.false4 ], !dbg !3283
  br label %cond.end5, !dbg !3283

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !3283
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3284
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !3285
  %weight = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 2, !dbg !3286
  store float %cond6, float* %weight, align 8, !dbg !3287
  ret void, !dbg !3288
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_select_get(%struct.PointerRNA* %ptr) #0 !dbg !3289 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3292, metadata !DIExpression()), !dbg !3293
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3294
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3295
  %1 = load i8*, i8** %data1, align 8, !dbg !3295
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3296
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3293
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3297
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 0, !dbg !3298
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !3299
  %4 = load i8, i8* %f1, align 1, !dbg !3299
  %conv = zext i8 %4 to i32, !dbg !3300
  %and = and i32 %conv, 1, !dbg !3301
  %cmp = icmp ne i32 %and, 0, !dbg !3302
  %conv2 = zext i1 %cmp to i32, !dbg !3302
  ret i32 %conv2, !dbg !3303
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_select_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3304 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3305, metadata !DIExpression()), !dbg !3306
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3309, metadata !DIExpression()), !dbg !3310
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3311
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3312
  %1 = load i8*, i8** %data1, align 8, !dbg !3312
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3313
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3310
  %3 = load i32, i32* %value.addr, align 4, !dbg !3314
  %tobool = icmp ne i32 %3, 0, !dbg !3314
  br i1 %tobool, label %if.then, label %if.else, !dbg !3316

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3317
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 0, !dbg !3318
  %f1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 7, !dbg !3319
  %5 = load i8, i8* %f1, align 1, !dbg !3320
  %conv = zext i8 %5 to i32, !dbg !3320
  %or = or i32 %conv, 1, !dbg !3320
  %conv2 = trunc i32 %or to i8, !dbg !3320
  store i8 %conv2, i8* %f1, align 1, !dbg !3320
  br label %if.end, !dbg !3317

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3321
  %bezt3 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %6, i32 0, i32 0, !dbg !3322
  %f14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt3, i32 0, i32 7, !dbg !3323
  %7 = load i8, i8* %f14, align 1, !dbg !3324
  %conv5 = zext i8 %7 to i32, !dbg !3324
  %and = and i32 %conv5, -2, !dbg !3324
  %conv6 = trunc i32 %and to i8, !dbg !3324
  store i8 %conv6, i8* %f14, align 1, !dbg !3324
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3325
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_parent_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !3326 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3327, metadata !DIExpression()), !dbg !3328
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3329, metadata !DIExpression()), !dbg !3330
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3331
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3332
  %1 = load i8*, i8** %data1, align 8, !dbg !3332
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3333
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3330
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3334
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3335
  %parent = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %4, i32 0, i32 4, !dbg !3336
  %5 = bitcast %struct.MaskParent* %parent to i8*, !dbg !3337
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.StructRNA* @RNA_MaskParent, i8* %5), !dbg !3338
  ret void, !dbg !3339
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_feather_points_length(%struct.PointerRNA* %ptr) #0 !dbg !3340 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3341, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3343, metadata !DIExpression()), !dbg !3344
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3345
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3346
  %1 = load i8*, i8** %data1, align 8, !dbg !3346
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3347
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3344
  %3 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3348
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %3, i32 0, i32 3, !dbg !3349
  %4 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !3349
  %cmp = icmp eq %struct.MaskSplinePointUW* %4, null, !dbg !3350
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3351

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3351

cond.false:                                       ; preds = %entry
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3352
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %5, i32 0, i32 2, !dbg !3353
  %6 = load i32, i32* %tot_uw, align 4, !dbg !3353
  br label %cond.end, !dbg !3351

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !3351
  ret i32 %cond, !dbg !3354
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_feather_points_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !3355 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSplinePoint*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3356, metadata !DIExpression()), !dbg !3357
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3358, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %data, metadata !3360, metadata !DIExpression()), !dbg !3361
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3362
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3363
  %1 = load i8*, i8** %data1, align 8, !dbg !3363
  %2 = bitcast i8* %1 to %struct.MaskSplinePoint*, !dbg !3364
  store %struct.MaskSplinePoint* %2, %struct.MaskSplinePoint** %data, align 8, !dbg !3361
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3365
  %4 = bitcast %struct.CollectionPropertyIterator* %3 to i8*, !dbg !3366
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 136, i1 false), !dbg !3366
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3367
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %5, i32 0, i32 0, !dbg !3368
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3369
  %7 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !3370
  %8 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !3370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3370
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3371
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 2, !dbg !3372
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoint_feather_points, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !3373
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3374
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3375
  %uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %11, i32 0, i32 3, !dbg !3376
  %12 = load %struct.MaskSplinePointUW*, %struct.MaskSplinePointUW** %uw, align 8, !dbg !3376
  %13 = bitcast %struct.MaskSplinePointUW* %12 to i8*, !dbg !3375
  %14 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %data, align 8, !dbg !3377
  %tot_uw = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %14, i32 0, i32 2, !dbg !3378
  %15 = load i32, i32* %tot_uw, align 4, !dbg !3378
  call void @rna_iterator_array_begin(%struct.CollectionPropertyIterator* %10, i8* %13, i32 12, i32 %15, i8 zeroext 0, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !3379
  %16 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3380
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %16, i32 0, i32 7, !dbg !3382
  %17 = load i32, i32* %valid, align 8, !dbg !3382
  %tobool = icmp ne i32 %17, 0, !dbg !3380
  br i1 %tobool, label %if.then, label %if.end, !dbg !3383

if.then:                                          ; preds = %entry
  %18 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3384
  %ptr2 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %18, i32 0, i32 6, !dbg !3385
  %19 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3386
  call void @MaskSplinePoint_feather_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %19), !dbg !3387
  %20 = bitcast %struct.PointerRNA* %ptr2 to i8*, !dbg !3387
  %21 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3387
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !3387
  br label %if.end, !dbg !3384

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3388
}

declare dso_local void @rna_iterator_array_begin(%struct.CollectionPropertyIterator*, i8*, i32, i32, i8 zeroext, i32 (%struct.CollectionPropertyIterator*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSplinePoint_feather_points_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !3389 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3390, metadata !DIExpression()), !dbg !3391
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3392
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 0, !dbg !3393
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3394
  %call = call i8* @rna_iterator_array_get(%struct.CollectionPropertyIterator* %1), !dbg !3395
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %parent, %struct.StructRNA* @RNA_MaskSplinePointUW, i8* %call), !dbg !3396
  ret void, !dbg !3397
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_feather_points_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3398 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3399, metadata !DIExpression()), !dbg !3400
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3401
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %0), !dbg !3402
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3403
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !3405
  %2 = load i32, i32* %valid, align 8, !dbg !3405
  %tobool = icmp ne i32 %2, 0, !dbg !3403
  br i1 %tobool, label %if.then, label %if.end, !dbg !3406

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3407
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !3408
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3409
  call void @MaskSplinePoint_feather_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !3410
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !3410
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3410
  br label %if.end, !dbg !3407

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3411
}

declare dso_local void @rna_iterator_array_next(%struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoint_feather_points_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3412 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3413, metadata !DIExpression()), !dbg !3414
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3415
  call void @rna_iterator_array_end(%struct.CollectionPropertyIterator* %0), !dbg !3416
  ret void, !dbg !3417
}

declare dso_local void @rna_iterator_array_end(%struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoint_feather_points_lookup_int(%struct.PointerRNA* %ptr, i32 %index, %struct.PointerRNA* %r_ptr) #0 !dbg !3418 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %index.addr = alloca i32, align 4
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %found = alloca i32, align 4
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3421, metadata !DIExpression()), !dbg !3422
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3423, metadata !DIExpression()), !dbg !3424
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3425, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.declare(metadata i32* %found, metadata !3427, metadata !DIExpression()), !dbg !3428
  store i32 0, i32* %found, align 4, !dbg !3428
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !3429, metadata !DIExpression()), !dbg !3430
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3431
  call void @MaskSplinePoint_feather_points_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %0), !dbg !3432
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3433
  %1 = load i32, i32* %valid, align 8, !dbg !3433
  %tobool = icmp ne i32 %1, 0, !dbg !3435
  br i1 %tobool, label %if.then, label %if.end20, !dbg !3436

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !3437, metadata !DIExpression()), !dbg !3440
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 3, !dbg !3441
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !3442
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !3440
  %2 = load i32, i32* %index.addr, align 4, !dbg !3443
  %cmp = icmp slt i32 %2, 0, !dbg !3445
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !3446

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i32, i32* %index.addr, align 4, !dbg !3447
  %4 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3448
  %length = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %4, i32 0, i32 4, !dbg !3449
  %5 = load i32, i32* %length, align 4, !dbg !3449
  %cmp2 = icmp sge i32 %3, %5, !dbg !3450
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3451

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load i32, i32* %index.addr, align 4, !dbg !3452
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__func__.MaskSplinePoint_feather_points_lookup_int, i64 0, i64 0), i32 %6), !dbg !3454
  br label %if.end16, !dbg !3455

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3456
  %skip = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %7, i32 0, i32 5, !dbg !3458
  %8 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !3458
  %tobool4 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %8, null, !dbg !3456
  br i1 %tobool4, label %if.then5, label %if.else14, !dbg !3459

if.then5:                                         ; preds = %if.else
  br label %while.cond, !dbg !3460

while.cond:                                       ; preds = %while.body, %if.then5
  %9 = load i32, i32* %index.addr, align 4, !dbg !3462
  %dec = add nsw i32 %9, -1, !dbg !3462
  store i32 %dec, i32* %index.addr, align 4, !dbg !3462
  %cmp6 = icmp sgt i32 %9, 0, !dbg !3463
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3464

land.rhs:                                         ; preds = %while.cond
  %valid7 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3465
  %10 = load i32, i32* %valid7, align 8, !dbg !3465
  %tobool8 = icmp ne i32 %10, 0, !dbg !3464
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %tobool8, %land.rhs ], !dbg !3466
  br i1 %11, label %while.body, label %while.end, !dbg !3460

while.body:                                       ; preds = %land.end
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %iter), !dbg !3467
  br label %while.cond, !dbg !3460, !llvm.loop !3469

while.end:                                        ; preds = %land.end
  %12 = load i32, i32* %index.addr, align 4, !dbg !3471
  %cmp9 = icmp eq i32 %12, -1, !dbg !3472
  br i1 %cmp9, label %land.rhs10, label %land.end13, !dbg !3473

land.rhs10:                                       ; preds = %while.end
  %valid11 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3474
  %13 = load i32, i32* %valid11, align 8, !dbg !3474
  %tobool12 = icmp ne i32 %13, 0, !dbg !3473
  br label %land.end13

land.end13:                                       ; preds = %land.rhs10, %while.end
  %14 = phi i1 [ false, %while.end ], [ %tobool12, %land.rhs10 ], !dbg !3466
  %land.ext = zext i1 %14 to i32, !dbg !3473
  store i32 %land.ext, i32* %found, align 4, !dbg !3475
  br label %if.end, !dbg !3476

if.else14:                                        ; preds = %if.else
  %15 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3477
  %itemsize = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %15, i32 0, i32 3, !dbg !3479
  %16 = load i32, i32* %itemsize, align 8, !dbg !3479
  %17 = load i32, i32* %index.addr, align 4, !dbg !3480
  %mul = mul nsw i32 %16, %17, !dbg !3481
  %18 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3482
  %ptr15 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %18, i32 0, i32 0, !dbg !3483
  %19 = load i8*, i8** %ptr15, align 8, !dbg !3484
  %idx.ext = sext i32 %mul to i64, !dbg !3484
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !3484
  store i8* %add.ptr, i8** %ptr15, align 8, !dbg !3484
  store i32 1, i32* %found, align 4, !dbg !3485
  br label %if.end

if.end:                                           ; preds = %if.else14, %land.end13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then3
  %20 = load i32, i32* %found, align 4, !dbg !3486
  %tobool17 = icmp ne i32 %20, 0, !dbg !3486
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3488

if.then18:                                        ; preds = %if.end16
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3489
  call void @MaskSplinePoint_feather_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %iter), !dbg !3490
  %22 = bitcast %struct.PointerRNA* %21 to i8*, !dbg !3490
  %23 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3490
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !dbg !3490
  br label %if.end19, !dbg !3491

if.end19:                                         ; preds = %if.then18, %if.end16
  br label %if.end20, !dbg !3492

if.end20:                                         ; preds = %if.end19, %entry
  call void @MaskSplinePoint_feather_points_end(%struct.CollectionPropertyIterator* %iter), !dbg !3493
  %24 = load i32, i32* %found, align 4, !dbg !3494
  ret i32 %24, !dbg !3495
}

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !3496 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3497, metadata !DIExpression()), !dbg !3498
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3499, metadata !DIExpression()), !dbg !3500
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3501
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !3502
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !3502
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3503
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !3504
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3505
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !3506
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !3506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3506
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3507
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !3508
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSpline_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !3509
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3510
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3511
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !3512
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3513
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !3515
  %10 = load i32, i32* %valid, align 8, !dbg !3515
  %tobool = icmp ne i32 %10, 0, !dbg !3513
  br i1 %tobool, label %if.then, label %if.end, !dbg !3516

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3517
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !3518
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3519
  call void @MaskSpline_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !3520
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !3520
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3520
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !3520
  br label %if.end, !dbg !3517

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3521
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSpline_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !3522 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3523, metadata !DIExpression()), !dbg !3524
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3525
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !3526
  ret void, !dbg !3527
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3528 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3529, metadata !DIExpression()), !dbg !3530
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3531
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !3532
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3533
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !3535
  %2 = load i32, i32* %valid, align 8, !dbg !3535
  %tobool = icmp ne i32 %2, 0, !dbg !3533
  br i1 %tobool, label %if.then, label %if.end, !dbg !3536

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3537
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !3538
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3539
  call void @MaskSpline_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !3540
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !3540
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3540
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3540
  br label %if.end, !dbg !3537

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3541
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3542 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3543, metadata !DIExpression()), !dbg !3544
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3545
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !3546
  ret void, !dbg !3547
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !3548 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3555
  %1 = load i8*, i8** %key.addr, align 8, !dbg !3556
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3557
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !3558
  ret i32 %call, !dbg !3559
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !3560 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3561, metadata !DIExpression()), !dbg !3562
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3563
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !3564
  ret void, !dbg !3565
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_offset_mode_get(%struct.PointerRNA* %ptr) #0 !dbg !3566 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3567, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3569, metadata !DIExpression()), !dbg !3570
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3571
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3572
  %1 = load i8*, i8** %data1, align 8, !dbg !3572
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3573
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3570
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3574
  %offset_mode = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 3, !dbg !3575
  %4 = load i8, i8* %offset_mode, align 2, !dbg !3575
  %conv = zext i8 %4 to i32, !dbg !3576
  ret i32 %conv, !dbg !3577
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_offset_mode_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3578 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3579, metadata !DIExpression()), !dbg !3580
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3581, metadata !DIExpression()), !dbg !3582
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3583, metadata !DIExpression()), !dbg !3584
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3585
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3586
  %1 = load i8*, i8** %data1, align 8, !dbg !3586
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3587
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3584
  %3 = load i32, i32* %value.addr, align 4, !dbg !3588
  %conv = trunc i32 %3 to i8, !dbg !3588
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3589
  %offset_mode = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 3, !dbg !3590
  store i8 %conv, i8* %offset_mode, align 2, !dbg !3591
  ret void, !dbg !3592
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_weight_interpolation_get(%struct.PointerRNA* %ptr) #0 !dbg !3593 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3596, metadata !DIExpression()), !dbg !3597
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3598
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3599
  %1 = load i8*, i8** %data1, align 8, !dbg !3599
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3600
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3597
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3601
  %weight_interp = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 4, !dbg !3602
  %4 = load i8, i8* %weight_interp, align 1, !dbg !3602
  %conv = zext i8 %4 to i32, !dbg !3603
  ret i32 %conv, !dbg !3604
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_weight_interpolation_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3605 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3606, metadata !DIExpression()), !dbg !3607
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3608, metadata !DIExpression()), !dbg !3609
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3610, metadata !DIExpression()), !dbg !3611
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3612
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3613
  %1 = load i8*, i8** %data1, align 8, !dbg !3613
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3614
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3611
  %3 = load i32, i32* %value.addr, align 4, !dbg !3615
  %conv = trunc i32 %3 to i8, !dbg !3615
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3616
  %weight_interp = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 4, !dbg !3617
  store i8 %conv, i8* %weight_interp, align 1, !dbg !3618
  ret void, !dbg !3619
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_use_cyclic_get(%struct.PointerRNA* %ptr) #0 !dbg !3620 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3621, metadata !DIExpression()), !dbg !3622
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3623, metadata !DIExpression()), !dbg !3624
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3625
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3626
  %1 = load i8*, i8** %data1, align 8, !dbg !3626
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3627
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3624
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3628
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 2, !dbg !3629
  %4 = load i16, i16* %flag, align 8, !dbg !3629
  %conv = sext i16 %4 to i32, !dbg !3630
  %and = and i32 %conv, 2, !dbg !3631
  %cmp = icmp ne i32 %and, 0, !dbg !3632
  %conv2 = zext i1 %cmp to i32, !dbg !3632
  ret i32 %conv2, !dbg !3633
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_use_cyclic_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3634 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3639, metadata !DIExpression()), !dbg !3640
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3641
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3642
  %1 = load i8*, i8** %data1, align 8, !dbg !3642
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3643
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3640
  %3 = load i32, i32* %value.addr, align 4, !dbg !3644
  %tobool = icmp ne i32 %3, 0, !dbg !3644
  br i1 %tobool, label %if.then, label %if.else, !dbg !3646

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3647
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 2, !dbg !3648
  %5 = load i16, i16* %flag, align 8, !dbg !3649
  %conv = sext i16 %5 to i32, !dbg !3649
  %or = or i32 %conv, 2, !dbg !3649
  %conv2 = trunc i32 %or to i16, !dbg !3649
  store i16 %conv2, i16* %flag, align 8, !dbg !3649
  br label %if.end, !dbg !3647

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3650
  %flag3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 2, !dbg !3651
  %7 = load i16, i16* %flag3, align 8, !dbg !3652
  %conv4 = sext i16 %7 to i32, !dbg !3652
  %and = and i32 %conv4, -3, !dbg !3652
  %conv5 = trunc i32 %and to i16, !dbg !3652
  store i16 %conv5, i16* %flag3, align 8, !dbg !3652
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3653
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_use_fill_get(%struct.PointerRNA* %ptr) #0 !dbg !3654 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3657, metadata !DIExpression()), !dbg !3658
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3659
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3660
  %1 = load i8*, i8** %data1, align 8, !dbg !3660
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3661
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3658
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3662
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 2, !dbg !3663
  %4 = load i16, i16* %flag, align 8, !dbg !3663
  %conv = sext i16 %4 to i32, !dbg !3664
  %and = and i32 %conv, 4, !dbg !3665
  %cmp = icmp ne i32 %and, 0, !dbg !3666
  %lnot = xor i1 %cmp, true, !dbg !3667
  %lnot.ext = zext i1 %lnot to i32, !dbg !3667
  ret i32 %lnot.ext, !dbg !3668
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_use_fill_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3669 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3670, metadata !DIExpression()), !dbg !3671
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3672, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3674, metadata !DIExpression()), !dbg !3675
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3676
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3677
  %1 = load i8*, i8** %data1, align 8, !dbg !3677
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3678
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3675
  %3 = load i32, i32* %value.addr, align 4, !dbg !3679
  %tobool = icmp ne i32 %3, 0, !dbg !3679
  br i1 %tobool, label %if.else, label %if.then, !dbg !3681

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3682
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 2, !dbg !3683
  %5 = load i16, i16* %flag, align 8, !dbg !3684
  %conv = sext i16 %5 to i32, !dbg !3684
  %or = or i32 %conv, 4, !dbg !3684
  %conv2 = trunc i32 %or to i16, !dbg !3684
  store i16 %conv2, i16* %flag, align 8, !dbg !3684
  br label %if.end, !dbg !3682

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3685
  %flag3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 2, !dbg !3686
  %7 = load i16, i16* %flag3, align 8, !dbg !3687
  %conv4 = sext i16 %7 to i32, !dbg !3687
  %and = and i32 %conv4, -5, !dbg !3687
  %conv5 = trunc i32 %and to i16, !dbg !3687
  store i16 %conv5, i16* %flag3, align 8, !dbg !3687
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3688
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_use_self_intersection_check_get(%struct.PointerRNA* %ptr) #0 !dbg !3689 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3692, metadata !DIExpression()), !dbg !3693
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3694
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3695
  %1 = load i8*, i8** %data1, align 8, !dbg !3695
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3696
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3693
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3697
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 2, !dbg !3698
  %4 = load i16, i16* %flag, align 8, !dbg !3698
  %conv = sext i16 %4 to i32, !dbg !3699
  %and = and i32 %conv, 8, !dbg !3700
  %cmp = icmp ne i32 %and, 0, !dbg !3701
  %conv2 = zext i1 %cmp to i32, !dbg !3701
  ret i32 %conv2, !dbg !3702
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_use_self_intersection_check_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !3703 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3704, metadata !DIExpression()), !dbg !3705
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3708, metadata !DIExpression()), !dbg !3709
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3710
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3711
  %1 = load i8*, i8** %data1, align 8, !dbg !3711
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3712
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3709
  %3 = load i32, i32* %value.addr, align 4, !dbg !3713
  %tobool = icmp ne i32 %3, 0, !dbg !3713
  br i1 %tobool, label %if.then, label %if.else, !dbg !3715

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3716
  %flag = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %4, i32 0, i32 2, !dbg !3717
  %5 = load i16, i16* %flag, align 8, !dbg !3718
  %conv = sext i16 %5 to i32, !dbg !3718
  %or = or i32 %conv, 8, !dbg !3718
  %conv2 = trunc i32 %or to i16, !dbg !3718
  store i16 %conv2, i16* %flag, align 8, !dbg !3718
  br label %if.end, !dbg !3716

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3719
  %flag3 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %6, i32 0, i32 2, !dbg !3720
  %7 = load i16, i16* %flag3, align 8, !dbg !3721
  %conv4 = sext i16 %7 to i32, !dbg !3721
  %and = and i32 %conv4, -9, !dbg !3721
  %conv5 = trunc i32 %and to i16, !dbg !3721
  store i16 %conv5, i16* %flag3, align 8, !dbg !3721
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3722
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_points_length(%struct.PointerRNA* %ptr) #0 !dbg !3723 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3726, metadata !DIExpression()), !dbg !3727
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3728
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3729
  %1 = load i8*, i8** %data1, align 8, !dbg !3729
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3730
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3727
  %3 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3731
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %3, i32 0, i32 6, !dbg !3732
  %4 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !3732
  %cmp = icmp eq %struct.MaskSplinePoint* %4, null, !dbg !3733
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3734

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3734

cond.false:                                       ; preds = %entry
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3735
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %5, i32 0, i32 5, !dbg !3736
  %6 = load i32, i32* %tot_point, align 4, !dbg !3736
  br label %cond.end, !dbg !3734

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !3734
  ret i32 %cond, !dbg !3737
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_points_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !3738 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskSpline*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3739, metadata !DIExpression()), !dbg !3740
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3741, metadata !DIExpression()), !dbg !3742
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %data, metadata !3743, metadata !DIExpression()), !dbg !3744
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3745
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3746
  %1 = load i8*, i8** %data1, align 8, !dbg !3746
  %2 = bitcast i8* %1 to %struct.MaskSpline*, !dbg !3747
  store %struct.MaskSpline* %2, %struct.MaskSpline** %data, align 8, !dbg !3744
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3748
  %4 = bitcast %struct.CollectionPropertyIterator* %3 to i8*, !dbg !3749
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 136, i1 false), !dbg !3749
  %5 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3750
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %5, i32 0, i32 0, !dbg !3751
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3752
  %7 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !3753
  %8 = bitcast %struct.PointerRNA* %6 to i8*, !dbg !3753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false), !dbg !3753
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3754
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 2, !dbg !3755
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSpline_points, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !3756
  %10 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3757
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3758
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 6, !dbg !3759
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !3759
  %13 = bitcast %struct.MaskSplinePoint* %12 to i8*, !dbg !3758
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %data, align 8, !dbg !3760
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 5, !dbg !3761
  %15 = load i32, i32* %tot_point, align 4, !dbg !3761
  call void @rna_iterator_array_begin(%struct.CollectionPropertyIterator* %10, i8* %13, i32 272, i32 %15, i8 zeroext 0, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !3762
  %16 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3763
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %16, i32 0, i32 7, !dbg !3765
  %17 = load i32, i32* %valid, align 8, !dbg !3765
  %tobool = icmp ne i32 %17, 0, !dbg !3763
  br i1 %tobool, label %if.then, label %if.end, !dbg !3766

if.then:                                          ; preds = %entry
  %18 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3767
  %ptr2 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %18, i32 0, i32 6, !dbg !3768
  %19 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3769
  call void @MaskSpline_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %19), !dbg !3770
  %20 = bitcast %struct.PointerRNA* %ptr2 to i8*, !dbg !3770
  %21 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false), !dbg !3770
  br label %if.end, !dbg !3767

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3771
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSpline_points_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !3772 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3773, metadata !DIExpression()), !dbg !3774
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3775
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 0, !dbg !3776
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3777
  %call = call i8* @rna_iterator_array_get(%struct.CollectionPropertyIterator* %1), !dbg !3778
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %parent, %struct.StructRNA* @RNA_MaskSplinePoint, i8* %call), !dbg !3779
  ret void, !dbg !3780
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_points_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3781 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3784
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %0), !dbg !3785
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3786
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !3788
  %2 = load i32, i32* %valid, align 8, !dbg !3788
  %tobool = icmp ne i32 %2, 0, !dbg !3786
  br i1 %tobool, label %if.then, label %if.end, !dbg !3789

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3790
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !3791
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3792
  call void @MaskSpline_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !3793
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !3793
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3793
  br label %if.end, !dbg !3790

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3794
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSpline_points_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3795 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3798
  call void @rna_iterator_array_end(%struct.CollectionPropertyIterator* %0), !dbg !3799
  ret void, !dbg !3800
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSpline_points_lookup_int(%struct.PointerRNA* %ptr, i32 %index, %struct.PointerRNA* %r_ptr) #0 !dbg !3801 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %index.addr = alloca i32, align 4
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %found = alloca i32, align 4
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %internal = alloca %struct.ArrayIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3802, metadata !DIExpression()), !dbg !3803
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !3804, metadata !DIExpression()), !dbg !3805
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.declare(metadata i32* %found, metadata !3808, metadata !DIExpression()), !dbg !3809
  store i32 0, i32* %found, align 4, !dbg !3809
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !3810, metadata !DIExpression()), !dbg !3811
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3812
  call void @MaskSpline_points_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %0), !dbg !3813
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3814
  %1 = load i32, i32* %valid, align 8, !dbg !3814
  %tobool = icmp ne i32 %1, 0, !dbg !3816
  br i1 %tobool, label %if.then, label %if.end20, !dbg !3817

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ArrayIterator** %internal, metadata !3818, metadata !DIExpression()), !dbg !3820
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 3, !dbg !3821
  %array = bitcast %union.anon* %internal1 to %struct.ArrayIterator*, !dbg !3822
  store %struct.ArrayIterator* %array, %struct.ArrayIterator** %internal, align 8, !dbg !3820
  %2 = load i32, i32* %index.addr, align 4, !dbg !3823
  %cmp = icmp slt i32 %2, 0, !dbg !3825
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !3826

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i32, i32* %index.addr, align 4, !dbg !3827
  %4 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3828
  %length = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %4, i32 0, i32 4, !dbg !3829
  %5 = load i32, i32* %length, align 4, !dbg !3829
  %cmp2 = icmp sge i32 %3, %5, !dbg !3830
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3831

if.then3:                                         ; preds = %lor.lhs.false, %if.then
  %6 = load i32, i32* %index.addr, align 4, !dbg !3832
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.MaskSpline_points_lookup_int, i64 0, i64 0), i32 %6), !dbg !3834
  br label %if.end16, !dbg !3835

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3836
  %skip = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %7, i32 0, i32 5, !dbg !3838
  %8 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !3838
  %tobool4 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %8, null, !dbg !3836
  br i1 %tobool4, label %if.then5, label %if.else14, !dbg !3839

if.then5:                                         ; preds = %if.else
  br label %while.cond, !dbg !3840

while.cond:                                       ; preds = %while.body, %if.then5
  %9 = load i32, i32* %index.addr, align 4, !dbg !3842
  %dec = add nsw i32 %9, -1, !dbg !3842
  store i32 %dec, i32* %index.addr, align 4, !dbg !3842
  %cmp6 = icmp sgt i32 %9, 0, !dbg !3843
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !3844

land.rhs:                                         ; preds = %while.cond
  %valid7 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3845
  %10 = load i32, i32* %valid7, align 8, !dbg !3845
  %tobool8 = icmp ne i32 %10, 0, !dbg !3844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %tobool8, %land.rhs ], !dbg !3846
  br i1 %11, label %while.body, label %while.end, !dbg !3840

while.body:                                       ; preds = %land.end
  call void @rna_iterator_array_next(%struct.CollectionPropertyIterator* %iter), !dbg !3847
  br label %while.cond, !dbg !3840, !llvm.loop !3849

while.end:                                        ; preds = %land.end
  %12 = load i32, i32* %index.addr, align 4, !dbg !3851
  %cmp9 = icmp eq i32 %12, -1, !dbg !3852
  br i1 %cmp9, label %land.rhs10, label %land.end13, !dbg !3853

land.rhs10:                                       ; preds = %while.end
  %valid11 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !3854
  %13 = load i32, i32* %valid11, align 8, !dbg !3854
  %tobool12 = icmp ne i32 %13, 0, !dbg !3853
  br label %land.end13

land.end13:                                       ; preds = %land.rhs10, %while.end
  %14 = phi i1 [ false, %while.end ], [ %tobool12, %land.rhs10 ], !dbg !3846
  %land.ext = zext i1 %14 to i32, !dbg !3853
  store i32 %land.ext, i32* %found, align 4, !dbg !3855
  br label %if.end, !dbg !3856

if.else14:                                        ; preds = %if.else
  %15 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3857
  %itemsize = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %15, i32 0, i32 3, !dbg !3859
  %16 = load i32, i32* %itemsize, align 8, !dbg !3859
  %17 = load i32, i32* %index.addr, align 4, !dbg !3860
  %mul = mul nsw i32 %16, %17, !dbg !3861
  %18 = load %struct.ArrayIterator*, %struct.ArrayIterator** %internal, align 8, !dbg !3862
  %ptr15 = getelementptr inbounds %struct.ArrayIterator, %struct.ArrayIterator* %18, i32 0, i32 0, !dbg !3863
  %19 = load i8*, i8** %ptr15, align 8, !dbg !3864
  %idx.ext = sext i32 %mul to i64, !dbg !3864
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !3864
  store i8* %add.ptr, i8** %ptr15, align 8, !dbg !3864
  store i32 1, i32* %found, align 4, !dbg !3865
  br label %if.end

if.end:                                           ; preds = %if.else14, %land.end13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then3
  %20 = load i32, i32* %found, align 4, !dbg !3866
  %tobool17 = icmp ne i32 %20, 0, !dbg !3866
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !3868

if.then18:                                        ; preds = %if.end16
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3869
  call void @MaskSpline_points_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %iter), !dbg !3870
  %22 = bitcast %struct.PointerRNA* %21 to i8*, !dbg !3870
  %23 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3870
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false), !dbg !3870
  br label %if.end19, !dbg !3871

if.end19:                                         ; preds = %if.then18, %if.end16
  br label %if.end20, !dbg !3872

if.end20:                                         ; preds = %if.end19, %entry
  call void @MaskSpline_points_end(%struct.CollectionPropertyIterator* %iter), !dbg !3873
  %24 = load i32, i32* %found, align 4, !dbg !3874
  ret i32 %24, !dbg !3875
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !3876 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3877, metadata !DIExpression()), !dbg !3878
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3881
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !3882
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !3882
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3883
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !3884
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3885
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !3886
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !3886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !3886
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3887
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !3888
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplines_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !3889
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3890
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3891
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !3892
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3893
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !3895
  %10 = load i32, i32* %valid, align 8, !dbg !3895
  %tobool = icmp ne i32 %10, 0, !dbg !3893
  br i1 %tobool, label %if.then, label %if.end, !dbg !3896

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3897
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !3898
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3899
  call void @MaskSplines_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !3900
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !3900
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !3900
  br label %if.end, !dbg !3897

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3901
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSplines_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !3902 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3903, metadata !DIExpression()), !dbg !3904
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3905
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !3906
  ret void, !dbg !3907
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3908 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3909, metadata !DIExpression()), !dbg !3910
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3911
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !3912
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3913
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !3915
  %2 = load i32, i32* %valid, align 8, !dbg !3915
  %tobool = icmp ne i32 %2, 0, !dbg !3913
  br i1 %tobool, label %if.then, label %if.end, !dbg !3916

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3917
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !3918
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3919
  call void @MaskSplines_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !3920
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !3920
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !3920
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !3920
  br label %if.end, !dbg !3917

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3921
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !3922 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !3923, metadata !DIExpression()), !dbg !3924
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !3925
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !3926
  ret void, !dbg !3927
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplines_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !3928 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3929, metadata !DIExpression()), !dbg !3930
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3931, metadata !DIExpression()), !dbg !3932
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !3933, metadata !DIExpression()), !dbg !3934
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3935
  %1 = load i8*, i8** %key.addr, align 8, !dbg !3936
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !3937
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !3938
  ret i32 %call, !dbg !3939
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !3940 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3941, metadata !DIExpression()), !dbg !3942
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3943
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !3944
  ret void, !dbg !3945
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_active_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !3946 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3947, metadata !DIExpression()), !dbg !3948
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3949
  call void @rna_MaskLayer_active_spline_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !3950
  ret void, !dbg !3951
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_active_spline_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !3952 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3953, metadata !DIExpression()), !dbg !3954
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !3955, metadata !DIExpression()), !dbg !3956
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3957
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3958
  %1 = load i8*, i8** %data, align 8, !dbg !3958
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !3959
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !3956
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3960
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3961
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 5, !dbg !3962
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %act_spline, align 8, !dbg !3962
  %6 = bitcast %struct.MaskSpline* %5 to i8*, !dbg !3961
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.StructRNA* @RNA_MaskSpline, i8* %6), !dbg !3963
  ret void, !dbg !3964
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_active_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !3965 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3966, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !3968, metadata !DIExpression()), !dbg !3969
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3970
  call void @rna_MaskLayer_active_spline_set(%struct.PointerRNA* %0, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value), !dbg !3971
  ret void, !dbg !3972
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_active_spline_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !3973 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %index = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !3974, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !3976, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !3978, metadata !DIExpression()), !dbg !3979
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !3980
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !3981
  %1 = load i8*, i8** %data, align 8, !dbg !3981
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !3982
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !3979
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !3983, metadata !DIExpression()), !dbg !3984
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %value, i32 0, i32 2, !dbg !3985
  %3 = load i8*, i8** %data1, align 8, !dbg !3985
  %4 = bitcast i8* %3 to %struct.MaskSpline*, !dbg !3986
  store %struct.MaskSpline* %4, %struct.MaskSpline** %spline, align 8, !dbg !3984
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3987, metadata !DIExpression()), !dbg !3988
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3989
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 3, !dbg !3990
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3991
  %7 = bitcast %struct.MaskSpline* %6 to i8*, !dbg !3991
  %call = call i32 @BLI_findindex(%struct.ListBase* %splines, i8* %7), !dbg !3992
  store i32 %call, i32* %index, align 4, !dbg !3988
  %8 = load i32, i32* %index, align 4, !dbg !3993
  %cmp = icmp ne i32 %8, -1, !dbg !3995
  br i1 %cmp, label %if.then, label %if.else, !dbg !3996

if.then:                                          ; preds = %entry
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !3997
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !3998
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %10, i32 0, i32 5, !dbg !3999
  store %struct.MaskSpline* %9, %struct.MaskSpline** %act_spline, align 8, !dbg !4000
  br label %if.end, !dbg !3998

if.else:                                          ; preds = %entry
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4001
  %act_spline2 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %11, i32 0, i32 5, !dbg !4002
  store %struct.MaskSpline* null, %struct.MaskSpline** %act_spline2, align 8, !dbg !4003
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4004
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_active_point_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !4005 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4006, metadata !DIExpression()), !dbg !4007
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4008
  call void @rna_MaskLayer_active_spline_point_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !4009
  ret void, !dbg !4010
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_active_spline_point_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !4011 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !4014, metadata !DIExpression()), !dbg !4015
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4016
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4017
  %1 = load i8*, i8** %data, align 8, !dbg !4017
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4018
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !4015
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4019
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4020
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 6, !dbg !4021
  %5 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %act_point, align 8, !dbg !4021
  %6 = bitcast %struct.MaskSplinePoint* %5 to i8*, !dbg !4020
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.StructRNA* @RNA_MaskSplinePoint, i8* %6), !dbg !4022
  ret void, !dbg !4023
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_active_point_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !4024 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4025, metadata !DIExpression()), !dbg !4026
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !4027, metadata !DIExpression()), !dbg !4028
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4029
  call void @rna_MaskLayer_active_spline_point_set(%struct.PointerRNA* %0, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value), !dbg !4030
  ret void, !dbg !4031
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_active_spline_point_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !4032 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4033, metadata !DIExpression()), !dbg !4034
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !4035, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !4037, metadata !DIExpression()), !dbg !4038
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4039
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4040
  %1 = load i8*, i8** %data, align 8, !dbg !4040
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4041
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !4038
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !4042, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !4044, metadata !DIExpression()), !dbg !4045
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %value, i32 0, i32 2, !dbg !4046
  %3 = load i8*, i8** %data1, align 8, !dbg !4046
  %4 = bitcast i8* %3 to %struct.MaskSplinePoint*, !dbg !4047
  store %struct.MaskSplinePoint* %4, %struct.MaskSplinePoint** %point, align 8, !dbg !4045
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4048
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %5, i32 0, i32 6, !dbg !4049
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %act_point, align 8, !dbg !4050
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4051
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 3, !dbg !4053
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !4054
  %7 = load i8*, i8** %first, align 8, !dbg !4054
  %8 = bitcast i8* %7 to %struct.MaskSpline*, !dbg !4051
  store %struct.MaskSpline* %8, %struct.MaskSpline** %spline, align 8, !dbg !4055
  br label %for.cond, !dbg !4056

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4057
  %tobool = icmp ne %struct.MaskSpline* %9, null, !dbg !4059
  br i1 %tobool, label %for.body, label %for.end, !dbg !4059

for.body:                                         ; preds = %for.cond
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4060
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4063
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %11, i32 0, i32 6, !dbg !4064
  %12 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !4064
  %cmp = icmp uge %struct.MaskSplinePoint* %10, %12, !dbg !4065
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4066

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4067
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4068
  %points2 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 6, !dbg !4069
  %15 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points2, align 8, !dbg !4069
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4070
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %16, i32 0, i32 5, !dbg !4071
  %17 = load i32, i32* %tot_point, align 4, !dbg !4071
  %idx.ext = sext i32 %17 to i64, !dbg !4072
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %15, i64 %idx.ext, !dbg !4072
  %cmp3 = icmp ult %struct.MaskSplinePoint* %13, %add.ptr, !dbg !4073
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4074

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !4075
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4077
  %act_point4 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 6, !dbg !4078
  store %struct.MaskSplinePoint* %18, %struct.MaskSplinePoint** %act_point4, align 8, !dbg !4079
  br label %for.end, !dbg !4080

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4081

for.inc:                                          ; preds = %if.end
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !4082
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %20, i32 0, i32 0, !dbg !4083
  %21 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !4083
  store %struct.MaskSpline* %21, %struct.MaskSpline** %spline, align 8, !dbg !4084
  br label %for.cond, !dbg !4085, !llvm.loop !4086

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4088
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4089 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4094
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !4095
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !4095
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4096
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !4097
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4098
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !4099
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !4099
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4099
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4100
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !4101
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskSplinePoints_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !4102
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4103
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4104
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !4105
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4106
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !4108
  %10 = load i32, i32* %valid, align 8, !dbg !4108
  %tobool = icmp ne i32 %10, 0, !dbg !4106
  br i1 %tobool, label %if.then, label %if.end, !dbg !4109

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4110
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !4111
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4112
  call void @MaskSplinePoints_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !4113
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !4113
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !4113
  br label %if.end, !dbg !4110

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4114
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskSplinePoints_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !4115 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4116, metadata !DIExpression()), !dbg !4117
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4118
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !4119
  ret void, !dbg !4120
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4121 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4124
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !4125
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4126
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !4128
  %2 = load i32, i32* %valid, align 8, !dbg !4128
  %tobool = icmp ne i32 %2, 0, !dbg !4126
  br i1 %tobool, label %if.then, label %if.end, !dbg !4129

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4130
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !4131
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4132
  call void @MaskSplinePoints_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !4133
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !4133
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4133
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !4133
  br label %if.end, !dbg !4130

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4134
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4135 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4136, metadata !DIExpression()), !dbg !4137
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4138
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !4139
  ret void, !dbg !4140
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskSplinePoints_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !4141 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4142, metadata !DIExpression()), !dbg !4143
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4144, metadata !DIExpression()), !dbg !4145
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !4146, metadata !DIExpression()), !dbg !4147
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4148
  %1 = load i8*, i8** %key.addr, align 8, !dbg !4149
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !4150
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !4151
  ret i32 %call, !dbg !4152
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !4153 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4154, metadata !DIExpression()), !dbg !4155
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4156
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !4157
  ret void, !dbg !4158
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4159 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4160, metadata !DIExpression()), !dbg !4161
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4162, metadata !DIExpression()), !dbg !4163
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4164
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !4165
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !4165
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4166
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !4167
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4168
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !4169
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !4169
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4169
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4170
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !4171
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !4172
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4173
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4174
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !4175
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4176
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !4178
  %10 = load i32, i32* %valid, align 8, !dbg !4178
  %tobool = icmp ne i32 %10, 0, !dbg !4176
  br i1 %tobool, label %if.then, label %if.end, !dbg !4179

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4180
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !4181
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4182
  call void @MaskLayer_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !4183
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !4183
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !4183
  br label %if.end, !dbg !4180

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4184
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskLayer_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !4185 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4186, metadata !DIExpression()), !dbg !4187
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4188
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !4189
  ret void, !dbg !4190
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4191 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4192, metadata !DIExpression()), !dbg !4193
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4194
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !4195
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4196
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !4198
  %2 = load i32, i32* %valid, align 8, !dbg !4198
  %tobool = icmp ne i32 %2, 0, !dbg !4196
  br i1 %tobool, label %if.then, label %if.end, !dbg !4199

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4200
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !4201
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4202
  call void @MaskLayer_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !4203
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !4203
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4203
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !4203
  br label %if.end, !dbg !4200

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4204
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4205 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4208
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !4209
  ret void, !dbg !4210
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !4211 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4212, metadata !DIExpression()), !dbg !4213
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !4214, metadata !DIExpression()), !dbg !4215
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4218
  %1 = load i8*, i8** %key.addr, align 8, !dbg !4219
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !4220
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !4221
  ret i32 %call, !dbg !4222
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !4223 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4226
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !4227
  ret void, !dbg !4228
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_name_get(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !4229 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4230, metadata !DIExpression()), !dbg !4231
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !4232, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4234, metadata !DIExpression()), !dbg !4235
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4236
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4237
  %1 = load i8*, i8** %data1, align 8, !dbg !4237
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4238
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4235
  %3 = load i8*, i8** %value.addr, align 8, !dbg !4239
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4240
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 2, !dbg !4241
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4240
  %call = call i8* @BLI_strncpy_utf8(i8* %3, i8* %arraydecay, i64 64), !dbg !4242
  ret void, !dbg !4243
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_name_length(%struct.PointerRNA* %ptr) #0 !dbg !4244 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4245, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4247, metadata !DIExpression()), !dbg !4248
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4249
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4250
  %1 = load i8*, i8** %data1, align 8, !dbg !4250
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4251
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4248
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4252
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 2, !dbg !4253
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4252
  %call = call i64 @strlen(i8* %arraydecay) #5, !dbg !4254
  %conv = trunc i64 %call to i32, !dbg !4254
  ret i32 %conv, !dbg !4255
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_name_set(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !4256 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4257, metadata !DIExpression()), !dbg !4258
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !4259, metadata !DIExpression()), !dbg !4260
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4261
  %1 = load i8*, i8** %value.addr, align 8, !dbg !4262
  call void @rna_MaskLayer_name_set(%struct.PointerRNA* %0, i8* %1), !dbg !4263
  ret void, !dbg !4264
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_name_set(%struct.PointerRNA* %ptr, i8* %value) #0 !dbg !4265 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i8*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4266, metadata !DIExpression()), !dbg !4267
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !4268, metadata !DIExpression()), !dbg !4269
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4270, metadata !DIExpression()), !dbg !4271
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4272
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !4273
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !4274
  %1 = load i8*, i8** %data, align 8, !dbg !4274
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4275
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !4271
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !4276, metadata !DIExpression()), !dbg !4277
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4278
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !4279
  %4 = load i8*, i8** %data1, align 8, !dbg !4279
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !4280
  store %struct.MaskLayer* %5, %struct.MaskLayer** %masklay, align 8, !dbg !4277
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4281
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 2, !dbg !4282
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4281
  %7 = load i8*, i8** %value.addr, align 8, !dbg !4283
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %7, i64 64), !dbg !4284
  %8 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4285
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4286
  call void @BKE_mask_layer_unique_name(%struct.Mask* %8, %struct.MaskLayer* %9), !dbg !4287
  ret void, !dbg !4288
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_splines_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4289 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4290, metadata !DIExpression()), !dbg !4291
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4292, metadata !DIExpression()), !dbg !4293
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4294
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !4295
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !4295
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4296
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !4297
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4298
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !4299
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !4299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4299
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4300
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !4301
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayer_splines, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !4302
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4303
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4304
  call void @rna_MaskLayer_splines_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !4305
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4306
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !4308
  %10 = load i32, i32* %valid, align 8, !dbg !4308
  %tobool = icmp ne i32 %10, 0, !dbg !4306
  br i1 %tobool, label %if.then, label %if.end, !dbg !4309

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4310
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !4311
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4312
  call void @MaskLayer_splines_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !4313
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !4313
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !4313
  br label %if.end, !dbg !4310

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4314
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_splines_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4315 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4316, metadata !DIExpression()), !dbg !4317
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4318, metadata !DIExpression()), !dbg !4319
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !4320, metadata !DIExpression()), !dbg !4321
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4322
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4323
  %1 = load i8*, i8** %data, align 8, !dbg !4323
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4324
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !4321
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4325
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !4326
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 3, !dbg !4327
  call void @rna_iterator_listbase_begin(%struct.CollectionPropertyIterator* %3, %struct.ListBase* %splines, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !4328
  ret void, !dbg !4329
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskLayer_splines_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !4330 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4331, metadata !DIExpression()), !dbg !4332
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4333
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 0, !dbg !4334
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4335
  %call = call i8* @rna_iterator_listbase_get(%struct.CollectionPropertyIterator* %1), !dbg !4336
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %parent, %struct.StructRNA* @RNA_MaskSpline, i8* %call), !dbg !4337
  ret void, !dbg !4338
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_splines_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4339 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4340, metadata !DIExpression()), !dbg !4341
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4342
  call void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator* %0), !dbg !4343
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4344
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !4346
  %2 = load i32, i32* %valid, align 8, !dbg !4346
  %tobool = icmp ne i32 %2, 0, !dbg !4344
  br i1 %tobool, label %if.then, label %if.end, !dbg !4347

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4348
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !4349
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4350
  call void @MaskLayer_splines_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !4351
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !4351
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4351
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !4351
  br label %if.end, !dbg !4348

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4352
}

declare dso_local void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_splines_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4353 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4354, metadata !DIExpression()), !dbg !4355
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4356
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !4357
  ret void, !dbg !4358
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_splines_lookup_int(%struct.PointerRNA* %ptr, i32 %index, %struct.PointerRNA* %r_ptr) #0 !dbg !4359 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %index.addr = alloca i32, align 4
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %found = alloca i32, align 4
  %iter = alloca %struct.CollectionPropertyIterator, align 8
  %internal = alloca %struct.ListBaseIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4360, metadata !DIExpression()), !dbg !4361
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4362, metadata !DIExpression()), !dbg !4363
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !4364, metadata !DIExpression()), !dbg !4365
  call void @llvm.dbg.declare(metadata i32* %found, metadata !4366, metadata !DIExpression()), !dbg !4367
  store i32 0, i32* %found, align 4, !dbg !4367
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %iter, metadata !4368, metadata !DIExpression()), !dbg !4369
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4370
  call void @MaskLayer_splines_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %0), !dbg !4371
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !4372
  %1 = load i32, i32* %valid, align 8, !dbg !4372
  %tobool = icmp ne i32 %1, 0, !dbg !4374
  br i1 %tobool, label %if.then, label %if.end31, !dbg !4375

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ListBaseIterator** %internal, metadata !4376, metadata !DIExpression()), !dbg !4379
  %internal1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 3, !dbg !4380
  %listbase = bitcast %union.anon* %internal1 to %struct.ListBaseIterator*, !dbg !4381
  store %struct.ListBaseIterator* %listbase, %struct.ListBaseIterator** %internal, align 8, !dbg !4379
  %2 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !4382
  %skip = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %2, i32 0, i32 2, !dbg !4384
  %3 = load i32 (%struct.CollectionPropertyIterator*, i8*)*, i32 (%struct.CollectionPropertyIterator*, i8*)** %skip, align 8, !dbg !4384
  %tobool2 = icmp ne i32 (%struct.CollectionPropertyIterator*, i8*)* %3, null, !dbg !4382
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !4385

if.then3:                                         ; preds = %if.then
  br label %while.cond, !dbg !4386

while.cond:                                       ; preds = %while.body, %if.then3
  %4 = load i32, i32* %index.addr, align 4, !dbg !4388
  %dec = add nsw i32 %4, -1, !dbg !4388
  store i32 %dec, i32* %index.addr, align 4, !dbg !4388
  %cmp = icmp sgt i32 %4, 0, !dbg !4389
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4390

land.rhs:                                         ; preds = %while.cond
  %valid4 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !4391
  %5 = load i32, i32* %valid4, align 8, !dbg !4391
  %tobool5 = icmp ne i32 %5, 0, !dbg !4390
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool5, %land.rhs ], !dbg !4392
  br i1 %6, label %while.body, label %while.end, !dbg !4386

while.body:                                       ; preds = %land.end
  call void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator* %iter), !dbg !4393
  br label %while.cond, !dbg !4386, !llvm.loop !4395

while.end:                                        ; preds = %land.end
  %7 = load i32, i32* %index.addr, align 4, !dbg !4397
  %cmp6 = icmp eq i32 %7, -1, !dbg !4398
  br i1 %cmp6, label %land.rhs7, label %land.end10, !dbg !4399

land.rhs7:                                        ; preds = %while.end
  %valid8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %iter, i32 0, i32 7, !dbg !4400
  %8 = load i32, i32* %valid8, align 8, !dbg !4400
  %tobool9 = icmp ne i32 %8, 0, !dbg !4399
  br label %land.end10

land.end10:                                       ; preds = %land.rhs7, %while.end
  %9 = phi i1 [ false, %while.end ], [ %tobool9, %land.rhs7 ], !dbg !4392
  %land.ext = zext i1 %9 to i32, !dbg !4399
  store i32 %land.ext, i32* %found, align 4, !dbg !4401
  br label %if.end, !dbg !4402

if.else:                                          ; preds = %if.then
  br label %while.cond11, !dbg !4403

while.cond11:                                     ; preds = %while.body18, %if.else
  %10 = load i32, i32* %index.addr, align 4, !dbg !4405
  %dec12 = add nsw i32 %10, -1, !dbg !4405
  store i32 %dec12, i32* %index.addr, align 4, !dbg !4405
  %cmp13 = icmp sgt i32 %10, 0, !dbg !4406
  br i1 %cmp13, label %land.rhs14, label %land.end16, !dbg !4407

land.rhs14:                                       ; preds = %while.cond11
  %11 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !4408
  %link = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %11, i32 0, i32 0, !dbg !4409
  %12 = load %struct.Link*, %struct.Link** %link, align 8, !dbg !4409
  %tobool15 = icmp ne %struct.Link* %12, null, !dbg !4407
  br label %land.end16

land.end16:                                       ; preds = %land.rhs14, %while.cond11
  %13 = phi i1 [ false, %while.cond11 ], [ %tobool15, %land.rhs14 ], !dbg !4410
  br i1 %13, label %while.body18, label %while.end21, !dbg !4403

while.body18:                                     ; preds = %land.end16
  %14 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !4411
  %link19 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %14, i32 0, i32 0, !dbg !4412
  %15 = load %struct.Link*, %struct.Link** %link19, align 8, !dbg !4412
  %next = getelementptr inbounds %struct.Link, %struct.Link* %15, i32 0, i32 0, !dbg !4413
  %16 = load %struct.Link*, %struct.Link** %next, align 8, !dbg !4413
  %17 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !4414
  %link20 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %17, i32 0, i32 0, !dbg !4415
  store %struct.Link* %16, %struct.Link** %link20, align 8, !dbg !4416
  br label %while.cond11, !dbg !4403, !llvm.loop !4417

while.end21:                                      ; preds = %land.end16
  %18 = load i32, i32* %index.addr, align 4, !dbg !4418
  %cmp22 = icmp eq i32 %18, -1, !dbg !4419
  br i1 %cmp22, label %land.rhs23, label %land.end26, !dbg !4420

land.rhs23:                                       ; preds = %while.end21
  %19 = load %struct.ListBaseIterator*, %struct.ListBaseIterator** %internal, align 8, !dbg !4421
  %link24 = getelementptr inbounds %struct.ListBaseIterator, %struct.ListBaseIterator* %19, i32 0, i32 0, !dbg !4422
  %20 = load %struct.Link*, %struct.Link** %link24, align 8, !dbg !4422
  %tobool25 = icmp ne %struct.Link* %20, null, !dbg !4420
  br label %land.end26

land.end26:                                       ; preds = %land.rhs23, %while.end21
  %21 = phi i1 [ false, %while.end21 ], [ %tobool25, %land.rhs23 ], !dbg !4410
  %land.ext27 = zext i1 %21 to i32, !dbg !4420
  store i32 %land.ext27, i32* %found, align 4, !dbg !4423
  br label %if.end

if.end:                                           ; preds = %land.end26, %land.end10
  %22 = load i32, i32* %found, align 4, !dbg !4424
  %tobool28 = icmp ne i32 %22, 0, !dbg !4424
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !4426

if.then29:                                        ; preds = %if.end
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !4427
  call void @MaskLayer_splines_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %iter), !dbg !4428
  %24 = bitcast %struct.PointerRNA* %23 to i8*, !dbg !4428
  %25 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4428
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false), !dbg !4428
  br label %if.end30, !dbg !4429

if.end30:                                         ; preds = %if.then29, %if.end
  br label %if.end31, !dbg !4430

if.end31:                                         ; preds = %if.end30, %entry
  call void @MaskLayer_splines_end(%struct.CollectionPropertyIterator* %iter), !dbg !4431
  %26 = load i32, i32* %found, align 4, !dbg !4432
  ret i32 %26, !dbg !4433
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_hide_get(%struct.PointerRNA* %ptr) #0 !dbg !4434 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4435, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4437, metadata !DIExpression()), !dbg !4438
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4439
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4440
  %1 = load i8*, i8** %data1, align 8, !dbg !4440
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4441
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4438
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4442
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 13, !dbg !4443
  %4 = load i8, i8* %restrictflag, align 1, !dbg !4443
  %conv = zext i8 %4 to i32, !dbg !4444
  %and = and i32 %conv, 1, !dbg !4445
  %cmp = icmp ne i32 %and, 0, !dbg !4446
  %conv2 = zext i1 %cmp to i32, !dbg !4446
  ret i32 %conv2, !dbg !4447
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_hide_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4448 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4451, metadata !DIExpression()), !dbg !4452
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4453, metadata !DIExpression()), !dbg !4454
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4455
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4456
  %1 = load i8*, i8** %data1, align 8, !dbg !4456
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4457
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4454
  %3 = load i32, i32* %value.addr, align 4, !dbg !4458
  %tobool = icmp ne i32 %3, 0, !dbg !4458
  br i1 %tobool, label %if.then, label %if.else, !dbg !4460

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4461
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 13, !dbg !4462
  %5 = load i8, i8* %restrictflag, align 1, !dbg !4463
  %conv = zext i8 %5 to i32, !dbg !4463
  %or = or i32 %conv, 1, !dbg !4463
  %conv2 = trunc i32 %or to i8, !dbg !4463
  store i8 %conv2, i8* %restrictflag, align 1, !dbg !4463
  br label %if.end, !dbg !4461

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4464
  %restrictflag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !4465
  %7 = load i8, i8* %restrictflag3, align 1, !dbg !4466
  %conv4 = zext i8 %7 to i32, !dbg !4466
  %and = and i32 %conv4, -2, !dbg !4466
  %conv5 = trunc i32 %and to i8, !dbg !4466
  store i8 %conv5, i8* %restrictflag3, align 1, !dbg !4466
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4467
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_hide_select_get(%struct.PointerRNA* %ptr) #0 !dbg !4468 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4469, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4471, metadata !DIExpression()), !dbg !4472
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4473
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4474
  %1 = load i8*, i8** %data1, align 8, !dbg !4474
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4475
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4472
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4476
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 13, !dbg !4477
  %4 = load i8, i8* %restrictflag, align 1, !dbg !4477
  %conv = zext i8 %4 to i32, !dbg !4478
  %and = and i32 %conv, 2, !dbg !4479
  %cmp = icmp ne i32 %and, 0, !dbg !4480
  %conv2 = zext i1 %cmp to i32, !dbg !4480
  ret i32 %conv2, !dbg !4481
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_hide_select_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4482 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4483, metadata !DIExpression()), !dbg !4484
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4485, metadata !DIExpression()), !dbg !4486
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4487, metadata !DIExpression()), !dbg !4488
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4489
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4490
  %1 = load i8*, i8** %data1, align 8, !dbg !4490
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4491
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4488
  %3 = load i32, i32* %value.addr, align 4, !dbg !4492
  %tobool = icmp ne i32 %3, 0, !dbg !4492
  br i1 %tobool, label %if.then, label %if.else, !dbg !4494

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4495
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 13, !dbg !4496
  %5 = load i8, i8* %restrictflag, align 1, !dbg !4497
  %conv = zext i8 %5 to i32, !dbg !4497
  %or = or i32 %conv, 2, !dbg !4497
  %conv2 = trunc i32 %or to i8, !dbg !4497
  store i8 %conv2, i8* %restrictflag, align 1, !dbg !4497
  br label %if.end, !dbg !4495

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4498
  %restrictflag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !4499
  %7 = load i8, i8* %restrictflag3, align 1, !dbg !4500
  %conv4 = zext i8 %7 to i32, !dbg !4500
  %and = and i32 %conv4, -3, !dbg !4500
  %conv5 = trunc i32 %and to i8, !dbg !4500
  store i8 %conv5, i8* %restrictflag3, align 1, !dbg !4500
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4501
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_hide_render_get(%struct.PointerRNA* %ptr) #0 !dbg !4502 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4503, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4505, metadata !DIExpression()), !dbg !4506
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4507
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4508
  %1 = load i8*, i8** %data1, align 8, !dbg !4508
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4509
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4506
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4510
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 13, !dbg !4511
  %4 = load i8, i8* %restrictflag, align 1, !dbg !4511
  %conv = zext i8 %4 to i32, !dbg !4512
  %and = and i32 %conv, 4, !dbg !4513
  %cmp = icmp ne i32 %and, 0, !dbg !4514
  %conv2 = zext i1 %cmp to i32, !dbg !4514
  ret i32 %conv2, !dbg !4515
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_hide_render_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4516 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4517, metadata !DIExpression()), !dbg !4518
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4519, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4521, metadata !DIExpression()), !dbg !4522
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4523
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4524
  %1 = load i8*, i8** %data1, align 8, !dbg !4524
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4525
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4522
  %3 = load i32, i32* %value.addr, align 4, !dbg !4526
  %tobool = icmp ne i32 %3, 0, !dbg !4526
  br i1 %tobool, label %if.then, label %if.else, !dbg !4528

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4529
  %restrictflag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 13, !dbg !4530
  %5 = load i8, i8* %restrictflag, align 1, !dbg !4531
  %conv = zext i8 %5 to i32, !dbg !4531
  %or = or i32 %conv, 4, !dbg !4531
  %conv2 = trunc i32 %or to i8, !dbg !4531
  store i8 %conv2, i8* %restrictflag, align 1, !dbg !4531
  br label %if.end, !dbg !4529

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4532
  %restrictflag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 13, !dbg !4533
  %7 = load i8, i8* %restrictflag3, align 1, !dbg !4534
  %conv4 = zext i8 %7 to i32, !dbg !4534
  %and = and i32 %conv4, -5, !dbg !4534
  %conv5 = trunc i32 %and to i8, !dbg !4534
  store i8 %conv5, i8* %restrictflag3, align 1, !dbg !4534
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4535
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_select_get(%struct.PointerRNA* %ptr) #0 !dbg !4536 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4537, metadata !DIExpression()), !dbg !4538
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4539, metadata !DIExpression()), !dbg !4540
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4541
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4542
  %1 = load i8*, i8** %data1, align 8, !dbg !4542
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4543
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4540
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4544
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 12, !dbg !4545
  %4 = load i8, i8* %flag, align 2, !dbg !4545
  %conv = zext i8 %4 to i32, !dbg !4546
  %and = and i32 %conv, 32, !dbg !4547
  %cmp = icmp ne i32 %and, 0, !dbg !4548
  %conv2 = zext i1 %cmp to i32, !dbg !4548
  ret i32 %conv2, !dbg !4549
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_select_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4550 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4551, metadata !DIExpression()), !dbg !4552
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4553, metadata !DIExpression()), !dbg !4554
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4555, metadata !DIExpression()), !dbg !4556
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4557
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4558
  %1 = load i8*, i8** %data1, align 8, !dbg !4558
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4559
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4556
  %3 = load i32, i32* %value.addr, align 4, !dbg !4560
  %tobool = icmp ne i32 %3, 0, !dbg !4560
  br i1 %tobool, label %if.then, label %if.else, !dbg !4562

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4563
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 12, !dbg !4564
  %5 = load i8, i8* %flag, align 2, !dbg !4565
  %conv = zext i8 %5 to i32, !dbg !4565
  %or = or i32 %conv, 32, !dbg !4565
  %conv2 = trunc i32 %or to i8, !dbg !4565
  store i8 %conv2, i8* %flag, align 2, !dbg !4565
  br label %if.end, !dbg !4563

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4566
  %flag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 12, !dbg !4567
  %7 = load i8, i8* %flag3, align 2, !dbg !4568
  %conv4 = zext i8 %7 to i32, !dbg !4568
  %and = and i32 %conv4, -33, !dbg !4568
  %conv5 = trunc i32 %and to i8, !dbg !4568
  store i8 %conv5, i8* %flag3, align 2, !dbg !4568
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4569
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @MaskLayer_alpha_get(%struct.PointerRNA* %ptr) #0 !dbg !4570 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4571, metadata !DIExpression()), !dbg !4572
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4573, metadata !DIExpression()), !dbg !4574
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4575
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4576
  %1 = load i8*, i8** %data1, align 8, !dbg !4576
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4577
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4574
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4578
  %alpha = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 7, !dbg !4579
  %4 = load float, float* %alpha, align 8, !dbg !4579
  ret float %4, !dbg !4580
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_alpha_set(%struct.PointerRNA* %ptr, float %value) #0 !dbg !4581 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca float, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4582, metadata !DIExpression()), !dbg !4583
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4586, metadata !DIExpression()), !dbg !4587
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4588
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4589
  %1 = load i8*, i8** %data1, align 8, !dbg !4589
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4590
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4587
  %3 = load float, float* %value.addr, align 4, !dbg !4591
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4592
  %alpha = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 7, !dbg !4593
  store float %3, float* %alpha, align 8, !dbg !4594
  ret void, !dbg !4595
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_blend_get(%struct.PointerRNA* %ptr) #0 !dbg !4596 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4597, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4599, metadata !DIExpression()), !dbg !4600
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4601
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4602
  %1 = load i8*, i8** %data1, align 8, !dbg !4602
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4603
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4600
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4604
  %blend = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 8, !dbg !4605
  %4 = load i8, i8* %blend, align 4, !dbg !4605
  %conv = zext i8 %4 to i32, !dbg !4606
  ret i32 %conv, !dbg !4607
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_blend_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4608 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4609, metadata !DIExpression()), !dbg !4610
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4611, metadata !DIExpression()), !dbg !4612
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4613, metadata !DIExpression()), !dbg !4614
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4615
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4616
  %1 = load i8*, i8** %data1, align 8, !dbg !4616
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4617
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4614
  %3 = load i32, i32* %value.addr, align 4, !dbg !4618
  %conv = trunc i32 %3 to i8, !dbg !4618
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4619
  %blend = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 8, !dbg !4620
  store i8 %conv, i8* %blend, align 4, !dbg !4621
  ret void, !dbg !4622
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_invert_get(%struct.PointerRNA* %ptr) #0 !dbg !4623 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4626, metadata !DIExpression()), !dbg !4627
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4628
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4629
  %1 = load i8*, i8** %data1, align 8, !dbg !4629
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4630
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4627
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4631
  %blend_flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 9, !dbg !4632
  %4 = load i8, i8* %blend_flag, align 1, !dbg !4632
  %conv = zext i8 %4 to i32, !dbg !4633
  %and = and i32 %conv, 1, !dbg !4634
  %cmp = icmp ne i32 %and, 0, !dbg !4635
  %conv2 = zext i1 %cmp to i32, !dbg !4635
  ret i32 %conv2, !dbg !4636
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_invert_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4637 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4638, metadata !DIExpression()), !dbg !4639
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4640, metadata !DIExpression()), !dbg !4641
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4642, metadata !DIExpression()), !dbg !4643
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4644
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4645
  %1 = load i8*, i8** %data1, align 8, !dbg !4645
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4646
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4643
  %3 = load i32, i32* %value.addr, align 4, !dbg !4647
  %tobool = icmp ne i32 %3, 0, !dbg !4647
  br i1 %tobool, label %if.then, label %if.else, !dbg !4649

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4650
  %blend_flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 9, !dbg !4651
  %5 = load i8, i8* %blend_flag, align 1, !dbg !4652
  %conv = zext i8 %5 to i32, !dbg !4652
  %or = or i32 %conv, 1, !dbg !4652
  %conv2 = trunc i32 %or to i8, !dbg !4652
  store i8 %conv2, i8* %blend_flag, align 1, !dbg !4652
  br label %if.end, !dbg !4650

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4653
  %blend_flag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 9, !dbg !4654
  %7 = load i8, i8* %blend_flag3, align 1, !dbg !4655
  %conv4 = zext i8 %7 to i32, !dbg !4655
  %and = and i32 %conv4, -2, !dbg !4655
  %conv5 = trunc i32 %and to i8, !dbg !4655
  store i8 %conv5, i8* %blend_flag3, align 1, !dbg !4655
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4656
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_falloff_get(%struct.PointerRNA* %ptr) #0 !dbg !4657 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4658, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4660, metadata !DIExpression()), !dbg !4661
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4662
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4663
  %1 = load i8*, i8** %data1, align 8, !dbg !4663
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4664
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4661
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4665
  %falloff = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 10, !dbg !4666
  %4 = load i8, i8* %falloff, align 2, !dbg !4666
  %conv = zext i8 %4 to i32, !dbg !4667
  ret i32 %conv, !dbg !4668
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_falloff_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4669 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4674, metadata !DIExpression()), !dbg !4675
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4676
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4677
  %1 = load i8*, i8** %data1, align 8, !dbg !4677
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4678
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4675
  %3 = load i32, i32* %value.addr, align 4, !dbg !4679
  %conv = trunc i32 %3 to i8, !dbg !4679
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4680
  %falloff = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 10, !dbg !4681
  store i8 %conv, i8* %falloff, align 2, !dbg !4682
  ret void, !dbg !4683
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_use_fill_holes_get(%struct.PointerRNA* %ptr) #0 !dbg !4684 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4685, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4687, metadata !DIExpression()), !dbg !4688
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4689
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4690
  %1 = load i8*, i8** %data1, align 8, !dbg !4690
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4691
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4688
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4692
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 12, !dbg !4693
  %4 = load i8, i8* %flag, align 2, !dbg !4693
  %conv = zext i8 %4 to i32, !dbg !4694
  %and = and i32 %conv, 64, !dbg !4695
  %cmp = icmp ne i32 %and, 0, !dbg !4696
  %lnot = xor i1 %cmp, true, !dbg !4697
  %lnot.ext = zext i1 %lnot to i32, !dbg !4697
  ret i32 %lnot.ext, !dbg !4698
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_use_fill_holes_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4699 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4700, metadata !DIExpression()), !dbg !4701
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4702, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4704, metadata !DIExpression()), !dbg !4705
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4706
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4707
  %1 = load i8*, i8** %data1, align 8, !dbg !4707
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4708
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4705
  %3 = load i32, i32* %value.addr, align 4, !dbg !4709
  %tobool = icmp ne i32 %3, 0, !dbg !4709
  br i1 %tobool, label %if.else, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4712
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 12, !dbg !4713
  %5 = load i8, i8* %flag, align 2, !dbg !4714
  %conv = zext i8 %5 to i32, !dbg !4714
  %or = or i32 %conv, 64, !dbg !4714
  %conv2 = trunc i32 %or to i8, !dbg !4714
  store i8 %conv2, i8* %flag, align 2, !dbg !4714
  br label %if.end, !dbg !4712

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4715
  %flag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 12, !dbg !4716
  %7 = load i8, i8* %flag3, align 2, !dbg !4717
  %conv4 = zext i8 %7 to i32, !dbg !4717
  %and = and i32 %conv4, -65, !dbg !4717
  %conv5 = trunc i32 %and to i8, !dbg !4717
  store i8 %conv5, i8* %flag3, align 2, !dbg !4717
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4718
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayer_use_fill_overlap_get(%struct.PointerRNA* %ptr) #0 !dbg !4719 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4720, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4722, metadata !DIExpression()), !dbg !4723
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4724
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4725
  %1 = load i8*, i8** %data1, align 8, !dbg !4725
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4726
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4723
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4727
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 12, !dbg !4728
  %4 = load i8, i8* %flag, align 2, !dbg !4728
  %conv = zext i8 %4 to i32, !dbg !4729
  %and = and i32 %conv, 128, !dbg !4730
  %cmp = icmp ne i32 %and, 0, !dbg !4731
  %conv2 = zext i1 %cmp to i32, !dbg !4731
  ret i32 %conv2, !dbg !4732
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayer_use_fill_overlap_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4733 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4734, metadata !DIExpression()), !dbg !4735
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %data, metadata !4738, metadata !DIExpression()), !dbg !4739
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4740
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4741
  %1 = load i8*, i8** %data1, align 8, !dbg !4741
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !4742
  store %struct.MaskLayer* %2, %struct.MaskLayer** %data, align 8, !dbg !4739
  %3 = load i32, i32* %value.addr, align 4, !dbg !4743
  %tobool = icmp ne i32 %3, 0, !dbg !4743
  br i1 %tobool, label %if.then, label %if.else, !dbg !4745

if.then:                                          ; preds = %entry
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4746
  %flag = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 12, !dbg !4747
  %5 = load i8, i8* %flag, align 2, !dbg !4748
  %conv = zext i8 %5 to i32, !dbg !4748
  %or = or i32 %conv, 128, !dbg !4748
  %conv2 = trunc i32 %or to i8, !dbg !4748
  store i8 %conv2, i8* %flag, align 2, !dbg !4748
  br label %if.end, !dbg !4746

if.else:                                          ; preds = %entry
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %data, align 8, !dbg !4749
  %flag3 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %6, i32 0, i32 12, !dbg !4750
  %7 = load i8, i8* %flag3, align 2, !dbg !4751
  %conv4 = zext i8 %7 to i32, !dbg !4751
  %and = and i32 %conv4, -129, !dbg !4751
  %conv5 = trunc i32 %and to i8, !dbg !4751
  store i8 %conv5, i8* %flag3, align 2, !dbg !4751
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4752
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_layers_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4753 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4754, metadata !DIExpression()), !dbg !4755
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4758
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !4759
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !4759
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4760
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !4761
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4762
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !4763
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !4763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4763
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4764
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !4765
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_Mask_layers, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !4766
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4767
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4768
  call void @rna_Mask_layers_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !4769
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4770
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !4772
  %10 = load i32, i32* %valid, align 8, !dbg !4772
  %tobool = icmp ne i32 %10, 0, !dbg !4770
  br i1 %tobool, label %if.then, label %if.end, !dbg !4773

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4774
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !4775
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4776
  call void @Mask_layers_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !4777
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !4777
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4777
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !4777
  br label %if.end, !dbg !4774

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4778
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layers_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4779 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4780, metadata !DIExpression()), !dbg !4781
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4782, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4784, metadata !DIExpression()), !dbg !4785
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4786
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !4787
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !4788
  %1 = load i8*, i8** %data, align 8, !dbg !4788
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4789
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !4785
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4790
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4791
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 2, !dbg !4792
  call void @rna_iterator_listbase_begin(%struct.CollectionPropertyIterator* %3, %struct.ListBase* %masklayers, i32 (%struct.CollectionPropertyIterator*, i8*)* null), !dbg !4793
  ret void, !dbg !4794
}

; Function Attrs: noinline nounwind uwtable
define internal void @Mask_layers_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !4795 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4796, metadata !DIExpression()), !dbg !4797
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4798
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %0, i32 0, i32 0, !dbg !4799
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4800
  %call = call i8* @rna_iterator_listbase_get(%struct.CollectionPropertyIterator* %1), !dbg !4801
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %parent, %struct.StructRNA* @RNA_MaskLayer, i8* %call), !dbg !4802
  ret void, !dbg !4803
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_layers_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4804 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4807
  call void @rna_iterator_listbase_next(%struct.CollectionPropertyIterator* %0), !dbg !4808
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4809
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !4811
  %2 = load i32, i32* %valid, align 8, !dbg !4811
  %tobool = icmp ne i32 %2, 0, !dbg !4809
  br i1 %tobool, label %if.then, label %if.end, !dbg !4812

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4813
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !4814
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4815
  call void @Mask_layers_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !4816
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !4816
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !4816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !4816
  br label %if.end, !dbg !4813

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4817
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_layers_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !4818 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4819, metadata !DIExpression()), !dbg !4820
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4821
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !4822
  ret void, !dbg !4823
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Mask_active_layer_index_get(%struct.PointerRNA* %ptr) #0 !dbg !4824 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4827
  %call = call i32 @rna_Mask_layer_active_index_get(%struct.PointerRNA* %0), !dbg !4828
  ret i32 %call, !dbg !4829
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rna_Mask_layer_active_index_get(%struct.PointerRNA* %ptr) #0 !dbg !4830 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4833, metadata !DIExpression()), !dbg !4834
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4835
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !4836
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !4837
  %1 = load i8*, i8** %data, align 8, !dbg !4837
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4838
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !4834
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4839
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 3, !dbg !4840
  %4 = load i32, i32* %masklay_act, align 8, !dbg !4840
  ret i32 %4, !dbg !4841
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_active_layer_index_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4842 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4843, metadata !DIExpression()), !dbg !4844
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4847
  %1 = load i32, i32* %value.addr, align 4, !dbg !4848
  call void @rna_Mask_layer_active_index_set(%struct.PointerRNA* %0, i32 %1), !dbg !4849
  ret void, !dbg !4850
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layer_active_index_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4851 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %mask = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4852, metadata !DIExpression()), !dbg !4853
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4854, metadata !DIExpression()), !dbg !4855
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !4856, metadata !DIExpression()), !dbg !4857
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4858
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !4859
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !4860
  %1 = load i8*, i8** %data, align 8, !dbg !4860
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4861
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !4857
  %3 = load i32, i32* %value.addr, align 4, !dbg !4862
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !4863
  %masklay_act = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 3, !dbg !4864
  store i32 %3, i32* %masklay_act, align 8, !dbg !4865
  ret void, !dbg !4866
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Mask_frame_start_get(%struct.PointerRNA* %ptr) #0 !dbg !4867 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4868, metadata !DIExpression()), !dbg !4869
  call void @llvm.dbg.declare(metadata %struct.Mask** %data, metadata !4870, metadata !DIExpression()), !dbg !4871
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4872
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4873
  %1 = load i8*, i8** %data1, align 8, !dbg !4873
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4874
  store %struct.Mask* %2, %struct.Mask** %data, align 8, !dbg !4871
  %3 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4875
  %sfra = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 5, !dbg !4876
  %4 = load i32, i32* %sfra, align 8, !dbg !4876
  ret i32 %4, !dbg !4877
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_frame_start_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4878 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4881, metadata !DIExpression()), !dbg !4882
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4883
  %1 = load i32, i32* %value.addr, align 4, !dbg !4884
  call void @rna_Mask_start_frame_set(%struct.PointerRNA* %0, i32 %1), !dbg !4885
  ret void, !dbg !4886
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_start_frame_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4887 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4888, metadata !DIExpression()), !dbg !4889
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4890, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.declare(metadata %struct.Mask** %data, metadata !4892, metadata !DIExpression()), !dbg !4893
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4894
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4895
  %1 = load i8*, i8** %data1, align 8, !dbg !4895
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4896
  store %struct.Mask* %2, %struct.Mask** %data, align 8, !dbg !4893
  %3 = load i32, i32* %value.addr, align 4, !dbg !4897
  %cmp = icmp slt i32 %3, 0, !dbg !4897
  br i1 %cmp, label %if.then, label %if.else, !dbg !4900

if.then:                                          ; preds = %entry
  store i32 0, i32* %value.addr, align 4, !dbg !4897
  br label %if.end4, !dbg !4897

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %value.addr, align 4, !dbg !4901
  %cmp2 = icmp sgt i32 %4, 300000, !dbg !4901
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4897

if.then3:                                         ; preds = %if.else
  store i32 300000, i32* %value.addr, align 4, !dbg !4901
  br label %if.end, !dbg !4901

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* %value.addr, align 4, !dbg !4903
  %6 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4904
  %sfra = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 5, !dbg !4905
  store i32 %5, i32* %sfra, align 8, !dbg !4906
  %7 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4907
  %sfra5 = getelementptr inbounds %struct.Mask, %struct.Mask* %7, i32 0, i32 5, !dbg !4909
  %8 = load i32, i32* %sfra5, align 8, !dbg !4909
  %9 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4910
  %efra = getelementptr inbounds %struct.Mask, %struct.Mask* %9, i32 0, i32 6, !dbg !4911
  %10 = load i32, i32* %efra, align 4, !dbg !4911
  %cmp6 = icmp sge i32 %8, %10, !dbg !4912
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !4913

if.then7:                                         ; preds = %if.end4
  %11 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4914
  %sfra8 = getelementptr inbounds %struct.Mask, %struct.Mask* %11, i32 0, i32 5, !dbg !4914
  %12 = load i32, i32* %sfra8, align 8, !dbg !4914
  %cmp9 = icmp slt i32 %12, 300000, !dbg !4914
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !4914

cond.true:                                        ; preds = %if.then7
  %13 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4914
  %sfra10 = getelementptr inbounds %struct.Mask, %struct.Mask* %13, i32 0, i32 5, !dbg !4914
  %14 = load i32, i32* %sfra10, align 8, !dbg !4914
  br label %cond.end, !dbg !4914

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !4914

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 300000, %cond.false ], !dbg !4914
  %15 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4916
  %efra11 = getelementptr inbounds %struct.Mask, %struct.Mask* %15, i32 0, i32 6, !dbg !4917
  store i32 %cond, i32* %efra11, align 4, !dbg !4918
  br label %if.end12, !dbg !4919

if.end12:                                         ; preds = %cond.end, %if.end4
  ret void, !dbg !4920
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @Mask_frame_end_get(%struct.PointerRNA* %ptr) #0 !dbg !4921 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata %struct.Mask** %data, metadata !4924, metadata !DIExpression()), !dbg !4925
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4926
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4927
  %1 = load i8*, i8** %data1, align 8, !dbg !4927
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4928
  store %struct.Mask* %2, %struct.Mask** %data, align 8, !dbg !4925
  %3 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4929
  %efra = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 6, !dbg !4930
  %4 = load i32, i32* %efra, align 4, !dbg !4930
  ret i32 %4, !dbg !4931
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_frame_end_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4932 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4933, metadata !DIExpression()), !dbg !4934
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4935, metadata !DIExpression()), !dbg !4936
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4937
  %1 = load i32, i32* %value.addr, align 4, !dbg !4938
  call void @rna_Mask_end_frame_set(%struct.PointerRNA* %0, i32 %1), !dbg !4939
  ret void, !dbg !4940
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_end_frame_set(%struct.PointerRNA* %ptr, i32 %value) #0 !dbg !4941 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %value.addr = alloca i32, align 4
  %data = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4942, metadata !DIExpression()), !dbg !4943
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !4944, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.Mask** %data, metadata !4946, metadata !DIExpression()), !dbg !4947
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4948
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4949
  %1 = load i8*, i8** %data1, align 8, !dbg !4949
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4950
  store %struct.Mask* %2, %struct.Mask** %data, align 8, !dbg !4947
  %3 = load i32, i32* %value.addr, align 4, !dbg !4951
  %cmp = icmp slt i32 %3, 0, !dbg !4951
  br i1 %cmp, label %if.then, label %if.else, !dbg !4954

if.then:                                          ; preds = %entry
  store i32 0, i32* %value.addr, align 4, !dbg !4951
  br label %if.end4, !dbg !4951

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %value.addr, align 4, !dbg !4955
  %cmp2 = icmp sgt i32 %4, 300000, !dbg !4955
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !4951

if.then3:                                         ; preds = %if.else
  store i32 300000, i32* %value.addr, align 4, !dbg !4955
  br label %if.end, !dbg !4955

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %5 = load i32, i32* %value.addr, align 4, !dbg !4957
  %6 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4958
  %efra = getelementptr inbounds %struct.Mask, %struct.Mask* %6, i32 0, i32 6, !dbg !4959
  store i32 %5, i32* %efra, align 4, !dbg !4960
  %7 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4961
  %sfra = getelementptr inbounds %struct.Mask, %struct.Mask* %7, i32 0, i32 5, !dbg !4963
  %8 = load i32, i32* %sfra, align 8, !dbg !4963
  %9 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4964
  %efra5 = getelementptr inbounds %struct.Mask, %struct.Mask* %9, i32 0, i32 6, !dbg !4965
  %10 = load i32, i32* %efra5, align 4, !dbg !4965
  %cmp6 = icmp sge i32 %8, %10, !dbg !4966
  br i1 %cmp6, label %if.then7, label %if.end12, !dbg !4967

if.then7:                                         ; preds = %if.end4
  %11 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4968
  %efra8 = getelementptr inbounds %struct.Mask, %struct.Mask* %11, i32 0, i32 6, !dbg !4968
  %12 = load i32, i32* %efra8, align 4, !dbg !4968
  %cmp9 = icmp sgt i32 %12, 0, !dbg !4968
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !4968

cond.true:                                        ; preds = %if.then7
  %13 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4968
  %efra10 = getelementptr inbounds %struct.Mask, %struct.Mask* %13, i32 0, i32 6, !dbg !4968
  %14 = load i32, i32* %efra10, align 4, !dbg !4968
  br label %cond.end, !dbg !4968

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !4968

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %cond.false ], !dbg !4968
  %15 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4970
  %sfra11 = getelementptr inbounds %struct.Mask, %struct.Mask* %15, i32 0, i32 5, !dbg !4971
  store i32 %cond, i32* %sfra11, align 8, !dbg !4972
  br label %if.end12, !dbg !4973

if.end12:                                         ; preds = %cond.end, %if.end4
  ret void, !dbg !4974
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Mask_animation_data_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !4975 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %data = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4976, metadata !DIExpression()), !dbg !4977
  call void @llvm.dbg.declare(metadata %struct.Mask** %data, metadata !4978, metadata !DIExpression()), !dbg !4979
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4980
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4981
  %1 = load i8*, i8** %data1, align 8, !dbg !4981
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !4982
  store %struct.Mask* %2, %struct.Mask** %data, align 8, !dbg !4979
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4983
  %4 = load %struct.Mask*, %struct.Mask** %data, align 8, !dbg !4984
  %adt = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 1, !dbg !4985
  %5 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !4985
  %6 = bitcast %struct.AnimData* %5 to i8*, !dbg !4984
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %3, %struct.StructRNA* @RNA_AnimData, i8* %6), !dbg !4986
  ret void, !dbg !4987
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_rna_properties_begin(%struct.CollectionPropertyIterator* %iter, %struct.PointerRNA* %ptr) #0 !dbg !4988 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !4989, metadata !DIExpression()), !dbg !4990
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4991, metadata !DIExpression()), !dbg !4992
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4993
  %1 = bitcast %struct.CollectionPropertyIterator* %0 to i8*, !dbg !4994
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 136, i1 false), !dbg !4994
  %2 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4995
  %parent = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %2, i32 0, i32 0, !dbg !4996
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4997
  %4 = bitcast %struct.PointerRNA* %parent to i8*, !dbg !4998
  %5 = bitcast %struct.PointerRNA* %3 to i8*, !dbg !4998
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !4998
  %6 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !4999
  %prop = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %6, i32 0, i32 2, !dbg !5000
  store %struct.PropertyRNA* getelementptr inbounds (%struct.CollectionPropertyRNA, %struct.CollectionPropertyRNA* @rna_MaskLayers_rna_properties, i32 0, i32 0), %struct.PropertyRNA** %prop, align 8, !dbg !5001
  %7 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5002
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5003
  call void @rna_builtin_properties_begin(%struct.CollectionPropertyIterator* %7, %struct.PointerRNA* %8), !dbg !5004
  %9 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5005
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %9, i32 0, i32 7, !dbg !5007
  %10 = load i32, i32* %valid, align 8, !dbg !5007
  %tobool = icmp ne i32 %10, 0, !dbg !5005
  br i1 %tobool, label %if.then, label %if.end, !dbg !5008

if.then:                                          ; preds = %entry
  %11 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5009
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %11, i32 0, i32 6, !dbg !5010
  %12 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5011
  call void @MaskLayers_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %12), !dbg !5012
  %13 = bitcast %struct.PointerRNA* %ptr1 to i8*, !dbg !5012
  %14 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !5012
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false), !dbg !5012
  br label %if.end, !dbg !5009

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5013
}

; Function Attrs: noinline nounwind uwtable
define internal void @MaskLayers_rna_properties_get(%struct.PointerRNA* noalias sret %agg.result, %struct.CollectionPropertyIterator* %iter) #0 !dbg !5014 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5017
  call void @rna_builtin_properties_get(%struct.PointerRNA* sret %agg.result, %struct.CollectionPropertyIterator* %0), !dbg !5018
  ret void, !dbg !5019
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_rna_properties_next(%struct.CollectionPropertyIterator* %iter) #0 !dbg !5020 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !5021, metadata !DIExpression()), !dbg !5022
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5023
  call void @rna_builtin_properties_next(%struct.CollectionPropertyIterator* %0), !dbg !5024
  %1 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5025
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %1, i32 0, i32 7, !dbg !5027
  %2 = load i32, i32* %valid, align 8, !dbg !5027
  %tobool = icmp ne i32 %2, 0, !dbg !5025
  br i1 %tobool, label %if.then, label %if.end, !dbg !5028

if.then:                                          ; preds = %entry
  %3 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5029
  %ptr = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %3, i32 0, i32 6, !dbg !5030
  %4 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5031
  call void @MaskLayers_rna_properties_get(%struct.PointerRNA* sret %tmp, %struct.CollectionPropertyIterator* %4), !dbg !5032
  %5 = bitcast %struct.PointerRNA* %ptr to i8*, !dbg !5032
  %6 = bitcast %struct.PointerRNA* %tmp to i8*, !dbg !5032
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !5032
  br label %if.end, !dbg !5029

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5033
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_rna_properties_end(%struct.CollectionPropertyIterator* %iter) #0 !dbg !5034 {
entry:
  %iter.addr = alloca %struct.CollectionPropertyIterator*, align 8
  store %struct.CollectionPropertyIterator* %iter, %struct.CollectionPropertyIterator** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator** %iter.addr, metadata !5035, metadata !DIExpression()), !dbg !5036
  %0 = load %struct.CollectionPropertyIterator*, %struct.CollectionPropertyIterator** %iter.addr, align 8, !dbg !5037
  call void @rna_iterator_listbase_end(%struct.CollectionPropertyIterator* %0), !dbg !5038
  ret void, !dbg !5039
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MaskLayers_rna_properties_lookup_string(%struct.PointerRNA* %ptr, i8* %key, %struct.PointerRNA* %r_ptr) #0 !dbg !5040 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %key.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5047
  %1 = load i8*, i8** %key.addr, align 8, !dbg !5048
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !5049
  %call = call i32 @rna_builtin_properties_lookup_string(%struct.PointerRNA* %0, i8* %1, %struct.PointerRNA* %2), !dbg !5050
  ret i32 %call, !dbg !5051
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_rna_type_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !5052 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5055
  call void @rna_builtin_type_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !5056
  ret void, !dbg !5057
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_active_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !5058 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5061
  call void @rna_Mask_layer_active_get(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %0), !dbg !5062
  ret void, !dbg !5063
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layer_active_get(%struct.PointerRNA* noalias sret %agg.result, %struct.PointerRNA* %ptr) #0 !dbg !5064 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5065, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5067, metadata !DIExpression()), !dbg !5068
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5069
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5070
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5071
  %1 = load i8*, i8** %data, align 8, !dbg !5071
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !5072
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !5068
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5073, metadata !DIExpression()), !dbg !5074
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5075
  %call = call %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask* %3), !dbg !5076
  store %struct.MaskLayer* %call, %struct.MaskLayer** %masklay, align 8, !dbg !5074
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5077
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5078
  %6 = bitcast %struct.MaskLayer* %5 to i8*, !dbg !5078
  call void @rna_pointer_inherit_refine(%struct.PointerRNA* sret %agg.result, %struct.PointerRNA* %4, %struct.StructRNA* @RNA_MaskLayer, i8* %6), !dbg !5079
  ret void, !dbg !5080
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_active_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !5081 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5082, metadata !DIExpression()), !dbg !5083
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !5084, metadata !DIExpression()), !dbg !5085
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5086
  call void @rna_Mask_layer_active_set(%struct.PointerRNA* %0, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value), !dbg !5087
  ret void, !dbg !5088
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layer_active_set(%struct.PointerRNA* %ptr, %struct.PointerRNA* byval(%struct.PointerRNA) align 8 %value) #0 !dbg !5089 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %value, metadata !5092, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5094, metadata !DIExpression()), !dbg !5095
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5096
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5097
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5098
  %1 = load i8*, i8** %data, align 8, !dbg !5098
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !5099
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !5095
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5100, metadata !DIExpression()), !dbg !5101
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %value, i32 0, i32 2, !dbg !5102
  %3 = load i8*, i8** %data1, align 8, !dbg !5102
  %4 = bitcast i8* %3 to %struct.MaskLayer*, !dbg !5103
  store %struct.MaskLayer* %4, %struct.MaskLayer** %masklay, align 8, !dbg !5101
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5104
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5105
  call void @BKE_mask_layer_active_set(%struct.Mask* %5, %struct.MaskLayer* %6), !dbg !5106
  ret void, !dbg !5107
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskSpline* @MaskSplines_new(%struct.ID* %_selfid, %struct.MaskLayer* %_self) #0 !dbg !5108 {
entry:
  %_selfid.addr = alloca %struct.ID*, align 8
  %_self.addr = alloca %struct.MaskLayer*, align 8
  store %struct.ID* %_selfid, %struct.ID** %_selfid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid.addr, metadata !5111, metadata !DIExpression()), !dbg !5112
  store %struct.MaskLayer* %_self, %struct.MaskLayer** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %_self.addr, metadata !5113, metadata !DIExpression()), !dbg !5114
  %0 = load %struct.ID*, %struct.ID** %_selfid.addr, align 8, !dbg !5115
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %_self.addr, align 8, !dbg !5116
  %call = call %struct.MaskSpline* @rna_MaskLayer_spline_new(%struct.ID* %0, %struct.MaskLayer* %1), !dbg !5117
  ret %struct.MaskSpline* %call, !dbg !5118
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskSpline* @rna_MaskLayer_spline_new(%struct.ID* %id, %struct.MaskLayer* %mask_layer) #0 !dbg !5119 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %mask = alloca %struct.Mask*, align 8
  %new_spline = alloca %struct.MaskSpline*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5126, metadata !DIExpression()), !dbg !5127
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5128
  %1 = bitcast %struct.ID* %0 to %struct.Mask*, !dbg !5129
  store %struct.Mask* %1, %struct.Mask** %mask, align 8, !dbg !5127
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %new_spline, metadata !5130, metadata !DIExpression()), !dbg !5131
  %2 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !5132
  %call = call %struct.MaskSpline* @BKE_mask_spline_add(%struct.MaskLayer* %2), !dbg !5133
  store %struct.MaskSpline* %call, %struct.MaskSpline** %new_spline, align 8, !dbg !5134
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5135
  %4 = bitcast %struct.Mask* %3 to i8*, !dbg !5135
  call void @WM_main_add_notifier(i32 352321537, i8* %4), !dbg !5136
  %5 = load %struct.MaskSpline*, %struct.MaskSpline** %new_spline, align 8, !dbg !5137
  ret %struct.MaskSpline* %5, !dbg !5138
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_new_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5139 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_selfid = alloca %struct.ID*, align 8
  %_self = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  %_data = alloca i8*, align 8
  %_retdata = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5146, metadata !DIExpression()), !dbg !5147
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid, metadata !5154, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %_self, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5158, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5160, metadata !DIExpression()), !dbg !5161
  call void @llvm.dbg.declare(metadata i8** %_retdata, metadata !5162, metadata !DIExpression()), !dbg !5163
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5164
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5165
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5166
  %1 = load i8*, i8** %data, align 8, !dbg !5166
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !5167
  store %struct.ID* %2, %struct.ID** %_selfid, align 8, !dbg !5168
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5169
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !5170
  %4 = load i8*, i8** %data1, align 8, !dbg !5170
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !5171
  store %struct.MaskLayer* %5, %struct.MaskLayer** %_self, align 8, !dbg !5172
  %6 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5173
  %data2 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %6, i32 0, i32 0, !dbg !5174
  %7 = load i8*, i8** %data2, align 8, !dbg !5174
  store i8* %7, i8** %_data, align 8, !dbg !5175
  %8 = load i8*, i8** %_data, align 8, !dbg !5176
  store i8* %8, i8** %_retdata, align 8, !dbg !5177
  %9 = load %struct.ID*, %struct.ID** %_selfid, align 8, !dbg !5178
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %_self, align 8, !dbg !5179
  %call = call %struct.MaskSpline* @rna_MaskLayer_spline_new(%struct.ID* %9, %struct.MaskLayer* %10), !dbg !5180
  store %struct.MaskSpline* %call, %struct.MaskSpline** %spline, align 8, !dbg !5181
  %11 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5182
  %12 = load i8*, i8** %_retdata, align 8, !dbg !5183
  %13 = bitcast i8* %12 to %struct.MaskSpline**, !dbg !5184
  store %struct.MaskSpline* %11, %struct.MaskSpline** %13, align 8, !dbg !5185
  ret void, !dbg !5186
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_remove(%struct.ID* %_selfid, %struct.MaskLayer* %_self, %struct.ReportList* %reports, %struct.PointerRNA* %spline) #0 !dbg !5187 {
entry:
  %_selfid.addr = alloca %struct.ID*, align 8
  %_self.addr = alloca %struct.MaskLayer*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %spline.addr = alloca %struct.PointerRNA*, align 8
  store %struct.ID* %_selfid, %struct.ID** %_selfid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid.addr, metadata !5190, metadata !DIExpression()), !dbg !5191
  store %struct.MaskLayer* %_self, %struct.MaskLayer** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %_self.addr, metadata !5192, metadata !DIExpression()), !dbg !5193
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5194, metadata !DIExpression()), !dbg !5195
  store %struct.PointerRNA* %spline, %struct.PointerRNA** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %spline.addr, metadata !5196, metadata !DIExpression()), !dbg !5197
  %0 = load %struct.ID*, %struct.ID** %_selfid.addr, align 8, !dbg !5198
  %1 = load %struct.MaskLayer*, %struct.MaskLayer** %_self.addr, align 8, !dbg !5199
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5200
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %spline.addr, align 8, !dbg !5201
  call void @rna_MaskLayer_spline_remove(%struct.ID* %0, %struct.MaskLayer* %1, %struct.ReportList* %2, %struct.PointerRNA* %3), !dbg !5202
  ret void, !dbg !5203
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskLayer_spline_remove(%struct.ID* %id, %struct.MaskLayer* %mask_layer, %struct.ReportList* %reports, %struct.PointerRNA* %spline_ptr) #0 !dbg !5204 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %mask_layer.addr = alloca %struct.MaskLayer*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %spline_ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5207, metadata !DIExpression()), !dbg !5208
  store %struct.MaskLayer* %mask_layer, %struct.MaskLayer** %mask_layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  store %struct.PointerRNA* %spline_ptr, %struct.PointerRNA** %spline_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %spline_ptr.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5215, metadata !DIExpression()), !dbg !5216
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5217
  %1 = bitcast %struct.ID* %0 to %struct.Mask*, !dbg !5218
  store %struct.Mask* %1, %struct.Mask** %mask, align 8, !dbg !5216
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !5219, metadata !DIExpression()), !dbg !5220
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %spline_ptr.addr, align 8, !dbg !5221
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 2, !dbg !5222
  %3 = load i8*, i8** %data, align 8, !dbg !5222
  %4 = bitcast i8* %3 to %struct.MaskSpline*, !dbg !5221
  store %struct.MaskSpline* %4, %struct.MaskSpline** %spline, align 8, !dbg !5220
  %5 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !5223
  %6 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !5225
  %call = call zeroext i8 @BKE_mask_spline_remove(%struct.MaskLayer* %5, %struct.MaskSpline* %6), !dbg !5226
  %conv = zext i8 %call to i32, !dbg !5226
  %cmp = icmp eq i32 %conv, 0, !dbg !5227
  br i1 %cmp, label %if.then, label %if.end, !dbg !5228

if.then:                                          ; preds = %entry
  %7 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5229
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer.addr, align 8, !dbg !5231
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %8, i32 0, i32 2, !dbg !5232
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5231
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %7, i32 32, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.174, i64 0, i64 0), i8* %arraydecay), !dbg !5233
  br label %return, !dbg !5234

if.end:                                           ; preds = %entry
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %spline_ptr.addr, align 8, !dbg !5235
  %id2 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %9, i32 0, i32 0, !dbg !5235
  %data3 = getelementptr inbounds %struct.anon, %struct.anon* %id2, i32 0, i32 0, !dbg !5235
  store i8* null, i8** %data3, align 8, !dbg !5235
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %spline_ptr.addr, align 8, !dbg !5235
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 1, !dbg !5235
  store %struct.StructRNA* null, %struct.StructRNA** %type, align 8, !dbg !5235
  %11 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5237
  %id4 = getelementptr inbounds %struct.Mask, %struct.Mask* %11, i32 0, i32 0, !dbg !5238
  call void @DAG_id_tag_update(%struct.ID* %id4, i16 signext 2), !dbg !5239
  br label %return, !dbg !5240

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5240
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplines_remove_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5241 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_selfid = alloca %struct.ID*, align 8
  %_self = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.PointerRNA*, align 8
  %_data = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5242, metadata !DIExpression()), !dbg !5243
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5244, metadata !DIExpression()), !dbg !5245
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5246, metadata !DIExpression()), !dbg !5247
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %_self, metadata !5252, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %spline, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5256, metadata !DIExpression()), !dbg !5257
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5258
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5259
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5260
  %1 = load i8*, i8** %data, align 8, !dbg !5260
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !5261
  store %struct.ID* %2, %struct.ID** %_selfid, align 8, !dbg !5262
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5263
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !5264
  %4 = load i8*, i8** %data1, align 8, !dbg !5264
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !5265
  store %struct.MaskLayer* %5, %struct.MaskLayer** %_self, align 8, !dbg !5266
  %6 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5267
  %data2 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %6, i32 0, i32 0, !dbg !5268
  %7 = load i8*, i8** %data2, align 8, !dbg !5268
  store i8* %7, i8** %_data, align 8, !dbg !5269
  %8 = load i8*, i8** %_data, align 8, !dbg !5270
  %9 = bitcast i8* %8 to %struct.PointerRNA**, !dbg !5271
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %9, align 8, !dbg !5271
  store %struct.PointerRNA* %10, %struct.PointerRNA** %spline, align 8, !dbg !5272
  %11 = load %struct.ID*, %struct.ID** %_selfid, align 8, !dbg !5273
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %_self, align 8, !dbg !5274
  %13 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5275
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %spline, align 8, !dbg !5276
  call void @rna_MaskLayer_spline_remove(%struct.ID* %11, %struct.MaskLayer* %12, %struct.ReportList* %13, %struct.PointerRNA* %14), !dbg !5277
  ret void, !dbg !5278
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_add(%struct.ID* %_selfid, %struct.MaskSpline* %_self, i32 %count) #0 !dbg !5279 {
entry:
  %_selfid.addr = alloca %struct.ID*, align 8
  %_self.addr = alloca %struct.MaskSpline*, align 8
  %count.addr = alloca i32, align 4
  store %struct.ID* %_selfid, %struct.ID** %_selfid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid.addr, metadata !5282, metadata !DIExpression()), !dbg !5283
  store %struct.MaskSpline* %_self, %struct.MaskSpline** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %_self.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5286, metadata !DIExpression()), !dbg !5287
  %0 = load %struct.ID*, %struct.ID** %_selfid.addr, align 8, !dbg !5288
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %_self.addr, align 8, !dbg !5289
  %2 = load i32, i32* %count.addr, align 4, !dbg !5290
  call void @rna_MaskSpline_points_add(%struct.ID* %0, %struct.MaskSpline* %1, i32 %2), !dbg !5291
  ret void, !dbg !5292
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSpline_points_add(%struct.ID* %id, %struct.MaskSpline* %spline, i32 %count) #0 !dbg !5293 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %count.addr = alloca i32, align 4
  %mask = alloca %struct.Mask*, align 8
  %layer = alloca %struct.MaskLayer*, align 8
  %active_point_index = alloca i32, align 4
  %i = alloca i32, align 4
  %spline_shape_index = alloca i32, align 4
  %point_index = alloca i32, align 4
  %new_point = alloca %struct.MaskSplinePoint*, align 8
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5296, metadata !DIExpression()), !dbg !5297
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !5298, metadata !DIExpression()), !dbg !5299
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5300, metadata !DIExpression()), !dbg !5301
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5302, metadata !DIExpression()), !dbg !5303
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5304
  %1 = bitcast %struct.ID* %0 to %struct.Mask*, !dbg !5305
  store %struct.Mask* %1, %struct.Mask** %mask, align 8, !dbg !5303
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %layer, metadata !5306, metadata !DIExpression()), !dbg !5307
  call void @llvm.dbg.declare(metadata i32* %active_point_index, metadata !5308, metadata !DIExpression()), !dbg !5309
  store i32 -1, i32* %active_point_index, align 4, !dbg !5309
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5310, metadata !DIExpression()), !dbg !5311
  call void @llvm.dbg.declare(metadata i32* %spline_shape_index, metadata !5312, metadata !DIExpression()), !dbg !5313
  %2 = load i32, i32* %count.addr, align 4, !dbg !5314
  %cmp = icmp sle i32 %2, 0, !dbg !5316
  br i1 %cmp, label %if.then, label %if.end, !dbg !5317

if.then:                                          ; preds = %entry
  br label %return, !dbg !5318

if.end:                                           ; preds = %entry
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5320
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 2, !dbg !5322
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5323
  %4 = load i8*, i8** %first, align 8, !dbg !5323
  %5 = bitcast i8* %4 to %struct.MaskLayer*, !dbg !5320
  store %struct.MaskLayer* %5, %struct.MaskLayer** %layer, align 8, !dbg !5324
  br label %for.cond, !dbg !5325

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5326
  %tobool = icmp ne %struct.MaskLayer* %6, null, !dbg !5328
  br i1 %tobool, label %for.body, label %for.end, !dbg !5328

for.body:                                         ; preds = %for.cond
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5329
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 3, !dbg !5332
  %8 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5333
  %9 = bitcast %struct.MaskSpline* %8 to i8*, !dbg !5333
  %call = call i32 @BLI_findindex(%struct.ListBase* %splines, i8* %9), !dbg !5334
  %cmp1 = icmp ne i32 %call, -1, !dbg !5335
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !5336

if.then2:                                         ; preds = %for.body
  br label %for.end, !dbg !5337

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !5339

for.inc:                                          ; preds = %if.end3
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5340
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %10, i32 0, i32 0, !dbg !5341
  %11 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !5341
  store %struct.MaskLayer* %11, %struct.MaskLayer** %layer, align 8, !dbg !5342
  br label %for.cond, !dbg !5343, !llvm.loop !5344

for.end:                                          ; preds = %if.then2, %for.cond
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5346
  %tobool4 = icmp ne %struct.MaskLayer* %12, null, !dbg !5346
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5348

if.then5:                                         ; preds = %for.end
  br label %return, !dbg !5349

if.end6:                                          ; preds = %for.end
  %13 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5351
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %13, i32 0, i32 5, !dbg !5353
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %act_spline, align 8, !dbg !5353
  %15 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5354
  %cmp7 = icmp eq %struct.MaskSpline* %14, %15, !dbg !5355
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5356

if.then8:                                         ; preds = %if.end6
  %16 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5357
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %16, i32 0, i32 6, !dbg !5359
  %17 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %act_point, align 8, !dbg !5359
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5360
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %18, i32 0, i32 6, !dbg !5361
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5361
  %sub.ptr.lhs.cast = ptrtoint %struct.MaskSplinePoint* %17 to i64, !dbg !5362
  %sub.ptr.rhs.cast = ptrtoint %struct.MaskSplinePoint* %19 to i64, !dbg !5362
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5362
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 272, !dbg !5362
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !5357
  store i32 %conv, i32* %active_point_index, align 4, !dbg !5363
  br label %if.end9, !dbg !5364

if.end9:                                          ; preds = %if.then8, %if.end6
  %20 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_recallocN_id, align 8, !dbg !5365
  %21 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5365
  %points10 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %21, i32 0, i32 6, !dbg !5365
  %22 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points10, align 8, !dbg !5365
  %23 = bitcast %struct.MaskSplinePoint* %22 to i8*, !dbg !5365
  %24 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5365
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %24, i32 0, i32 5, !dbg !5365
  %25 = load i32, i32* %tot_point, align 4, !dbg !5365
  %26 = load i32, i32* %count.addr, align 4, !dbg !5365
  %add = add nsw i32 %25, %26, !dbg !5365
  %conv11 = sext i32 %add to i64, !dbg !5365
  %mul = mul i64 272, %conv11, !dbg !5365
  %call12 = call i8* %20(i8* %23, i64 %mul, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.rna_MaskSpline_points_add, i64 0, i64 0)), !dbg !5365
  %27 = bitcast i8* %call12 to %struct.MaskSplinePoint*, !dbg !5365
  %28 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5366
  %points13 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %28, i32 0, i32 6, !dbg !5367
  store %struct.MaskSplinePoint* %27, %struct.MaskSplinePoint** %points13, align 8, !dbg !5368
  %29 = load i32, i32* %count.addr, align 4, !dbg !5369
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5370
  %tot_point14 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %30, i32 0, i32 5, !dbg !5371
  %31 = load i32, i32* %tot_point14, align 4, !dbg !5372
  %add15 = add nsw i32 %31, %29, !dbg !5372
  store i32 %add15, i32* %tot_point14, align 4, !dbg !5372
  %32 = load i32, i32* %active_point_index, align 4, !dbg !5373
  %cmp16 = icmp sge i32 %32, 0, !dbg !5375
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !5376

if.then18:                                        ; preds = %if.end9
  %33 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5377
  %points19 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %33, i32 0, i32 6, !dbg !5379
  %34 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points19, align 8, !dbg !5379
  %35 = load i32, i32* %active_point_index, align 4, !dbg !5380
  %idx.ext = sext i32 %35 to i64, !dbg !5381
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %34, i64 %idx.ext, !dbg !5381
  %36 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5382
  %act_point20 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %36, i32 0, i32 6, !dbg !5383
  store %struct.MaskSplinePoint* %add.ptr, %struct.MaskSplinePoint** %act_point20, align 8, !dbg !5384
  br label %if.end21, !dbg !5385

if.end21:                                         ; preds = %if.then18, %if.end9
  %37 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5386
  %38 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5387
  %call22 = call i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer* %37, %struct.MaskSpline* %38), !dbg !5388
  store i32 %call22, i32* %spline_shape_index, align 4, !dbg !5389
  store i32 0, i32* %i, align 4, !dbg !5390
  br label %for.cond23, !dbg !5392

for.cond23:                                       ; preds = %for.inc34, %if.end21
  %39 = load i32, i32* %i, align 4, !dbg !5393
  %40 = load i32, i32* %count.addr, align 4, !dbg !5395
  %cmp24 = icmp slt i32 %39, %40, !dbg !5396
  br i1 %cmp24, label %for.body26, label %for.end35, !dbg !5397

for.body26:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata i32* %point_index, metadata !5398, metadata !DIExpression()), !dbg !5400
  %41 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5401
  %tot_point27 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %41, i32 0, i32 5, !dbg !5402
  %42 = load i32, i32* %tot_point27, align 4, !dbg !5402
  %43 = load i32, i32* %count.addr, align 4, !dbg !5403
  %sub = sub nsw i32 %42, %43, !dbg !5404
  %44 = load i32, i32* %i, align 4, !dbg !5405
  %add28 = add nsw i32 %sub, %44, !dbg !5406
  store i32 %add28, i32* %point_index, align 4, !dbg !5400
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %new_point, metadata !5407, metadata !DIExpression()), !dbg !5408
  %45 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5409
  %points29 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %45, i32 0, i32 6, !dbg !5410
  %46 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points29, align 8, !dbg !5410
  %47 = load i32, i32* %point_index, align 4, !dbg !5411
  %idx.ext30 = sext i32 %47 to i64, !dbg !5412
  %add.ptr31 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %46, i64 %idx.ext30, !dbg !5412
  store %struct.MaskSplinePoint* %add.ptr31, %struct.MaskSplinePoint** %new_point, align 8, !dbg !5408
  %48 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !5413
  %bezt = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %48, i32 0, i32 0, !dbg !5414
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt, i32 0, i32 6, !dbg !5415
  store i8 3, i8* %h2, align 2, !dbg !5416
  %49 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !5417
  %bezt32 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %49, i32 0, i32 0, !dbg !5418
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %bezt32, i32 0, i32 5, !dbg !5419
  store i8 3, i8* %h1, align 1, !dbg !5420
  %50 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5421
  %51 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !5422
  call void @BKE_mask_calc_handle_point_auto(%struct.MaskSpline* %50, %struct.MaskSplinePoint* %51, i8 zeroext 1), !dbg !5423
  %52 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point, align 8, !dbg !5424
  %parent = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %52, i32 0, i32 4, !dbg !5425
  call void @BKE_mask_parent_init(%struct.MaskParent* %parent), !dbg !5426
  %53 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5427
  %54 = load i32, i32* %spline_shape_index, align 4, !dbg !5428
  %55 = load i32, i32* %point_index, align 4, !dbg !5429
  %add33 = add nsw i32 %54, %55, !dbg !5430
  call void @BKE_mask_layer_shape_changed_add(%struct.MaskLayer* %53, i32 %add33, i8 zeroext 1, i8 zeroext 1), !dbg !5431
  br label %for.inc34, !dbg !5432

for.inc34:                                        ; preds = %for.body26
  %56 = load i32, i32* %i, align 4, !dbg !5433
  %inc = add nsw i32 %56, 1, !dbg !5433
  store i32 %inc, i32* %i, align 4, !dbg !5433
  br label %for.cond23, !dbg !5434, !llvm.loop !5435

for.end35:                                        ; preds = %for.cond23
  %57 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5437
  %58 = bitcast %struct.Mask* %57 to i8*, !dbg !5437
  call void @WM_main_add_notifier(i32 358285312, i8* %58), !dbg !5438
  %59 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5439
  %id36 = getelementptr inbounds %struct.Mask, %struct.Mask* %59, i32 0, i32 0, !dbg !5440
  call void @DAG_id_tag_update(%struct.ID* %id36, i16 signext 0), !dbg !5441
  br label %return, !dbg !5442

return:                                           ; preds = %for.end35, %if.then5, %if.then
  ret void, !dbg !5442
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_add_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5443 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_selfid = alloca %struct.ID*, align 8
  %_self = alloca %struct.MaskSpline*, align 8
  %count = alloca i32, align 4
  %_data = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5446, metadata !DIExpression()), !dbg !5447
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5448, metadata !DIExpression()), !dbg !5449
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5450, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid, metadata !5452, metadata !DIExpression()), !dbg !5453
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %_self, metadata !5454, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5456, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5458, metadata !DIExpression()), !dbg !5459
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5460
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5461
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5462
  %1 = load i8*, i8** %data, align 8, !dbg !5462
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !5463
  store %struct.ID* %2, %struct.ID** %_selfid, align 8, !dbg !5464
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5465
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !5466
  %4 = load i8*, i8** %data1, align 8, !dbg !5466
  %5 = bitcast i8* %4 to %struct.MaskSpline*, !dbg !5467
  store %struct.MaskSpline* %5, %struct.MaskSpline** %_self, align 8, !dbg !5468
  %6 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5469
  %data2 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %6, i32 0, i32 0, !dbg !5470
  %7 = load i8*, i8** %data2, align 8, !dbg !5470
  store i8* %7, i8** %_data, align 8, !dbg !5471
  %8 = load i8*, i8** %_data, align 8, !dbg !5472
  %9 = bitcast i8* %8 to i32*, !dbg !5473
  %10 = load i32, i32* %9, align 4, !dbg !5473
  store i32 %10, i32* %count, align 4, !dbg !5474
  %11 = load %struct.ID*, %struct.ID** %_selfid, align 8, !dbg !5475
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %_self, align 8, !dbg !5476
  %13 = load i32, i32* %count, align 4, !dbg !5477
  call void @rna_MaskSpline_points_add(%struct.ID* %11, %struct.MaskSpline* %12, i32 %13), !dbg !5478
  ret void, !dbg !5479
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_remove(%struct.ID* %_selfid, %struct.MaskSpline* %_self, %struct.ReportList* %reports, %struct.PointerRNA* %point) #0 !dbg !5480 {
entry:
  %_selfid.addr = alloca %struct.ID*, align 8
  %_self.addr = alloca %struct.MaskSpline*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %point.addr = alloca %struct.PointerRNA*, align 8
  store %struct.ID* %_selfid, %struct.ID** %_selfid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store %struct.MaskSpline* %_self, %struct.MaskSpline** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %_self.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5487, metadata !DIExpression()), !dbg !5488
  store %struct.PointerRNA* %point, %struct.PointerRNA** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %point.addr, metadata !5489, metadata !DIExpression()), !dbg !5490
  %0 = load %struct.ID*, %struct.ID** %_selfid.addr, align 8, !dbg !5491
  %1 = load %struct.MaskSpline*, %struct.MaskSpline** %_self.addr, align 8, !dbg !5492
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5493
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %point.addr, align 8, !dbg !5494
  call void @rna_MaskSpline_point_remove(%struct.ID* %0, %struct.MaskSpline* %1, %struct.ReportList* %2, %struct.PointerRNA* %3), !dbg !5495
  ret void, !dbg !5496
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_MaskSpline_point_remove(%struct.ID* %id, %struct.MaskSpline* %spline, %struct.ReportList* %reports, %struct.PointerRNA* %point_ptr) #0 !dbg !5497 {
entry:
  %id.addr = alloca %struct.ID*, align 8
  %spline.addr = alloca %struct.MaskSpline*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %point_ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  %point = alloca %struct.MaskSplinePoint*, align 8
  %new_point_array = alloca %struct.MaskSplinePoint*, align 8
  %layer = alloca %struct.MaskLayer*, align 8
  %active_point_index = alloca i32, align 4
  %point_index = alloca i32, align 4
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !5500, metadata !DIExpression()), !dbg !5501
  store %struct.MaskSpline* %spline, %struct.MaskSpline** %spline.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline.addr, metadata !5502, metadata !DIExpression()), !dbg !5503
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5504, metadata !DIExpression()), !dbg !5505
  store %struct.PointerRNA* %point_ptr, %struct.PointerRNA** %point_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %point_ptr.addr, metadata !5506, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !5508, metadata !DIExpression()), !dbg !5509
  %0 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !5510
  %1 = bitcast %struct.ID* %0 to %struct.Mask*, !dbg !5511
  store %struct.Mask* %1, %struct.Mask** %mask, align 8, !dbg !5509
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point, metadata !5512, metadata !DIExpression()), !dbg !5513
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %point_ptr.addr, align 8, !dbg !5514
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 2, !dbg !5515
  %3 = load i8*, i8** %data, align 8, !dbg !5515
  %4 = bitcast i8* %3 to %struct.MaskSplinePoint*, !dbg !5514
  store %struct.MaskSplinePoint* %4, %struct.MaskSplinePoint** %point, align 8, !dbg !5513
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %new_point_array, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %layer, metadata !5518, metadata !DIExpression()), !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %active_point_index, metadata !5520, metadata !DIExpression()), !dbg !5521
  store i32 -1, i32* %active_point_index, align 4, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %point_index, metadata !5522, metadata !DIExpression()), !dbg !5523
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5524
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %5, i32 0, i32 2, !dbg !5526
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !5527
  %6 = load i8*, i8** %first, align 8, !dbg !5527
  %7 = bitcast i8* %6 to %struct.MaskLayer*, !dbg !5524
  store %struct.MaskLayer* %7, %struct.MaskLayer** %layer, align 8, !dbg !5528
  br label %for.cond, !dbg !5529

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5530
  %tobool = icmp ne %struct.MaskLayer* %8, null, !dbg !5532
  br i1 %tobool, label %for.body, label %for.end, !dbg !5532

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5533
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %9, i32 0, i32 3, !dbg !5536
  %10 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5537
  %11 = bitcast %struct.MaskSpline* %10 to i8*, !dbg !5537
  %call = call i32 @BLI_findindex(%struct.ListBase* %splines, i8* %11), !dbg !5538
  %cmp = icmp ne i32 %call, -1, !dbg !5539
  br i1 %cmp, label %if.then, label %if.end, !dbg !5540

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5541

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5543

for.inc:                                          ; preds = %if.end
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5544
  %next = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %12, i32 0, i32 0, !dbg !5545
  %13 = load %struct.MaskLayer*, %struct.MaskLayer** %next, align 8, !dbg !5545
  store %struct.MaskLayer* %13, %struct.MaskLayer** %layer, align 8, !dbg !5546
  br label %for.cond, !dbg !5547, !llvm.loop !5548

for.end:                                          ; preds = %if.then, %for.cond
  %14 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5550
  %tobool1 = icmp ne %struct.MaskLayer* %14, null, !dbg !5550
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5552

if.then2:                                         ; preds = %for.end
  %15 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5553
  call void @BKE_report(%struct.ReportList* %15, i32 32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.175, i64 0, i64 0)), !dbg !5555
  br label %return, !dbg !5556

if.end3:                                          ; preds = %for.end
  %16 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5557
  %17 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5559
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %17, i32 0, i32 6, !dbg !5560
  %18 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !5560
  %cmp4 = icmp ult %struct.MaskSplinePoint* %16, %18, !dbg !5561
  br i1 %cmp4, label %if.then7, label %lor.lhs.false, !dbg !5562

lor.lhs.false:                                    ; preds = %if.end3
  %19 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5563
  %20 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5564
  %points5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %20, i32 0, i32 6, !dbg !5565
  %21 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points5, align 8, !dbg !5565
  %22 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5566
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %22, i32 0, i32 5, !dbg !5567
  %23 = load i32, i32* %tot_point, align 4, !dbg !5567
  %idx.ext = sext i32 %23 to i64, !dbg !5568
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %21, i64 %idx.ext, !dbg !5568
  %cmp6 = icmp uge %struct.MaskSplinePoint* %19, %add.ptr, !dbg !5569
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !5570

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  %24 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5571
  call void @BKE_report(%struct.ReportList* %24, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.176, i64 0, i64 0)), !dbg !5573
  br label %return, !dbg !5574

if.end8:                                          ; preds = %lor.lhs.false
  %25 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5575
  %act_spline = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %25, i32 0, i32 5, !dbg !5577
  %26 = load %struct.MaskSpline*, %struct.MaskSpline** %act_spline, align 8, !dbg !5577
  %27 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5578
  %cmp9 = icmp eq %struct.MaskSpline* %26, %27, !dbg !5579
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5580

if.then10:                                        ; preds = %if.end8
  %28 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5581
  %act_point = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %28, i32 0, i32 6, !dbg !5583
  %29 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %act_point, align 8, !dbg !5583
  %30 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5584
  %points11 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %30, i32 0, i32 6, !dbg !5585
  %31 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points11, align 8, !dbg !5585
  %sub.ptr.lhs.cast = ptrtoint %struct.MaskSplinePoint* %29 to i64, !dbg !5586
  %sub.ptr.rhs.cast = ptrtoint %struct.MaskSplinePoint* %31 to i64, !dbg !5586
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5586
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 272, !dbg !5586
  %conv = trunc i64 %sub.ptr.div to i32, !dbg !5581
  store i32 %conv, i32* %active_point_index, align 4, !dbg !5587
  br label %if.end12, !dbg !5588

if.end12:                                         ; preds = %if.then10, %if.end8
  %32 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point, align 8, !dbg !5589
  %33 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5590
  %points13 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %33, i32 0, i32 6, !dbg !5591
  %34 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points13, align 8, !dbg !5591
  %sub.ptr.lhs.cast14 = ptrtoint %struct.MaskSplinePoint* %32 to i64, !dbg !5592
  %sub.ptr.rhs.cast15 = ptrtoint %struct.MaskSplinePoint* %34 to i64, !dbg !5592
  %sub.ptr.sub16 = sub i64 %sub.ptr.lhs.cast14, %sub.ptr.rhs.cast15, !dbg !5592
  %sub.ptr.div17 = sdiv exact i64 %sub.ptr.sub16, 272, !dbg !5592
  %conv18 = trunc i64 %sub.ptr.div17 to i32, !dbg !5589
  store i32 %conv18, i32* %point_index, align 4, !dbg !5593
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !5594
  %36 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5595
  %tot_point19 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %36, i32 0, i32 5, !dbg !5596
  %37 = load i32, i32* %tot_point19, align 4, !dbg !5596
  %sub = sub nsw i32 %37, 1, !dbg !5597
  %conv20 = sext i32 %sub to i64, !dbg !5598
  %mul = mul i64 272, %conv20, !dbg !5599
  %call21 = call i8* %35(i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.177, i64 0, i64 0)), !dbg !5594
  %38 = bitcast i8* %call21 to %struct.MaskSplinePoint*, !dbg !5594
  store %struct.MaskSplinePoint* %38, %struct.MaskSplinePoint** %new_point_array, align 8, !dbg !5600
  %39 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point_array, align 8, !dbg !5601
  %40 = bitcast %struct.MaskSplinePoint* %39 to i8*, !dbg !5602
  %41 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5603
  %points22 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %41, i32 0, i32 6, !dbg !5604
  %42 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points22, align 8, !dbg !5604
  %43 = bitcast %struct.MaskSplinePoint* %42 to i8*, !dbg !5602
  %44 = load i32, i32* %point_index, align 4, !dbg !5605
  %conv23 = sext i32 %44 to i64, !dbg !5605
  %mul24 = mul i64 272, %conv23, !dbg !5606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %43, i64 %mul24, i1 false), !dbg !5602
  %45 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point_array, align 8, !dbg !5607
  %46 = load i32, i32* %point_index, align 4, !dbg !5608
  %idx.ext25 = sext i32 %46 to i64, !dbg !5609
  %add.ptr26 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %45, i64 %idx.ext25, !dbg !5609
  %47 = bitcast %struct.MaskSplinePoint* %add.ptr26 to i8*, !dbg !5610
  %48 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5611
  %points27 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %48, i32 0, i32 6, !dbg !5612
  %49 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points27, align 8, !dbg !5612
  %50 = load i32, i32* %point_index, align 4, !dbg !5613
  %idx.ext28 = sext i32 %50 to i64, !dbg !5614
  %add.ptr29 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %49, i64 %idx.ext28, !dbg !5614
  %add.ptr30 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %add.ptr29, i64 1, !dbg !5615
  %51 = bitcast %struct.MaskSplinePoint* %add.ptr30 to i8*, !dbg !5610
  %52 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5616
  %tot_point31 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %52, i32 0, i32 5, !dbg !5617
  %53 = load i32, i32* %tot_point31, align 4, !dbg !5617
  %54 = load i32, i32* %point_index, align 4, !dbg !5618
  %sub32 = sub nsw i32 %53, %54, !dbg !5619
  %sub33 = sub nsw i32 %sub32, 1, !dbg !5620
  %conv34 = sext i32 %sub33 to i64, !dbg !5621
  %mul35 = mul i64 272, %conv34, !dbg !5622
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %51, i64 %mul35, i1 false), !dbg !5610
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5623
  %56 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5624
  %points36 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %56, i32 0, i32 6, !dbg !5625
  %57 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points36, align 8, !dbg !5625
  %58 = bitcast %struct.MaskSplinePoint* %57 to i8*, !dbg !5624
  call void %55(i8* %58), !dbg !5623
  %59 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %new_point_array, align 8, !dbg !5626
  %60 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5627
  %points37 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %60, i32 0, i32 6, !dbg !5628
  store %struct.MaskSplinePoint* %59, %struct.MaskSplinePoint** %points37, align 8, !dbg !5629
  %61 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5630
  %tot_point38 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %61, i32 0, i32 5, !dbg !5631
  %62 = load i32, i32* %tot_point38, align 4, !dbg !5632
  %dec = add nsw i32 %62, -1, !dbg !5632
  store i32 %dec, i32* %tot_point38, align 4, !dbg !5632
  %63 = load i32, i32* %active_point_index, align 4, !dbg !5633
  %cmp39 = icmp sge i32 %63, 0, !dbg !5635
  br i1 %cmp39, label %if.then41, label %if.end61, !dbg !5636

if.then41:                                        ; preds = %if.end12
  %64 = load i32, i32* %active_point_index, align 4, !dbg !5637
  %65 = load i32, i32* %point_index, align 4, !dbg !5640
  %cmp42 = icmp eq i32 %64, %65, !dbg !5641
  br i1 %cmp42, label %if.then44, label %if.else, !dbg !5642

if.then44:                                        ; preds = %if.then41
  %66 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5643
  %act_point45 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %66, i32 0, i32 6, !dbg !5645
  store %struct.MaskSplinePoint* null, %struct.MaskSplinePoint** %act_point45, align 8, !dbg !5646
  br label %if.end60, !dbg !5647

if.else:                                          ; preds = %if.then41
  %67 = load i32, i32* %active_point_index, align 4, !dbg !5648
  %68 = load i32, i32* %point_index, align 4, !dbg !5650
  %cmp46 = icmp slt i32 %67, %68, !dbg !5651
  br i1 %cmp46, label %if.then48, label %if.else53, !dbg !5652

if.then48:                                        ; preds = %if.else
  %69 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5653
  %points49 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %69, i32 0, i32 6, !dbg !5655
  %70 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points49, align 8, !dbg !5655
  %71 = load i32, i32* %active_point_index, align 4, !dbg !5656
  %idx.ext50 = sext i32 %71 to i64, !dbg !5657
  %add.ptr51 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %70, i64 %idx.ext50, !dbg !5657
  %72 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5658
  %act_point52 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %72, i32 0, i32 6, !dbg !5659
  store %struct.MaskSplinePoint* %add.ptr51, %struct.MaskSplinePoint** %act_point52, align 8, !dbg !5660
  br label %if.end59, !dbg !5661

if.else53:                                        ; preds = %if.else
  %73 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5662
  %points54 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %73, i32 0, i32 6, !dbg !5664
  %74 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points54, align 8, !dbg !5664
  %75 = load i32, i32* %active_point_index, align 4, !dbg !5665
  %idx.ext55 = sext i32 %75 to i64, !dbg !5666
  %add.ptr56 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %74, i64 %idx.ext55, !dbg !5666
  %add.ptr57 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %add.ptr56, i64 -1, !dbg !5667
  %76 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5668
  %act_point58 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %76, i32 0, i32 6, !dbg !5669
  store %struct.MaskSplinePoint* %add.ptr57, %struct.MaskSplinePoint** %act_point58, align 8, !dbg !5670
  br label %if.end59

if.end59:                                         ; preds = %if.else53, %if.then48
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then44
  br label %if.end61, !dbg !5671

if.end61:                                         ; preds = %if.end60, %if.end12
  %77 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5672
  %78 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5673
  %79 = load %struct.MaskSpline*, %struct.MaskSpline** %spline.addr, align 8, !dbg !5674
  %call62 = call i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer* %78, %struct.MaskSpline* %79), !dbg !5675
  %80 = load i32, i32* %point_index, align 4, !dbg !5676
  %add = add nsw i32 %call62, %80, !dbg !5677
  call void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer* %77, i32 %add, i32 1), !dbg !5678
  %81 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5679
  %82 = bitcast %struct.Mask* %81 to i8*, !dbg !5679
  call void @WM_main_add_notifier(i32 358285312, i8* %82), !dbg !5680
  %83 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !5681
  %id63 = getelementptr inbounds %struct.Mask, %struct.Mask* %83, i32 0, i32 0, !dbg !5682
  call void @DAG_id_tag_update(%struct.ID* %id63, i16 signext 0), !dbg !5683
  %84 = load %struct.PointerRNA*, %struct.PointerRNA** %point_ptr.addr, align 8, !dbg !5684
  %id64 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %84, i32 0, i32 0, !dbg !5684
  %data65 = getelementptr inbounds %struct.anon, %struct.anon* %id64, i32 0, i32 0, !dbg !5684
  store i8* null, i8** %data65, align 8, !dbg !5684
  %85 = load %struct.PointerRNA*, %struct.PointerRNA** %point_ptr.addr, align 8, !dbg !5684
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %85, i32 0, i32 1, !dbg !5684
  store %struct.StructRNA* null, %struct.StructRNA** %type, align 8, !dbg !5684
  br label %return, !dbg !5686

return:                                           ; preds = %if.end61, %if.then7, %if.then2
  ret void, !dbg !5686
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskSplinePoints_remove_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5687 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_selfid = alloca %struct.ID*, align 8
  %_self = alloca %struct.MaskSpline*, align 8
  %point = alloca %struct.PointerRNA*, align 8
  %_data = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata %struct.ID** %_selfid, metadata !5696, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %_self, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %point, metadata !5700, metadata !DIExpression()), !dbg !5701
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5702, metadata !DIExpression()), !dbg !5703
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5704
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5705
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5706
  %1 = load i8*, i8** %data, align 8, !dbg !5706
  %2 = bitcast i8* %1 to %struct.ID*, !dbg !5707
  store %struct.ID* %2, %struct.ID** %_selfid, align 8, !dbg !5708
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5709
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %3, i32 0, i32 2, !dbg !5710
  %4 = load i8*, i8** %data1, align 8, !dbg !5710
  %5 = bitcast i8* %4 to %struct.MaskSpline*, !dbg !5711
  store %struct.MaskSpline* %5, %struct.MaskSpline** %_self, align 8, !dbg !5712
  %6 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5713
  %data2 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %6, i32 0, i32 0, !dbg !5714
  %7 = load i8*, i8** %data2, align 8, !dbg !5714
  store i8* %7, i8** %_data, align 8, !dbg !5715
  %8 = load i8*, i8** %_data, align 8, !dbg !5716
  %9 = bitcast i8* %8 to %struct.PointerRNA**, !dbg !5717
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %9, align 8, !dbg !5717
  store %struct.PointerRNA* %10, %struct.PointerRNA** %point, align 8, !dbg !5718
  %11 = load %struct.ID*, %struct.ID** %_selfid, align 8, !dbg !5719
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %_self, align 8, !dbg !5720
  %13 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5721
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %point, align 8, !dbg !5722
  call void @rna_MaskSpline_point_remove(%struct.ID* %11, %struct.MaskSpline* %12, %struct.ReportList* %13, %struct.PointerRNA* %14), !dbg !5723
  ret void, !dbg !5724
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.MaskLayer* @MaskLayers_new(%struct.Mask* %_self, i8* %name) #0 !dbg !5725 {
entry:
  %_self.addr = alloca %struct.Mask*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.Mask* %_self, %struct.Mask** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self.addr, metadata !5728, metadata !DIExpression()), !dbg !5729
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  %0 = load %struct.Mask*, %struct.Mask** %_self.addr, align 8, !dbg !5732
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5733
  %call = call %struct.MaskLayer* @rna_Mask_layers_new(%struct.Mask* %0, i8* %1), !dbg !5734
  ret %struct.MaskLayer* %call, !dbg !5735
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskLayer* @rna_Mask_layers_new(%struct.Mask* %mask, i8* %name) #0 !dbg !5736 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %name.addr = alloca i8*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !5739, metadata !DIExpression()), !dbg !5740
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5741, metadata !DIExpression()), !dbg !5742
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5743, metadata !DIExpression()), !dbg !5744
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5745
  %1 = load i8*, i8** %name.addr, align 8, !dbg !5746
  %call = call %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask* %0, i8* %1), !dbg !5747
  store %struct.MaskLayer* %call, %struct.MaskLayer** %masklay, align 8, !dbg !5744
  %2 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5748
  %3 = bitcast %struct.Mask* %2 to i8*, !dbg !5748
  call void @WM_main_add_notifier(i32 352321537, i8* %3), !dbg !5749
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5750
  ret %struct.MaskLayer* %4, !dbg !5751
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_new_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5752 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_self = alloca %struct.Mask*, align 8
  %name = alloca i8*, align 8
  %layer = alloca %struct.MaskLayer*, align 8
  %_data = alloca i8*, align 8
  %_retdata = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5753, metadata !DIExpression()), !dbg !5754
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5757, metadata !DIExpression()), !dbg !5758
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %layer, metadata !5765, metadata !DIExpression()), !dbg !5766
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5767, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.declare(metadata i8** %_retdata, metadata !5769, metadata !DIExpression()), !dbg !5770
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5771
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5772
  %1 = load i8*, i8** %data, align 8, !dbg !5772
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !5773
  store %struct.Mask* %2, %struct.Mask** %_self, align 8, !dbg !5774
  %3 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5775
  %data1 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %3, i32 0, i32 0, !dbg !5776
  %4 = load i8*, i8** %data1, align 8, !dbg !5776
  store i8* %4, i8** %_data, align 8, !dbg !5777
  %5 = load i8*, i8** %_data, align 8, !dbg !5778
  %6 = bitcast i8* %5 to i8**, !dbg !5779
  %7 = load i8*, i8** %6, align 8, !dbg !5779
  store i8* %7, i8** %name, align 8, !dbg !5780
  %8 = load i8*, i8** %_data, align 8, !dbg !5781
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 8, !dbg !5781
  store i8* %add.ptr, i8** %_data, align 8, !dbg !5781
  %9 = load i8*, i8** %_data, align 8, !dbg !5782
  store i8* %9, i8** %_retdata, align 8, !dbg !5783
  %10 = load %struct.Mask*, %struct.Mask** %_self, align 8, !dbg !5784
  %11 = load i8*, i8** %name, align 8, !dbg !5785
  %call = call %struct.MaskLayer* @rna_Mask_layers_new(%struct.Mask* %10, i8* %11), !dbg !5786
  store %struct.MaskLayer* %call, %struct.MaskLayer** %layer, align 8, !dbg !5787
  %12 = load %struct.MaskLayer*, %struct.MaskLayer** %layer, align 8, !dbg !5788
  %13 = load i8*, i8** %_retdata, align 8, !dbg !5789
  %14 = bitcast i8* %13 to %struct.MaskLayer**, !dbg !5790
  store %struct.MaskLayer* %12, %struct.MaskLayer** %14, align 8, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_remove(%struct.Mask* %_self, %struct.ReportList* %reports, %struct.PointerRNA* %layer) #0 !dbg !5793 {
entry:
  %_self.addr = alloca %struct.Mask*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %layer.addr = alloca %struct.PointerRNA*, align 8
  store %struct.Mask* %_self, %struct.Mask** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self.addr, metadata !5796, metadata !DIExpression()), !dbg !5797
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  store %struct.PointerRNA* %layer, %struct.PointerRNA** %layer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %layer.addr, metadata !5800, metadata !DIExpression()), !dbg !5801
  %0 = load %struct.Mask*, %struct.Mask** %_self.addr, align 8, !dbg !5802
  %1 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5803
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %layer.addr, align 8, !dbg !5804
  call void @rna_Mask_layers_remove(%struct.Mask* %0, %struct.ReportList* %1, %struct.PointerRNA* %2), !dbg !5805
  ret void, !dbg !5806
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layers_remove(%struct.Mask* %mask, %struct.ReportList* %reports, %struct.PointerRNA* %masklay_ptr) #0 !dbg !5807 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %masklay_ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !5810, metadata !DIExpression()), !dbg !5811
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5812, metadata !DIExpression()), !dbg !5813
  store %struct.PointerRNA* %masklay_ptr, %struct.PointerRNA** %masklay_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %masklay_ptr.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !5816, metadata !DIExpression()), !dbg !5817
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %masklay_ptr.addr, align 8, !dbg !5818
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5819
  %1 = load i8*, i8** %data, align 8, !dbg !5819
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !5818
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !5817
  %3 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5820
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %3, i32 0, i32 2, !dbg !5822
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5823
  %5 = bitcast %struct.MaskLayer* %4 to i8*, !dbg !5823
  %call = call i32 @BLI_findindex(%struct.ListBase* %masklayers, i8* %5), !dbg !5824
  %cmp = icmp eq i32 %call, -1, !dbg !5825
  br i1 %cmp, label %if.then, label %if.end, !dbg !5826

if.then:                                          ; preds = %entry
  %6 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5827
  %7 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5829
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %7, i32 0, i32 2, !dbg !5830
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !5829
  %8 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5831
  %id = getelementptr inbounds %struct.Mask, %struct.Mask* %8, i32 0, i32 0, !dbg !5832
  %name1 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !5833
  %arraydecay2 = getelementptr inbounds [66 x i8], [66 x i8]* %name1, i64 0, i64 0, !dbg !5831
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay2, i64 2, !dbg !5834
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %6, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.178, i64 0, i64 0), i8* %arraydecay, i8* %add.ptr), !dbg !5835
  br label %return, !dbg !5836

if.end:                                           ; preds = %entry
  %9 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5837
  %10 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !5838
  call void @BKE_mask_layer_remove(%struct.Mask* %9, %struct.MaskLayer* %10), !dbg !5839
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %masklay_ptr.addr, align 8, !dbg !5840
  %id3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %11, i32 0, i32 0, !dbg !5840
  %data4 = getelementptr inbounds %struct.anon, %struct.anon* %id3, i32 0, i32 0, !dbg !5840
  store i8* null, i8** %data4, align 8, !dbg !5840
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %masklay_ptr.addr, align 8, !dbg !5840
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %12, i32 0, i32 1, !dbg !5840
  store %struct.StructRNA* null, %struct.StructRNA** %type, align 8, !dbg !5840
  %13 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5842
  %14 = bitcast %struct.Mask* %13 to i8*, !dbg !5842
  call void @WM_main_add_notifier(i32 352321537, i8* %14), !dbg !5843
  br label %return, !dbg !5844

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5844
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_remove_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5845 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_self = alloca %struct.Mask*, align 8
  %layer = alloca %struct.PointerRNA*, align 8
  %_data = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5852, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self, metadata !5854, metadata !DIExpression()), !dbg !5855
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %layer, metadata !5856, metadata !DIExpression()), !dbg !5857
  call void @llvm.dbg.declare(metadata i8** %_data, metadata !5858, metadata !DIExpression()), !dbg !5859
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5860
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5861
  %1 = load i8*, i8** %data, align 8, !dbg !5861
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !5862
  store %struct.Mask* %2, %struct.Mask** %_self, align 8, !dbg !5863
  %3 = load %struct.ParameterList*, %struct.ParameterList** %_parms.addr, align 8, !dbg !5864
  %data1 = getelementptr inbounds %struct.ParameterList, %struct.ParameterList* %3, i32 0, i32 0, !dbg !5865
  %4 = load i8*, i8** %data1, align 8, !dbg !5865
  store i8* %4, i8** %_data, align 8, !dbg !5866
  %5 = load i8*, i8** %_data, align 8, !dbg !5867
  %6 = bitcast i8* %5 to %struct.PointerRNA**, !dbg !5868
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %6, align 8, !dbg !5868
  store %struct.PointerRNA* %7, %struct.PointerRNA** %layer, align 8, !dbg !5869
  %8 = load %struct.Mask*, %struct.Mask** %_self, align 8, !dbg !5870
  %9 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !5871
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %layer, align 8, !dbg !5872
  call void @rna_Mask_layers_remove(%struct.Mask* %8, %struct.ReportList* %9, %struct.PointerRNA* %10), !dbg !5873
  ret void, !dbg !5874
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_clear(%struct.Mask* %_self) #0 !dbg !5875 {
entry:
  %_self.addr = alloca %struct.Mask*, align 8
  store %struct.Mask* %_self, %struct.Mask** %_self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  %0 = load %struct.Mask*, %struct.Mask** %_self.addr, align 8, !dbg !5880
  call void @rna_Mask_layers_clear(%struct.Mask* %0), !dbg !5881
  ret void, !dbg !5882
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layers_clear(%struct.Mask* %mask) #0 !dbg !5883 {
entry:
  %mask.addr = alloca %struct.Mask*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !5886, metadata !DIExpression()), !dbg !5887
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5888
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !5889
  call void @BKE_mask_layer_free_list(%struct.ListBase* %masklayers), !dbg !5890
  %1 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !5891
  %2 = bitcast %struct.Mask* %1 to i8*, !dbg !5891
  call void @WM_main_add_notifier(i32 352321537, i8* %2), !dbg !5892
  ret void, !dbg !5893
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @MaskLayers_clear_call(%struct.bContext* %C, %struct.ReportList* %reports, %struct.PointerRNA* %_ptr, %struct.ParameterList* %_parms) #0 !dbg !5894 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %_ptr.addr = alloca %struct.PointerRNA*, align 8
  %_parms.addr = alloca %struct.ParameterList*, align 8
  %_self = alloca %struct.Mask*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !5897, metadata !DIExpression()), !dbg !5898
  store %struct.PointerRNA* %_ptr, %struct.PointerRNA** %_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %_ptr.addr, metadata !5899, metadata !DIExpression()), !dbg !5900
  store %struct.ParameterList* %_parms, %struct.ParameterList** %_parms.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParameterList** %_parms.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata %struct.Mask** %_self, metadata !5903, metadata !DIExpression()), !dbg !5904
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %_ptr.addr, align 8, !dbg !5905
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5906
  %1 = load i8*, i8** %data, align 8, !dbg !5906
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !5907
  store %struct.Mask* %2, %struct.Mask** %_self, align 8, !dbg !5908
  %3 = load %struct.Mask*, %struct.Mask** %_self, align 8, !dbg !5909
  call void @rna_Mask_layers_clear(%struct.Mask* %3), !dbg !5910
  ret void, !dbg !5911
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_update_parent(%struct.Main* %bmain, %struct.Scene* %scene, %struct.PointerRNA* %ptr) #0 !dbg !5912 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %parent = alloca %struct.MaskParent*, align 8
  %clip = alloca %struct.MovieClip*, align 8
  %tracking = alloca %struct.MovieTracking*, align 8
  %object = alloca %struct.MovieTrackingObject*, align 8
  %clip_framenr = alloca i32, align 4
  %track = alloca %struct.MovieTrackingTrack*, align 8
  %marker = alloca %struct.MovieTrackingMarker*, align 8
  %marker_pos_ofs = alloca [2 x float], align 4
  %parmask_pos = alloca [2 x float], align 4
  %user = alloca %struct.MovieClipUser, align 4
  %plane_track = alloca %struct.MovieTrackingPlaneTrack*, align 8
  %plane_marker = alloca %struct.MovieTrackingPlaneMarker*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !5919, metadata !DIExpression()), !dbg !5920
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5923, metadata !DIExpression()), !dbg !5924
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %parent, metadata !5925, metadata !DIExpression()), !dbg !5926
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5927
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5928
  %1 = load i8*, i8** %data, align 8, !dbg !5928
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !5927
  store %struct.MaskParent* %2, %struct.MaskParent** %parent, align 8, !dbg !5926
  %3 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5929
  %id = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 2, !dbg !5931
  %4 = load %struct.ID*, %struct.ID** %id, align 8, !dbg !5931
  %tobool = icmp ne %struct.ID* %4, null, !dbg !5929
  br i1 %tobool, label %if.then, label %if.end44, !dbg !5932

if.then:                                          ; preds = %entry
  %5 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5933
  %id1 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %5, i32 0, i32 2, !dbg !5933
  %6 = load %struct.ID*, %struct.ID** %id1, align 8, !dbg !5933
  %name = getelementptr inbounds %struct.ID, %struct.ID* %6, i32 0, i32 4, !dbg !5933
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5933
  %7 = bitcast i8* %arraydecay to i16*, !dbg !5933
  %8 = load i16, i16* %7, align 8, !dbg !5933
  %conv = sext i16 %8 to i32, !dbg !5933
  %cmp = icmp eq i32 %conv, 17229, !dbg !5936
  br i1 %cmp, label %if.then3, label %if.end43, !dbg !5937

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MovieClip** %clip, metadata !5938, metadata !DIExpression()), !dbg !5940
  %9 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5941
  %id4 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %9, i32 0, i32 2, !dbg !5942
  %10 = load %struct.ID*, %struct.ID** %id4, align 8, !dbg !5942
  %11 = bitcast %struct.ID* %10 to %struct.MovieClip*, !dbg !5943
  store %struct.MovieClip* %11, %struct.MovieClip** %clip, align 8, !dbg !5940
  call void @llvm.dbg.declare(metadata %struct.MovieTracking** %tracking, metadata !5944, metadata !DIExpression()), !dbg !5947
  %12 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5948
  %tracking5 = getelementptr inbounds %struct.MovieClip, %struct.MovieClip* %12, i32 0, i32 11, !dbg !5949
  store %struct.MovieTracking* %tracking5, %struct.MovieTracking** %tracking, align 8, !dbg !5947
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingObject** %object, metadata !5950, metadata !DIExpression()), !dbg !5966
  %13 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !5967
  %14 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5968
  %parent6 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %14, i32 0, i32 3, !dbg !5969
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %parent6, i64 0, i64 0, !dbg !5968
  %call = call %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking* %13, i8* %arraydecay7), !dbg !5970
  store %struct.MovieTrackingObject* %call, %struct.MovieTrackingObject** %object, align 8, !dbg !5966
  %15 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !5971
  %tobool8 = icmp ne %struct.MovieTrackingObject* %15, null, !dbg !5971
  br i1 %tobool8, label %if.then9, label %if.end42, !dbg !5973

if.then9:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %clip_framenr, metadata !5974, metadata !DIExpression()), !dbg !5976
  %16 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !5977
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5978
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %17, i32 0, i32 22, !dbg !5979
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !5980
  %18 = load i32, i32* %cfra, align 8, !dbg !5980
  %conv10 = sitofp i32 %18 to float, !dbg !5978
  %call11 = call float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip* %16, float %conv10), !dbg !5981
  %conv12 = fptosi float %call11 to i32, !dbg !5981
  store i32 %conv12, i32* %clip_framenr, align 4, !dbg !5976
  %19 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5982
  %type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %19, i32 0, i32 1, !dbg !5984
  %20 = load i32, i32* %type, align 4, !dbg !5984
  %cmp13 = icmp eq i32 %20, 0, !dbg !5985
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !5986

if.then15:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingTrack** %track, metadata !5987, metadata !DIExpression()), !dbg !5989
  %21 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !5990
  %22 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !5991
  %23 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !5992
  %sub_parent = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %23, i32 0, i32 4, !dbg !5993
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent, i64 0, i64 0, !dbg !5992
  %call17 = call %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking* %21, %struct.MovieTrackingObject* %22, i8* %arraydecay16), !dbg !5994
  store %struct.MovieTrackingTrack* %call17, %struct.MovieTrackingTrack** %track, align 8, !dbg !5989
  %24 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !5995
  %tobool18 = icmp ne %struct.MovieTrackingTrack* %24, null, !dbg !5995
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !5997

if.then19:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingMarker** %marker, metadata !5998, metadata !DIExpression()), !dbg !6000
  %25 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !6001
  %26 = load i32, i32* %clip_framenr, align 4, !dbg !6002
  %call20 = call %struct.MovieTrackingMarker* @BKE_tracking_marker_get(%struct.MovieTrackingTrack* %25, i32 %26), !dbg !6003
  store %struct.MovieTrackingMarker* %call20, %struct.MovieTrackingMarker** %marker, align 8, !dbg !6000
  call void @llvm.dbg.declare(metadata [2 x float]* %marker_pos_ofs, metadata !6004, metadata !DIExpression()), !dbg !6005
  call void @llvm.dbg.declare(metadata [2 x float]* %parmask_pos, metadata !6006, metadata !DIExpression()), !dbg !6007
  call void @llvm.dbg.declare(metadata %struct.MovieClipUser* %user, metadata !6008, metadata !DIExpression()), !dbg !6015
  %27 = bitcast %struct.MovieClipUser* %user to i8*, !dbg !6015
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 8, i1 false), !dbg !6015
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6016
  %r21 = getelementptr inbounds %struct.Scene, %struct.Scene* %28, i32 0, i32 22, !dbg !6017
  %cfra22 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r21, i32 0, i32 5, !dbg !6018
  %29 = load i32, i32* %cfra22, align 8, !dbg !6018
  call void @BKE_movieclip_user_set_frame(%struct.MovieClipUser* %user, i32 %29), !dbg !6019
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %marker_pos_ofs, i64 0, i64 0, !dbg !6020
  %30 = load %struct.MovieTrackingMarker*, %struct.MovieTrackingMarker** %marker, align 8, !dbg !6021
  %pos = getelementptr inbounds %struct.MovieTrackingMarker, %struct.MovieTrackingMarker* %30, i32 0, i32 0, !dbg !6022
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %pos, i64 0, i64 0, !dbg !6021
  %31 = load %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack** %track, align 8, !dbg !6023
  %offset = getelementptr inbounds %struct.MovieTrackingTrack, %struct.MovieTrackingTrack* %31, i32 0, i32 7, !dbg !6024
  %arraydecay25 = getelementptr inbounds [2 x float], [2 x float]* %offset, i64 0, i64 0, !dbg !6023
  call void @add_v2_v2v2(float* %arraydecay23, float* %arraydecay24, float* %arraydecay25), !dbg !6025
  %32 = load %struct.MovieClip*, %struct.MovieClip** %clip, align 8, !dbg !6026
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %parmask_pos, i64 0, i64 0, !dbg !6027
  %arraydecay27 = getelementptr inbounds [2 x float], [2 x float]* %marker_pos_ofs, i64 0, i64 0, !dbg !6028
  call void @BKE_mask_coord_from_movieclip(%struct.MovieClip* %32, %struct.MovieClipUser* %user, float* %arraydecay26, float* %arraydecay27), !dbg !6029
  %33 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6030
  %parent_orig = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %33, i32 0, i32 5, !dbg !6031
  %arraydecay28 = getelementptr inbounds [2 x float], [2 x float]* %parent_orig, i64 0, i64 0, !dbg !6030
  %arraydecay29 = getelementptr inbounds [2 x float], [2 x float]* %parmask_pos, i64 0, i64 0, !dbg !6032
  call void @copy_v2_v2(float* %arraydecay28, float* %arraydecay29), !dbg !6033
  br label %if.end, !dbg !6034

if.end:                                           ; preds = %if.then19, %if.then15
  br label %if.end41, !dbg !6035

if.else:                                          ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingPlaneTrack** %plane_track, metadata !6036, metadata !DIExpression()), !dbg !6038
  %34 = load %struct.MovieTracking*, %struct.MovieTracking** %tracking, align 8, !dbg !6039
  %35 = load %struct.MovieTrackingObject*, %struct.MovieTrackingObject** %object, align 8, !dbg !6040
  %36 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6041
  %sub_parent30 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %36, i32 0, i32 4, !dbg !6042
  %arraydecay31 = getelementptr inbounds [64 x i8], [64 x i8]* %sub_parent30, i64 0, i64 0, !dbg !6041
  %call32 = call %struct.MovieTrackingPlaneTrack* @BKE_tracking_plane_track_get_named(%struct.MovieTracking* %34, %struct.MovieTrackingObject* %35, i8* %arraydecay31), !dbg !6043
  store %struct.MovieTrackingPlaneTrack* %call32, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6038
  %37 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6044
  %tobool33 = icmp ne %struct.MovieTrackingPlaneTrack* %37, null, !dbg !6044
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !6046

if.then34:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.MovieTrackingPlaneMarker** %plane_marker, metadata !6047, metadata !DIExpression()), !dbg !6049
  %38 = load %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack** %plane_track, align 8, !dbg !6050
  %39 = load i32, i32* %clip_framenr, align 4, !dbg !6051
  %call35 = call %struct.MovieTrackingPlaneMarker* @BKE_tracking_plane_marker_get(%struct.MovieTrackingPlaneTrack* %38, i32 %39), !dbg !6052
  store %struct.MovieTrackingPlaneMarker* %call35, %struct.MovieTrackingPlaneMarker** %plane_marker, align 8, !dbg !6049
  %40 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6053
  %parent_corners_orig = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %40, i32 0, i32 6, !dbg !6054
  %arraydecay36 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %parent_corners_orig, i64 0, i64 0, !dbg !6055
  %41 = bitcast [2 x float]* %arraydecay36 to i8*, !dbg !6055
  %42 = load %struct.MovieTrackingPlaneMarker*, %struct.MovieTrackingPlaneMarker** %plane_marker, align 8, !dbg !6056
  %corners = getelementptr inbounds %struct.MovieTrackingPlaneMarker, %struct.MovieTrackingPlaneMarker* %42, i32 0, i32 0, !dbg !6057
  %arraydecay37 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %corners, i64 0, i64 0, !dbg !6055
  %43 = bitcast [2 x float]* %arraydecay37 to i8*, !dbg !6055
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %43, i64 32, i1 false), !dbg !6055
  %44 = load %struct.MaskParent*, %struct.MaskParent** %parent, align 8, !dbg !6058
  %parent_orig38 = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %44, i32 0, i32 5, !dbg !6059
  %arraydecay39 = getelementptr inbounds [2 x float], [2 x float]* %parent_orig38, i64 0, i64 0, !dbg !6058
  call void @zero_v2(float* %arraydecay39), !dbg !6060
  br label %if.end40, !dbg !6061

if.end40:                                         ; preds = %if.then34, %if.else
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end
  br label %if.end42, !dbg !6062

if.end42:                                         ; preds = %if.end41, %if.then3
  br label %if.end43, !dbg !6063

if.end43:                                         ; preds = %if.end42, %if.then
  br label %if.end44, !dbg !6064

if.end44:                                         ; preds = %if.end43, %entry
  %45 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !6065
  %46 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6066
  %47 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6067
  call void @rna_Mask_update_data(%struct.Main* %45, %struct.Scene* %46, %struct.PointerRNA* %47), !dbg !6068
  ret void, !dbg !6069
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.StructRNA* @rna_MaskParent_id_typef(%struct.PointerRNA* %ptr) #0 !dbg !6070 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mpar = alloca %struct.MaskParent*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6073, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.declare(metadata %struct.MaskParent** %mpar, metadata !6075, metadata !DIExpression()), !dbg !6076
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6077
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !6078
  %1 = load i8*, i8** %data, align 8, !dbg !6078
  %2 = bitcast i8* %1 to %struct.MaskParent*, !dbg !6079
  store %struct.MaskParent* %2, %struct.MaskParent** %mpar, align 8, !dbg !6076
  %3 = load %struct.MaskParent*, %struct.MaskParent** %mpar, align 8, !dbg !6080
  %id_type = getelementptr inbounds %struct.MaskParent, %struct.MaskParent* %3, i32 0, i32 0, !dbg !6081
  %4 = load i32, i32* %id_type, align 8, !dbg !6081
  %conv = trunc i32 %4 to i16, !dbg !6080
  %call = call %struct.StructRNA* @ID_code_to_RNA_type(i16 signext %conv), !dbg !6082
  ret %struct.StructRNA* %call, !dbg !6083
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_update_data(%struct.Main* %UNUSED_bmain, %struct.Scene* %UNUSED_scene, %struct.PointerRNA* %ptr) #0 !dbg !6084 {
entry:
  %UNUSED_bmain.addr = alloca %struct.Main*, align 8
  %UNUSED_scene.addr = alloca %struct.Scene*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.Main* %UNUSED_bmain, %struct.Main** %UNUSED_bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %UNUSED_bmain.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  store %struct.Scene* %UNUSED_scene, %struct.Scene** %UNUSED_scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %UNUSED_scene.addr, metadata !6087, metadata !DIExpression()), !dbg !6088
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6089, metadata !DIExpression()), !dbg !6090
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6091, metadata !DIExpression()), !dbg !6092
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6093
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !6094
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6095
  %1 = load i8*, i8** %data, align 8, !dbg !6095
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !6093
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !6092
  %3 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6096
  %4 = bitcast %struct.Mask* %3 to i8*, !dbg !6096
  call void @WM_main_add_notifier(i32 358285312, i8* %4), !dbg !6097
  %5 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6098
  %id1 = getelementptr inbounds %struct.Mask, %struct.Mask* %5, i32 0, i32 0, !dbg !6099
  call void @DAG_id_tag_update(%struct.ID* %id1, i16 signext 0), !dbg !6100
  ret void, !dbg !6101
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @rna_MaskLayer_path(%struct.PointerRNA* %ptr) #0 !dbg !6102 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %masklay = alloca %struct.MaskLayer*, align 8
  %name_esc = alloca [128 x i8], align 16
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %masklay, metadata !6107, metadata !DIExpression()), !dbg !6108
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6109
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !6110
  %1 = load i8*, i8** %data, align 8, !dbg !6110
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !6111
  store %struct.MaskLayer* %2, %struct.MaskLayer** %masklay, align 8, !dbg !6108
  call void @llvm.dbg.declare(metadata [128 x i8]* %name_esc, metadata !6112, metadata !DIExpression()), !dbg !6113
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc, i64 0, i64 0, !dbg !6114
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %masklay, align 8, !dbg !6115
  %name = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %3, i32 0, i32 2, !dbg !6116
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6115
  %call = call i64 @BLI_strescape(i8* %arraydecay, i8* %arraydecay1, i64 128), !dbg !6117
  %arraydecay2 = getelementptr inbounds [128 x i8], [128 x i8]* %name_esc, i64 0, i64 0, !dbg !6118
  %call3 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.234, i64 0, i64 0), i8* %arraydecay2), !dbg !6119
  ret i8* %call3, !dbg !6120
}

; Function Attrs: noinline nounwind uwtable
define internal void @rna_Mask_layer_active_index_range(%struct.PointerRNA* %ptr, i32* %min, i32* %max, i32* %softmin, i32* %softmax) #0 !dbg !6121 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %min.addr = alloca i32*, align 8
  %max.addr = alloca i32*, align 8
  %softmin.addr = alloca i32*, align 8
  %softmax.addr = alloca i32*, align 8
  %mask = alloca %struct.Mask*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  store i32* %min, i32** %min.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %min.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  store i32* %max, i32** %max.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %max.addr, metadata !6128, metadata !DIExpression()), !dbg !6129
  store i32* %softmin, i32** %softmin.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %softmin.addr, metadata !6130, metadata !DIExpression()), !dbg !6131
  store i32* %softmax, i32** %softmax.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %softmax.addr, metadata !6132, metadata !DIExpression()), !dbg !6133
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask, metadata !6134, metadata !DIExpression()), !dbg !6135
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !6136
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !6137
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !6138
  %1 = load i8*, i8** %data, align 8, !dbg !6138
  %2 = bitcast i8* %1 to %struct.Mask*, !dbg !6139
  store %struct.Mask* %2, %struct.Mask** %mask, align 8, !dbg !6135
  %3 = load i32*, i32** %min.addr, align 8, !dbg !6140
  store i32 0, i32* %3, align 4, !dbg !6141
  %4 = load %struct.Mask*, %struct.Mask** %mask, align 8, !dbg !6142
  %masklay_tot = getelementptr inbounds %struct.Mask, %struct.Mask* %4, i32 0, i32 4, !dbg !6143
  %5 = load i32, i32* %masklay_tot, align 4, !dbg !6143
  %sub = sub nsw i32 %5, 1, !dbg !6144
  %call = call i32 @max_ii(i32 0, i32 %sub), !dbg !6145
  %6 = load i32*, i32** %max.addr, align 8, !dbg !6146
  store i32 %call, i32* %6, align 4, !dbg !6147
  %7 = load i32*, i32** %min.addr, align 8, !dbg !6148
  %8 = load i32, i32* %7, align 4, !dbg !6149
  %9 = load i32*, i32** %softmin.addr, align 8, !dbg !6150
  store i32 %8, i32* %9, align 4, !dbg !6151
  %10 = load i32*, i32** %max.addr, align 8, !dbg !6152
  %11 = load i32, i32* %10, align 4, !dbg !6153
  %12 = load i32*, i32** %softmax.addr, align 8, !dbg !6154
  store i32 %11, i32* %12, align 4, !dbg !6155
  ret void, !dbg !6156
}

declare dso_local %struct.StructRNA* @rna_ID_refine(%struct.PointerRNA*) #3

declare dso_local %struct.IDProperty* @rna_ID_idprops(%struct.PointerRNA*, i8 zeroext) #3

declare dso_local void @rna_builtin_properties_get(%struct.PointerRNA* sret, %struct.CollectionPropertyIterator*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !6157 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  %0 = load float*, float** %a.addr, align 8, !dbg !6165
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6165
  %1 = load float, float* %arrayidx, align 4, !dbg !6165
  %2 = load float*, float** %r.addr, align 8, !dbg !6166
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6166
  store float %1, float* %arrayidx1, align 4, !dbg !6167
  %3 = load float*, float** %a.addr, align 8, !dbg !6168
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6168
  %4 = load float, float* %arrayidx2, align 4, !dbg !6168
  %5 = load float*, float** %r.addr, align 8, !dbg !6169
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6169
  store float %4, float* %arrayidx3, align 4, !dbg !6170
  ret void, !dbg !6171
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MaskSpline* @mask_spline_from_point(%struct.Mask* %mask, %struct.MaskSplinePoint* %point) #0 !dbg !6172 {
entry:
  %retval = alloca %struct.MaskSpline*, align 8
  %mask.addr = alloca %struct.Mask*, align 8
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %mask_layer = alloca %struct.MaskLayer*, align 8
  %spline = alloca %struct.MaskSpline*, align 8
  store %struct.Mask* %mask, %struct.Mask** %mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mask** %mask.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.declare(metadata %struct.MaskLayer** %mask_layer, metadata !6179, metadata !DIExpression()), !dbg !6180
  %0 = load %struct.Mask*, %struct.Mask** %mask.addr, align 8, !dbg !6181
  %masklayers = getelementptr inbounds %struct.Mask, %struct.Mask* %0, i32 0, i32 2, !dbg !6183
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %masklayers, i32 0, i32 0, !dbg !6184
  %1 = load i8*, i8** %first, align 8, !dbg !6184
  %2 = bitcast i8* %1 to %struct.MaskLayer*, !dbg !6181
  store %struct.MaskLayer* %2, %struct.MaskLayer** %mask_layer, align 8, !dbg !6185
  br label %for.cond, !dbg !6186

for.cond:                                         ; preds = %for.inc7, %entry
  %3 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6187
  %tobool = icmp ne %struct.MaskLayer* %3, null, !dbg !6189
  br i1 %tobool, label %for.body, label %for.end9, !dbg !6189

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.MaskSpline** %spline, metadata !6190, metadata !DIExpression()), !dbg !6192
  %4 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6193
  %splines = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %4, i32 0, i32 3, !dbg !6195
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %splines, i32 0, i32 0, !dbg !6196
  %5 = load i8*, i8** %first1, align 8, !dbg !6196
  %6 = bitcast i8* %5 to %struct.MaskSpline*, !dbg !6193
  store %struct.MaskSpline* %6, %struct.MaskSpline** %spline, align 8, !dbg !6197
  br label %for.cond2, !dbg !6198

for.cond2:                                        ; preds = %for.inc, %for.body
  %7 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6199
  %tobool3 = icmp ne %struct.MaskSpline* %7, null, !dbg !6201
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !6201

for.body4:                                        ; preds = %for.cond2
  %8 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6202
  %9 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6205
  %points = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %9, i32 0, i32 6, !dbg !6206
  %10 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points, align 8, !dbg !6206
  %cmp = icmp uge %struct.MaskSplinePoint* %8, %10, !dbg !6207
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6208

land.lhs.true:                                    ; preds = %for.body4
  %11 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6209
  %12 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6210
  %points5 = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %12, i32 0, i32 6, !dbg !6211
  %13 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %points5, align 8, !dbg !6211
  %14 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6212
  %tot_point = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %14, i32 0, i32 5, !dbg !6213
  %15 = load i32, i32* %tot_point, align 4, !dbg !6213
  %idx.ext = sext i32 %15 to i64, !dbg !6214
  %add.ptr = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %13, i64 %idx.ext, !dbg !6214
  %cmp6 = icmp ult %struct.MaskSplinePoint* %11, %add.ptr, !dbg !6215
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6216

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6217
  store %struct.MaskSpline* %16, %struct.MaskSpline** %retval, align 8, !dbg !6219
  br label %return, !dbg !6219

if.end:                                           ; preds = %land.lhs.true, %for.body4
  br label %for.inc, !dbg !6220

for.inc:                                          ; preds = %if.end
  %17 = load %struct.MaskSpline*, %struct.MaskSpline** %spline, align 8, !dbg !6221
  %next = getelementptr inbounds %struct.MaskSpline, %struct.MaskSpline* %17, i32 0, i32 0, !dbg !6222
  %18 = load %struct.MaskSpline*, %struct.MaskSpline** %next, align 8, !dbg !6222
  store %struct.MaskSpline* %18, %struct.MaskSpline** %spline, align 8, !dbg !6223
  br label %for.cond2, !dbg !6224, !llvm.loop !6225

for.end:                                          ; preds = %for.cond2
  br label %for.inc7, !dbg !6227

for.inc7:                                         ; preds = %for.end
  %19 = load %struct.MaskLayer*, %struct.MaskLayer** %mask_layer, align 8, !dbg !6228
  %next8 = getelementptr inbounds %struct.MaskLayer, %struct.MaskLayer* %19, i32 0, i32 0, !dbg !6229
  %20 = load %struct.MaskLayer*, %struct.MaskLayer** %next8, align 8, !dbg !6229
  store %struct.MaskLayer* %20, %struct.MaskLayer** %mask_layer, align 8, !dbg !6230
  br label %for.cond, !dbg !6231, !llvm.loop !6232

for.end9:                                         ; preds = %for.cond
  store %struct.MaskSpline* null, %struct.MaskSpline** %retval, align 8, !dbg !6234
  br label %return, !dbg !6234

return:                                           ; preds = %for.end9, %if.then
  %21 = load %struct.MaskSpline*, %struct.MaskSpline** %retval, align 8, !dbg !6235
  ret %struct.MaskSpline* %21, !dbg !6235
}

; Function Attrs: noinline nounwind uwtable
define internal void @mask_point_check_stick(%struct.MaskSplinePoint* %point) #0 !dbg !6236 {
entry:
  %point.addr = alloca %struct.MaskSplinePoint*, align 8
  %bezt = alloca %struct.BezTriple*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.MaskSplinePoint* %point, %struct.MaskSplinePoint** %point.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MaskSplinePoint** %point.addr, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.BezTriple** %bezt, metadata !6241, metadata !DIExpression()), !dbg !6242
  %0 = load %struct.MaskSplinePoint*, %struct.MaskSplinePoint** %point.addr, align 8, !dbg !6243
  %bezt1 = getelementptr inbounds %struct.MaskSplinePoint, %struct.MaskSplinePoint* %0, i32 0, i32 0, !dbg !6244
  store %struct.BezTriple* %bezt1, %struct.BezTriple** %bezt, align 8, !dbg !6242
  %1 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6245
  %h1 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %1, i32 0, i32 5, !dbg !6247
  %2 = load i8, i8* %h1, align 1, !dbg !6247
  %conv = zext i8 %2 to i32, !dbg !6245
  %cmp = icmp eq i32 %conv, 3, !dbg !6248
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6249

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6250
  %h2 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %3, i32 0, i32 6, !dbg !6251
  %4 = load i8, i8* %h2, align 2, !dbg !6251
  %conv3 = zext i8 %4 to i32, !dbg !6250
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !6252
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6253

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6254, metadata !DIExpression()), !dbg !6256
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6257
  %5 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6258
  %vec6 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %5, i32 0, i32 0, !dbg !6259
  %arrayidx = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec6, i64 0, i64 0, !dbg !6258
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6258
  %6 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6260
  %vec8 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %6, i32 0, i32 0, !dbg !6261
  %arrayidx9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec8, i64 0, i64 1, !dbg !6260
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !6260
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay7, float* %arraydecay10), !dbg !6262
  %7 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6263
  %vec11 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %7, i32 0, i32 0, !dbg !6264
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec11, i64 0, i64 2, !dbg !6263
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !6263
  %8 = load %struct.BezTriple*, %struct.BezTriple** %bezt, align 8, !dbg !6265
  %vec14 = getelementptr inbounds %struct.BezTriple, %struct.BezTriple* %8, i32 0, i32 0, !dbg !6266
  %arrayidx15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vec14, i64 0, i64 1, !dbg !6265
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx15, i64 0, i64 0, !dbg !6265
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6267
  call void @add_v3_v3v3(float* %arraydecay13, float* %arraydecay16, float* %arraydecay17), !dbg !6268
  br label %if.end, !dbg !6269

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6270
}

declare dso_local void @BKE_mask_calc_handle_point(%struct.MaskSpline*, %struct.MaskSplinePoint*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6271 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6274, metadata !DIExpression()), !dbg !6275
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6276, metadata !DIExpression()), !dbg !6277
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6278, metadata !DIExpression()), !dbg !6279
  %0 = load float*, float** %a.addr, align 8, !dbg !6280
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6280
  %1 = load float, float* %arrayidx, align 4, !dbg !6280
  %2 = load float*, float** %b.addr, align 8, !dbg !6281
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6281
  %3 = load float, float* %arrayidx1, align 4, !dbg !6281
  %sub = fsub float %1, %3, !dbg !6282
  %4 = load float*, float** %r.addr, align 8, !dbg !6283
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6283
  store float %sub, float* %arrayidx2, align 4, !dbg !6284
  %5 = load float*, float** %a.addr, align 8, !dbg !6285
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6285
  %6 = load float, float* %arrayidx3, align 4, !dbg !6285
  %7 = load float*, float** %b.addr, align 8, !dbg !6286
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6286
  %8 = load float, float* %arrayidx4, align 4, !dbg !6286
  %sub5 = fsub float %6, %8, !dbg !6287
  %9 = load float*, float** %r.addr, align 8, !dbg !6288
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6288
  store float %sub5, float* %arrayidx6, align 4, !dbg !6289
  %10 = load float*, float** %a.addr, align 8, !dbg !6290
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6290
  %11 = load float, float* %arrayidx7, align 4, !dbg !6290
  %12 = load float*, float** %b.addr, align 8, !dbg !6291
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6291
  %13 = load float, float* %arrayidx8, align 4, !dbg !6291
  %sub9 = fsub float %11, %13, !dbg !6292
  %14 = load float*, float** %r.addr, align 8, !dbg !6293
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6293
  store float %sub9, float* %arrayidx10, align 4, !dbg !6294
  ret void, !dbg !6295
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !6296 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6297, metadata !DIExpression()), !dbg !6298
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load float*, float** %a.addr, align 8, !dbg !6303
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6303
  %1 = load float, float* %arrayidx, align 4, !dbg !6303
  %2 = load float*, float** %b.addr, align 8, !dbg !6304
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6304
  %3 = load float, float* %arrayidx1, align 4, !dbg !6304
  %add = fadd float %1, %3, !dbg !6305
  %4 = load float*, float** %r.addr, align 8, !dbg !6306
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6306
  store float %add, float* %arrayidx2, align 4, !dbg !6307
  %5 = load float*, float** %a.addr, align 8, !dbg !6308
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6308
  %6 = load float, float* %arrayidx3, align 4, !dbg !6308
  %7 = load float*, float** %b.addr, align 8, !dbg !6309
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6309
  %8 = load float, float* %arrayidx4, align 4, !dbg !6309
  %add5 = fadd float %6, %8, !dbg !6310
  %9 = load float*, float** %r.addr, align 8, !dbg !6311
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6311
  store float %add5, float* %arrayidx6, align 4, !dbg !6312
  %10 = load float*, float** %a.addr, align 8, !dbg !6313
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !6313
  %11 = load float, float* %arrayidx7, align 4, !dbg !6313
  %12 = load float*, float** %b.addr, align 8, !dbg !6314
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !6314
  %13 = load float, float* %arrayidx8, align 4, !dbg !6314
  %add9 = fadd float %11, %13, !dbg !6315
  %14 = load float*, float** %r.addr, align 8, !dbg !6316
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !6316
  store float %add9, float* %arrayidx10, align 4, !dbg !6317
  ret void, !dbg !6318
}

declare dso_local i8* @rna_iterator_array_get(%struct.CollectionPropertyIterator*) #3

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #3

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

declare dso_local void @BKE_mask_layer_unique_name(%struct.Mask*, %struct.MaskLayer*) #3

declare dso_local void @rna_iterator_listbase_begin(%struct.CollectionPropertyIterator*, %struct.ListBase*, i32 (%struct.CollectionPropertyIterator*, i8*)*) #3

declare dso_local i8* @rna_iterator_listbase_get(%struct.CollectionPropertyIterator*) #3

declare dso_local %struct.MaskLayer* @BKE_mask_layer_active(%struct.Mask*) #3

declare dso_local void @BKE_mask_layer_active_set(%struct.Mask*, %struct.MaskLayer*) #3

declare dso_local %struct.MaskSpline* @BKE_mask_spline_add(%struct.MaskLayer*) #3

declare dso_local void @WM_main_add_notifier(i32, i8*) #3

declare dso_local zeroext i8 @BKE_mask_spline_remove(%struct.MaskLayer*, %struct.MaskSpline*) #3

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #3

declare dso_local void @DAG_id_tag_update(%struct.ID*, i16 signext) #3

declare dso_local i32 @BKE_mask_layer_shape_spline_to_index(%struct.MaskLayer*, %struct.MaskSpline*) #3

declare dso_local void @BKE_mask_calc_handle_point_auto(%struct.MaskSpline*, %struct.MaskSplinePoint*, i8 zeroext) #3

declare dso_local void @BKE_mask_parent_init(%struct.MaskParent*) #3

declare dso_local void @BKE_mask_layer_shape_changed_add(%struct.MaskLayer*, i32, i8 zeroext, i8 zeroext) #3

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #3

declare dso_local void @BKE_mask_layer_shape_changed_remove(%struct.MaskLayer*, i32, i32) #3

declare dso_local %struct.MaskLayer* @BKE_mask_layer_new(%struct.Mask*, i8*) #3

declare dso_local void @BKE_mask_layer_remove(%struct.Mask*, %struct.MaskLayer*) #3

declare dso_local void @BKE_mask_layer_free_list(%struct.ListBase*) #3

declare dso_local %struct.MovieTrackingObject* @BKE_tracking_object_get_named(%struct.MovieTracking*, i8*) #3

declare dso_local float @BKE_movieclip_remap_scene_to_clip_frame(%struct.MovieClip*, float) #3

declare dso_local %struct.MovieTrackingTrack* @BKE_tracking_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #3

declare dso_local %struct.MovieTrackingMarker* @BKE_tracking_marker_get(%struct.MovieTrackingTrack*, i32) #3

declare dso_local void @BKE_movieclip_user_set_frame(%struct.MovieClipUser*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !6319 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6320, metadata !DIExpression()), !dbg !6321
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6322, metadata !DIExpression()), !dbg !6323
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6324, metadata !DIExpression()), !dbg !6325
  %0 = load float*, float** %a.addr, align 8, !dbg !6326
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6326
  %1 = load float, float* %arrayidx, align 4, !dbg !6326
  %2 = load float*, float** %b.addr, align 8, !dbg !6327
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6327
  %3 = load float, float* %arrayidx1, align 4, !dbg !6327
  %add = fadd float %1, %3, !dbg !6328
  %4 = load float*, float** %r.addr, align 8, !dbg !6329
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !6329
  store float %add, float* %arrayidx2, align 4, !dbg !6330
  %5 = load float*, float** %a.addr, align 8, !dbg !6331
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6331
  %6 = load float, float* %arrayidx3, align 4, !dbg !6331
  %7 = load float*, float** %b.addr, align 8, !dbg !6332
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !6332
  %8 = load float, float* %arrayidx4, align 4, !dbg !6332
  %add5 = fadd float %6, %8, !dbg !6333
  %9 = load float*, float** %r.addr, align 8, !dbg !6334
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !6334
  store float %add5, float* %arrayidx6, align 4, !dbg !6335
  ret void, !dbg !6336
}

declare dso_local void @BKE_mask_coord_from_movieclip(%struct.MovieClip*, %struct.MovieClipUser*, float*, float*) #3

declare dso_local %struct.MovieTrackingPlaneTrack* @BKE_tracking_plane_track_get_named(%struct.MovieTracking*, %struct.MovieTrackingObject*, i8*) #3

declare dso_local %struct.MovieTrackingPlaneMarker* @BKE_tracking_plane_marker_get(%struct.MovieTrackingPlaneTrack*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !6337 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6340, metadata !DIExpression()), !dbg !6341
  %0 = load float*, float** %r.addr, align 8, !dbg !6342
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6342
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6343
  %1 = load float*, float** %r.addr, align 8, !dbg !6344
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6344
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6345
  ret void, !dbg !6346
}

declare dso_local %struct.StructRNA* @ID_code_to_RNA_type(i16 signext) #3

declare dso_local i64 @BLI_strescape(i8*, i8*, i64) #3

declare dso_local i8* @BLI_sprintfN(i8*, ...) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !6347 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !6351, metadata !DIExpression()), !dbg !6352
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !6353, metadata !DIExpression()), !dbg !6354
  %0 = load i32, i32* %b.addr, align 4, !dbg !6355
  %1 = load i32, i32* %a.addr, align 4, !dbg !6356
  %cmp = icmp slt i32 %0, %1, !dbg !6357
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6358

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !6359
  br label %cond.end, !dbg !6358

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !6360
  br label %cond.end, !dbg !6358

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !6358
  ret i32 %cond, !dbg !6361
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2377, !2378, !2379}
!llvm.ident = !{!2380}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "rna_MaskParent_rna_properties", scope: !2, file: !3, line: 2326, type: !1980, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !89, globals: !1865, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender_bin/source/blender/makesrna/intern/rna_mask_gen.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !16, !47, !56, !65, !77, !84}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !6, line: 71, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15}
!9 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!16 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !6, line: 107, baseType: !7, size: 32, elements: !17)
!17 = !{!18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46}
!18 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!19 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!20 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!21 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!22 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!23 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!25 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!26 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!27 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!28 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!29 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!30 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!31 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!32 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!33 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!34 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!35 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!36 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!37 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!38 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!39 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!40 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!41 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!42 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!43 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!44 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!45 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!46 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RawPropertyType", file: !6, line: 286, baseType: !48, size: 32, elements: !49)
!48 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!49 = !{!50, !51, !52, !53, !54, !55}
!50 = !DIEnumerator(name: "PROP_RAW_UNSET", value: -1)
!51 = !DIEnumerator(name: "PROP_RAW_INT", value: 0)
!52 = !DIEnumerator(name: "PROP_RAW_SHORT", value: 1)
!53 = !DIEnumerator(name: "PROP_RAW_CHAR", value: 2)
!54 = !DIEnumerator(name: "PROP_RAW_DOUBLE", value: 3)
!55 = !DIEnumerator(name: "PROP_RAW_FLOAT", value: 4)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBezTriple_Handle", file: !57, line: 361, baseType: !7, size: 32, elements: !58)
!57 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!58 = !{!59, !60, !61, !62, !63, !64}
!59 = !DIEnumerator(name: "HD_FREE", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "HD_AUTO", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "HD_VECT", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "HD_ALIGN", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "HD_AUTO_ANIM", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "HD_ALIGN_DOUBLESIDE", value: 5, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !66, line: 67, baseType: !7, size: 32, elements: !67)
!66 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!67 = !{!68, !69, !70, !71, !72, !73, !74, !75, !76}
!68 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!71 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!72 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!73 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!74 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!75 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!76 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !78, line: 519, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = !{!80, !81, !82, !83}
!80 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!83 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !85, line: 148, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mask_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!86 = !{!87, !88}
!87 = !DIEnumerator(name: "MASK_PARENT_POINT_TRACK", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "MASK_PARENT_PLANE_TRACK", value: 1, isUnsigned: true)
!89 = !{!90, !1761, !48, !1772, !389, !1779, !124, !1810, !1824, !1844, !211, !1829, !167, !1857, !1858, !1815, !434, !1859, !1860, !1861, !1862, !1863}
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !6, line: 333, baseType: !92)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !93, line: 157, size: 1344, elements: !94)
!93 = !DIFile(filename: "blender/source/blender/makesrna/intern/rna_internal_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!94 = !{!95, !97, !98, !99, !103, !104, !105, !106, !107, !108, !110, !112, !488, !489, !493, !494, !1745, !1746, !1751, !1756, !1757, !1759, !1760}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !92, file: !93, line: 158, baseType: !96, size: 64)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !92, file: !93, line: 158, baseType: !96, size: 64, offset: 64)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !92, file: !93, line: 161, baseType: !48, size: 32, offset: 128)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !92, file: !93, line: 164, baseType: !100, size: 64, offset: 192)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !102)
!102 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !92, file: !93, line: 166, baseType: !48, size: 32, offset: 256)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !92, file: !93, line: 169, baseType: !100, size: 64, offset: 320)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !92, file: !93, line: 171, baseType: !100, size: 64, offset: 384)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !92, file: !93, line: 173, baseType: !48, size: 32, offset: 448)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !92, file: !93, line: 175, baseType: !100, size: 64, offset: 512)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !92, file: !93, line: 178, baseType: !109, size: 32, offset: 576)
!109 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyType", file: !6, line: 79, baseType: !5)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !92, file: !93, line: 180, baseType: !111, size: 32, offset: 608)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertySubType", file: !6, line: 147, baseType: !16)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "getlength", scope: !92, file: !93, line: 182, baseType: !113, size: 64, offset: 640)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropArrayLengthGetFunc", file: !93, line: 73, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DISubroutineType(types: !116)
!116 = !{!48, !117, !434}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 64)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !6, line: 55, size: 192, elements: !119)
!119 = !{!120, !125, !487}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !118, file: !6, line: 58, baseType: !121, size: 64)
!121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !118, file: !6, line: 56, size: 64, elements: !122)
!122 = !{!123}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !121, file: !6, line: 57, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !118, file: !6, line: 60, baseType: !126, size: 64, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !93, line: 339, size: 1600, elements: !128)
!128 = !{!129, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !162, !168, !469, !474, !480, !486}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !127, file: !93, line: 341, baseType: !130, size: 320)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "ContainerRNA", file: !93, line: 135, baseType: !131)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ContainerRNA", file: !93, line: 130, size: 320, elements: !132)
!132 = !{!133, !134, !135, !138}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !93, line: 131, baseType: !124, size: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !131, file: !93, line: 131, baseType: !124, size: 64, offset: 64)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "prophash", scope: !131, file: !93, line: 133, baseType: !136, size: 64, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!137 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !93, line: 46, flags: DIFlagFwdDecl)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !131, file: !93, line: 134, baseType: !139, size: 128, offset: 192)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !140, line: 71, baseType: !141)
!140 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !140, line: 69, size: 128, elements: !142)
!142 = !{!143, !144}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !141, file: !140, line: 70, baseType: !124, size: 64)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !141, file: !140, line: 70, baseType: !124, size: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !127, file: !93, line: 344, baseType: !100, size: 64, offset: 320)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "py_type", scope: !127, file: !93, line: 348, baseType: !124, size: 64, offset: 384)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "blender_type", scope: !127, file: !93, line: 349, baseType: !124, size: 64, offset: 448)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !127, file: !93, line: 352, baseType: !48, size: 32, offset: 512)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !127, file: !93, line: 355, baseType: !100, size: 64, offset: 576)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !127, file: !93, line: 357, baseType: !100, size: 64, offset: 640)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !127, file: !93, line: 359, baseType: !100, size: 64, offset: 704)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !127, file: !93, line: 361, baseType: !48, size: 32, offset: 768)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "nameproperty", scope: !127, file: !93, line: 364, baseType: !90, size: 64, offset: 832)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "iteratorproperty", scope: !127, file: !93, line: 367, baseType: !90, size: 64, offset: 896)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !127, file: !93, line: 370, baseType: !126, size: 64, offset: 960)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !127, file: !93, line: 376, baseType: !126, size: 64, offset: 1024)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "refine", scope: !127, file: !93, line: 379, baseType: !158, size: 64, offset: 1088)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRefineFunc", file: !93, line: 70, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!160 = !DISubroutineType(types: !161)
!161 = !{!126, !117}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !127, file: !93, line: 382, baseType: !163, size: 64, offset: 1152)
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructPathFunc", file: !93, line: 71, baseType: !164)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DISubroutineType(types: !166)
!166 = !{!167, !117}
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !127, file: !93, line: 385, baseType: !169, size: 64, offset: 1216)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRegisterFunc", file: !6, line: 410, baseType: !170)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!171 = !DISubroutineType(types: !172)
!172 = !{!126, !173, !305, !124, !100, !430, !435, !465}
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !175, line: 53, size: 15232, elements: !176)
!175 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!176 = !{!177, !178, !179, !183, !185, !186, !187, !188, !194, !198, !199, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !296, !302}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !174, file: !175, line: 54, baseType: !173, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !174, file: !175, line: 54, baseType: !173, size: 64, offset: 64)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !174, file: !175, line: 55, baseType: !180, size: 8192, offset: 128)
!180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 8192, elements: !181)
!181 = !{!182}
!182 = !DISubrange(count: 1024)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !174, file: !175, line: 56, baseType: !184, size: 16, offset: 8320)
!184 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !174, file: !175, line: 56, baseType: !184, size: 16, offset: 8336)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !174, file: !175, line: 57, baseType: !184, size: 16, offset: 8352)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !174, file: !175, line: 57, baseType: !184, size: 16, offset: 8368)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !174, file: !175, line: 58, baseType: !189, size: 64, offset: 8384)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !190, line: 27, baseType: !191)
!190 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !192, line: 45, baseType: !193)
!192 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!193 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !174, file: !175, line: 59, baseType: !195, size: 128, offset: 8448)
!195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 128, elements: !196)
!196 = !{!197}
!197 = !DISubrange(count: 16)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !174, file: !175, line: 60, baseType: !184, size: 16, offset: 8576)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !174, file: !175, line: 62, baseType: !200, size: 64, offset: 8640)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !202, line: 136, size: 17600, elements: !203)
!202 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!203 = !{!204, !247, !249, !252, !253, !254, !255}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !201, file: !202, line: 137, baseType: !205, size: 960)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !202, line: 130, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !202, line: 117, size: 960, elements: !207)
!207 = !{!208, !209, !210, !212, !213, !217, !218, !219, !220, !221}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !206, file: !202, line: 118, baseType: !124, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !206, file: !202, line: 118, baseType: !124, size: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !206, file: !202, line: 119, baseType: !211, size: 64, offset: 128)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !206, file: !202, line: 120, baseType: !200, size: 64, offset: 192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !206, file: !202, line: 121, baseType: !214, size: 528, offset: 256)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 528, elements: !215)
!215 = !{!216}
!216 = !DISubrange(count: 66)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !206, file: !202, line: 126, baseType: !184, size: 16, offset: 784)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !206, file: !202, line: 127, baseType: !48, size: 32, offset: 800)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !206, file: !202, line: 128, baseType: !48, size: 32, offset: 832)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !206, file: !202, line: 128, baseType: !48, size: 32, offset: 864)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !206, file: !202, line: 129, baseType: !222, size: 64, offset: 896)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !202, line: 75, baseType: !224)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !202, line: 62, size: 1024, elements: !225)
!225 = !{!226, !228, !229, !230, !231, !232, !236, !237, !245, !246}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !224, file: !202, line: 63, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !224, file: !202, line: 63, baseType: !227, size: 64, offset: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !224, file: !202, line: 64, baseType: !102, size: 8, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !224, file: !202, line: 64, baseType: !102, size: 8, offset: 136)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !224, file: !202, line: 65, baseType: !184, size: 16, offset: 144)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !224, file: !202, line: 66, baseType: !233, size: 512, offset: 160)
!233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 512, elements: !234)
!234 = !{!235}
!235 = !DISubrange(count: 64)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !224, file: !202, line: 67, baseType: !48, size: 32, offset: 672)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !224, file: !202, line: 69, baseType: !238, size: 256, offset: 704)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !202, line: 60, baseType: !239)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !202, line: 48, size: 256, elements: !240)
!240 = !{!241, !242, !243, !244}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !239, file: !202, line: 49, baseType: !124, size: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !239, file: !202, line: 58, baseType: !139, size: 128, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !239, file: !202, line: 59, baseType: !48, size: 32, offset: 192)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !239, file: !202, line: 59, baseType: !48, size: 32, offset: 224)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !224, file: !202, line: 70, baseType: !48, size: 32, offset: 960)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !224, file: !202, line: 74, baseType: !48, size: 32, offset: 992)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !201, file: !202, line: 138, baseType: !248, size: 64, offset: 960)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !201, file: !202, line: 139, baseType: !250, size: 64, offset: 1024)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !202, line: 43, flags: DIFlagFwdDecl)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !201, file: !202, line: 140, baseType: !180, size: 8192, offset: 1088)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !201, file: !202, line: 141, baseType: !180, size: 8192, offset: 9280)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !201, file: !202, line: 148, baseType: !200, size: 64, offset: 17472)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !201, file: !202, line: 150, baseType: !256, size: 64, offset: 17536)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !202, line: 45, flags: DIFlagFwdDecl)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !174, file: !175, line: 63, baseType: !139, size: 128, offset: 8704)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !174, file: !175, line: 64, baseType: !139, size: 128, offset: 8832)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !174, file: !175, line: 65, baseType: !139, size: 128, offset: 8960)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !174, file: !175, line: 66, baseType: !139, size: 128, offset: 9088)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !174, file: !175, line: 67, baseType: !139, size: 128, offset: 9216)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !174, file: !175, line: 68, baseType: !139, size: 128, offset: 9344)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !174, file: !175, line: 69, baseType: !139, size: 128, offset: 9472)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !174, file: !175, line: 70, baseType: !139, size: 128, offset: 9600)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !174, file: !175, line: 71, baseType: !139, size: 128, offset: 9728)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !174, file: !175, line: 72, baseType: !139, size: 128, offset: 9856)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !174, file: !175, line: 73, baseType: !139, size: 128, offset: 9984)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !174, file: !175, line: 74, baseType: !139, size: 128, offset: 10112)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !174, file: !175, line: 75, baseType: !139, size: 128, offset: 10240)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !174, file: !175, line: 76, baseType: !139, size: 128, offset: 10368)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !174, file: !175, line: 77, baseType: !139, size: 128, offset: 10496)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !174, file: !175, line: 78, baseType: !139, size: 128, offset: 10624)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !174, file: !175, line: 79, baseType: !139, size: 128, offset: 10752)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !174, file: !175, line: 80, baseType: !139, size: 128, offset: 10880)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !174, file: !175, line: 81, baseType: !139, size: 128, offset: 11008)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !174, file: !175, line: 82, baseType: !139, size: 128, offset: 11136)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !174, file: !175, line: 83, baseType: !139, size: 128, offset: 11264)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !174, file: !175, line: 84, baseType: !139, size: 128, offset: 11392)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !174, file: !175, line: 85, baseType: !139, size: 128, offset: 11520)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !174, file: !175, line: 86, baseType: !139, size: 128, offset: 11648)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !174, file: !175, line: 87, baseType: !139, size: 128, offset: 11776)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !174, file: !175, line: 88, baseType: !139, size: 128, offset: 11904)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !174, file: !175, line: 89, baseType: !139, size: 128, offset: 12032)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !174, file: !175, line: 90, baseType: !139, size: 128, offset: 12160)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !174, file: !175, line: 91, baseType: !139, size: 128, offset: 12288)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !174, file: !175, line: 92, baseType: !139, size: 128, offset: 12416)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !174, file: !175, line: 93, baseType: !139, size: 128, offset: 12544)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !174, file: !175, line: 94, baseType: !139, size: 128, offset: 12672)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !174, file: !175, line: 95, baseType: !139, size: 128, offset: 12800)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !174, file: !175, line: 96, baseType: !139, size: 128, offset: 12928)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !174, file: !175, line: 98, baseType: !293, size: 2048, offset: 13056)
!293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 2048, elements: !294)
!294 = !{!295}
!295 = !DISubrange(count: 256)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !174, file: !175, line: 101, baseType: !297, size: 64, offset: 15104)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !299, line: 58, size: 32, elements: !300)
!299 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!300 = !{!301}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !298, file: !299, line: 59, baseType: !48, size: 32)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !174, file: !175, line: 103, baseType: !303, size: 64, offset: 15168)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !175, line: 51, flags: DIFlagFwdDecl)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !66, line: 106, size: 320, elements: !307)
!307 = !{!308, !309, !310, !311, !312, !313}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !306, file: !66, line: 107, baseType: !139, size: 128)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !306, file: !66, line: 108, baseType: !48, size: 32, offset: 128)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !306, file: !66, line: 109, baseType: !48, size: 32, offset: 160)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !306, file: !66, line: 110, baseType: !48, size: 32, offset: 192)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !306, file: !66, line: 110, baseType: !48, size: 32, offset: 224)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !306, file: !66, line: 111, baseType: !314, size: 64, offset: 256)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !316, line: 490, size: 768, elements: !317)
!316 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!317 = !{!318, !319, !320, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !315, file: !316, line: 491, baseType: !314, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !315, file: !316, line: 491, baseType: !314, size: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !315, file: !316, line: 493, baseType: !321, size: 64, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !66, line: 169, size: 2048, elements: !323)
!323 = !{!324, !325, !326, !327, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !396, !399, !413, !414, !415, !416, !417, !418, !419, !420}
!324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !322, file: !66, line: 170, baseType: !321, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !322, file: !66, line: 170, baseType: !321, size: 64, offset: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !322, file: !66, line: 172, baseType: !124, size: 64, offset: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !322, file: !66, line: 174, baseType: !328, size: 64, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !330, line: 41, flags: DIFlagFwdDecl)
!330 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!331 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !322, file: !66, line: 175, baseType: !328, size: 64, offset: 256)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !322, file: !66, line: 176, baseType: !233, size: 512, offset: 320)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !322, file: !66, line: 178, baseType: !184, size: 16, offset: 832)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !322, file: !66, line: 178, baseType: !184, size: 16, offset: 848)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !322, file: !66, line: 178, baseType: !184, size: 16, offset: 864)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !322, file: !66, line: 178, baseType: !184, size: 16, offset: 880)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !322, file: !66, line: 179, baseType: !184, size: 16, offset: 896)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !322, file: !66, line: 180, baseType: !184, size: 16, offset: 912)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !322, file: !66, line: 181, baseType: !184, size: 16, offset: 928)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !322, file: !66, line: 182, baseType: !184, size: 16, offset: 944)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !322, file: !66, line: 183, baseType: !184, size: 16, offset: 960)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !322, file: !66, line: 184, baseType: !184, size: 16, offset: 976)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !322, file: !66, line: 185, baseType: !184, size: 16, offset: 992)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !322, file: !66, line: 186, baseType: !184, size: 16, offset: 1008)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !322, file: !66, line: 188, baseType: !48, size: 32, offset: 1024)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !322, file: !66, line: 190, baseType: !184, size: 16, offset: 1056)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !322, file: !66, line: 191, baseType: !184, size: 16, offset: 1072)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !322, file: !66, line: 194, baseType: !349, size: 64, offset: 1088)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !316, line: 421, size: 960, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !362, !366, !367, !368, !369, !370, !371, !372, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !392, !393, !394, !395}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !350, file: !316, line: 422, baseType: !349, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !350, file: !316, line: 422, baseType: !349, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !350, file: !316, line: 424, baseType: !184, size: 16, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !350, file: !316, line: 425, baseType: !184, size: 16, offset: 144)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !350, file: !316, line: 426, baseType: !48, size: 32, offset: 160)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !350, file: !316, line: 426, baseType: !48, size: 32, offset: 192)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !350, file: !316, line: 427, baseType: !359, size: 64, offset: 224)
!359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 64, elements: !360)
!360 = !{!361}
!361 = !DISubrange(count: 2)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !350, file: !316, line: 428, baseType: !363, size: 48, offset: 288)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 48, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 6)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !350, file: !316, line: 431, baseType: !102, size: 8, offset: 336)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !350, file: !316, line: 432, baseType: !102, size: 8, offset: 344)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !350, file: !316, line: 435, baseType: !184, size: 16, offset: 352)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !350, file: !316, line: 436, baseType: !184, size: 16, offset: 368)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !350, file: !316, line: 437, baseType: !48, size: 32, offset: 384)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !350, file: !316, line: 437, baseType: !48, size: 32, offset: 416)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !350, file: !316, line: 438, baseType: !373, size: 64, offset: 448)
!373 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !350, file: !316, line: 439, baseType: !48, size: 32, offset: 512)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !350, file: !316, line: 439, baseType: !48, size: 32, offset: 544)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !350, file: !316, line: 442, baseType: !184, size: 16, offset: 576)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !350, file: !316, line: 442, baseType: !184, size: 16, offset: 592)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !350, file: !316, line: 442, baseType: !184, size: 16, offset: 608)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !350, file: !316, line: 442, baseType: !184, size: 16, offset: 624)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !350, file: !316, line: 443, baseType: !184, size: 16, offset: 640)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !350, file: !316, line: 446, baseType: !184, size: 16, offset: 656)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !350, file: !316, line: 449, baseType: !100, size: 64, offset: 704)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !350, file: !316, line: 452, baseType: !384, size: 64, offset: 768)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !316, line: 463, size: 128, elements: !386)
!386 = !{!387, !388, !390, !391}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !385, file: !316, line: 464, baseType: !48, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !385, file: !316, line: 465, baseType: !389, size: 32, offset: 32)
!389 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !385, file: !316, line: 466, baseType: !389, size: 32, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !385, file: !316, line: 467, baseType: !389, size: 32, offset: 96)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !350, file: !316, line: 455, baseType: !184, size: 16, offset: 832)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !350, file: !316, line: 456, baseType: !184, size: 16, offset: 848)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !350, file: !316, line: 457, baseType: !48, size: 32, offset: 864)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !350, file: !316, line: 458, baseType: !124, size: 64, offset: 896)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !322, file: !66, line: 196, baseType: !397, size: 64, offset: 1152)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !66, line: 55, flags: DIFlagFwdDecl)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !322, file: !66, line: 198, baseType: !400, size: 64, offset: 1216)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !316, line: 398, size: 448, elements: !402)
!402 = !{!403, !404, !405, !406, !407, !408, !409, !410, !411, !412}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !401, file: !316, line: 399, baseType: !400, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !401, file: !316, line: 399, baseType: !400, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !401, file: !316, line: 400, baseType: !48, size: 32, offset: 128)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !401, file: !316, line: 401, baseType: !48, size: 32, offset: 160)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !401, file: !316, line: 402, baseType: !48, size: 32, offset: 192)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !401, file: !316, line: 403, baseType: !48, size: 32, offset: 224)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !401, file: !316, line: 404, baseType: !48, size: 32, offset: 256)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !401, file: !316, line: 405, baseType: !48, size: 32, offset: 288)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !401, file: !316, line: 407, baseType: !124, size: 64, offset: 320)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !401, file: !316, line: 414, baseType: !124, size: 64, offset: 384)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !322, file: !66, line: 200, baseType: !48, size: 32, offset: 1280)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !322, file: !66, line: 200, baseType: !48, size: 32, offset: 1312)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !322, file: !66, line: 201, baseType: !124, size: 64, offset: 1344)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !322, file: !66, line: 203, baseType: !139, size: 128, offset: 1408)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !322, file: !66, line: 204, baseType: !139, size: 128, offset: 1536)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !322, file: !66, line: 205, baseType: !139, size: 128, offset: 1664)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !322, file: !66, line: 207, baseType: !139, size: 128, offset: 1792)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !322, file: !66, line: 208, baseType: !139, size: 128, offset: 1920)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !315, file: !316, line: 495, baseType: !373, size: 64, offset: 192)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !315, file: !316, line: 496, baseType: !48, size: 32, offset: 256)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !315, file: !316, line: 497, baseType: !124, size: 64, offset: 320)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !315, file: !316, line: 499, baseType: !373, size: 64, offset: 384)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !315, file: !316, line: 500, baseType: !373, size: 64, offset: 448)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !315, file: !316, line: 502, baseType: !373, size: 64, offset: 512)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !315, file: !316, line: 503, baseType: !373, size: 64, offset: 576)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !315, file: !316, line: 504, baseType: !373, size: 64, offset: 640)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !315, file: !316, line: 505, baseType: !48, size: 32, offset: 704)
!430 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructValidateFunc", file: !6, line: 407, baseType: !431)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DISubroutineType(types: !433)
!433 = !{!48, !117, !124, !434}
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !48, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !6, line: 408, baseType: !436)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DISubroutineType(types: !438)
!438 = !{!48, !439, !117, !441, !455}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !6, line: 44, flags: DIFlagFwdDecl)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !93, line: 137, size: 640, elements: !443)
!443 = !{!444, !445, !446, !447, !448, !464}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "cont", scope: !442, file: !93, line: 139, baseType: !130, size: 320)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !442, file: !93, line: 142, baseType: !100, size: 64, offset: 320)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !442, file: !93, line: 144, baseType: !48, size: 32, offset: 384)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !442, file: !93, line: 147, baseType: !100, size: 64, offset: 448)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !442, file: !93, line: 150, baseType: !449, size: 64, offset: 512)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "CallFunc", file: !6, line: 388, baseType: !450)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{null, !439, !305, !453, !455}
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !6, line: 62, baseType: !118)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !6, line: 348, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !6, line: 337, size: 256, elements: !458)
!458 = !{!459, !460, !461, !462, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !457, file: !6, line: 339, baseType: !124, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !457, file: !6, line: 342, baseType: !441, size: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !457, file: !6, line: 345, baseType: !48, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !457, file: !6, line: 347, baseType: !48, size: 32, offset: 160)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !457, file: !6, line: 347, baseType: !48, size: 32, offset: 192)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "c_ret", scope: !442, file: !93, line: 154, baseType: !90, size: 64, offset: 576)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !6, line: 409, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !124}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "unreg", scope: !127, file: !93, line: 386, baseType: !470, size: 64, offset: 1280)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructUnregisterFunc", file: !6, line: 414, baseType: !471)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{null, !173, !126}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "instance", scope: !127, file: !93, line: 387, baseType: !475, size: 64, offset: 1344)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructInstanceFunc", file: !6, line: 415, baseType: !476)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{!479, !453}
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "idproperties", scope: !127, file: !93, line: 390, baseType: !481, size: 64, offset: 1408)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertiesFunc", file: !93, line: 69, baseType: !482)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!227, !117, !485}
!485 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "functions", scope: !127, file: !93, line: 393, baseType: !139, size: 128, offset: 1472)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !118, file: !6, line: 61, baseType: !124, size: 64, offset: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "arraydimension", scope: !92, file: !93, line: 184, baseType: !7, size: 32, offset: 704)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "arraylength", scope: !92, file: !93, line: 186, baseType: !490, size: 96, offset: 736)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 3)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "totarraylength", scope: !92, file: !93, line: 187, baseType: !7, size: 32, offset: 832)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !92, file: !93, line: 190, baseType: !495, size: 64, offset: 896)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "UpdateFunc", file: !93, line: 64, baseType: !496)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DISubroutineType(types: !498)
!498 = !{null, !173, !499, !117}
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !501, line: 1216, size: 39680, elements: !502)
!501 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!502 = !{!503, !504, !507, !786, !789, !790, !791, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !817, !820, !823, !1118, !1121, !1417, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1439, !1440, !1441, !1442, !1443, !1451, !1518, !1525, !1526, !1533, !1737, !1738, !1739, !1740, !1741, !1742}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !500, file: !501, line: 1217, baseType: !205, size: 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !500, file: !501, line: 1218, baseType: !505, size: 64, offset: 960)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !501, line: 58, flags: DIFlagFwdDecl)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !500, file: !501, line: 1220, baseType: !508, size: 64, offset: 1024)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !78, line: 115, size: 11392, elements: !510)
!510 = !{!511, !512, !513, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !530, !540, !554, !555, !595, !596, !599, !600, !616, !617, !618, !619, !620, !621, !622, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !641, !642, !643, !644, !645, !646, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !706, !707, !708, !709, !710, !711, !712, !713, !714, !717, !720, !724, !725, !726, !727, !728, !731, !734, !737, !738, !739, !740, !741, !742, !743, !744, !746, !749, !752, !754, !774, !775}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !509, file: !78, line: 116, baseType: !205, size: 960)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !509, file: !78, line: 117, baseType: !505, size: 64, offset: 960)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !509, file: !78, line: 119, baseType: !514, size: 64, offset: 1024)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !78, line: 57, flags: DIFlagFwdDecl)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !509, file: !78, line: 121, baseType: !184, size: 16, offset: 1088)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !509, file: !78, line: 121, baseType: !184, size: 16, offset: 1104)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !509, file: !78, line: 122, baseType: !48, size: 32, offset: 1120)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !509, file: !78, line: 122, baseType: !48, size: 32, offset: 1152)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !509, file: !78, line: 122, baseType: !48, size: 32, offset: 1184)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !509, file: !78, line: 123, baseType: !233, size: 512, offset: 1216)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !509, file: !78, line: 124, baseType: !508, size: 64, offset: 1728)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !509, file: !78, line: 124, baseType: !508, size: 64, offset: 1792)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !509, file: !78, line: 127, baseType: !508, size: 64, offset: 1856)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !509, file: !78, line: 127, baseType: !508, size: 64, offset: 1920)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !509, file: !78, line: 127, baseType: !508, size: 64, offset: 1984)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !509, file: !78, line: 128, baseType: !528, size: 64, offset: 2048)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !57, line: 44, flags: DIFlagFwdDecl)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !509, file: !78, line: 130, baseType: !531, size: 64, offset: 2112)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !78, line: 97, size: 832, elements: !533)
!533 = !{!534, !538, !539}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !532, file: !78, line: 98, baseType: !535, size: 768)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 768, elements: !536)
!536 = !{!537, !492}
!537 = !DISubrange(count: 8)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !532, file: !78, line: 99, baseType: !48, size: 32, offset: 768)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !532, file: !78, line: 99, baseType: !48, size: 32, offset: 800)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !509, file: !78, line: 131, baseType: !541, size: 64, offset: 2176)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !543, line: 486, size: 1600, elements: !544)
!543 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!544 = !{!545, !546, !547, !548, !549, !550, !551, !552, !553}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !542, file: !543, line: 487, baseType: !205, size: 960)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !542, file: !543, line: 489, baseType: !139, size: 128, offset: 960)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !542, file: !543, line: 490, baseType: !139, size: 128, offset: 1088)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !542, file: !543, line: 491, baseType: !139, size: 128, offset: 1216)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !542, file: !543, line: 492, baseType: !139, size: 128, offset: 1344)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !542, file: !543, line: 494, baseType: !48, size: 32, offset: 1472)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !542, file: !543, line: 495, baseType: !48, size: 32, offset: 1504)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !542, file: !543, line: 497, baseType: !48, size: 32, offset: 1536)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !542, file: !543, line: 498, baseType: !48, size: 32, offset: 1568)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !509, file: !78, line: 132, baseType: !541, size: 64, offset: 2240)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !509, file: !78, line: 133, baseType: !556, size: 64, offset: 2304)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !543, line: 334, size: 1728, elements: !558)
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !568, !569, !570, !571, !572, !573, !574, !594}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !557, file: !543, line: 335, baseType: !139, size: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !557, file: !543, line: 336, baseType: !136, size: 64, offset: 128)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !557, file: !543, line: 338, baseType: !184, size: 16, offset: 192)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !557, file: !543, line: 338, baseType: !184, size: 16, offset: 208)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !557, file: !543, line: 339, baseType: !7, size: 32, offset: 224)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !557, file: !543, line: 340, baseType: !48, size: 32, offset: 256)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !557, file: !543, line: 342, baseType: !389, size: 32, offset: 288)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !557, file: !543, line: 343, baseType: !567, size: 96, offset: 320)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 96, elements: !491)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !557, file: !543, line: 344, baseType: !567, size: 96, offset: 416)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !557, file: !543, line: 347, baseType: !139, size: 128, offset: 512)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !557, file: !543, line: 349, baseType: !48, size: 32, offset: 640)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !557, file: !543, line: 350, baseType: !48, size: 32, offset: 672)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !557, file: !543, line: 351, baseType: !124, size: 64, offset: 704)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !557, file: !543, line: 352, baseType: !124, size: 64, offset: 768)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !557, file: !543, line: 354, baseType: !575, size: 384, offset: 832)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !543, line: 116, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !543, line: 94, size: 384, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !576, file: !543, line: 96, baseType: !48, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !576, file: !543, line: 96, baseType: !48, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !576, file: !543, line: 97, baseType: !48, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !576, file: !543, line: 97, baseType: !48, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !576, file: !543, line: 99, baseType: !184, size: 16, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !576, file: !543, line: 100, baseType: !184, size: 16, offset: 144)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !576, file: !543, line: 102, baseType: !184, size: 16, offset: 160)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !576, file: !543, line: 105, baseType: !184, size: 16, offset: 176)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !576, file: !543, line: 108, baseType: !184, size: 16, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !576, file: !543, line: 109, baseType: !184, size: 16, offset: 208)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !576, file: !543, line: 111, baseType: !184, size: 16, offset: 224)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !576, file: !543, line: 112, baseType: !184, size: 16, offset: 240)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !576, file: !543, line: 114, baseType: !48, size: 32, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !576, file: !543, line: 114, baseType: !48, size: 32, offset: 288)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !576, file: !543, line: 115, baseType: !48, size: 32, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !576, file: !543, line: 115, baseType: !48, size: 32, offset: 352)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !557, file: !543, line: 355, baseType: !233, size: 512, offset: 1216)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !509, file: !78, line: 134, baseType: !124, size: 64, offset: 2368)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !509, file: !78, line: 136, baseType: !597, size: 64, offset: 2432)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !501, line: 61, flags: DIFlagFwdDecl)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !509, file: !78, line: 138, baseType: !575, size: 384, offset: 2496)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !509, file: !78, line: 139, baseType: !601, size: 64, offset: 2880)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !543, line: 80, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !543, line: 72, size: 192, elements: !604)
!604 = !{!605, !612, !613, !614, !615}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !603, file: !543, line: 73, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !543, line: 59, baseType: !608)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !543, line: 56, size: 128, elements: !609)
!609 = !{!610, !611}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !608, file: !543, line: 57, baseType: !567, size: 96)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !608, file: !543, line: 58, baseType: !48, size: 32, offset: 96)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !603, file: !543, line: 74, baseType: !48, size: 32, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !603, file: !543, line: 76, baseType: !48, size: 32, offset: 96)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !603, file: !543, line: 77, baseType: !48, size: 32, offset: 128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !603, file: !543, line: 79, baseType: !48, size: 32, offset: 160)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !509, file: !78, line: 141, baseType: !139, size: 128, offset: 2944)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !509, file: !78, line: 142, baseType: !139, size: 128, offset: 3072)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !509, file: !78, line: 143, baseType: !139, size: 128, offset: 3200)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !509, file: !78, line: 144, baseType: !139, size: 128, offset: 3328)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !509, file: !78, line: 146, baseType: !48, size: 32, offset: 3456)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !509, file: !78, line: 147, baseType: !48, size: 32, offset: 3488)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !509, file: !78, line: 150, baseType: !623, size: 64, offset: 3520)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !501, line: 179, flags: DIFlagFwdDecl)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !509, file: !78, line: 151, baseType: !167, size: 64, offset: 3584)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !509, file: !78, line: 152, baseType: !48, size: 32, offset: 3648)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !509, file: !78, line: 153, baseType: !48, size: 32, offset: 3680)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !509, file: !78, line: 156, baseType: !567, size: 96, offset: 3712)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !509, file: !78, line: 156, baseType: !567, size: 96, offset: 3808)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !509, file: !78, line: 156, baseType: !567, size: 96, offset: 3904)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !509, file: !78, line: 157, baseType: !567, size: 96, offset: 4000)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !509, file: !78, line: 158, baseType: !567, size: 96, offset: 4096)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !509, file: !78, line: 159, baseType: !567, size: 96, offset: 4192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !509, file: !78, line: 160, baseType: !567, size: 96, offset: 4288)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !509, file: !78, line: 160, baseType: !567, size: 96, offset: 4384)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !509, file: !78, line: 161, baseType: !638, size: 128, offset: 4480)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 128, elements: !639)
!639 = !{!640}
!640 = !DISubrange(count: 4)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !509, file: !78, line: 161, baseType: !638, size: 128, offset: 4608)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !509, file: !78, line: 162, baseType: !567, size: 96, offset: 4736)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !509, file: !78, line: 162, baseType: !567, size: 96, offset: 4832)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !509, file: !78, line: 163, baseType: !389, size: 32, offset: 4928)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !509, file: !78, line: 163, baseType: !389, size: 32, offset: 4960)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !509, file: !78, line: 164, baseType: !647, size: 512, offset: 4992)
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 512, elements: !648)
!648 = !{!640, !640}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !509, file: !78, line: 165, baseType: !647, size: 512, offset: 5504)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !509, file: !78, line: 166, baseType: !647, size: 512, offset: 6016)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !509, file: !78, line: 167, baseType: !647, size: 512, offset: 6528)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !509, file: !78, line: 176, baseType: !647, size: 512, offset: 7040)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !509, file: !78, line: 178, baseType: !7, size: 32, offset: 7552)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !509, file: !78, line: 180, baseType: !184, size: 16, offset: 7584)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !509, file: !78, line: 181, baseType: !184, size: 16, offset: 7600)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !509, file: !78, line: 183, baseType: !184, size: 16, offset: 7616)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !509, file: !78, line: 183, baseType: !184, size: 16, offset: 7632)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !509, file: !78, line: 184, baseType: !184, size: 16, offset: 7648)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !509, file: !78, line: 184, baseType: !184, size: 16, offset: 7664)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !509, file: !78, line: 185, baseType: !184, size: 16, offset: 7680)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !509, file: !78, line: 186, baseType: !184, size: 16, offset: 7696)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !509, file: !78, line: 187, baseType: !184, size: 16, offset: 7712)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !509, file: !78, line: 188, baseType: !102, size: 8, offset: 7728)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !509, file: !78, line: 189, baseType: !102, size: 8, offset: 7736)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !509, file: !78, line: 192, baseType: !48, size: 32, offset: 7744)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !509, file: !78, line: 192, baseType: !48, size: 32, offset: 7776)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !509, file: !78, line: 192, baseType: !48, size: 32, offset: 7808)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !509, file: !78, line: 192, baseType: !48, size: 32, offset: 7840)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !509, file: !78, line: 194, baseType: !48, size: 32, offset: 7872)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !509, file: !78, line: 202, baseType: !389, size: 32, offset: 7904)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !509, file: !78, line: 202, baseType: !389, size: 32, offset: 7936)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !509, file: !78, line: 202, baseType: !389, size: 32, offset: 7968)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !509, file: !78, line: 211, baseType: !389, size: 32, offset: 8000)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !509, file: !78, line: 212, baseType: !389, size: 32, offset: 8032)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !509, file: !78, line: 213, baseType: !389, size: 32, offset: 8064)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !509, file: !78, line: 214, baseType: !389, size: 32, offset: 8096)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !509, file: !78, line: 215, baseType: !389, size: 32, offset: 8128)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !509, file: !78, line: 216, baseType: !389, size: 32, offset: 8160)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !509, file: !78, line: 219, baseType: !389, size: 32, offset: 8192)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !509, file: !78, line: 220, baseType: !389, size: 32, offset: 8224)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !509, file: !78, line: 221, baseType: !389, size: 32, offset: 8256)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !509, file: !78, line: 224, baseType: !683, size: 16, offset: 8288)
!683 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !509, file: !78, line: 224, baseType: !683, size: 16, offset: 8304)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !509, file: !78, line: 226, baseType: !184, size: 16, offset: 8320)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !509, file: !78, line: 228, baseType: !102, size: 8, offset: 8336)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !509, file: !78, line: 229, baseType: !102, size: 8, offset: 8344)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !509, file: !78, line: 231, baseType: !184, size: 16, offset: 8352)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !509, file: !78, line: 232, baseType: !102, size: 8, offset: 8368)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !509, file: !78, line: 233, baseType: !102, size: 8, offset: 8376)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !509, file: !78, line: 234, baseType: !389, size: 32, offset: 8384)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !509, file: !78, line: 235, baseType: !389, size: 32, offset: 8416)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !509, file: !78, line: 237, baseType: !139, size: 128, offset: 8448)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !509, file: !78, line: 238, baseType: !139, size: 128, offset: 8576)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !509, file: !78, line: 239, baseType: !139, size: 128, offset: 8704)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !509, file: !78, line: 240, baseType: !139, size: 128, offset: 8832)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !509, file: !78, line: 242, baseType: !389, size: 32, offset: 8960)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !509, file: !78, line: 244, baseType: !184, size: 16, offset: 8992)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !509, file: !78, line: 245, baseType: !683, size: 16, offset: 9008)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !509, file: !78, line: 246, baseType: !638, size: 128, offset: 9024)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !509, file: !78, line: 248, baseType: !48, size: 32, offset: 9152)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !509, file: !78, line: 249, baseType: !48, size: 32, offset: 9184)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !509, file: !78, line: 251, baseType: !704, size: 64, offset: 9216)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !78, line: 251, flags: DIFlagFwdDecl)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !509, file: !78, line: 253, baseType: !102, size: 8, offset: 9280)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !509, file: !78, line: 254, baseType: !102, size: 8, offset: 9288)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !509, file: !78, line: 255, baseType: !184, size: 16, offset: 9296)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !509, file: !78, line: 256, baseType: !567, size: 96, offset: 9312)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !509, file: !78, line: 258, baseType: !139, size: 128, offset: 9408)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !509, file: !78, line: 259, baseType: !139, size: 128, offset: 9536)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !509, file: !78, line: 260, baseType: !139, size: 128, offset: 9664)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !509, file: !78, line: 261, baseType: !139, size: 128, offset: 9792)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !509, file: !78, line: 263, baseType: !715, size: 64, offset: 9920)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !78, line: 52, flags: DIFlagFwdDecl)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !509, file: !78, line: 264, baseType: !718, size: 64, offset: 9984)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !78, line: 53, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !509, file: !78, line: 265, baseType: !721, size: 64, offset: 10048)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !723, line: 43, flags: DIFlagFwdDecl)
!723 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!724 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !509, file: !78, line: 267, baseType: !102, size: 8, offset: 10112)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !509, file: !78, line: 268, baseType: !102, size: 8, offset: 10120)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !509, file: !78, line: 269, baseType: !184, size: 16, offset: 10128)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !509, file: !78, line: 270, baseType: !389, size: 32, offset: 10144)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !509, file: !78, line: 272, baseType: !729, size: 64, offset: 10176)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !78, line: 54, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !509, file: !78, line: 275, baseType: !732, size: 64, offset: 10240)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !78, line: 275, flags: DIFlagFwdDecl)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !509, file: !78, line: 277, baseType: !735, size: 64, offset: 10304)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !78, line: 56, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !509, file: !78, line: 277, baseType: !735, size: 64, offset: 10368)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !509, file: !78, line: 278, baseType: !189, size: 64, offset: 10432)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !509, file: !78, line: 279, baseType: !189, size: 64, offset: 10496)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !509, file: !78, line: 280, baseType: !7, size: 32, offset: 10560)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !509, file: !78, line: 281, baseType: !7, size: 32, offset: 10592)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !509, file: !78, line: 283, baseType: !139, size: 128, offset: 10624)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !509, file: !78, line: 284, baseType: !139, size: 128, offset: 10752)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !509, file: !78, line: 285, baseType: !745, size: 64, offset: 10880)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !509, file: !78, line: 287, baseType: !747, size: 64, offset: 10944)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !78, line: 59, flags: DIFlagFwdDecl)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !509, file: !78, line: 288, baseType: !750, size: 64, offset: 11008)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !78, line: 288, flags: DIFlagFwdDecl)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !509, file: !78, line: 290, baseType: !753, size: 64, offset: 11072)
!753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 64, elements: !360)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !509, file: !78, line: 291, baseType: !755, size: 64, offset: 11136)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !757, line: 65, baseType: !758)
!757 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !757, line: 50, size: 320, elements: !759)
!759 = !{!760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !758, file: !757, line: 51, baseType: !499, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !758, file: !757, line: 53, baseType: !48, size: 32, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !758, file: !757, line: 54, baseType: !48, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !758, file: !757, line: 55, baseType: !48, size: 32, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !758, file: !757, line: 55, baseType: !48, size: 32, offset: 160)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !758, file: !757, line: 56, baseType: !102, size: 8, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !758, file: !757, line: 56, baseType: !102, size: 8, offset: 200)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !758, file: !757, line: 57, baseType: !102, size: 8, offset: 208)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !758, file: !757, line: 57, baseType: !102, size: 8, offset: 216)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !758, file: !757, line: 59, baseType: !184, size: 16, offset: 224)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !758, file: !757, line: 59, baseType: !184, size: 16, offset: 240)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !758, file: !757, line: 59, baseType: !184, size: 16, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !758, file: !757, line: 61, baseType: !184, size: 16, offset: 272)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !758, file: !757, line: 63, baseType: !48, size: 32, offset: 288)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !509, file: !78, line: 293, baseType: !139, size: 128, offset: 11200)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !509, file: !78, line: 294, baseType: !776, size: 64, offset: 11328)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !78, line: 113, baseType: !778)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !78, line: 108, size: 256, elements: !779)
!779 = !{!780, !782, !783, !784, !785}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !778, file: !78, line: 109, baseType: !781, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !778, file: !78, line: 109, baseType: !781, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !778, file: !78, line: 110, baseType: !508, size: 64, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !778, file: !78, line: 111, baseType: !48, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !778, file: !78, line: 112, baseType: !389, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !500, file: !501, line: 1221, baseType: !787, size: 64, offset: 1088)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !501, line: 52, flags: DIFlagFwdDecl)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !500, file: !501, line: 1223, baseType: !499, size: 64, offset: 1152)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !500, file: !501, line: 1225, baseType: !139, size: 128, offset: 1216)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !500, file: !501, line: 1226, baseType: !792, size: 64, offset: 1344)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !501, line: 69, size: 320, elements: !794)
!794 = !{!795, !796, !797, !798, !799, !800, !801, !802}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !793, file: !501, line: 70, baseType: !792, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !793, file: !501, line: 70, baseType: !792, size: 64, offset: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !793, file: !501, line: 71, baseType: !7, size: 32, offset: 128)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !793, file: !501, line: 71, baseType: !7, size: 32, offset: 160)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !793, file: !501, line: 72, baseType: !48, size: 32, offset: 192)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !793, file: !501, line: 73, baseType: !184, size: 16, offset: 224)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !793, file: !501, line: 73, baseType: !184, size: 16, offset: 240)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !793, file: !501, line: 74, baseType: !508, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !500, file: !501, line: 1227, baseType: !508, size: 64, offset: 1408)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !500, file: !501, line: 1229, baseType: !567, size: 96, offset: 1472)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !500, file: !501, line: 1230, baseType: !567, size: 96, offset: 1568)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !500, file: !501, line: 1231, baseType: !567, size: 96, offset: 1664)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !500, file: !501, line: 1231, baseType: !567, size: 96, offset: 1760)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !500, file: !501, line: 1233, baseType: !7, size: 32, offset: 1856)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !500, file: !501, line: 1234, baseType: !48, size: 32, offset: 1888)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !500, file: !501, line: 1235, baseType: !7, size: 32, offset: 1920)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !500, file: !501, line: 1237, baseType: !184, size: 16, offset: 1952)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !500, file: !501, line: 1239, baseType: !102, size: 8, offset: 1968)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !500, file: !501, line: 1240, baseType: !814, size: 8, offset: 1976)
!814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 8, elements: !815)
!815 = !{!816}
!816 = !DISubrange(count: 1)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !500, file: !501, line: 1242, baseType: !818, size: 64, offset: 1984)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !501, line: 57, flags: DIFlagFwdDecl)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !500, file: !501, line: 1244, baseType: !821, size: 64, offset: 2048)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !501, line: 59, flags: DIFlagFwdDecl)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !500, file: !501, line: 1246, baseType: !824, size: 64, offset: 2112)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !501, line: 1067, size: 5184, elements: !826)
!826 = !{!827, !857, !858, !873, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !895, !990, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1101}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !825, file: !501, line: 1068, baseType: !828, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !501, line: 934, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !501, line: 925, size: 576, elements: !831)
!831 = !{!832, !848, !849, !850, !851, !853, !856}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !830, file: !501, line: 926, baseType: !833, size: 320)
!833 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !501, line: 830, baseType: !834)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !501, line: 813, size: 320, elements: !835)
!835 = !{!836, !839, !842, !843, !845, !846, !847}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !834, file: !501, line: 814, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !501, line: 51, flags: DIFlagFwdDecl)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !834, file: !501, line: 815, baseType: !840, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !501, line: 815, flags: DIFlagFwdDecl)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !834, file: !501, line: 818, baseType: !124, size: 64, offset: 128)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !834, file: !501, line: 819, baseType: !844, size: 32, offset: 192)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 32, elements: !639)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !834, file: !501, line: 822, baseType: !48, size: 32, offset: 224)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !834, file: !501, line: 826, baseType: !48, size: 32, offset: 256)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !834, file: !501, line: 829, baseType: !48, size: 32, offset: 288)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !830, file: !501, line: 928, baseType: !184, size: 16, offset: 320)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !830, file: !501, line: 928, baseType: !184, size: 16, offset: 336)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !830, file: !501, line: 929, baseType: !48, size: 32, offset: 352)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !830, file: !501, line: 930, baseType: !852, size: 64, offset: 384)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !830, file: !501, line: 931, baseType: !854, size: 64, offset: 448)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !501, line: 931, flags: DIFlagFwdDecl)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !830, file: !501, line: 933, baseType: !124, size: 64, offset: 512)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !825, file: !501, line: 1069, baseType: !828, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !825, file: !501, line: 1070, baseType: !859, size: 64, offset: 128)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !501, line: 916, baseType: !861)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !501, line: 891, size: 704, elements: !862)
!862 = !{!863, !864, !865, !867, !868, !869, !870, !871, !872}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !861, file: !501, line: 892, baseType: !833, size: 320)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !861, file: !501, line: 896, baseType: !48, size: 32, offset: 320)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !861, file: !501, line: 900, baseType: !866, size: 96, offset: 352)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !48, size: 96, elements: !491)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !861, file: !501, line: 903, baseType: !389, size: 32, offset: 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !861, file: !501, line: 906, baseType: !48, size: 32, offset: 480)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !861, file: !501, line: 909, baseType: !389, size: 32, offset: 512)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !861, file: !501, line: 912, baseType: !389, size: 32, offset: 544)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !861, file: !501, line: 914, baseType: !508, size: 64, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !861, file: !501, line: 915, baseType: !124, size: 64, offset: 640)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !825, file: !501, line: 1071, baseType: !874, size: 64, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !501, line: 920, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !501, line: 918, size: 320, elements: !877)
!877 = !{!878}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !876, file: !501, line: 919, baseType: !833, size: 320)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !825, file: !501, line: 1075, baseType: !389, size: 32, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !825, file: !501, line: 1077, baseType: !389, size: 32, offset: 288)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !825, file: !501, line: 1078, baseType: !389, size: 32, offset: 320)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !825, file: !501, line: 1079, baseType: !184, size: 16, offset: 352)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !825, file: !501, line: 1082, baseType: !184, size: 16, offset: 368)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !825, file: !501, line: 1085, baseType: !102, size: 8, offset: 384)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !825, file: !501, line: 1086, baseType: !102, size: 8, offset: 392)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !825, file: !501, line: 1087, baseType: !102, size: 8, offset: 400)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !825, file: !501, line: 1088, baseType: !102, size: 8, offset: 408)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !825, file: !501, line: 1090, baseType: !389, size: 32, offset: 416)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !825, file: !501, line: 1093, baseType: !184, size: 16, offset: 448)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !825, file: !501, line: 1096, baseType: !102, size: 8, offset: 464)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !825, file: !501, line: 1098, baseType: !892, size: 40, offset: 472)
!892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 40, elements: !893)
!893 = !{!894}
!894 = !DISubrange(count: 5)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !825, file: !501, line: 1101, baseType: !896, size: 832, offset: 512)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !501, line: 836, size: 832, elements: !897)
!897 = !{!898, !899, !900, !901, !902, !903, !905, !906, !907, !986, !987, !988, !989}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !896, file: !501, line: 837, baseType: !833, size: 320)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !896, file: !501, line: 839, baseType: !184, size: 16, offset: 320)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !896, file: !501, line: 839, baseType: !184, size: 16, offset: 336)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !896, file: !501, line: 842, baseType: !184, size: 16, offset: 352)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !896, file: !501, line: 842, baseType: !184, size: 16, offset: 368)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !896, file: !501, line: 843, baseType: !904, size: 32, offset: 384)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 32, elements: !360)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !896, file: !501, line: 845, baseType: !48, size: 32, offset: 416)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !896, file: !501, line: 847, baseType: !124, size: 64, offset: 448)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !896, file: !501, line: 848, baseType: !908, size: 64, offset: 512)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !757, line: 77, size: 15424, elements: !910)
!910 = !{!911, !912, !913, !916, !919, !922, !925, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !975, !976, !980}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !909, file: !757, line: 78, baseType: !205, size: 960)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !909, file: !757, line: 80, baseType: !180, size: 8192, offset: 960)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !909, file: !757, line: 82, baseType: !914, size: 64, offset: 9152)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !757, line: 43, flags: DIFlagFwdDecl)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !909, file: !757, line: 83, baseType: !917, size: 64, offset: 9216)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !202, line: 46, flags: DIFlagFwdDecl)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !909, file: !757, line: 86, baseType: !920, size: 64, offset: 9280)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !757, line: 41, flags: DIFlagFwdDecl)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !909, file: !757, line: 87, baseType: !923, size: 64, offset: 9344)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !757, line: 44, flags: DIFlagFwdDecl)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !909, file: !757, line: 89, baseType: !926, size: 512, offset: 9408)
!926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !923, size: 512, elements: !927)
!927 = !{!537}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !909, file: !757, line: 90, baseType: !184, size: 16, offset: 9920)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !909, file: !757, line: 90, baseType: !184, size: 16, offset: 9936)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !909, file: !757, line: 92, baseType: !184, size: 16, offset: 9952)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !909, file: !757, line: 92, baseType: !184, size: 16, offset: 9968)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !909, file: !757, line: 93, baseType: !184, size: 16, offset: 9984)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !909, file: !757, line: 93, baseType: !184, size: 16, offset: 10000)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !909, file: !757, line: 94, baseType: !48, size: 32, offset: 10016)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !909, file: !757, line: 97, baseType: !184, size: 16, offset: 10048)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !909, file: !757, line: 97, baseType: !184, size: 16, offset: 10064)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !909, file: !757, line: 98, baseType: !184, size: 16, offset: 10080)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !909, file: !757, line: 98, baseType: !184, size: 16, offset: 10096)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !909, file: !757, line: 99, baseType: !184, size: 16, offset: 10112)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !909, file: !757, line: 99, baseType: !184, size: 16, offset: 10128)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !909, file: !757, line: 100, baseType: !7, size: 32, offset: 10144)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !909, file: !757, line: 101, baseType: !852, size: 64, offset: 10176)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !909, file: !757, line: 103, baseType: !256, size: 64, offset: 10240)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !909, file: !757, line: 104, baseType: !945, size: 64, offset: 10304)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !202, line: 159, size: 448, elements: !947)
!947 = !{!948, !950, !951, !952, !953, !955}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !946, file: !202, line: 161, baseType: !949, size: 64)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !360)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !946, file: !202, line: 162, baseType: !949, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !946, file: !202, line: 163, baseType: !904, size: 32, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !946, file: !202, line: 164, baseType: !904, size: 32, offset: 160)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !946, file: !202, line: 165, baseType: !954, size: 128, offset: 192)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 128, elements: !360)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !946, file: !202, line: 166, baseType: !956, size: 128, offset: 320)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !917, size: 128, elements: !360)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !909, file: !757, line: 107, baseType: !389, size: 32, offset: 10368)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !909, file: !757, line: 108, baseType: !48, size: 32, offset: 10400)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !909, file: !757, line: 109, baseType: !184, size: 16, offset: 10432)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !909, file: !757, line: 110, baseType: !184, size: 16, offset: 10448)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !909, file: !757, line: 113, baseType: !48, size: 32, offset: 10464)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !909, file: !757, line: 113, baseType: !48, size: 32, offset: 10496)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !909, file: !757, line: 114, baseType: !102, size: 8, offset: 10528)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !909, file: !757, line: 114, baseType: !102, size: 8, offset: 10536)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !909, file: !757, line: 115, baseType: !184, size: 16, offset: 10544)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !909, file: !757, line: 116, baseType: !638, size: 128, offset: 10560)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !909, file: !757, line: 119, baseType: !389, size: 32, offset: 10688)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !909, file: !757, line: 119, baseType: !389, size: 32, offset: 10720)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !909, file: !757, line: 122, baseType: !970, size: 512, offset: 10752)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !971, line: 182, baseType: !972)
!971 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !971, line: 180, size: 512, elements: !973)
!973 = !{!974}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !972, file: !971, line: 181, baseType: !233, size: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !909, file: !757, line: 123, baseType: !102, size: 8, offset: 11264)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !909, file: !757, line: 125, baseType: !977, size: 56, offset: 11272)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 56, elements: !978)
!978 = !{!979}
!979 = !DISubrange(count: 7)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !909, file: !757, line: 126, baseType: !981, size: 4096, offset: 11328)
!981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 4096, elements: !927)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !757, line: 69, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !757, line: 67, size: 512, elements: !984)
!984 = !{!985}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !983, file: !757, line: 68, baseType: !233, size: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !896, file: !501, line: 849, baseType: !908, size: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !896, file: !501, line: 850, baseType: !908, size: 64, offset: 640)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !896, file: !501, line: 851, baseType: !567, size: 96, offset: 704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !896, file: !501, line: 852, baseType: !389, size: 32, offset: 800)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !825, file: !501, line: 1104, baseType: !991, size: 1344, offset: 1344)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !501, line: 867, size: 1344, elements: !992)
!992 = !{!993, !994, !995, !996, !997, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !991, file: !501, line: 868, baseType: !184, size: 16)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !991, file: !501, line: 869, baseType: !184, size: 16, offset: 16)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !991, file: !501, line: 870, baseType: !184, size: 16, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !991, file: !501, line: 871, baseType: !184, size: 16, offset: 48)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !991, file: !501, line: 873, baseType: !998, size: 896, offset: 64)
!998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !999, size: 896, elements: !978)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !501, line: 864, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !501, line: 859, size: 128, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006, !1007}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1000, file: !501, line: 860, baseType: !184, size: 16)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1000, file: !501, line: 861, baseType: !184, size: 16, offset: 16)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1000, file: !501, line: 861, baseType: !184, size: 16, offset: 32)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1000, file: !501, line: 861, baseType: !184, size: 16, offset: 48)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1000, file: !501, line: 862, baseType: !48, size: 32, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1000, file: !501, line: 863, baseType: !389, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !991, file: !501, line: 874, baseType: !124, size: 64, offset: 960)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !991, file: !501, line: 876, baseType: !389, size: 32, offset: 1024)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !991, file: !501, line: 876, baseType: !389, size: 32, offset: 1056)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !991, file: !501, line: 878, baseType: !48, size: 32, offset: 1088)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !991, file: !501, line: 879, baseType: !48, size: 32, offset: 1120)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !991, file: !501, line: 881, baseType: !48, size: 32, offset: 1152)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !991, file: !501, line: 881, baseType: !48, size: 32, offset: 1184)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !991, file: !501, line: 883, baseType: !499, size: 64, offset: 1216)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !991, file: !501, line: 884, baseType: !508, size: 64, offset: 1280)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !825, file: !501, line: 1107, baseType: !389, size: 32, offset: 2688)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !825, file: !501, line: 1110, baseType: !389, size: 32, offset: 2720)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !825, file: !501, line: 1113, baseType: !184, size: 16, offset: 2752)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !825, file: !501, line: 1113, baseType: !184, size: 16, offset: 2768)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !825, file: !501, line: 1116, baseType: !102, size: 8, offset: 2784)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !825, file: !501, line: 1117, baseType: !814, size: 8, offset: 2792)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !825, file: !501, line: 1120, baseType: !184, size: 16, offset: 2800)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !825, file: !501, line: 1121, baseType: !389, size: 32, offset: 2816)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !825, file: !501, line: 1122, baseType: !389, size: 32, offset: 2848)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !825, file: !501, line: 1123, baseType: !389, size: 32, offset: 2880)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !825, file: !501, line: 1124, baseType: !389, size: 32, offset: 2912)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !825, file: !501, line: 1125, baseType: !389, size: 32, offset: 2944)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !825, file: !501, line: 1126, baseType: !389, size: 32, offset: 2976)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !825, file: !501, line: 1127, baseType: !389, size: 32, offset: 3008)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !825, file: !501, line: 1128, baseType: !389, size: 32, offset: 3040)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !825, file: !501, line: 1129, baseType: !389, size: 32, offset: 3072)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !825, file: !501, line: 1130, baseType: !389, size: 32, offset: 3104)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !825, file: !501, line: 1131, baseType: !184, size: 16, offset: 3136)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !825, file: !501, line: 1132, baseType: !102, size: 8, offset: 3152)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !825, file: !501, line: 1133, baseType: !102, size: 8, offset: 3160)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !825, file: !501, line: 1134, baseType: !1038, size: 24, offset: 3168)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 24, elements: !491)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !825, file: !501, line: 1135, baseType: !102, size: 8, offset: 3192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !825, file: !501, line: 1138, baseType: !508, size: 64, offset: 3200)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !825, file: !501, line: 1139, baseType: !102, size: 8, offset: 3264)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !825, file: !501, line: 1140, baseType: !102, size: 8, offset: 3272)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !825, file: !501, line: 1141, baseType: !102, size: 8, offset: 3280)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !825, file: !501, line: 1142, baseType: !102, size: 8, offset: 3288)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !825, file: !501, line: 1143, baseType: !102, size: 8, offset: 3296)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !825, file: !501, line: 1144, baseType: !1047, size: 64, offset: 3304)
!1047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 64, elements: !927)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !825, file: !501, line: 1145, baseType: !1047, size: 64, offset: 3368)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !825, file: !501, line: 1148, baseType: !102, size: 8, offset: 3432)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !825, file: !501, line: 1149, baseType: !102, size: 8, offset: 3440)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !825, file: !501, line: 1152, baseType: !102, size: 8, offset: 3448)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !825, file: !501, line: 1152, baseType: !102, size: 8, offset: 3456)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !825, file: !501, line: 1153, baseType: !102, size: 8, offset: 3464)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !825, file: !501, line: 1154, baseType: !184, size: 16, offset: 3472)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !825, file: !501, line: 1154, baseType: !184, size: 16, offset: 3488)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !825, file: !501, line: 1155, baseType: !184, size: 16, offset: 3504)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !825, file: !501, line: 1155, baseType: !184, size: 16, offset: 3520)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !825, file: !501, line: 1156, baseType: !102, size: 8, offset: 3536)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !825, file: !501, line: 1157, baseType: !102, size: 8, offset: 3544)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !825, file: !501, line: 1159, baseType: !102, size: 8, offset: 3552)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !825, file: !501, line: 1160, baseType: !102, size: 8, offset: 3560)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !825, file: !501, line: 1161, baseType: !102, size: 8, offset: 3568)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !825, file: !501, line: 1162, baseType: !102, size: 8, offset: 3576)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !825, file: !501, line: 1165, baseType: !48, size: 32, offset: 3584)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !825, file: !501, line: 1166, baseType: !48, size: 32, offset: 3616)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !825, file: !501, line: 1167, baseType: !48, size: 32, offset: 3648)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !825, file: !501, line: 1168, baseType: !48, size: 32, offset: 3680)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !825, file: !501, line: 1171, baseType: !184, size: 16, offset: 3712)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !825, file: !501, line: 1171, baseType: !184, size: 16, offset: 3728)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !825, file: !501, line: 1172, baseType: !48, size: 32, offset: 3744)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !825, file: !501, line: 1173, baseType: !389, size: 32, offset: 3776)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !825, file: !501, line: 1174, baseType: !389, size: 32, offset: 3808)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !825, file: !501, line: 1177, baseType: !1074, size: 1024, offset: 3840)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !501, line: 963, size: 1024, elements: !1075)
!1075 = !{!1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1099, !1100}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1074, file: !501, line: 965, baseType: !48, size: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1074, file: !501, line: 968, baseType: !389, size: 32, offset: 32)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1074, file: !501, line: 971, baseType: !389, size: 32, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1074, file: !501, line: 974, baseType: !389, size: 32, offset: 96)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1074, file: !501, line: 977, baseType: !567, size: 96, offset: 128)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1074, file: !501, line: 979, baseType: !567, size: 96, offset: 224)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1074, file: !501, line: 982, baseType: !48, size: 32, offset: 320)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1074, file: !501, line: 987, baseType: !753, size: 64, offset: 352)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1074, file: !501, line: 989, baseType: !389, size: 32, offset: 416)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1074, file: !501, line: 994, baseType: !48, size: 32, offset: 448)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1074, file: !501, line: 995, baseType: !48, size: 32, offset: 480)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1074, file: !501, line: 997, baseType: !102, size: 8, offset: 512)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1074, file: !501, line: 998, baseType: !977, size: 56, offset: 520)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1074, file: !501, line: 1000, baseType: !389, size: 32, offset: 576)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1074, file: !501, line: 1003, baseType: !753, size: 64, offset: 608)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1074, file: !501, line: 1006, baseType: !48, size: 32, offset: 672)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1074, file: !501, line: 1009, baseType: !389, size: 32, offset: 704)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1074, file: !501, line: 1012, baseType: !753, size: 64, offset: 736)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1074, file: !501, line: 1015, baseType: !753, size: 64, offset: 800)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1074, file: !501, line: 1018, baseType: !48, size: 32, offset: 864)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1074, file: !501, line: 1019, baseType: !1097, size: 64, offset: 896)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !501, line: 63, flags: DIFlagFwdDecl)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1074, file: !501, line: 1023, baseType: !389, size: 32, offset: 960)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1074, file: !501, line: 1024, baseType: !48, size: 32, offset: 992)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !825, file: !501, line: 1179, baseType: !1102, size: 320, offset: 4864)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !501, line: 1043, size: 320, elements: !1103)
!1103 = !{!1104, !1105, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1102, file: !501, line: 1044, baseType: !102, size: 8)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1102, file: !501, line: 1045, baseType: !1106, size: 16, offset: 8)
!1106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 16, elements: !360)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1102, file: !501, line: 1048, baseType: !102, size: 8, offset: 24)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1102, file: !501, line: 1049, baseType: !389, size: 32, offset: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1102, file: !501, line: 1049, baseType: !389, size: 32, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1102, file: !501, line: 1052, baseType: !389, size: 32, offset: 96)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1102, file: !501, line: 1052, baseType: !389, size: 32, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1102, file: !501, line: 1053, baseType: !102, size: 8, offset: 160)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1102, file: !501, line: 1054, baseType: !1038, size: 24, offset: 168)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1102, file: !501, line: 1057, baseType: !389, size: 32, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1102, file: !501, line: 1057, baseType: !389, size: 32, offset: 224)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1102, file: !501, line: 1060, baseType: !389, size: 32, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1102, file: !501, line: 1060, baseType: !389, size: 32, offset: 288)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !500, file: !501, line: 1247, baseType: !1119, size: 64, offset: 2176)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !501, line: 60, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !500, file: !501, line: 1251, baseType: !1122, size: 31872, offset: 2240)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !501, line: 403, size: 31872, elements: !1123)
!1123 = !{!1124, !1204, !1224, !1233, !1253, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1393, !1394, !1395, !1399, !1415, !1416}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1122, file: !501, line: 404, baseType: !1125, size: 1984)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !501, line: 259, size: 1984, elements: !1126)
!1126 = !{!1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1199}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1125, file: !501, line: 260, baseType: !102, size: 8)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1125, file: !501, line: 263, baseType: !102, size: 8, offset: 8)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1125, file: !501, line: 266, baseType: !102, size: 8, offset: 16)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1125, file: !501, line: 267, baseType: !102, size: 8, offset: 24)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1125, file: !501, line: 269, baseType: !102, size: 8, offset: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1125, file: !501, line: 270, baseType: !102, size: 8, offset: 40)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1125, file: !501, line: 276, baseType: !102, size: 8, offset: 48)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1125, file: !501, line: 279, baseType: !102, size: 8, offset: 56)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1125, file: !501, line: 280, baseType: !184, size: 16, offset: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1125, file: !501, line: 280, baseType: !184, size: 16, offset: 80)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1125, file: !501, line: 281, baseType: !389, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1125, file: !501, line: 284, baseType: !102, size: 8, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1125, file: !501, line: 285, baseType: !102, size: 8, offset: 136)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1125, file: !501, line: 287, baseType: !363, size: 48, offset: 144)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1125, file: !501, line: 290, baseType: !1142, size: 1280, offset: 192)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !971, line: 174, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !971, line: 166, size: 1280, elements: !1144)
!1144 = !{!1145, !1146, !1147, !1148, !1149, !1150, !1151, !1198}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1143, file: !971, line: 167, baseType: !48, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1143, file: !971, line: 167, baseType: !48, size: 32, offset: 32)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1143, file: !971, line: 168, baseType: !233, size: 512, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1143, file: !971, line: 169, baseType: !233, size: 512, offset: 576)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1143, file: !971, line: 170, baseType: !389, size: 32, offset: 1088)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1143, file: !971, line: 171, baseType: !389, size: 32, offset: 1120)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1143, file: !971, line: 172, baseType: !1152, size: 64, offset: 1152)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !971, line: 72, size: 3072, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1168, !1169, !1194, !1195, !1196, !1197}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1153, file: !971, line: 73, baseType: !48, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1153, file: !971, line: 73, baseType: !48, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1153, file: !971, line: 74, baseType: !48, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1153, file: !971, line: 75, baseType: !48, size: 32, offset: 96)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1153, file: !971, line: 77, baseType: !1160, size: 128, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1161, line: 95, baseType: !1162)
!1161 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1161, line: 92, size: 128, elements: !1163)
!1163 = !{!1164, !1165, !1166, !1167}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1162, file: !1161, line: 93, baseType: !389, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1162, file: !1161, line: 93, baseType: !389, size: 32, offset: 32)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1162, file: !1161, line: 94, baseType: !389, size: 32, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1162, file: !1161, line: 94, baseType: !389, size: 32, offset: 96)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1153, file: !971, line: 77, baseType: !1160, size: 128, offset: 256)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1153, file: !971, line: 79, baseType: !1170, size: 2304, offset: 384)
!1170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1171, size: 2304, elements: !639)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !971, line: 67, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !971, line: 55, size: 576, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1190, !1191, !1192, !1193}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1172, file: !971, line: 56, baseType: !184, size: 16)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1172, file: !971, line: 56, baseType: !184, size: 16, offset: 16)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1172, file: !971, line: 58, baseType: !389, size: 32, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1172, file: !971, line: 59, baseType: !389, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1172, file: !971, line: 59, baseType: !389, size: 32, offset: 96)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1172, file: !971, line: 60, baseType: !753, size: 64, offset: 128)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1172, file: !971, line: 60, baseType: !753, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1172, file: !971, line: 61, baseType: !1182, size: 64, offset: 256)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !971, line: 47, baseType: !1184)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !971, line: 44, size: 96, elements: !1185)
!1185 = !{!1186, !1187, !1188, !1189}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1184, file: !971, line: 45, baseType: !389, size: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1184, file: !971, line: 45, baseType: !389, size: 32, offset: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1184, file: !971, line: 46, baseType: !184, size: 16, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1184, file: !971, line: 46, baseType: !184, size: 16, offset: 80)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1172, file: !971, line: 62, baseType: !1182, size: 64, offset: 320)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1172, file: !971, line: 64, baseType: !1182, size: 64, offset: 384)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1172, file: !971, line: 65, baseType: !753, size: 64, offset: 448)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1172, file: !971, line: 66, baseType: !753, size: 64, offset: 512)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1153, file: !971, line: 80, baseType: !567, size: 96, offset: 2688)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1153, file: !971, line: 80, baseType: !567, size: 96, offset: 2784)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1153, file: !971, line: 81, baseType: !567, size: 96, offset: 2880)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1153, file: !971, line: 83, baseType: !567, size: 96, offset: 2976)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1143, file: !971, line: 173, baseType: !124, size: 64, offset: 1216)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1125, file: !501, line: 291, baseType: !1200, size: 512, offset: 1472)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !971, line: 178, baseType: !1201)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !971, line: 176, size: 512, elements: !1202)
!1202 = !{!1203}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1201, file: !971, line: 177, baseType: !233, size: 512)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1122, file: !501, line: 406, baseType: !1205, size: 64, offset: 1984)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !501, line: 80, size: 1472, elements: !1207)
!1207 = !{!1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1206, file: !501, line: 81, baseType: !124, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1206, file: !501, line: 82, baseType: !124, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1206, file: !501, line: 83, baseType: !7, size: 32, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1206, file: !501, line: 84, baseType: !7, size: 32, offset: 160)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1206, file: !501, line: 86, baseType: !7, size: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1206, file: !501, line: 87, baseType: !7, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1206, file: !501, line: 88, baseType: !7, size: 32, offset: 256)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1206, file: !501, line: 89, baseType: !7, size: 32, offset: 288)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1206, file: !501, line: 90, baseType: !7, size: 32, offset: 320)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1206, file: !501, line: 91, baseType: !7, size: 32, offset: 352)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1206, file: !501, line: 92, baseType: !7, size: 32, offset: 384)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1206, file: !501, line: 93, baseType: !7, size: 32, offset: 416)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1206, file: !501, line: 95, baseType: !1221, size: 1024, offset: 448)
!1221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 1024, elements: !1222)
!1222 = !{!1223}
!1223 = !DISubrange(count: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1122, file: !501, line: 407, baseType: !1225, size: 64, offset: 2048)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !501, line: 98, size: 1216, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1226, file: !501, line: 100, baseType: !124, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1226, file: !501, line: 101, baseType: !124, size: 64, offset: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1226, file: !501, line: 103, baseType: !7, size: 32, offset: 128)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1226, file: !501, line: 104, baseType: !7, size: 32, offset: 160)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1226, file: !501, line: 106, baseType: !1221, size: 1024, offset: 192)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1122, file: !501, line: 408, baseType: !1234, size: 512, offset: 2112)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !501, line: 109, size: 512, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1234, file: !501, line: 111, baseType: !48, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1234, file: !501, line: 112, baseType: !48, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1234, file: !501, line: 115, baseType: !48, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1234, file: !501, line: 116, baseType: !48, size: 32, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1234, file: !501, line: 117, baseType: !48, size: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1234, file: !501, line: 118, baseType: !48, size: 32, offset: 160)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1234, file: !501, line: 119, baseType: !48, size: 32, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1234, file: !501, line: 120, baseType: !48, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1234, file: !501, line: 121, baseType: !48, size: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1234, file: !501, line: 122, baseType: !48, size: 32, offset: 288)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1234, file: !501, line: 125, baseType: !48, size: 32, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1234, file: !501, line: 126, baseType: !48, size: 32, offset: 352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1234, file: !501, line: 127, baseType: !184, size: 16, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1234, file: !501, line: 128, baseType: !184, size: 16, offset: 400)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1234, file: !501, line: 129, baseType: !48, size: 32, offset: 416)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1234, file: !501, line: 130, baseType: !48, size: 32, offset: 448)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1234, file: !501, line: 131, baseType: !48, size: 32, offset: 480)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1122, file: !501, line: 409, baseType: !1254, size: 576, offset: 2624)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !501, line: 134, size: 576, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1254, file: !501, line: 135, baseType: !48, size: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1254, file: !501, line: 136, baseType: !48, size: 32, offset: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1254, file: !501, line: 137, baseType: !48, size: 32, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1254, file: !501, line: 138, baseType: !48, size: 32, offset: 96)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1254, file: !501, line: 139, baseType: !48, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1254, file: !501, line: 140, baseType: !48, size: 32, offset: 160)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1254, file: !501, line: 141, baseType: !48, size: 32, offset: 192)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1254, file: !501, line: 142, baseType: !48, size: 32, offset: 224)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1254, file: !501, line: 143, baseType: !389, size: 32, offset: 256)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1254, file: !501, line: 144, baseType: !48, size: 32, offset: 288)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1254, file: !501, line: 145, baseType: !48, size: 32, offset: 320)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1254, file: !501, line: 147, baseType: !48, size: 32, offset: 352)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1254, file: !501, line: 148, baseType: !48, size: 32, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1254, file: !501, line: 149, baseType: !48, size: 32, offset: 416)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1254, file: !501, line: 150, baseType: !48, size: 32, offset: 448)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1254, file: !501, line: 151, baseType: !48, size: 32, offset: 480)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1254, file: !501, line: 152, baseType: !222, size: 64, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1122, file: !501, line: 411, baseType: !48, size: 32, offset: 3200)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1122, file: !501, line: 411, baseType: !48, size: 32, offset: 3232)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1122, file: !501, line: 411, baseType: !48, size: 32, offset: 3264)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1122, file: !501, line: 412, baseType: !389, size: 32, offset: 3296)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1122, file: !501, line: 413, baseType: !48, size: 32, offset: 3328)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1122, file: !501, line: 413, baseType: !48, size: 32, offset: 3360)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1122, file: !501, line: 415, baseType: !48, size: 32, offset: 3392)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1122, file: !501, line: 415, baseType: !48, size: 32, offset: 3424)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1122, file: !501, line: 416, baseType: !184, size: 16, offset: 3456)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1122, file: !501, line: 416, baseType: !184, size: 16, offset: 3472)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1122, file: !501, line: 418, baseType: !389, size: 32, offset: 3488)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1122, file: !501, line: 418, baseType: !389, size: 32, offset: 3520)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1122, file: !501, line: 421, baseType: !389, size: 32, offset: 3552)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1122, file: !501, line: 421, baseType: !389, size: 32, offset: 3584)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1122, file: !501, line: 421, baseType: !389, size: 32, offset: 3616)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1122, file: !501, line: 425, baseType: !184, size: 16, offset: 3648)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1122, file: !501, line: 425, baseType: !184, size: 16, offset: 3664)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1122, file: !501, line: 425, baseType: !184, size: 16, offset: 3680)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1122, file: !501, line: 426, baseType: !184, size: 16, offset: 3696)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1122, file: !501, line: 428, baseType: !184, size: 16, offset: 3712)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1122, file: !501, line: 428, baseType: !184, size: 16, offset: 3728)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1122, file: !501, line: 431, baseType: !48, size: 32, offset: 3744)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1122, file: !501, line: 433, baseType: !184, size: 16, offset: 3776)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1122, file: !501, line: 435, baseType: !184, size: 16, offset: 3792)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1122, file: !501, line: 437, baseType: !184, size: 16, offset: 3808)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1122, file: !501, line: 439, baseType: !184, size: 16, offset: 3824)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1122, file: !501, line: 441, baseType: !184, size: 16, offset: 3840)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1122, file: !501, line: 443, baseType: !184, size: 16, offset: 3856)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1122, file: !501, line: 449, baseType: !48, size: 32, offset: 3872)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1122, file: !501, line: 453, baseType: !48, size: 32, offset: 3904)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1122, file: !501, line: 458, baseType: !184, size: 16, offset: 3936)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1122, file: !501, line: 462, baseType: !184, size: 16, offset: 3952)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1122, file: !501, line: 467, baseType: !48, size: 32, offset: 3968)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1122, file: !501, line: 467, baseType: !48, size: 32, offset: 4000)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1122, file: !501, line: 469, baseType: !184, size: 16, offset: 4032)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1122, file: !501, line: 469, baseType: !184, size: 16, offset: 4048)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1122, file: !501, line: 469, baseType: !184, size: 16, offset: 4064)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1122, file: !501, line: 469, baseType: !184, size: 16, offset: 4080)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1122, file: !501, line: 474, baseType: !184, size: 16, offset: 4096)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1122, file: !501, line: 475, baseType: !102, size: 8, offset: 4112)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1122, file: !501, line: 476, baseType: !102, size: 8, offset: 4120)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1122, file: !501, line: 481, baseType: !48, size: 32, offset: 4128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1122, file: !501, line: 486, baseType: !48, size: 32, offset: 4160)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1122, file: !501, line: 491, baseType: !48, size: 32, offset: 4192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1122, file: !501, line: 496, baseType: !184, size: 16, offset: 4224)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1122, file: !501, line: 498, baseType: !184, size: 16, offset: 4240)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1122, file: !501, line: 501, baseType: !184, size: 16, offset: 4256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1122, file: !501, line: 502, baseType: !184, size: 16, offset: 4272)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1122, file: !501, line: 508, baseType: !184, size: 16, offset: 4288)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1122, file: !501, line: 513, baseType: !184, size: 16, offset: 4304)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1122, file: !501, line: 515, baseType: !184, size: 16, offset: 4320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1122, file: !501, line: 515, baseType: !184, size: 16, offset: 4336)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1122, file: !501, line: 519, baseType: !1160, size: 128, offset: 4352)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1122, file: !501, line: 519, baseType: !1160, size: 128, offset: 4480)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1122, file: !501, line: 520, baseType: !1328, size: 128, offset: 4608)
!1328 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1161, line: 89, baseType: !1329)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1161, line: 86, size: 128, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1329, file: !1161, line: 87, baseType: !48, size: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1329, file: !1161, line: 87, baseType: !48, size: 32, offset: 32)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1329, file: !1161, line: 88, baseType: !48, size: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1329, file: !1161, line: 88, baseType: !48, size: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1122, file: !501, line: 523, baseType: !139, size: 128, offset: 4736)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1122, file: !501, line: 524, baseType: !184, size: 16, offset: 4864)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1122, file: !501, line: 527, baseType: !184, size: 16, offset: 4880)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1122, file: !501, line: 532, baseType: !389, size: 32, offset: 4896)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1122, file: !501, line: 532, baseType: !389, size: 32, offset: 4928)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1122, file: !501, line: 534, baseType: !389, size: 32, offset: 4960)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1122, file: !501, line: 538, baseType: !389, size: 32, offset: 4992)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1122, file: !501, line: 542, baseType: !48, size: 32, offset: 5024)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1122, file: !501, line: 545, baseType: !389, size: 32, offset: 5056)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1122, file: !501, line: 545, baseType: !389, size: 32, offset: 5088)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1122, file: !501, line: 545, baseType: !389, size: 32, offset: 5120)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1122, file: !501, line: 548, baseType: !389, size: 32, offset: 5152)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1122, file: !501, line: 551, baseType: !184, size: 16, offset: 5184)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1122, file: !501, line: 551, baseType: !184, size: 16, offset: 5200)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1122, file: !501, line: 551, baseType: !184, size: 16, offset: 5216)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1122, file: !501, line: 551, baseType: !184, size: 16, offset: 5232)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1122, file: !501, line: 552, baseType: !184, size: 16, offset: 5248)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1122, file: !501, line: 552, baseType: !184, size: 16, offset: 5264)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1122, file: !501, line: 553, baseType: !389, size: 32, offset: 5280)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1122, file: !501, line: 553, baseType: !389, size: 32, offset: 5312)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1122, file: !501, line: 554, baseType: !184, size: 16, offset: 5344)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1122, file: !501, line: 554, baseType: !184, size: 16, offset: 5360)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1122, file: !501, line: 555, baseType: !389, size: 32, offset: 5376)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1122, file: !501, line: 555, baseType: !389, size: 32, offset: 5408)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1122, file: !501, line: 558, baseType: !180, size: 8192, offset: 5440)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1122, file: !501, line: 561, baseType: !48, size: 32, offset: 13632)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1122, file: !501, line: 562, baseType: !184, size: 16, offset: 13664)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1122, file: !501, line: 562, baseType: !184, size: 16, offset: 13680)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1122, file: !501, line: 565, baseType: !1364, size: 6144, offset: 13696)
!1364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 6144, elements: !1365)
!1365 = !{!1366}
!1366 = !DISubrange(count: 768)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1122, file: !501, line: 568, baseType: !638, size: 128, offset: 19840)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1122, file: !501, line: 569, baseType: !638, size: 128, offset: 19968)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1122, file: !501, line: 572, baseType: !102, size: 8, offset: 20096)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1122, file: !501, line: 573, baseType: !102, size: 8, offset: 20104)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1122, file: !501, line: 574, baseType: !102, size: 8, offset: 20112)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1122, file: !501, line: 575, baseType: !892, size: 40, offset: 20120)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1122, file: !501, line: 578, baseType: !48, size: 32, offset: 20160)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1122, file: !501, line: 579, baseType: !184, size: 16, offset: 20192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1122, file: !501, line: 580, baseType: !184, size: 16, offset: 20208)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1122, file: !501, line: 581, baseType: !389, size: 32, offset: 20224)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1122, file: !501, line: 582, baseType: !389, size: 32, offset: 20256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1122, file: !501, line: 585, baseType: !184, size: 16, offset: 20288)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1122, file: !501, line: 585, baseType: !184, size: 16, offset: 20304)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1122, file: !501, line: 586, baseType: !389, size: 32, offset: 20320)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1122, file: !501, line: 589, baseType: !184, size: 16, offset: 20352)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1122, file: !501, line: 589, baseType: !184, size: 16, offset: 20368)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1122, file: !501, line: 590, baseType: !48, size: 32, offset: 20384)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1122, file: !501, line: 593, baseType: !184, size: 16, offset: 20416)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1122, file: !501, line: 593, baseType: !184, size: 16, offset: 20432)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1122, file: !501, line: 594, baseType: !184, size: 16, offset: 20448)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1122, file: !501, line: 594, baseType: !184, size: 16, offset: 20464)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1122, file: !501, line: 595, baseType: !389, size: 32, offset: 20480)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1122, file: !501, line: 596, baseType: !389, size: 32, offset: 20512)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1122, file: !501, line: 597, baseType: !1391, size: 64, offset: 20544)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !723, line: 44, flags: DIFlagFwdDecl)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1122, file: !501, line: 600, baseType: !48, size: 32, offset: 20608)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1122, file: !501, line: 601, baseType: !389, size: 32, offset: 20640)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1122, file: !501, line: 604, baseType: !1396, size: 256, offset: 20672)
!1396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 256, elements: !1397)
!1397 = !{!1398}
!1398 = !DISubrange(count: 32)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1122, file: !501, line: 607, baseType: !1400, size: 10880, offset: 20928)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !501, line: 364, size: 10880, elements: !1401)
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1400, file: !501, line: 365, baseType: !1125, size: 1984)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1400, file: !501, line: 367, baseType: !180, size: 8192, offset: 1984)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1400, file: !501, line: 369, baseType: !184, size: 16, offset: 10176)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1400, file: !501, line: 369, baseType: !184, size: 16, offset: 10192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1400, file: !501, line: 370, baseType: !184, size: 16, offset: 10208)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1400, file: !501, line: 370, baseType: !184, size: 16, offset: 10224)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1400, file: !501, line: 372, baseType: !389, size: 32, offset: 10240)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1400, file: !501, line: 373, baseType: !389, size: 32, offset: 10272)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1400, file: !501, line: 375, baseType: !1038, size: 24, offset: 10304)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1400, file: !501, line: 376, baseType: !102, size: 8, offset: 10328)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1400, file: !501, line: 378, baseType: !102, size: 8, offset: 10336)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1400, file: !501, line: 379, baseType: !1038, size: 24, offset: 10344)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1400, file: !501, line: 381, baseType: !233, size: 512, offset: 10368)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1122, file: !501, line: 609, baseType: !48, size: 32, offset: 31808)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1122, file: !501, line: 610, baseType: !48, size: 32, offset: 31840)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !500, file: !501, line: 1252, baseType: !1418, size: 256, offset: 34112)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !501, line: 158, size: 256, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1418, file: !501, line: 159, baseType: !48, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1418, file: !501, line: 160, baseType: !389, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1418, file: !501, line: 161, baseType: !389, size: 32, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1418, file: !501, line: 162, baseType: !389, size: 32, offset: 96)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1418, file: !501, line: 163, baseType: !48, size: 32, offset: 128)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1418, file: !501, line: 164, baseType: !184, size: 16, offset: 160)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1418, file: !501, line: 165, baseType: !184, size: 16, offset: 176)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1418, file: !501, line: 166, baseType: !389, size: 32, offset: 192)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1418, file: !501, line: 167, baseType: !389, size: 32, offset: 224)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !500, file: !501, line: 1254, baseType: !139, size: 128, offset: 34368)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !500, file: !501, line: 1255, baseType: !139, size: 128, offset: 34496)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !500, file: !501, line: 1257, baseType: !124, size: 64, offset: 34624)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !500, file: !501, line: 1258, baseType: !124, size: 64, offset: 34688)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !500, file: !501, line: 1259, baseType: !124, size: 64, offset: 34752)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !500, file: !501, line: 1260, baseType: !124, size: 64, offset: 34816)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !500, file: !501, line: 1262, baseType: !124, size: 64, offset: 34880)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !500, file: !501, line: 1265, baseType: !1437, size: 64, offset: 34944)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !501, line: 1265, flags: DIFlagFwdDecl)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !500, file: !501, line: 1266, baseType: !184, size: 16, offset: 35008)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !500, file: !501, line: 1267, baseType: !184, size: 16, offset: 35024)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !500, file: !501, line: 1270, baseType: !48, size: 32, offset: 35040)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !500, file: !501, line: 1271, baseType: !139, size: 128, offset: 35072)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !500, file: !501, line: 1274, baseType: !1444, size: 128, offset: 35200)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !501, line: 650, size: 128, elements: !1445)
!1445 = !{!1446, !1447, !1448, !1449, !1450}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1444, file: !501, line: 651, baseType: !567, size: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1444, file: !501, line: 652, baseType: !102, size: 8, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1444, file: !501, line: 652, baseType: !102, size: 8, offset: 104)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1444, file: !501, line: 652, baseType: !102, size: 8, offset: 112)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1444, file: !501, line: 652, baseType: !102, size: 8, offset: 120)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !500, file: !501, line: 1275, baseType: !1452, size: 1472, offset: 35328)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !501, line: 676, size: 1472, elements: !1453)
!1453 = !{!1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1466, !1476, !1477, !1478, !1479, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1452, file: !501, line: 679, baseType: !1444, size: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1452, file: !501, line: 680, baseType: !184, size: 16, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1452, file: !501, line: 680, baseType: !184, size: 16, offset: 144)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1452, file: !501, line: 680, baseType: !184, size: 16, offset: 160)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1452, file: !501, line: 680, baseType: !184, size: 16, offset: 176)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1452, file: !501, line: 681, baseType: !184, size: 16, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1452, file: !501, line: 681, baseType: !184, size: 16, offset: 208)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1452, file: !501, line: 681, baseType: !184, size: 16, offset: 224)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1452, file: !501, line: 681, baseType: !184, size: 16, offset: 240)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1452, file: !501, line: 682, baseType: !184, size: 16, offset: 256)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1452, file: !501, line: 682, baseType: !1465, size: 48, offset: 272)
!1465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 48, elements: !491)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1452, file: !501, line: 685, baseType: !1467, size: 192, offset: 320)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !501, line: 633, size: 192, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1472, !1473, !1474, !1475}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1467, file: !501, line: 634, baseType: !184, size: 16)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1467, file: !501, line: 634, baseType: !184, size: 16, offset: 16)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1467, file: !501, line: 635, baseType: !184, size: 16, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1467, file: !501, line: 635, baseType: !184, size: 16, offset: 48)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1467, file: !501, line: 636, baseType: !389, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1467, file: !501, line: 636, baseType: !389, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1467, file: !501, line: 637, baseType: !1391, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1452, file: !501, line: 686, baseType: !184, size: 16, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1452, file: !501, line: 686, baseType: !184, size: 16, offset: 528)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1452, file: !501, line: 687, baseType: !389, size: 32, offset: 544)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1452, file: !501, line: 688, baseType: !1480, size: 448, offset: 576)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !501, line: 674, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !501, line: 659, size: 448, elements: !1482)
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1481, file: !501, line: 660, baseType: !389, size: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1481, file: !501, line: 661, baseType: !389, size: 32, offset: 32)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1481, file: !501, line: 662, baseType: !389, size: 32, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1481, file: !501, line: 663, baseType: !389, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1481, file: !501, line: 664, baseType: !389, size: 32, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1481, file: !501, line: 665, baseType: !389, size: 32, offset: 160)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1481, file: !501, line: 666, baseType: !389, size: 32, offset: 192)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1481, file: !501, line: 667, baseType: !389, size: 32, offset: 224)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1481, file: !501, line: 668, baseType: !389, size: 32, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1481, file: !501, line: 669, baseType: !389, size: 32, offset: 288)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1481, file: !501, line: 670, baseType: !48, size: 32, offset: 320)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1481, file: !501, line: 671, baseType: !389, size: 32, offset: 352)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1481, file: !501, line: 672, baseType: !389, size: 32, offset: 384)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1481, file: !501, line: 673, baseType: !184, size: 16, offset: 416)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1481, file: !501, line: 673, baseType: !184, size: 16, offset: 432)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1452, file: !501, line: 692, baseType: !389, size: 32, offset: 1024)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1452, file: !501, line: 697, baseType: !389, size: 32, offset: 1056)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1452, file: !501, line: 703, baseType: !48, size: 32, offset: 1088)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1452, file: !501, line: 704, baseType: !184, size: 16, offset: 1120)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1452, file: !501, line: 704, baseType: !184, size: 16, offset: 1136)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1452, file: !501, line: 705, baseType: !184, size: 16, offset: 1152)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1452, file: !501, line: 706, baseType: !184, size: 16, offset: 1168)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1452, file: !501, line: 707, baseType: !184, size: 16, offset: 1184)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1452, file: !501, line: 708, baseType: !184, size: 16, offset: 1200)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1452, file: !501, line: 709, baseType: !184, size: 16, offset: 1216)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1452, file: !501, line: 709, baseType: !184, size: 16, offset: 1232)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1452, file: !501, line: 709, baseType: !184, size: 16, offset: 1248)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1452, file: !501, line: 709, baseType: !184, size: 16, offset: 1264)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1452, file: !501, line: 710, baseType: !184, size: 16, offset: 1280)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1452, file: !501, line: 711, baseType: !184, size: 16, offset: 1296)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1452, file: !501, line: 712, baseType: !389, size: 32, offset: 1312)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1452, file: !501, line: 713, baseType: !389, size: 32, offset: 1344)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1452, file: !501, line: 713, baseType: !389, size: 32, offset: 1376)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1452, file: !501, line: 713, baseType: !389, size: 32, offset: 1408)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1452, file: !501, line: 713, baseType: !389, size: 32, offset: 1440)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !500, file: !501, line: 1278, baseType: !1519, size: 64, offset: 36800)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !501, line: 1197, size: 64, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1519, file: !501, line: 1199, baseType: !389, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1519, file: !501, line: 1200, baseType: !102, size: 8, offset: 32)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1519, file: !501, line: 1201, baseType: !102, size: 8, offset: 40)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1519, file: !501, line: 1202, baseType: !184, size: 16, offset: 48)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !500, file: !501, line: 1281, baseType: !597, size: 64, offset: 36864)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !500, file: !501, line: 1284, baseType: !1527, size: 192, offset: 36928)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !501, line: 1208, size: 192, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1527, file: !501, line: 1209, baseType: !567, size: 96)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1527, file: !501, line: 1210, baseType: !48, size: 32, offset: 96)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1527, file: !501, line: 1210, baseType: !48, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1527, file: !501, line: 1210, baseType: !48, size: 32, offset: 160)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !500, file: !501, line: 1287, baseType: !1534, size: 64, offset: 37120)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1536, line: 64, size: 19136, elements: !1537)
!1536 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1550, !1551, !1723, !1724, !1732, !1733, !1734, !1735, !1736}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1535, file: !1536, line: 65, baseType: !205, size: 960)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1535, file: !1536, line: 66, baseType: !505, size: 64, offset: 960)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1535, file: !1536, line: 68, baseType: !180, size: 8192, offset: 1024)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1535, file: !1536, line: 70, baseType: !48, size: 32, offset: 9216)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1535, file: !1536, line: 71, baseType: !48, size: 32, offset: 9248)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1535, file: !1536, line: 72, baseType: !359, size: 64, offset: 9280)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1535, file: !1536, line: 74, baseType: !389, size: 32, offset: 9344)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1535, file: !1536, line: 74, baseType: !389, size: 32, offset: 9376)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1535, file: !1536, line: 76, baseType: !920, size: 64, offset: 9408)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1535, file: !1536, line: 77, baseType: !1548, size: 64, offset: 9472)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1536, line: 77, flags: DIFlagFwdDecl)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1535, file: !1536, line: 78, baseType: !597, size: 64, offset: 9536)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1535, file: !1536, line: 80, baseType: !1552, size: 2624, offset: 9600)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !1553, line: 340, size: 2624, elements: !1554)
!1553 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1554 = !{!1555, !1583, !1601, !1602, !1603, !1618, !1676, !1677, !1703, !1704, !1705, !1706, !1712}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !1552, file: !1553, line: 341, baseType: !1556, size: 576)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !1553, line: 251, baseType: !1557)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !1553, line: 207, size: 576, elements: !1558)
!1558 = !{!1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1557, file: !1553, line: 208, baseType: !48, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !1557, file: !1553, line: 211, baseType: !184, size: 16, offset: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !1557, file: !1553, line: 212, baseType: !184, size: 16, offset: 48)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !1557, file: !1553, line: 213, baseType: !389, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !1557, file: !1553, line: 214, baseType: !184, size: 16, offset: 96)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !1557, file: !1553, line: 215, baseType: !184, size: 16, offset: 112)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !1557, file: !1553, line: 216, baseType: !184, size: 16, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !1557, file: !1553, line: 217, baseType: !184, size: 16, offset: 144)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !1557, file: !1553, line: 218, baseType: !184, size: 16, offset: 160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !1557, file: !1553, line: 219, baseType: !184, size: 16, offset: 176)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !1557, file: !1553, line: 220, baseType: !389, size: 32, offset: 192)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !1557, file: !1553, line: 222, baseType: !184, size: 16, offset: 224)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !1557, file: !1553, line: 225, baseType: !184, size: 16, offset: 240)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !1557, file: !1553, line: 228, baseType: !48, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !1557, file: !1553, line: 229, baseType: !48, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !1557, file: !1553, line: 233, baseType: !48, size: 32, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !1557, file: !1553, line: 236, baseType: !184, size: 16, offset: 352)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1557, file: !1553, line: 236, baseType: !184, size: 16, offset: 368)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !1557, file: !1553, line: 241, baseType: !389, size: 32, offset: 384)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !1557, file: !1553, line: 244, baseType: !48, size: 32, offset: 416)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !1557, file: !1553, line: 244, baseType: !48, size: 32, offset: 448)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !1557, file: !1553, line: 245, baseType: !389, size: 32, offset: 480)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !1557, file: !1553, line: 248, baseType: !389, size: 32, offset: 512)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1557, file: !1553, line: 250, baseType: !48, size: 32, offset: 544)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1552, file: !1553, line: 342, baseType: !1584, size: 448, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !1553, line: 79, baseType: !1585)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !1553, line: 61, size: 448, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !1585, file: !1553, line: 62, baseType: !124, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !1585, file: !1553, line: 64, baseType: !184, size: 16, offset: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1585, file: !1553, line: 65, baseType: !184, size: 16, offset: 80)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !1585, file: !1553, line: 67, baseType: !389, size: 32, offset: 96)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !1585, file: !1553, line: 68, baseType: !389, size: 32, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !1585, file: !1553, line: 69, baseType: !389, size: 32, offset: 160)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1585, file: !1553, line: 70, baseType: !184, size: 16, offset: 192)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1585, file: !1553, line: 71, baseType: !184, size: 16, offset: 208)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !1585, file: !1553, line: 72, baseType: !753, size: 64, offset: 224)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !1585, file: !1553, line: 75, baseType: !389, size: 32, offset: 288)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !1585, file: !1553, line: 75, baseType: !389, size: 32, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !1585, file: !1553, line: 75, baseType: !389, size: 32, offset: 352)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !1585, file: !1553, line: 78, baseType: !389, size: 32, offset: 384)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !1585, file: !1553, line: 78, baseType: !389, size: 32, offset: 416)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !1552, file: !1553, line: 343, baseType: !139, size: 128, offset: 1024)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !1552, file: !1553, line: 344, baseType: !139, size: 128, offset: 1152)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !1552, file: !1553, line: 345, baseType: !1604, size: 192, offset: 1280)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !1553, line: 278, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !1553, line: 270, size: 192, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1605, file: !1553, line: 271, baseType: !48, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1605, file: !1553, line: 273, baseType: !389, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !1605, file: !1553, line: 275, baseType: !48, size: 32, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !1605, file: !1553, line: 276, baseType: !48, size: 32, offset: 96)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !1605, file: !1553, line: 277, baseType: !1612, size: 64, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !1553, line: 55, size: 576, elements: !1614)
!1614 = !{!1615, !1616, !1617}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1613, file: !1553, line: 56, baseType: !48, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1613, file: !1553, line: 57, baseType: !389, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1613, file: !1553, line: 58, baseType: !647, size: 512, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !1552, file: !1553, line: 346, baseType: !1619, size: 384, offset: 1472)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !1553, line: 268, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !1553, line: 253, size: 384, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1670, !1671, !1672, !1673, !1674, !1675}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1620, file: !1553, line: 254, baseType: !48, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !1620, file: !1553, line: 255, baseType: !48, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1620, file: !1553, line: 255, baseType: !48, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !1620, file: !1553, line: 258, baseType: !389, size: 32, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !1620, file: !1553, line: 259, baseType: !1627, size: 64, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !1553, line: 164, baseType: !1629)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !1553, line: 108, size: 1664, elements: !1630)
!1630 = !{!1631, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1629, file: !1553, line: 109, baseType: !1632, size: 64)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1629, file: !1553, line: 109, baseType: !1632, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1629, file: !1553, line: 111, baseType: !233, size: 512, offset: 128)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !1629, file: !1553, line: 119, baseType: !753, size: 64, offset: 640)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !1629, file: !1553, line: 119, baseType: !753, size: 64, offset: 704)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1629, file: !1553, line: 125, baseType: !753, size: 64, offset: 768)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1629, file: !1553, line: 125, baseType: !753, size: 64, offset: 832)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1629, file: !1553, line: 127, baseType: !753, size: 64, offset: 896)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1629, file: !1553, line: 130, baseType: !48, size: 32, offset: 960)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1629, file: !1553, line: 131, baseType: !48, size: 32, offset: 992)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1629, file: !1553, line: 132, baseType: !1643, size: 64, offset: 1024)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !1553, line: 106, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !1553, line: 81, size: 512, elements: !1646)
!1646 = !{!1647, !1648, !1651, !1652, !1653, !1654}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1645, file: !1553, line: 82, baseType: !753, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !1645, file: !1553, line: 97, baseType: !1649, size: 256, offset: 64)
!1649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 256, elements: !1650)
!1650 = !{!640, !361}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !1645, file: !1553, line: 102, baseType: !753, size: 64, offset: 320)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !1645, file: !1553, line: 102, baseType: !753, size: 64, offset: 384)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1645, file: !1553, line: 104, baseType: !48, size: 32, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1645, file: !1553, line: 105, baseType: !48, size: 32, offset: 480)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !1629, file: !1553, line: 135, baseType: !567, size: 96, offset: 1088)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1629, file: !1553, line: 136, baseType: !389, size: 32, offset: 1184)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1629, file: !1553, line: 139, baseType: !48, size: 32, offset: 1216)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !1629, file: !1553, line: 139, baseType: !48, size: 32, offset: 1248)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !1629, file: !1553, line: 139, baseType: !48, size: 32, offset: 1280)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1629, file: !1553, line: 140, baseType: !567, size: 96, offset: 1312)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !1629, file: !1553, line: 143, baseType: !184, size: 16, offset: 1408)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1629, file: !1553, line: 144, baseType: !184, size: 16, offset: 1424)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !1629, file: !1553, line: 145, baseType: !184, size: 16, offset: 1440)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !1629, file: !1553, line: 148, baseType: !184, size: 16, offset: 1456)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !1629, file: !1553, line: 149, baseType: !48, size: 32, offset: 1472)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !1629, file: !1553, line: 150, baseType: !389, size: 32, offset: 1504)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1629, file: !1553, line: 152, baseType: !597, size: 64, offset: 1536)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1629, file: !1553, line: 163, baseType: !389, size: 32, offset: 1600)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1629, file: !1553, line: 163, baseType: !389, size: 32, offset: 1632)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !1620, file: !1553, line: 261, baseType: !389, size: 32, offset: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !1620, file: !1553, line: 261, baseType: !389, size: 32, offset: 224)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !1620, file: !1553, line: 261, baseType: !389, size: 32, offset: 256)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1620, file: !1553, line: 263, baseType: !48, size: 32, offset: 288)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1620, file: !1553, line: 266, baseType: !48, size: 32, offset: 320)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1620, file: !1553, line: 267, baseType: !389, size: 32, offset: 352)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !1552, file: !1553, line: 347, baseType: !1627, size: 64, offset: 1856)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !1552, file: !1553, line: 348, baseType: !1678, size: 64, offset: 1920)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !1553, line: 205, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !1553, line: 186, size: 1024, elements: !1681)
!1681 = !{!1682, !1684, !1685, !1686, !1688, !1689, !1690, !1698, !1699, !1700, !1701, !1702}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1680, file: !1553, line: 187, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1680, file: !1553, line: 187, baseType: !1683, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1680, file: !1553, line: 189, baseType: !233, size: 512, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !1680, file: !1553, line: 191, baseType: !1687, size: 64, offset: 640)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !1680, file: !1553, line: 193, baseType: !48, size: 32, offset: 704)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1680, file: !1553, line: 193, baseType: !48, size: 32, offset: 736)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1680, file: !1553, line: 195, baseType: !1691, size: 64, offset: 768)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !1553, line: 184, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !1553, line: 166, size: 320, elements: !1694)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !1693, file: !1553, line: 180, baseType: !1649, size: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1693, file: !1553, line: 182, baseType: !48, size: 32, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1693, file: !1553, line: 183, baseType: !48, size: 32, offset: 288)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !1680, file: !1553, line: 196, baseType: !48, size: 32, offset: 832)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1680, file: !1553, line: 198, baseType: !48, size: 32, offset: 864)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !1680, file: !1553, line: 200, baseType: !908, size: 64, offset: 896)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !1680, file: !1553, line: 201, baseType: !389, size: 32, offset: 960)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !1680, file: !1553, line: 204, baseType: !48, size: 32, offset: 992)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1552, file: !1553, line: 350, baseType: !139, size: 128, offset: 1984)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !1552, file: !1553, line: 351, baseType: !48, size: 32, offset: 2112)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !1552, file: !1553, line: 351, baseType: !48, size: 32, offset: 2144)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1552, file: !1553, line: 353, baseType: !1707, size: 64, offset: 2176)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !1553, line: 297, baseType: !1709)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !1553, line: 295, size: 2048, elements: !1710)
!1710 = !{!1711}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !1709, file: !1553, line: 296, baseType: !293, size: 2048)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !1552, file: !1553, line: 355, baseType: !1713, size: 384, offset: 2240)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !1553, line: 338, baseType: !1714)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !1553, line: 322, size: 384, elements: !1715)
!1715 = !{!1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1714, file: !1553, line: 323, baseType: !48, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !1714, file: !1553, line: 325, baseType: !184, size: 16, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1714, file: !1553, line: 326, baseType: !184, size: 16, offset: 48)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !1714, file: !1553, line: 331, baseType: !139, size: 128, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !1714, file: !1553, line: 334, baseType: !139, size: 128, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !1714, file: !1553, line: 335, baseType: !48, size: 32, offset: 320)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1714, file: !1553, line: 337, baseType: !48, size: 32, offset: 352)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1535, file: !1536, line: 81, baseType: !124, size: 64, offset: 12224)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1535, file: !1536, line: 85, baseType: !1725, size: 6208, offset: 12288)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1536, line: 55, size: 6208, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1725, file: !1536, line: 56, baseType: !1364, size: 6144)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1725, file: !1536, line: 58, baseType: !184, size: 16, offset: 6144)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1725, file: !1536, line: 59, baseType: !184, size: 16, offset: 6160)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !1725, file: !1536, line: 60, baseType: !184, size: 16, offset: 6176)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !1725, file: !1536, line: 61, baseType: !184, size: 16, offset: 6192)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1535, file: !1536, line: 86, baseType: !48, size: 32, offset: 18496)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1535, file: !1536, line: 88, baseType: !48, size: 32, offset: 18528)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1535, file: !1536, line: 90, baseType: !48, size: 32, offset: 18560)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1535, file: !1536, line: 94, baseType: !48, size: 32, offset: 18592)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1535, file: !1536, line: 100, baseType: !970, size: 512, offset: 18624)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !500, file: !501, line: 1289, baseType: !189, size: 64, offset: 37184)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !500, file: !501, line: 1290, baseType: !189, size: 64, offset: 37248)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !500, file: !501, line: 1293, baseType: !1142, size: 1280, offset: 37312)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !500, file: !501, line: 1294, baseType: !1200, size: 512, offset: 38592)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !500, file: !501, line: 1295, baseType: !970, size: 512, offset: 39104)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !500, file: !501, line: 1298, baseType: !1743, size: 64, offset: 39616)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !501, line: 1298, flags: DIFlagFwdDecl)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "noteflag", scope: !92, file: !93, line: 191, baseType: !48, size: 32, offset: 960)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "editable", scope: !92, file: !93, line: 194, baseType: !1747, size: 64, offset: 1024)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditableFunc", file: !93, line: 67, baseType: !1748)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!48, !117}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "itemeditable", scope: !92, file: !93, line: 196, baseType: !1752, size: 64, offset: 1088)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "ItemEditableFunc", file: !93, line: 68, baseType: !1753)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!48, !117, !48}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "rawoffset", scope: !92, file: !93, line: 199, baseType: !48, size: 32, offset: 1152)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "rawtype", scope: !92, file: !93, line: 200, baseType: !1758, size: 32, offset: 1184)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "RawPropertyType", file: !6, line: 293, baseType: !47)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !92, file: !93, line: 205, baseType: !126, size: 64, offset: 1216)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "py_data", scope: !92, file: !93, line: 209, baseType: !124, size: 64, offset: 1280)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskParent", file: !85, line: 73, baseType: !1763)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskParent", file: !85, line: 59, size: 1472, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "id_type", scope: !1763, file: !85, line: 61, baseType: !48, size: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1763, file: !85, line: 62, baseType: !48, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1763, file: !85, line: 63, baseType: !248, size: 64, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1763, file: !85, line: 65, baseType: !233, size: 512, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "sub_parent", scope: !1763, file: !85, line: 67, baseType: !233, size: 512, offset: 640)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "parent_orig", scope: !1763, file: !85, line: 69, baseType: !753, size: 64, offset: 1152)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "parent_corners_orig", scope: !1763, file: !85, line: 72, baseType: !1649, size: 256, offset: 1216)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePointUW", file: !85, line: 78, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePointUW", file: !85, line: 75, size: 96, elements: !1775)
!1775 = !{!1776, !1777, !1778}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1774, file: !85, line: 76, baseType: !389, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1774, file: !85, line: 76, baseType: !389, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1774, file: !85, line: 77, baseType: !48, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSplinePoint", file: !85, line: 86, baseType: !1781)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSplinePoint", file: !85, line: 80, size: 2176, elements: !1782)
!1782 = !{!1783, !1806, !1807, !1808, !1809}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "bezt", scope: !1781, file: !85, line: 81, baseType: !1784, size: 576)
!1784 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !57, line: 133, baseType: !1785)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !57, line: 117, size: 576, elements: !1786)
!1786 = !{!1787, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1785, file: !57, line: 118, baseType: !1788, size: 288)
!1788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 288, elements: !1789)
!1789 = !{!492, !492}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !1785, file: !57, line: 119, baseType: !389, size: 32, offset: 288)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1785, file: !57, line: 119, baseType: !389, size: 32, offset: 320)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1785, file: !57, line: 119, baseType: !389, size: 32, offset: 352)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1785, file: !57, line: 121, baseType: !102, size: 8, offset: 384)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !1785, file: !57, line: 123, baseType: !102, size: 8, offset: 392)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !1785, file: !57, line: 123, baseType: !102, size: 8, offset: 400)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !1785, file: !57, line: 124, baseType: !102, size: 8, offset: 408)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !1785, file: !57, line: 124, baseType: !102, size: 8, offset: 416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !1785, file: !57, line: 124, baseType: !102, size: 8, offset: 424)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !1785, file: !57, line: 126, baseType: !102, size: 8, offset: 432)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !1785, file: !57, line: 128, baseType: !102, size: 8, offset: 440)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1785, file: !57, line: 129, baseType: !389, size: 32, offset: 448)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !1785, file: !57, line: 130, baseType: !389, size: 32, offset: 480)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1785, file: !57, line: 130, baseType: !389, size: 32, offset: 512)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1785, file: !57, line: 132, baseType: !1805, size: 32, offset: 544)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !102, size: 32, elements: !639)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1781, file: !85, line: 82, baseType: !48, size: 32, offset: 576)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "tot_uw", scope: !1781, file: !85, line: 83, baseType: !48, size: 32, offset: 608)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uw", scope: !1781, file: !85, line: 84, baseType: !1772, size: 64, offset: 640)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1781, file: !85, line: 85, baseType: !1762, size: 1472, offset: 704)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskSpline", file: !85, line: 100, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskSpline", file: !85, line: 88, size: 1792, elements: !1813)
!1813 = !{!1814, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1812, file: !85, line: 89, baseType: !1815, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1812, file: !85, line: 89, baseType: !1815, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1812, file: !85, line: 91, baseType: !184, size: 16, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "offset_mode", scope: !1812, file: !85, line: 92, baseType: !102, size: 8, offset: 144)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "weight_interp", scope: !1812, file: !85, line: 93, baseType: !102, size: 8, offset: 152)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tot_point", scope: !1812, file: !85, line: 95, baseType: !48, size: 32, offset: 160)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1812, file: !85, line: 96, baseType: !1779, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1812, file: !85, line: 97, baseType: !1762, size: 1472, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "points_deform", scope: !1812, file: !85, line: 99, baseType: !1779, size: 64, offset: 1728)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "MaskLayer", file: !85, line: 142, baseType: !1826)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MaskLayer", file: !85, line: 122, size: 1152, elements: !1827)
!1827 = !{!1828, !1830, !1831, !1832, !1833, !1834, !1835, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1826, file: !85, line: 123, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1826, file: !85, line: 123, baseType: !1829, size: 64, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1826, file: !85, line: 125, baseType: !233, size: 512, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "splines", scope: !1826, file: !85, line: 127, baseType: !139, size: 128, offset: 640)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "splines_shapes", scope: !1826, file: !85, line: 128, baseType: !139, size: 128, offset: 768)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "act_spline", scope: !1826, file: !85, line: 130, baseType: !1815, size: 64, offset: 896)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "act_point", scope: !1826, file: !85, line: 131, baseType: !1836, size: 64, offset: 960)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1826, file: !85, line: 134, baseType: !389, size: 32, offset: 1024)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !1826, file: !85, line: 135, baseType: !102, size: 8, offset: 1056)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "blend_flag", scope: !1826, file: !85, line: 136, baseType: !102, size: 8, offset: 1064)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !1826, file: !85, line: 137, baseType: !102, size: 8, offset: 1072)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1826, file: !85, line: 138, baseType: !977, size: 56, offset: 1080)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1826, file: !85, line: 140, baseType: !102, size: 8, offset: 1136)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1826, file: !85, line: 141, baseType: !102, size: 8, offset: 1144)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mask", file: !85, line: 57, baseType: !1846)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !85, line: 46, size: 1344, elements: !1847)
!1847 = !{!1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1846, file: !85, line: 47, baseType: !205, size: 960)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1846, file: !85, line: 48, baseType: !505, size: 64, offset: 960)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "masklayers", scope: !1846, file: !85, line: 49, baseType: !139, size: 128, offset: 1024)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_act", scope: !1846, file: !85, line: 50, baseType: !48, size: 32, offset: 1152)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "masklay_tot", scope: !1846, file: !85, line: 51, baseType: !48, size: 32, offset: 1184)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1846, file: !85, line: 53, baseType: !48, size: 32, offset: 1216)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1846, file: !85, line: 53, baseType: !48, size: 32, offset: 1248)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1846, file: !85, line: 55, baseType: !48, size: 32, offset: 1280)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1846, file: !85, line: 56, baseType: !48, size: 32, offset: 1312)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClip", file: !1536, line: 101, baseType: !1535)
!1865 = !{!0, !1866, !1896, !1898, !1940, !1942, !1974, !1976, !1978, !2060, !2062, !2129, !2131, !2169, !2171, !2173, !2175, !2177, !2179, !2181, !2183, !2185, !2187, !2189, !2191, !2193, !2195, !2197, !2199, !2201, !2203, !2205, !2207, !2209, !2211, !2213, !2215, !2217, !2219, !2221, !2223, !2225, !2228, !2230, !2232, !2234, !2236, !2238, !2277, !2279, !2281, !2283, !2285, !2287, !2289, !2291, !2293, !2295, !2297, !2299, !2301, !2303, !2305, !2307, !2309, !2311, !2313, !2315, !2317, !2319, !2321, !2323, !2325, !2327, !2329, !2331, !2333, !2335, !2337, !2339, !2341, !2343, !2345, !2347, !2350, !2353, !2355, !2357, !2359, !2362, !2364, !2366, !2368, !2370, !2375}
!1866 = !DIGlobalVariableExpression(var: !1867, expr: !DIExpression())
!1867 = distinct !DIGlobalVariable(name: "rna_MaskParent_rna_type", scope: !2, file: !3, line: 2337, type: !1868, isLocal: false, isDefinition: true)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerPropertyRNA", file: !93, line: 320, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerPropertyRNA", file: !93, line: 311, size: 1664, elements: !1870)
!1870 = !{!1871, !1872, !1877, !1883, !1890, !1895}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1869, file: !93, line: 312, baseType: !91, size: 1344)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1869, file: !93, line: 314, baseType: !1873, size: 64, offset: 1344)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerGetFunc", file: !93, line: 95, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!454, !117}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1869, file: !93, line: 315, baseType: !1878, size: 64, offset: 1408)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerSetFunc", file: !93, line: 97, baseType: !1879)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !117, !1882}
!1882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "typef", scope: !1869, file: !93, line: 316, baseType: !1884, size: 64, offset: 1472)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerTypeFunc", file: !93, line: 96, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!1888, !117}
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !6, line: 417, baseType: !127)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1869, file: !93, line: 317, baseType: !1891, size: 64, offset: 1536)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropPointerPollFunc", file: !93, line: 98, baseType: !1892)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!48, !117, !1882}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1869, file: !93, line: 319, baseType: !126, size: 64, offset: 1600)
!1896 = !DIGlobalVariableExpression(var: !1897, expr: !DIExpression())
!1897 = distinct !DIGlobalVariable(name: "rna_MaskParent_id", scope: !2, file: !3, line: 2348, type: !1868, isLocal: false, isDefinition: true)
!1898 = !DIGlobalVariableExpression(var: !1899, expr: !DIExpression())
!1899 = distinct !DIGlobalVariable(name: "rna_MaskParent_id_type", scope: !2, file: !3, line: 2364, type: !1900, isLocal: false, isDefinition: true)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyRNA", file: !93, line: 309, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyRNA", file: !93, line: 294, size: 1856, elements: !1902)
!1902 = !{!1903, !1904, !1906, !1911, !1926, !1931, !1936, !1937, !1938, !1939}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1901, file: !93, line: 295, baseType: !91, size: 1344)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1901, file: !93, line: 297, baseType: !1905, size: 64, offset: 1344)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumGetFunc", file: !93, line: 91, baseType: !1748)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1901, file: !93, line: 298, baseType: !1907, size: 64, offset: 1408)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumSetFunc", file: !93, line: 92, baseType: !1908)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DISubroutineType(types: !1910)
!1910 = !{null, !117, !48}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "itemf", scope: !1901, file: !93, line: 299, baseType: !1912, size: 64, offset: 1472)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumItemFunc", file: !93, line: 93, baseType: !1913)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!1916, !439, !117, !96, !1925}
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !6, line: 308, baseType: !1918)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !6, line: 302, size: 320, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1918, file: !6, line: 303, baseType: !48, size: 32)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1918, file: !6, line: 304, baseType: !100, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !1918, file: !6, line: 305, baseType: !48, size: 32, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1918, file: !6, line: 306, baseType: !100, size: 64, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1918, file: !6, line: 307, baseType: !100, size: 64, offset: 256)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !1901, file: !93, line: 301, baseType: !1927, size: 64, offset: 1536)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumGetFuncEx", file: !93, line: 126, baseType: !1928)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DISubroutineType(types: !1930)
!1930 = !{!48, !117, !96}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !1901, file: !93, line: 302, baseType: !1932, size: 64, offset: 1600)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropEnumSetFuncEx", file: !93, line: 127, baseType: !1933)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !117, !96, !48}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "py_data", scope: !1901, file: !93, line: 303, baseType: !124, size: 64, offset: 1664)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "item", scope: !1901, file: !93, line: 305, baseType: !1916, size: 64, offset: 1728)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "totitem", scope: !1901, file: !93, line: 306, baseType: !48, size: 32, offset: 1792)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !1901, file: !93, line: 308, baseType: !48, size: 32, offset: 1824)
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "rna_MaskParent_type", scope: !2, file: !3, line: 2381, type: !1900, isLocal: false, isDefinition: true)
!1942 = !DIGlobalVariableExpression(var: !1943, expr: !DIExpression())
!1943 = distinct !DIGlobalVariable(name: "rna_MaskParent_parent", scope: !2, file: !3, line: 2392, type: !1944, isLocal: false, isDefinition: true)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "StringPropertyRNA", file: !93, line: 292, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StringPropertyRNA", file: !93, line: 278, size: 1856, elements: !1946)
!1946 = !{!1947, !1948, !1953, !1955, !1960, !1965, !1967, !1972, !1973}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1945, file: !93, line: 279, baseType: !91, size: 1344)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1945, file: !93, line: 281, baseType: !1949, size: 64, offset: 1344)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringGetFunc", file: !93, line: 88, baseType: !1950)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !117, !167}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1945, file: !93, line: 282, baseType: !1954, size: 64, offset: 1408)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringLengthFunc", file: !93, line: 89, baseType: !1748)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1945, file: !93, line: 283, baseType: !1956, size: 64, offset: 1472)
!1956 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringSetFunc", file: !93, line: 90, baseType: !1957)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{null, !117, !100}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !1945, file: !93, line: 285, baseType: !1961, size: 64, offset: 1536)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringGetFuncEx", file: !93, line: 123, baseType: !1962)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DISubroutineType(types: !1964)
!1964 = !{null, !117, !96, !167}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "length_ex", scope: !1945, file: !93, line: 286, baseType: !1966, size: 64, offset: 1600)
!1966 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringLengthFuncEx", file: !93, line: 124, baseType: !1928)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !1945, file: !93, line: 287, baseType: !1968, size: 64, offset: 1664)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropStringSetFuncEx", file: !93, line: 125, baseType: !1969)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !117, !96, !100}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "maxlength", scope: !1945, file: !93, line: 289, baseType: !48, size: 32, offset: 1728)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !1945, file: !93, line: 291, baseType: !100, size: 64, offset: 1792)
!1974 = !DIGlobalVariableExpression(var: !1975, expr: !DIExpression())
!1975 = distinct !DIGlobalVariable(name: "rna_MaskParent_sub_parent", scope: !2, file: !3, line: 2403, type: !1944, isLocal: false, isDefinition: true)
!1976 = !DIGlobalVariableExpression(var: !1977, expr: !DIExpression())
!1977 = distinct !DIGlobalVariable(name: "RNA_MaskParent", scope: !2, file: !3, line: 2414, type: !1889, isLocal: false, isDefinition: true)
!1978 = !DIGlobalVariableExpression(var: !1979, expr: !DIExpression())
!1979 = distinct !DIGlobalVariable(name: "rna_MaskSplinePointUW_rna_properties", scope: !2, file: !3, line: 2434, type: !1980, isLocal: false, isDefinition: true)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyRNA", file: !93, line: 335, baseType: !1981)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyRNA", file: !93, line: 322, size: 1920, elements: !1982)
!1982 = !{!1983, !1984, !2028, !2033, !2035, !2040, !2042, !2047, !2052, !2059}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !1981, file: !93, line: 323, baseType: !91, size: 1344)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1981, file: !93, line: 325, baseType: !1985, size: 64, offset: 1344)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionBeginFunc", file: !93, line: 99, baseType: !1986)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DISubroutineType(types: !1988)
!1988 = !{null, !1989, !117}
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !6, line: 264, size: 1088, elements: !1991)
!1991 = !{!1992, !1993, !1994, !1995, !2024, !2025, !2026, !2027}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1990, file: !6, line: 266, baseType: !454, size: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !1990, file: !6, line: 267, baseType: !454, size: 192, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1990, file: !6, line: 268, baseType: !96, size: 64, offset: 384)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !1990, file: !6, line: 272, baseType: !1996, size: 320, offset: 448)
!1996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1990, file: !6, line: 269, size: 320, elements: !1997)
!1997 = !{!1998, !2012}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1996, file: !6, line: 270, baseType: !1999, size: 320)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !6, line: 262, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !6, line: 249, size: 320, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005, !2006, !2007}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2000, file: !6, line: 250, baseType: !167, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !2000, file: !6, line: 251, baseType: !167, size: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !2000, file: !6, line: 252, baseType: !124, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !2000, file: !6, line: 253, baseType: !48, size: 32, offset: 192)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2000, file: !6, line: 257, baseType: !48, size: 32, offset: 224)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2000, file: !6, line: 261, baseType: !2008, size: 64, offset: 256)
!2008 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !6, line: 241, baseType: !2009)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!48, !1989, !124}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !1996, file: !6, line: 271, baseType: !2013, size: 192)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !6, line: 247, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !6, line: 243, size: 192, elements: !2015)
!2015 = !{!2016, !2022, !2023}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2014, file: !6, line: 244, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !140, line: 57, size: 128, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2018, file: !140, line: 58, baseType: !2017, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2018, file: !140, line: 58, baseType: !2017, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2014, file: !6, line: 245, baseType: !48, size: 32, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !2014, file: !6, line: 246, baseType: !2008, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !1990, file: !6, line: 273, baseType: !48, size: 32, offset: 768)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1990, file: !6, line: 274, baseType: !48, size: 32, offset: 800)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1990, file: !6, line: 277, baseType: !454, size: 192, offset: 832)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !1990, file: !6, line: 278, baseType: !48, size: 32, offset: 1024)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1981, file: !93, line: 326, baseType: !2029, size: 64, offset: 1408)
!2029 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionNextFunc", file: !93, line: 100, baseType: !2030)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{null, !1989}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1981, file: !93, line: 327, baseType: !2034, size: 64, offset: 1472)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionEndFunc", file: !93, line: 101, baseType: !2030)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1981, file: !93, line: 328, baseType: !2036, size: 64, offset: 1536)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionGetFunc", file: !93, line: 102, baseType: !2037)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!454, !1989}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1981, file: !93, line: 329, baseType: !2041, size: 64, offset: 1600)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLengthFunc", file: !93, line: 103, baseType: !1748)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "lookupint", scope: !1981, file: !93, line: 330, baseType: !2043, size: 64, offset: 1664)
!2043 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLookupIntFunc", file: !93, line: 104, baseType: !2044)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!48, !117, !48, !117}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "lookupstring", scope: !1981, file: !93, line: 331, baseType: !2048, size: 64, offset: 1728)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionLookupStringFunc", file: !93, line: 105, baseType: !2049)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{!48, !117, !100, !117}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "assignint", scope: !1981, file: !93, line: 332, baseType: !2053, size: 64, offset: 1792)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropCollectionAssignIntFunc", file: !93, line: 106, baseType: !2054)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{!48, !117, !48, !2057}
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !118)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "item_type", scope: !1981, file: !93, line: 334, baseType: !126, size: 64, offset: 1856)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "rna_MaskSplinePointUW_rna_type", scope: !2, file: !3, line: 2445, type: !1868, isLocal: false, isDefinition: true)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "rna_MaskSplinePointUW_u", scope: !2, file: !3, line: 2456, type: !2064, isLocal: false, isDefinition: true)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FloatPropertyRNA", file: !93, line: 276, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FloatPropertyRNA", file: !93, line: 254, size: 2304, elements: !2066)
!2066 = !{!2067, !2068, !2073, !2078, !2084, !2091, !2096, !2101, !2106, !2111, !2116, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2065, file: !93, line: 255, baseType: !91, size: 1344)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2065, file: !93, line: 257, baseType: !2069, size: 64, offset: 1344)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatGetFunc", file: !93, line: 83, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!389, !117}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2065, file: !93, line: 258, baseType: !2074, size: 64, offset: 1408)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatSetFunc", file: !93, line: 84, baseType: !2075)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{null, !117, !389}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2065, file: !93, line: 259, baseType: !2079, size: 64, offset: 1472)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArrayGetFunc", file: !93, line: 85, baseType: !2080)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{null, !117, !2083}
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2065, file: !93, line: 260, baseType: !2085, size: 64, offset: 1536)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArraySetFunc", file: !93, line: 86, baseType: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !117, !2089}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2065, file: !93, line: 261, baseType: !2092, size: 64, offset: 1600)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatRangeFunc", file: !93, line: 87, baseType: !2093)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !117, !2083, !2083, !2083, !2083}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2065, file: !93, line: 263, baseType: !2097, size: 64, offset: 1664)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatGetFuncEx", file: !93, line: 118, baseType: !2098)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!389, !117, !96}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2065, file: !93, line: 264, baseType: !2102, size: 64, offset: 1728)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatSetFuncEx", file: !93, line: 119, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !117, !96, !389}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2065, file: !93, line: 265, baseType: !2107, size: 64, offset: 1792)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArrayGetFuncEx", file: !93, line: 120, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{null, !117, !96, !2083}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2065, file: !93, line: 266, baseType: !2112, size: 64, offset: 1856)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatArraySetFuncEx", file: !93, line: 121, baseType: !2113)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{null, !117, !96, !2089}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "range_ex", scope: !2065, file: !93, line: 267, baseType: !2117, size: 64, offset: 1920)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropFloatRangeFuncEx", file: !93, line: 122, baseType: !2118)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DISubroutineType(types: !2120)
!2120 = !{null, !117, !96, !2083, !2083, !2083, !2083}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !2065, file: !93, line: 269, baseType: !389, size: 32, offset: 1984)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !2065, file: !93, line: 269, baseType: !389, size: 32, offset: 2016)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !2065, file: !93, line: 270, baseType: !389, size: 32, offset: 2048)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !2065, file: !93, line: 270, baseType: !389, size: 32, offset: 2080)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2065, file: !93, line: 271, baseType: !389, size: 32, offset: 2112)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2065, file: !93, line: 272, baseType: !48, size: 32, offset: 2144)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2065, file: !93, line: 274, baseType: !389, size: 32, offset: 2176)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2065, file: !93, line: 275, baseType: !2089, size: 64, offset: 2240)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "rna_MaskSplinePointUW_weight", scope: !2, file: !3, line: 2467, type: !2064, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "rna_MaskSplinePointUW_select", scope: !2, file: !3, line: 2478, type: !2133, isLocal: false, isDefinition: true)
!2133 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoolPropertyRNA", file: !93, line: 229, baseType: !2134)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoolPropertyRNA", file: !93, line: 214, size: 1984, elements: !2135)
!2135 = !{!2136, !2137, !2139, !2141, !2146, !2153, !2155, !2157, !2162, !2167, !2168}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2134, file: !93, line: 215, baseType: !91, size: 1344)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2134, file: !93, line: 217, baseType: !2138, size: 64, offset: 1344)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanGetFunc", file: !93, line: 74, baseType: !1748)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2134, file: !93, line: 218, baseType: !2140, size: 64, offset: 1408)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanSetFunc", file: !93, line: 75, baseType: !1908)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2134, file: !93, line: 219, baseType: !2142, size: 64, offset: 1472)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArrayGetFunc", file: !93, line: 76, baseType: !2143)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{null, !117, !434}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2134, file: !93, line: 220, baseType: !2147, size: 64, offset: 1536)
!2147 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArraySetFunc", file: !93, line: 77, baseType: !2148)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{null, !117, !2151}
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !48)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2134, file: !93, line: 222, baseType: !2154, size: 64, offset: 1600)
!2154 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanGetFuncEx", file: !93, line: 109, baseType: !1928)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2134, file: !93, line: 223, baseType: !2156, size: 64, offset: 1664)
!2156 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanSetFuncEx", file: !93, line: 110, baseType: !1933)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2134, file: !93, line: 224, baseType: !2158, size: 64, offset: 1728)
!2158 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArrayGetFuncEx", file: !93, line: 111, baseType: !2159)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DISubroutineType(types: !2161)
!2161 = !{null, !117, !96, !434}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2134, file: !93, line: 225, baseType: !2163, size: 64, offset: 1792)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropBooleanArraySetFuncEx", file: !93, line: 112, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !117, !96, !2151}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2134, file: !93, line: 227, baseType: !48, size: 32, offset: 1856)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2134, file: !93, line: 228, baseType: !2151, size: 64, offset: 1920)
!2169 = !DIGlobalVariableExpression(var: !2170, expr: !DIExpression())
!2170 = distinct !DIGlobalVariable(name: "RNA_MaskSplinePointUW", scope: !2, file: !3, line: 2489, type: !1889, isLocal: false, isDefinition: true)
!2171 = !DIGlobalVariableExpression(var: !2172, expr: !DIExpression())
!2172 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_rna_properties", scope: !2, file: !3, line: 2509, type: !1980, isLocal: false, isDefinition: true)
!2173 = !DIGlobalVariableExpression(var: !2174, expr: !DIExpression())
!2174 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_rna_type", scope: !2, file: !3, line: 2520, type: !1868, isLocal: false, isDefinition: true)
!2175 = !DIGlobalVariableExpression(var: !2176, expr: !DIExpression())
!2176 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_left", scope: !2, file: !3, line: 2536, type: !2064, isLocal: false, isDefinition: true)
!2177 = !DIGlobalVariableExpression(var: !2178, expr: !DIExpression())
!2178 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_co", scope: !2, file: !3, line: 2552, type: !2064, isLocal: false, isDefinition: true)
!2179 = !DIGlobalVariableExpression(var: !2180, expr: !DIExpression())
!2180 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_right", scope: !2, file: !3, line: 2568, type: !2064, isLocal: false, isDefinition: true)
!2181 = !DIGlobalVariableExpression(var: !2182, expr: !DIExpression())
!2182 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_type", scope: !2, file: !3, line: 2588, type: !1900, isLocal: false, isDefinition: true)
!2183 = !DIGlobalVariableExpression(var: !2184, expr: !DIExpression())
!2184 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_left_type", scope: !2, file: !3, line: 2608, type: !1900, isLocal: false, isDefinition: true)
!2185 = !DIGlobalVariableExpression(var: !2186, expr: !DIExpression())
!2186 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_right_type", scope: !2, file: !3, line: 2628, type: !1900, isLocal: false, isDefinition: true)
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_weight", scope: !2, file: !3, line: 2639, type: !2064, isLocal: false, isDefinition: true)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_select", scope: !2, file: !3, line: 2650, type: !2133, isLocal: false, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_parent", scope: !2, file: !3, line: 2661, type: !1868, isLocal: false, isDefinition: true)
!2193 = !DIGlobalVariableExpression(var: !2194, expr: !DIExpression())
!2194 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_feather_points", scope: !2, file: !3, line: 2672, type: !1980, isLocal: false, isDefinition: true)
!2195 = !DIGlobalVariableExpression(var: !2196, expr: !DIExpression())
!2196 = distinct !DIGlobalVariable(name: "RNA_MaskSplinePoint", scope: !2, file: !3, line: 2683, type: !1889, isLocal: false, isDefinition: true)
!2197 = !DIGlobalVariableExpression(var: !2198, expr: !DIExpression())
!2198 = distinct !DIGlobalVariable(name: "rna_MaskSpline_rna_properties", scope: !2, file: !3, line: 2703, type: !1980, isLocal: false, isDefinition: true)
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "rna_MaskSpline_rna_type", scope: !2, file: !3, line: 2714, type: !1868, isLocal: false, isDefinition: true)
!2201 = !DIGlobalVariableExpression(var: !2202, expr: !DIExpression())
!2202 = distinct !DIGlobalVariable(name: "rna_MaskSpline_offset_mode", scope: !2, file: !3, line: 2731, type: !1900, isLocal: false, isDefinition: true)
!2203 = !DIGlobalVariableExpression(var: !2204, expr: !DIExpression())
!2204 = distinct !DIGlobalVariable(name: "rna_MaskSpline_weight_interpolation", scope: !2, file: !3, line: 2748, type: !1900, isLocal: false, isDefinition: true)
!2205 = !DIGlobalVariableExpression(var: !2206, expr: !DIExpression())
!2206 = distinct !DIGlobalVariable(name: "rna_MaskSpline_use_cyclic", scope: !2, file: !3, line: 2759, type: !2133, isLocal: false, isDefinition: true)
!2207 = !DIGlobalVariableExpression(var: !2208, expr: !DIExpression())
!2208 = distinct !DIGlobalVariable(name: "rna_MaskSpline_use_fill", scope: !2, file: !3, line: 2770, type: !2133, isLocal: false, isDefinition: true)
!2209 = !DIGlobalVariableExpression(var: !2210, expr: !DIExpression())
!2210 = distinct !DIGlobalVariable(name: "rna_MaskSpline_use_self_intersection_check", scope: !2, file: !3, line: 2781, type: !2133, isLocal: false, isDefinition: true)
!2211 = !DIGlobalVariableExpression(var: !2212, expr: !DIExpression())
!2212 = distinct !DIGlobalVariable(name: "rna_MaskSpline_points", scope: !2, file: !3, line: 2792, type: !1980, isLocal: false, isDefinition: true)
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "RNA_MaskSpline", scope: !2, file: !3, line: 2803, type: !1889, isLocal: false, isDefinition: true)
!2215 = !DIGlobalVariableExpression(var: !2216, expr: !DIExpression())
!2216 = distinct !DIGlobalVariable(name: "rna_MaskSplines_rna_properties", scope: !2, file: !3, line: 2823, type: !1980, isLocal: false, isDefinition: true)
!2217 = !DIGlobalVariableExpression(var: !2218, expr: !DIExpression())
!2218 = distinct !DIGlobalVariable(name: "rna_MaskSplines_rna_type", scope: !2, file: !3, line: 2834, type: !1868, isLocal: false, isDefinition: true)
!2219 = !DIGlobalVariableExpression(var: !2220, expr: !DIExpression())
!2220 = distinct !DIGlobalVariable(name: "rna_MaskSplines_active", scope: !2, file: !3, line: 2845, type: !1868, isLocal: false, isDefinition: true)
!2221 = !DIGlobalVariableExpression(var: !2222, expr: !DIExpression())
!2222 = distinct !DIGlobalVariable(name: "rna_MaskSplines_active_point", scope: !2, file: !3, line: 2856, type: !1868, isLocal: false, isDefinition: true)
!2223 = !DIGlobalVariableExpression(var: !2224, expr: !DIExpression())
!2224 = distinct !DIGlobalVariable(name: "rna_MaskSplines_new_spline", scope: !2, file: !3, line: 2867, type: !1868, isLocal: false, isDefinition: true)
!2225 = !DIGlobalVariableExpression(var: !2226, expr: !DIExpression())
!2226 = distinct !DIGlobalVariable(name: "rna_MaskSplines_new_func", scope: !2, file: !3, line: 2878, type: !2227, isLocal: false, isDefinition: true)
!2227 = !DIDerivedType(tag: DW_TAG_typedef, name: "FunctionRNA", file: !6, line: 390, baseType: !442)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "rna_MaskSplines_remove_spline", scope: !2, file: !3, line: 2887, type: !1868, isLocal: false, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "rna_MaskSplines_remove_func", scope: !2, file: !3, line: 2898, type: !2227, isLocal: false, isDefinition: true)
!2232 = !DIGlobalVariableExpression(var: !2233, expr: !DIExpression())
!2233 = distinct !DIGlobalVariable(name: "RNA_MaskSplines", scope: !2, file: !3, line: 2907, type: !1889, isLocal: false, isDefinition: true)
!2234 = !DIGlobalVariableExpression(var: !2235, expr: !DIExpression())
!2235 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_rna_properties", scope: !2, file: !3, line: 2927, type: !1980, isLocal: false, isDefinition: true)
!2236 = !DIGlobalVariableExpression(var: !2237, expr: !DIExpression())
!2237 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_rna_type", scope: !2, file: !3, line: 2938, type: !1868, isLocal: false, isDefinition: true)
!2238 = !DIGlobalVariableExpression(var: !2239, expr: !DIExpression())
!2239 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_add_count", scope: !2, file: !3, line: 2949, type: !2240, isLocal: false, isDefinition: true)
!2240 = !DIDerivedType(tag: DW_TAG_typedef, name: "IntPropertyRNA", file: !93, line: 252, baseType: !2241)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IntPropertyRNA", file: !93, line: 231, size: 2240, elements: !2242)
!2242 = !{!2243, !2244, !2246, !2248, !2250, !2252, !2257, !2259, !2261, !2263, !2265, !2270, !2271, !2272, !2273, !2274, !2275, !2276}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "property", scope: !2241, file: !93, line: 232, baseType: !91, size: 1344)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2241, file: !93, line: 234, baseType: !2245, size: 64, offset: 1344)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntGetFunc", file: !93, line: 78, baseType: !1748)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2241, file: !93, line: 235, baseType: !2247, size: 64, offset: 1408)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntSetFunc", file: !93, line: 79, baseType: !1908)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "getarray", scope: !2241, file: !93, line: 236, baseType: !2249, size: 64, offset: 1472)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArrayGetFunc", file: !93, line: 80, baseType: !2143)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "setarray", scope: !2241, file: !93, line: 237, baseType: !2251, size: 64, offset: 1536)
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArraySetFunc", file: !93, line: 81, baseType: !2148)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2241, file: !93, line: 238, baseType: !2253, size: 64, offset: 1600)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntRangeFunc", file: !93, line: 82, baseType: !2254)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DISubroutineType(types: !2256)
!2256 = !{null, !117, !434, !434, !434, !434}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "get_ex", scope: !2241, file: !93, line: 240, baseType: !2258, size: 64, offset: 1664)
!2258 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntGetFuncEx", file: !93, line: 113, baseType: !1928)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "set_ex", scope: !2241, file: !93, line: 241, baseType: !2260, size: 64, offset: 1728)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntSetFuncEx", file: !93, line: 114, baseType: !1933)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "getarray_ex", scope: !2241, file: !93, line: 242, baseType: !2262, size: 64, offset: 1792)
!2262 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArrayGetFuncEx", file: !93, line: 115, baseType: !2159)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "setarray_ex", scope: !2241, file: !93, line: 243, baseType: !2264, size: 64, offset: 1856)
!2264 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntArraySetFuncEx", file: !93, line: 116, baseType: !2164)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "range_ex", scope: !2241, file: !93, line: 244, baseType: !2266, size: 64, offset: 1920)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropIntRangeFuncEx", file: !93, line: 117, baseType: !2267)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{null, !117, !96, !434, !434, !434, !434}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "softmin", scope: !2241, file: !93, line: 246, baseType: !48, size: 32, offset: 1984)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "softmax", scope: !2241, file: !93, line: 246, baseType: !48, size: 32, offset: 2016)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "hardmin", scope: !2241, file: !93, line: 247, baseType: !48, size: 32, offset: 2048)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "hardmax", scope: !2241, file: !93, line: 247, baseType: !48, size: 32, offset: 2080)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2241, file: !93, line: 248, baseType: !48, size: 32, offset: 2112)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "defaultvalue", scope: !2241, file: !93, line: 250, baseType: !48, size: 32, offset: 2144)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "defaultarray", scope: !2241, file: !93, line: 251, baseType: !2151, size: 64, offset: 2176)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_add_func", scope: !2, file: !3, line: 2961, type: !2227, isLocal: false, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_remove_point", scope: !2, file: !3, line: 2970, type: !1868, isLocal: false, isDefinition: true)
!2281 = !DIGlobalVariableExpression(var: !2282, expr: !DIExpression())
!2282 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoints_remove_func", scope: !2, file: !3, line: 2981, type: !2227, isLocal: false, isDefinition: true)
!2283 = !DIGlobalVariableExpression(var: !2284, expr: !DIExpression())
!2284 = distinct !DIGlobalVariable(name: "RNA_MaskSplinePoints", scope: !2, file: !3, line: 2990, type: !1889, isLocal: false, isDefinition: true)
!2285 = !DIGlobalVariableExpression(var: !2286, expr: !DIExpression())
!2286 = distinct !DIGlobalVariable(name: "rna_MaskLayer_rna_properties", scope: !2, file: !3, line: 3010, type: !1980, isLocal: false, isDefinition: true)
!2287 = !DIGlobalVariableExpression(var: !2288, expr: !DIExpression())
!2288 = distinct !DIGlobalVariable(name: "rna_MaskLayer_rna_type", scope: !2, file: !3, line: 3021, type: !1868, isLocal: false, isDefinition: true)
!2289 = !DIGlobalVariableExpression(var: !2290, expr: !DIExpression())
!2290 = distinct !DIGlobalVariable(name: "rna_MaskLayer_name", scope: !2, file: !3, line: 3032, type: !1944, isLocal: false, isDefinition: true)
!2291 = !DIGlobalVariableExpression(var: !2292, expr: !DIExpression())
!2292 = distinct !DIGlobalVariable(name: "rna_MaskLayer_splines", scope: !2, file: !3, line: 3043, type: !1980, isLocal: false, isDefinition: true)
!2293 = !DIGlobalVariableExpression(var: !2294, expr: !DIExpression())
!2294 = distinct !DIGlobalVariable(name: "rna_MaskLayer_hide", scope: !2, file: !3, line: 3054, type: !2133, isLocal: false, isDefinition: true)
!2295 = !DIGlobalVariableExpression(var: !2296, expr: !DIExpression())
!2296 = distinct !DIGlobalVariable(name: "rna_MaskLayer_hide_select", scope: !2, file: !3, line: 3065, type: !2133, isLocal: false, isDefinition: true)
!2297 = !DIGlobalVariableExpression(var: !2298, expr: !DIExpression())
!2298 = distinct !DIGlobalVariable(name: "rna_MaskLayer_hide_render", scope: !2, file: !3, line: 3076, type: !2133, isLocal: false, isDefinition: true)
!2299 = !DIGlobalVariableExpression(var: !2300, expr: !DIExpression())
!2300 = distinct !DIGlobalVariable(name: "rna_MaskLayer_select", scope: !2, file: !3, line: 3087, type: !2133, isLocal: false, isDefinition: true)
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(name: "rna_MaskLayer_alpha", scope: !2, file: !3, line: 3098, type: !2064, isLocal: false, isDefinition: true)
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "rna_MaskLayer_blend", scope: !2, file: !3, line: 3122, type: !1900, isLocal: false, isDefinition: true)
!2305 = !DIGlobalVariableExpression(var: !2306, expr: !DIExpression())
!2306 = distinct !DIGlobalVariable(name: "rna_MaskLayer_invert", scope: !2, file: !3, line: 3133, type: !2133, isLocal: false, isDefinition: true)
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "rna_MaskLayer_falloff", scope: !2, file: !3, line: 3153, type: !1900, isLocal: false, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "rna_MaskLayer_use_fill_holes", scope: !2, file: !3, line: 3164, type: !2133, isLocal: false, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "rna_MaskLayer_use_fill_overlap", scope: !2, file: !3, line: 3175, type: !2133, isLocal: false, isDefinition: true)
!2313 = !DIGlobalVariableExpression(var: !2314, expr: !DIExpression())
!2314 = distinct !DIGlobalVariable(name: "RNA_MaskLayer", scope: !2, file: !3, line: 3186, type: !1889, isLocal: false, isDefinition: true)
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "rna_Mask_layers", scope: !2, file: !3, line: 3206, type: !1980, isLocal: false, isDefinition: true)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "rna_Mask_active_layer_index", scope: !2, file: !3, line: 3217, type: !2240, isLocal: false, isDefinition: true)
!2319 = !DIGlobalVariableExpression(var: !2320, expr: !DIExpression())
!2320 = distinct !DIGlobalVariable(name: "rna_Mask_frame_start", scope: !2, file: !3, line: 3229, type: !2240, isLocal: false, isDefinition: true)
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "rna_Mask_frame_end", scope: !2, file: !3, line: 3241, type: !2240, isLocal: false, isDefinition: true)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "rna_Mask_animation_data", scope: !2, file: !3, line: 3253, type: !1868, isLocal: false, isDefinition: true)
!2325 = !DIGlobalVariableExpression(var: !2326, expr: !DIExpression())
!2326 = distinct !DIGlobalVariable(name: "RNA_Mask", scope: !2, file: !3, line: 3264, type: !1889, isLocal: false, isDefinition: true)
!2327 = !DIGlobalVariableExpression(var: !2328, expr: !DIExpression())
!2328 = distinct !DIGlobalVariable(name: "rna_MaskLayers_rna_properties", scope: !2, file: !3, line: 3284, type: !1980, isLocal: false, isDefinition: true)
!2329 = !DIGlobalVariableExpression(var: !2330, expr: !DIExpression())
!2330 = distinct !DIGlobalVariable(name: "rna_MaskLayers_rna_type", scope: !2, file: !3, line: 3295, type: !1868, isLocal: false, isDefinition: true)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "rna_MaskLayers_active", scope: !2, file: !3, line: 3306, type: !1868, isLocal: false, isDefinition: true)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "rna_MaskLayers_new_name", scope: !2, file: !3, line: 3317, type: !1944, isLocal: false, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "rna_MaskLayers_new_layer", scope: !2, file: !3, line: 3328, type: !1868, isLocal: false, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "rna_MaskLayers_new_func", scope: !2, file: !3, line: 3339, type: !2227, isLocal: false, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "rna_MaskLayers_remove_layer", scope: !2, file: !3, line: 3348, type: !1868, isLocal: false, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "rna_MaskLayers_remove_func", scope: !2, file: !3, line: 3359, type: !2227, isLocal: false, isDefinition: true)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "rna_MaskLayers_clear_func", scope: !2, file: !3, line: 3368, type: !2227, isLocal: false, isDefinition: true)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "RNA_MaskLayers", scope: !2, file: !3, line: 3377, type: !1889, isLocal: false, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "rna_MaskParent_id_type_items", scope: !2, file: !3, line: 2359, type: !2349, isLocal: true, isDefinition: true)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 640, elements: !360)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "rna_MaskParent_type_items", scope: !2, file: !3, line: 2375, type: !2352, isLocal: true, isDefinition: true)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 960, elements: !491)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_left_default", scope: !2, file: !3, line: 2531, type: !753, isLocal: true, isDefinition: true)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_co_default", scope: !2, file: !3, line: 2547, type: !753, isLocal: true, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_right_default", scope: !2, file: !3, line: 2563, type: !753, isLocal: true, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_type_items", scope: !2, file: !3, line: 2579, type: !2361, isLocal: true, isDefinition: true)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 1920, elements: !364)
!2362 = !DIGlobalVariableExpression(var: !2363, expr: !DIExpression())
!2363 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_left_type_items", scope: !2, file: !3, line: 2599, type: !2361, isLocal: true, isDefinition: true)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "rna_MaskSplinePoint_handle_right_type_items", scope: !2, file: !3, line: 2619, type: !2361, isLocal: true, isDefinition: true)
!2366 = !DIGlobalVariableExpression(var: !2367, expr: !DIExpression())
!2367 = distinct !DIGlobalVariable(name: "rna_MaskSpline_offset_mode_items", scope: !2, file: !3, line: 2725, type: !2352, isLocal: true, isDefinition: true)
!2368 = !DIGlobalVariableExpression(var: !2369, expr: !DIExpression())
!2369 = distinct !DIGlobalVariable(name: "rna_MaskSpline_weight_interpolation_items", scope: !2, file: !3, line: 2742, type: !2352, isLocal: true, isDefinition: true)
!2370 = !DIGlobalVariableExpression(var: !2371, expr: !DIExpression())
!2371 = distinct !DIGlobalVariable(name: "rna_MaskLayer_blend_items", scope: !2, file: !3, line: 3109, type: !2372, isLocal: true, isDefinition: true)
!2372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 3200, elements: !2373)
!2373 = !{!2374}
!2374 = !DISubrange(count: 10)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "rna_MaskLayer_falloff_items", scope: !2, file: !3, line: 3144, type: !2361, isLocal: true, isDefinition: true)
!2377 = !{i32 7, !"Dwarf Version", i32 4}
!2378 = !{i32 2, !"Debug Info Version", i32 3}
!2379 = !{i32 1, !"wchar_size", i32 4}
!2380 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2381 = distinct !DISubprogram(name: "MaskParent_rna_properties_begin", scope: !3, file: !3, line: 1135, type: !2382, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{null, !2384, !453}
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !6, line: 279, baseType: !1990)
!2386 = !{}
!2387 = !DILocalVariable(name: "iter", arg: 1, scope: !2381, file: !3, line: 1135, type: !2384)
!2388 = !DILocation(line: 1135, column: 66, scope: !2381)
!2389 = !DILocalVariable(name: "ptr", arg: 2, scope: !2381, file: !3, line: 1135, type: !453)
!2390 = !DILocation(line: 1135, column: 84, scope: !2381)
!2391 = !DILocation(line: 1138, column: 9, scope: !2381)
!2392 = !DILocation(line: 1138, column: 2, scope: !2381)
!2393 = !DILocation(line: 1139, column: 2, scope: !2381)
!2394 = !DILocation(line: 1139, column: 8, scope: !2381)
!2395 = !DILocation(line: 1139, column: 18, scope: !2381)
!2396 = !DILocation(line: 1139, column: 17, scope: !2381)
!2397 = !DILocation(line: 1140, column: 2, scope: !2381)
!2398 = !DILocation(line: 1140, column: 8, scope: !2381)
!2399 = !DILocation(line: 1140, column: 13, scope: !2381)
!2400 = !DILocation(line: 1142, column: 31, scope: !2381)
!2401 = !DILocation(line: 1142, column: 37, scope: !2381)
!2402 = !DILocation(line: 1142, column: 2, scope: !2381)
!2403 = !DILocation(line: 1144, column: 6, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 1144, column: 6)
!2405 = !DILocation(line: 1144, column: 12, scope: !2404)
!2406 = !DILocation(line: 1144, column: 6, scope: !2381)
!2407 = !DILocation(line: 1145, column: 3, scope: !2404)
!2408 = !DILocation(line: 1145, column: 9, scope: !2404)
!2409 = !DILocation(line: 1145, column: 45, scope: !2404)
!2410 = !DILocation(line: 1145, column: 15, scope: !2404)
!2411 = !DILocation(line: 1146, column: 1, scope: !2381)
!2412 = distinct !DISubprogram(name: "MaskParent_rna_properties_get", scope: !3, file: !3, line: 1130, type: !2413, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{!454, !2384}
!2415 = !DILocalVariable(name: "iter", arg: 1, scope: !2412, file: !3, line: 1130, type: !2384)
!2416 = !DILocation(line: 1130, column: 77, scope: !2412)
!2417 = !DILocation(line: 1132, column: 36, scope: !2412)
!2418 = !DILocation(line: 1132, column: 9, scope: !2412)
!2419 = !DILocation(line: 1132, column: 2, scope: !2412)
!2420 = distinct !DISubprogram(name: "MaskParent_rna_properties_next", scope: !3, file: !3, line: 1148, type: !2421, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{null, !2384}
!2423 = !DILocalVariable(name: "iter", arg: 1, scope: !2420, file: !3, line: 1148, type: !2384)
!2424 = !DILocation(line: 1148, column: 65, scope: !2420)
!2425 = !DILocation(line: 1150, column: 30, scope: !2420)
!2426 = !DILocation(line: 1150, column: 2, scope: !2420)
!2427 = !DILocation(line: 1152, column: 6, scope: !2428)
!2428 = distinct !DILexicalBlock(scope: !2420, file: !3, line: 1152, column: 6)
!2429 = !DILocation(line: 1152, column: 12, scope: !2428)
!2430 = !DILocation(line: 1152, column: 6, scope: !2420)
!2431 = !DILocation(line: 1153, column: 3, scope: !2428)
!2432 = !DILocation(line: 1153, column: 9, scope: !2428)
!2433 = !DILocation(line: 1153, column: 45, scope: !2428)
!2434 = !DILocation(line: 1153, column: 15, scope: !2428)
!2435 = !DILocation(line: 1154, column: 1, scope: !2420)
!2436 = distinct !DISubprogram(name: "MaskParent_rna_properties_end", scope: !3, file: !3, line: 1156, type: !2421, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2437 = !DILocalVariable(name: "iter", arg: 1, scope: !2436, file: !3, line: 1156, type: !2384)
!2438 = !DILocation(line: 1156, column: 64, scope: !2436)
!2439 = !DILocation(line: 1158, column: 28, scope: !2436)
!2440 = !DILocation(line: 1158, column: 2, scope: !2436)
!2441 = !DILocation(line: 1159, column: 1, scope: !2436)
!2442 = distinct !DISubprogram(name: "MaskParent_rna_properties_lookup_string", scope: !3, file: !3, line: 1161, type: !2443, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2443 = !DISubroutineType(types: !2444)
!2444 = !{!48, !453, !100, !453}
!2445 = !DILocalVariable(name: "ptr", arg: 1, scope: !2442, file: !3, line: 1161, type: !453)
!2446 = !DILocation(line: 1161, column: 57, scope: !2442)
!2447 = !DILocalVariable(name: "key", arg: 2, scope: !2442, file: !3, line: 1161, type: !100)
!2448 = !DILocation(line: 1161, column: 74, scope: !2442)
!2449 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !2442, file: !3, line: 1161, type: !453)
!2450 = !DILocation(line: 1161, column: 91, scope: !2442)
!2451 = !DILocation(line: 1163, column: 46, scope: !2442)
!2452 = !DILocation(line: 1163, column: 51, scope: !2442)
!2453 = !DILocation(line: 1163, column: 56, scope: !2442)
!2454 = !DILocation(line: 1163, column: 9, scope: !2442)
!2455 = !DILocation(line: 1163, column: 2, scope: !2442)
!2456 = distinct !DISubprogram(name: "MaskParent_rna_type_get", scope: !3, file: !3, line: 1166, type: !2457, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!454, !453}
!2459 = !DILocalVariable(name: "ptr", arg: 1, scope: !2456, file: !3, line: 1166, type: !453)
!2460 = !DILocation(line: 1166, column: 48, scope: !2456)
!2461 = !DILocation(line: 1168, column: 30, scope: !2456)
!2462 = !DILocation(line: 1168, column: 9, scope: !2456)
!2463 = !DILocation(line: 1168, column: 2, scope: !2456)
!2464 = distinct !DISubprogram(name: "MaskParent_id_get", scope: !3, file: !3, line: 1171, type: !2457, scopeLine: 1172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2465 = !DILocalVariable(name: "ptr", arg: 1, scope: !2464, file: !3, line: 1171, type: !453)
!2466 = !DILocation(line: 1171, column: 42, scope: !2464)
!2467 = !DILocalVariable(name: "data", scope: !2464, file: !3, line: 1173, type: !1761)
!2468 = !DILocation(line: 1173, column: 14, scope: !2464)
!2469 = !DILocation(line: 1173, column: 36, scope: !2464)
!2470 = !DILocation(line: 1173, column: 41, scope: !2464)
!2471 = !DILocation(line: 1173, column: 21, scope: !2464)
!2472 = !DILocation(line: 1174, column: 36, scope: !2464)
!2473 = !DILocation(line: 1174, column: 50, scope: !2464)
!2474 = !DILocation(line: 1174, column: 56, scope: !2464)
!2475 = !DILocation(line: 1174, column: 9, scope: !2464)
!2476 = !DILocation(line: 1174, column: 2, scope: !2464)
!2477 = distinct !DISubprogram(name: "MaskParent_id_set", scope: !3, file: !3, line: 1177, type: !2478, scopeLine: 1178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{null, !453, !454}
!2480 = !DILocalVariable(name: "ptr", arg: 1, scope: !2477, file: !3, line: 1177, type: !453)
!2481 = !DILocation(line: 1177, column: 36, scope: !2477)
!2482 = !DILocalVariable(name: "value", arg: 2, scope: !2477, file: !3, line: 1177, type: !454)
!2483 = !DILocation(line: 1177, column: 52, scope: !2477)
!2484 = !DILocation(line: 1179, column: 24, scope: !2477)
!2485 = !DILocation(line: 1179, column: 2, scope: !2477)
!2486 = !DILocation(line: 1180, column: 1, scope: !2477)
!2487 = distinct !DISubprogram(name: "rna_MaskParent_id_set", scope: !2488, file: !2488, line: 123, type: !2478, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2488 = !DIFile(filename: "blender/source/blender/makesrna/intern/rna_mask.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2489 = !DILocalVariable(name: "ptr", arg: 1, scope: !2487, file: !2488, line: 123, type: !453)
!2490 = !DILocation(line: 123, column: 47, scope: !2487)
!2491 = !DILocalVariable(name: "value", arg: 2, scope: !2487, file: !2488, line: 123, type: !454)
!2492 = !DILocation(line: 123, column: 63, scope: !2487)
!2493 = !DILocalVariable(name: "mpar", scope: !2487, file: !2488, line: 125, type: !1761)
!2494 = !DILocation(line: 125, column: 14, scope: !2487)
!2495 = !DILocation(line: 125, column: 36, scope: !2487)
!2496 = !DILocation(line: 125, column: 41, scope: !2487)
!2497 = !DILocation(line: 125, column: 21, scope: !2487)
!2498 = !DILocation(line: 127, column: 19, scope: !2487)
!2499 = !DILocation(line: 127, column: 13, scope: !2487)
!2500 = !DILocation(line: 127, column: 2, scope: !2487)
!2501 = !DILocation(line: 127, column: 8, scope: !2487)
!2502 = !DILocation(line: 127, column: 11, scope: !2487)
!2503 = !DILocation(line: 128, column: 1, scope: !2487)
!2504 = distinct !DISubprogram(name: "MaskParent_id_type_get", scope: !3, file: !3, line: 1182, type: !2505, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!48, !453}
!2507 = !DILocalVariable(name: "ptr", arg: 1, scope: !2504, file: !3, line: 1182, type: !453)
!2508 = !DILocation(line: 1182, column: 40, scope: !2504)
!2509 = !DILocalVariable(name: "data", scope: !2504, file: !3, line: 1184, type: !1761)
!2510 = !DILocation(line: 1184, column: 14, scope: !2504)
!2511 = !DILocation(line: 1184, column: 36, scope: !2504)
!2512 = !DILocation(line: 1184, column: 41, scope: !2504)
!2513 = !DILocation(line: 1184, column: 21, scope: !2504)
!2514 = !DILocation(line: 1185, column: 15, scope: !2504)
!2515 = !DILocation(line: 1185, column: 21, scope: !2504)
!2516 = !DILocation(line: 1185, column: 2, scope: !2504)
!2517 = distinct !DISubprogram(name: "MaskParent_id_type_set", scope: !3, file: !3, line: 1188, type: !2518, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{null, !453, !48}
!2520 = !DILocalVariable(name: "ptr", arg: 1, scope: !2517, file: !3, line: 1188, type: !453)
!2521 = !DILocation(line: 1188, column: 41, scope: !2517)
!2522 = !DILocalVariable(name: "value", arg: 2, scope: !2517, file: !3, line: 1188, type: !48)
!2523 = !DILocation(line: 1188, column: 50, scope: !2517)
!2524 = !DILocation(line: 1190, column: 29, scope: !2517)
!2525 = !DILocation(line: 1190, column: 34, scope: !2517)
!2526 = !DILocation(line: 1190, column: 2, scope: !2517)
!2527 = !DILocation(line: 1191, column: 1, scope: !2517)
!2528 = distinct !DISubprogram(name: "rna_MaskParent_id_type_set", scope: !2488, file: !2488, line: 137, type: !2518, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2529 = !DILocalVariable(name: "ptr", arg: 1, scope: !2528, file: !2488, line: 137, type: !453)
!2530 = !DILocation(line: 137, column: 52, scope: !2528)
!2531 = !DILocalVariable(name: "value", arg: 2, scope: !2528, file: !2488, line: 137, type: !48)
!2532 = !DILocation(line: 137, column: 61, scope: !2528)
!2533 = !DILocalVariable(name: "mpar", scope: !2528, file: !2488, line: 139, type: !1761)
!2534 = !DILocation(line: 139, column: 14, scope: !2528)
!2535 = !DILocation(line: 139, column: 36, scope: !2528)
!2536 = !DILocation(line: 139, column: 41, scope: !2528)
!2537 = !DILocation(line: 139, column: 21, scope: !2528)
!2538 = !DILocation(line: 142, column: 18, scope: !2528)
!2539 = !DILocation(line: 142, column: 2, scope: !2528)
!2540 = !DILocation(line: 142, column: 8, scope: !2528)
!2541 = !DILocation(line: 142, column: 16, scope: !2528)
!2542 = !DILocation(line: 145, column: 7, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2528, file: !2488, line: 145, column: 6)
!2544 = !DILocation(line: 145, column: 13, scope: !2543)
!2545 = !DILocation(line: 145, column: 6, scope: !2543)
!2546 = !DILocation(line: 145, column: 17, scope: !2543)
!2547 = !DILocation(line: 145, column: 21, scope: !2543)
!2548 = !DILocation(line: 145, column: 43, scope: !2543)
!2549 = !DILocation(line: 145, column: 49, scope: !2543)
!2550 = !DILocation(line: 145, column: 40, scope: !2543)
!2551 = !DILocation(line: 145, column: 6, scope: !2528)
!2552 = !DILocation(line: 146, column: 3, scope: !2543)
!2553 = !DILocation(line: 146, column: 9, scope: !2543)
!2554 = !DILocation(line: 146, column: 12, scope: !2543)
!2555 = !DILocation(line: 147, column: 1, scope: !2528)
!2556 = distinct !DISubprogram(name: "MaskParent_type_get", scope: !3, file: !3, line: 1193, type: !2505, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2557 = !DILocalVariable(name: "ptr", arg: 1, scope: !2556, file: !3, line: 1193, type: !453)
!2558 = !DILocation(line: 1193, column: 37, scope: !2556)
!2559 = !DILocalVariable(name: "data", scope: !2556, file: !3, line: 1195, type: !1761)
!2560 = !DILocation(line: 1195, column: 14, scope: !2556)
!2561 = !DILocation(line: 1195, column: 36, scope: !2556)
!2562 = !DILocation(line: 1195, column: 41, scope: !2556)
!2563 = !DILocation(line: 1195, column: 21, scope: !2556)
!2564 = !DILocation(line: 1196, column: 15, scope: !2556)
!2565 = !DILocation(line: 1196, column: 21, scope: !2556)
!2566 = !DILocation(line: 1196, column: 2, scope: !2556)
!2567 = distinct !DISubprogram(name: "MaskParent_type_set", scope: !3, file: !3, line: 1199, type: !2518, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2568 = !DILocalVariable(name: "ptr", arg: 1, scope: !2567, file: !3, line: 1199, type: !453)
!2569 = !DILocation(line: 1199, column: 38, scope: !2567)
!2570 = !DILocalVariable(name: "value", arg: 2, scope: !2567, file: !3, line: 1199, type: !48)
!2571 = !DILocation(line: 1199, column: 47, scope: !2567)
!2572 = !DILocalVariable(name: "data", scope: !2567, file: !3, line: 1201, type: !1761)
!2573 = !DILocation(line: 1201, column: 14, scope: !2567)
!2574 = !DILocation(line: 1201, column: 36, scope: !2567)
!2575 = !DILocation(line: 1201, column: 41, scope: !2567)
!2576 = !DILocation(line: 1201, column: 21, scope: !2567)
!2577 = !DILocation(line: 1202, column: 15, scope: !2567)
!2578 = !DILocation(line: 1202, column: 2, scope: !2567)
!2579 = !DILocation(line: 1202, column: 8, scope: !2567)
!2580 = !DILocation(line: 1202, column: 13, scope: !2567)
!2581 = !DILocation(line: 1203, column: 1, scope: !2567)
!2582 = distinct !DISubprogram(name: "MaskParent_parent_get", scope: !3, file: !3, line: 1205, type: !2583, scopeLine: 1206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2583 = !DISubroutineType(types: !2584)
!2584 = !{null, !453, !167}
!2585 = !DILocalVariable(name: "ptr", arg: 1, scope: !2582, file: !3, line: 1205, type: !453)
!2586 = !DILocation(line: 1205, column: 40, scope: !2582)
!2587 = !DILocalVariable(name: "value", arg: 2, scope: !2582, file: !3, line: 1205, type: !167)
!2588 = !DILocation(line: 1205, column: 51, scope: !2582)
!2589 = !DILocalVariable(name: "data", scope: !2582, file: !3, line: 1207, type: !1761)
!2590 = !DILocation(line: 1207, column: 14, scope: !2582)
!2591 = !DILocation(line: 1207, column: 36, scope: !2582)
!2592 = !DILocation(line: 1207, column: 41, scope: !2582)
!2593 = !DILocation(line: 1207, column: 21, scope: !2582)
!2594 = !DILocation(line: 1208, column: 19, scope: !2582)
!2595 = !DILocation(line: 1208, column: 26, scope: !2582)
!2596 = !DILocation(line: 1208, column: 32, scope: !2582)
!2597 = !DILocation(line: 1208, column: 2, scope: !2582)
!2598 = !DILocation(line: 1209, column: 1, scope: !2582)
!2599 = distinct !DISubprogram(name: "MaskParent_parent_length", scope: !3, file: !3, line: 1211, type: !2505, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2600 = !DILocalVariable(name: "ptr", arg: 1, scope: !2599, file: !3, line: 1211, type: !453)
!2601 = !DILocation(line: 1211, column: 42, scope: !2599)
!2602 = !DILocalVariable(name: "data", scope: !2599, file: !3, line: 1213, type: !1761)
!2603 = !DILocation(line: 1213, column: 14, scope: !2599)
!2604 = !DILocation(line: 1213, column: 36, scope: !2599)
!2605 = !DILocation(line: 1213, column: 41, scope: !2599)
!2606 = !DILocation(line: 1213, column: 21, scope: !2599)
!2607 = !DILocation(line: 1214, column: 16, scope: !2599)
!2608 = !DILocation(line: 1214, column: 22, scope: !2599)
!2609 = !DILocation(line: 1214, column: 9, scope: !2599)
!2610 = !DILocation(line: 1214, column: 2, scope: !2599)
!2611 = distinct !DISubprogram(name: "MaskParent_parent_set", scope: !3, file: !3, line: 1217, type: !2612, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{null, !453, !100}
!2614 = !DILocalVariable(name: "ptr", arg: 1, scope: !2611, file: !3, line: 1217, type: !453)
!2615 = !DILocation(line: 1217, column: 40, scope: !2611)
!2616 = !DILocalVariable(name: "value", arg: 2, scope: !2611, file: !3, line: 1217, type: !100)
!2617 = !DILocation(line: 1217, column: 57, scope: !2611)
!2618 = !DILocalVariable(name: "data", scope: !2611, file: !3, line: 1219, type: !1761)
!2619 = !DILocation(line: 1219, column: 14, scope: !2611)
!2620 = !DILocation(line: 1219, column: 36, scope: !2611)
!2621 = !DILocation(line: 1219, column: 41, scope: !2611)
!2622 = !DILocation(line: 1219, column: 21, scope: !2611)
!2623 = !DILocation(line: 1220, column: 19, scope: !2611)
!2624 = !DILocation(line: 1220, column: 25, scope: !2611)
!2625 = !DILocation(line: 1220, column: 33, scope: !2611)
!2626 = !DILocation(line: 1220, column: 2, scope: !2611)
!2627 = !DILocation(line: 1221, column: 1, scope: !2611)
!2628 = distinct !DISubprogram(name: "MaskParent_sub_parent_get", scope: !3, file: !3, line: 1223, type: !2583, scopeLine: 1224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2629 = !DILocalVariable(name: "ptr", arg: 1, scope: !2628, file: !3, line: 1223, type: !453)
!2630 = !DILocation(line: 1223, column: 44, scope: !2628)
!2631 = !DILocalVariable(name: "value", arg: 2, scope: !2628, file: !3, line: 1223, type: !167)
!2632 = !DILocation(line: 1223, column: 55, scope: !2628)
!2633 = !DILocalVariable(name: "data", scope: !2628, file: !3, line: 1225, type: !1761)
!2634 = !DILocation(line: 1225, column: 14, scope: !2628)
!2635 = !DILocation(line: 1225, column: 36, scope: !2628)
!2636 = !DILocation(line: 1225, column: 41, scope: !2628)
!2637 = !DILocation(line: 1225, column: 21, scope: !2628)
!2638 = !DILocation(line: 1226, column: 19, scope: !2628)
!2639 = !DILocation(line: 1226, column: 26, scope: !2628)
!2640 = !DILocation(line: 1226, column: 32, scope: !2628)
!2641 = !DILocation(line: 1226, column: 2, scope: !2628)
!2642 = !DILocation(line: 1227, column: 1, scope: !2628)
!2643 = distinct !DISubprogram(name: "MaskParent_sub_parent_length", scope: !3, file: !3, line: 1229, type: !2505, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2644 = !DILocalVariable(name: "ptr", arg: 1, scope: !2643, file: !3, line: 1229, type: !453)
!2645 = !DILocation(line: 1229, column: 46, scope: !2643)
!2646 = !DILocalVariable(name: "data", scope: !2643, file: !3, line: 1231, type: !1761)
!2647 = !DILocation(line: 1231, column: 14, scope: !2643)
!2648 = !DILocation(line: 1231, column: 36, scope: !2643)
!2649 = !DILocation(line: 1231, column: 41, scope: !2643)
!2650 = !DILocation(line: 1231, column: 21, scope: !2643)
!2651 = !DILocation(line: 1232, column: 16, scope: !2643)
!2652 = !DILocation(line: 1232, column: 22, scope: !2643)
!2653 = !DILocation(line: 1232, column: 9, scope: !2643)
!2654 = !DILocation(line: 1232, column: 2, scope: !2643)
!2655 = distinct !DISubprogram(name: "MaskParent_sub_parent_set", scope: !3, file: !3, line: 1235, type: !2612, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2656 = !DILocalVariable(name: "ptr", arg: 1, scope: !2655, file: !3, line: 1235, type: !453)
!2657 = !DILocation(line: 1235, column: 44, scope: !2655)
!2658 = !DILocalVariable(name: "value", arg: 2, scope: !2655, file: !3, line: 1235, type: !100)
!2659 = !DILocation(line: 1235, column: 61, scope: !2655)
!2660 = !DILocalVariable(name: "data", scope: !2655, file: !3, line: 1237, type: !1761)
!2661 = !DILocation(line: 1237, column: 14, scope: !2655)
!2662 = !DILocation(line: 1237, column: 36, scope: !2655)
!2663 = !DILocation(line: 1237, column: 41, scope: !2655)
!2664 = !DILocation(line: 1237, column: 21, scope: !2655)
!2665 = !DILocation(line: 1238, column: 19, scope: !2655)
!2666 = !DILocation(line: 1238, column: 25, scope: !2655)
!2667 = !DILocation(line: 1238, column: 37, scope: !2655)
!2668 = !DILocation(line: 1238, column: 2, scope: !2655)
!2669 = !DILocation(line: 1239, column: 1, scope: !2655)
!2670 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_properties_begin", scope: !3, file: !3, line: 1246, type: !2382, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2671 = !DILocalVariable(name: "iter", arg: 1, scope: !2670, file: !3, line: 1246, type: !2384)
!2672 = !DILocation(line: 1246, column: 73, scope: !2670)
!2673 = !DILocalVariable(name: "ptr", arg: 2, scope: !2670, file: !3, line: 1246, type: !453)
!2674 = !DILocation(line: 1246, column: 91, scope: !2670)
!2675 = !DILocation(line: 1249, column: 9, scope: !2670)
!2676 = !DILocation(line: 1249, column: 2, scope: !2670)
!2677 = !DILocation(line: 1250, column: 2, scope: !2670)
!2678 = !DILocation(line: 1250, column: 8, scope: !2670)
!2679 = !DILocation(line: 1250, column: 18, scope: !2670)
!2680 = !DILocation(line: 1250, column: 17, scope: !2670)
!2681 = !DILocation(line: 1251, column: 2, scope: !2670)
!2682 = !DILocation(line: 1251, column: 8, scope: !2670)
!2683 = !DILocation(line: 1251, column: 13, scope: !2670)
!2684 = !DILocation(line: 1253, column: 31, scope: !2670)
!2685 = !DILocation(line: 1253, column: 37, scope: !2670)
!2686 = !DILocation(line: 1253, column: 2, scope: !2670)
!2687 = !DILocation(line: 1255, column: 6, scope: !2688)
!2688 = distinct !DILexicalBlock(scope: !2670, file: !3, line: 1255, column: 6)
!2689 = !DILocation(line: 1255, column: 12, scope: !2688)
!2690 = !DILocation(line: 1255, column: 6, scope: !2670)
!2691 = !DILocation(line: 1256, column: 3, scope: !2688)
!2692 = !DILocation(line: 1256, column: 9, scope: !2688)
!2693 = !DILocation(line: 1256, column: 52, scope: !2688)
!2694 = !DILocation(line: 1256, column: 15, scope: !2688)
!2695 = !DILocation(line: 1257, column: 1, scope: !2670)
!2696 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_properties_get", scope: !3, file: !3, line: 1241, type: !2413, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2697 = !DILocalVariable(name: "iter", arg: 1, scope: !2696, file: !3, line: 1241, type: !2384)
!2698 = !DILocation(line: 1241, column: 84, scope: !2696)
!2699 = !DILocation(line: 1243, column: 36, scope: !2696)
!2700 = !DILocation(line: 1243, column: 9, scope: !2696)
!2701 = !DILocation(line: 1243, column: 2, scope: !2696)
!2702 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_properties_next", scope: !3, file: !3, line: 1259, type: !2421, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2703 = !DILocalVariable(name: "iter", arg: 1, scope: !2702, file: !3, line: 1259, type: !2384)
!2704 = !DILocation(line: 1259, column: 72, scope: !2702)
!2705 = !DILocation(line: 1261, column: 30, scope: !2702)
!2706 = !DILocation(line: 1261, column: 2, scope: !2702)
!2707 = !DILocation(line: 1263, column: 6, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 1263, column: 6)
!2709 = !DILocation(line: 1263, column: 12, scope: !2708)
!2710 = !DILocation(line: 1263, column: 6, scope: !2702)
!2711 = !DILocation(line: 1264, column: 3, scope: !2708)
!2712 = !DILocation(line: 1264, column: 9, scope: !2708)
!2713 = !DILocation(line: 1264, column: 52, scope: !2708)
!2714 = !DILocation(line: 1264, column: 15, scope: !2708)
!2715 = !DILocation(line: 1265, column: 1, scope: !2702)
!2716 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_properties_end", scope: !3, file: !3, line: 1267, type: !2421, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2717 = !DILocalVariable(name: "iter", arg: 1, scope: !2716, file: !3, line: 1267, type: !2384)
!2718 = !DILocation(line: 1267, column: 71, scope: !2716)
!2719 = !DILocation(line: 1269, column: 28, scope: !2716)
!2720 = !DILocation(line: 1269, column: 2, scope: !2716)
!2721 = !DILocation(line: 1270, column: 1, scope: !2716)
!2722 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_properties_lookup_string", scope: !3, file: !3, line: 1272, type: !2443, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2723 = !DILocalVariable(name: "ptr", arg: 1, scope: !2722, file: !3, line: 1272, type: !453)
!2724 = !DILocation(line: 1272, column: 64, scope: !2722)
!2725 = !DILocalVariable(name: "key", arg: 2, scope: !2722, file: !3, line: 1272, type: !100)
!2726 = !DILocation(line: 1272, column: 81, scope: !2722)
!2727 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !2722, file: !3, line: 1272, type: !453)
!2728 = !DILocation(line: 1272, column: 98, scope: !2722)
!2729 = !DILocation(line: 1274, column: 46, scope: !2722)
!2730 = !DILocation(line: 1274, column: 51, scope: !2722)
!2731 = !DILocation(line: 1274, column: 56, scope: !2722)
!2732 = !DILocation(line: 1274, column: 9, scope: !2722)
!2733 = !DILocation(line: 1274, column: 2, scope: !2722)
!2734 = distinct !DISubprogram(name: "MaskSplinePointUW_rna_type_get", scope: !3, file: !3, line: 1277, type: !2457, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2735 = !DILocalVariable(name: "ptr", arg: 1, scope: !2734, file: !3, line: 1277, type: !453)
!2736 = !DILocation(line: 1277, column: 55, scope: !2734)
!2737 = !DILocation(line: 1279, column: 30, scope: !2734)
!2738 = !DILocation(line: 1279, column: 9, scope: !2734)
!2739 = !DILocation(line: 1279, column: 2, scope: !2734)
!2740 = distinct !DISubprogram(name: "MaskSplinePointUW_u_get", scope: !3, file: !3, line: 1282, type: !2741, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!389, !453}
!2743 = !DILocalVariable(name: "ptr", arg: 1, scope: !2740, file: !3, line: 1282, type: !453)
!2744 = !DILocation(line: 1282, column: 43, scope: !2740)
!2745 = !DILocalVariable(name: "data", scope: !2740, file: !3, line: 1284, type: !1772)
!2746 = !DILocation(line: 1284, column: 21, scope: !2740)
!2747 = !DILocation(line: 1284, column: 50, scope: !2740)
!2748 = !DILocation(line: 1284, column: 55, scope: !2740)
!2749 = !DILocation(line: 1284, column: 28, scope: !2740)
!2750 = !DILocation(line: 1285, column: 17, scope: !2740)
!2751 = !DILocation(line: 1285, column: 23, scope: !2740)
!2752 = !DILocation(line: 1285, column: 2, scope: !2740)
!2753 = distinct !DISubprogram(name: "MaskSplinePointUW_u_set", scope: !3, file: !3, line: 1288, type: !2754, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{null, !453, !389}
!2756 = !DILocalVariable(name: "ptr", arg: 1, scope: !2753, file: !3, line: 1288, type: !453)
!2757 = !DILocation(line: 1288, column: 42, scope: !2753)
!2758 = !DILocalVariable(name: "value", arg: 2, scope: !2753, file: !3, line: 1288, type: !389)
!2759 = !DILocation(line: 1288, column: 53, scope: !2753)
!2760 = !DILocalVariable(name: "data", scope: !2753, file: !3, line: 1290, type: !1772)
!2761 = !DILocation(line: 1290, column: 21, scope: !2753)
!2762 = !DILocation(line: 1290, column: 50, scope: !2753)
!2763 = !DILocation(line: 1290, column: 55, scope: !2753)
!2764 = !DILocation(line: 1290, column: 28, scope: !2753)
!2765 = !DILocation(line: 1291, column: 12, scope: !2753)
!2766 = !DILocation(line: 1291, column: 2, scope: !2753)
!2767 = !DILocation(line: 1291, column: 8, scope: !2753)
!2768 = !DILocation(line: 1291, column: 10, scope: !2753)
!2769 = !DILocation(line: 1292, column: 1, scope: !2753)
!2770 = distinct !DISubprogram(name: "MaskSplinePointUW_weight_get", scope: !3, file: !3, line: 1294, type: !2741, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2771 = !DILocalVariable(name: "ptr", arg: 1, scope: !2770, file: !3, line: 1294, type: !453)
!2772 = !DILocation(line: 1294, column: 48, scope: !2770)
!2773 = !DILocalVariable(name: "data", scope: !2770, file: !3, line: 1296, type: !1772)
!2774 = !DILocation(line: 1296, column: 21, scope: !2770)
!2775 = !DILocation(line: 1296, column: 50, scope: !2770)
!2776 = !DILocation(line: 1296, column: 55, scope: !2770)
!2777 = !DILocation(line: 1296, column: 28, scope: !2770)
!2778 = !DILocation(line: 1297, column: 17, scope: !2770)
!2779 = !DILocation(line: 1297, column: 23, scope: !2770)
!2780 = !DILocation(line: 1297, column: 2, scope: !2770)
!2781 = distinct !DISubprogram(name: "MaskSplinePointUW_weight_set", scope: !3, file: !3, line: 1300, type: !2754, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2782 = !DILocalVariable(name: "ptr", arg: 1, scope: !2781, file: !3, line: 1300, type: !453)
!2783 = !DILocation(line: 1300, column: 47, scope: !2781)
!2784 = !DILocalVariable(name: "value", arg: 2, scope: !2781, file: !3, line: 1300, type: !389)
!2785 = !DILocation(line: 1300, column: 58, scope: !2781)
!2786 = !DILocalVariable(name: "data", scope: !2781, file: !3, line: 1302, type: !1772)
!2787 = !DILocation(line: 1302, column: 21, scope: !2781)
!2788 = !DILocation(line: 1302, column: 50, scope: !2781)
!2789 = !DILocation(line: 1302, column: 55, scope: !2781)
!2790 = !DILocation(line: 1302, column: 28, scope: !2781)
!2791 = !DILocation(line: 1303, column: 12, scope: !2781)
!2792 = !DILocation(line: 1303, column: 2, scope: !2781)
!2793 = !DILocation(line: 1303, column: 8, scope: !2781)
!2794 = !DILocation(line: 1303, column: 10, scope: !2781)
!2795 = !DILocation(line: 1304, column: 1, scope: !2781)
!2796 = distinct !DISubprogram(name: "MaskSplinePointUW_select_get", scope: !3, file: !3, line: 1306, type: !2505, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2797 = !DILocalVariable(name: "ptr", arg: 1, scope: !2796, file: !3, line: 1306, type: !453)
!2798 = !DILocation(line: 1306, column: 46, scope: !2796)
!2799 = !DILocalVariable(name: "data", scope: !2796, file: !3, line: 1308, type: !1772)
!2800 = !DILocation(line: 1308, column: 21, scope: !2796)
!2801 = !DILocation(line: 1308, column: 50, scope: !2796)
!2802 = !DILocation(line: 1308, column: 55, scope: !2796)
!2803 = !DILocation(line: 1308, column: 28, scope: !2796)
!2804 = !DILocation(line: 1309, column: 12, scope: !2796)
!2805 = !DILocation(line: 1309, column: 18, scope: !2796)
!2806 = !DILocation(line: 1309, column: 24, scope: !2796)
!2807 = !DILocation(line: 1309, column: 29, scope: !2796)
!2808 = !DILocation(line: 1309, column: 2, scope: !2796)
!2809 = distinct !DISubprogram(name: "MaskSplinePointUW_select_set", scope: !3, file: !3, line: 1312, type: !2518, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2810 = !DILocalVariable(name: "ptr", arg: 1, scope: !2809, file: !3, line: 1312, type: !453)
!2811 = !DILocation(line: 1312, column: 47, scope: !2809)
!2812 = !DILocalVariable(name: "value", arg: 2, scope: !2809, file: !3, line: 1312, type: !48)
!2813 = !DILocation(line: 1312, column: 56, scope: !2809)
!2814 = !DILocalVariable(name: "data", scope: !2809, file: !3, line: 1314, type: !1772)
!2815 = !DILocation(line: 1314, column: 21, scope: !2809)
!2816 = !DILocation(line: 1314, column: 50, scope: !2809)
!2817 = !DILocation(line: 1314, column: 55, scope: !2809)
!2818 = !DILocation(line: 1314, column: 28, scope: !2809)
!2819 = !DILocation(line: 1315, column: 6, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2809, file: !3, line: 1315, column: 6)
!2821 = !DILocation(line: 1315, column: 6, scope: !2809)
!2822 = !DILocation(line: 1315, column: 13, scope: !2820)
!2823 = !DILocation(line: 1315, column: 19, scope: !2820)
!2824 = !DILocation(line: 1315, column: 24, scope: !2820)
!2825 = !DILocation(line: 1316, column: 7, scope: !2820)
!2826 = !DILocation(line: 1316, column: 13, scope: !2820)
!2827 = !DILocation(line: 1316, column: 18, scope: !2820)
!2828 = !DILocation(line: 1317, column: 1, scope: !2809)
!2829 = distinct !DISubprogram(name: "MaskSplinePoint_rna_properties_begin", scope: !3, file: !3, line: 1324, type: !2382, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2830 = !DILocalVariable(name: "iter", arg: 1, scope: !2829, file: !3, line: 1324, type: !2384)
!2831 = !DILocation(line: 1324, column: 71, scope: !2829)
!2832 = !DILocalVariable(name: "ptr", arg: 2, scope: !2829, file: !3, line: 1324, type: !453)
!2833 = !DILocation(line: 1324, column: 89, scope: !2829)
!2834 = !DILocation(line: 1327, column: 9, scope: !2829)
!2835 = !DILocation(line: 1327, column: 2, scope: !2829)
!2836 = !DILocation(line: 1328, column: 2, scope: !2829)
!2837 = !DILocation(line: 1328, column: 8, scope: !2829)
!2838 = !DILocation(line: 1328, column: 18, scope: !2829)
!2839 = !DILocation(line: 1328, column: 17, scope: !2829)
!2840 = !DILocation(line: 1329, column: 2, scope: !2829)
!2841 = !DILocation(line: 1329, column: 8, scope: !2829)
!2842 = !DILocation(line: 1329, column: 13, scope: !2829)
!2843 = !DILocation(line: 1331, column: 31, scope: !2829)
!2844 = !DILocation(line: 1331, column: 37, scope: !2829)
!2845 = !DILocation(line: 1331, column: 2, scope: !2829)
!2846 = !DILocation(line: 1333, column: 6, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2829, file: !3, line: 1333, column: 6)
!2848 = !DILocation(line: 1333, column: 12, scope: !2847)
!2849 = !DILocation(line: 1333, column: 6, scope: !2829)
!2850 = !DILocation(line: 1334, column: 3, scope: !2847)
!2851 = !DILocation(line: 1334, column: 9, scope: !2847)
!2852 = !DILocation(line: 1334, column: 50, scope: !2847)
!2853 = !DILocation(line: 1334, column: 15, scope: !2847)
!2854 = !DILocation(line: 1335, column: 1, scope: !2829)
!2855 = distinct !DISubprogram(name: "MaskSplinePoint_rna_properties_get", scope: !3, file: !3, line: 1319, type: !2413, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2856 = !DILocalVariable(name: "iter", arg: 1, scope: !2855, file: !3, line: 1319, type: !2384)
!2857 = !DILocation(line: 1319, column: 82, scope: !2855)
!2858 = !DILocation(line: 1321, column: 36, scope: !2855)
!2859 = !DILocation(line: 1321, column: 9, scope: !2855)
!2860 = !DILocation(line: 1321, column: 2, scope: !2855)
!2861 = distinct !DISubprogram(name: "MaskSplinePoint_rna_properties_next", scope: !3, file: !3, line: 1337, type: !2421, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2862 = !DILocalVariable(name: "iter", arg: 1, scope: !2861, file: !3, line: 1337, type: !2384)
!2863 = !DILocation(line: 1337, column: 70, scope: !2861)
!2864 = !DILocation(line: 1339, column: 30, scope: !2861)
!2865 = !DILocation(line: 1339, column: 2, scope: !2861)
!2866 = !DILocation(line: 1341, column: 6, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 1341, column: 6)
!2868 = !DILocation(line: 1341, column: 12, scope: !2867)
!2869 = !DILocation(line: 1341, column: 6, scope: !2861)
!2870 = !DILocation(line: 1342, column: 3, scope: !2867)
!2871 = !DILocation(line: 1342, column: 9, scope: !2867)
!2872 = !DILocation(line: 1342, column: 50, scope: !2867)
!2873 = !DILocation(line: 1342, column: 15, scope: !2867)
!2874 = !DILocation(line: 1343, column: 1, scope: !2861)
!2875 = distinct !DISubprogram(name: "MaskSplinePoint_rna_properties_end", scope: !3, file: !3, line: 1345, type: !2421, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2876 = !DILocalVariable(name: "iter", arg: 1, scope: !2875, file: !3, line: 1345, type: !2384)
!2877 = !DILocation(line: 1345, column: 69, scope: !2875)
!2878 = !DILocation(line: 1347, column: 28, scope: !2875)
!2879 = !DILocation(line: 1347, column: 2, scope: !2875)
!2880 = !DILocation(line: 1348, column: 1, scope: !2875)
!2881 = distinct !DISubprogram(name: "MaskSplinePoint_rna_properties_lookup_string", scope: !3, file: !3, line: 1350, type: !2443, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2882 = !DILocalVariable(name: "ptr", arg: 1, scope: !2881, file: !3, line: 1350, type: !453)
!2883 = !DILocation(line: 1350, column: 62, scope: !2881)
!2884 = !DILocalVariable(name: "key", arg: 2, scope: !2881, file: !3, line: 1350, type: !100)
!2885 = !DILocation(line: 1350, column: 79, scope: !2881)
!2886 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !2881, file: !3, line: 1350, type: !453)
!2887 = !DILocation(line: 1350, column: 96, scope: !2881)
!2888 = !DILocation(line: 1352, column: 46, scope: !2881)
!2889 = !DILocation(line: 1352, column: 51, scope: !2881)
!2890 = !DILocation(line: 1352, column: 56, scope: !2881)
!2891 = !DILocation(line: 1352, column: 9, scope: !2881)
!2892 = !DILocation(line: 1352, column: 2, scope: !2881)
!2893 = distinct !DISubprogram(name: "MaskSplinePoint_rna_type_get", scope: !3, file: !3, line: 1355, type: !2457, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2894 = !DILocalVariable(name: "ptr", arg: 1, scope: !2893, file: !3, line: 1355, type: !453)
!2895 = !DILocation(line: 1355, column: 53, scope: !2893)
!2896 = !DILocation(line: 1357, column: 30, scope: !2893)
!2897 = !DILocation(line: 1357, column: 9, scope: !2893)
!2898 = !DILocation(line: 1357, column: 2, scope: !2893)
!2899 = distinct !DISubprogram(name: "MaskSplinePoint_handle_left_get", scope: !3, file: !3, line: 1360, type: !2900, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{null, !453, !2083}
!2902 = !DILocalVariable(name: "ptr", arg: 1, scope: !2899, file: !3, line: 1360, type: !453)
!2903 = !DILocation(line: 1360, column: 50, scope: !2899)
!2904 = !DILocalVariable(name: "values", arg: 2, scope: !2899, file: !3, line: 1360, type: !2083)
!2905 = !DILocation(line: 1360, column: 61, scope: !2899)
!2906 = !DILocation(line: 1362, column: 34, scope: !2899)
!2907 = !DILocation(line: 1362, column: 39, scope: !2899)
!2908 = !DILocation(line: 1362, column: 2, scope: !2899)
!2909 = !DILocation(line: 1363, column: 1, scope: !2899)
!2910 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle1_get", scope: !2488, file: !2488, line: 265, type: !2900, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2911 = !DILocalVariable(name: "ptr", arg: 1, scope: !2910, file: !2488, line: 265, type: !453)
!2912 = !DILocation(line: 265, column: 57, scope: !2910)
!2913 = !DILocalVariable(name: "values", arg: 2, scope: !2910, file: !2488, line: 265, type: !2083)
!2914 = !DILocation(line: 265, column: 69, scope: !2910)
!2915 = !DILocalVariable(name: "point", scope: !2910, file: !2488, line: 267, type: !1779)
!2916 = !DILocation(line: 267, column: 19, scope: !2910)
!2917 = !DILocation(line: 267, column: 47, scope: !2910)
!2918 = !DILocation(line: 267, column: 52, scope: !2910)
!2919 = !DILocation(line: 267, column: 27, scope: !2910)
!2920 = !DILocalVariable(name: "bezt", scope: !2910, file: !2488, line: 268, type: !2921)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!2922 = !DILocation(line: 268, column: 13, scope: !2910)
!2923 = !DILocation(line: 268, column: 21, scope: !2910)
!2924 = !DILocation(line: 268, column: 28, scope: !2910)
!2925 = !DILocation(line: 269, column: 13, scope: !2910)
!2926 = !DILocation(line: 269, column: 21, scope: !2910)
!2927 = !DILocation(line: 269, column: 27, scope: !2910)
!2928 = !DILocation(line: 269, column: 2, scope: !2910)
!2929 = !DILocation(line: 270, column: 1, scope: !2910)
!2930 = distinct !DISubprogram(name: "MaskSplinePoint_handle_left_set", scope: !3, file: !3, line: 1365, type: !2931, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{null, !453, !2089}
!2933 = !DILocalVariable(name: "ptr", arg: 1, scope: !2930, file: !3, line: 1365, type: !453)
!2934 = !DILocation(line: 1365, column: 50, scope: !2930)
!2935 = !DILocalVariable(name: "values", arg: 2, scope: !2930, file: !3, line: 1365, type: !2089)
!2936 = !DILocation(line: 1365, column: 67, scope: !2930)
!2937 = !DILocation(line: 1367, column: 34, scope: !2930)
!2938 = !DILocation(line: 1367, column: 39, scope: !2930)
!2939 = !DILocation(line: 1367, column: 2, scope: !2930)
!2940 = !DILocation(line: 1368, column: 1, scope: !2930)
!2941 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle1_set", scope: !2488, file: !2488, line: 272, type: !2931, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2942 = !DILocalVariable(name: "ptr", arg: 1, scope: !2941, file: !2488, line: 272, type: !453)
!2943 = !DILocation(line: 272, column: 57, scope: !2941)
!2944 = !DILocalVariable(name: "values", arg: 2, scope: !2941, file: !2488, line: 272, type: !2089)
!2945 = !DILocation(line: 272, column: 75, scope: !2941)
!2946 = !DILocalVariable(name: "point", scope: !2941, file: !2488, line: 274, type: !1779)
!2947 = !DILocation(line: 274, column: 19, scope: !2941)
!2948 = !DILocation(line: 274, column: 47, scope: !2941)
!2949 = !DILocation(line: 274, column: 52, scope: !2941)
!2950 = !DILocation(line: 274, column: 27, scope: !2941)
!2951 = !DILocalVariable(name: "bezt", scope: !2941, file: !2488, line: 275, type: !2921)
!2952 = !DILocation(line: 275, column: 13, scope: !2941)
!2953 = !DILocation(line: 275, column: 21, scope: !2941)
!2954 = !DILocation(line: 275, column: 28, scope: !2941)
!2955 = !DILocation(line: 276, column: 13, scope: !2941)
!2956 = !DILocation(line: 276, column: 19, scope: !2941)
!2957 = !DILocation(line: 276, column: 27, scope: !2941)
!2958 = !DILocation(line: 276, column: 2, scope: !2941)
!2959 = !DILocation(line: 277, column: 1, scope: !2941)
!2960 = distinct !DISubprogram(name: "MaskSplinePoint_co_get", scope: !3, file: !3, line: 1370, type: !2900, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2961 = !DILocalVariable(name: "ptr", arg: 1, scope: !2960, file: !3, line: 1370, type: !453)
!2962 = !DILocation(line: 1370, column: 41, scope: !2960)
!2963 = !DILocalVariable(name: "values", arg: 2, scope: !2960, file: !3, line: 1370, type: !2083)
!2964 = !DILocation(line: 1370, column: 52, scope: !2960)
!2965 = !DILocation(line: 1372, column: 36, scope: !2960)
!2966 = !DILocation(line: 1372, column: 41, scope: !2960)
!2967 = !DILocation(line: 1372, column: 2, scope: !2960)
!2968 = !DILocation(line: 1373, column: 1, scope: !2960)
!2969 = distinct !DISubprogram(name: "rna_MaskSplinePoint_ctrlpoint_get", scope: !2488, file: !2488, line: 293, type: !2900, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2970 = !DILocalVariable(name: "ptr", arg: 1, scope: !2969, file: !2488, line: 293, type: !453)
!2971 = !DILocation(line: 293, column: 59, scope: !2969)
!2972 = !DILocalVariable(name: "values", arg: 2, scope: !2969, file: !2488, line: 293, type: !2083)
!2973 = !DILocation(line: 293, column: 71, scope: !2969)
!2974 = !DILocalVariable(name: "point", scope: !2969, file: !2488, line: 295, type: !1779)
!2975 = !DILocation(line: 295, column: 19, scope: !2969)
!2976 = !DILocation(line: 295, column: 47, scope: !2969)
!2977 = !DILocation(line: 295, column: 52, scope: !2969)
!2978 = !DILocation(line: 295, column: 27, scope: !2969)
!2979 = !DILocalVariable(name: "bezt", scope: !2969, file: !2488, line: 296, type: !2921)
!2980 = !DILocation(line: 296, column: 13, scope: !2969)
!2981 = !DILocation(line: 296, column: 21, scope: !2969)
!2982 = !DILocation(line: 296, column: 28, scope: !2969)
!2983 = !DILocation(line: 297, column: 13, scope: !2969)
!2984 = !DILocation(line: 297, column: 21, scope: !2969)
!2985 = !DILocation(line: 297, column: 27, scope: !2969)
!2986 = !DILocation(line: 297, column: 2, scope: !2969)
!2987 = !DILocation(line: 298, column: 1, scope: !2969)
!2988 = distinct !DISubprogram(name: "MaskSplinePoint_co_set", scope: !3, file: !3, line: 1375, type: !2931, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2989 = !DILocalVariable(name: "ptr", arg: 1, scope: !2988, file: !3, line: 1375, type: !453)
!2990 = !DILocation(line: 1375, column: 41, scope: !2988)
!2991 = !DILocalVariable(name: "values", arg: 2, scope: !2988, file: !3, line: 1375, type: !2089)
!2992 = !DILocation(line: 1375, column: 58, scope: !2988)
!2993 = !DILocation(line: 1377, column: 36, scope: !2988)
!2994 = !DILocation(line: 1377, column: 41, scope: !2988)
!2995 = !DILocation(line: 1377, column: 2, scope: !2988)
!2996 = !DILocation(line: 1378, column: 1, scope: !2988)
!2997 = distinct !DISubprogram(name: "rna_MaskSplinePoint_ctrlpoint_set", scope: !2488, file: !2488, line: 300, type: !2931, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!2998 = !DILocalVariable(name: "ptr", arg: 1, scope: !2997, file: !2488, line: 300, type: !453)
!2999 = !DILocation(line: 300, column: 59, scope: !2997)
!3000 = !DILocalVariable(name: "values", arg: 2, scope: !2997, file: !2488, line: 300, type: !2089)
!3001 = !DILocation(line: 300, column: 77, scope: !2997)
!3002 = !DILocalVariable(name: "point", scope: !2997, file: !2488, line: 302, type: !1779)
!3003 = !DILocation(line: 302, column: 19, scope: !2997)
!3004 = !DILocation(line: 302, column: 47, scope: !2997)
!3005 = !DILocation(line: 302, column: 52, scope: !2997)
!3006 = !DILocation(line: 302, column: 27, scope: !2997)
!3007 = !DILocalVariable(name: "bezt", scope: !2997, file: !2488, line: 303, type: !2921)
!3008 = !DILocation(line: 303, column: 13, scope: !2997)
!3009 = !DILocation(line: 303, column: 21, scope: !2997)
!3010 = !DILocation(line: 303, column: 28, scope: !2997)
!3011 = !DILocation(line: 304, column: 13, scope: !2997)
!3012 = !DILocation(line: 304, column: 19, scope: !2997)
!3013 = !DILocation(line: 304, column: 27, scope: !2997)
!3014 = !DILocation(line: 304, column: 2, scope: !2997)
!3015 = !DILocation(line: 305, column: 1, scope: !2997)
!3016 = distinct !DISubprogram(name: "MaskSplinePoint_handle_right_get", scope: !3, file: !3, line: 1380, type: !2900, scopeLine: 1381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3017 = !DILocalVariable(name: "ptr", arg: 1, scope: !3016, file: !3, line: 1380, type: !453)
!3018 = !DILocation(line: 1380, column: 51, scope: !3016)
!3019 = !DILocalVariable(name: "values", arg: 2, scope: !3016, file: !3, line: 1380, type: !2083)
!3020 = !DILocation(line: 1380, column: 62, scope: !3016)
!3021 = !DILocation(line: 1382, column: 34, scope: !3016)
!3022 = !DILocation(line: 1382, column: 39, scope: !3016)
!3023 = !DILocation(line: 1382, column: 2, scope: !3016)
!3024 = !DILocation(line: 1383, column: 1, scope: !3016)
!3025 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle2_get", scope: !2488, file: !2488, line: 279, type: !2900, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3026 = !DILocalVariable(name: "ptr", arg: 1, scope: !3025, file: !2488, line: 279, type: !453)
!3027 = !DILocation(line: 279, column: 57, scope: !3025)
!3028 = !DILocalVariable(name: "values", arg: 2, scope: !3025, file: !2488, line: 279, type: !2083)
!3029 = !DILocation(line: 279, column: 69, scope: !3025)
!3030 = !DILocalVariable(name: "point", scope: !3025, file: !2488, line: 281, type: !1779)
!3031 = !DILocation(line: 281, column: 19, scope: !3025)
!3032 = !DILocation(line: 281, column: 47, scope: !3025)
!3033 = !DILocation(line: 281, column: 52, scope: !3025)
!3034 = !DILocation(line: 281, column: 27, scope: !3025)
!3035 = !DILocalVariable(name: "bezt", scope: !3025, file: !2488, line: 282, type: !2921)
!3036 = !DILocation(line: 282, column: 13, scope: !3025)
!3037 = !DILocation(line: 282, column: 21, scope: !3025)
!3038 = !DILocation(line: 282, column: 28, scope: !3025)
!3039 = !DILocation(line: 283, column: 13, scope: !3025)
!3040 = !DILocation(line: 283, column: 21, scope: !3025)
!3041 = !DILocation(line: 283, column: 27, scope: !3025)
!3042 = !DILocation(line: 283, column: 2, scope: !3025)
!3043 = !DILocation(line: 284, column: 1, scope: !3025)
!3044 = distinct !DISubprogram(name: "MaskSplinePoint_handle_right_set", scope: !3, file: !3, line: 1385, type: !2931, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3045 = !DILocalVariable(name: "ptr", arg: 1, scope: !3044, file: !3, line: 1385, type: !453)
!3046 = !DILocation(line: 1385, column: 51, scope: !3044)
!3047 = !DILocalVariable(name: "values", arg: 2, scope: !3044, file: !3, line: 1385, type: !2089)
!3048 = !DILocation(line: 1385, column: 68, scope: !3044)
!3049 = !DILocation(line: 1387, column: 34, scope: !3044)
!3050 = !DILocation(line: 1387, column: 39, scope: !3044)
!3051 = !DILocation(line: 1387, column: 2, scope: !3044)
!3052 = !DILocation(line: 1388, column: 1, scope: !3044)
!3053 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle2_set", scope: !2488, file: !2488, line: 286, type: !2931, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3054 = !DILocalVariable(name: "ptr", arg: 1, scope: !3053, file: !2488, line: 286, type: !453)
!3055 = !DILocation(line: 286, column: 57, scope: !3053)
!3056 = !DILocalVariable(name: "values", arg: 2, scope: !3053, file: !2488, line: 286, type: !2089)
!3057 = !DILocation(line: 286, column: 75, scope: !3053)
!3058 = !DILocalVariable(name: "point", scope: !3053, file: !2488, line: 288, type: !1779)
!3059 = !DILocation(line: 288, column: 19, scope: !3053)
!3060 = !DILocation(line: 288, column: 47, scope: !3053)
!3061 = !DILocation(line: 288, column: 52, scope: !3053)
!3062 = !DILocation(line: 288, column: 27, scope: !3053)
!3063 = !DILocalVariable(name: "bezt", scope: !3053, file: !2488, line: 289, type: !2921)
!3064 = !DILocation(line: 289, column: 13, scope: !3053)
!3065 = !DILocation(line: 289, column: 21, scope: !3053)
!3066 = !DILocation(line: 289, column: 28, scope: !3053)
!3067 = !DILocation(line: 290, column: 13, scope: !3053)
!3068 = !DILocation(line: 290, column: 19, scope: !3053)
!3069 = !DILocation(line: 290, column: 27, scope: !3053)
!3070 = !DILocation(line: 290, column: 2, scope: !3053)
!3071 = !DILocation(line: 291, column: 1, scope: !3053)
!3072 = distinct !DISubprogram(name: "MaskSplinePoint_handle_type_get", scope: !3, file: !3, line: 1390, type: !2505, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3073 = !DILocalVariable(name: "ptr", arg: 1, scope: !3072, file: !3, line: 1390, type: !453)
!3074 = !DILocation(line: 1390, column: 49, scope: !3072)
!3075 = !DILocation(line: 1392, column: 45, scope: !3072)
!3076 = !DILocation(line: 1392, column: 9, scope: !3072)
!3077 = !DILocation(line: 1392, column: 2, scope: !3072)
!3078 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_type_get", scope: !2488, file: !2488, line: 307, type: !2505, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3079 = !DILocalVariable(name: "ptr", arg: 1, scope: !3078, file: !2488, line: 307, type: !453)
!3080 = !DILocation(line: 307, column: 60, scope: !3078)
!3081 = !DILocalVariable(name: "point", scope: !3078, file: !2488, line: 309, type: !1779)
!3082 = !DILocation(line: 309, column: 19, scope: !3078)
!3083 = !DILocation(line: 309, column: 47, scope: !3078)
!3084 = !DILocation(line: 309, column: 52, scope: !3078)
!3085 = !DILocation(line: 309, column: 27, scope: !3078)
!3086 = !DILocalVariable(name: "bezt", scope: !3078, file: !2488, line: 310, type: !2921)
!3087 = !DILocation(line: 310, column: 13, scope: !3078)
!3088 = !DILocation(line: 310, column: 21, scope: !3078)
!3089 = !DILocation(line: 310, column: 28, scope: !3078)
!3090 = !DILocation(line: 312, column: 9, scope: !3078)
!3091 = !DILocation(line: 312, column: 15, scope: !3078)
!3092 = !DILocation(line: 312, column: 2, scope: !3078)
!3093 = distinct !DISubprogram(name: "MaskSplinePoint_handle_type_set", scope: !3, file: !3, line: 1395, type: !2518, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3094 = !DILocalVariable(name: "ptr", arg: 1, scope: !3093, file: !3, line: 1395, type: !453)
!3095 = !DILocation(line: 1395, column: 50, scope: !3093)
!3096 = !DILocalVariable(name: "value", arg: 2, scope: !3093, file: !3, line: 1395, type: !48)
!3097 = !DILocation(line: 1395, column: 59, scope: !3093)
!3098 = !DILocation(line: 1397, column: 38, scope: !3093)
!3099 = !DILocation(line: 1397, column: 43, scope: !3093)
!3100 = !DILocation(line: 1397, column: 2, scope: !3093)
!3101 = !DILocation(line: 1398, column: 1, scope: !3093)
!3102 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_type_set", scope: !2488, file: !2488, line: 345, type: !2518, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3103 = !DILocalVariable(name: "ptr", arg: 1, scope: !3102, file: !2488, line: 345, type: !453)
!3104 = !DILocation(line: 345, column: 61, scope: !3102)
!3105 = !DILocalVariable(name: "value", arg: 2, scope: !3102, file: !2488, line: 345, type: !48)
!3106 = !DILocation(line: 345, column: 70, scope: !3102)
!3107 = !DILocalVariable(name: "point", scope: !3102, file: !2488, line: 347, type: !1779)
!3108 = !DILocation(line: 347, column: 19, scope: !3102)
!3109 = !DILocation(line: 347, column: 47, scope: !3102)
!3110 = !DILocation(line: 347, column: 52, scope: !3102)
!3111 = !DILocation(line: 347, column: 27, scope: !3102)
!3112 = !DILocalVariable(name: "bezt", scope: !3102, file: !2488, line: 348, type: !2921)
!3113 = !DILocation(line: 348, column: 13, scope: !3102)
!3114 = !DILocation(line: 348, column: 21, scope: !3102)
!3115 = !DILocation(line: 348, column: 28, scope: !3102)
!3116 = !DILocalVariable(name: "spline", scope: !3102, file: !2488, line: 349, type: !1810)
!3117 = !DILocation(line: 349, column: 14, scope: !3102)
!3118 = !DILocation(line: 349, column: 55, scope: !3102)
!3119 = !DILocation(line: 349, column: 60, scope: !3102)
!3120 = !DILocation(line: 349, column: 63, scope: !3102)
!3121 = !DILocation(line: 349, column: 46, scope: !3102)
!3122 = !DILocation(line: 349, column: 69, scope: !3102)
!3123 = !DILocation(line: 349, column: 23, scope: !3102)
!3124 = !DILocation(line: 351, column: 24, scope: !3102)
!3125 = !DILocation(line: 351, column: 13, scope: !3102)
!3126 = !DILocation(line: 351, column: 19, scope: !3102)
!3127 = !DILocation(line: 351, column: 22, scope: !3102)
!3128 = !DILocation(line: 351, column: 2, scope: !3102)
!3129 = !DILocation(line: 351, column: 8, scope: !3102)
!3130 = !DILocation(line: 351, column: 11, scope: !3102)
!3131 = !DILocation(line: 352, column: 25, scope: !3102)
!3132 = !DILocation(line: 352, column: 2, scope: !3102)
!3133 = !DILocation(line: 353, column: 29, scope: !3102)
!3134 = !DILocation(line: 353, column: 37, scope: !3102)
!3135 = !DILocation(line: 353, column: 2, scope: !3102)
!3136 = !DILocation(line: 354, column: 1, scope: !3102)
!3137 = distinct !DISubprogram(name: "MaskSplinePoint_handle_left_type_get", scope: !3, file: !3, line: 1400, type: !2505, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3138 = !DILocalVariable(name: "ptr", arg: 1, scope: !3137, file: !3, line: 1400, type: !453)
!3139 = !DILocation(line: 1400, column: 54, scope: !3137)
!3140 = !DILocation(line: 1402, column: 50, scope: !3137)
!3141 = !DILocation(line: 1402, column: 9, scope: !3137)
!3142 = !DILocation(line: 1402, column: 2, scope: !3137)
!3143 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_left_type_get", scope: !2488, file: !2488, line: 356, type: !2505, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3144 = !DILocalVariable(name: "ptr", arg: 1, scope: !3143, file: !2488, line: 356, type: !453)
!3145 = !DILocation(line: 356, column: 65, scope: !3143)
!3146 = !DILocalVariable(name: "point", scope: !3143, file: !2488, line: 358, type: !1779)
!3147 = !DILocation(line: 358, column: 19, scope: !3143)
!3148 = !DILocation(line: 358, column: 47, scope: !3143)
!3149 = !DILocation(line: 358, column: 52, scope: !3143)
!3150 = !DILocation(line: 358, column: 27, scope: !3143)
!3151 = !DILocalVariable(name: "bezt", scope: !3143, file: !2488, line: 359, type: !2921)
!3152 = !DILocation(line: 359, column: 13, scope: !3143)
!3153 = !DILocation(line: 359, column: 21, scope: !3143)
!3154 = !DILocation(line: 359, column: 28, scope: !3143)
!3155 = !DILocation(line: 361, column: 9, scope: !3143)
!3156 = !DILocation(line: 361, column: 15, scope: !3143)
!3157 = !DILocation(line: 361, column: 2, scope: !3143)
!3158 = distinct !DISubprogram(name: "MaskSplinePoint_handle_left_type_set", scope: !3, file: !3, line: 1405, type: !2518, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3159 = !DILocalVariable(name: "ptr", arg: 1, scope: !3158, file: !3, line: 1405, type: !453)
!3160 = !DILocation(line: 1405, column: 55, scope: !3158)
!3161 = !DILocalVariable(name: "value", arg: 2, scope: !3158, file: !3, line: 1405, type: !48)
!3162 = !DILocation(line: 1405, column: 64, scope: !3158)
!3163 = !DILocation(line: 1407, column: 43, scope: !3158)
!3164 = !DILocation(line: 1407, column: 48, scope: !3158)
!3165 = !DILocation(line: 1407, column: 2, scope: !3158)
!3166 = !DILocation(line: 1408, column: 1, scope: !3158)
!3167 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_left_type_set", scope: !2488, file: !2488, line: 364, type: !2518, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3168 = !DILocalVariable(name: "ptr", arg: 1, scope: !3167, file: !2488, line: 364, type: !453)
!3169 = !DILocation(line: 364, column: 66, scope: !3167)
!3170 = !DILocalVariable(name: "value", arg: 2, scope: !3167, file: !2488, line: 364, type: !48)
!3171 = !DILocation(line: 364, column: 75, scope: !3167)
!3172 = !DILocalVariable(name: "point", scope: !3167, file: !2488, line: 366, type: !1779)
!3173 = !DILocation(line: 366, column: 19, scope: !3167)
!3174 = !DILocation(line: 366, column: 47, scope: !3167)
!3175 = !DILocation(line: 366, column: 52, scope: !3167)
!3176 = !DILocation(line: 366, column: 27, scope: !3167)
!3177 = !DILocalVariable(name: "bezt", scope: !3167, file: !2488, line: 367, type: !2921)
!3178 = !DILocation(line: 367, column: 13, scope: !3167)
!3179 = !DILocation(line: 367, column: 21, scope: !3167)
!3180 = !DILocation(line: 367, column: 28, scope: !3167)
!3181 = !DILocalVariable(name: "spline", scope: !3167, file: !2488, line: 368, type: !1810)
!3182 = !DILocation(line: 368, column: 14, scope: !3167)
!3183 = !DILocation(line: 368, column: 55, scope: !3167)
!3184 = !DILocation(line: 368, column: 60, scope: !3167)
!3185 = !DILocation(line: 368, column: 63, scope: !3167)
!3186 = !DILocation(line: 368, column: 46, scope: !3167)
!3187 = !DILocation(line: 368, column: 69, scope: !3167)
!3188 = !DILocation(line: 368, column: 23, scope: !3167)
!3189 = !DILocation(line: 370, column: 13, scope: !3167)
!3190 = !DILocation(line: 370, column: 2, scope: !3167)
!3191 = !DILocation(line: 370, column: 8, scope: !3167)
!3192 = !DILocation(line: 370, column: 11, scope: !3167)
!3193 = !DILocation(line: 371, column: 25, scope: !3167)
!3194 = !DILocation(line: 371, column: 2, scope: !3167)
!3195 = !DILocation(line: 372, column: 29, scope: !3167)
!3196 = !DILocation(line: 372, column: 37, scope: !3167)
!3197 = !DILocation(line: 372, column: 2, scope: !3167)
!3198 = !DILocation(line: 373, column: 1, scope: !3167)
!3199 = distinct !DISubprogram(name: "MaskSplinePoint_handle_right_type_get", scope: !3, file: !3, line: 1410, type: !2505, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3200 = !DILocalVariable(name: "ptr", arg: 1, scope: !3199, file: !3, line: 1410, type: !453)
!3201 = !DILocation(line: 1410, column: 55, scope: !3199)
!3202 = !DILocation(line: 1412, column: 51, scope: !3199)
!3203 = !DILocation(line: 1412, column: 9, scope: !3199)
!3204 = !DILocation(line: 1412, column: 2, scope: !3199)
!3205 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_right_type_get", scope: !2488, file: !2488, line: 375, type: !2505, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3206 = !DILocalVariable(name: "ptr", arg: 1, scope: !3205, file: !2488, line: 375, type: !453)
!3207 = !DILocation(line: 375, column: 66, scope: !3205)
!3208 = !DILocalVariable(name: "point", scope: !3205, file: !2488, line: 377, type: !1779)
!3209 = !DILocation(line: 377, column: 19, scope: !3205)
!3210 = !DILocation(line: 377, column: 47, scope: !3205)
!3211 = !DILocation(line: 377, column: 52, scope: !3205)
!3212 = !DILocation(line: 377, column: 27, scope: !3205)
!3213 = !DILocalVariable(name: "bezt", scope: !3205, file: !2488, line: 378, type: !2921)
!3214 = !DILocation(line: 378, column: 13, scope: !3205)
!3215 = !DILocation(line: 378, column: 21, scope: !3205)
!3216 = !DILocation(line: 378, column: 28, scope: !3205)
!3217 = !DILocation(line: 380, column: 9, scope: !3205)
!3218 = !DILocation(line: 380, column: 15, scope: !3205)
!3219 = !DILocation(line: 380, column: 2, scope: !3205)
!3220 = distinct !DISubprogram(name: "MaskSplinePoint_handle_right_type_set", scope: !3, file: !3, line: 1415, type: !2518, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3221 = !DILocalVariable(name: "ptr", arg: 1, scope: !3220, file: !3, line: 1415, type: !453)
!3222 = !DILocation(line: 1415, column: 56, scope: !3220)
!3223 = !DILocalVariable(name: "value", arg: 2, scope: !3220, file: !3, line: 1415, type: !48)
!3224 = !DILocation(line: 1415, column: 65, scope: !3220)
!3225 = !DILocation(line: 1417, column: 44, scope: !3220)
!3226 = !DILocation(line: 1417, column: 49, scope: !3220)
!3227 = !DILocation(line: 1417, column: 2, scope: !3220)
!3228 = !DILocation(line: 1418, column: 1, scope: !3220)
!3229 = distinct !DISubprogram(name: "rna_MaskSplinePoint_handle_right_type_set", scope: !2488, file: !2488, line: 383, type: !2518, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3230 = !DILocalVariable(name: "ptr", arg: 1, scope: !3229, file: !2488, line: 383, type: !453)
!3231 = !DILocation(line: 383, column: 67, scope: !3229)
!3232 = !DILocalVariable(name: "value", arg: 2, scope: !3229, file: !2488, line: 383, type: !48)
!3233 = !DILocation(line: 383, column: 76, scope: !3229)
!3234 = !DILocalVariable(name: "point", scope: !3229, file: !2488, line: 385, type: !1779)
!3235 = !DILocation(line: 385, column: 19, scope: !3229)
!3236 = !DILocation(line: 385, column: 47, scope: !3229)
!3237 = !DILocation(line: 385, column: 52, scope: !3229)
!3238 = !DILocation(line: 385, column: 27, scope: !3229)
!3239 = !DILocalVariable(name: "bezt", scope: !3229, file: !2488, line: 386, type: !2921)
!3240 = !DILocation(line: 386, column: 13, scope: !3229)
!3241 = !DILocation(line: 386, column: 21, scope: !3229)
!3242 = !DILocation(line: 386, column: 28, scope: !3229)
!3243 = !DILocalVariable(name: "spline", scope: !3229, file: !2488, line: 387, type: !1810)
!3244 = !DILocation(line: 387, column: 14, scope: !3229)
!3245 = !DILocation(line: 387, column: 55, scope: !3229)
!3246 = !DILocation(line: 387, column: 60, scope: !3229)
!3247 = !DILocation(line: 387, column: 63, scope: !3229)
!3248 = !DILocation(line: 387, column: 46, scope: !3229)
!3249 = !DILocation(line: 387, column: 69, scope: !3229)
!3250 = !DILocation(line: 387, column: 23, scope: !3229)
!3251 = !DILocation(line: 389, column: 13, scope: !3229)
!3252 = !DILocation(line: 389, column: 2, scope: !3229)
!3253 = !DILocation(line: 389, column: 8, scope: !3229)
!3254 = !DILocation(line: 389, column: 11, scope: !3229)
!3255 = !DILocation(line: 390, column: 25, scope: !3229)
!3256 = !DILocation(line: 390, column: 2, scope: !3229)
!3257 = !DILocation(line: 391, column: 29, scope: !3229)
!3258 = !DILocation(line: 391, column: 37, scope: !3229)
!3259 = !DILocation(line: 391, column: 2, scope: !3229)
!3260 = !DILocation(line: 392, column: 1, scope: !3229)
!3261 = distinct !DISubprogram(name: "MaskSplinePoint_weight_get", scope: !3, file: !3, line: 1420, type: !2741, scopeLine: 1421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3262 = !DILocalVariable(name: "ptr", arg: 1, scope: !3261, file: !3, line: 1420, type: !453)
!3263 = !DILocation(line: 1420, column: 46, scope: !3261)
!3264 = !DILocalVariable(name: "data", scope: !3261, file: !3, line: 1422, type: !1779)
!3265 = !DILocation(line: 1422, column: 19, scope: !3261)
!3266 = !DILocation(line: 1422, column: 46, scope: !3261)
!3267 = !DILocation(line: 1422, column: 51, scope: !3261)
!3268 = !DILocation(line: 1422, column: 26, scope: !3261)
!3269 = !DILocation(line: 1423, column: 17, scope: !3261)
!3270 = !DILocation(line: 1423, column: 23, scope: !3261)
!3271 = !DILocation(line: 1423, column: 28, scope: !3261)
!3272 = !DILocation(line: 1423, column: 2, scope: !3261)
!3273 = distinct !DISubprogram(name: "MaskSplinePoint_weight_set", scope: !3, file: !3, line: 1426, type: !2754, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3274 = !DILocalVariable(name: "ptr", arg: 1, scope: !3273, file: !3, line: 1426, type: !453)
!3275 = !DILocation(line: 1426, column: 45, scope: !3273)
!3276 = !DILocalVariable(name: "value", arg: 2, scope: !3273, file: !3, line: 1426, type: !389)
!3277 = !DILocation(line: 1426, column: 56, scope: !3273)
!3278 = !DILocalVariable(name: "data", scope: !3273, file: !3, line: 1428, type: !1779)
!3279 = !DILocation(line: 1428, column: 19, scope: !3273)
!3280 = !DILocation(line: 1428, column: 46, scope: !3273)
!3281 = !DILocation(line: 1428, column: 51, scope: !3273)
!3282 = !DILocation(line: 1428, column: 26, scope: !3273)
!3283 = !DILocation(line: 1429, column: 22, scope: !3273)
!3284 = !DILocation(line: 1429, column: 2, scope: !3273)
!3285 = !DILocation(line: 1429, column: 8, scope: !3273)
!3286 = !DILocation(line: 1429, column: 13, scope: !3273)
!3287 = !DILocation(line: 1429, column: 20, scope: !3273)
!3288 = !DILocation(line: 1430, column: 1, scope: !3273)
!3289 = distinct !DISubprogram(name: "MaskSplinePoint_select_get", scope: !3, file: !3, line: 1432, type: !2505, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3290 = !DILocalVariable(name: "ptr", arg: 1, scope: !3289, file: !3, line: 1432, type: !453)
!3291 = !DILocation(line: 1432, column: 44, scope: !3289)
!3292 = !DILocalVariable(name: "data", scope: !3289, file: !3, line: 1434, type: !1779)
!3293 = !DILocation(line: 1434, column: 19, scope: !3289)
!3294 = !DILocation(line: 1434, column: 46, scope: !3289)
!3295 = !DILocation(line: 1434, column: 51, scope: !3289)
!3296 = !DILocation(line: 1434, column: 26, scope: !3289)
!3297 = !DILocation(line: 1435, column: 12, scope: !3289)
!3298 = !DILocation(line: 1435, column: 18, scope: !3289)
!3299 = !DILocation(line: 1435, column: 23, scope: !3289)
!3300 = !DILocation(line: 1435, column: 11, scope: !3289)
!3301 = !DILocation(line: 1435, column: 27, scope: !3289)
!3302 = !DILocation(line: 1435, column: 32, scope: !3289)
!3303 = !DILocation(line: 1435, column: 2, scope: !3289)
!3304 = distinct !DISubprogram(name: "MaskSplinePoint_select_set", scope: !3, file: !3, line: 1438, type: !2518, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3305 = !DILocalVariable(name: "ptr", arg: 1, scope: !3304, file: !3, line: 1438, type: !453)
!3306 = !DILocation(line: 1438, column: 45, scope: !3304)
!3307 = !DILocalVariable(name: "value", arg: 2, scope: !3304, file: !3, line: 1438, type: !48)
!3308 = !DILocation(line: 1438, column: 54, scope: !3304)
!3309 = !DILocalVariable(name: "data", scope: !3304, file: !3, line: 1440, type: !1779)
!3310 = !DILocation(line: 1440, column: 19, scope: !3304)
!3311 = !DILocation(line: 1440, column: 46, scope: !3304)
!3312 = !DILocation(line: 1440, column: 51, scope: !3304)
!3313 = !DILocation(line: 1440, column: 26, scope: !3304)
!3314 = !DILocation(line: 1441, column: 6, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 1441, column: 6)
!3316 = !DILocation(line: 1441, column: 6, scope: !3304)
!3317 = !DILocation(line: 1441, column: 13, scope: !3315)
!3318 = !DILocation(line: 1441, column: 19, scope: !3315)
!3319 = !DILocation(line: 1441, column: 24, scope: !3315)
!3320 = !DILocation(line: 1441, column: 27, scope: !3315)
!3321 = !DILocation(line: 1442, column: 7, scope: !3315)
!3322 = !DILocation(line: 1442, column: 13, scope: !3315)
!3323 = !DILocation(line: 1442, column: 18, scope: !3315)
!3324 = !DILocation(line: 1442, column: 21, scope: !3315)
!3325 = !DILocation(line: 1443, column: 1, scope: !3304)
!3326 = distinct !DISubprogram(name: "MaskSplinePoint_parent_get", scope: !3, file: !3, line: 1445, type: !2457, scopeLine: 1446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3327 = !DILocalVariable(name: "ptr", arg: 1, scope: !3326, file: !3, line: 1445, type: !453)
!3328 = !DILocation(line: 1445, column: 51, scope: !3326)
!3329 = !DILocalVariable(name: "data", scope: !3326, file: !3, line: 1447, type: !1779)
!3330 = !DILocation(line: 1447, column: 19, scope: !3326)
!3331 = !DILocation(line: 1447, column: 46, scope: !3326)
!3332 = !DILocation(line: 1447, column: 51, scope: !3326)
!3333 = !DILocation(line: 1447, column: 26, scope: !3326)
!3334 = !DILocation(line: 1448, column: 36, scope: !3326)
!3335 = !DILocation(line: 1448, column: 59, scope: !3326)
!3336 = !DILocation(line: 1448, column: 65, scope: !3326)
!3337 = !DILocation(line: 1448, column: 58, scope: !3326)
!3338 = !DILocation(line: 1448, column: 9, scope: !3326)
!3339 = !DILocation(line: 1448, column: 2, scope: !3326)
!3340 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_length", scope: !3, file: !3, line: 1451, type: !2505, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3341 = !DILocalVariable(name: "ptr", arg: 1, scope: !3340, file: !3, line: 1451, type: !453)
!3342 = !DILocation(line: 1451, column: 55, scope: !3340)
!3343 = !DILocalVariable(name: "data", scope: !3340, file: !3, line: 1453, type: !1779)
!3344 = !DILocation(line: 1453, column: 19, scope: !3340)
!3345 = !DILocation(line: 1453, column: 46, scope: !3340)
!3346 = !DILocation(line: 1453, column: 51, scope: !3340)
!3347 = !DILocation(line: 1453, column: 26, scope: !3340)
!3348 = !DILocation(line: 1454, column: 10, scope: !3340)
!3349 = !DILocation(line: 1454, column: 16, scope: !3340)
!3350 = !DILocation(line: 1454, column: 19, scope: !3340)
!3351 = !DILocation(line: 1454, column: 9, scope: !3340)
!3352 = !DILocation(line: 1454, column: 34, scope: !3340)
!3353 = !DILocation(line: 1454, column: 40, scope: !3340)
!3354 = !DILocation(line: 1454, column: 2, scope: !3340)
!3355 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_begin", scope: !3, file: !3, line: 1462, type: !2382, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3356 = !DILocalVariable(name: "iter", arg: 1, scope: !3355, file: !3, line: 1462, type: !2384)
!3357 = !DILocation(line: 1462, column: 71, scope: !3355)
!3358 = !DILocalVariable(name: "ptr", arg: 2, scope: !3355, file: !3, line: 1462, type: !453)
!3359 = !DILocation(line: 1462, column: 89, scope: !3355)
!3360 = !DILocalVariable(name: "data", scope: !3355, file: !3, line: 1464, type: !1779)
!3361 = !DILocation(line: 1464, column: 19, scope: !3355)
!3362 = !DILocation(line: 1464, column: 46, scope: !3355)
!3363 = !DILocation(line: 1464, column: 51, scope: !3355)
!3364 = !DILocation(line: 1464, column: 26, scope: !3355)
!3365 = !DILocation(line: 1466, column: 9, scope: !3355)
!3366 = !DILocation(line: 1466, column: 2, scope: !3355)
!3367 = !DILocation(line: 1467, column: 2, scope: !3355)
!3368 = !DILocation(line: 1467, column: 8, scope: !3355)
!3369 = !DILocation(line: 1467, column: 18, scope: !3355)
!3370 = !DILocation(line: 1467, column: 17, scope: !3355)
!3371 = !DILocation(line: 1468, column: 2, scope: !3355)
!3372 = !DILocation(line: 1468, column: 8, scope: !3355)
!3373 = !DILocation(line: 1468, column: 13, scope: !3355)
!3374 = !DILocation(line: 1470, column: 27, scope: !3355)
!3375 = !DILocation(line: 1470, column: 33, scope: !3355)
!3376 = !DILocation(line: 1470, column: 39, scope: !3355)
!3377 = !DILocation(line: 1470, column: 64, scope: !3355)
!3378 = !DILocation(line: 1470, column: 70, scope: !3355)
!3379 = !DILocation(line: 1470, column: 2, scope: !3355)
!3380 = !DILocation(line: 1472, column: 6, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3355, file: !3, line: 1472, column: 6)
!3382 = !DILocation(line: 1472, column: 12, scope: !3381)
!3383 = !DILocation(line: 1472, column: 6, scope: !3355)
!3384 = !DILocation(line: 1473, column: 3, scope: !3381)
!3385 = !DILocation(line: 1473, column: 9, scope: !3381)
!3386 = !DILocation(line: 1473, column: 50, scope: !3381)
!3387 = !DILocation(line: 1473, column: 15, scope: !3381)
!3388 = !DILocation(line: 1474, column: 1, scope: !3355)
!3389 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_get", scope: !3, file: !3, line: 1457, type: !2413, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3390 = !DILocalVariable(name: "iter", arg: 1, scope: !3389, file: !3, line: 1457, type: !2384)
!3391 = !DILocation(line: 1457, column: 82, scope: !3389)
!3392 = !DILocation(line: 1459, column: 37, scope: !3389)
!3393 = !DILocation(line: 1459, column: 43, scope: !3389)
!3394 = !DILocation(line: 1459, column: 98, scope: !3389)
!3395 = !DILocation(line: 1459, column: 75, scope: !3389)
!3396 = !DILocation(line: 1459, column: 9, scope: !3389)
!3397 = !DILocation(line: 1459, column: 2, scope: !3389)
!3398 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_next", scope: !3, file: !3, line: 1476, type: !2421, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3399 = !DILocalVariable(name: "iter", arg: 1, scope: !3398, file: !3, line: 1476, type: !2384)
!3400 = !DILocation(line: 1476, column: 70, scope: !3398)
!3401 = !DILocation(line: 1478, column: 26, scope: !3398)
!3402 = !DILocation(line: 1478, column: 2, scope: !3398)
!3403 = !DILocation(line: 1480, column: 6, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1480, column: 6)
!3405 = !DILocation(line: 1480, column: 12, scope: !3404)
!3406 = !DILocation(line: 1480, column: 6, scope: !3398)
!3407 = !DILocation(line: 1481, column: 3, scope: !3404)
!3408 = !DILocation(line: 1481, column: 9, scope: !3404)
!3409 = !DILocation(line: 1481, column: 50, scope: !3404)
!3410 = !DILocation(line: 1481, column: 15, scope: !3404)
!3411 = !DILocation(line: 1482, column: 1, scope: !3398)
!3412 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_end", scope: !3, file: !3, line: 1484, type: !2421, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3413 = !DILocalVariable(name: "iter", arg: 1, scope: !3412, file: !3, line: 1484, type: !2384)
!3414 = !DILocation(line: 1484, column: 69, scope: !3412)
!3415 = !DILocation(line: 1486, column: 25, scope: !3412)
!3416 = !DILocation(line: 1486, column: 2, scope: !3412)
!3417 = !DILocation(line: 1487, column: 1, scope: !3412)
!3418 = distinct !DISubprogram(name: "MaskSplinePoint_feather_points_lookup_int", scope: !3, file: !3, line: 1489, type: !3419, scopeLine: 1490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{!48, !453, !48, !453}
!3421 = !DILocalVariable(name: "ptr", arg: 1, scope: !3418, file: !3, line: 1489, type: !453)
!3422 = !DILocation(line: 1489, column: 59, scope: !3418)
!3423 = !DILocalVariable(name: "index", arg: 2, scope: !3418, file: !3, line: 1489, type: !48)
!3424 = !DILocation(line: 1489, column: 68, scope: !3418)
!3425 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !3418, file: !3, line: 1489, type: !453)
!3426 = !DILocation(line: 1489, column: 87, scope: !3418)
!3427 = !DILocalVariable(name: "found", scope: !3418, file: !3, line: 1491, type: !48)
!3428 = !DILocation(line: 1491, column: 6, scope: !3418)
!3429 = !DILocalVariable(name: "iter", scope: !3418, file: !3, line: 1492, type: !2385)
!3430 = !DILocation(line: 1492, column: 29, scope: !3418)
!3431 = !DILocation(line: 1494, column: 46, scope: !3418)
!3432 = !DILocation(line: 1494, column: 2, scope: !3418)
!3433 = !DILocation(line: 1496, column: 11, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 1496, column: 6)
!3435 = !DILocation(line: 1496, column: 6, scope: !3434)
!3436 = !DILocation(line: 1496, column: 6, scope: !3418)
!3437 = !DILocalVariable(name: "internal", scope: !3438, file: !3, line: 1497, type: !3439)
!3438 = distinct !DILexicalBlock(scope: !3434, file: !3, line: 1496, column: 18)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!3440 = !DILocation(line: 1497, column: 18, scope: !3438)
!3441 = !DILocation(line: 1497, column: 35, scope: !3438)
!3442 = !DILocation(line: 1497, column: 44, scope: !3438)
!3443 = !DILocation(line: 1498, column: 7, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1498, column: 7)
!3445 = !DILocation(line: 1498, column: 13, scope: !3444)
!3446 = !DILocation(line: 1498, column: 17, scope: !3444)
!3447 = !DILocation(line: 1498, column: 20, scope: !3444)
!3448 = !DILocation(line: 1498, column: 29, scope: !3444)
!3449 = !DILocation(line: 1498, column: 39, scope: !3444)
!3450 = !DILocation(line: 1498, column: 26, scope: !3444)
!3451 = !DILocation(line: 1498, column: 7, scope: !3438)
!3452 = !DILocation(line: 1500, column: 69, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 1498, column: 47)
!3454 = !DILocation(line: 1500, column: 4, scope: !3453)
!3455 = !DILocation(line: 1504, column: 3, scope: !3453)
!3456 = !DILocation(line: 1505, column: 12, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 1505, column: 12)
!3458 = !DILocation(line: 1505, column: 22, scope: !3457)
!3459 = !DILocation(line: 1505, column: 12, scope: !3444)
!3460 = !DILocation(line: 1506, column: 4, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 1505, column: 28)
!3462 = !DILocation(line: 1506, column: 16, scope: !3461)
!3463 = !DILocation(line: 1506, column: 19, scope: !3461)
!3464 = !DILocation(line: 1506, column: 23, scope: !3461)
!3465 = !DILocation(line: 1506, column: 31, scope: !3461)
!3466 = !DILocation(line: 0, scope: !3461)
!3467 = !DILocation(line: 1507, column: 5, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 1506, column: 38)
!3469 = distinct !{!3469, !3460, !3470}
!3470 = !DILocation(line: 1508, column: 4, scope: !3461)
!3471 = !DILocation(line: 1509, column: 13, scope: !3461)
!3472 = !DILocation(line: 1509, column: 19, scope: !3461)
!3473 = !DILocation(line: 1509, column: 25, scope: !3461)
!3474 = !DILocation(line: 1509, column: 33, scope: !3461)
!3475 = !DILocation(line: 1509, column: 10, scope: !3461)
!3476 = !DILocation(line: 1510, column: 3, scope: !3461)
!3477 = !DILocation(line: 1512, column: 21, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3457, file: !3, line: 1511, column: 8)
!3479 = !DILocation(line: 1512, column: 31, scope: !3478)
!3480 = !DILocation(line: 1512, column: 42, scope: !3478)
!3481 = !DILocation(line: 1512, column: 40, scope: !3478)
!3482 = !DILocation(line: 1512, column: 4, scope: !3478)
!3483 = !DILocation(line: 1512, column: 14, scope: !3478)
!3484 = !DILocation(line: 1512, column: 18, scope: !3478)
!3485 = !DILocation(line: 1513, column: 10, scope: !3478)
!3486 = !DILocation(line: 1515, column: 7, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1515, column: 7)
!3488 = !DILocation(line: 1515, column: 7, scope: !3438)
!3489 = !DILocation(line: 1515, column: 15, scope: !3487)
!3490 = !DILocation(line: 1515, column: 23, scope: !3487)
!3491 = !DILocation(line: 1515, column: 14, scope: !3487)
!3492 = !DILocation(line: 1516, column: 2, scope: !3438)
!3493 = !DILocation(line: 1518, column: 2, scope: !3418)
!3494 = !DILocation(line: 1520, column: 9, scope: !3418)
!3495 = !DILocation(line: 1520, column: 2, scope: !3418)
!3496 = distinct !DISubprogram(name: "MaskSpline_rna_properties_begin", scope: !3, file: !3, line: 1528, type: !2382, scopeLine: 1529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3497 = !DILocalVariable(name: "iter", arg: 1, scope: !3496, file: !3, line: 1528, type: !2384)
!3498 = !DILocation(line: 1528, column: 66, scope: !3496)
!3499 = !DILocalVariable(name: "ptr", arg: 2, scope: !3496, file: !3, line: 1528, type: !453)
!3500 = !DILocation(line: 1528, column: 84, scope: !3496)
!3501 = !DILocation(line: 1531, column: 9, scope: !3496)
!3502 = !DILocation(line: 1531, column: 2, scope: !3496)
!3503 = !DILocation(line: 1532, column: 2, scope: !3496)
!3504 = !DILocation(line: 1532, column: 8, scope: !3496)
!3505 = !DILocation(line: 1532, column: 18, scope: !3496)
!3506 = !DILocation(line: 1532, column: 17, scope: !3496)
!3507 = !DILocation(line: 1533, column: 2, scope: !3496)
!3508 = !DILocation(line: 1533, column: 8, scope: !3496)
!3509 = !DILocation(line: 1533, column: 13, scope: !3496)
!3510 = !DILocation(line: 1535, column: 31, scope: !3496)
!3511 = !DILocation(line: 1535, column: 37, scope: !3496)
!3512 = !DILocation(line: 1535, column: 2, scope: !3496)
!3513 = !DILocation(line: 1537, column: 6, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 1537, column: 6)
!3515 = !DILocation(line: 1537, column: 12, scope: !3514)
!3516 = !DILocation(line: 1537, column: 6, scope: !3496)
!3517 = !DILocation(line: 1538, column: 3, scope: !3514)
!3518 = !DILocation(line: 1538, column: 9, scope: !3514)
!3519 = !DILocation(line: 1538, column: 45, scope: !3514)
!3520 = !DILocation(line: 1538, column: 15, scope: !3514)
!3521 = !DILocation(line: 1539, column: 1, scope: !3496)
!3522 = distinct !DISubprogram(name: "MaskSpline_rna_properties_get", scope: !3, file: !3, line: 1523, type: !2413, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3523 = !DILocalVariable(name: "iter", arg: 1, scope: !3522, file: !3, line: 1523, type: !2384)
!3524 = !DILocation(line: 1523, column: 77, scope: !3522)
!3525 = !DILocation(line: 1525, column: 36, scope: !3522)
!3526 = !DILocation(line: 1525, column: 9, scope: !3522)
!3527 = !DILocation(line: 1525, column: 2, scope: !3522)
!3528 = distinct !DISubprogram(name: "MaskSpline_rna_properties_next", scope: !3, file: !3, line: 1541, type: !2421, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3529 = !DILocalVariable(name: "iter", arg: 1, scope: !3528, file: !3, line: 1541, type: !2384)
!3530 = !DILocation(line: 1541, column: 65, scope: !3528)
!3531 = !DILocation(line: 1543, column: 30, scope: !3528)
!3532 = !DILocation(line: 1543, column: 2, scope: !3528)
!3533 = !DILocation(line: 1545, column: 6, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 1545, column: 6)
!3535 = !DILocation(line: 1545, column: 12, scope: !3534)
!3536 = !DILocation(line: 1545, column: 6, scope: !3528)
!3537 = !DILocation(line: 1546, column: 3, scope: !3534)
!3538 = !DILocation(line: 1546, column: 9, scope: !3534)
!3539 = !DILocation(line: 1546, column: 45, scope: !3534)
!3540 = !DILocation(line: 1546, column: 15, scope: !3534)
!3541 = !DILocation(line: 1547, column: 1, scope: !3528)
!3542 = distinct !DISubprogram(name: "MaskSpline_rna_properties_end", scope: !3, file: !3, line: 1549, type: !2421, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3543 = !DILocalVariable(name: "iter", arg: 1, scope: !3542, file: !3, line: 1549, type: !2384)
!3544 = !DILocation(line: 1549, column: 64, scope: !3542)
!3545 = !DILocation(line: 1551, column: 28, scope: !3542)
!3546 = !DILocation(line: 1551, column: 2, scope: !3542)
!3547 = !DILocation(line: 1552, column: 1, scope: !3542)
!3548 = distinct !DISubprogram(name: "MaskSpline_rna_properties_lookup_string", scope: !3, file: !3, line: 1554, type: !2443, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3549 = !DILocalVariable(name: "ptr", arg: 1, scope: !3548, file: !3, line: 1554, type: !453)
!3550 = !DILocation(line: 1554, column: 57, scope: !3548)
!3551 = !DILocalVariable(name: "key", arg: 2, scope: !3548, file: !3, line: 1554, type: !100)
!3552 = !DILocation(line: 1554, column: 74, scope: !3548)
!3553 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !3548, file: !3, line: 1554, type: !453)
!3554 = !DILocation(line: 1554, column: 91, scope: !3548)
!3555 = !DILocation(line: 1556, column: 46, scope: !3548)
!3556 = !DILocation(line: 1556, column: 51, scope: !3548)
!3557 = !DILocation(line: 1556, column: 56, scope: !3548)
!3558 = !DILocation(line: 1556, column: 9, scope: !3548)
!3559 = !DILocation(line: 1556, column: 2, scope: !3548)
!3560 = distinct !DISubprogram(name: "MaskSpline_rna_type_get", scope: !3, file: !3, line: 1559, type: !2457, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3561 = !DILocalVariable(name: "ptr", arg: 1, scope: !3560, file: !3, line: 1559, type: !453)
!3562 = !DILocation(line: 1559, column: 48, scope: !3560)
!3563 = !DILocation(line: 1561, column: 30, scope: !3560)
!3564 = !DILocation(line: 1561, column: 9, scope: !3560)
!3565 = !DILocation(line: 1561, column: 2, scope: !3560)
!3566 = distinct !DISubprogram(name: "MaskSpline_offset_mode_get", scope: !3, file: !3, line: 1564, type: !2505, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3567 = !DILocalVariable(name: "ptr", arg: 1, scope: !3566, file: !3, line: 1564, type: !453)
!3568 = !DILocation(line: 1564, column: 44, scope: !3566)
!3569 = !DILocalVariable(name: "data", scope: !3566, file: !3, line: 1566, type: !1810)
!3570 = !DILocation(line: 1566, column: 14, scope: !3566)
!3571 = !DILocation(line: 1566, column: 36, scope: !3566)
!3572 = !DILocation(line: 1566, column: 41, scope: !3566)
!3573 = !DILocation(line: 1566, column: 21, scope: !3566)
!3574 = !DILocation(line: 1567, column: 15, scope: !3566)
!3575 = !DILocation(line: 1567, column: 21, scope: !3566)
!3576 = !DILocation(line: 1567, column: 9, scope: !3566)
!3577 = !DILocation(line: 1567, column: 2, scope: !3566)
!3578 = distinct !DISubprogram(name: "MaskSpline_offset_mode_set", scope: !3, file: !3, line: 1570, type: !2518, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3579 = !DILocalVariable(name: "ptr", arg: 1, scope: !3578, file: !3, line: 1570, type: !453)
!3580 = !DILocation(line: 1570, column: 45, scope: !3578)
!3581 = !DILocalVariable(name: "value", arg: 2, scope: !3578, file: !3, line: 1570, type: !48)
!3582 = !DILocation(line: 1570, column: 54, scope: !3578)
!3583 = !DILocalVariable(name: "data", scope: !3578, file: !3, line: 1572, type: !1810)
!3584 = !DILocation(line: 1572, column: 14, scope: !3578)
!3585 = !DILocation(line: 1572, column: 36, scope: !3578)
!3586 = !DILocation(line: 1572, column: 41, scope: !3578)
!3587 = !DILocation(line: 1572, column: 21, scope: !3578)
!3588 = !DILocation(line: 1573, column: 22, scope: !3578)
!3589 = !DILocation(line: 1573, column: 2, scope: !3578)
!3590 = !DILocation(line: 1573, column: 8, scope: !3578)
!3591 = !DILocation(line: 1573, column: 20, scope: !3578)
!3592 = !DILocation(line: 1574, column: 1, scope: !3578)
!3593 = distinct !DISubprogram(name: "MaskSpline_weight_interpolation_get", scope: !3, file: !3, line: 1576, type: !2505, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3594 = !DILocalVariable(name: "ptr", arg: 1, scope: !3593, file: !3, line: 1576, type: !453)
!3595 = !DILocation(line: 1576, column: 53, scope: !3593)
!3596 = !DILocalVariable(name: "data", scope: !3593, file: !3, line: 1578, type: !1810)
!3597 = !DILocation(line: 1578, column: 14, scope: !3593)
!3598 = !DILocation(line: 1578, column: 36, scope: !3593)
!3599 = !DILocation(line: 1578, column: 41, scope: !3593)
!3600 = !DILocation(line: 1578, column: 21, scope: !3593)
!3601 = !DILocation(line: 1579, column: 15, scope: !3593)
!3602 = !DILocation(line: 1579, column: 21, scope: !3593)
!3603 = !DILocation(line: 1579, column: 9, scope: !3593)
!3604 = !DILocation(line: 1579, column: 2, scope: !3593)
!3605 = distinct !DISubprogram(name: "MaskSpline_weight_interpolation_set", scope: !3, file: !3, line: 1582, type: !2518, scopeLine: 1583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3606 = !DILocalVariable(name: "ptr", arg: 1, scope: !3605, file: !3, line: 1582, type: !453)
!3607 = !DILocation(line: 1582, column: 54, scope: !3605)
!3608 = !DILocalVariable(name: "value", arg: 2, scope: !3605, file: !3, line: 1582, type: !48)
!3609 = !DILocation(line: 1582, column: 63, scope: !3605)
!3610 = !DILocalVariable(name: "data", scope: !3605, file: !3, line: 1584, type: !1810)
!3611 = !DILocation(line: 1584, column: 14, scope: !3605)
!3612 = !DILocation(line: 1584, column: 36, scope: !3605)
!3613 = !DILocation(line: 1584, column: 41, scope: !3605)
!3614 = !DILocation(line: 1584, column: 21, scope: !3605)
!3615 = !DILocation(line: 1585, column: 24, scope: !3605)
!3616 = !DILocation(line: 1585, column: 2, scope: !3605)
!3617 = !DILocation(line: 1585, column: 8, scope: !3605)
!3618 = !DILocation(line: 1585, column: 22, scope: !3605)
!3619 = !DILocation(line: 1586, column: 1, scope: !3605)
!3620 = distinct !DISubprogram(name: "MaskSpline_use_cyclic_get", scope: !3, file: !3, line: 1588, type: !2505, scopeLine: 1589, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3621 = !DILocalVariable(name: "ptr", arg: 1, scope: !3620, file: !3, line: 1588, type: !453)
!3622 = !DILocation(line: 1588, column: 43, scope: !3620)
!3623 = !DILocalVariable(name: "data", scope: !3620, file: !3, line: 1590, type: !1810)
!3624 = !DILocation(line: 1590, column: 14, scope: !3620)
!3625 = !DILocation(line: 1590, column: 36, scope: !3620)
!3626 = !DILocation(line: 1590, column: 41, scope: !3620)
!3627 = !DILocation(line: 1590, column: 21, scope: !3620)
!3628 = !DILocation(line: 1591, column: 12, scope: !3620)
!3629 = !DILocation(line: 1591, column: 18, scope: !3620)
!3630 = !DILocation(line: 1591, column: 11, scope: !3620)
!3631 = !DILocation(line: 1591, column: 24, scope: !3620)
!3632 = !DILocation(line: 1591, column: 29, scope: !3620)
!3633 = !DILocation(line: 1591, column: 2, scope: !3620)
!3634 = distinct !DISubprogram(name: "MaskSpline_use_cyclic_set", scope: !3, file: !3, line: 1594, type: !2518, scopeLine: 1595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3635 = !DILocalVariable(name: "ptr", arg: 1, scope: !3634, file: !3, line: 1594, type: !453)
!3636 = !DILocation(line: 1594, column: 44, scope: !3634)
!3637 = !DILocalVariable(name: "value", arg: 2, scope: !3634, file: !3, line: 1594, type: !48)
!3638 = !DILocation(line: 1594, column: 53, scope: !3634)
!3639 = !DILocalVariable(name: "data", scope: !3634, file: !3, line: 1596, type: !1810)
!3640 = !DILocation(line: 1596, column: 14, scope: !3634)
!3641 = !DILocation(line: 1596, column: 36, scope: !3634)
!3642 = !DILocation(line: 1596, column: 41, scope: !3634)
!3643 = !DILocation(line: 1596, column: 21, scope: !3634)
!3644 = !DILocation(line: 1597, column: 6, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3634, file: !3, line: 1597, column: 6)
!3646 = !DILocation(line: 1597, column: 6, scope: !3634)
!3647 = !DILocation(line: 1597, column: 13, scope: !3645)
!3648 = !DILocation(line: 1597, column: 19, scope: !3645)
!3649 = !DILocation(line: 1597, column: 24, scope: !3645)
!3650 = !DILocation(line: 1598, column: 7, scope: !3645)
!3651 = !DILocation(line: 1598, column: 13, scope: !3645)
!3652 = !DILocation(line: 1598, column: 18, scope: !3645)
!3653 = !DILocation(line: 1599, column: 1, scope: !3634)
!3654 = distinct !DISubprogram(name: "MaskSpline_use_fill_get", scope: !3, file: !3, line: 1601, type: !2505, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3655 = !DILocalVariable(name: "ptr", arg: 1, scope: !3654, file: !3, line: 1601, type: !453)
!3656 = !DILocation(line: 1601, column: 41, scope: !3654)
!3657 = !DILocalVariable(name: "data", scope: !3654, file: !3, line: 1603, type: !1810)
!3658 = !DILocation(line: 1603, column: 14, scope: !3654)
!3659 = !DILocation(line: 1603, column: 36, scope: !3654)
!3660 = !DILocation(line: 1603, column: 41, scope: !3654)
!3661 = !DILocation(line: 1603, column: 21, scope: !3654)
!3662 = !DILocation(line: 1604, column: 13, scope: !3654)
!3663 = !DILocation(line: 1604, column: 19, scope: !3654)
!3664 = !DILocation(line: 1604, column: 12, scope: !3654)
!3665 = !DILocation(line: 1604, column: 25, scope: !3654)
!3666 = !DILocation(line: 1604, column: 30, scope: !3654)
!3667 = !DILocation(line: 1604, column: 9, scope: !3654)
!3668 = !DILocation(line: 1604, column: 2, scope: !3654)
!3669 = distinct !DISubprogram(name: "MaskSpline_use_fill_set", scope: !3, file: !3, line: 1607, type: !2518, scopeLine: 1608, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3670 = !DILocalVariable(name: "ptr", arg: 1, scope: !3669, file: !3, line: 1607, type: !453)
!3671 = !DILocation(line: 1607, column: 42, scope: !3669)
!3672 = !DILocalVariable(name: "value", arg: 2, scope: !3669, file: !3, line: 1607, type: !48)
!3673 = !DILocation(line: 1607, column: 51, scope: !3669)
!3674 = !DILocalVariable(name: "data", scope: !3669, file: !3, line: 1609, type: !1810)
!3675 = !DILocation(line: 1609, column: 14, scope: !3669)
!3676 = !DILocation(line: 1609, column: 36, scope: !3669)
!3677 = !DILocation(line: 1609, column: 41, scope: !3669)
!3678 = !DILocation(line: 1609, column: 21, scope: !3669)
!3679 = !DILocation(line: 1610, column: 7, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3669, file: !3, line: 1610, column: 6)
!3681 = !DILocation(line: 1610, column: 6, scope: !3669)
!3682 = !DILocation(line: 1610, column: 14, scope: !3680)
!3683 = !DILocation(line: 1610, column: 20, scope: !3680)
!3684 = !DILocation(line: 1610, column: 25, scope: !3680)
!3685 = !DILocation(line: 1611, column: 7, scope: !3680)
!3686 = !DILocation(line: 1611, column: 13, scope: !3680)
!3687 = !DILocation(line: 1611, column: 18, scope: !3680)
!3688 = !DILocation(line: 1612, column: 1, scope: !3669)
!3689 = distinct !DISubprogram(name: "MaskSpline_use_self_intersection_check_get", scope: !3, file: !3, line: 1614, type: !2505, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3690 = !DILocalVariable(name: "ptr", arg: 1, scope: !3689, file: !3, line: 1614, type: !453)
!3691 = !DILocation(line: 1614, column: 60, scope: !3689)
!3692 = !DILocalVariable(name: "data", scope: !3689, file: !3, line: 1616, type: !1810)
!3693 = !DILocation(line: 1616, column: 14, scope: !3689)
!3694 = !DILocation(line: 1616, column: 36, scope: !3689)
!3695 = !DILocation(line: 1616, column: 41, scope: !3689)
!3696 = !DILocation(line: 1616, column: 21, scope: !3689)
!3697 = !DILocation(line: 1617, column: 12, scope: !3689)
!3698 = !DILocation(line: 1617, column: 18, scope: !3689)
!3699 = !DILocation(line: 1617, column: 11, scope: !3689)
!3700 = !DILocation(line: 1617, column: 24, scope: !3689)
!3701 = !DILocation(line: 1617, column: 29, scope: !3689)
!3702 = !DILocation(line: 1617, column: 2, scope: !3689)
!3703 = distinct !DISubprogram(name: "MaskSpline_use_self_intersection_check_set", scope: !3, file: !3, line: 1620, type: !2518, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3704 = !DILocalVariable(name: "ptr", arg: 1, scope: !3703, file: !3, line: 1620, type: !453)
!3705 = !DILocation(line: 1620, column: 61, scope: !3703)
!3706 = !DILocalVariable(name: "value", arg: 2, scope: !3703, file: !3, line: 1620, type: !48)
!3707 = !DILocation(line: 1620, column: 70, scope: !3703)
!3708 = !DILocalVariable(name: "data", scope: !3703, file: !3, line: 1622, type: !1810)
!3709 = !DILocation(line: 1622, column: 14, scope: !3703)
!3710 = !DILocation(line: 1622, column: 36, scope: !3703)
!3711 = !DILocation(line: 1622, column: 41, scope: !3703)
!3712 = !DILocation(line: 1622, column: 21, scope: !3703)
!3713 = !DILocation(line: 1623, column: 6, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3703, file: !3, line: 1623, column: 6)
!3715 = !DILocation(line: 1623, column: 6, scope: !3703)
!3716 = !DILocation(line: 1623, column: 13, scope: !3714)
!3717 = !DILocation(line: 1623, column: 19, scope: !3714)
!3718 = !DILocation(line: 1623, column: 24, scope: !3714)
!3719 = !DILocation(line: 1624, column: 7, scope: !3714)
!3720 = !DILocation(line: 1624, column: 13, scope: !3714)
!3721 = !DILocation(line: 1624, column: 18, scope: !3714)
!3722 = !DILocation(line: 1625, column: 1, scope: !3703)
!3723 = distinct !DISubprogram(name: "MaskSpline_points_length", scope: !3, file: !3, line: 1627, type: !2505, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3724 = !DILocalVariable(name: "ptr", arg: 1, scope: !3723, file: !3, line: 1627, type: !453)
!3725 = !DILocation(line: 1627, column: 42, scope: !3723)
!3726 = !DILocalVariable(name: "data", scope: !3723, file: !3, line: 1629, type: !1810)
!3727 = !DILocation(line: 1629, column: 14, scope: !3723)
!3728 = !DILocation(line: 1629, column: 36, scope: !3723)
!3729 = !DILocation(line: 1629, column: 41, scope: !3723)
!3730 = !DILocation(line: 1629, column: 21, scope: !3723)
!3731 = !DILocation(line: 1630, column: 10, scope: !3723)
!3732 = !DILocation(line: 1630, column: 16, scope: !3723)
!3733 = !DILocation(line: 1630, column: 23, scope: !3723)
!3734 = !DILocation(line: 1630, column: 9, scope: !3723)
!3735 = !DILocation(line: 1630, column: 38, scope: !3723)
!3736 = !DILocation(line: 1630, column: 44, scope: !3723)
!3737 = !DILocation(line: 1630, column: 2, scope: !3723)
!3738 = distinct !DISubprogram(name: "MaskSpline_points_begin", scope: !3, file: !3, line: 1638, type: !2382, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3739 = !DILocalVariable(name: "iter", arg: 1, scope: !3738, file: !3, line: 1638, type: !2384)
!3740 = !DILocation(line: 1638, column: 58, scope: !3738)
!3741 = !DILocalVariable(name: "ptr", arg: 2, scope: !3738, file: !3, line: 1638, type: !453)
!3742 = !DILocation(line: 1638, column: 76, scope: !3738)
!3743 = !DILocalVariable(name: "data", scope: !3738, file: !3, line: 1640, type: !1810)
!3744 = !DILocation(line: 1640, column: 14, scope: !3738)
!3745 = !DILocation(line: 1640, column: 36, scope: !3738)
!3746 = !DILocation(line: 1640, column: 41, scope: !3738)
!3747 = !DILocation(line: 1640, column: 21, scope: !3738)
!3748 = !DILocation(line: 1642, column: 9, scope: !3738)
!3749 = !DILocation(line: 1642, column: 2, scope: !3738)
!3750 = !DILocation(line: 1643, column: 2, scope: !3738)
!3751 = !DILocation(line: 1643, column: 8, scope: !3738)
!3752 = !DILocation(line: 1643, column: 18, scope: !3738)
!3753 = !DILocation(line: 1643, column: 17, scope: !3738)
!3754 = !DILocation(line: 1644, column: 2, scope: !3738)
!3755 = !DILocation(line: 1644, column: 8, scope: !3738)
!3756 = !DILocation(line: 1644, column: 13, scope: !3738)
!3757 = !DILocation(line: 1646, column: 27, scope: !3738)
!3758 = !DILocation(line: 1646, column: 33, scope: !3738)
!3759 = !DILocation(line: 1646, column: 39, scope: !3738)
!3760 = !DILocation(line: 1646, column: 72, scope: !3738)
!3761 = !DILocation(line: 1646, column: 78, scope: !3738)
!3762 = !DILocation(line: 1646, column: 2, scope: !3738)
!3763 = !DILocation(line: 1648, column: 6, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 1648, column: 6)
!3765 = !DILocation(line: 1648, column: 12, scope: !3764)
!3766 = !DILocation(line: 1648, column: 6, scope: !3738)
!3767 = !DILocation(line: 1649, column: 3, scope: !3764)
!3768 = !DILocation(line: 1649, column: 9, scope: !3764)
!3769 = !DILocation(line: 1649, column: 37, scope: !3764)
!3770 = !DILocation(line: 1649, column: 15, scope: !3764)
!3771 = !DILocation(line: 1650, column: 1, scope: !3738)
!3772 = distinct !DISubprogram(name: "MaskSpline_points_get", scope: !3, file: !3, line: 1633, type: !2413, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3773 = !DILocalVariable(name: "iter", arg: 1, scope: !3772, file: !3, line: 1633, type: !2384)
!3774 = !DILocation(line: 1633, column: 69, scope: !3772)
!3775 = !DILocation(line: 1635, column: 37, scope: !3772)
!3776 = !DILocation(line: 1635, column: 43, scope: !3772)
!3777 = !DILocation(line: 1635, column: 96, scope: !3772)
!3778 = !DILocation(line: 1635, column: 73, scope: !3772)
!3779 = !DILocation(line: 1635, column: 9, scope: !3772)
!3780 = !DILocation(line: 1635, column: 2, scope: !3772)
!3781 = distinct !DISubprogram(name: "MaskSpline_points_next", scope: !3, file: !3, line: 1652, type: !2421, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3782 = !DILocalVariable(name: "iter", arg: 1, scope: !3781, file: !3, line: 1652, type: !2384)
!3783 = !DILocation(line: 1652, column: 57, scope: !3781)
!3784 = !DILocation(line: 1654, column: 26, scope: !3781)
!3785 = !DILocation(line: 1654, column: 2, scope: !3781)
!3786 = !DILocation(line: 1656, column: 6, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 1656, column: 6)
!3788 = !DILocation(line: 1656, column: 12, scope: !3787)
!3789 = !DILocation(line: 1656, column: 6, scope: !3781)
!3790 = !DILocation(line: 1657, column: 3, scope: !3787)
!3791 = !DILocation(line: 1657, column: 9, scope: !3787)
!3792 = !DILocation(line: 1657, column: 37, scope: !3787)
!3793 = !DILocation(line: 1657, column: 15, scope: !3787)
!3794 = !DILocation(line: 1658, column: 1, scope: !3781)
!3795 = distinct !DISubprogram(name: "MaskSpline_points_end", scope: !3, file: !3, line: 1660, type: !2421, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3796 = !DILocalVariable(name: "iter", arg: 1, scope: !3795, file: !3, line: 1660, type: !2384)
!3797 = !DILocation(line: 1660, column: 56, scope: !3795)
!3798 = !DILocation(line: 1662, column: 25, scope: !3795)
!3799 = !DILocation(line: 1662, column: 2, scope: !3795)
!3800 = !DILocation(line: 1663, column: 1, scope: !3795)
!3801 = distinct !DISubprogram(name: "MaskSpline_points_lookup_int", scope: !3, file: !3, line: 1665, type: !3419, scopeLine: 1666, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3802 = !DILocalVariable(name: "ptr", arg: 1, scope: !3801, file: !3, line: 1665, type: !453)
!3803 = !DILocation(line: 1665, column: 46, scope: !3801)
!3804 = !DILocalVariable(name: "index", arg: 2, scope: !3801, file: !3, line: 1665, type: !48)
!3805 = !DILocation(line: 1665, column: 55, scope: !3801)
!3806 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !3801, file: !3, line: 1665, type: !453)
!3807 = !DILocation(line: 1665, column: 74, scope: !3801)
!3808 = !DILocalVariable(name: "found", scope: !3801, file: !3, line: 1667, type: !48)
!3809 = !DILocation(line: 1667, column: 6, scope: !3801)
!3810 = !DILocalVariable(name: "iter", scope: !3801, file: !3, line: 1668, type: !2385)
!3811 = !DILocation(line: 1668, column: 29, scope: !3801)
!3812 = !DILocation(line: 1670, column: 33, scope: !3801)
!3813 = !DILocation(line: 1670, column: 2, scope: !3801)
!3814 = !DILocation(line: 1672, column: 11, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 1672, column: 6)
!3816 = !DILocation(line: 1672, column: 6, scope: !3815)
!3817 = !DILocation(line: 1672, column: 6, scope: !3801)
!3818 = !DILocalVariable(name: "internal", scope: !3819, file: !3, line: 1673, type: !3439)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 1672, column: 18)
!3820 = !DILocation(line: 1673, column: 18, scope: !3819)
!3821 = !DILocation(line: 1673, column: 35, scope: !3819)
!3822 = !DILocation(line: 1673, column: 44, scope: !3819)
!3823 = !DILocation(line: 1674, column: 7, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1674, column: 7)
!3825 = !DILocation(line: 1674, column: 13, scope: !3824)
!3826 = !DILocation(line: 1674, column: 17, scope: !3824)
!3827 = !DILocation(line: 1674, column: 20, scope: !3824)
!3828 = !DILocation(line: 1674, column: 29, scope: !3824)
!3829 = !DILocation(line: 1674, column: 39, scope: !3824)
!3830 = !DILocation(line: 1674, column: 26, scope: !3824)
!3831 = !DILocation(line: 1674, column: 7, scope: !3819)
!3832 = !DILocation(line: 1676, column: 69, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1674, column: 47)
!3834 = !DILocation(line: 1676, column: 4, scope: !3833)
!3835 = !DILocation(line: 1680, column: 3, scope: !3833)
!3836 = !DILocation(line: 1681, column: 12, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1681, column: 12)
!3838 = !DILocation(line: 1681, column: 22, scope: !3837)
!3839 = !DILocation(line: 1681, column: 12, scope: !3824)
!3840 = !DILocation(line: 1682, column: 4, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 1681, column: 28)
!3842 = !DILocation(line: 1682, column: 16, scope: !3841)
!3843 = !DILocation(line: 1682, column: 19, scope: !3841)
!3844 = !DILocation(line: 1682, column: 23, scope: !3841)
!3845 = !DILocation(line: 1682, column: 31, scope: !3841)
!3846 = !DILocation(line: 0, scope: !3841)
!3847 = !DILocation(line: 1683, column: 5, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3841, file: !3, line: 1682, column: 38)
!3849 = distinct !{!3849, !3840, !3850}
!3850 = !DILocation(line: 1684, column: 4, scope: !3841)
!3851 = !DILocation(line: 1685, column: 13, scope: !3841)
!3852 = !DILocation(line: 1685, column: 19, scope: !3841)
!3853 = !DILocation(line: 1685, column: 25, scope: !3841)
!3854 = !DILocation(line: 1685, column: 33, scope: !3841)
!3855 = !DILocation(line: 1685, column: 10, scope: !3841)
!3856 = !DILocation(line: 1686, column: 3, scope: !3841)
!3857 = !DILocation(line: 1688, column: 21, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 1687, column: 8)
!3859 = !DILocation(line: 1688, column: 31, scope: !3858)
!3860 = !DILocation(line: 1688, column: 42, scope: !3858)
!3861 = !DILocation(line: 1688, column: 40, scope: !3858)
!3862 = !DILocation(line: 1688, column: 4, scope: !3858)
!3863 = !DILocation(line: 1688, column: 14, scope: !3858)
!3864 = !DILocation(line: 1688, column: 18, scope: !3858)
!3865 = !DILocation(line: 1689, column: 10, scope: !3858)
!3866 = !DILocation(line: 1691, column: 7, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 1691, column: 7)
!3868 = !DILocation(line: 1691, column: 7, scope: !3819)
!3869 = !DILocation(line: 1691, column: 15, scope: !3867)
!3870 = !DILocation(line: 1691, column: 23, scope: !3867)
!3871 = !DILocation(line: 1691, column: 14, scope: !3867)
!3872 = !DILocation(line: 1692, column: 2, scope: !3819)
!3873 = !DILocation(line: 1694, column: 2, scope: !3801)
!3874 = !DILocation(line: 1696, column: 9, scope: !3801)
!3875 = !DILocation(line: 1696, column: 2, scope: !3801)
!3876 = distinct !DISubprogram(name: "MaskSplines_rna_properties_begin", scope: !3, file: !3, line: 1704, type: !2382, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3877 = !DILocalVariable(name: "iter", arg: 1, scope: !3876, file: !3, line: 1704, type: !2384)
!3878 = !DILocation(line: 1704, column: 67, scope: !3876)
!3879 = !DILocalVariable(name: "ptr", arg: 2, scope: !3876, file: !3, line: 1704, type: !453)
!3880 = !DILocation(line: 1704, column: 85, scope: !3876)
!3881 = !DILocation(line: 1707, column: 9, scope: !3876)
!3882 = !DILocation(line: 1707, column: 2, scope: !3876)
!3883 = !DILocation(line: 1708, column: 2, scope: !3876)
!3884 = !DILocation(line: 1708, column: 8, scope: !3876)
!3885 = !DILocation(line: 1708, column: 18, scope: !3876)
!3886 = !DILocation(line: 1708, column: 17, scope: !3876)
!3887 = !DILocation(line: 1709, column: 2, scope: !3876)
!3888 = !DILocation(line: 1709, column: 8, scope: !3876)
!3889 = !DILocation(line: 1709, column: 13, scope: !3876)
!3890 = !DILocation(line: 1711, column: 31, scope: !3876)
!3891 = !DILocation(line: 1711, column: 37, scope: !3876)
!3892 = !DILocation(line: 1711, column: 2, scope: !3876)
!3893 = !DILocation(line: 1713, column: 6, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 1713, column: 6)
!3895 = !DILocation(line: 1713, column: 12, scope: !3894)
!3896 = !DILocation(line: 1713, column: 6, scope: !3876)
!3897 = !DILocation(line: 1714, column: 3, scope: !3894)
!3898 = !DILocation(line: 1714, column: 9, scope: !3894)
!3899 = !DILocation(line: 1714, column: 46, scope: !3894)
!3900 = !DILocation(line: 1714, column: 15, scope: !3894)
!3901 = !DILocation(line: 1715, column: 1, scope: !3876)
!3902 = distinct !DISubprogram(name: "MaskSplines_rna_properties_get", scope: !3, file: !3, line: 1699, type: !2413, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3903 = !DILocalVariable(name: "iter", arg: 1, scope: !3902, file: !3, line: 1699, type: !2384)
!3904 = !DILocation(line: 1699, column: 78, scope: !3902)
!3905 = !DILocation(line: 1701, column: 36, scope: !3902)
!3906 = !DILocation(line: 1701, column: 9, scope: !3902)
!3907 = !DILocation(line: 1701, column: 2, scope: !3902)
!3908 = distinct !DISubprogram(name: "MaskSplines_rna_properties_next", scope: !3, file: !3, line: 1717, type: !2421, scopeLine: 1718, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3909 = !DILocalVariable(name: "iter", arg: 1, scope: !3908, file: !3, line: 1717, type: !2384)
!3910 = !DILocation(line: 1717, column: 66, scope: !3908)
!3911 = !DILocation(line: 1719, column: 30, scope: !3908)
!3912 = !DILocation(line: 1719, column: 2, scope: !3908)
!3913 = !DILocation(line: 1721, column: 6, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3908, file: !3, line: 1721, column: 6)
!3915 = !DILocation(line: 1721, column: 12, scope: !3914)
!3916 = !DILocation(line: 1721, column: 6, scope: !3908)
!3917 = !DILocation(line: 1722, column: 3, scope: !3914)
!3918 = !DILocation(line: 1722, column: 9, scope: !3914)
!3919 = !DILocation(line: 1722, column: 46, scope: !3914)
!3920 = !DILocation(line: 1722, column: 15, scope: !3914)
!3921 = !DILocation(line: 1723, column: 1, scope: !3908)
!3922 = distinct !DISubprogram(name: "MaskSplines_rna_properties_end", scope: !3, file: !3, line: 1725, type: !2421, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3923 = !DILocalVariable(name: "iter", arg: 1, scope: !3922, file: !3, line: 1725, type: !2384)
!3924 = !DILocation(line: 1725, column: 65, scope: !3922)
!3925 = !DILocation(line: 1727, column: 28, scope: !3922)
!3926 = !DILocation(line: 1727, column: 2, scope: !3922)
!3927 = !DILocation(line: 1728, column: 1, scope: !3922)
!3928 = distinct !DISubprogram(name: "MaskSplines_rna_properties_lookup_string", scope: !3, file: !3, line: 1730, type: !2443, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3929 = !DILocalVariable(name: "ptr", arg: 1, scope: !3928, file: !3, line: 1730, type: !453)
!3930 = !DILocation(line: 1730, column: 58, scope: !3928)
!3931 = !DILocalVariable(name: "key", arg: 2, scope: !3928, file: !3, line: 1730, type: !100)
!3932 = !DILocation(line: 1730, column: 75, scope: !3928)
!3933 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !3928, file: !3, line: 1730, type: !453)
!3934 = !DILocation(line: 1730, column: 92, scope: !3928)
!3935 = !DILocation(line: 1732, column: 46, scope: !3928)
!3936 = !DILocation(line: 1732, column: 51, scope: !3928)
!3937 = !DILocation(line: 1732, column: 56, scope: !3928)
!3938 = !DILocation(line: 1732, column: 9, scope: !3928)
!3939 = !DILocation(line: 1732, column: 2, scope: !3928)
!3940 = distinct !DISubprogram(name: "MaskSplines_rna_type_get", scope: !3, file: !3, line: 1735, type: !2457, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3941 = !DILocalVariable(name: "ptr", arg: 1, scope: !3940, file: !3, line: 1735, type: !453)
!3942 = !DILocation(line: 1735, column: 49, scope: !3940)
!3943 = !DILocation(line: 1737, column: 30, scope: !3940)
!3944 = !DILocation(line: 1737, column: 9, scope: !3940)
!3945 = !DILocation(line: 1737, column: 2, scope: !3940)
!3946 = distinct !DISubprogram(name: "MaskSplines_active_get", scope: !3, file: !3, line: 1740, type: !2457, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3947 = !DILocalVariable(name: "ptr", arg: 1, scope: !3946, file: !3, line: 1740, type: !453)
!3948 = !DILocation(line: 1740, column: 47, scope: !3946)
!3949 = !DILocation(line: 1742, column: 41, scope: !3946)
!3950 = !DILocation(line: 1742, column: 9, scope: !3946)
!3951 = !DILocation(line: 1742, column: 2, scope: !3946)
!3952 = distinct !DISubprogram(name: "rna_MaskLayer_active_spline_get", scope: !2488, file: !2488, line: 222, type: !2457, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3953 = !DILocalVariable(name: "ptr", arg: 1, scope: !3952, file: !2488, line: 222, type: !453)
!3954 = !DILocation(line: 222, column: 63, scope: !3952)
!3955 = !DILocalVariable(name: "masklay", scope: !3952, file: !2488, line: 224, type: !1824)
!3956 = !DILocation(line: 224, column: 13, scope: !3952)
!3957 = !DILocation(line: 224, column: 36, scope: !3952)
!3958 = !DILocation(line: 224, column: 41, scope: !3952)
!3959 = !DILocation(line: 224, column: 23, scope: !3952)
!3960 = !DILocation(line: 226, column: 36, scope: !3952)
!3961 = !DILocation(line: 226, column: 58, scope: !3952)
!3962 = !DILocation(line: 226, column: 67, scope: !3952)
!3963 = !DILocation(line: 226, column: 9, scope: !3952)
!3964 = !DILocation(line: 226, column: 2, scope: !3952)
!3965 = distinct !DISubprogram(name: "MaskSplines_active_set", scope: !3, file: !3, line: 1745, type: !2478, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3966 = !DILocalVariable(name: "ptr", arg: 1, scope: !3965, file: !3, line: 1745, type: !453)
!3967 = !DILocation(line: 1745, column: 41, scope: !3965)
!3968 = !DILocalVariable(name: "value", arg: 2, scope: !3965, file: !3, line: 1745, type: !454)
!3969 = !DILocation(line: 1745, column: 57, scope: !3965)
!3970 = !DILocation(line: 1747, column: 34, scope: !3965)
!3971 = !DILocation(line: 1747, column: 2, scope: !3965)
!3972 = !DILocation(line: 1748, column: 1, scope: !3965)
!3973 = distinct !DISubprogram(name: "rna_MaskLayer_active_spline_set", scope: !2488, file: !2488, line: 229, type: !2478, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!3974 = !DILocalVariable(name: "ptr", arg: 1, scope: !3973, file: !2488, line: 229, type: !453)
!3975 = !DILocation(line: 229, column: 57, scope: !3973)
!3976 = !DILocalVariable(name: "value", arg: 2, scope: !3973, file: !2488, line: 229, type: !454)
!3977 = !DILocation(line: 229, column: 73, scope: !3973)
!3978 = !DILocalVariable(name: "masklay", scope: !3973, file: !2488, line: 231, type: !1824)
!3979 = !DILocation(line: 231, column: 13, scope: !3973)
!3980 = !DILocation(line: 231, column: 36, scope: !3973)
!3981 = !DILocation(line: 231, column: 41, scope: !3973)
!3982 = !DILocation(line: 231, column: 23, scope: !3973)
!3983 = !DILocalVariable(name: "spline", scope: !3973, file: !2488, line: 232, type: !1810)
!3984 = !DILocation(line: 232, column: 14, scope: !3973)
!3985 = !DILocation(line: 232, column: 43, scope: !3973)
!3986 = !DILocation(line: 232, column: 23, scope: !3973)
!3987 = !DILocalVariable(name: "index", scope: !3973, file: !2488, line: 233, type: !48)
!3988 = !DILocation(line: 233, column: 6, scope: !3973)
!3989 = !DILocation(line: 233, column: 29, scope: !3973)
!3990 = !DILocation(line: 233, column: 38, scope: !3973)
!3991 = !DILocation(line: 233, column: 47, scope: !3973)
!3992 = !DILocation(line: 233, column: 14, scope: !3973)
!3993 = !DILocation(line: 235, column: 6, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3973, file: !2488, line: 235, column: 6)
!3995 = !DILocation(line: 235, column: 12, scope: !3994)
!3996 = !DILocation(line: 235, column: 6, scope: !3973)
!3997 = !DILocation(line: 236, column: 25, scope: !3994)
!3998 = !DILocation(line: 236, column: 3, scope: !3994)
!3999 = !DILocation(line: 236, column: 12, scope: !3994)
!4000 = !DILocation(line: 236, column: 23, scope: !3994)
!4001 = !DILocation(line: 238, column: 3, scope: !3994)
!4002 = !DILocation(line: 238, column: 12, scope: !3994)
!4003 = !DILocation(line: 238, column: 23, scope: !3994)
!4004 = !DILocation(line: 239, column: 1, scope: !3973)
!4005 = distinct !DISubprogram(name: "MaskSplines_active_point_get", scope: !3, file: !3, line: 1750, type: !2457, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4006 = !DILocalVariable(name: "ptr", arg: 1, scope: !4005, file: !3, line: 1750, type: !453)
!4007 = !DILocation(line: 1750, column: 53, scope: !4005)
!4008 = !DILocation(line: 1752, column: 47, scope: !4005)
!4009 = !DILocation(line: 1752, column: 9, scope: !4005)
!4010 = !DILocation(line: 1752, column: 2, scope: !4005)
!4011 = distinct !DISubprogram(name: "rna_MaskLayer_active_spline_point_get", scope: !2488, file: !2488, line: 241, type: !2457, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4012 = !DILocalVariable(name: "ptr", arg: 1, scope: !4011, file: !2488, line: 241, type: !453)
!4013 = !DILocation(line: 241, column: 69, scope: !4011)
!4014 = !DILocalVariable(name: "masklay", scope: !4011, file: !2488, line: 243, type: !1824)
!4015 = !DILocation(line: 243, column: 13, scope: !4011)
!4016 = !DILocation(line: 243, column: 36, scope: !4011)
!4017 = !DILocation(line: 243, column: 41, scope: !4011)
!4018 = !DILocation(line: 243, column: 23, scope: !4011)
!4019 = !DILocation(line: 245, column: 36, scope: !4011)
!4020 = !DILocation(line: 245, column: 63, scope: !4011)
!4021 = !DILocation(line: 245, column: 72, scope: !4011)
!4022 = !DILocation(line: 245, column: 9, scope: !4011)
!4023 = !DILocation(line: 245, column: 2, scope: !4011)
!4024 = distinct !DISubprogram(name: "MaskSplines_active_point_set", scope: !3, file: !3, line: 1755, type: !2478, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4025 = !DILocalVariable(name: "ptr", arg: 1, scope: !4024, file: !3, line: 1755, type: !453)
!4026 = !DILocation(line: 1755, column: 47, scope: !4024)
!4027 = !DILocalVariable(name: "value", arg: 2, scope: !4024, file: !3, line: 1755, type: !454)
!4028 = !DILocation(line: 1755, column: 63, scope: !4024)
!4029 = !DILocation(line: 1757, column: 40, scope: !4024)
!4030 = !DILocation(line: 1757, column: 2, scope: !4024)
!4031 = !DILocation(line: 1758, column: 1, scope: !4024)
!4032 = distinct !DISubprogram(name: "rna_MaskLayer_active_spline_point_set", scope: !2488, file: !2488, line: 248, type: !2478, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4033 = !DILocalVariable(name: "ptr", arg: 1, scope: !4032, file: !2488, line: 248, type: !453)
!4034 = !DILocation(line: 248, column: 63, scope: !4032)
!4035 = !DILocalVariable(name: "value", arg: 2, scope: !4032, file: !2488, line: 248, type: !454)
!4036 = !DILocation(line: 248, column: 79, scope: !4032)
!4037 = !DILocalVariable(name: "masklay", scope: !4032, file: !2488, line: 250, type: !1824)
!4038 = !DILocation(line: 250, column: 13, scope: !4032)
!4039 = !DILocation(line: 250, column: 36, scope: !4032)
!4040 = !DILocation(line: 250, column: 41, scope: !4032)
!4041 = !DILocation(line: 250, column: 23, scope: !4032)
!4042 = !DILocalVariable(name: "spline", scope: !4032, file: !2488, line: 251, type: !1810)
!4043 = !DILocation(line: 251, column: 14, scope: !4032)
!4044 = !DILocalVariable(name: "point", scope: !4032, file: !2488, line: 252, type: !1779)
!4045 = !DILocation(line: 252, column: 19, scope: !4032)
!4046 = !DILocation(line: 252, column: 52, scope: !4032)
!4047 = !DILocation(line: 252, column: 27, scope: !4032)
!4048 = !DILocation(line: 254, column: 2, scope: !4032)
!4049 = !DILocation(line: 254, column: 11, scope: !4032)
!4050 = !DILocation(line: 254, column: 21, scope: !4032)
!4051 = !DILocation(line: 256, column: 16, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4032, file: !2488, line: 256, column: 2)
!4053 = !DILocation(line: 256, column: 25, scope: !4052)
!4054 = !DILocation(line: 256, column: 33, scope: !4052)
!4055 = !DILocation(line: 256, column: 14, scope: !4052)
!4056 = !DILocation(line: 256, column: 7, scope: !4052)
!4057 = !DILocation(line: 256, column: 40, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !2488, line: 256, column: 2)
!4059 = !DILocation(line: 256, column: 2, scope: !4052)
!4060 = !DILocation(line: 257, column: 7, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4062, file: !2488, line: 257, column: 7)
!4062 = distinct !DILexicalBlock(scope: !4058, file: !2488, line: 256, column: 71)
!4063 = !DILocation(line: 257, column: 16, scope: !4061)
!4064 = !DILocation(line: 257, column: 24, scope: !4061)
!4065 = !DILocation(line: 257, column: 13, scope: !4061)
!4066 = !DILocation(line: 257, column: 31, scope: !4061)
!4067 = !DILocation(line: 257, column: 34, scope: !4061)
!4068 = !DILocation(line: 257, column: 42, scope: !4061)
!4069 = !DILocation(line: 257, column: 50, scope: !4061)
!4070 = !DILocation(line: 257, column: 59, scope: !4061)
!4071 = !DILocation(line: 257, column: 67, scope: !4061)
!4072 = !DILocation(line: 257, column: 57, scope: !4061)
!4073 = !DILocation(line: 257, column: 40, scope: !4061)
!4074 = !DILocation(line: 257, column: 7, scope: !4062)
!4075 = !DILocation(line: 258, column: 25, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4061, file: !2488, line: 257, column: 78)
!4077 = !DILocation(line: 258, column: 4, scope: !4076)
!4078 = !DILocation(line: 258, column: 13, scope: !4076)
!4079 = !DILocation(line: 258, column: 23, scope: !4076)
!4080 = !DILocation(line: 260, column: 4, scope: !4076)
!4081 = !DILocation(line: 262, column: 2, scope: !4062)
!4082 = !DILocation(line: 256, column: 57, scope: !4058)
!4083 = !DILocation(line: 256, column: 65, scope: !4058)
!4084 = !DILocation(line: 256, column: 55, scope: !4058)
!4085 = !DILocation(line: 256, column: 2, scope: !4058)
!4086 = distinct !{!4086, !4059, !4087}
!4087 = !DILocation(line: 262, column: 2, scope: !4052)
!4088 = !DILocation(line: 263, column: 1, scope: !4032)
!4089 = distinct !DISubprogram(name: "MaskSplinePoints_rna_properties_begin", scope: !3, file: !3, line: 1765, type: !2382, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4090 = !DILocalVariable(name: "iter", arg: 1, scope: !4089, file: !3, line: 1765, type: !2384)
!4091 = !DILocation(line: 1765, column: 72, scope: !4089)
!4092 = !DILocalVariable(name: "ptr", arg: 2, scope: !4089, file: !3, line: 1765, type: !453)
!4093 = !DILocation(line: 1765, column: 90, scope: !4089)
!4094 = !DILocation(line: 1768, column: 9, scope: !4089)
!4095 = !DILocation(line: 1768, column: 2, scope: !4089)
!4096 = !DILocation(line: 1769, column: 2, scope: !4089)
!4097 = !DILocation(line: 1769, column: 8, scope: !4089)
!4098 = !DILocation(line: 1769, column: 18, scope: !4089)
!4099 = !DILocation(line: 1769, column: 17, scope: !4089)
!4100 = !DILocation(line: 1770, column: 2, scope: !4089)
!4101 = !DILocation(line: 1770, column: 8, scope: !4089)
!4102 = !DILocation(line: 1770, column: 13, scope: !4089)
!4103 = !DILocation(line: 1772, column: 31, scope: !4089)
!4104 = !DILocation(line: 1772, column: 37, scope: !4089)
!4105 = !DILocation(line: 1772, column: 2, scope: !4089)
!4106 = !DILocation(line: 1774, column: 6, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 1774, column: 6)
!4108 = !DILocation(line: 1774, column: 12, scope: !4107)
!4109 = !DILocation(line: 1774, column: 6, scope: !4089)
!4110 = !DILocation(line: 1775, column: 3, scope: !4107)
!4111 = !DILocation(line: 1775, column: 9, scope: !4107)
!4112 = !DILocation(line: 1775, column: 51, scope: !4107)
!4113 = !DILocation(line: 1775, column: 15, scope: !4107)
!4114 = !DILocation(line: 1776, column: 1, scope: !4089)
!4115 = distinct !DISubprogram(name: "MaskSplinePoints_rna_properties_get", scope: !3, file: !3, line: 1760, type: !2413, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4116 = !DILocalVariable(name: "iter", arg: 1, scope: !4115, file: !3, line: 1760, type: !2384)
!4117 = !DILocation(line: 1760, column: 83, scope: !4115)
!4118 = !DILocation(line: 1762, column: 36, scope: !4115)
!4119 = !DILocation(line: 1762, column: 9, scope: !4115)
!4120 = !DILocation(line: 1762, column: 2, scope: !4115)
!4121 = distinct !DISubprogram(name: "MaskSplinePoints_rna_properties_next", scope: !3, file: !3, line: 1778, type: !2421, scopeLine: 1779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4122 = !DILocalVariable(name: "iter", arg: 1, scope: !4121, file: !3, line: 1778, type: !2384)
!4123 = !DILocation(line: 1778, column: 71, scope: !4121)
!4124 = !DILocation(line: 1780, column: 30, scope: !4121)
!4125 = !DILocation(line: 1780, column: 2, scope: !4121)
!4126 = !DILocation(line: 1782, column: 6, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 1782, column: 6)
!4128 = !DILocation(line: 1782, column: 12, scope: !4127)
!4129 = !DILocation(line: 1782, column: 6, scope: !4121)
!4130 = !DILocation(line: 1783, column: 3, scope: !4127)
!4131 = !DILocation(line: 1783, column: 9, scope: !4127)
!4132 = !DILocation(line: 1783, column: 51, scope: !4127)
!4133 = !DILocation(line: 1783, column: 15, scope: !4127)
!4134 = !DILocation(line: 1784, column: 1, scope: !4121)
!4135 = distinct !DISubprogram(name: "MaskSplinePoints_rna_properties_end", scope: !3, file: !3, line: 1786, type: !2421, scopeLine: 1787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4136 = !DILocalVariable(name: "iter", arg: 1, scope: !4135, file: !3, line: 1786, type: !2384)
!4137 = !DILocation(line: 1786, column: 70, scope: !4135)
!4138 = !DILocation(line: 1788, column: 28, scope: !4135)
!4139 = !DILocation(line: 1788, column: 2, scope: !4135)
!4140 = !DILocation(line: 1789, column: 1, scope: !4135)
!4141 = distinct !DISubprogram(name: "MaskSplinePoints_rna_properties_lookup_string", scope: !3, file: !3, line: 1791, type: !2443, scopeLine: 1792, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4142 = !DILocalVariable(name: "ptr", arg: 1, scope: !4141, file: !3, line: 1791, type: !453)
!4143 = !DILocation(line: 1791, column: 63, scope: !4141)
!4144 = !DILocalVariable(name: "key", arg: 2, scope: !4141, file: !3, line: 1791, type: !100)
!4145 = !DILocation(line: 1791, column: 80, scope: !4141)
!4146 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !4141, file: !3, line: 1791, type: !453)
!4147 = !DILocation(line: 1791, column: 97, scope: !4141)
!4148 = !DILocation(line: 1793, column: 46, scope: !4141)
!4149 = !DILocation(line: 1793, column: 51, scope: !4141)
!4150 = !DILocation(line: 1793, column: 56, scope: !4141)
!4151 = !DILocation(line: 1793, column: 9, scope: !4141)
!4152 = !DILocation(line: 1793, column: 2, scope: !4141)
!4153 = distinct !DISubprogram(name: "MaskSplinePoints_rna_type_get", scope: !3, file: !3, line: 1796, type: !2457, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4154 = !DILocalVariable(name: "ptr", arg: 1, scope: !4153, file: !3, line: 1796, type: !453)
!4155 = !DILocation(line: 1796, column: 54, scope: !4153)
!4156 = !DILocation(line: 1798, column: 30, scope: !4153)
!4157 = !DILocation(line: 1798, column: 9, scope: !4153)
!4158 = !DILocation(line: 1798, column: 2, scope: !4153)
!4159 = distinct !DISubprogram(name: "MaskLayer_rna_properties_begin", scope: !3, file: !3, line: 1806, type: !2382, scopeLine: 1807, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4160 = !DILocalVariable(name: "iter", arg: 1, scope: !4159, file: !3, line: 1806, type: !2384)
!4161 = !DILocation(line: 1806, column: 65, scope: !4159)
!4162 = !DILocalVariable(name: "ptr", arg: 2, scope: !4159, file: !3, line: 1806, type: !453)
!4163 = !DILocation(line: 1806, column: 83, scope: !4159)
!4164 = !DILocation(line: 1809, column: 9, scope: !4159)
!4165 = !DILocation(line: 1809, column: 2, scope: !4159)
!4166 = !DILocation(line: 1810, column: 2, scope: !4159)
!4167 = !DILocation(line: 1810, column: 8, scope: !4159)
!4168 = !DILocation(line: 1810, column: 18, scope: !4159)
!4169 = !DILocation(line: 1810, column: 17, scope: !4159)
!4170 = !DILocation(line: 1811, column: 2, scope: !4159)
!4171 = !DILocation(line: 1811, column: 8, scope: !4159)
!4172 = !DILocation(line: 1811, column: 13, scope: !4159)
!4173 = !DILocation(line: 1813, column: 31, scope: !4159)
!4174 = !DILocation(line: 1813, column: 37, scope: !4159)
!4175 = !DILocation(line: 1813, column: 2, scope: !4159)
!4176 = !DILocation(line: 1815, column: 6, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4159, file: !3, line: 1815, column: 6)
!4178 = !DILocation(line: 1815, column: 12, scope: !4177)
!4179 = !DILocation(line: 1815, column: 6, scope: !4159)
!4180 = !DILocation(line: 1816, column: 3, scope: !4177)
!4181 = !DILocation(line: 1816, column: 9, scope: !4177)
!4182 = !DILocation(line: 1816, column: 44, scope: !4177)
!4183 = !DILocation(line: 1816, column: 15, scope: !4177)
!4184 = !DILocation(line: 1817, column: 1, scope: !4159)
!4185 = distinct !DISubprogram(name: "MaskLayer_rna_properties_get", scope: !3, file: !3, line: 1801, type: !2413, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4186 = !DILocalVariable(name: "iter", arg: 1, scope: !4185, file: !3, line: 1801, type: !2384)
!4187 = !DILocation(line: 1801, column: 76, scope: !4185)
!4188 = !DILocation(line: 1803, column: 36, scope: !4185)
!4189 = !DILocation(line: 1803, column: 9, scope: !4185)
!4190 = !DILocation(line: 1803, column: 2, scope: !4185)
!4191 = distinct !DISubprogram(name: "MaskLayer_rna_properties_next", scope: !3, file: !3, line: 1819, type: !2421, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4192 = !DILocalVariable(name: "iter", arg: 1, scope: !4191, file: !3, line: 1819, type: !2384)
!4193 = !DILocation(line: 1819, column: 64, scope: !4191)
!4194 = !DILocation(line: 1821, column: 30, scope: !4191)
!4195 = !DILocation(line: 1821, column: 2, scope: !4191)
!4196 = !DILocation(line: 1823, column: 6, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !3, line: 1823, column: 6)
!4198 = !DILocation(line: 1823, column: 12, scope: !4197)
!4199 = !DILocation(line: 1823, column: 6, scope: !4191)
!4200 = !DILocation(line: 1824, column: 3, scope: !4197)
!4201 = !DILocation(line: 1824, column: 9, scope: !4197)
!4202 = !DILocation(line: 1824, column: 44, scope: !4197)
!4203 = !DILocation(line: 1824, column: 15, scope: !4197)
!4204 = !DILocation(line: 1825, column: 1, scope: !4191)
!4205 = distinct !DISubprogram(name: "MaskLayer_rna_properties_end", scope: !3, file: !3, line: 1827, type: !2421, scopeLine: 1828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4206 = !DILocalVariable(name: "iter", arg: 1, scope: !4205, file: !3, line: 1827, type: !2384)
!4207 = !DILocation(line: 1827, column: 63, scope: !4205)
!4208 = !DILocation(line: 1829, column: 28, scope: !4205)
!4209 = !DILocation(line: 1829, column: 2, scope: !4205)
!4210 = !DILocation(line: 1830, column: 1, scope: !4205)
!4211 = distinct !DISubprogram(name: "MaskLayer_rna_properties_lookup_string", scope: !3, file: !3, line: 1832, type: !2443, scopeLine: 1833, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4212 = !DILocalVariable(name: "ptr", arg: 1, scope: !4211, file: !3, line: 1832, type: !453)
!4213 = !DILocation(line: 1832, column: 56, scope: !4211)
!4214 = !DILocalVariable(name: "key", arg: 2, scope: !4211, file: !3, line: 1832, type: !100)
!4215 = !DILocation(line: 1832, column: 73, scope: !4211)
!4216 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !4211, file: !3, line: 1832, type: !453)
!4217 = !DILocation(line: 1832, column: 90, scope: !4211)
!4218 = !DILocation(line: 1834, column: 46, scope: !4211)
!4219 = !DILocation(line: 1834, column: 51, scope: !4211)
!4220 = !DILocation(line: 1834, column: 56, scope: !4211)
!4221 = !DILocation(line: 1834, column: 9, scope: !4211)
!4222 = !DILocation(line: 1834, column: 2, scope: !4211)
!4223 = distinct !DISubprogram(name: "MaskLayer_rna_type_get", scope: !3, file: !3, line: 1837, type: !2457, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4224 = !DILocalVariable(name: "ptr", arg: 1, scope: !4223, file: !3, line: 1837, type: !453)
!4225 = !DILocation(line: 1837, column: 47, scope: !4223)
!4226 = !DILocation(line: 1839, column: 30, scope: !4223)
!4227 = !DILocation(line: 1839, column: 9, scope: !4223)
!4228 = !DILocation(line: 1839, column: 2, scope: !4223)
!4229 = distinct !DISubprogram(name: "MaskLayer_name_get", scope: !3, file: !3, line: 1842, type: !2583, scopeLine: 1843, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4230 = !DILocalVariable(name: "ptr", arg: 1, scope: !4229, file: !3, line: 1842, type: !453)
!4231 = !DILocation(line: 1842, column: 37, scope: !4229)
!4232 = !DILocalVariable(name: "value", arg: 2, scope: !4229, file: !3, line: 1842, type: !167)
!4233 = !DILocation(line: 1842, column: 48, scope: !4229)
!4234 = !DILocalVariable(name: "data", scope: !4229, file: !3, line: 1844, type: !1824)
!4235 = !DILocation(line: 1844, column: 13, scope: !4229)
!4236 = !DILocation(line: 1844, column: 34, scope: !4229)
!4237 = !DILocation(line: 1844, column: 39, scope: !4229)
!4238 = !DILocation(line: 1844, column: 20, scope: !4229)
!4239 = !DILocation(line: 1845, column: 19, scope: !4229)
!4240 = !DILocation(line: 1845, column: 26, scope: !4229)
!4241 = !DILocation(line: 1845, column: 32, scope: !4229)
!4242 = !DILocation(line: 1845, column: 2, scope: !4229)
!4243 = !DILocation(line: 1846, column: 1, scope: !4229)
!4244 = distinct !DISubprogram(name: "MaskLayer_name_length", scope: !3, file: !3, line: 1848, type: !2505, scopeLine: 1849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4245 = !DILocalVariable(name: "ptr", arg: 1, scope: !4244, file: !3, line: 1848, type: !453)
!4246 = !DILocation(line: 1848, column: 39, scope: !4244)
!4247 = !DILocalVariable(name: "data", scope: !4244, file: !3, line: 1850, type: !1824)
!4248 = !DILocation(line: 1850, column: 13, scope: !4244)
!4249 = !DILocation(line: 1850, column: 34, scope: !4244)
!4250 = !DILocation(line: 1850, column: 39, scope: !4244)
!4251 = !DILocation(line: 1850, column: 20, scope: !4244)
!4252 = !DILocation(line: 1851, column: 16, scope: !4244)
!4253 = !DILocation(line: 1851, column: 22, scope: !4244)
!4254 = !DILocation(line: 1851, column: 9, scope: !4244)
!4255 = !DILocation(line: 1851, column: 2, scope: !4244)
!4256 = distinct !DISubprogram(name: "MaskLayer_name_set", scope: !3, file: !3, line: 1854, type: !2612, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4257 = !DILocalVariable(name: "ptr", arg: 1, scope: !4256, file: !3, line: 1854, type: !453)
!4258 = !DILocation(line: 1854, column: 37, scope: !4256)
!4259 = !DILocalVariable(name: "value", arg: 2, scope: !4256, file: !3, line: 1854, type: !100)
!4260 = !DILocation(line: 1854, column: 54, scope: !4256)
!4261 = !DILocation(line: 1856, column: 25, scope: !4256)
!4262 = !DILocation(line: 1856, column: 30, scope: !4256)
!4263 = !DILocation(line: 1856, column: 2, scope: !4256)
!4264 = !DILocation(line: 1857, column: 1, scope: !4256)
!4265 = distinct !DISubprogram(name: "rna_MaskLayer_name_set", scope: !2488, file: !2488, line: 212, type: !2612, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4266 = !DILocalVariable(name: "ptr", arg: 1, scope: !4265, file: !2488, line: 212, type: !453)
!4267 = !DILocation(line: 212, column: 48, scope: !4265)
!4268 = !DILocalVariable(name: "value", arg: 2, scope: !4265, file: !2488, line: 212, type: !100)
!4269 = !DILocation(line: 212, column: 65, scope: !4265)
!4270 = !DILocalVariable(name: "mask", scope: !4265, file: !2488, line: 214, type: !1844)
!4271 = !DILocation(line: 214, column: 8, scope: !4265)
!4272 = !DILocation(line: 214, column: 23, scope: !4265)
!4273 = !DILocation(line: 214, column: 28, scope: !4265)
!4274 = !DILocation(line: 214, column: 31, scope: !4265)
!4275 = !DILocation(line: 214, column: 15, scope: !4265)
!4276 = !DILocalVariable(name: "masklay", scope: !4265, file: !2488, line: 215, type: !1824)
!4277 = !DILocation(line: 215, column: 13, scope: !4265)
!4278 = !DILocation(line: 215, column: 36, scope: !4265)
!4279 = !DILocation(line: 215, column: 41, scope: !4265)
!4280 = !DILocation(line: 215, column: 23, scope: !4265)
!4281 = !DILocation(line: 217, column: 14, scope: !4265)
!4282 = !DILocation(line: 217, column: 23, scope: !4265)
!4283 = !DILocation(line: 217, column: 29, scope: !4265)
!4284 = !DILocation(line: 217, column: 2, scope: !4265)
!4285 = !DILocation(line: 219, column: 29, scope: !4265)
!4286 = !DILocation(line: 219, column: 35, scope: !4265)
!4287 = !DILocation(line: 219, column: 2, scope: !4265)
!4288 = !DILocation(line: 220, column: 1, scope: !4265)
!4289 = distinct !DISubprogram(name: "MaskLayer_splines_begin", scope: !3, file: !3, line: 1864, type: !2382, scopeLine: 1865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4290 = !DILocalVariable(name: "iter", arg: 1, scope: !4289, file: !3, line: 1864, type: !2384)
!4291 = !DILocation(line: 1864, column: 58, scope: !4289)
!4292 = !DILocalVariable(name: "ptr", arg: 2, scope: !4289, file: !3, line: 1864, type: !453)
!4293 = !DILocation(line: 1864, column: 76, scope: !4289)
!4294 = !DILocation(line: 1867, column: 9, scope: !4289)
!4295 = !DILocation(line: 1867, column: 2, scope: !4289)
!4296 = !DILocation(line: 1868, column: 2, scope: !4289)
!4297 = !DILocation(line: 1868, column: 8, scope: !4289)
!4298 = !DILocation(line: 1868, column: 18, scope: !4289)
!4299 = !DILocation(line: 1868, column: 17, scope: !4289)
!4300 = !DILocation(line: 1869, column: 2, scope: !4289)
!4301 = !DILocation(line: 1869, column: 8, scope: !4289)
!4302 = !DILocation(line: 1869, column: 13, scope: !4289)
!4303 = !DILocation(line: 1871, column: 30, scope: !4289)
!4304 = !DILocation(line: 1871, column: 36, scope: !4289)
!4305 = !DILocation(line: 1871, column: 2, scope: !4289)
!4306 = !DILocation(line: 1873, column: 6, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 1873, column: 6)
!4308 = !DILocation(line: 1873, column: 12, scope: !4307)
!4309 = !DILocation(line: 1873, column: 6, scope: !4289)
!4310 = !DILocation(line: 1874, column: 3, scope: !4307)
!4311 = !DILocation(line: 1874, column: 9, scope: !4307)
!4312 = !DILocation(line: 1874, column: 37, scope: !4307)
!4313 = !DILocation(line: 1874, column: 15, scope: !4307)
!4314 = !DILocation(line: 1875, column: 1, scope: !4289)
!4315 = distinct !DISubprogram(name: "rna_MaskLayer_splines_begin", scope: !2488, file: !2488, line: 205, type: !2382, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4316 = !DILocalVariable(name: "iter", arg: 1, scope: !4315, file: !2488, line: 205, type: !2384)
!4317 = !DILocation(line: 205, column: 69, scope: !4315)
!4318 = !DILocalVariable(name: "ptr", arg: 2, scope: !4315, file: !2488, line: 205, type: !453)
!4319 = !DILocation(line: 205, column: 87, scope: !4315)
!4320 = !DILocalVariable(name: "masklay", scope: !4315, file: !2488, line: 207, type: !1824)
!4321 = !DILocation(line: 207, column: 13, scope: !4315)
!4322 = !DILocation(line: 207, column: 36, scope: !4315)
!4323 = !DILocation(line: 207, column: 41, scope: !4315)
!4324 = !DILocation(line: 207, column: 23, scope: !4315)
!4325 = !DILocation(line: 209, column: 30, scope: !4315)
!4326 = !DILocation(line: 209, column: 37, scope: !4315)
!4327 = !DILocation(line: 209, column: 46, scope: !4315)
!4328 = !DILocation(line: 209, column: 2, scope: !4315)
!4329 = !DILocation(line: 210, column: 1, scope: !4315)
!4330 = distinct !DISubprogram(name: "MaskLayer_splines_get", scope: !3, file: !3, line: 1859, type: !2413, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4331 = !DILocalVariable(name: "iter", arg: 1, scope: !4330, file: !3, line: 1859, type: !2384)
!4332 = !DILocation(line: 1859, column: 69, scope: !4330)
!4333 = !DILocation(line: 1861, column: 37, scope: !4330)
!4334 = !DILocation(line: 1861, column: 43, scope: !4330)
!4335 = !DILocation(line: 1861, column: 94, scope: !4330)
!4336 = !DILocation(line: 1861, column: 68, scope: !4330)
!4337 = !DILocation(line: 1861, column: 9, scope: !4330)
!4338 = !DILocation(line: 1861, column: 2, scope: !4330)
!4339 = distinct !DISubprogram(name: "MaskLayer_splines_next", scope: !3, file: !3, line: 1877, type: !2421, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4340 = !DILocalVariable(name: "iter", arg: 1, scope: !4339, file: !3, line: 1877, type: !2384)
!4341 = !DILocation(line: 1877, column: 57, scope: !4339)
!4342 = !DILocation(line: 1879, column: 29, scope: !4339)
!4343 = !DILocation(line: 1879, column: 2, scope: !4339)
!4344 = !DILocation(line: 1881, column: 6, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4339, file: !3, line: 1881, column: 6)
!4346 = !DILocation(line: 1881, column: 12, scope: !4345)
!4347 = !DILocation(line: 1881, column: 6, scope: !4339)
!4348 = !DILocation(line: 1882, column: 3, scope: !4345)
!4349 = !DILocation(line: 1882, column: 9, scope: !4345)
!4350 = !DILocation(line: 1882, column: 37, scope: !4345)
!4351 = !DILocation(line: 1882, column: 15, scope: !4345)
!4352 = !DILocation(line: 1883, column: 1, scope: !4339)
!4353 = distinct !DISubprogram(name: "MaskLayer_splines_end", scope: !3, file: !3, line: 1885, type: !2421, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4354 = !DILocalVariable(name: "iter", arg: 1, scope: !4353, file: !3, line: 1885, type: !2384)
!4355 = !DILocation(line: 1885, column: 56, scope: !4353)
!4356 = !DILocation(line: 1887, column: 28, scope: !4353)
!4357 = !DILocation(line: 1887, column: 2, scope: !4353)
!4358 = !DILocation(line: 1888, column: 1, scope: !4353)
!4359 = distinct !DISubprogram(name: "MaskLayer_splines_lookup_int", scope: !3, file: !3, line: 1890, type: !3419, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4360 = !DILocalVariable(name: "ptr", arg: 1, scope: !4359, file: !3, line: 1890, type: !453)
!4361 = !DILocation(line: 1890, column: 46, scope: !4359)
!4362 = !DILocalVariable(name: "index", arg: 2, scope: !4359, file: !3, line: 1890, type: !48)
!4363 = !DILocation(line: 1890, column: 55, scope: !4359)
!4364 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !4359, file: !3, line: 1890, type: !453)
!4365 = !DILocation(line: 1890, column: 74, scope: !4359)
!4366 = !DILocalVariable(name: "found", scope: !4359, file: !3, line: 1892, type: !48)
!4367 = !DILocation(line: 1892, column: 6, scope: !4359)
!4368 = !DILocalVariable(name: "iter", scope: !4359, file: !3, line: 1893, type: !2385)
!4369 = !DILocation(line: 1893, column: 29, scope: !4359)
!4370 = !DILocation(line: 1895, column: 33, scope: !4359)
!4371 = !DILocation(line: 1895, column: 2, scope: !4359)
!4372 = !DILocation(line: 1897, column: 11, scope: !4373)
!4373 = distinct !DILexicalBlock(scope: !4359, file: !3, line: 1897, column: 6)
!4374 = !DILocation(line: 1897, column: 6, scope: !4373)
!4375 = !DILocation(line: 1897, column: 6, scope: !4359)
!4376 = !DILocalVariable(name: "internal", scope: !4377, file: !3, line: 1898, type: !4378)
!4377 = distinct !DILexicalBlock(scope: !4373, file: !3, line: 1897, column: 18)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!4379 = !DILocation(line: 1898, column: 21, scope: !4377)
!4380 = !DILocation(line: 1898, column: 38, scope: !4377)
!4381 = !DILocation(line: 1898, column: 47, scope: !4377)
!4382 = !DILocation(line: 1899, column: 7, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1899, column: 7)
!4384 = !DILocation(line: 1899, column: 17, scope: !4383)
!4385 = !DILocation(line: 1899, column: 7, scope: !4377)
!4386 = !DILocation(line: 1900, column: 4, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1899, column: 23)
!4388 = !DILocation(line: 1900, column: 16, scope: !4387)
!4389 = !DILocation(line: 1900, column: 19, scope: !4387)
!4390 = !DILocation(line: 1900, column: 23, scope: !4387)
!4391 = !DILocation(line: 1900, column: 31, scope: !4387)
!4392 = !DILocation(line: 0, scope: !4387)
!4393 = !DILocation(line: 1901, column: 5, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4387, file: !3, line: 1900, column: 38)
!4395 = distinct !{!4395, !4386, !4396}
!4396 = !DILocation(line: 1902, column: 4, scope: !4387)
!4397 = !DILocation(line: 1903, column: 13, scope: !4387)
!4398 = !DILocation(line: 1903, column: 19, scope: !4387)
!4399 = !DILocation(line: 1903, column: 25, scope: !4387)
!4400 = !DILocation(line: 1903, column: 33, scope: !4387)
!4401 = !DILocation(line: 1903, column: 10, scope: !4387)
!4402 = !DILocation(line: 1904, column: 3, scope: !4387)
!4403 = !DILocation(line: 1906, column: 4, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4383, file: !3, line: 1905, column: 8)
!4405 = !DILocation(line: 1906, column: 16, scope: !4404)
!4406 = !DILocation(line: 1906, column: 19, scope: !4404)
!4407 = !DILocation(line: 1906, column: 23, scope: !4404)
!4408 = !DILocation(line: 1906, column: 26, scope: !4404)
!4409 = !DILocation(line: 1906, column: 36, scope: !4404)
!4410 = !DILocation(line: 0, scope: !4404)
!4411 = !DILocation(line: 1907, column: 22, scope: !4404)
!4412 = !DILocation(line: 1907, column: 32, scope: !4404)
!4413 = !DILocation(line: 1907, column: 38, scope: !4404)
!4414 = !DILocation(line: 1907, column: 5, scope: !4404)
!4415 = !DILocation(line: 1907, column: 15, scope: !4404)
!4416 = !DILocation(line: 1907, column: 20, scope: !4404)
!4417 = distinct !{!4417, !4403, !4413}
!4418 = !DILocation(line: 1908, column: 13, scope: !4404)
!4419 = !DILocation(line: 1908, column: 19, scope: !4404)
!4420 = !DILocation(line: 1908, column: 25, scope: !4404)
!4421 = !DILocation(line: 1908, column: 28, scope: !4404)
!4422 = !DILocation(line: 1908, column: 38, scope: !4404)
!4423 = !DILocation(line: 1908, column: 10, scope: !4404)
!4424 = !DILocation(line: 1910, column: 7, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4377, file: !3, line: 1910, column: 7)
!4426 = !DILocation(line: 1910, column: 7, scope: !4377)
!4427 = !DILocation(line: 1910, column: 15, scope: !4425)
!4428 = !DILocation(line: 1910, column: 23, scope: !4425)
!4429 = !DILocation(line: 1910, column: 14, scope: !4425)
!4430 = !DILocation(line: 1911, column: 2, scope: !4377)
!4431 = !DILocation(line: 1913, column: 2, scope: !4359)
!4432 = !DILocation(line: 1915, column: 9, scope: !4359)
!4433 = !DILocation(line: 1915, column: 2, scope: !4359)
!4434 = distinct !DISubprogram(name: "MaskLayer_hide_get", scope: !3, file: !3, line: 1918, type: !2505, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4435 = !DILocalVariable(name: "ptr", arg: 1, scope: !4434, file: !3, line: 1918, type: !453)
!4436 = !DILocation(line: 1918, column: 36, scope: !4434)
!4437 = !DILocalVariable(name: "data", scope: !4434, file: !3, line: 1920, type: !1824)
!4438 = !DILocation(line: 1920, column: 13, scope: !4434)
!4439 = !DILocation(line: 1920, column: 34, scope: !4434)
!4440 = !DILocation(line: 1920, column: 39, scope: !4434)
!4441 = !DILocation(line: 1920, column: 20, scope: !4434)
!4442 = !DILocation(line: 1921, column: 12, scope: !4434)
!4443 = !DILocation(line: 1921, column: 18, scope: !4434)
!4444 = !DILocation(line: 1921, column: 11, scope: !4434)
!4445 = !DILocation(line: 1921, column: 32, scope: !4434)
!4446 = !DILocation(line: 1921, column: 37, scope: !4434)
!4447 = !DILocation(line: 1921, column: 2, scope: !4434)
!4448 = distinct !DISubprogram(name: "MaskLayer_hide_set", scope: !3, file: !3, line: 1924, type: !2518, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4449 = !DILocalVariable(name: "ptr", arg: 1, scope: !4448, file: !3, line: 1924, type: !453)
!4450 = !DILocation(line: 1924, column: 37, scope: !4448)
!4451 = !DILocalVariable(name: "value", arg: 2, scope: !4448, file: !3, line: 1924, type: !48)
!4452 = !DILocation(line: 1924, column: 46, scope: !4448)
!4453 = !DILocalVariable(name: "data", scope: !4448, file: !3, line: 1926, type: !1824)
!4454 = !DILocation(line: 1926, column: 13, scope: !4448)
!4455 = !DILocation(line: 1926, column: 34, scope: !4448)
!4456 = !DILocation(line: 1926, column: 39, scope: !4448)
!4457 = !DILocation(line: 1926, column: 20, scope: !4448)
!4458 = !DILocation(line: 1927, column: 6, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4448, file: !3, line: 1927, column: 6)
!4460 = !DILocation(line: 1927, column: 6, scope: !4448)
!4461 = !DILocation(line: 1927, column: 13, scope: !4459)
!4462 = !DILocation(line: 1927, column: 19, scope: !4459)
!4463 = !DILocation(line: 1927, column: 32, scope: !4459)
!4464 = !DILocation(line: 1928, column: 7, scope: !4459)
!4465 = !DILocation(line: 1928, column: 13, scope: !4459)
!4466 = !DILocation(line: 1928, column: 26, scope: !4459)
!4467 = !DILocation(line: 1929, column: 1, scope: !4448)
!4468 = distinct !DISubprogram(name: "MaskLayer_hide_select_get", scope: !3, file: !3, line: 1931, type: !2505, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4469 = !DILocalVariable(name: "ptr", arg: 1, scope: !4468, file: !3, line: 1931, type: !453)
!4470 = !DILocation(line: 1931, column: 43, scope: !4468)
!4471 = !DILocalVariable(name: "data", scope: !4468, file: !3, line: 1933, type: !1824)
!4472 = !DILocation(line: 1933, column: 13, scope: !4468)
!4473 = !DILocation(line: 1933, column: 34, scope: !4468)
!4474 = !DILocation(line: 1933, column: 39, scope: !4468)
!4475 = !DILocation(line: 1933, column: 20, scope: !4468)
!4476 = !DILocation(line: 1934, column: 12, scope: !4468)
!4477 = !DILocation(line: 1934, column: 18, scope: !4468)
!4478 = !DILocation(line: 1934, column: 11, scope: !4468)
!4479 = !DILocation(line: 1934, column: 32, scope: !4468)
!4480 = !DILocation(line: 1934, column: 37, scope: !4468)
!4481 = !DILocation(line: 1934, column: 2, scope: !4468)
!4482 = distinct !DISubprogram(name: "MaskLayer_hide_select_set", scope: !3, file: !3, line: 1937, type: !2518, scopeLine: 1938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4483 = !DILocalVariable(name: "ptr", arg: 1, scope: !4482, file: !3, line: 1937, type: !453)
!4484 = !DILocation(line: 1937, column: 44, scope: !4482)
!4485 = !DILocalVariable(name: "value", arg: 2, scope: !4482, file: !3, line: 1937, type: !48)
!4486 = !DILocation(line: 1937, column: 53, scope: !4482)
!4487 = !DILocalVariable(name: "data", scope: !4482, file: !3, line: 1939, type: !1824)
!4488 = !DILocation(line: 1939, column: 13, scope: !4482)
!4489 = !DILocation(line: 1939, column: 34, scope: !4482)
!4490 = !DILocation(line: 1939, column: 39, scope: !4482)
!4491 = !DILocation(line: 1939, column: 20, scope: !4482)
!4492 = !DILocation(line: 1940, column: 6, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 1940, column: 6)
!4494 = !DILocation(line: 1940, column: 6, scope: !4482)
!4495 = !DILocation(line: 1940, column: 13, scope: !4493)
!4496 = !DILocation(line: 1940, column: 19, scope: !4493)
!4497 = !DILocation(line: 1940, column: 32, scope: !4493)
!4498 = !DILocation(line: 1941, column: 7, scope: !4493)
!4499 = !DILocation(line: 1941, column: 13, scope: !4493)
!4500 = !DILocation(line: 1941, column: 26, scope: !4493)
!4501 = !DILocation(line: 1942, column: 1, scope: !4482)
!4502 = distinct !DISubprogram(name: "MaskLayer_hide_render_get", scope: !3, file: !3, line: 1944, type: !2505, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4503 = !DILocalVariable(name: "ptr", arg: 1, scope: !4502, file: !3, line: 1944, type: !453)
!4504 = !DILocation(line: 1944, column: 43, scope: !4502)
!4505 = !DILocalVariable(name: "data", scope: !4502, file: !3, line: 1946, type: !1824)
!4506 = !DILocation(line: 1946, column: 13, scope: !4502)
!4507 = !DILocation(line: 1946, column: 34, scope: !4502)
!4508 = !DILocation(line: 1946, column: 39, scope: !4502)
!4509 = !DILocation(line: 1946, column: 20, scope: !4502)
!4510 = !DILocation(line: 1947, column: 12, scope: !4502)
!4511 = !DILocation(line: 1947, column: 18, scope: !4502)
!4512 = !DILocation(line: 1947, column: 11, scope: !4502)
!4513 = !DILocation(line: 1947, column: 32, scope: !4502)
!4514 = !DILocation(line: 1947, column: 37, scope: !4502)
!4515 = !DILocation(line: 1947, column: 2, scope: !4502)
!4516 = distinct !DISubprogram(name: "MaskLayer_hide_render_set", scope: !3, file: !3, line: 1950, type: !2518, scopeLine: 1951, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4517 = !DILocalVariable(name: "ptr", arg: 1, scope: !4516, file: !3, line: 1950, type: !453)
!4518 = !DILocation(line: 1950, column: 44, scope: !4516)
!4519 = !DILocalVariable(name: "value", arg: 2, scope: !4516, file: !3, line: 1950, type: !48)
!4520 = !DILocation(line: 1950, column: 53, scope: !4516)
!4521 = !DILocalVariable(name: "data", scope: !4516, file: !3, line: 1952, type: !1824)
!4522 = !DILocation(line: 1952, column: 13, scope: !4516)
!4523 = !DILocation(line: 1952, column: 34, scope: !4516)
!4524 = !DILocation(line: 1952, column: 39, scope: !4516)
!4525 = !DILocation(line: 1952, column: 20, scope: !4516)
!4526 = !DILocation(line: 1953, column: 6, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 1953, column: 6)
!4528 = !DILocation(line: 1953, column: 6, scope: !4516)
!4529 = !DILocation(line: 1953, column: 13, scope: !4527)
!4530 = !DILocation(line: 1953, column: 19, scope: !4527)
!4531 = !DILocation(line: 1953, column: 32, scope: !4527)
!4532 = !DILocation(line: 1954, column: 7, scope: !4527)
!4533 = !DILocation(line: 1954, column: 13, scope: !4527)
!4534 = !DILocation(line: 1954, column: 26, scope: !4527)
!4535 = !DILocation(line: 1955, column: 1, scope: !4516)
!4536 = distinct !DISubprogram(name: "MaskLayer_select_get", scope: !3, file: !3, line: 1957, type: !2505, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4537 = !DILocalVariable(name: "ptr", arg: 1, scope: !4536, file: !3, line: 1957, type: !453)
!4538 = !DILocation(line: 1957, column: 38, scope: !4536)
!4539 = !DILocalVariable(name: "data", scope: !4536, file: !3, line: 1959, type: !1824)
!4540 = !DILocation(line: 1959, column: 13, scope: !4536)
!4541 = !DILocation(line: 1959, column: 34, scope: !4536)
!4542 = !DILocation(line: 1959, column: 39, scope: !4536)
!4543 = !DILocation(line: 1959, column: 20, scope: !4536)
!4544 = !DILocation(line: 1960, column: 12, scope: !4536)
!4545 = !DILocation(line: 1960, column: 18, scope: !4536)
!4546 = !DILocation(line: 1960, column: 11, scope: !4536)
!4547 = !DILocation(line: 1960, column: 24, scope: !4536)
!4548 = !DILocation(line: 1960, column: 30, scope: !4536)
!4549 = !DILocation(line: 1960, column: 2, scope: !4536)
!4550 = distinct !DISubprogram(name: "MaskLayer_select_set", scope: !3, file: !3, line: 1963, type: !2518, scopeLine: 1964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4551 = !DILocalVariable(name: "ptr", arg: 1, scope: !4550, file: !3, line: 1963, type: !453)
!4552 = !DILocation(line: 1963, column: 39, scope: !4550)
!4553 = !DILocalVariable(name: "value", arg: 2, scope: !4550, file: !3, line: 1963, type: !48)
!4554 = !DILocation(line: 1963, column: 48, scope: !4550)
!4555 = !DILocalVariable(name: "data", scope: !4550, file: !3, line: 1965, type: !1824)
!4556 = !DILocation(line: 1965, column: 13, scope: !4550)
!4557 = !DILocation(line: 1965, column: 34, scope: !4550)
!4558 = !DILocation(line: 1965, column: 39, scope: !4550)
!4559 = !DILocation(line: 1965, column: 20, scope: !4550)
!4560 = !DILocation(line: 1966, column: 6, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4550, file: !3, line: 1966, column: 6)
!4562 = !DILocation(line: 1966, column: 6, scope: !4550)
!4563 = !DILocation(line: 1966, column: 13, scope: !4561)
!4564 = !DILocation(line: 1966, column: 19, scope: !4561)
!4565 = !DILocation(line: 1966, column: 24, scope: !4561)
!4566 = !DILocation(line: 1967, column: 7, scope: !4561)
!4567 = !DILocation(line: 1967, column: 13, scope: !4561)
!4568 = !DILocation(line: 1967, column: 18, scope: !4561)
!4569 = !DILocation(line: 1968, column: 1, scope: !4550)
!4570 = distinct !DISubprogram(name: "MaskLayer_alpha_get", scope: !3, file: !3, line: 1970, type: !2741, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4571 = !DILocalVariable(name: "ptr", arg: 1, scope: !4570, file: !3, line: 1970, type: !453)
!4572 = !DILocation(line: 1970, column: 39, scope: !4570)
!4573 = !DILocalVariable(name: "data", scope: !4570, file: !3, line: 1972, type: !1824)
!4574 = !DILocation(line: 1972, column: 13, scope: !4570)
!4575 = !DILocation(line: 1972, column: 34, scope: !4570)
!4576 = !DILocation(line: 1972, column: 39, scope: !4570)
!4577 = !DILocation(line: 1972, column: 20, scope: !4570)
!4578 = !DILocation(line: 1973, column: 17, scope: !4570)
!4579 = !DILocation(line: 1973, column: 23, scope: !4570)
!4580 = !DILocation(line: 1973, column: 2, scope: !4570)
!4581 = distinct !DISubprogram(name: "MaskLayer_alpha_set", scope: !3, file: !3, line: 1976, type: !2754, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4582 = !DILocalVariable(name: "ptr", arg: 1, scope: !4581, file: !3, line: 1976, type: !453)
!4583 = !DILocation(line: 1976, column: 38, scope: !4581)
!4584 = !DILocalVariable(name: "value", arg: 2, scope: !4581, file: !3, line: 1976, type: !389)
!4585 = !DILocation(line: 1976, column: 49, scope: !4581)
!4586 = !DILocalVariable(name: "data", scope: !4581, file: !3, line: 1978, type: !1824)
!4587 = !DILocation(line: 1978, column: 13, scope: !4581)
!4588 = !DILocation(line: 1978, column: 34, scope: !4581)
!4589 = !DILocation(line: 1978, column: 39, scope: !4581)
!4590 = !DILocation(line: 1978, column: 20, scope: !4581)
!4591 = !DILocation(line: 1979, column: 16, scope: !4581)
!4592 = !DILocation(line: 1979, column: 2, scope: !4581)
!4593 = !DILocation(line: 1979, column: 8, scope: !4581)
!4594 = !DILocation(line: 1979, column: 14, scope: !4581)
!4595 = !DILocation(line: 1980, column: 1, scope: !4581)
!4596 = distinct !DISubprogram(name: "MaskLayer_blend_get", scope: !3, file: !3, line: 1982, type: !2505, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4597 = !DILocalVariable(name: "ptr", arg: 1, scope: !4596, file: !3, line: 1982, type: !453)
!4598 = !DILocation(line: 1982, column: 37, scope: !4596)
!4599 = !DILocalVariable(name: "data", scope: !4596, file: !3, line: 1984, type: !1824)
!4600 = !DILocation(line: 1984, column: 13, scope: !4596)
!4601 = !DILocation(line: 1984, column: 34, scope: !4596)
!4602 = !DILocation(line: 1984, column: 39, scope: !4596)
!4603 = !DILocation(line: 1984, column: 20, scope: !4596)
!4604 = !DILocation(line: 1985, column: 15, scope: !4596)
!4605 = !DILocation(line: 1985, column: 21, scope: !4596)
!4606 = !DILocation(line: 1985, column: 9, scope: !4596)
!4607 = !DILocation(line: 1985, column: 2, scope: !4596)
!4608 = distinct !DISubprogram(name: "MaskLayer_blend_set", scope: !3, file: !3, line: 1988, type: !2518, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4609 = !DILocalVariable(name: "ptr", arg: 1, scope: !4608, file: !3, line: 1988, type: !453)
!4610 = !DILocation(line: 1988, column: 38, scope: !4608)
!4611 = !DILocalVariable(name: "value", arg: 2, scope: !4608, file: !3, line: 1988, type: !48)
!4612 = !DILocation(line: 1988, column: 47, scope: !4608)
!4613 = !DILocalVariable(name: "data", scope: !4608, file: !3, line: 1990, type: !1824)
!4614 = !DILocation(line: 1990, column: 13, scope: !4608)
!4615 = !DILocation(line: 1990, column: 34, scope: !4608)
!4616 = !DILocation(line: 1990, column: 39, scope: !4608)
!4617 = !DILocation(line: 1990, column: 20, scope: !4608)
!4618 = !DILocation(line: 1991, column: 16, scope: !4608)
!4619 = !DILocation(line: 1991, column: 2, scope: !4608)
!4620 = !DILocation(line: 1991, column: 8, scope: !4608)
!4621 = !DILocation(line: 1991, column: 14, scope: !4608)
!4622 = !DILocation(line: 1992, column: 1, scope: !4608)
!4623 = distinct !DISubprogram(name: "MaskLayer_invert_get", scope: !3, file: !3, line: 1994, type: !2505, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4624 = !DILocalVariable(name: "ptr", arg: 1, scope: !4623, file: !3, line: 1994, type: !453)
!4625 = !DILocation(line: 1994, column: 38, scope: !4623)
!4626 = !DILocalVariable(name: "data", scope: !4623, file: !3, line: 1996, type: !1824)
!4627 = !DILocation(line: 1996, column: 13, scope: !4623)
!4628 = !DILocation(line: 1996, column: 34, scope: !4623)
!4629 = !DILocation(line: 1996, column: 39, scope: !4623)
!4630 = !DILocation(line: 1996, column: 20, scope: !4623)
!4631 = !DILocation(line: 1997, column: 12, scope: !4623)
!4632 = !DILocation(line: 1997, column: 18, scope: !4623)
!4633 = !DILocation(line: 1997, column: 11, scope: !4623)
!4634 = !DILocation(line: 1997, column: 30, scope: !4623)
!4635 = !DILocation(line: 1997, column: 35, scope: !4623)
!4636 = !DILocation(line: 1997, column: 2, scope: !4623)
!4637 = distinct !DISubprogram(name: "MaskLayer_invert_set", scope: !3, file: !3, line: 2000, type: !2518, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4638 = !DILocalVariable(name: "ptr", arg: 1, scope: !4637, file: !3, line: 2000, type: !453)
!4639 = !DILocation(line: 2000, column: 39, scope: !4637)
!4640 = !DILocalVariable(name: "value", arg: 2, scope: !4637, file: !3, line: 2000, type: !48)
!4641 = !DILocation(line: 2000, column: 48, scope: !4637)
!4642 = !DILocalVariable(name: "data", scope: !4637, file: !3, line: 2002, type: !1824)
!4643 = !DILocation(line: 2002, column: 13, scope: !4637)
!4644 = !DILocation(line: 2002, column: 34, scope: !4637)
!4645 = !DILocation(line: 2002, column: 39, scope: !4637)
!4646 = !DILocation(line: 2002, column: 20, scope: !4637)
!4647 = !DILocation(line: 2003, column: 6, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 2003, column: 6)
!4649 = !DILocation(line: 2003, column: 6, scope: !4637)
!4650 = !DILocation(line: 2003, column: 13, scope: !4648)
!4651 = !DILocation(line: 2003, column: 19, scope: !4648)
!4652 = !DILocation(line: 2003, column: 30, scope: !4648)
!4653 = !DILocation(line: 2004, column: 7, scope: !4648)
!4654 = !DILocation(line: 2004, column: 13, scope: !4648)
!4655 = !DILocation(line: 2004, column: 24, scope: !4648)
!4656 = !DILocation(line: 2005, column: 1, scope: !4637)
!4657 = distinct !DISubprogram(name: "MaskLayer_falloff_get", scope: !3, file: !3, line: 2007, type: !2505, scopeLine: 2008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4658 = !DILocalVariable(name: "ptr", arg: 1, scope: !4657, file: !3, line: 2007, type: !453)
!4659 = !DILocation(line: 2007, column: 39, scope: !4657)
!4660 = !DILocalVariable(name: "data", scope: !4657, file: !3, line: 2009, type: !1824)
!4661 = !DILocation(line: 2009, column: 13, scope: !4657)
!4662 = !DILocation(line: 2009, column: 34, scope: !4657)
!4663 = !DILocation(line: 2009, column: 39, scope: !4657)
!4664 = !DILocation(line: 2009, column: 20, scope: !4657)
!4665 = !DILocation(line: 2010, column: 15, scope: !4657)
!4666 = !DILocation(line: 2010, column: 21, scope: !4657)
!4667 = !DILocation(line: 2010, column: 9, scope: !4657)
!4668 = !DILocation(line: 2010, column: 2, scope: !4657)
!4669 = distinct !DISubprogram(name: "MaskLayer_falloff_set", scope: !3, file: !3, line: 2013, type: !2518, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4670 = !DILocalVariable(name: "ptr", arg: 1, scope: !4669, file: !3, line: 2013, type: !453)
!4671 = !DILocation(line: 2013, column: 40, scope: !4669)
!4672 = !DILocalVariable(name: "value", arg: 2, scope: !4669, file: !3, line: 2013, type: !48)
!4673 = !DILocation(line: 2013, column: 49, scope: !4669)
!4674 = !DILocalVariable(name: "data", scope: !4669, file: !3, line: 2015, type: !1824)
!4675 = !DILocation(line: 2015, column: 13, scope: !4669)
!4676 = !DILocation(line: 2015, column: 34, scope: !4669)
!4677 = !DILocation(line: 2015, column: 39, scope: !4669)
!4678 = !DILocation(line: 2015, column: 20, scope: !4669)
!4679 = !DILocation(line: 2016, column: 18, scope: !4669)
!4680 = !DILocation(line: 2016, column: 2, scope: !4669)
!4681 = !DILocation(line: 2016, column: 8, scope: !4669)
!4682 = !DILocation(line: 2016, column: 16, scope: !4669)
!4683 = !DILocation(line: 2017, column: 1, scope: !4669)
!4684 = distinct !DISubprogram(name: "MaskLayer_use_fill_holes_get", scope: !3, file: !3, line: 2019, type: !2505, scopeLine: 2020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4685 = !DILocalVariable(name: "ptr", arg: 1, scope: !4684, file: !3, line: 2019, type: !453)
!4686 = !DILocation(line: 2019, column: 46, scope: !4684)
!4687 = !DILocalVariable(name: "data", scope: !4684, file: !3, line: 2021, type: !1824)
!4688 = !DILocation(line: 2021, column: 13, scope: !4684)
!4689 = !DILocation(line: 2021, column: 34, scope: !4684)
!4690 = !DILocation(line: 2021, column: 39, scope: !4684)
!4691 = !DILocation(line: 2021, column: 20, scope: !4684)
!4692 = !DILocation(line: 2022, column: 13, scope: !4684)
!4693 = !DILocation(line: 2022, column: 19, scope: !4684)
!4694 = !DILocation(line: 2022, column: 12, scope: !4684)
!4695 = !DILocation(line: 2022, column: 25, scope: !4684)
!4696 = !DILocation(line: 2022, column: 31, scope: !4684)
!4697 = !DILocation(line: 2022, column: 9, scope: !4684)
!4698 = !DILocation(line: 2022, column: 2, scope: !4684)
!4699 = distinct !DISubprogram(name: "MaskLayer_use_fill_holes_set", scope: !3, file: !3, line: 2025, type: !2518, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4700 = !DILocalVariable(name: "ptr", arg: 1, scope: !4699, file: !3, line: 2025, type: !453)
!4701 = !DILocation(line: 2025, column: 47, scope: !4699)
!4702 = !DILocalVariable(name: "value", arg: 2, scope: !4699, file: !3, line: 2025, type: !48)
!4703 = !DILocation(line: 2025, column: 56, scope: !4699)
!4704 = !DILocalVariable(name: "data", scope: !4699, file: !3, line: 2027, type: !1824)
!4705 = !DILocation(line: 2027, column: 13, scope: !4699)
!4706 = !DILocation(line: 2027, column: 34, scope: !4699)
!4707 = !DILocation(line: 2027, column: 39, scope: !4699)
!4708 = !DILocation(line: 2027, column: 20, scope: !4699)
!4709 = !DILocation(line: 2028, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 2028, column: 6)
!4711 = !DILocation(line: 2028, column: 6, scope: !4699)
!4712 = !DILocation(line: 2028, column: 14, scope: !4710)
!4713 = !DILocation(line: 2028, column: 20, scope: !4710)
!4714 = !DILocation(line: 2028, column: 25, scope: !4710)
!4715 = !DILocation(line: 2029, column: 7, scope: !4710)
!4716 = !DILocation(line: 2029, column: 13, scope: !4710)
!4717 = !DILocation(line: 2029, column: 18, scope: !4710)
!4718 = !DILocation(line: 2030, column: 1, scope: !4699)
!4719 = distinct !DISubprogram(name: "MaskLayer_use_fill_overlap_get", scope: !3, file: !3, line: 2032, type: !2505, scopeLine: 2033, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4720 = !DILocalVariable(name: "ptr", arg: 1, scope: !4719, file: !3, line: 2032, type: !453)
!4721 = !DILocation(line: 2032, column: 48, scope: !4719)
!4722 = !DILocalVariable(name: "data", scope: !4719, file: !3, line: 2034, type: !1824)
!4723 = !DILocation(line: 2034, column: 13, scope: !4719)
!4724 = !DILocation(line: 2034, column: 34, scope: !4719)
!4725 = !DILocation(line: 2034, column: 39, scope: !4719)
!4726 = !DILocation(line: 2034, column: 20, scope: !4719)
!4727 = !DILocation(line: 2035, column: 12, scope: !4719)
!4728 = !DILocation(line: 2035, column: 18, scope: !4719)
!4729 = !DILocation(line: 2035, column: 11, scope: !4719)
!4730 = !DILocation(line: 2035, column: 24, scope: !4719)
!4731 = !DILocation(line: 2035, column: 31, scope: !4719)
!4732 = !DILocation(line: 2035, column: 2, scope: !4719)
!4733 = distinct !DISubprogram(name: "MaskLayer_use_fill_overlap_set", scope: !3, file: !3, line: 2038, type: !2518, scopeLine: 2039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4734 = !DILocalVariable(name: "ptr", arg: 1, scope: !4733, file: !3, line: 2038, type: !453)
!4735 = !DILocation(line: 2038, column: 49, scope: !4733)
!4736 = !DILocalVariable(name: "value", arg: 2, scope: !4733, file: !3, line: 2038, type: !48)
!4737 = !DILocation(line: 2038, column: 58, scope: !4733)
!4738 = !DILocalVariable(name: "data", scope: !4733, file: !3, line: 2040, type: !1824)
!4739 = !DILocation(line: 2040, column: 13, scope: !4733)
!4740 = !DILocation(line: 2040, column: 34, scope: !4733)
!4741 = !DILocation(line: 2040, column: 39, scope: !4733)
!4742 = !DILocation(line: 2040, column: 20, scope: !4733)
!4743 = !DILocation(line: 2041, column: 6, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 2041, column: 6)
!4745 = !DILocation(line: 2041, column: 6, scope: !4733)
!4746 = !DILocation(line: 2041, column: 13, scope: !4744)
!4747 = !DILocation(line: 2041, column: 19, scope: !4744)
!4748 = !DILocation(line: 2041, column: 24, scope: !4744)
!4749 = !DILocation(line: 2042, column: 7, scope: !4744)
!4750 = !DILocation(line: 2042, column: 13, scope: !4744)
!4751 = !DILocation(line: 2042, column: 18, scope: !4744)
!4752 = !DILocation(line: 2043, column: 1, scope: !4733)
!4753 = distinct !DISubprogram(name: "Mask_layers_begin", scope: !3, file: !3, line: 2050, type: !2382, scopeLine: 2051, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4754 = !DILocalVariable(name: "iter", arg: 1, scope: !4753, file: !3, line: 2050, type: !2384)
!4755 = !DILocation(line: 2050, column: 52, scope: !4753)
!4756 = !DILocalVariable(name: "ptr", arg: 2, scope: !4753, file: !3, line: 2050, type: !453)
!4757 = !DILocation(line: 2050, column: 70, scope: !4753)
!4758 = !DILocation(line: 2053, column: 9, scope: !4753)
!4759 = !DILocation(line: 2053, column: 2, scope: !4753)
!4760 = !DILocation(line: 2054, column: 2, scope: !4753)
!4761 = !DILocation(line: 2054, column: 8, scope: !4753)
!4762 = !DILocation(line: 2054, column: 18, scope: !4753)
!4763 = !DILocation(line: 2054, column: 17, scope: !4753)
!4764 = !DILocation(line: 2055, column: 2, scope: !4753)
!4765 = !DILocation(line: 2055, column: 8, scope: !4753)
!4766 = !DILocation(line: 2055, column: 13, scope: !4753)
!4767 = !DILocation(line: 2057, column: 24, scope: !4753)
!4768 = !DILocation(line: 2057, column: 30, scope: !4753)
!4769 = !DILocation(line: 2057, column: 2, scope: !4753)
!4770 = !DILocation(line: 2059, column: 6, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4753, file: !3, line: 2059, column: 6)
!4772 = !DILocation(line: 2059, column: 12, scope: !4771)
!4773 = !DILocation(line: 2059, column: 6, scope: !4753)
!4774 = !DILocation(line: 2060, column: 3, scope: !4771)
!4775 = !DILocation(line: 2060, column: 9, scope: !4771)
!4776 = !DILocation(line: 2060, column: 31, scope: !4771)
!4777 = !DILocation(line: 2060, column: 15, scope: !4771)
!4778 = !DILocation(line: 2061, column: 1, scope: !4753)
!4779 = distinct !DISubprogram(name: "rna_Mask_layers_begin", scope: !2488, file: !2488, line: 149, type: !2382, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4780 = !DILocalVariable(name: "iter", arg: 1, scope: !4779, file: !2488, line: 149, type: !2384)
!4781 = !DILocation(line: 149, column: 63, scope: !4779)
!4782 = !DILocalVariable(name: "ptr", arg: 2, scope: !4779, file: !2488, line: 149, type: !453)
!4783 = !DILocation(line: 149, column: 81, scope: !4779)
!4784 = !DILocalVariable(name: "mask", scope: !4779, file: !2488, line: 151, type: !1844)
!4785 = !DILocation(line: 151, column: 8, scope: !4779)
!4786 = !DILocation(line: 151, column: 23, scope: !4779)
!4787 = !DILocation(line: 151, column: 28, scope: !4779)
!4788 = !DILocation(line: 151, column: 31, scope: !4779)
!4789 = !DILocation(line: 151, column: 15, scope: !4779)
!4790 = !DILocation(line: 153, column: 30, scope: !4779)
!4791 = !DILocation(line: 153, column: 37, scope: !4779)
!4792 = !DILocation(line: 153, column: 43, scope: !4779)
!4793 = !DILocation(line: 153, column: 2, scope: !4779)
!4794 = !DILocation(line: 154, column: 1, scope: !4779)
!4795 = distinct !DISubprogram(name: "Mask_layers_get", scope: !3, file: !3, line: 2045, type: !2413, scopeLine: 2046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4796 = !DILocalVariable(name: "iter", arg: 1, scope: !4795, file: !3, line: 2045, type: !2384)
!4797 = !DILocation(line: 2045, column: 63, scope: !4795)
!4798 = !DILocation(line: 2047, column: 37, scope: !4795)
!4799 = !DILocation(line: 2047, column: 43, scope: !4795)
!4800 = !DILocation(line: 2047, column: 93, scope: !4795)
!4801 = !DILocation(line: 2047, column: 67, scope: !4795)
!4802 = !DILocation(line: 2047, column: 9, scope: !4795)
!4803 = !DILocation(line: 2047, column: 2, scope: !4795)
!4804 = distinct !DISubprogram(name: "Mask_layers_next", scope: !3, file: !3, line: 2063, type: !2421, scopeLine: 2064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4805 = !DILocalVariable(name: "iter", arg: 1, scope: !4804, file: !3, line: 2063, type: !2384)
!4806 = !DILocation(line: 2063, column: 51, scope: !4804)
!4807 = !DILocation(line: 2065, column: 29, scope: !4804)
!4808 = !DILocation(line: 2065, column: 2, scope: !4804)
!4809 = !DILocation(line: 2067, column: 6, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2067, column: 6)
!4811 = !DILocation(line: 2067, column: 12, scope: !4810)
!4812 = !DILocation(line: 2067, column: 6, scope: !4804)
!4813 = !DILocation(line: 2068, column: 3, scope: !4810)
!4814 = !DILocation(line: 2068, column: 9, scope: !4810)
!4815 = !DILocation(line: 2068, column: 31, scope: !4810)
!4816 = !DILocation(line: 2068, column: 15, scope: !4810)
!4817 = !DILocation(line: 2069, column: 1, scope: !4804)
!4818 = distinct !DISubprogram(name: "Mask_layers_end", scope: !3, file: !3, line: 2071, type: !2421, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4819 = !DILocalVariable(name: "iter", arg: 1, scope: !4818, file: !3, line: 2071, type: !2384)
!4820 = !DILocation(line: 2071, column: 50, scope: !4818)
!4821 = !DILocation(line: 2073, column: 28, scope: !4818)
!4822 = !DILocation(line: 2073, column: 2, scope: !4818)
!4823 = !DILocation(line: 2074, column: 1, scope: !4818)
!4824 = distinct !DISubprogram(name: "Mask_active_layer_index_get", scope: !3, file: !3, line: 2076, type: !2505, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4825 = !DILocalVariable(name: "ptr", arg: 1, scope: !4824, file: !3, line: 2076, type: !453)
!4826 = !DILocation(line: 2076, column: 45, scope: !4824)
!4827 = !DILocation(line: 2078, column: 41, scope: !4824)
!4828 = !DILocation(line: 2078, column: 9, scope: !4824)
!4829 = !DILocation(line: 2078, column: 2, scope: !4824)
!4830 = distinct !DISubprogram(name: "rna_Mask_layer_active_index_get", scope: !2488, file: !2488, line: 156, type: !2505, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4831 = !DILocalVariable(name: "ptr", arg: 1, scope: !4830, file: !2488, line: 156, type: !453)
!4832 = !DILocation(line: 156, column: 56, scope: !4830)
!4833 = !DILocalVariable(name: "mask", scope: !4830, file: !2488, line: 158, type: !1844)
!4834 = !DILocation(line: 158, column: 8, scope: !4830)
!4835 = !DILocation(line: 158, column: 23, scope: !4830)
!4836 = !DILocation(line: 158, column: 28, scope: !4830)
!4837 = !DILocation(line: 158, column: 31, scope: !4830)
!4838 = !DILocation(line: 158, column: 15, scope: !4830)
!4839 = !DILocation(line: 160, column: 9, scope: !4830)
!4840 = !DILocation(line: 160, column: 15, scope: !4830)
!4841 = !DILocation(line: 160, column: 2, scope: !4830)
!4842 = distinct !DISubprogram(name: "Mask_active_layer_index_set", scope: !3, file: !3, line: 2081, type: !2518, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4843 = !DILocalVariable(name: "ptr", arg: 1, scope: !4842, file: !3, line: 2081, type: !453)
!4844 = !DILocation(line: 2081, column: 46, scope: !4842)
!4845 = !DILocalVariable(name: "value", arg: 2, scope: !4842, file: !3, line: 2081, type: !48)
!4846 = !DILocation(line: 2081, column: 55, scope: !4842)
!4847 = !DILocation(line: 2083, column: 34, scope: !4842)
!4848 = !DILocation(line: 2083, column: 39, scope: !4842)
!4849 = !DILocation(line: 2083, column: 2, scope: !4842)
!4850 = !DILocation(line: 2084, column: 1, scope: !4842)
!4851 = distinct !DISubprogram(name: "rna_Mask_layer_active_index_set", scope: !2488, file: !2488, line: 163, type: !2518, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4852 = !DILocalVariable(name: "ptr", arg: 1, scope: !4851, file: !2488, line: 163, type: !453)
!4853 = !DILocation(line: 163, column: 57, scope: !4851)
!4854 = !DILocalVariable(name: "value", arg: 2, scope: !4851, file: !2488, line: 163, type: !48)
!4855 = !DILocation(line: 163, column: 66, scope: !4851)
!4856 = !DILocalVariable(name: "mask", scope: !4851, file: !2488, line: 165, type: !1844)
!4857 = !DILocation(line: 165, column: 8, scope: !4851)
!4858 = !DILocation(line: 165, column: 23, scope: !4851)
!4859 = !DILocation(line: 165, column: 28, scope: !4851)
!4860 = !DILocation(line: 165, column: 31, scope: !4851)
!4861 = !DILocation(line: 165, column: 15, scope: !4851)
!4862 = !DILocation(line: 167, column: 22, scope: !4851)
!4863 = !DILocation(line: 167, column: 2, scope: !4851)
!4864 = !DILocation(line: 167, column: 8, scope: !4851)
!4865 = !DILocation(line: 167, column: 20, scope: !4851)
!4866 = !DILocation(line: 168, column: 1, scope: !4851)
!4867 = distinct !DISubprogram(name: "Mask_frame_start_get", scope: !3, file: !3, line: 2086, type: !2505, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4868 = !DILocalVariable(name: "ptr", arg: 1, scope: !4867, file: !3, line: 2086, type: !453)
!4869 = !DILocation(line: 2086, column: 38, scope: !4867)
!4870 = !DILocalVariable(name: "data", scope: !4867, file: !3, line: 2088, type: !1844)
!4871 = !DILocation(line: 2088, column: 8, scope: !4867)
!4872 = !DILocation(line: 2088, column: 24, scope: !4867)
!4873 = !DILocation(line: 2088, column: 29, scope: !4867)
!4874 = !DILocation(line: 2088, column: 15, scope: !4867)
!4875 = !DILocation(line: 2089, column: 15, scope: !4867)
!4876 = !DILocation(line: 2089, column: 21, scope: !4867)
!4877 = !DILocation(line: 2089, column: 2, scope: !4867)
!4878 = distinct !DISubprogram(name: "Mask_frame_start_set", scope: !3, file: !3, line: 2092, type: !2518, scopeLine: 2093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4879 = !DILocalVariable(name: "ptr", arg: 1, scope: !4878, file: !3, line: 2092, type: !453)
!4880 = !DILocation(line: 2092, column: 39, scope: !4878)
!4881 = !DILocalVariable(name: "value", arg: 2, scope: !4878, file: !3, line: 2092, type: !48)
!4882 = !DILocation(line: 2092, column: 48, scope: !4878)
!4883 = !DILocation(line: 2094, column: 27, scope: !4878)
!4884 = !DILocation(line: 2094, column: 32, scope: !4878)
!4885 = !DILocation(line: 2094, column: 2, scope: !4878)
!4886 = !DILocation(line: 2095, column: 1, scope: !4878)
!4887 = distinct !DISubprogram(name: "rna_Mask_start_frame_set", scope: !2488, file: !2488, line: 453, type: !2518, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4888 = !DILocalVariable(name: "ptr", arg: 1, scope: !4887, file: !2488, line: 453, type: !453)
!4889 = !DILocation(line: 453, column: 50, scope: !4887)
!4890 = !DILocalVariable(name: "value", arg: 2, scope: !4887, file: !2488, line: 453, type: !48)
!4891 = !DILocation(line: 453, column: 59, scope: !4887)
!4892 = !DILocalVariable(name: "data", scope: !4887, file: !2488, line: 455, type: !1844)
!4893 = !DILocation(line: 455, column: 8, scope: !4887)
!4894 = !DILocation(line: 455, column: 23, scope: !4887)
!4895 = !DILocation(line: 455, column: 28, scope: !4887)
!4896 = !DILocation(line: 455, column: 15, scope: !4887)
!4897 = !DILocation(line: 457, column: 2, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !2488, line: 457, column: 2)
!4899 = distinct !DILexicalBlock(scope: !4887, file: !2488, line: 457, column: 2)
!4900 = !DILocation(line: 457, column: 2, scope: !4899)
!4901 = !DILocation(line: 457, column: 2, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4898, file: !2488, line: 457, column: 2)
!4903 = !DILocation(line: 458, column: 15, scope: !4887)
!4904 = !DILocation(line: 458, column: 2, scope: !4887)
!4905 = !DILocation(line: 458, column: 8, scope: !4887)
!4906 = !DILocation(line: 458, column: 13, scope: !4887)
!4907 = !DILocation(line: 460, column: 6, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4887, file: !2488, line: 460, column: 6)
!4909 = !DILocation(line: 460, column: 12, scope: !4908)
!4910 = !DILocation(line: 460, column: 20, scope: !4908)
!4911 = !DILocation(line: 460, column: 26, scope: !4908)
!4912 = !DILocation(line: 460, column: 17, scope: !4908)
!4913 = !DILocation(line: 460, column: 6, scope: !4887)
!4914 = !DILocation(line: 461, column: 16, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4908, file: !2488, line: 460, column: 32)
!4916 = !DILocation(line: 461, column: 3, scope: !4915)
!4917 = !DILocation(line: 461, column: 9, scope: !4915)
!4918 = !DILocation(line: 461, column: 14, scope: !4915)
!4919 = !DILocation(line: 462, column: 2, scope: !4915)
!4920 = !DILocation(line: 463, column: 1, scope: !4887)
!4921 = distinct !DISubprogram(name: "Mask_frame_end_get", scope: !3, file: !3, line: 2097, type: !2505, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4922 = !DILocalVariable(name: "ptr", arg: 1, scope: !4921, file: !3, line: 2097, type: !453)
!4923 = !DILocation(line: 2097, column: 36, scope: !4921)
!4924 = !DILocalVariable(name: "data", scope: !4921, file: !3, line: 2099, type: !1844)
!4925 = !DILocation(line: 2099, column: 8, scope: !4921)
!4926 = !DILocation(line: 2099, column: 24, scope: !4921)
!4927 = !DILocation(line: 2099, column: 29, scope: !4921)
!4928 = !DILocation(line: 2099, column: 15, scope: !4921)
!4929 = !DILocation(line: 2100, column: 15, scope: !4921)
!4930 = !DILocation(line: 2100, column: 21, scope: !4921)
!4931 = !DILocation(line: 2100, column: 2, scope: !4921)
!4932 = distinct !DISubprogram(name: "Mask_frame_end_set", scope: !3, file: !3, line: 2103, type: !2518, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4933 = !DILocalVariable(name: "ptr", arg: 1, scope: !4932, file: !3, line: 2103, type: !453)
!4934 = !DILocation(line: 2103, column: 37, scope: !4932)
!4935 = !DILocalVariable(name: "value", arg: 2, scope: !4932, file: !3, line: 2103, type: !48)
!4936 = !DILocation(line: 2103, column: 46, scope: !4932)
!4937 = !DILocation(line: 2105, column: 25, scope: !4932)
!4938 = !DILocation(line: 2105, column: 30, scope: !4932)
!4939 = !DILocation(line: 2105, column: 2, scope: !4932)
!4940 = !DILocation(line: 2106, column: 1, scope: !4932)
!4941 = distinct !DISubprogram(name: "rna_Mask_end_frame_set", scope: !2488, file: !2488, line: 465, type: !2518, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4942 = !DILocalVariable(name: "ptr", arg: 1, scope: !4941, file: !2488, line: 465, type: !453)
!4943 = !DILocation(line: 465, column: 48, scope: !4941)
!4944 = !DILocalVariable(name: "value", arg: 2, scope: !4941, file: !2488, line: 465, type: !48)
!4945 = !DILocation(line: 465, column: 57, scope: !4941)
!4946 = !DILocalVariable(name: "data", scope: !4941, file: !2488, line: 467, type: !1844)
!4947 = !DILocation(line: 467, column: 8, scope: !4941)
!4948 = !DILocation(line: 467, column: 23, scope: !4941)
!4949 = !DILocation(line: 467, column: 28, scope: !4941)
!4950 = !DILocation(line: 467, column: 15, scope: !4941)
!4951 = !DILocation(line: 468, column: 2, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !2488, line: 468, column: 2)
!4953 = distinct !DILexicalBlock(scope: !4941, file: !2488, line: 468, column: 2)
!4954 = !DILocation(line: 468, column: 2, scope: !4953)
!4955 = !DILocation(line: 468, column: 2, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4952, file: !2488, line: 468, column: 2)
!4957 = !DILocation(line: 469, column: 15, scope: !4941)
!4958 = !DILocation(line: 469, column: 2, scope: !4941)
!4959 = !DILocation(line: 469, column: 8, scope: !4941)
!4960 = !DILocation(line: 469, column: 13, scope: !4941)
!4961 = !DILocation(line: 471, column: 6, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4941, file: !2488, line: 471, column: 6)
!4963 = !DILocation(line: 471, column: 12, scope: !4962)
!4964 = !DILocation(line: 471, column: 20, scope: !4962)
!4965 = !DILocation(line: 471, column: 26, scope: !4962)
!4966 = !DILocation(line: 471, column: 17, scope: !4962)
!4967 = !DILocation(line: 471, column: 6, scope: !4941)
!4968 = !DILocation(line: 472, column: 16, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4962, file: !2488, line: 471, column: 32)
!4970 = !DILocation(line: 472, column: 3, scope: !4969)
!4971 = !DILocation(line: 472, column: 9, scope: !4969)
!4972 = !DILocation(line: 472, column: 14, scope: !4969)
!4973 = !DILocation(line: 473, column: 2, scope: !4969)
!4974 = !DILocation(line: 474, column: 1, scope: !4941)
!4975 = distinct !DISubprogram(name: "Mask_animation_data_get", scope: !3, file: !3, line: 2108, type: !2457, scopeLine: 2109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4976 = !DILocalVariable(name: "ptr", arg: 1, scope: !4975, file: !3, line: 2108, type: !453)
!4977 = !DILocation(line: 2108, column: 48, scope: !4975)
!4978 = !DILocalVariable(name: "data", scope: !4975, file: !3, line: 2110, type: !1844)
!4979 = !DILocation(line: 2110, column: 8, scope: !4975)
!4980 = !DILocation(line: 2110, column: 24, scope: !4975)
!4981 = !DILocation(line: 2110, column: 29, scope: !4975)
!4982 = !DILocation(line: 2110, column: 15, scope: !4975)
!4983 = !DILocation(line: 2111, column: 36, scope: !4975)
!4984 = !DILocation(line: 2111, column: 56, scope: !4975)
!4985 = !DILocation(line: 2111, column: 62, scope: !4975)
!4986 = !DILocation(line: 2111, column: 9, scope: !4975)
!4987 = !DILocation(line: 2111, column: 2, scope: !4975)
!4988 = distinct !DISubprogram(name: "MaskLayers_rna_properties_begin", scope: !3, file: !3, line: 2119, type: !2382, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!4989 = !DILocalVariable(name: "iter", arg: 1, scope: !4988, file: !3, line: 2119, type: !2384)
!4990 = !DILocation(line: 2119, column: 66, scope: !4988)
!4991 = !DILocalVariable(name: "ptr", arg: 2, scope: !4988, file: !3, line: 2119, type: !453)
!4992 = !DILocation(line: 2119, column: 84, scope: !4988)
!4993 = !DILocation(line: 2122, column: 9, scope: !4988)
!4994 = !DILocation(line: 2122, column: 2, scope: !4988)
!4995 = !DILocation(line: 2123, column: 2, scope: !4988)
!4996 = !DILocation(line: 2123, column: 8, scope: !4988)
!4997 = !DILocation(line: 2123, column: 18, scope: !4988)
!4998 = !DILocation(line: 2123, column: 17, scope: !4988)
!4999 = !DILocation(line: 2124, column: 2, scope: !4988)
!5000 = !DILocation(line: 2124, column: 8, scope: !4988)
!5001 = !DILocation(line: 2124, column: 13, scope: !4988)
!5002 = !DILocation(line: 2126, column: 31, scope: !4988)
!5003 = !DILocation(line: 2126, column: 37, scope: !4988)
!5004 = !DILocation(line: 2126, column: 2, scope: !4988)
!5005 = !DILocation(line: 2128, column: 6, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 2128, column: 6)
!5007 = !DILocation(line: 2128, column: 12, scope: !5006)
!5008 = !DILocation(line: 2128, column: 6, scope: !4988)
!5009 = !DILocation(line: 2129, column: 3, scope: !5006)
!5010 = !DILocation(line: 2129, column: 9, scope: !5006)
!5011 = !DILocation(line: 2129, column: 45, scope: !5006)
!5012 = !DILocation(line: 2129, column: 15, scope: !5006)
!5013 = !DILocation(line: 2130, column: 1, scope: !4988)
!5014 = distinct !DISubprogram(name: "MaskLayers_rna_properties_get", scope: !3, file: !3, line: 2114, type: !2413, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5015 = !DILocalVariable(name: "iter", arg: 1, scope: !5014, file: !3, line: 2114, type: !2384)
!5016 = !DILocation(line: 2114, column: 77, scope: !5014)
!5017 = !DILocation(line: 2116, column: 36, scope: !5014)
!5018 = !DILocation(line: 2116, column: 9, scope: !5014)
!5019 = !DILocation(line: 2116, column: 2, scope: !5014)
!5020 = distinct !DISubprogram(name: "MaskLayers_rna_properties_next", scope: !3, file: !3, line: 2132, type: !2421, scopeLine: 2133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5021 = !DILocalVariable(name: "iter", arg: 1, scope: !5020, file: !3, line: 2132, type: !2384)
!5022 = !DILocation(line: 2132, column: 65, scope: !5020)
!5023 = !DILocation(line: 2134, column: 30, scope: !5020)
!5024 = !DILocation(line: 2134, column: 2, scope: !5020)
!5025 = !DILocation(line: 2136, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 2136, column: 6)
!5027 = !DILocation(line: 2136, column: 12, scope: !5026)
!5028 = !DILocation(line: 2136, column: 6, scope: !5020)
!5029 = !DILocation(line: 2137, column: 3, scope: !5026)
!5030 = !DILocation(line: 2137, column: 9, scope: !5026)
!5031 = !DILocation(line: 2137, column: 45, scope: !5026)
!5032 = !DILocation(line: 2137, column: 15, scope: !5026)
!5033 = !DILocation(line: 2138, column: 1, scope: !5020)
!5034 = distinct !DISubprogram(name: "MaskLayers_rna_properties_end", scope: !3, file: !3, line: 2140, type: !2421, scopeLine: 2141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5035 = !DILocalVariable(name: "iter", arg: 1, scope: !5034, file: !3, line: 2140, type: !2384)
!5036 = !DILocation(line: 2140, column: 64, scope: !5034)
!5037 = !DILocation(line: 2142, column: 28, scope: !5034)
!5038 = !DILocation(line: 2142, column: 2, scope: !5034)
!5039 = !DILocation(line: 2143, column: 1, scope: !5034)
!5040 = distinct !DISubprogram(name: "MaskLayers_rna_properties_lookup_string", scope: !3, file: !3, line: 2145, type: !2443, scopeLine: 2146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5041 = !DILocalVariable(name: "ptr", arg: 1, scope: !5040, file: !3, line: 2145, type: !453)
!5042 = !DILocation(line: 2145, column: 57, scope: !5040)
!5043 = !DILocalVariable(name: "key", arg: 2, scope: !5040, file: !3, line: 2145, type: !100)
!5044 = !DILocation(line: 2145, column: 74, scope: !5040)
!5045 = !DILocalVariable(name: "r_ptr", arg: 3, scope: !5040, file: !3, line: 2145, type: !453)
!5046 = !DILocation(line: 2145, column: 91, scope: !5040)
!5047 = !DILocation(line: 2147, column: 46, scope: !5040)
!5048 = !DILocation(line: 2147, column: 51, scope: !5040)
!5049 = !DILocation(line: 2147, column: 56, scope: !5040)
!5050 = !DILocation(line: 2147, column: 9, scope: !5040)
!5051 = !DILocation(line: 2147, column: 2, scope: !5040)
!5052 = distinct !DISubprogram(name: "MaskLayers_rna_type_get", scope: !3, file: !3, line: 2150, type: !2457, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5053 = !DILocalVariable(name: "ptr", arg: 1, scope: !5052, file: !3, line: 2150, type: !453)
!5054 = !DILocation(line: 2150, column: 48, scope: !5052)
!5055 = !DILocation(line: 2152, column: 30, scope: !5052)
!5056 = !DILocation(line: 2152, column: 9, scope: !5052)
!5057 = !DILocation(line: 2152, column: 2, scope: !5052)
!5058 = distinct !DISubprogram(name: "MaskLayers_active_get", scope: !3, file: !3, line: 2155, type: !2457, scopeLine: 2156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5059 = !DILocalVariable(name: "ptr", arg: 1, scope: !5058, file: !3, line: 2155, type: !453)
!5060 = !DILocation(line: 2155, column: 46, scope: !5058)
!5061 = !DILocation(line: 2157, column: 35, scope: !5058)
!5062 = !DILocation(line: 2157, column: 9, scope: !5058)
!5063 = !DILocation(line: 2157, column: 2, scope: !5058)
!5064 = distinct !DISubprogram(name: "rna_Mask_layer_active_get", scope: !2488, file: !2488, line: 189, type: !2457, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5065 = !DILocalVariable(name: "ptr", arg: 1, scope: !5064, file: !2488, line: 189, type: !453)
!5066 = !DILocation(line: 189, column: 57, scope: !5064)
!5067 = !DILocalVariable(name: "mask", scope: !5064, file: !2488, line: 191, type: !1844)
!5068 = !DILocation(line: 191, column: 8, scope: !5064)
!5069 = !DILocation(line: 191, column: 23, scope: !5064)
!5070 = !DILocation(line: 191, column: 28, scope: !5064)
!5071 = !DILocation(line: 191, column: 31, scope: !5064)
!5072 = !DILocation(line: 191, column: 15, scope: !5064)
!5073 = !DILocalVariable(name: "masklay", scope: !5064, file: !2488, line: 192, type: !1824)
!5074 = !DILocation(line: 192, column: 13, scope: !5064)
!5075 = !DILocation(line: 192, column: 45, scope: !5064)
!5076 = !DILocation(line: 192, column: 23, scope: !5064)
!5077 = !DILocation(line: 194, column: 36, scope: !5064)
!5078 = !DILocation(line: 194, column: 57, scope: !5064)
!5079 = !DILocation(line: 194, column: 9, scope: !5064)
!5080 = !DILocation(line: 194, column: 2, scope: !5064)
!5081 = distinct !DISubprogram(name: "MaskLayers_active_set", scope: !3, file: !3, line: 2160, type: !2478, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5082 = !DILocalVariable(name: "ptr", arg: 1, scope: !5081, file: !3, line: 2160, type: !453)
!5083 = !DILocation(line: 2160, column: 40, scope: !5081)
!5084 = !DILocalVariable(name: "value", arg: 2, scope: !5081, file: !3, line: 2160, type: !454)
!5085 = !DILocation(line: 2160, column: 56, scope: !5081)
!5086 = !DILocation(line: 2162, column: 28, scope: !5081)
!5087 = !DILocation(line: 2162, column: 2, scope: !5081)
!5088 = !DILocation(line: 2163, column: 1, scope: !5081)
!5089 = distinct !DISubprogram(name: "rna_Mask_layer_active_set", scope: !2488, file: !2488, line: 197, type: !2478, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5090 = !DILocalVariable(name: "ptr", arg: 1, scope: !5089, file: !2488, line: 197, type: !453)
!5091 = !DILocation(line: 197, column: 51, scope: !5089)
!5092 = !DILocalVariable(name: "value", arg: 2, scope: !5089, file: !2488, line: 197, type: !454)
!5093 = !DILocation(line: 197, column: 67, scope: !5089)
!5094 = !DILocalVariable(name: "mask", scope: !5089, file: !2488, line: 199, type: !1844)
!5095 = !DILocation(line: 199, column: 8, scope: !5089)
!5096 = !DILocation(line: 199, column: 23, scope: !5089)
!5097 = !DILocation(line: 199, column: 28, scope: !5089)
!5098 = !DILocation(line: 199, column: 31, scope: !5089)
!5099 = !DILocation(line: 199, column: 15, scope: !5089)
!5100 = !DILocalVariable(name: "masklay", scope: !5089, file: !2488, line: 200, type: !1824)
!5101 = !DILocation(line: 200, column: 13, scope: !5089)
!5102 = !DILocation(line: 200, column: 42, scope: !5089)
!5103 = !DILocation(line: 200, column: 23, scope: !5089)
!5104 = !DILocation(line: 202, column: 28, scope: !5089)
!5105 = !DILocation(line: 202, column: 34, scope: !5089)
!5106 = !DILocation(line: 202, column: 2, scope: !5089)
!5107 = !DILocation(line: 203, column: 1, scope: !5089)
!5108 = distinct !DISubprogram(name: "MaskSplines_new", scope: !3, file: !3, line: 2169, type: !5109, scopeLine: 2170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!1815, !211, !1829}
!5111 = !DILocalVariable(name: "_selfid", arg: 1, scope: !5108, file: !3, line: 2169, type: !211)
!5112 = !DILocation(line: 2169, column: 47, scope: !5108)
!5113 = !DILocalVariable(name: "_self", arg: 2, scope: !5108, file: !3, line: 2169, type: !1829)
!5114 = !DILocation(line: 2169, column: 74, scope: !5108)
!5115 = !DILocation(line: 2171, column: 34, scope: !5108)
!5116 = !DILocation(line: 2171, column: 43, scope: !5108)
!5117 = !DILocation(line: 2171, column: 9, scope: !5108)
!5118 = !DILocation(line: 2171, column: 2, scope: !5108)
!5119 = distinct !DISubprogram(name: "rna_MaskLayer_spline_new", scope: !2488, file: !2488, line: 426, type: !5120, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!1810, !248, !1824}
!5122 = !DILocalVariable(name: "id", arg: 1, scope: !5119, file: !2488, line: 426, type: !248)
!5123 = !DILocation(line: 426, column: 49, scope: !5119)
!5124 = !DILocalVariable(name: "mask_layer", arg: 2, scope: !5119, file: !2488, line: 426, type: !1824)
!5125 = !DILocation(line: 426, column: 64, scope: !5119)
!5126 = !DILocalVariable(name: "mask", scope: !5119, file: !2488, line: 428, type: !1844)
!5127 = !DILocation(line: 428, column: 8, scope: !5119)
!5128 = !DILocation(line: 428, column: 24, scope: !5119)
!5129 = !DILocation(line: 428, column: 15, scope: !5119)
!5130 = !DILocalVariable(name: "new_spline", scope: !5119, file: !2488, line: 429, type: !1810)
!5131 = !DILocation(line: 429, column: 14, scope: !5119)
!5132 = !DILocation(line: 431, column: 35, scope: !5119)
!5133 = !DILocation(line: 431, column: 15, scope: !5119)
!5134 = !DILocation(line: 431, column: 13, scope: !5119)
!5135 = !DILocation(line: 433, column: 44, scope: !5119)
!5136 = !DILocation(line: 433, column: 2, scope: !5119)
!5137 = !DILocation(line: 435, column: 9, scope: !5119)
!5138 = !DILocation(line: 435, column: 2, scope: !5119)
!5139 = distinct !DISubprogram(name: "MaskSplines_new_call", scope: !3, file: !3, line: 2174, type: !5140, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !5142, !5144, !453, !455}
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5143, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !330, line: 69, baseType: !440)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !66, line: 112, baseType: !306)
!5146 = !DILocalVariable(name: "C", arg: 1, scope: !5139, file: !3, line: 2174, type: !5142)
!5147 = !DILocation(line: 2174, column: 37, scope: !5139)
!5148 = !DILocalVariable(name: "reports", arg: 2, scope: !5139, file: !3, line: 2174, type: !5144)
!5149 = !DILocation(line: 2174, column: 52, scope: !5139)
!5150 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5139, file: !3, line: 2174, type: !453)
!5151 = !DILocation(line: 2174, column: 73, scope: !5139)
!5152 = !DILocalVariable(name: "_parms", arg: 4, scope: !5139, file: !3, line: 2174, type: !455)
!5153 = !DILocation(line: 2174, column: 94, scope: !5139)
!5154 = !DILocalVariable(name: "_selfid", scope: !5139, file: !3, line: 2176, type: !211)
!5155 = !DILocation(line: 2176, column: 13, scope: !5139)
!5156 = !DILocalVariable(name: "_self", scope: !5139, file: !3, line: 2177, type: !1829)
!5157 = !DILocation(line: 2177, column: 20, scope: !5139)
!5158 = !DILocalVariable(name: "spline", scope: !5139, file: !3, line: 2178, type: !1815)
!5159 = !DILocation(line: 2178, column: 21, scope: !5139)
!5160 = !DILocalVariable(name: "_data", scope: !5139, file: !3, line: 2179, type: !167)
!5161 = !DILocation(line: 2179, column: 8, scope: !5139)
!5162 = !DILocalVariable(name: "_retdata", scope: !5139, file: !3, line: 2179, type: !167)
!5163 = !DILocation(line: 2179, column: 16, scope: !5139)
!5164 = !DILocation(line: 2181, column: 25, scope: !5139)
!5165 = !DILocation(line: 2181, column: 31, scope: !5139)
!5166 = !DILocation(line: 2181, column: 34, scope: !5139)
!5167 = !DILocation(line: 2181, column: 12, scope: !5139)
!5168 = !DILocation(line: 2181, column: 10, scope: !5139)
!5169 = !DILocation(line: 2182, column: 30, scope: !5139)
!5170 = !DILocation(line: 2182, column: 36, scope: !5139)
!5171 = !DILocation(line: 2182, column: 10, scope: !5139)
!5172 = !DILocation(line: 2182, column: 8, scope: !5139)
!5173 = !DILocation(line: 2183, column: 18, scope: !5139)
!5174 = !DILocation(line: 2183, column: 26, scope: !5139)
!5175 = !DILocation(line: 2183, column: 8, scope: !5139)
!5176 = !DILocation(line: 2184, column: 13, scope: !5139)
!5177 = !DILocation(line: 2184, column: 11, scope: !5139)
!5178 = !DILocation(line: 2186, column: 36, scope: !5139)
!5179 = !DILocation(line: 2186, column: 45, scope: !5139)
!5180 = !DILocation(line: 2186, column: 11, scope: !5139)
!5181 = !DILocation(line: 2186, column: 9, scope: !5139)
!5182 = !DILocation(line: 2187, column: 38, scope: !5139)
!5183 = !DILocation(line: 2187, column: 26, scope: !5139)
!5184 = !DILocation(line: 2187, column: 2, scope: !5139)
!5185 = !DILocation(line: 2187, column: 36, scope: !5139)
!5186 = !DILocation(line: 2188, column: 1, scope: !5139)
!5187 = distinct !DISubprogram(name: "MaskSplines_remove", scope: !3, file: !3, line: 2190, type: !5188, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5188 = !DISubroutineType(types: !5189)
!5189 = !{null, !211, !1829, !5144, !117}
!5190 = !DILocalVariable(name: "_selfid", arg: 1, scope: !5187, file: !3, line: 2190, type: !211)
!5191 = !DILocation(line: 2190, column: 36, scope: !5187)
!5192 = !DILocalVariable(name: "_self", arg: 2, scope: !5187, file: !3, line: 2190, type: !1829)
!5193 = !DILocation(line: 2190, column: 63, scope: !5187)
!5194 = !DILocalVariable(name: "reports", arg: 3, scope: !5187, file: !3, line: 2190, type: !5144)
!5195 = !DILocation(line: 2190, column: 82, scope: !5187)
!5196 = !DILocalVariable(name: "spline", arg: 4, scope: !5187, file: !3, line: 2190, type: !117)
!5197 = !DILocation(line: 2190, column: 110, scope: !5187)
!5198 = !DILocation(line: 2192, column: 30, scope: !5187)
!5199 = !DILocation(line: 2192, column: 39, scope: !5187)
!5200 = !DILocation(line: 2192, column: 46, scope: !5187)
!5201 = !DILocation(line: 2192, column: 55, scope: !5187)
!5202 = !DILocation(line: 2192, column: 2, scope: !5187)
!5203 = !DILocation(line: 2193, column: 1, scope: !5187)
!5204 = distinct !DISubprogram(name: "rna_MaskLayer_spline_remove", scope: !2488, file: !2488, line: 438, type: !5205, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{null, !248, !1824, !5144, !453}
!5207 = !DILocalVariable(name: "id", arg: 1, scope: !5204, file: !2488, line: 438, type: !248)
!5208 = !DILocation(line: 438, column: 45, scope: !5204)
!5209 = !DILocalVariable(name: "mask_layer", arg: 2, scope: !5204, file: !2488, line: 438, type: !1824)
!5210 = !DILocation(line: 438, column: 60, scope: !5204)
!5211 = !DILocalVariable(name: "reports", arg: 3, scope: !5204, file: !2488, line: 438, type: !5144)
!5212 = !DILocation(line: 438, column: 84, scope: !5204)
!5213 = !DILocalVariable(name: "spline_ptr", arg: 4, scope: !5204, file: !2488, line: 438, type: !453)
!5214 = !DILocation(line: 438, column: 105, scope: !5204)
!5215 = !DILocalVariable(name: "mask", scope: !5204, file: !2488, line: 440, type: !1844)
!5216 = !DILocation(line: 440, column: 8, scope: !5204)
!5217 = !DILocation(line: 440, column: 24, scope: !5204)
!5218 = !DILocation(line: 440, column: 15, scope: !5204)
!5219 = !DILocalVariable(name: "spline", scope: !5204, file: !2488, line: 441, type: !1810)
!5220 = !DILocation(line: 441, column: 14, scope: !5204)
!5221 = !DILocation(line: 441, column: 23, scope: !5204)
!5222 = !DILocation(line: 441, column: 35, scope: !5204)
!5223 = !DILocation(line: 443, column: 29, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5204, file: !2488, line: 443, column: 6)
!5225 = !DILocation(line: 443, column: 41, scope: !5224)
!5226 = !DILocation(line: 443, column: 6, scope: !5224)
!5227 = !DILocation(line: 443, column: 49, scope: !5224)
!5228 = !DILocation(line: 443, column: 6, scope: !5204)
!5229 = !DILocation(line: 444, column: 15, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5224, file: !2488, line: 443, column: 59)
!5231 = !DILocation(line: 444, column: 84, scope: !5230)
!5232 = !DILocation(line: 444, column: 96, scope: !5230)
!5233 = !DILocation(line: 444, column: 3, scope: !5230)
!5234 = !DILocation(line: 445, column: 3, scope: !5230)
!5235 = !DILocation(line: 448, column: 2, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5204, file: !2488, line: 448, column: 2)
!5237 = !DILocation(line: 450, column: 21, scope: !5204)
!5238 = !DILocation(line: 450, column: 27, scope: !5204)
!5239 = !DILocation(line: 450, column: 2, scope: !5204)
!5240 = !DILocation(line: 451, column: 1, scope: !5204)
!5241 = distinct !DISubprogram(name: "MaskSplines_remove_call", scope: !3, file: !3, line: 2195, type: !5140, scopeLine: 2196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5242 = !DILocalVariable(name: "C", arg: 1, scope: !5241, file: !3, line: 2195, type: !5142)
!5243 = !DILocation(line: 2195, column: 40, scope: !5241)
!5244 = !DILocalVariable(name: "reports", arg: 2, scope: !5241, file: !3, line: 2195, type: !5144)
!5245 = !DILocation(line: 2195, column: 55, scope: !5241)
!5246 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5241, file: !3, line: 2195, type: !453)
!5247 = !DILocation(line: 2195, column: 76, scope: !5241)
!5248 = !DILocalVariable(name: "_parms", arg: 4, scope: !5241, file: !3, line: 2195, type: !455)
!5249 = !DILocation(line: 2195, column: 97, scope: !5241)
!5250 = !DILocalVariable(name: "_selfid", scope: !5241, file: !3, line: 2197, type: !211)
!5251 = !DILocation(line: 2197, column: 13, scope: !5241)
!5252 = !DILocalVariable(name: "_self", scope: !5241, file: !3, line: 2198, type: !1829)
!5253 = !DILocation(line: 2198, column: 20, scope: !5241)
!5254 = !DILocalVariable(name: "spline", scope: !5241, file: !3, line: 2199, type: !117)
!5255 = !DILocation(line: 2199, column: 21, scope: !5241)
!5256 = !DILocalVariable(name: "_data", scope: !5241, file: !3, line: 2200, type: !167)
!5257 = !DILocation(line: 2200, column: 8, scope: !5241)
!5258 = !DILocation(line: 2202, column: 25, scope: !5241)
!5259 = !DILocation(line: 2202, column: 31, scope: !5241)
!5260 = !DILocation(line: 2202, column: 34, scope: !5241)
!5261 = !DILocation(line: 2202, column: 12, scope: !5241)
!5262 = !DILocation(line: 2202, column: 10, scope: !5241)
!5263 = !DILocation(line: 2203, column: 30, scope: !5241)
!5264 = !DILocation(line: 2203, column: 36, scope: !5241)
!5265 = !DILocation(line: 2203, column: 10, scope: !5241)
!5266 = !DILocation(line: 2203, column: 8, scope: !5241)
!5267 = !DILocation(line: 2204, column: 18, scope: !5241)
!5268 = !DILocation(line: 2204, column: 26, scope: !5241)
!5269 = !DILocation(line: 2204, column: 8, scope: !5241)
!5270 = !DILocation(line: 2205, column: 35, scope: !5241)
!5271 = !DILocation(line: 2205, column: 11, scope: !5241)
!5272 = !DILocation(line: 2205, column: 9, scope: !5241)
!5273 = !DILocation(line: 2207, column: 30, scope: !5241)
!5274 = !DILocation(line: 2207, column: 39, scope: !5241)
!5275 = !DILocation(line: 2207, column: 46, scope: !5241)
!5276 = !DILocation(line: 2207, column: 55, scope: !5241)
!5277 = !DILocation(line: 2207, column: 2, scope: !5241)
!5278 = !DILocation(line: 2208, column: 1, scope: !5241)
!5279 = distinct !DISubprogram(name: "MaskSplinePoints_add", scope: !3, file: !3, line: 2215, type: !5280, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{null, !211, !1815, !48}
!5282 = !DILocalVariable(name: "_selfid", arg: 1, scope: !5279, file: !3, line: 2215, type: !211)
!5283 = !DILocation(line: 2215, column: 38, scope: !5279)
!5284 = !DILocalVariable(name: "_self", arg: 2, scope: !5279, file: !3, line: 2215, type: !1815)
!5285 = !DILocation(line: 2215, column: 66, scope: !5279)
!5286 = !DILocalVariable(name: "count", arg: 3, scope: !5279, file: !3, line: 2215, type: !48)
!5287 = !DILocation(line: 2215, column: 77, scope: !5279)
!5288 = !DILocation(line: 2217, column: 28, scope: !5279)
!5289 = !DILocation(line: 2217, column: 37, scope: !5279)
!5290 = !DILocation(line: 2217, column: 44, scope: !5279)
!5291 = !DILocation(line: 2217, column: 2, scope: !5279)
!5292 = !DILocation(line: 2218, column: 1, scope: !5279)
!5293 = distinct !DISubprogram(name: "rna_MaskSpline_points_add", scope: !2488, file: !2488, line: 476, type: !5294, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5294 = !DISubroutineType(types: !5295)
!5295 = !{null, !248, !1810, !48}
!5296 = !DILocalVariable(name: "id", arg: 1, scope: !5293, file: !2488, line: 476, type: !248)
!5297 = !DILocation(line: 476, column: 43, scope: !5293)
!5298 = !DILocalVariable(name: "spline", arg: 2, scope: !5293, file: !2488, line: 476, type: !1810)
!5299 = !DILocation(line: 476, column: 59, scope: !5293)
!5300 = !DILocalVariable(name: "count", arg: 3, scope: !5293, file: !2488, line: 476, type: !48)
!5301 = !DILocation(line: 476, column: 71, scope: !5293)
!5302 = !DILocalVariable(name: "mask", scope: !5293, file: !2488, line: 478, type: !1844)
!5303 = !DILocation(line: 478, column: 8, scope: !5293)
!5304 = !DILocation(line: 478, column: 24, scope: !5293)
!5305 = !DILocation(line: 478, column: 15, scope: !5293)
!5306 = !DILocalVariable(name: "layer", scope: !5293, file: !2488, line: 479, type: !1824)
!5307 = !DILocation(line: 479, column: 13, scope: !5293)
!5308 = !DILocalVariable(name: "active_point_index", scope: !5293, file: !2488, line: 480, type: !48)
!5309 = !DILocation(line: 480, column: 6, scope: !5293)
!5310 = !DILocalVariable(name: "i", scope: !5293, file: !2488, line: 481, type: !48)
!5311 = !DILocation(line: 481, column: 6, scope: !5293)
!5312 = !DILocalVariable(name: "spline_shape_index", scope: !5293, file: !2488, line: 481, type: !48)
!5313 = !DILocation(line: 481, column: 9, scope: !5293)
!5314 = !DILocation(line: 483, column: 6, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 483, column: 6)
!5316 = !DILocation(line: 483, column: 12, scope: !5315)
!5317 = !DILocation(line: 483, column: 6, scope: !5293)
!5318 = !DILocation(line: 484, column: 3, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5315, file: !2488, line: 483, column: 18)
!5320 = !DILocation(line: 487, column: 15, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 487, column: 2)
!5322 = !DILocation(line: 487, column: 21, scope: !5321)
!5323 = !DILocation(line: 487, column: 32, scope: !5321)
!5324 = !DILocation(line: 487, column: 13, scope: !5321)
!5325 = !DILocation(line: 487, column: 7, scope: !5321)
!5326 = !DILocation(line: 487, column: 39, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5321, file: !2488, line: 487, column: 2)
!5328 = !DILocation(line: 487, column: 2, scope: !5321)
!5329 = !DILocation(line: 488, column: 22, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !2488, line: 488, column: 7)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !2488, line: 487, column: 67)
!5332 = !DILocation(line: 488, column: 29, scope: !5330)
!5333 = !DILocation(line: 488, column: 38, scope: !5330)
!5334 = !DILocation(line: 488, column: 7, scope: !5330)
!5335 = !DILocation(line: 488, column: 46, scope: !5330)
!5336 = !DILocation(line: 488, column: 7, scope: !5331)
!5337 = !DILocation(line: 489, column: 4, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5330, file: !2488, line: 488, column: 53)
!5339 = !DILocation(line: 491, column: 2, scope: !5331)
!5340 = !DILocation(line: 487, column: 54, scope: !5327)
!5341 = !DILocation(line: 487, column: 61, scope: !5327)
!5342 = !DILocation(line: 487, column: 52, scope: !5327)
!5343 = !DILocation(line: 487, column: 2, scope: !5327)
!5344 = distinct !{!5344, !5328, !5345}
!5345 = !DILocation(line: 491, column: 2, scope: !5321)
!5346 = !DILocation(line: 493, column: 7, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 493, column: 6)
!5348 = !DILocation(line: 493, column: 6, scope: !5293)
!5349 = !DILocation(line: 496, column: 3, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !2488, line: 493, column: 14)
!5351 = !DILocation(line: 499, column: 6, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 499, column: 6)
!5353 = !DILocation(line: 499, column: 13, scope: !5352)
!5354 = !DILocation(line: 499, column: 27, scope: !5352)
!5355 = !DILocation(line: 499, column: 24, scope: !5352)
!5356 = !DILocation(line: 499, column: 6, scope: !5293)
!5357 = !DILocation(line: 500, column: 24, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5352, file: !2488, line: 499, column: 35)
!5359 = !DILocation(line: 500, column: 31, scope: !5358)
!5360 = !DILocation(line: 500, column: 43, scope: !5358)
!5361 = !DILocation(line: 500, column: 51, scope: !5358)
!5362 = !DILocation(line: 500, column: 41, scope: !5358)
!5363 = !DILocation(line: 500, column: 22, scope: !5358)
!5364 = !DILocation(line: 501, column: 2, scope: !5358)
!5365 = !DILocation(line: 503, column: 19, scope: !5293)
!5366 = !DILocation(line: 503, column: 2, scope: !5293)
!5367 = !DILocation(line: 503, column: 10, scope: !5293)
!5368 = !DILocation(line: 503, column: 17, scope: !5293)
!5369 = !DILocation(line: 504, column: 23, scope: !5293)
!5370 = !DILocation(line: 504, column: 2, scope: !5293)
!5371 = !DILocation(line: 504, column: 10, scope: !5293)
!5372 = !DILocation(line: 504, column: 20, scope: !5293)
!5373 = !DILocation(line: 506, column: 6, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 506, column: 6)
!5375 = !DILocation(line: 506, column: 25, scope: !5374)
!5376 = !DILocation(line: 506, column: 6, scope: !5293)
!5377 = !DILocation(line: 507, column: 22, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5374, file: !2488, line: 506, column: 31)
!5379 = !DILocation(line: 507, column: 30, scope: !5378)
!5380 = !DILocation(line: 507, column: 39, scope: !5378)
!5381 = !DILocation(line: 507, column: 37, scope: !5378)
!5382 = !DILocation(line: 507, column: 3, scope: !5378)
!5383 = !DILocation(line: 507, column: 10, scope: !5378)
!5384 = !DILocation(line: 507, column: 20, scope: !5378)
!5385 = !DILocation(line: 508, column: 2, scope: !5378)
!5386 = !DILocation(line: 510, column: 60, scope: !5293)
!5387 = !DILocation(line: 510, column: 67, scope: !5293)
!5388 = !DILocation(line: 510, column: 23, scope: !5293)
!5389 = !DILocation(line: 510, column: 21, scope: !5293)
!5390 = !DILocation(line: 512, column: 9, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5293, file: !2488, line: 512, column: 2)
!5392 = !DILocation(line: 512, column: 7, scope: !5391)
!5393 = !DILocation(line: 512, column: 14, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !2488, line: 512, column: 2)
!5395 = !DILocation(line: 512, column: 18, scope: !5394)
!5396 = !DILocation(line: 512, column: 16, scope: !5394)
!5397 = !DILocation(line: 512, column: 2, scope: !5391)
!5398 = !DILocalVariable(name: "point_index", scope: !5399, file: !2488, line: 513, type: !48)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !2488, line: 512, column: 30)
!5400 = !DILocation(line: 513, column: 7, scope: !5399)
!5401 = !DILocation(line: 513, column: 21, scope: !5399)
!5402 = !DILocation(line: 513, column: 29, scope: !5399)
!5403 = !DILocation(line: 513, column: 41, scope: !5399)
!5404 = !DILocation(line: 513, column: 39, scope: !5399)
!5405 = !DILocation(line: 513, column: 49, scope: !5399)
!5406 = !DILocation(line: 513, column: 47, scope: !5399)
!5407 = !DILocalVariable(name: "new_point", scope: !5399, file: !2488, line: 514, type: !1779)
!5408 = !DILocation(line: 514, column: 20, scope: !5399)
!5409 = !DILocation(line: 514, column: 32, scope: !5399)
!5410 = !DILocation(line: 514, column: 40, scope: !5399)
!5411 = !DILocation(line: 514, column: 49, scope: !5399)
!5412 = !DILocation(line: 514, column: 47, scope: !5399)
!5413 = !DILocation(line: 515, column: 24, scope: !5399)
!5414 = !DILocation(line: 515, column: 35, scope: !5399)
!5415 = !DILocation(line: 515, column: 40, scope: !5399)
!5416 = !DILocation(line: 515, column: 43, scope: !5399)
!5417 = !DILocation(line: 515, column: 3, scope: !5399)
!5418 = !DILocation(line: 515, column: 14, scope: !5399)
!5419 = !DILocation(line: 515, column: 19, scope: !5399)
!5420 = !DILocation(line: 515, column: 22, scope: !5399)
!5421 = !DILocation(line: 516, column: 35, scope: !5399)
!5422 = !DILocation(line: 516, column: 43, scope: !5399)
!5423 = !DILocation(line: 516, column: 3, scope: !5399)
!5424 = !DILocation(line: 517, column: 25, scope: !5399)
!5425 = !DILocation(line: 517, column: 36, scope: !5399)
!5426 = !DILocation(line: 517, column: 3, scope: !5399)
!5427 = !DILocation(line: 520, column: 36, scope: !5399)
!5428 = !DILocation(line: 520, column: 43, scope: !5399)
!5429 = !DILocation(line: 520, column: 64, scope: !5399)
!5430 = !DILocation(line: 520, column: 62, scope: !5399)
!5431 = !DILocation(line: 520, column: 3, scope: !5399)
!5432 = !DILocation(line: 521, column: 2, scope: !5399)
!5433 = !DILocation(line: 512, column: 26, scope: !5394)
!5434 = !DILocation(line: 512, column: 2, scope: !5394)
!5435 = distinct !{!5435, !5397, !5436}
!5436 = !DILocation(line: 521, column: 2, scope: !5391)
!5437 = !DILocation(line: 523, column: 42, scope: !5293)
!5438 = !DILocation(line: 523, column: 2, scope: !5293)
!5439 = !DILocation(line: 524, column: 21, scope: !5293)
!5440 = !DILocation(line: 524, column: 27, scope: !5293)
!5441 = !DILocation(line: 524, column: 2, scope: !5293)
!5442 = !DILocation(line: 525, column: 1, scope: !5293)
!5443 = distinct !DISubprogram(name: "MaskSplinePoints_add_call", scope: !3, file: !3, line: 2220, type: !5140, scopeLine: 2221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5444 = !DILocalVariable(name: "C", arg: 1, scope: !5443, file: !3, line: 2220, type: !5142)
!5445 = !DILocation(line: 2220, column: 42, scope: !5443)
!5446 = !DILocalVariable(name: "reports", arg: 2, scope: !5443, file: !3, line: 2220, type: !5144)
!5447 = !DILocation(line: 2220, column: 57, scope: !5443)
!5448 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5443, file: !3, line: 2220, type: !453)
!5449 = !DILocation(line: 2220, column: 78, scope: !5443)
!5450 = !DILocalVariable(name: "_parms", arg: 4, scope: !5443, file: !3, line: 2220, type: !455)
!5451 = !DILocation(line: 2220, column: 99, scope: !5443)
!5452 = !DILocalVariable(name: "_selfid", scope: !5443, file: !3, line: 2222, type: !211)
!5453 = !DILocation(line: 2222, column: 13, scope: !5443)
!5454 = !DILocalVariable(name: "_self", scope: !5443, file: !3, line: 2223, type: !1815)
!5455 = !DILocation(line: 2223, column: 21, scope: !5443)
!5456 = !DILocalVariable(name: "count", scope: !5443, file: !3, line: 2224, type: !48)
!5457 = !DILocation(line: 2224, column: 6, scope: !5443)
!5458 = !DILocalVariable(name: "_data", scope: !5443, file: !3, line: 2225, type: !167)
!5459 = !DILocation(line: 2225, column: 8, scope: !5443)
!5460 = !DILocation(line: 2227, column: 25, scope: !5443)
!5461 = !DILocation(line: 2227, column: 31, scope: !5443)
!5462 = !DILocation(line: 2227, column: 34, scope: !5443)
!5463 = !DILocation(line: 2227, column: 12, scope: !5443)
!5464 = !DILocation(line: 2227, column: 10, scope: !5443)
!5465 = !DILocation(line: 2228, column: 31, scope: !5443)
!5466 = !DILocation(line: 2228, column: 37, scope: !5443)
!5467 = !DILocation(line: 2228, column: 10, scope: !5443)
!5468 = !DILocation(line: 2228, column: 8, scope: !5443)
!5469 = !DILocation(line: 2229, column: 18, scope: !5443)
!5470 = !DILocation(line: 2229, column: 26, scope: !5443)
!5471 = !DILocation(line: 2229, column: 8, scope: !5443)
!5472 = !DILocation(line: 2230, column: 19, scope: !5443)
!5473 = !DILocation(line: 2230, column: 10, scope: !5443)
!5474 = !DILocation(line: 2230, column: 8, scope: !5443)
!5475 = !DILocation(line: 2232, column: 28, scope: !5443)
!5476 = !DILocation(line: 2232, column: 37, scope: !5443)
!5477 = !DILocation(line: 2232, column: 44, scope: !5443)
!5478 = !DILocation(line: 2232, column: 2, scope: !5443)
!5479 = !DILocation(line: 2233, column: 1, scope: !5443)
!5480 = distinct !DISubprogram(name: "MaskSplinePoints_remove", scope: !3, file: !3, line: 2235, type: !5481, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5481 = !DISubroutineType(types: !5482)
!5482 = !{null, !211, !1815, !5144, !117}
!5483 = !DILocalVariable(name: "_selfid", arg: 1, scope: !5480, file: !3, line: 2235, type: !211)
!5484 = !DILocation(line: 2235, column: 41, scope: !5480)
!5485 = !DILocalVariable(name: "_self", arg: 2, scope: !5480, file: !3, line: 2235, type: !1815)
!5486 = !DILocation(line: 2235, column: 69, scope: !5480)
!5487 = !DILocalVariable(name: "reports", arg: 3, scope: !5480, file: !3, line: 2235, type: !5144)
!5488 = !DILocation(line: 2235, column: 88, scope: !5480)
!5489 = !DILocalVariable(name: "point", arg: 4, scope: !5480, file: !3, line: 2235, type: !117)
!5490 = !DILocation(line: 2235, column: 116, scope: !5480)
!5491 = !DILocation(line: 2237, column: 30, scope: !5480)
!5492 = !DILocation(line: 2237, column: 39, scope: !5480)
!5493 = !DILocation(line: 2237, column: 46, scope: !5480)
!5494 = !DILocation(line: 2237, column: 55, scope: !5480)
!5495 = !DILocation(line: 2237, column: 2, scope: !5480)
!5496 = !DILocation(line: 2238, column: 1, scope: !5480)
!5497 = distinct !DISubprogram(name: "rna_MaskSpline_point_remove", scope: !2488, file: !2488, line: 527, type: !5498, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{null, !248, !1810, !5144, !453}
!5500 = !DILocalVariable(name: "id", arg: 1, scope: !5497, file: !2488, line: 527, type: !248)
!5501 = !DILocation(line: 527, column: 45, scope: !5497)
!5502 = !DILocalVariable(name: "spline", arg: 2, scope: !5497, file: !2488, line: 527, type: !1810)
!5503 = !DILocation(line: 527, column: 61, scope: !5497)
!5504 = !DILocalVariable(name: "reports", arg: 3, scope: !5497, file: !2488, line: 527, type: !5144)
!5505 = !DILocation(line: 527, column: 81, scope: !5497)
!5506 = !DILocalVariable(name: "point_ptr", arg: 4, scope: !5497, file: !2488, line: 527, type: !453)
!5507 = !DILocation(line: 527, column: 102, scope: !5497)
!5508 = !DILocalVariable(name: "mask", scope: !5497, file: !2488, line: 529, type: !1844)
!5509 = !DILocation(line: 529, column: 8, scope: !5497)
!5510 = !DILocation(line: 529, column: 24, scope: !5497)
!5511 = !DILocation(line: 529, column: 15, scope: !5497)
!5512 = !DILocalVariable(name: "point", scope: !5497, file: !2488, line: 530, type: !1779)
!5513 = !DILocation(line: 530, column: 19, scope: !5497)
!5514 = !DILocation(line: 530, column: 27, scope: !5497)
!5515 = !DILocation(line: 530, column: 38, scope: !5497)
!5516 = !DILocalVariable(name: "new_point_array", scope: !5497, file: !2488, line: 531, type: !1779)
!5517 = !DILocation(line: 531, column: 19, scope: !5497)
!5518 = !DILocalVariable(name: "layer", scope: !5497, file: !2488, line: 532, type: !1824)
!5519 = !DILocation(line: 532, column: 13, scope: !5497)
!5520 = !DILocalVariable(name: "active_point_index", scope: !5497, file: !2488, line: 533, type: !48)
!5521 = !DILocation(line: 533, column: 6, scope: !5497)
!5522 = !DILocalVariable(name: "point_index", scope: !5497, file: !2488, line: 534, type: !48)
!5523 = !DILocation(line: 534, column: 6, scope: !5497)
!5524 = !DILocation(line: 536, column: 15, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 536, column: 2)
!5526 = !DILocation(line: 536, column: 21, scope: !5525)
!5527 = !DILocation(line: 536, column: 32, scope: !5525)
!5528 = !DILocation(line: 536, column: 13, scope: !5525)
!5529 = !DILocation(line: 536, column: 7, scope: !5525)
!5530 = !DILocation(line: 536, column: 39, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5525, file: !2488, line: 536, column: 2)
!5532 = !DILocation(line: 536, column: 2, scope: !5525)
!5533 = !DILocation(line: 537, column: 22, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5535, file: !2488, line: 537, column: 7)
!5535 = distinct !DILexicalBlock(scope: !5531, file: !2488, line: 536, column: 67)
!5536 = !DILocation(line: 537, column: 29, scope: !5534)
!5537 = !DILocation(line: 537, column: 38, scope: !5534)
!5538 = !DILocation(line: 537, column: 7, scope: !5534)
!5539 = !DILocation(line: 537, column: 46, scope: !5534)
!5540 = !DILocation(line: 537, column: 7, scope: !5535)
!5541 = !DILocation(line: 538, column: 4, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5534, file: !2488, line: 537, column: 53)
!5543 = !DILocation(line: 540, column: 2, scope: !5535)
!5544 = !DILocation(line: 536, column: 54, scope: !5531)
!5545 = !DILocation(line: 536, column: 61, scope: !5531)
!5546 = !DILocation(line: 536, column: 52, scope: !5531)
!5547 = !DILocation(line: 536, column: 2, scope: !5531)
!5548 = distinct !{!5548, !5532, !5549}
!5549 = !DILocation(line: 540, column: 2, scope: !5525)
!5550 = !DILocation(line: 542, column: 7, scope: !5551)
!5551 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 542, column: 6)
!5552 = !DILocation(line: 542, column: 6, scope: !5497)
!5553 = !DILocation(line: 544, column: 14, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5551, file: !2488, line: 542, column: 14)
!5555 = !DILocation(line: 544, column: 3, scope: !5554)
!5556 = !DILocation(line: 545, column: 3, scope: !5554)
!5557 = !DILocation(line: 548, column: 6, scope: !5558)
!5558 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 548, column: 6)
!5559 = !DILocation(line: 548, column: 14, scope: !5558)
!5560 = !DILocation(line: 548, column: 22, scope: !5558)
!5561 = !DILocation(line: 548, column: 12, scope: !5558)
!5562 = !DILocation(line: 548, column: 29, scope: !5558)
!5563 = !DILocation(line: 548, column: 32, scope: !5558)
!5564 = !DILocation(line: 548, column: 41, scope: !5558)
!5565 = !DILocation(line: 548, column: 49, scope: !5558)
!5566 = !DILocation(line: 548, column: 58, scope: !5558)
!5567 = !DILocation(line: 548, column: 66, scope: !5558)
!5568 = !DILocation(line: 548, column: 56, scope: !5558)
!5569 = !DILocation(line: 548, column: 38, scope: !5558)
!5570 = !DILocation(line: 548, column: 6, scope: !5497)
!5571 = !DILocation(line: 549, column: 14, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5558, file: !2488, line: 548, column: 77)
!5573 = !DILocation(line: 549, column: 3, scope: !5572)
!5574 = !DILocation(line: 550, column: 3, scope: !5572)
!5575 = !DILocation(line: 553, column: 6, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 553, column: 6)
!5577 = !DILocation(line: 553, column: 13, scope: !5576)
!5578 = !DILocation(line: 553, column: 27, scope: !5576)
!5579 = !DILocation(line: 553, column: 24, scope: !5576)
!5580 = !DILocation(line: 553, column: 6, scope: !5497)
!5581 = !DILocation(line: 554, column: 24, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5576, file: !2488, line: 553, column: 35)
!5583 = !DILocation(line: 554, column: 31, scope: !5582)
!5584 = !DILocation(line: 554, column: 43, scope: !5582)
!5585 = !DILocation(line: 554, column: 51, scope: !5582)
!5586 = !DILocation(line: 554, column: 41, scope: !5582)
!5587 = !DILocation(line: 554, column: 22, scope: !5582)
!5588 = !DILocation(line: 555, column: 2, scope: !5582)
!5589 = !DILocation(line: 557, column: 16, scope: !5497)
!5590 = !DILocation(line: 557, column: 24, scope: !5497)
!5591 = !DILocation(line: 557, column: 32, scope: !5497)
!5592 = !DILocation(line: 557, column: 22, scope: !5497)
!5593 = !DILocation(line: 557, column: 14, scope: !5497)
!5594 = !DILocation(line: 559, column: 20, scope: !5497)
!5595 = !DILocation(line: 559, column: 59, scope: !5497)
!5596 = !DILocation(line: 559, column: 67, scope: !5497)
!5597 = !DILocation(line: 559, column: 77, scope: !5497)
!5598 = !DILocation(line: 559, column: 58, scope: !5497)
!5599 = !DILocation(line: 559, column: 56, scope: !5497)
!5600 = !DILocation(line: 559, column: 18, scope: !5497)
!5601 = !DILocation(line: 561, column: 9, scope: !5497)
!5602 = !DILocation(line: 561, column: 2, scope: !5497)
!5603 = !DILocation(line: 561, column: 26, scope: !5497)
!5604 = !DILocation(line: 561, column: 34, scope: !5497)
!5605 = !DILocation(line: 561, column: 68, scope: !5497)
!5606 = !DILocation(line: 561, column: 66, scope: !5497)
!5607 = !DILocation(line: 562, column: 9, scope: !5497)
!5608 = !DILocation(line: 562, column: 27, scope: !5497)
!5609 = !DILocation(line: 562, column: 25, scope: !5497)
!5610 = !DILocation(line: 562, column: 2, scope: !5497)
!5611 = !DILocation(line: 562, column: 40, scope: !5497)
!5612 = !DILocation(line: 562, column: 48, scope: !5497)
!5613 = !DILocation(line: 562, column: 57, scope: !5497)
!5614 = !DILocation(line: 562, column: 55, scope: !5497)
!5615 = !DILocation(line: 562, column: 69, scope: !5497)
!5616 = !DILocation(line: 563, column: 36, scope: !5497)
!5617 = !DILocation(line: 563, column: 44, scope: !5497)
!5618 = !DILocation(line: 563, column: 56, scope: !5497)
!5619 = !DILocation(line: 563, column: 54, scope: !5497)
!5620 = !DILocation(line: 563, column: 68, scope: !5497)
!5621 = !DILocation(line: 563, column: 35, scope: !5497)
!5622 = !DILocation(line: 563, column: 33, scope: !5497)
!5623 = !DILocation(line: 565, column: 2, scope: !5497)
!5624 = !DILocation(line: 565, column: 12, scope: !5497)
!5625 = !DILocation(line: 565, column: 20, scope: !5497)
!5626 = !DILocation(line: 566, column: 19, scope: !5497)
!5627 = !DILocation(line: 566, column: 2, scope: !5497)
!5628 = !DILocation(line: 566, column: 10, scope: !5497)
!5629 = !DILocation(line: 566, column: 17, scope: !5497)
!5630 = !DILocation(line: 567, column: 2, scope: !5497)
!5631 = !DILocation(line: 567, column: 10, scope: !5497)
!5632 = !DILocation(line: 567, column: 19, scope: !5497)
!5633 = !DILocation(line: 569, column: 6, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 569, column: 6)
!5635 = !DILocation(line: 569, column: 25, scope: !5634)
!5636 = !DILocation(line: 569, column: 6, scope: !5497)
!5637 = !DILocation(line: 570, column: 7, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !2488, line: 570, column: 7)
!5639 = distinct !DILexicalBlock(scope: !5634, file: !2488, line: 569, column: 31)
!5640 = !DILocation(line: 570, column: 29, scope: !5638)
!5641 = !DILocation(line: 570, column: 26, scope: !5638)
!5642 = !DILocation(line: 570, column: 7, scope: !5639)
!5643 = !DILocation(line: 571, column: 4, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5638, file: !2488, line: 570, column: 42)
!5645 = !DILocation(line: 571, column: 11, scope: !5644)
!5646 = !DILocation(line: 571, column: 21, scope: !5644)
!5647 = !DILocation(line: 572, column: 3, scope: !5644)
!5648 = !DILocation(line: 573, column: 12, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5638, file: !2488, line: 573, column: 12)
!5650 = !DILocation(line: 573, column: 33, scope: !5649)
!5651 = !DILocation(line: 573, column: 31, scope: !5649)
!5652 = !DILocation(line: 573, column: 12, scope: !5638)
!5653 = !DILocation(line: 574, column: 23, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5649, file: !2488, line: 573, column: 46)
!5655 = !DILocation(line: 574, column: 31, scope: !5654)
!5656 = !DILocation(line: 574, column: 40, scope: !5654)
!5657 = !DILocation(line: 574, column: 38, scope: !5654)
!5658 = !DILocation(line: 574, column: 4, scope: !5654)
!5659 = !DILocation(line: 574, column: 11, scope: !5654)
!5660 = !DILocation(line: 574, column: 21, scope: !5654)
!5661 = !DILocation(line: 575, column: 3, scope: !5654)
!5662 = !DILocation(line: 577, column: 23, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5649, file: !2488, line: 576, column: 8)
!5664 = !DILocation(line: 577, column: 31, scope: !5663)
!5665 = !DILocation(line: 577, column: 40, scope: !5663)
!5666 = !DILocation(line: 577, column: 38, scope: !5663)
!5667 = !DILocation(line: 577, column: 59, scope: !5663)
!5668 = !DILocation(line: 577, column: 4, scope: !5663)
!5669 = !DILocation(line: 577, column: 11, scope: !5663)
!5670 = !DILocation(line: 577, column: 21, scope: !5663)
!5671 = !DILocation(line: 579, column: 2, scope: !5639)
!5672 = !DILocation(line: 581, column: 38, scope: !5497)
!5673 = !DILocation(line: 581, column: 82, scope: !5497)
!5674 = !DILocation(line: 581, column: 89, scope: !5497)
!5675 = !DILocation(line: 581, column: 45, scope: !5497)
!5676 = !DILocation(line: 581, column: 99, scope: !5497)
!5677 = !DILocation(line: 581, column: 97, scope: !5497)
!5678 = !DILocation(line: 581, column: 2, scope: !5497)
!5679 = !DILocation(line: 583, column: 42, scope: !5497)
!5680 = !DILocation(line: 583, column: 2, scope: !5497)
!5681 = !DILocation(line: 584, column: 21, scope: !5497)
!5682 = !DILocation(line: 584, column: 27, scope: !5497)
!5683 = !DILocation(line: 584, column: 2, scope: !5497)
!5684 = !DILocation(line: 586, column: 2, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5497, file: !2488, line: 586, column: 2)
!5686 = !DILocation(line: 587, column: 1, scope: !5497)
!5687 = distinct !DISubprogram(name: "MaskSplinePoints_remove_call", scope: !3, file: !3, line: 2240, type: !5140, scopeLine: 2241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5688 = !DILocalVariable(name: "C", arg: 1, scope: !5687, file: !3, line: 2240, type: !5142)
!5689 = !DILocation(line: 2240, column: 45, scope: !5687)
!5690 = !DILocalVariable(name: "reports", arg: 2, scope: !5687, file: !3, line: 2240, type: !5144)
!5691 = !DILocation(line: 2240, column: 60, scope: !5687)
!5692 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5687, file: !3, line: 2240, type: !453)
!5693 = !DILocation(line: 2240, column: 81, scope: !5687)
!5694 = !DILocalVariable(name: "_parms", arg: 4, scope: !5687, file: !3, line: 2240, type: !455)
!5695 = !DILocation(line: 2240, column: 102, scope: !5687)
!5696 = !DILocalVariable(name: "_selfid", scope: !5687, file: !3, line: 2242, type: !211)
!5697 = !DILocation(line: 2242, column: 13, scope: !5687)
!5698 = !DILocalVariable(name: "_self", scope: !5687, file: !3, line: 2243, type: !1815)
!5699 = !DILocation(line: 2243, column: 21, scope: !5687)
!5700 = !DILocalVariable(name: "point", scope: !5687, file: !3, line: 2244, type: !117)
!5701 = !DILocation(line: 2244, column: 21, scope: !5687)
!5702 = !DILocalVariable(name: "_data", scope: !5687, file: !3, line: 2245, type: !167)
!5703 = !DILocation(line: 2245, column: 8, scope: !5687)
!5704 = !DILocation(line: 2247, column: 25, scope: !5687)
!5705 = !DILocation(line: 2247, column: 31, scope: !5687)
!5706 = !DILocation(line: 2247, column: 34, scope: !5687)
!5707 = !DILocation(line: 2247, column: 12, scope: !5687)
!5708 = !DILocation(line: 2247, column: 10, scope: !5687)
!5709 = !DILocation(line: 2248, column: 31, scope: !5687)
!5710 = !DILocation(line: 2248, column: 37, scope: !5687)
!5711 = !DILocation(line: 2248, column: 10, scope: !5687)
!5712 = !DILocation(line: 2248, column: 8, scope: !5687)
!5713 = !DILocation(line: 2249, column: 18, scope: !5687)
!5714 = !DILocation(line: 2249, column: 26, scope: !5687)
!5715 = !DILocation(line: 2249, column: 8, scope: !5687)
!5716 = !DILocation(line: 2250, column: 34, scope: !5687)
!5717 = !DILocation(line: 2250, column: 10, scope: !5687)
!5718 = !DILocation(line: 2250, column: 8, scope: !5687)
!5719 = !DILocation(line: 2252, column: 30, scope: !5687)
!5720 = !DILocation(line: 2252, column: 39, scope: !5687)
!5721 = !DILocation(line: 2252, column: 46, scope: !5687)
!5722 = !DILocation(line: 2252, column: 55, scope: !5687)
!5723 = !DILocation(line: 2252, column: 2, scope: !5687)
!5724 = !DILocation(line: 2253, column: 1, scope: !5687)
!5725 = distinct !DISubprogram(name: "MaskLayers_new", scope: !3, file: !3, line: 2262, type: !5726, scopeLine: 2263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!1829, !1859, !100}
!5728 = !DILocalVariable(name: "_self", arg: 1, scope: !5725, file: !3, line: 2262, type: !1859)
!5729 = !DILocation(line: 2262, column: 47, scope: !5725)
!5730 = !DILocalVariable(name: "name", arg: 2, scope: !5725, file: !3, line: 2262, type: !100)
!5731 = !DILocation(line: 2262, column: 67, scope: !5725)
!5732 = !DILocation(line: 2264, column: 29, scope: !5725)
!5733 = !DILocation(line: 2264, column: 36, scope: !5725)
!5734 = !DILocation(line: 2264, column: 9, scope: !5725)
!5735 = !DILocation(line: 2264, column: 2, scope: !5725)
!5736 = distinct !DISubprogram(name: "rna_Mask_layers_new", scope: !2488, file: !2488, line: 396, type: !5737, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5737 = !DISubroutineType(types: !5738)
!5738 = !{!1824, !1844, !100}
!5739 = !DILocalVariable(name: "mask", arg: 1, scope: !5736, file: !2488, line: 396, type: !1844)
!5740 = !DILocation(line: 396, column: 45, scope: !5736)
!5741 = !DILocalVariable(name: "name", arg: 2, scope: !5736, file: !2488, line: 396, type: !100)
!5742 = !DILocation(line: 396, column: 63, scope: !5736)
!5743 = !DILocalVariable(name: "masklay", scope: !5736, file: !2488, line: 398, type: !1824)
!5744 = !DILocation(line: 398, column: 13, scope: !5736)
!5745 = !DILocation(line: 398, column: 42, scope: !5736)
!5746 = !DILocation(line: 398, column: 48, scope: !5736)
!5747 = !DILocation(line: 398, column: 23, scope: !5736)
!5748 = !DILocation(line: 400, column: 44, scope: !5736)
!5749 = !DILocation(line: 400, column: 2, scope: !5736)
!5750 = !DILocation(line: 402, column: 9, scope: !5736)
!5751 = !DILocation(line: 402, column: 2, scope: !5736)
!5752 = distinct !DISubprogram(name: "MaskLayers_new_call", scope: !3, file: !3, line: 2267, type: !5140, scopeLine: 2268, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5753 = !DILocalVariable(name: "C", arg: 1, scope: !5752, file: !3, line: 2267, type: !5142)
!5754 = !DILocation(line: 2267, column: 36, scope: !5752)
!5755 = !DILocalVariable(name: "reports", arg: 2, scope: !5752, file: !3, line: 2267, type: !5144)
!5756 = !DILocation(line: 2267, column: 51, scope: !5752)
!5757 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5752, file: !3, line: 2267, type: !453)
!5758 = !DILocation(line: 2267, column: 72, scope: !5752)
!5759 = !DILocalVariable(name: "_parms", arg: 4, scope: !5752, file: !3, line: 2267, type: !455)
!5760 = !DILocation(line: 2267, column: 93, scope: !5752)
!5761 = !DILocalVariable(name: "_self", scope: !5752, file: !3, line: 2269, type: !1859)
!5762 = !DILocation(line: 2269, column: 15, scope: !5752)
!5763 = !DILocalVariable(name: "name", scope: !5752, file: !3, line: 2270, type: !100)
!5764 = !DILocation(line: 2270, column: 15, scope: !5752)
!5765 = !DILocalVariable(name: "layer", scope: !5752, file: !3, line: 2271, type: !1829)
!5766 = !DILocation(line: 2271, column: 20, scope: !5752)
!5767 = !DILocalVariable(name: "_data", scope: !5752, file: !3, line: 2272, type: !167)
!5768 = !DILocation(line: 2272, column: 8, scope: !5752)
!5769 = !DILocalVariable(name: "_retdata", scope: !5752, file: !3, line: 2272, type: !167)
!5770 = !DILocation(line: 2272, column: 16, scope: !5752)
!5771 = !DILocation(line: 2274, column: 25, scope: !5752)
!5772 = !DILocation(line: 2274, column: 31, scope: !5752)
!5773 = !DILocation(line: 2274, column: 10, scope: !5752)
!5774 = !DILocation(line: 2274, column: 8, scope: !5752)
!5775 = !DILocation(line: 2275, column: 18, scope: !5752)
!5776 = !DILocation(line: 2275, column: 26, scope: !5752)
!5777 = !DILocation(line: 2275, column: 8, scope: !5752)
!5778 = !DILocation(line: 2276, column: 27, scope: !5752)
!5779 = !DILocation(line: 2276, column: 9, scope: !5752)
!5780 = !DILocation(line: 2276, column: 7, scope: !5752)
!5781 = !DILocation(line: 2280, column: 15, scope: !5752)
!5782 = !DILocation(line: 2282, column: 13, scope: !5752)
!5783 = !DILocation(line: 2282, column: 11, scope: !5752)
!5784 = !DILocation(line: 2284, column: 30, scope: !5752)
!5785 = !DILocation(line: 2284, column: 37, scope: !5752)
!5786 = !DILocation(line: 2284, column: 10, scope: !5752)
!5787 = !DILocation(line: 2284, column: 8, scope: !5752)
!5788 = !DILocation(line: 2285, column: 37, scope: !5752)
!5789 = !DILocation(line: 2285, column: 25, scope: !5752)
!5790 = !DILocation(line: 2285, column: 2, scope: !5752)
!5791 = !DILocation(line: 2285, column: 35, scope: !5752)
!5792 = !DILocation(line: 2286, column: 1, scope: !5752)
!5793 = distinct !DISubprogram(name: "MaskLayers_remove", scope: !3, file: !3, line: 2288, type: !5794, scopeLine: 2289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{null, !1859, !5144, !117}
!5796 = !DILocalVariable(name: "_self", arg: 1, scope: !5793, file: !3, line: 2288, type: !1859)
!5797 = !DILocation(line: 2288, column: 37, scope: !5793)
!5798 = !DILocalVariable(name: "reports", arg: 2, scope: !5793, file: !3, line: 2288, type: !5144)
!5799 = !DILocation(line: 2288, column: 56, scope: !5793)
!5800 = !DILocalVariable(name: "layer", arg: 3, scope: !5793, file: !3, line: 2288, type: !117)
!5801 = !DILocation(line: 2288, column: 84, scope: !5793)
!5802 = !DILocation(line: 2290, column: 25, scope: !5793)
!5803 = !DILocation(line: 2290, column: 32, scope: !5793)
!5804 = !DILocation(line: 2290, column: 41, scope: !5793)
!5805 = !DILocation(line: 2290, column: 2, scope: !5793)
!5806 = !DILocation(line: 2291, column: 1, scope: !5793)
!5807 = distinct !DISubprogram(name: "rna_Mask_layers_remove", scope: !2488, file: !2488, line: 405, type: !5808, scopeLine: 406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{null, !1844, !5144, !453}
!5810 = !DILocalVariable(name: "mask", arg: 1, scope: !5807, file: !2488, line: 405, type: !1844)
!5811 = !DILocation(line: 405, column: 42, scope: !5807)
!5812 = !DILocalVariable(name: "reports", arg: 2, scope: !5807, file: !2488, line: 405, type: !5144)
!5813 = !DILocation(line: 405, column: 60, scope: !5807)
!5814 = !DILocalVariable(name: "masklay_ptr", arg: 3, scope: !5807, file: !2488, line: 405, type: !453)
!5815 = !DILocation(line: 405, column: 81, scope: !5807)
!5816 = !DILocalVariable(name: "masklay", scope: !5807, file: !2488, line: 407, type: !1824)
!5817 = !DILocation(line: 407, column: 13, scope: !5807)
!5818 = !DILocation(line: 407, column: 23, scope: !5807)
!5819 = !DILocation(line: 407, column: 36, scope: !5807)
!5820 = !DILocation(line: 408, column: 21, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5807, file: !2488, line: 408, column: 6)
!5822 = !DILocation(line: 408, column: 27, scope: !5821)
!5823 = !DILocation(line: 408, column: 39, scope: !5821)
!5824 = !DILocation(line: 408, column: 6, scope: !5821)
!5825 = !DILocation(line: 408, column: 48, scope: !5821)
!5826 = !DILocation(line: 408, column: 6, scope: !5807)
!5827 = !DILocation(line: 409, column: 15, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5821, file: !2488, line: 408, column: 55)
!5829 = !DILocation(line: 409, column: 77, scope: !5828)
!5830 = !DILocation(line: 409, column: 86, scope: !5828)
!5831 = !DILocation(line: 409, column: 92, scope: !5828)
!5832 = !DILocation(line: 409, column: 98, scope: !5828)
!5833 = !DILocation(line: 409, column: 101, scope: !5828)
!5834 = !DILocation(line: 409, column: 106, scope: !5828)
!5835 = !DILocation(line: 409, column: 3, scope: !5828)
!5836 = !DILocation(line: 410, column: 3, scope: !5828)
!5837 = !DILocation(line: 413, column: 24, scope: !5807)
!5838 = !DILocation(line: 413, column: 30, scope: !5807)
!5839 = !DILocation(line: 413, column: 2, scope: !5807)
!5840 = !DILocation(line: 414, column: 2, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5807, file: !2488, line: 414, column: 2)
!5842 = !DILocation(line: 416, column: 44, scope: !5807)
!5843 = !DILocation(line: 416, column: 2, scope: !5807)
!5844 = !DILocation(line: 417, column: 1, scope: !5807)
!5845 = distinct !DISubprogram(name: "MaskLayers_remove_call", scope: !3, file: !3, line: 2293, type: !5140, scopeLine: 2294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5846 = !DILocalVariable(name: "C", arg: 1, scope: !5845, file: !3, line: 2293, type: !5142)
!5847 = !DILocation(line: 2293, column: 39, scope: !5845)
!5848 = !DILocalVariable(name: "reports", arg: 2, scope: !5845, file: !3, line: 2293, type: !5144)
!5849 = !DILocation(line: 2293, column: 54, scope: !5845)
!5850 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5845, file: !3, line: 2293, type: !453)
!5851 = !DILocation(line: 2293, column: 75, scope: !5845)
!5852 = !DILocalVariable(name: "_parms", arg: 4, scope: !5845, file: !3, line: 2293, type: !455)
!5853 = !DILocation(line: 2293, column: 96, scope: !5845)
!5854 = !DILocalVariable(name: "_self", scope: !5845, file: !3, line: 2295, type: !1859)
!5855 = !DILocation(line: 2295, column: 15, scope: !5845)
!5856 = !DILocalVariable(name: "layer", scope: !5845, file: !3, line: 2296, type: !117)
!5857 = !DILocation(line: 2296, column: 21, scope: !5845)
!5858 = !DILocalVariable(name: "_data", scope: !5845, file: !3, line: 2297, type: !167)
!5859 = !DILocation(line: 2297, column: 8, scope: !5845)
!5860 = !DILocation(line: 2299, column: 25, scope: !5845)
!5861 = !DILocation(line: 2299, column: 31, scope: !5845)
!5862 = !DILocation(line: 2299, column: 10, scope: !5845)
!5863 = !DILocation(line: 2299, column: 8, scope: !5845)
!5864 = !DILocation(line: 2300, column: 18, scope: !5845)
!5865 = !DILocation(line: 2300, column: 26, scope: !5845)
!5866 = !DILocation(line: 2300, column: 8, scope: !5845)
!5867 = !DILocation(line: 2301, column: 34, scope: !5845)
!5868 = !DILocation(line: 2301, column: 10, scope: !5845)
!5869 = !DILocation(line: 2301, column: 8, scope: !5845)
!5870 = !DILocation(line: 2303, column: 25, scope: !5845)
!5871 = !DILocation(line: 2303, column: 32, scope: !5845)
!5872 = !DILocation(line: 2303, column: 41, scope: !5845)
!5873 = !DILocation(line: 2303, column: 2, scope: !5845)
!5874 = !DILocation(line: 2304, column: 1, scope: !5845)
!5875 = distinct !DISubprogram(name: "MaskLayers_clear", scope: !3, file: !3, line: 2306, type: !5876, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{null, !1859}
!5878 = !DILocalVariable(name: "_self", arg: 1, scope: !5875, file: !3, line: 2306, type: !1859)
!5879 = !DILocation(line: 2306, column: 36, scope: !5875)
!5880 = !DILocation(line: 2308, column: 24, scope: !5875)
!5881 = !DILocation(line: 2308, column: 2, scope: !5875)
!5882 = !DILocation(line: 2309, column: 1, scope: !5875)
!5883 = distinct !DISubprogram(name: "rna_Mask_layers_clear", scope: !2488, file: !2488, line: 419, type: !5884, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{null, !1844}
!5886 = !DILocalVariable(name: "mask", arg: 1, scope: !5883, file: !2488, line: 419, type: !1844)
!5887 = !DILocation(line: 419, column: 41, scope: !5883)
!5888 = !DILocation(line: 421, column: 28, scope: !5883)
!5889 = !DILocation(line: 421, column: 34, scope: !5883)
!5890 = !DILocation(line: 421, column: 2, scope: !5883)
!5891 = !DILocation(line: 423, column: 44, scope: !5883)
!5892 = !DILocation(line: 423, column: 2, scope: !5883)
!5893 = !DILocation(line: 424, column: 1, scope: !5883)
!5894 = distinct !DISubprogram(name: "MaskLayers_clear_call", scope: !3, file: !3, line: 2311, type: !5140, scopeLine: 2312, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5895 = !DILocalVariable(name: "C", arg: 1, scope: !5894, file: !3, line: 2311, type: !5142)
!5896 = !DILocation(line: 2311, column: 38, scope: !5894)
!5897 = !DILocalVariable(name: "reports", arg: 2, scope: !5894, file: !3, line: 2311, type: !5144)
!5898 = !DILocation(line: 2311, column: 53, scope: !5894)
!5899 = !DILocalVariable(name: "_ptr", arg: 3, scope: !5894, file: !3, line: 2311, type: !453)
!5900 = !DILocation(line: 2311, column: 74, scope: !5894)
!5901 = !DILocalVariable(name: "_parms", arg: 4, scope: !5894, file: !3, line: 2311, type: !455)
!5902 = !DILocation(line: 2311, column: 95, scope: !5894)
!5903 = !DILocalVariable(name: "_self", scope: !5894, file: !3, line: 2313, type: !1859)
!5904 = !DILocation(line: 2313, column: 15, scope: !5894)
!5905 = !DILocation(line: 2314, column: 25, scope: !5894)
!5906 = !DILocation(line: 2314, column: 31, scope: !5894)
!5907 = !DILocation(line: 2314, column: 10, scope: !5894)
!5908 = !DILocation(line: 2314, column: 8, scope: !5894)
!5909 = !DILocation(line: 2316, column: 24, scope: !5894)
!5910 = !DILocation(line: 2316, column: 2, scope: !5894)
!5911 = !DILocation(line: 2317, column: 1, scope: !5894)
!5912 = distinct !DISubprogram(name: "rna_Mask_update_parent", scope: !2488, file: !2488, line: 76, type: !5913, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!5913 = !DISubroutineType(types: !5914)
!5914 = !{null, !5915, !5917, !453}
!5915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5916, size: 64)
!5916 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !175, line: 104, baseType: !174)
!5917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 64)
!5918 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !501, line: 1299, baseType: !500)
!5919 = !DILocalVariable(name: "bmain", arg: 1, scope: !5912, file: !2488, line: 76, type: !5915)
!5920 = !DILocation(line: 76, column: 42, scope: !5912)
!5921 = !DILocalVariable(name: "scene", arg: 2, scope: !5912, file: !2488, line: 76, type: !5917)
!5922 = !DILocation(line: 76, column: 56, scope: !5912)
!5923 = !DILocalVariable(name: "ptr", arg: 3, scope: !5912, file: !2488, line: 76, type: !453)
!5924 = !DILocation(line: 76, column: 75, scope: !5912)
!5925 = !DILocalVariable(name: "parent", scope: !5912, file: !2488, line: 78, type: !1761)
!5926 = !DILocation(line: 78, column: 14, scope: !5912)
!5927 = !DILocation(line: 78, column: 23, scope: !5912)
!5928 = !DILocation(line: 78, column: 28, scope: !5912)
!5929 = !DILocation(line: 80, column: 6, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5912, file: !2488, line: 80, column: 6)
!5931 = !DILocation(line: 80, column: 14, scope: !5930)
!5932 = !DILocation(line: 80, column: 6, scope: !5912)
!5933 = !DILocation(line: 81, column: 7, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !2488, line: 81, column: 7)
!5935 = distinct !DILexicalBlock(scope: !5930, file: !2488, line: 80, column: 18)
!5936 = !DILocation(line: 81, column: 28, scope: !5934)
!5937 = !DILocation(line: 81, column: 7, scope: !5935)
!5938 = !DILocalVariable(name: "clip", scope: !5939, file: !2488, line: 82, type: !1863)
!5939 = distinct !DILexicalBlock(scope: !5934, file: !2488, line: 81, column: 38)
!5940 = !DILocation(line: 82, column: 15, scope: !5939)
!5941 = !DILocation(line: 82, column: 36, scope: !5939)
!5942 = !DILocation(line: 82, column: 44, scope: !5939)
!5943 = !DILocation(line: 82, column: 22, scope: !5939)
!5944 = !DILocalVariable(name: "tracking", scope: !5939, file: !2488, line: 83, type: !5945)
!5945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5946, size: 64)
!5946 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTracking", file: !1553, line: 356, baseType: !1552)
!5947 = !DILocation(line: 83, column: 19, scope: !5939)
!5948 = !DILocation(line: 83, column: 31, scope: !5939)
!5949 = !DILocation(line: 83, column: 37, scope: !5939)
!5950 = !DILocalVariable(name: "object", scope: !5939, file: !2488, line: 84, type: !5951)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingObject", file: !1553, line: 293, baseType: !5953)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingObject", file: !1553, line: 280, size: 1216, elements: !5954)
!5954 = !{!5955, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5965}
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5953, file: !1553, line: 281, baseType: !5956, size: 64)
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5953, file: !1553, line: 281, baseType: !5956, size: 64, offset: 64)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5953, file: !1553, line: 283, baseType: !233, size: 512, offset: 128)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5953, file: !1553, line: 284, baseType: !48, size: 32, offset: 640)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !5953, file: !1553, line: 285, baseType: !389, size: 32, offset: 672)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !5953, file: !1553, line: 287, baseType: !139, size: 128, offset: 704)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !5953, file: !1553, line: 288, baseType: !139, size: 128, offset: 832)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !5953, file: !1553, line: 289, baseType: !1604, size: 192, offset: 960)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !5953, file: !1553, line: 292, baseType: !48, size: 32, offset: 1152)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !5953, file: !1553, line: 292, baseType: !48, size: 32, offset: 1184)
!5966 = !DILocation(line: 84, column: 25, scope: !5939)
!5967 = !DILocation(line: 84, column: 64, scope: !5939)
!5968 = !DILocation(line: 84, column: 74, scope: !5939)
!5969 = !DILocation(line: 84, column: 82, scope: !5939)
!5970 = !DILocation(line: 84, column: 34, scope: !5939)
!5971 = !DILocation(line: 86, column: 8, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5939, file: !2488, line: 86, column: 8)
!5973 = !DILocation(line: 86, column: 8, scope: !5939)
!5974 = !DILocalVariable(name: "clip_framenr", scope: !5975, file: !2488, line: 87, type: !48)
!5975 = distinct !DILexicalBlock(scope: !5972, file: !2488, line: 86, column: 16)
!5976 = !DILocation(line: 87, column: 9, scope: !5975)
!5977 = !DILocation(line: 87, column: 64, scope: !5975)
!5978 = !DILocation(line: 87, column: 70, scope: !5975)
!5979 = !DILocation(line: 87, column: 77, scope: !5975)
!5980 = !DILocation(line: 87, column: 79, scope: !5975)
!5981 = !DILocation(line: 87, column: 24, scope: !5975)
!5982 = !DILocation(line: 89, column: 9, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5975, file: !2488, line: 89, column: 9)
!5984 = !DILocation(line: 89, column: 17, scope: !5983)
!5985 = !DILocation(line: 89, column: 22, scope: !5983)
!5986 = !DILocation(line: 89, column: 9, scope: !5975)
!5987 = !DILocalVariable(name: "track", scope: !5988, file: !2488, line: 90, type: !1627)
!5988 = distinct !DILexicalBlock(scope: !5983, file: !2488, line: 89, column: 50)
!5989 = !DILocation(line: 90, column: 26, scope: !5988)
!5990 = !DILocation(line: 90, column: 63, scope: !5988)
!5991 = !DILocation(line: 90, column: 73, scope: !5988)
!5992 = !DILocation(line: 90, column: 81, scope: !5988)
!5993 = !DILocation(line: 90, column: 89, scope: !5988)
!5994 = !DILocation(line: 90, column: 34, scope: !5988)
!5995 = !DILocation(line: 92, column: 10, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5988, file: !2488, line: 92, column: 10)
!5997 = !DILocation(line: 92, column: 10, scope: !5988)
!5998 = !DILocalVariable(name: "marker", scope: !5999, file: !2488, line: 93, type: !1643)
!5999 = distinct !DILexicalBlock(scope: !5996, file: !2488, line: 92, column: 17)
!6000 = !DILocation(line: 93, column: 28, scope: !5999)
!6001 = !DILocation(line: 93, column: 61, scope: !5999)
!6002 = !DILocation(line: 93, column: 68, scope: !5999)
!6003 = !DILocation(line: 93, column: 37, scope: !5999)
!6004 = !DILocalVariable(name: "marker_pos_ofs", scope: !5999, file: !2488, line: 94, type: !753)
!6005 = !DILocation(line: 94, column: 13, scope: !5999)
!6006 = !DILocalVariable(name: "parmask_pos", scope: !5999, file: !2488, line: 94, type: !753)
!6007 = !DILocation(line: 94, column: 32, scope: !5999)
!6008 = !DILocalVariable(name: "user", scope: !5999, file: !2488, line: 95, type: !6009)
!6009 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieClipUser", file: !1536, line: 53, baseType: !6010)
!6010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1536, line: 50, size: 64, elements: !6011)
!6011 = !{!6012, !6013, !6014}
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !6010, file: !1536, line: 51, baseType: !48, size: 32)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !6010, file: !1536, line: 52, baseType: !184, size: 16, offset: 32)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !6010, file: !1536, line: 52, baseType: !184, size: 16, offset: 48)
!6015 = !DILocation(line: 95, column: 21, scope: !5999)
!6016 = !DILocation(line: 97, column: 43, scope: !5999)
!6017 = !DILocation(line: 97, column: 50, scope: !5999)
!6018 = !DILocation(line: 97, column: 52, scope: !5999)
!6019 = !DILocation(line: 97, column: 7, scope: !5999)
!6020 = !DILocation(line: 99, column: 19, scope: !5999)
!6021 = !DILocation(line: 99, column: 35, scope: !5999)
!6022 = !DILocation(line: 99, column: 43, scope: !5999)
!6023 = !DILocation(line: 99, column: 48, scope: !5999)
!6024 = !DILocation(line: 99, column: 55, scope: !5999)
!6025 = !DILocation(line: 99, column: 7, scope: !5999)
!6026 = !DILocation(line: 101, column: 37, scope: !5999)
!6027 = !DILocation(line: 101, column: 50, scope: !5999)
!6028 = !DILocation(line: 101, column: 63, scope: !5999)
!6029 = !DILocation(line: 101, column: 7, scope: !5999)
!6030 = !DILocation(line: 103, column: 18, scope: !5999)
!6031 = !DILocation(line: 103, column: 26, scope: !5999)
!6032 = !DILocation(line: 103, column: 39, scope: !5999)
!6033 = !DILocation(line: 103, column: 7, scope: !5999)
!6034 = !DILocation(line: 104, column: 6, scope: !5999)
!6035 = !DILocation(line: 105, column: 5, scope: !5988)
!6036 = !DILocalVariable(name: "plane_track", scope: !6037, file: !2488, line: 107, type: !1678)
!6037 = distinct !DILexicalBlock(scope: !5983, file: !2488, line: 106, column: 61)
!6038 = !DILocation(line: 107, column: 31, scope: !6037)
!6039 = !DILocation(line: 107, column: 80, scope: !6037)
!6040 = !DILocation(line: 107, column: 90, scope: !6037)
!6041 = !DILocation(line: 107, column: 98, scope: !6037)
!6042 = !DILocation(line: 107, column: 106, scope: !6037)
!6043 = !DILocation(line: 107, column: 45, scope: !6037)
!6044 = !DILocation(line: 108, column: 10, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6037, file: !2488, line: 108, column: 10)
!6046 = !DILocation(line: 108, column: 10, scope: !6037)
!6047 = !DILocalVariable(name: "plane_marker", scope: !6048, file: !2488, line: 109, type: !1691)
!6048 = distinct !DILexicalBlock(scope: !6045, file: !2488, line: 108, column: 23)
!6049 = !DILocation(line: 109, column: 33, scope: !6048)
!6050 = !DILocation(line: 109, column: 78, scope: !6048)
!6051 = !DILocation(line: 109, column: 91, scope: !6048)
!6052 = !DILocation(line: 109, column: 48, scope: !6048)
!6053 = !DILocation(line: 111, column: 14, scope: !6048)
!6054 = !DILocation(line: 111, column: 22, scope: !6048)
!6055 = !DILocation(line: 111, column: 7, scope: !6048)
!6056 = !DILocation(line: 111, column: 43, scope: !6048)
!6057 = !DILocation(line: 111, column: 57, scope: !6048)
!6058 = !DILocation(line: 112, column: 15, scope: !6048)
!6059 = !DILocation(line: 112, column: 23, scope: !6048)
!6060 = !DILocation(line: 112, column: 7, scope: !6048)
!6061 = !DILocation(line: 113, column: 6, scope: !6048)
!6062 = !DILocation(line: 115, column: 4, scope: !5975)
!6063 = !DILocation(line: 116, column: 3, scope: !5939)
!6064 = !DILocation(line: 117, column: 2, scope: !5935)
!6065 = !DILocation(line: 119, column: 23, scope: !5912)
!6066 = !DILocation(line: 119, column: 30, scope: !5912)
!6067 = !DILocation(line: 119, column: 37, scope: !5912)
!6068 = !DILocation(line: 119, column: 2, scope: !5912)
!6069 = !DILocation(line: 120, column: 1, scope: !5912)
!6070 = distinct !DISubprogram(name: "rna_MaskParent_id_typef", scope: !2488, file: !2488, line: 130, type: !6071, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!1888, !453}
!6073 = !DILocalVariable(name: "ptr", arg: 1, scope: !6070, file: !2488, line: 130, type: !453)
!6074 = !DILocation(line: 130, column: 55, scope: !6070)
!6075 = !DILocalVariable(name: "mpar", scope: !6070, file: !2488, line: 132, type: !1761)
!6076 = !DILocation(line: 132, column: 14, scope: !6070)
!6077 = !DILocation(line: 132, column: 36, scope: !6070)
!6078 = !DILocation(line: 132, column: 41, scope: !6070)
!6079 = !DILocation(line: 132, column: 21, scope: !6070)
!6080 = !DILocation(line: 134, column: 29, scope: !6070)
!6081 = !DILocation(line: 134, column: 35, scope: !6070)
!6082 = !DILocation(line: 134, column: 9, scope: !6070)
!6083 = !DILocation(line: 134, column: 2, scope: !6070)
!6084 = distinct !DISubprogram(name: "rna_Mask_update_data", scope: !2488, file: !2488, line: 68, type: !5913, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6085 = !DILocalVariable(name: "UNUSED_bmain", arg: 1, scope: !6084, file: !2488, line: 68, type: !5915)
!6086 = !DILocation(line: 68, column: 40, scope: !6084)
!6087 = !DILocalVariable(name: "UNUSED_scene", arg: 2, scope: !6084, file: !2488, line: 68, type: !5917)
!6088 = !DILocation(line: 68, column: 62, scope: !6084)
!6089 = !DILocalVariable(name: "ptr", arg: 3, scope: !6084, file: !2488, line: 68, type: !453)
!6090 = !DILocation(line: 68, column: 89, scope: !6084)
!6091 = !DILocalVariable(name: "mask", scope: !6084, file: !2488, line: 70, type: !1844)
!6092 = !DILocation(line: 70, column: 8, scope: !6084)
!6093 = !DILocation(line: 70, column: 15, scope: !6084)
!6094 = !DILocation(line: 70, column: 20, scope: !6084)
!6095 = !DILocation(line: 70, column: 23, scope: !6084)
!6096 = !DILocation(line: 72, column: 42, scope: !6084)
!6097 = !DILocation(line: 72, column: 2, scope: !6084)
!6098 = !DILocation(line: 73, column: 22, scope: !6084)
!6099 = !DILocation(line: 73, column: 28, scope: !6084)
!6100 = !DILocation(line: 73, column: 2, scope: !6084)
!6101 = !DILocation(line: 74, column: 1, scope: !6084)
!6102 = distinct !DISubprogram(name: "rna_MaskLayer_path", scope: !2488, file: !2488, line: 181, type: !6103, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6103 = !DISubroutineType(types: !6104)
!6104 = !{!167, !453}
!6105 = !DILocalVariable(name: "ptr", arg: 1, scope: !6102, file: !2488, line: 181, type: !453)
!6106 = !DILocation(line: 181, column: 45, scope: !6102)
!6107 = !DILocalVariable(name: "masklay", scope: !6102, file: !2488, line: 183, type: !1824)
!6108 = !DILocation(line: 183, column: 13, scope: !6102)
!6109 = !DILocation(line: 183, column: 36, scope: !6102)
!6110 = !DILocation(line: 183, column: 41, scope: !6102)
!6111 = !DILocation(line: 183, column: 23, scope: !6102)
!6112 = !DILocalVariable(name: "name_esc", scope: !6102, file: !2488, line: 184, type: !1221)
!6113 = !DILocation(line: 184, column: 7, scope: !6102)
!6114 = !DILocation(line: 185, column: 16, scope: !6102)
!6115 = !DILocation(line: 185, column: 26, scope: !6102)
!6116 = !DILocation(line: 185, column: 35, scope: !6102)
!6117 = !DILocation(line: 185, column: 2, scope: !6102)
!6118 = !DILocation(line: 186, column: 40, scope: !6102)
!6119 = !DILocation(line: 186, column: 9, scope: !6102)
!6120 = !DILocation(line: 186, column: 2, scope: !6102)
!6121 = distinct !DISubprogram(name: "rna_Mask_layer_active_index_range", scope: !2488, file: !2488, line: 170, type: !6122, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !453, !434, !434, !434, !434}
!6124 = !DILocalVariable(name: "ptr", arg: 1, scope: !6121, file: !2488, line: 170, type: !453)
!6125 = !DILocation(line: 170, column: 59, scope: !6121)
!6126 = !DILocalVariable(name: "min", arg: 2, scope: !6121, file: !2488, line: 170, type: !434)
!6127 = !DILocation(line: 170, column: 69, scope: !6121)
!6128 = !DILocalVariable(name: "max", arg: 3, scope: !6121, file: !2488, line: 170, type: !434)
!6129 = !DILocation(line: 170, column: 79, scope: !6121)
!6130 = !DILocalVariable(name: "softmin", arg: 4, scope: !6121, file: !2488, line: 170, type: !434)
!6131 = !DILocation(line: 170, column: 89, scope: !6121)
!6132 = !DILocalVariable(name: "softmax", arg: 5, scope: !6121, file: !2488, line: 170, type: !434)
!6133 = !DILocation(line: 170, column: 103, scope: !6121)
!6134 = !DILocalVariable(name: "mask", scope: !6121, file: !2488, line: 172, type: !1844)
!6135 = !DILocation(line: 172, column: 8, scope: !6121)
!6136 = !DILocation(line: 172, column: 23, scope: !6121)
!6137 = !DILocation(line: 172, column: 28, scope: !6121)
!6138 = !DILocation(line: 172, column: 31, scope: !6121)
!6139 = !DILocation(line: 172, column: 15, scope: !6121)
!6140 = !DILocation(line: 174, column: 3, scope: !6121)
!6141 = !DILocation(line: 174, column: 7, scope: !6121)
!6142 = !DILocation(line: 175, column: 19, scope: !6121)
!6143 = !DILocation(line: 175, column: 25, scope: !6121)
!6144 = !DILocation(line: 175, column: 37, scope: !6121)
!6145 = !DILocation(line: 175, column: 9, scope: !6121)
!6146 = !DILocation(line: 175, column: 3, scope: !6121)
!6147 = !DILocation(line: 175, column: 7, scope: !6121)
!6148 = !DILocation(line: 177, column: 14, scope: !6121)
!6149 = !DILocation(line: 177, column: 13, scope: !6121)
!6150 = !DILocation(line: 177, column: 3, scope: !6121)
!6151 = !DILocation(line: 177, column: 11, scope: !6121)
!6152 = !DILocation(line: 178, column: 14, scope: !6121)
!6153 = !DILocation(line: 178, column: 13, scope: !6121)
!6154 = !DILocation(line: 178, column: 3, scope: !6121)
!6155 = !DILocation(line: 178, column: 11, scope: !6121)
!6156 = !DILocation(line: 179, column: 1, scope: !6121)
!6157 = distinct !DISubprogram(name: "copy_v2_v2", scope: !6158, file: !6158, line: 58, type: !6159, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6158 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6159 = !DISubroutineType(types: !6160)
!6160 = !{null, !2083, !2089}
!6161 = !DILocalVariable(name: "r", arg: 1, scope: !6157, file: !6158, line: 58, type: !2083)
!6162 = !DILocation(line: 58, column: 31, scope: !6157)
!6163 = !DILocalVariable(name: "a", arg: 2, scope: !6157, file: !6158, line: 58, type: !2089)
!6164 = !DILocation(line: 58, column: 49, scope: !6157)
!6165 = !DILocation(line: 60, column: 9, scope: !6157)
!6166 = !DILocation(line: 60, column: 2, scope: !6157)
!6167 = !DILocation(line: 60, column: 7, scope: !6157)
!6168 = !DILocation(line: 61, column: 9, scope: !6157)
!6169 = !DILocation(line: 61, column: 2, scope: !6157)
!6170 = !DILocation(line: 61, column: 7, scope: !6157)
!6171 = !DILocation(line: 62, column: 1, scope: !6157)
!6172 = distinct !DISubprogram(name: "mask_spline_from_point", scope: !2488, file: !2488, line: 315, type: !6173, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!1810, !1844, !1779}
!6175 = !DILocalVariable(name: "mask", arg: 1, scope: !6172, file: !2488, line: 315, type: !1844)
!6176 = !DILocation(line: 315, column: 49, scope: !6172)
!6177 = !DILocalVariable(name: "point", arg: 2, scope: !6172, file: !2488, line: 315, type: !1779)
!6178 = !DILocation(line: 315, column: 72, scope: !6172)
!6179 = !DILocalVariable(name: "mask_layer", scope: !6172, file: !2488, line: 317, type: !1824)
!6180 = !DILocation(line: 317, column: 13, scope: !6172)
!6181 = !DILocation(line: 318, column: 20, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6172, file: !2488, line: 318, column: 2)
!6183 = !DILocation(line: 318, column: 26, scope: !6182)
!6184 = !DILocation(line: 318, column: 37, scope: !6182)
!6185 = !DILocation(line: 318, column: 18, scope: !6182)
!6186 = !DILocation(line: 318, column: 7, scope: !6182)
!6187 = !DILocation(line: 319, column: 7, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6182, file: !2488, line: 318, column: 2)
!6189 = !DILocation(line: 318, column: 2, scope: !6182)
!6190 = !DILocalVariable(name: "spline", scope: !6191, file: !2488, line: 322, type: !1810)
!6191 = distinct !DILexicalBlock(scope: !6188, file: !2488, line: 321, column: 2)
!6192 = !DILocation(line: 322, column: 15, scope: !6191)
!6193 = !DILocation(line: 323, column: 17, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6191, file: !2488, line: 323, column: 3)
!6195 = !DILocation(line: 323, column: 29, scope: !6194)
!6196 = !DILocation(line: 323, column: 37, scope: !6194)
!6197 = !DILocation(line: 323, column: 15, scope: !6194)
!6198 = !DILocation(line: 323, column: 8, scope: !6194)
!6199 = !DILocation(line: 324, column: 8, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6194, file: !2488, line: 323, column: 3)
!6201 = !DILocation(line: 323, column: 3, scope: !6194)
!6202 = !DILocation(line: 327, column: 8, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6204, file: !2488, line: 327, column: 8)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !2488, line: 326, column: 3)
!6205 = !DILocation(line: 327, column: 17, scope: !6203)
!6206 = !DILocation(line: 327, column: 25, scope: !6203)
!6207 = !DILocation(line: 327, column: 14, scope: !6203)
!6208 = !DILocation(line: 327, column: 32, scope: !6203)
!6209 = !DILocation(line: 327, column: 35, scope: !6203)
!6210 = !DILocation(line: 327, column: 43, scope: !6203)
!6211 = !DILocation(line: 327, column: 51, scope: !6203)
!6212 = !DILocation(line: 327, column: 60, scope: !6203)
!6213 = !DILocation(line: 327, column: 68, scope: !6203)
!6214 = !DILocation(line: 327, column: 58, scope: !6203)
!6215 = !DILocation(line: 327, column: 41, scope: !6203)
!6216 = !DILocation(line: 327, column: 8, scope: !6204)
!6217 = !DILocation(line: 328, column: 12, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6203, file: !2488, line: 327, column: 79)
!6219 = !DILocation(line: 328, column: 5, scope: !6218)
!6220 = !DILocation(line: 330, column: 3, scope: !6204)
!6221 = !DILocation(line: 325, column: 17, scope: !6200)
!6222 = !DILocation(line: 325, column: 25, scope: !6200)
!6223 = !DILocation(line: 325, column: 15, scope: !6200)
!6224 = !DILocation(line: 323, column: 3, scope: !6200)
!6225 = distinct !{!6225, !6201, !6226}
!6226 = !DILocation(line: 330, column: 3, scope: !6194)
!6227 = !DILocation(line: 331, column: 2, scope: !6191)
!6228 = !DILocation(line: 320, column: 20, scope: !6188)
!6229 = !DILocation(line: 320, column: 32, scope: !6188)
!6230 = !DILocation(line: 320, column: 18, scope: !6188)
!6231 = !DILocation(line: 318, column: 2, scope: !6188)
!6232 = distinct !{!6232, !6189, !6233}
!6233 = !DILocation(line: 331, column: 2, scope: !6182)
!6234 = !DILocation(line: 332, column: 2, scope: !6172)
!6235 = !DILocation(line: 333, column: 1, scope: !6172)
!6236 = distinct !DISubprogram(name: "mask_point_check_stick", scope: !2488, file: !2488, line: 335, type: !6237, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{null, !1779}
!6239 = !DILocalVariable(name: "point", arg: 1, scope: !6236, file: !2488, line: 335, type: !1779)
!6240 = !DILocation(line: 335, column: 53, scope: !6236)
!6241 = !DILocalVariable(name: "bezt", scope: !6236, file: !2488, line: 337, type: !2921)
!6242 = !DILocation(line: 337, column: 13, scope: !6236)
!6243 = !DILocation(line: 337, column: 21, scope: !6236)
!6244 = !DILocation(line: 337, column: 28, scope: !6236)
!6245 = !DILocation(line: 338, column: 6, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6236, file: !2488, line: 338, column: 6)
!6247 = !DILocation(line: 338, column: 12, scope: !6246)
!6248 = !DILocation(line: 338, column: 15, scope: !6246)
!6249 = !DILocation(line: 338, column: 27, scope: !6246)
!6250 = !DILocation(line: 338, column: 30, scope: !6246)
!6251 = !DILocation(line: 338, column: 36, scope: !6246)
!6252 = !DILocation(line: 338, column: 39, scope: !6246)
!6253 = !DILocation(line: 338, column: 6, scope: !6236)
!6254 = !DILocalVariable(name: "vec", scope: !6255, file: !2488, line: 339, type: !567)
!6255 = distinct !DILexicalBlock(scope: !6246, file: !2488, line: 338, column: 52)
!6256 = !DILocation(line: 339, column: 9, scope: !6255)
!6257 = !DILocation(line: 340, column: 15, scope: !6255)
!6258 = !DILocation(line: 340, column: 20, scope: !6255)
!6259 = !DILocation(line: 340, column: 26, scope: !6255)
!6260 = !DILocation(line: 340, column: 34, scope: !6255)
!6261 = !DILocation(line: 340, column: 40, scope: !6255)
!6262 = !DILocation(line: 340, column: 3, scope: !6255)
!6263 = !DILocation(line: 341, column: 15, scope: !6255)
!6264 = !DILocation(line: 341, column: 21, scope: !6255)
!6265 = !DILocation(line: 341, column: 29, scope: !6255)
!6266 = !DILocation(line: 341, column: 35, scope: !6255)
!6267 = !DILocation(line: 341, column: 43, scope: !6255)
!6268 = !DILocation(line: 341, column: 3, scope: !6255)
!6269 = !DILocation(line: 342, column: 2, scope: !6255)
!6270 = !DILocation(line: 343, column: 1, scope: !6236)
!6271 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !6158, file: !6158, line: 357, type: !6272, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !2083, !2089, !2089}
!6274 = !DILocalVariable(name: "r", arg: 1, scope: !6271, file: !6158, line: 357, type: !2083)
!6275 = !DILocation(line: 357, column: 32, scope: !6271)
!6276 = !DILocalVariable(name: "a", arg: 2, scope: !6271, file: !6158, line: 357, type: !2089)
!6277 = !DILocation(line: 357, column: 50, scope: !6271)
!6278 = !DILocalVariable(name: "b", arg: 3, scope: !6271, file: !6158, line: 357, type: !2089)
!6279 = !DILocation(line: 357, column: 68, scope: !6271)
!6280 = !DILocation(line: 359, column: 9, scope: !6271)
!6281 = !DILocation(line: 359, column: 16, scope: !6271)
!6282 = !DILocation(line: 359, column: 14, scope: !6271)
!6283 = !DILocation(line: 359, column: 2, scope: !6271)
!6284 = !DILocation(line: 359, column: 7, scope: !6271)
!6285 = !DILocation(line: 360, column: 9, scope: !6271)
!6286 = !DILocation(line: 360, column: 16, scope: !6271)
!6287 = !DILocation(line: 360, column: 14, scope: !6271)
!6288 = !DILocation(line: 360, column: 2, scope: !6271)
!6289 = !DILocation(line: 360, column: 7, scope: !6271)
!6290 = !DILocation(line: 361, column: 9, scope: !6271)
!6291 = !DILocation(line: 361, column: 16, scope: !6271)
!6292 = !DILocation(line: 361, column: 14, scope: !6271)
!6293 = !DILocation(line: 361, column: 2, scope: !6271)
!6294 = !DILocation(line: 361, column: 7, scope: !6271)
!6295 = !DILocation(line: 362, column: 1, scope: !6271)
!6296 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !6158, file: !6158, line: 309, type: !6272, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6297 = !DILocalVariable(name: "r", arg: 1, scope: !6296, file: !6158, line: 309, type: !2083)
!6298 = !DILocation(line: 309, column: 32, scope: !6296)
!6299 = !DILocalVariable(name: "a", arg: 2, scope: !6296, file: !6158, line: 309, type: !2089)
!6300 = !DILocation(line: 309, column: 50, scope: !6296)
!6301 = !DILocalVariable(name: "b", arg: 3, scope: !6296, file: !6158, line: 309, type: !2089)
!6302 = !DILocation(line: 309, column: 68, scope: !6296)
!6303 = !DILocation(line: 311, column: 9, scope: !6296)
!6304 = !DILocation(line: 311, column: 16, scope: !6296)
!6305 = !DILocation(line: 311, column: 14, scope: !6296)
!6306 = !DILocation(line: 311, column: 2, scope: !6296)
!6307 = !DILocation(line: 311, column: 7, scope: !6296)
!6308 = !DILocation(line: 312, column: 9, scope: !6296)
!6309 = !DILocation(line: 312, column: 16, scope: !6296)
!6310 = !DILocation(line: 312, column: 14, scope: !6296)
!6311 = !DILocation(line: 312, column: 2, scope: !6296)
!6312 = !DILocation(line: 312, column: 7, scope: !6296)
!6313 = !DILocation(line: 313, column: 9, scope: !6296)
!6314 = !DILocation(line: 313, column: 16, scope: !6296)
!6315 = !DILocation(line: 313, column: 14, scope: !6296)
!6316 = !DILocation(line: 313, column: 2, scope: !6296)
!6317 = !DILocation(line: 313, column: 7, scope: !6296)
!6318 = !DILocation(line: 314, column: 1, scope: !6296)
!6319 = distinct !DISubprogram(name: "add_v2_v2v2", scope: !6158, file: !6158, line: 290, type: !6272, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6320 = !DILocalVariable(name: "r", arg: 1, scope: !6319, file: !6158, line: 290, type: !2083)
!6321 = !DILocation(line: 290, column: 32, scope: !6319)
!6322 = !DILocalVariable(name: "a", arg: 2, scope: !6319, file: !6158, line: 290, type: !2089)
!6323 = !DILocation(line: 290, column: 50, scope: !6319)
!6324 = !DILocalVariable(name: "b", arg: 3, scope: !6319, file: !6158, line: 290, type: !2089)
!6325 = !DILocation(line: 290, column: 68, scope: !6319)
!6326 = !DILocation(line: 292, column: 9, scope: !6319)
!6327 = !DILocation(line: 292, column: 16, scope: !6319)
!6328 = !DILocation(line: 292, column: 14, scope: !6319)
!6329 = !DILocation(line: 292, column: 2, scope: !6319)
!6330 = !DILocation(line: 292, column: 7, scope: !6319)
!6331 = !DILocation(line: 293, column: 9, scope: !6319)
!6332 = !DILocation(line: 293, column: 16, scope: !6319)
!6333 = !DILocation(line: 293, column: 14, scope: !6319)
!6334 = !DILocation(line: 293, column: 2, scope: !6319)
!6335 = !DILocation(line: 293, column: 7, scope: !6319)
!6336 = !DILocation(line: 294, column: 1, scope: !6319)
!6337 = distinct !DISubprogram(name: "zero_v2", scope: !6158, file: !6158, line: 37, type: !6338, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{null, !2083}
!6340 = !DILocalVariable(name: "r", arg: 1, scope: !6337, file: !6158, line: 37, type: !2083)
!6341 = !DILocation(line: 37, column: 28, scope: !6337)
!6342 = !DILocation(line: 39, column: 2, scope: !6337)
!6343 = !DILocation(line: 39, column: 7, scope: !6337)
!6344 = !DILocation(line: 40, column: 2, scope: !6337)
!6345 = !DILocation(line: 40, column: 7, scope: !6337)
!6346 = !DILocation(line: 41, column: 1, scope: !6337)
!6347 = distinct !DISubprogram(name: "max_ii", scope: !6348, file: !6348, line: 215, type: !6349, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2386)
!6348 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6349 = !DISubroutineType(types: !6350)
!6350 = !{!48, !48, !48}
!6351 = !DILocalVariable(name: "a", arg: 1, scope: !6347, file: !6348, line: 215, type: !48)
!6352 = !DILocation(line: 215, column: 24, scope: !6347)
!6353 = !DILocalVariable(name: "b", arg: 2, scope: !6347, file: !6348, line: 215, type: !48)
!6354 = !DILocation(line: 215, column: 31, scope: !6347)
!6355 = !DILocation(line: 217, column: 10, scope: !6347)
!6356 = !DILocation(line: 217, column: 14, scope: !6347)
!6357 = !DILocation(line: 217, column: 12, scope: !6347)
!6358 = !DILocation(line: 217, column: 9, scope: !6347)
!6359 = !DILocation(line: 217, column: 19, scope: !6347)
!6360 = !DILocation(line: 217, column: 23, scope: !6347)
!6361 = !DILocation(line: 217, column: 2, scope: !6347)
